{"nodes":[{"pos":[20316,20508],"content":"UIElement3D is a base class for WPF core level implementations building on <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> elements and basic presentation characteristics.","needQuote":true,"needEscape":true,"source":"UIElement3D is a base class for WPF core level implementations building on [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] elements and basic presentation characteristics."},{"pos":[20521,22834],"content":"UIElement3D is an abstract base class from which you can derive classes to represent specific 3D elements.       Much of the input, focusing, and eventing behavior for 3D elements in general is defined in the UIElement3D class. This includes the events for keyboard, mouse, and stylus input, and related status properties. Many of these events are routed events, and many of the input-related events have both a bubbling routing version as well as a tunneling version of the event. These paired events are typically the events of greatest interest to control authors.       UIElement3D also includes [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] that relate to the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] event model, including methods that can raise specified routed events that are sourced from an element instance.       A UIElement3D has the following capabilities that are specifically defined by the UIElement3D class:      -   Can respond to user input (including control of where input is sent via handling of event routing or routing of commands).      -   Can raise routed events that travel a route through the logical element tree.      > [!IMPORTANT] >  <xref:System.Windows.UIElement3D.Visibility%2A> state affects all input handling by that element. Elements that are not visible do not participate in hit testing and do not receive input events, even if the mouse is over the bounds of where the element would be if were visible.       Unlike the <xref:System.Windows.UIElement> class, the UIElement3D class does not include layout. Therefore, the UIElement3D class does not include **Measure** or **Arrange** methods.       A class that derives from UIElement3D and maintains its own collection of <xref:System.Windows.Media.Media3D.Visual3D> objects by overriding <xref:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild%2A> and <xref:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount%2A> must still pass new <xref:System.Windows.Media.Media3D.Visual3D> objects to <xref:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild%2A>.       UIElement3D is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"UIElement3D is an abstract base class from which you can derive classes to represent specific 3D elements.","pos":[0,106]},{"content":"Much of the input, focusing, and eventing behavior for 3D elements in general is defined in the UIElement3D class.","pos":[113,227]},{"content":"This includes the events for keyboard, mouse, and stylus input, and related status properties.","pos":[228,322]},{"content":"Many of these events are routed events, and many of the input-related events have both a bubbling routing version as well as a tunneling version of the event.","pos":[323,481]},{"content":"These paired events are typically the events of greatest interest to control authors.","pos":[482,567]},{"content":"UIElement3D also includes <ph id=\"ph1\">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> that relate to the <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> event model, including methods that can raise specified routed events that are sourced from an element instance.","pos":[574,887],"source":"       UIElement3D also includes [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] that relate to the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] event model, including methods that can raise specified routed events that are sourced from an element instance."},{"content":"A UIElement3D has the following capabilities that are specifically defined by the UIElement3D class:      -   Can respond to user input (including control of where input is sent via handling of event routing or routing of commands).","pos":[894,1126]},{"content":"-   Can raise routed events that travel a route through the logical element tree.","pos":[1132,1213]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  &lt;xref:System.Windows.UIElement3D.Visibility%2A&gt; state affects all input handling by that element.","pos":[1219,1334],"source":"      > [!IMPORTANT] >  <xref:System.Windows.UIElement3D.Visibility%2A> state affects all input handling by that element."},{"content":"Elements that are not visible do not participate in hit testing and do not receive input events, even if the mouse is over the bounds of where the element would be if were visible.","pos":[1335,1515]},{"content":"Unlike the &lt;xref:System.Windows.UIElement&gt; class, the UIElement3D class does not include layout.","pos":[1522,1618],"source":"       Unlike the <xref:System.Windows.UIElement> class, the UIElement3D class does not include layout."},{"content":"Therefore, the UIElement3D class does not include <bpt id=\"p1\">**</bpt>Measure<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>Arrange<ept id=\"p2\">**</ept> methods.","pos":[1619,1704],"source":" Therefore, the UIElement3D class does not include **Measure** or **Arrange** methods."},{"content":"A class that derives from UIElement3D and maintains its own collection of &lt;xref:System.Windows.Media.Media3D.Visual3D&gt; objects by overriding &lt;xref:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild%2A&gt; and &lt;xref:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount%2A&gt; must still pass new &lt;xref:System.Windows.Media.Media3D.Visual3D&gt; objects to &lt;xref:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild%2A&gt;.","pos":[1711,2132],"source":"       A class that derives from UIElement3D and maintains its own collection of <xref:System.Windows.Media.Media3D.Visual3D> objects by overriding <xref:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild%2A> and <xref:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount%2A> must still pass new <xref:System.Windows.Media.Media3D.Visual3D> objects to <xref:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild%2A>."},{"content":"UIElement3D is introduced in the .NET Framework version 3.5.","pos":[2139,2199]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2201,2294],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[27401,27489],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.UIElement3D\"></xref> class."},{"pos":[27501,27656],"content":"UIElement3D is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"UIElement3D is introduced in the .NET Framework version 3.5.","pos":[0,60]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[62,155],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[28281,28407],"content":"Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.","pos":[0,126]}]},{"pos":[28420,29090],"content":"You can add the same handler for the same event multiple times without raising an exception. However, the handler is actually invoked multiple times when the event is handled. Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.       You typically use this method to provide the implementation of the \"add\" accessor for the [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.       AddHandler is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"You can add the same handler for the same event multiple times without raising an exception.","pos":[0,92]},{"content":"However, the handler is actually invoked multiple times when the event is handled.","pos":[93,175]},{"content":"Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.","pos":[176,298]},{"content":"You typically use this method to provide the implementation of the \"add\" accessor for the <ph id=\"ph1\">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> event access pattern of a custom routed event.","pos":[305,503],"source":"       You typically use this method to provide the implementation of the \"add\" accessor for the [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event."},{"content":"AddHandler is introduced in the .NET Framework version 3.5.","pos":[510,569]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[571,664],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[29294,29343],"content":"An identifier for the routed event to be handled.","needQuote":true,"needEscape":true,"nodes":[{"content":"An identifier for the routed event to be handled.","pos":[0,49]}]},{"pos":[29409,29451],"content":"A reference to the handler implementation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reference to the handler implementation.","pos":[0,42]}]},{"pos":[30067,30434],"content":"Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element. Specify <code>handledEventsToo</code> as <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.","pos":[0,126]},{"content":"Specify <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">handledEventsToo</ph><ept id=\"p1\">&lt;/code&gt;</ept> as <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.","pos":[127,367],"source":" Specify <code>handledEventsToo</code> as <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route."}]},{"pos":[30447,32511],"content":"Processing low-level input events in a practical way is a complex task. Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event. Generally, a control will only mark a platform input event as handled if there is some design intention for doing so. In certain scenarios, those design intentions might not be what your particular handling of the input event requires. It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate. But you should not do this routinely. Invoking handlers in response to all events even if handled will complicate your own application event processing logic. You may see a decrease in performance if the handler logic is substantial. You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.       Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative. For example, if <xref:System.Windows.UIElement3D.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> instead.       You can add the same handler for the same event multiple times without raising an exception. However, the handler is actually invoked multiple times when the event is handled. Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.       You typically use this method to provide the implementation of the \"add\" accessor for the [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.       AddHandler is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Processing low-level input events in a practical way is a complex task.","pos":[0,71]},{"content":"Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.","pos":[72,197]},{"content":"Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.","pos":[198,315]},{"content":"In certain scenarios, those design intentions might not be what your particular handling of the input event requires.","pos":[316,433]},{"content":"It is for these scenarios that registering handlers with <ph id=\"ph1\">`handledEventsToo`</ph> as <ph id=\"ph2\">`true`</ph> is appropriate.","pos":[434,535],"source":" It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate."},{"content":"But you should not do this routinely.","pos":[536,573]},{"content":"Invoking handlers in response to all events even if handled will complicate your own application event processing logic.","pos":[574,694]},{"content":"You may see a decrease in performance if the handler logic is substantial.","pos":[695,769]},{"content":"You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.","pos":[770,1021]},{"content":"Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.","pos":[1028,1168]},{"content":"For example, if &lt;xref:System.Windows.UIElement3D.MouseLeftButtonDown&gt; is marked handled by class handling, you might be able to add handlers for &lt;xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown&gt; instead.","pos":[1169,1383],"source":" For example, if <xref:System.Windows.UIElement3D.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> instead."},{"content":"You can add the same handler for the same event multiple times without raising an exception.","pos":[1390,1482]},{"content":"However, the handler is actually invoked multiple times when the event is handled.","pos":[1483,1565]},{"content":"Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.","pos":[1566,1688]},{"content":"You typically use this method to provide the implementation of the \"add\" accessor for the <ph id=\"ph1\">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> event access pattern of a custom routed event.","pos":[1695,1893],"source":"       You typically use this method to provide the implementation of the \"add\" accessor for the [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event."},{"content":"AddHandler is introduced in the .NET Framework version 3.5.","pos":[1900,1959]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1961,2054],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[32738,32787],"content":"An identifier for the routed event to be handled.","needQuote":true,"needEscape":true,"nodes":[{"content":"An identifier for the routed event to be handled.","pos":[0,49]}]},{"pos":[32853,32895],"content":"A reference to the handler implementation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reference to the handler implementation.","pos":[0,42]}]},{"pos":[32970,33528],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to register the handler such that it is invoked even when the routed event is marked handled in its event data; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.       The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.       Do not routinely ask to rehandle a routed event. For more information, see Remarks.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to register the handler such that it is invoked even when the routed event is marked handled in its event data; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.","pos":[0,361],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to register the handler such that it is invoked even when the routed event is marked handled in its event data; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[368,446],"source":"       The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"Do not routinely ask to rehandle a routed event.","pos":[453,501]},{"content":"For more information, see Remarks.","pos":[502,536]}]},{"pos":[34162,34329],"content":"Adds handlers to the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.EventRoute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.UIElement3D\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event handler collection.","needQuote":true,"needEscape":true,"source":"Adds handlers to the specified <xref href=\"System.Windows.EventRoute\"></xref> for the current <xref href=\"System.Windows.UIElement3D\"></xref> event handler collection."},{"pos":[34342,34719],"content":"This method can be used by content host elements (either those that implement <xref:System.Windows.IContentHost> or those that don't) to add handlers for child elements to the <xref:System.Windows.EventRoute>.       AddToEventRoute is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This method can be used by content host elements (either those that implement &lt;xref:System.Windows.IContentHost&gt; or those that don't) to add handlers for child elements to the &lt;xref:System.Windows.EventRoute&gt;.","pos":[0,209],"source":"This method can be used by content host elements (either those that implement <xref:System.Windows.IContentHost> or those that don't) to add handlers for child elements to the <xref:System.Windows.EventRoute>."},{"content":"AddToEventRoute is introduced in the .NET Framework version 3.5.","pos":[216,280]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[282,375],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[34930,34973],"content":"The event route that handlers are added to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event route that handlers are added to.","pos":[0,43]}]},{"pos":[35048,35219],"content":"The event data that is used to add the handlers. This method uses the <xref:System.Windows.RoutedEventArgs.RoutedEvent*> property of the event data to create the handlers.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data that is used to add the handlers. This method uses the <xref:System.Windows.RoutedEventArgs.RoutedEvent*> property of the event data to create the handlers.","pos":[0,171],"nodes":[{"content":"The event data that is used to add the handlers.","pos":[0,48]},{"content":"This method uses the &lt;xref:System.Windows.RoutedEventArgs.RoutedEvent*&gt; property of the event data to create the handlers.","pos":[49,171],"source":" This method uses the <xref:System.Windows.RoutedEventArgs.RoutedEvent*> property of the event data to create the handlers."}]}]},{"pos":[35629,35737],"content":"Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.","pos":[0,108]}]},{"pos":[35750,36649],"content":"Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting AllowDrop to `true`. Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.UIElement3D> or any other base element class. Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior. For more information on drag and drop, see [Drag and Drop Overview](~/add/includes/ajax-current-ext-md.md).       AllowDrop is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_AllowDrop\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.AllowDropProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting AllowDrop to <ph id=\"ph1\">`true`</ph>.","pos":[0,117],"source":"Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting AllowDrop to `true`."},{"content":"Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by &lt;xref:System.Windows.UIElement3D&gt; or any other base element class.","pos":[118,292],"source":" Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.UIElement3D> or any other base element class."},{"content":"Certain controls, for example, &lt;xref:System.Windows.Controls.RichTextBox&gt;, do have a default behavior.","pos":[293,395],"source":" Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior."},{"content":"For more information on drag and drop, see <bpt id=\"p1\">[</bpt>Drag and Drop Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[396,503],"source":" For more information on drag and drop, see [Drag and Drop Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"AllowDrop is introduced in the .NET Framework version 3.5.","pos":[510,568]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[570,663],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_AllowDrop\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.AllowDropProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[669,887],"source":"<a name=\"dependencyPropertyInfo_AllowDrop\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.AllowDropProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[36768,37060],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this element can be used as the target of a drag-and-drop operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this element can be used as the target of a drag-and-drop operation; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,207],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this element can be used as the target of a drag-and-drop operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[208,292],"source":" The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[37501,37581],"content":"Identifies the <xref:System.Windows.UIElement3D.AllowDrop*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.AllowDrop*&gt; dependency property.","pos":[0,80],"source":"Identifies the <xref:System.Windows.UIElement3D.AllowDrop*> dependency property."}]},{"pos":[37593,37754],"content":"AllowDropProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"AllowDropProperty is introduced in the .NET Framework version 3.5.","pos":[0,66]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[68,161],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[37931,37943],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38357,38440],"content":"Gets a value that indicates whether at least one touch is captured to this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether at least one touch is captured to this element.","pos":[0,83]}]},{"pos":[38565,38751],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if at least one touch is captured to this element; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if at least one touch is captured to this element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[39264,39356],"content":"Identifies the <xref:System.Windows.UIElement3D.AreAnyTouchesCaptured*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.AreAnyTouchesCaptured*&gt; dependency property.","pos":[0,92],"source":"Identifies the <xref:System.Windows.UIElement3D.AreAnyTouchesCaptured*> dependency property."}]},{"pos":[39545,39557],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40001,40128],"content":"Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.","pos":[0,127]}]},{"pos":[40259,40486],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[41035,41133],"content":"Identifies the <xref:System.Windows.UIElement3D.AreAnyTouchesCapturedWithin*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.AreAnyTouchesCapturedWithin*&gt; dependency property.","pos":[0,98],"source":"Identifies the <xref:System.Windows.UIElement3D.AreAnyTouchesCapturedWithin*> dependency property."}]},{"pos":[41328,41340],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41774,41858],"content":"Gets a value that indicates whether at least one touch is pressed over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether at least one touch is pressed over this element.","pos":[0,84]}]},{"pos":[41987,42174],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if at least one touch is pressed over this element; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if at least one touch is pressed over this element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[42711,42807],"content":"Identifies the <xref:System.Windows.UIElement3D.AreAnyTouchesDirectlyOver*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.AreAnyTouchesDirectlyOver*&gt; dependency property.","pos":[0,96],"source":"Identifies the <xref:System.Windows.UIElement3D.AreAnyTouchesDirectlyOver*> dependency property."}]},{"pos":[43000,43012],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43406,43531],"content":"Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.","pos":[0,125]}]},{"pos":[43652,43880],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[44369,44457],"content":"Identifies the <xref:System.Windows.UIElement3D.AreAnyTouchesOver*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.AreAnyTouchesOver*&gt; dependency property.","pos":[0,88],"source":"Identifies the <xref:System.Windows.UIElement3D.AreAnyTouchesOver*> dependency property."}]},{"pos":[44642,44654],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45027,45082],"content":"Attempts to force capture of the mouse to this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to force capture of the mouse to this element.","pos":[0,55]}]},{"pos":[45095,46183],"content":"To be captured, an element must be enabled. Check whether <xref:System.Windows.UIElement3D.IsEnabled%2A> is `true` before you call CaptureMouse.       If calling CaptureMouse returns `true`, then <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> is also `true`.       If calling CaptureMouse returns `true`, then the <xref:System.Windows.UIElement3D.GotMouseCapture> and <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName> in the event data reported as the element where the CaptureMouse method is called. If you force capture, you might interfere with existing captures—especially with captures that relate to drag-and-drop with the mouse.       To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName> with the `element` parameter provided as `null`.       CaptureMouse is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"To be captured, an element must be enabled.","pos":[0,43]},{"content":"Check whether &lt;xref:System.Windows.UIElement3D.IsEnabled%2A&gt; is <ph id=\"ph1\">`true`</ph> before you call CaptureMouse.","pos":[44,144],"source":" Check whether <xref:System.Windows.UIElement3D.IsEnabled%2A> is `true` before you call CaptureMouse."},{"content":"If calling CaptureMouse returns <ph id=\"ph1\">`true`</ph>, then &lt;xref:System.Windows.UIElement3D.IsMouseCaptured%2A&gt; is also <ph id=\"ph2\">`true`</ph>.","pos":[151,264],"source":"       If calling CaptureMouse returns `true`, then <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> is also `true`."},{"content":"If calling CaptureMouse returns <ph id=\"ph1\">`true`</ph>, then the &lt;xref:System.Windows.UIElement3D.GotMouseCapture&gt; and &lt;xref:System.Windows.UIElement3D.IsMouseCapturedChanged&gt; events are raised, with &lt;xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName&gt; in the event data reported as the element where the CaptureMouse method is called.","pos":[271,610],"source":"       If calling CaptureMouse returns `true`, then the <xref:System.Windows.UIElement3D.GotMouseCapture> and <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName> in the event data reported as the element where the CaptureMouse method is called."},{"content":"If you force capture, you might interfere with existing captures—especially with captures that relate to drag-and-drop with the mouse.","pos":[611,745]},{"content":"To clear mouse capture from all elements, call &lt;xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName&gt; with the <ph id=\"ph1\">`element`</ph> parameter provided as <ph id=\"ph2\">`null`</ph>.","pos":[752,917],"source":"       To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName> with the `element` parameter provided as `null`."},{"content":"CaptureMouse is introduced in the .NET Framework version 3.5.","pos":[924,985]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[987,1080],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[46314,46488],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the mouse is successfully captured; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the mouse is successfully captured; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[46919,46975],"content":"Attempts to force capture of the stylus to this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to force capture of the stylus to this element.","pos":[0,56]}]},{"pos":[46988,48172],"content":"The default implementation based on the underlying default stylus device always returns `true`. However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.       When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds. The stylus is typically captured only during drag-and-drop operations.       Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>. The actual capture behavior is implemented by the active stylus device implementation.       To be captured, an element must be enabled. Check whether <xref:System.Windows.UIElement3D.IsEnabled%2A> is `true` return before you call CaptureStylus.       If calling CaptureStylus returns `true`, <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> is also `true`.       CaptureStylus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The default implementation based on the underlying default stylus device always returns <ph id=\"ph1\">`true`</ph>.","pos":[0,95],"source":"The default implementation based on the underlying default stylus device always returns `true`."},{"content":"However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.","pos":[96,324]},{"content":"When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.","pos":[331,434]},{"content":"The stylus is typically captured only during drag-and-drop operations.","pos":[435,505]},{"content":"Calling this method calls an underlying static &lt;xref:System.Windows.Input.Stylus&gt; method &lt;xref:System.Windows.Input.Stylus.Capture%2A&gt;.","pos":[512,647],"source":"       Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>."},{"content":"The actual capture behavior is implemented by the active stylus device implementation.","pos":[648,734]},{"content":"To be captured, an element must be enabled.","pos":[741,784]},{"content":"Check whether &lt;xref:System.Windows.UIElement3D.IsEnabled%2A&gt; is <ph id=\"ph1\">`true`</ph> return before you call CaptureStylus.","pos":[785,893],"source":" Check whether <xref:System.Windows.UIElement3D.IsEnabled%2A> is `true` return before you call CaptureStylus."},{"content":"If calling CaptureStylus returns <ph id=\"ph1\">`true`</ph>, &lt;xref:System.Windows.UIElement3D.IsStylusCaptured%2A&gt; is also <ph id=\"ph2\">`true`</ph>.","pos":[900,1010],"source":"       If calling CaptureStylus returns `true`, <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> is also `true`."},{"content":"CaptureStylus is introduced in the .NET Framework version 3.5.","pos":[1017,1079]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1081,1174],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[48304,48480],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the stylus was successfully captured; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the stylus was successfully captured; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[49008,49061],"content":"Attempts to force capture of a touch to this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to force capture of a touch to this element.","pos":[0,53]}]},{"pos":[49074,49607],"content":"CaptureTouch will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.       If CaptureTouch returns `true`, then the <xref:System.Windows.UIElement3D.GotTouchCapture> event is raised.       To release capture of a single touch from this element, use the <xref:System.Windows.UIElement3D.ReleaseTouchCapture%2A> method and specify the touch device to release. To release all touches from this element, use the <xref:System.Windows.UIElement3D.ReleaseAllTouchCaptures%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"CaptureTouch will return <ph id=\"ph1\">`false`</ph> if the &lt;xref:System.Windows.Input.TouchDevice&gt; is currently captured to another element.","pos":[0,121],"source":"CaptureTouch will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element."},{"content":"If CaptureTouch returns <ph id=\"ph1\">`true`</ph>, then the &lt;xref:System.Windows.UIElement3D.GotTouchCapture&gt; event is raised.","pos":[128,235],"source":"       If CaptureTouch returns `true`, then the <xref:System.Windows.UIElement3D.GotTouchCapture> event is raised."},{"content":"To release capture of a single touch from this element, use the &lt;xref:System.Windows.UIElement3D.ReleaseTouchCapture%2A&gt; method and specify the touch device to release.","pos":[242,410],"source":"       To release capture of a single touch from this element, use the <xref:System.Windows.UIElement3D.ReleaseTouchCapture%2A> method and specify the touch device to release."},{"content":"To release all touches from this element, use the &lt;xref:System.Windows.UIElement3D.ReleaseAllTouchCaptures%2A&gt; method.","pos":[411,529],"source":" To release all touches from this element, use the <xref:System.Windows.UIElement3D.ReleaseAllTouchCaptures%2A> method."}]},{"pos":[49807,49829],"content":"The device to capture.","needQuote":true,"needEscape":true,"nodes":[{"content":"The device to capture.","pos":[0,22]}]},{"pos":[49888,50075],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified touch is captured to this element; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified touch is captured to this element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[50245,50334],"content":"<ph id=\"ph1\">&lt;code&gt;touchDevice&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>touchDevice</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[50701,50816],"content":"Gets a collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.CommandBinding\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects associated with this element.","needQuote":true,"needEscape":true,"source":"Gets a collection of <xref href=\"System.Windows.Input.CommandBinding\"></xref> objects associated with this element."},{"pos":[50829,52104],"content":"A <xref:System.Windows.Input.CommandBinding> enables command handling of a specific command for this element, and declares the linkage between a command, its events, and the handlers attached by this element.       Another typical way to populate the CommandBindings collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.       CommandBindings is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"xamlPropertyElementUsage_CommandBindings\"></a>    ## XAML Property Element Usage      ```   <object>     <object.CommandBindings>       oneOrMoreCommandBindings  </object.CommandBindings>   </object>   ```      <a name=\"xamlValues_CommandBindings\"></a>    ## XAML Values    *oneOrMoreCommandBindings*    One or more <xref:System.Windows.Input.CommandBinding> elements. Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations. For more information see <xref:System.Windows.Input.CommandBinding>.","needQuote":false,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Windows.Input.CommandBinding&gt; enables command handling of a specific command for this element, and declares the linkage between a command, its events, and the handlers attached by this element.","pos":[0,208],"source":"A <xref:System.Windows.Input.CommandBinding> enables command handling of a specific command for this element, and declares the linkage between a command, its events, and the handlers attached by this element."},{"content":"Another typical way to populate the CommandBindings collection is to use &lt;xref:System.Windows.Input.CommandManager&gt; methods programmatically.","pos":[215,356],"source":"       Another typical way to populate the CommandBindings collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically."},{"content":"CommandBindings is introduced in the .NET Framework version 3.5.","pos":[363,427]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[429,522],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlPropertyElementUsage_CommandBindings\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id=\"ph1\">```   &lt;object&gt;     &lt;object.CommandBindings&gt;       oneOrMoreCommandBindings  &lt;/object.CommandBindings&gt;   &lt;/object&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_CommandBindings\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>oneOrMoreCommandBindings<ept id=\"p3\">*</ept>    One or more &lt;xref:System.Windows.Input.CommandBinding&gt; elements.","pos":[528,905],"source":"<a name=\"xamlPropertyElementUsage_CommandBindings\"></a>    ## XAML Property Element Usage      ```   <object>     <object.CommandBindings>       oneOrMoreCommandBindings  </object.CommandBindings>   </object>   ```      <a name=\"xamlValues_CommandBindings\"></a>    ## XAML Values    *oneOrMoreCommandBindings*    One or more <xref:System.Windows.Input.CommandBinding> elements."},{"content":"Each of these should have a &lt;xref:System.Windows.Input.CommandBinding.Command%2A&gt; attribute set to a known command, and attributes set for the &lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt; and &lt;xref:System.Windows.Input.CommandBinding.Executed&gt; handler implementations.","pos":[906,1183],"source":" Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations."},{"content":"For more information see &lt;xref:System.Windows.Input.CommandBinding&gt;.","pos":[1184,1252],"source":" For more information see <xref:System.Windows.Input.CommandBinding>."}]},{"pos":[52296,52383],"content":"The collection of all <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.CommandBinding\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"The collection of all <xref href=\"System.Windows.Input.CommandBinding\"></xref> objects."},{"pos":[52790,52889],"content":"Occurs when the input system reports an underlying drag event with this element as the drag target.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the input system reports an underlying drag event with this element as the drag target.","pos":[0,99]}]},{"pos":[52902,54018],"content":"This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName> attached event for this class, so that DragEnter is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the DragEnter event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName> attached event and receive the same event data instance.       DragEnter is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_DragEnter\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.DragEnterEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.DragEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDragEnter>.      -   Override <xref:System.Windows.UIElement3D.OnDragEnter%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt; attached event for this class, so that DragEnter is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,255],"source":"This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName> attached event for this class, so that DragEnter is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the DragEnter event are attached to the underlying &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[256,465],"source":" Event handlers that are attached to the DragEnter event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"DragEnter is introduced in the .NET Framework version 3.5.","pos":[472,530]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[532,625],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_DragEnter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.DragEnterEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewDragEnter&gt;.","pos":[631,969],"source":"<a name=\"routedEventInfo_DragEnter\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.DragEnterEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.DragEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDragEnter>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnDragEnter%2A&gt; to implement class handling for this event in derived classes.","pos":[975,1099],"source":"      -   Override <xref:System.Windows.UIElement3D.OnDragEnter%2A> to implement class handling for this event in derived classes."}]},{"pos":[54174,54186],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[54562,54648],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.DragEnter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.DragEnter\"></xref> routed event."},{"pos":[54661,55365],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       DragEnterEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"DragEnterEvent is introduced in the .NET Framework version 3.5.","pos":[542,605]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[607,700],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[55526,55538],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[55889,55988],"content":"Occurs when the input system reports an underlying drag event with this element as the drag origin.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the input system reports an underlying drag event with this element as the drag origin.","pos":[0,99]}]},{"pos":[56001,57116],"content":"This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName> attached event for this class so that DragLeave is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the DragLeave event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName> attached event and receive the same event data instance.       DragLeave is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_DragLeave\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.DragLeaveEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.DragEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDragLeave>.      -   Override <xref:System.Windows.UIElement3D.OnDragLeave%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt; attached event for this class so that DragLeave is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,254],"source":"This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName> attached event for this class so that DragLeave is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the DragLeave event are attached to the underlying &lt;xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[255,464],"source":" Event handlers that are attached to the DragLeave event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"DragLeave is introduced in the .NET Framework version 3.5.","pos":[471,529]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[531,624],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_DragLeave\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.DragLeaveEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewDragLeave&gt;.","pos":[630,968],"source":"<a name=\"routedEventInfo_DragLeave\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.DragLeaveEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.DragEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDragLeave>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnDragLeave%2A&gt; to implement class handling for this event in derived classes.","pos":[974,1098],"source":"      -   Override <xref:System.Windows.UIElement3D.OnDragLeave%2A> to implement class handling for this event in derived classes."}]},{"pos":[57272,57284],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[57660,57746],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.DragLeave\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.DragLeave\"></xref> routed event."},{"pos":[57759,58463],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       DragLeaveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"DragLeaveEvent is introduced in the .NET Framework version 3.5.","pos":[542,605]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[607,700],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[58624,58636],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[58982,59091],"content":"Occurs when the input system reports an underlying drag event with this element as the potential drop target.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the input system reports an underlying drag event with this element as the potential drop target.","pos":[0,109]}]},{"pos":[59104,60458],"content":"This event occurs even if the drag originates in the element bounds. If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.UIElement3D.DragEnter> and related preview events.       This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=fullName> attached event for this class so that DragOver is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the DragOver event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=fullName> attached event and receive the same event data instance.       DragOver is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_DragOver\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.DragOverEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.DragEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDragOver>.      -   Override <xref:System.Windows.UIElement3D.OnDragOver%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event occurs even if the drag originates in the element bounds.","pos":[0,68]},{"content":"If the drag starts outside the bounds and then moves inside, this event is also raised, as well as &lt;xref:System.Windows.UIElement3D.DragEnter&gt; and related preview events.","pos":[69,239],"source":" If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.UIElement3D.DragEnter> and related preview events."},{"content":"This event creates an alias for the &lt;xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt; attached event for this class so that DragOver is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[246,498],"source":"       This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=fullName> attached event for this class so that DragOver is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the DragOver event are attached to the underlying &lt;xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[499,706],"source":" Event handlers that are attached to the DragOver event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"DragOver is introduced in the .NET Framework version 3.5.","pos":[713,770]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[772,865],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_DragOver\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.DragOverEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewDragOver&gt;.","pos":[871,1206],"source":"<a name=\"routedEventInfo_DragOver\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.DragOverEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.DragEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDragOver>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnDragOver%2A&gt; to implement class handling for this event in derived classes.","pos":[1212,1335],"source":"      -   Override <xref:System.Windows.UIElement3D.OnDragOver%2A> to implement class handling for this event in derived classes."}]},{"pos":[60613,60625],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[60996,61081],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.DragOver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.DragOver\"></xref> routed event."},{"pos":[61094,61797],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       DragOverEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"DragOverEvent is introduced in the .NET Framework version 3.5.","pos":[542,604]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[606,699],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[61957,61969],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[62295,62394],"content":"Occurs when the input system reports an underlying drop event with this element as the drop target.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the input system reports an underlying drop event with this element as the drop target.","pos":[0,99]}]},{"pos":[62407,63477],"content":"This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=fullName> attached event for this class so that Drop is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the Drop event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=fullName> attached event and receive the same event data instance.       Drop is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_Drop\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.DropEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.DragEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDrop>.      -   Override <xref:System.Windows.UIElement3D.OnDrop%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt; attached event for this class so that Drop is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,244],"source":"This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=fullName> attached event for this class so that Drop is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the Drop event are attached to the underlying &lt;xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[245,444],"source":" Event handlers that are attached to the Drop event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Drop is introduced in the .NET Framework version 3.5.","pos":[451,504]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[506,599],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_Drop\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.DropEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewDrop&gt;.","pos":[605,928],"source":"<a name=\"routedEventInfo_Drop\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.DropEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.DragEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDrop>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnDrop%2A&gt; to implement class handling for this event in derived classes.","pos":[934,1053],"source":"      -   Override <xref:System.Windows.UIElement3D.OnDrop%2A> to implement class handling for this event in derived classes."}]},{"pos":[63628,63640],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[63991,64072],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.Drop\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.Drop\"></xref> routed event."},{"pos":[64085,64784],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       DropEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"DropEvent is introduced in the .NET Framework version 3.5.","pos":[542,600]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[602,695],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[64940,64952],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[65290,65340],"content":"Attempts to set the logical focus on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to set the logical focus on this element.","pos":[0,50]}]},{"pos":[65353,67136],"content":"To be focusable, <xref:System.Windows.UIElement3D.Focusable%2A> and <xref:System.Windows.UIElement3D.IsEnabled%2A> must both be `true`.       Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.       If calling  Focus returns `true`, <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> are also `true`.       If the related properties are not already `true`, when you call  Focus, one or more of the following events are raised in the following order: <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement3D.LostKeyboardFocus>, <xref:System.Windows.UIElement3D.GotKeyboardFocus> (source is the new focus target).       In order for this call to be successful, some other element in the application needed to have focus previously.       Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical. This method sets the logical focus, and also attempts to set the keyboard focus. There is no programmatic means to set keyboard focus specifically, this happens due to user input. For more information, see [Input Overview](~/add/includes/ajax-current-ext-md.md).       Focus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"To be focusable, &lt;xref:System.Windows.UIElement3D.Focusable%2A&gt; and &lt;xref:System.Windows.UIElement3D.IsEnabled%2A&gt; must both be <ph id=\"ph1\">`true`</ph>.","pos":[0,135],"source":"To be focusable, <xref:System.Windows.UIElement3D.Focusable%2A> and <xref:System.Windows.UIElement3D.IsEnabled%2A> must both be `true`."},{"content":"Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return <ph id=\"ph1\">`false`</ph>.","pos":[142,369],"source":"       Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`."},{"content":"If calling  Focus returns <ph id=\"ph1\">`true`</ph>, &lt;xref:System.Windows.UIElement3D.IsKeyboardFocused%2A&gt; and &lt;xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A&gt; are also <ph id=\"ph2\">`true`</ph>.","pos":[376,544],"source":"       If calling  Focus returns `true`, <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> are also `true`."},{"content":"If the related properties are not already <ph id=\"ph1\">`true`</ph>, when you call  Focus, one or more of the following events are raised in the following order: &lt;xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus&gt;, &lt;xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus&gt; (source is the new focus target), &lt;xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged&gt;, &lt;xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged&gt;, &lt;xref:System.Windows.UIElement3D.LostKeyboardFocus&gt;, &lt;xref:System.Windows.UIElement3D.GotKeyboardFocus&gt; (source is the new focus target).","pos":[551,1107],"source":"       If the related properties are not already `true`, when you call  Focus, one or more of the following events are raised in the following order: <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement3D.LostKeyboardFocus>, <xref:System.Windows.UIElement3D.GotKeyboardFocus> (source is the new focus target)."},{"content":"In order for this call to be successful, some other element in the application needed to have focus previously.","pos":[1114,1225]},{"content":"Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.","pos":[1232,1352]},{"content":"This method sets the logical focus, and also attempts to set the keyboard focus.","pos":[1353,1433]},{"content":"There is no programmatic means to set keyboard focus specifically, this happens due to user input.","pos":[1434,1532]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1533,1615],"source":" For more information, see [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"Focus is introduced in the .NET Framework version 3.5.","pos":[1622,1676]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1678,1771],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[67260,67475],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if both logical and keyboard focus were set to this element; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if only logical focus was set.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if both logical and keyboard focus were set to this element; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if only logical focus was set."},{"pos":[67875,67949],"content":"Gets or sets a value that indicates whether the element can receive focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the element can receive focus.","pos":[0,74]}]},{"pos":[67962,68923],"content":"Only the focused element receives keyboard input.       Focusable is the [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] property accessor for what is in reality a dependency property. This particular dependency property quite frequently has its apparent \"default\" value set differently in derived element classes. This commonly occurs in one of two ways:      -   The dependency property is inherited by a particular derived class, but that derived class overrides the metadata of the dependency property and changes the property default value.       Focusable is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_Focusable\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.FocusableProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"Only the focused element receives keyboard input.","pos":[0,49]},{"content":"Focusable is the <ph id=\"ph1\">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> property accessor for what is in reality a dependency property.","pos":[56,198],"source":"       Focusable is the [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] property accessor for what is in reality a dependency property."},{"content":"This particular dependency property quite frequently has its apparent \"default\" value set differently in derived element classes.","pos":[199,328]},{"content":"This commonly occurs in one of two ways:      -   The dependency property is inherited by a particular derived class, but that derived class overrides the metadata of the dependency property and changes the property default value.","pos":[329,559]},{"content":"Focusable is introduced in the .NET Framework version 3.5.","pos":[566,624]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[626,719],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Focusable\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.FocusableProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[725,943],"source":"<a name=\"dependencyPropertyInfo_Focusable\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.FocusableProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[69042,69301],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element is focusable; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, but see Remarks.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the element is focusable; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,163],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element is focusable; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, but see Remarks.","pos":[164,259],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, but see Remarks."}]},{"pos":[69737,69828],"content":"Occurs when the value of the <xref:System.Windows.UIElement3D.Focusable*> property changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.UIElement3D.Focusable*&gt; property changes.","pos":[0,91],"source":"Occurs when the value of the <xref:System.Windows.UIElement3D.Focusable*> property changes."}]},{"pos":[69841,70117],"content":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.       FocusableChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This member is a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.","pos":[0,107],"source":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event."},{"content":"FocusableChanged is introduced in the .NET Framework version 3.5.","pos":[114,179]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[181,274],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[70322,70334],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[70725,70805],"content":"Identifies the <xref:System.Windows.UIElement3D.Focusable*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.Focusable*&gt; dependency property.","pos":[0,80],"source":"Identifies the <xref:System.Windows.UIElement3D.Focusable*> dependency property."}]},{"pos":[70817,70978],"content":"FocusableProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"FocusableProperty is introduced in the .NET Framework version 3.5.","pos":[0,66]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[68,161],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[71155,71167],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[71555,71725],"content":"When overridden in a derived class, returns an alternative <ph id=\"ph1\">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> parent for this element if no visual parent exists.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists."},{"pos":[71738,72347],"content":"The default virtual implementation of this method returns `null`. <xref:System.Windows.FrameworkElement> provides a practical implementation.       Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.       GetUIParentCore is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The default virtual implementation of this method returns <ph id=\"ph1\">`null`</ph>.","pos":[0,65],"source":"The default virtual implementation of this method returns `null`."},{"content":"&lt;xref:System.Windows.FrameworkElement&gt; provides a practical implementation.","pos":[66,141],"source":" <xref:System.Windows.FrameworkElement> provides a practical implementation."},{"content":"Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.","pos":[148,439]},{"content":"GetUIParentCore is introduced in the .NET Framework version 3.5.","pos":[446,510]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[512,605],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[72528,72621],"content":"An object, if implementation of a derived class has an alternate parent connection to report.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object, if implementation of a derived class has an alternate parent connection to report.","pos":[0,93]}]},{"pos":[73043,73141],"content":"Occurs when the input system reports an underlying drag-and-drop event that involves this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the input system reports an underlying drag-and-drop event that involves this element.","pos":[0,98]}]},{"pos":[73154,74568],"content":"The GiveFeedback event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation. The visual feedback reinforces that a drag-and-drop operation is in process.       This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName> attached event for this class so that GiveFeedback is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the GiveFeedback event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName> attached event and receive the same event data instance.       GiveFeedback is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_GiveFeedback\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.GiveFeedbackEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.GiveFeedbackEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewGiveFeedback>.      -   Override <xref:System.Windows.UIElement3D.OnGiveFeedback%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"The GiveFeedback event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.","pos":[0,178]},{"content":"The visual feedback reinforces that a drag-and-drop operation is in process.","pos":[179,255]},{"content":"This event creates an alias for the &lt;xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt; attached event for this class so that GiveFeedback is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[262,522],"source":"       This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName> attached event for this class so that GiveFeedback is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the GiveFeedback event are attached to the underlying &lt;xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[523,738],"source":" Event handlers that are attached to the GiveFeedback event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"GiveFeedback is introduced in the .NET Framework version 3.5.","pos":[745,806]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[808,901],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_GiveFeedback\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.GiveFeedbackEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.GiveFeedbackEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewGiveFeedback&gt;.","pos":[907,1262],"source":"<a name=\"routedEventInfo_GiveFeedback\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.GiveFeedbackEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.GiveFeedbackEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewGiveFeedback>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnGiveFeedback%2A&gt; to implement class handling for this event in derived classes.","pos":[1268,1395],"source":"      -   Override <xref:System.Windows.UIElement3D.OnGiveFeedback%2A> to implement class handling for this event in derived classes."}]},{"pos":[74743,74755],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[75146,75235],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.GiveFeedback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.GiveFeedback\"></xref> routed event."},{"pos":[75248,75955],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       GiveFeedbackEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"GiveFeedbackEvent is introduced in the .NET Framework version 3.5.","pos":[542,608]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[610,703],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[76119,76131],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[76477,76521],"content":"Occurs when this element gets logical focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when this element gets logical focus.","pos":[0,44]}]},{"pos":[76534,77973],"content":"Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope. In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.UIElement3D.Focus%2A> method is called still gets logical focus.       A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement3D.IsFocused%2A> property of an element in the route is changed from `false` to `true`.       Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.       GotFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_GotFocus\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.GotFocusEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|      -   There is no corresponding tunneling event.      -   Override <xref:System.Windows.UIElement3D.OnGotFocus%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.","pos":[0,157]},{"content":"In this scenario, keyboard focus remains where it is and the element where a &lt;xref:System.Windows.UIElement3D.Focus%2A&gt; method is called still gets logical focus.","pos":[158,320],"source":" In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.UIElement3D.Focus%2A> method is called still gets logical focus."},{"content":"A more precise interpretation of this event is that it is raised when the value of the &lt;xref:System.Windows.UIElement3D.IsFocused%2A&gt; property of an element in the route is changed from <ph id=\"ph1\">`false`</ph> to <ph id=\"ph2\">`true`</ph>.","pos":[327,531],"source":"       A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement3D.IsFocused%2A> property of an element in the route is changed from `false` to `true`."},{"content":"Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.","pos":[538,705]},{"content":"Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that gained focus.","pos":[706,832],"source":" Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus."},{"content":"GotFocus is introduced in the .NET Framework version 3.5.","pos":[839,896]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[898,991],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_GotFocus\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.GotFocusEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|      -   There is no corresponding tunneling event.","pos":[997,1289],"source":"<a name=\"routedEventInfo_GotFocus\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.GotFocusEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|      -   There is no corresponding tunneling event."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnGotFocus%2A&gt; to implement class handling for this event in derived classes.","pos":[1295,1418],"source":"      -   Override <xref:System.Windows.UIElement3D.OnGotFocus%2A> to implement class handling for this event in derived classes."}]},{"pos":[78132,78144],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[78515,78600],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.GotFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.GotFocus\"></xref> routed event."},{"pos":[78613,79316],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       GotFocusEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"GotFocusEvent is introduced in the .NET Framework version 3.5.","pos":[542,604]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[606,699],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[79476,79488],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[79874,79926],"content":"Occurs when the keyboard is focused on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the keyboard is focused on this element.","pos":[0,52]}]},{"pos":[79939,81692],"content":"<xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the GotKeyboardFocus event is raised in many of the same circumstances.       Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.       This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName> attached event for this class so that GotKeyboardFocus is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the GotKeyboardFocus event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName> attached event and receive the same event data instance.       GotKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_GotKeyboardFocus\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.GotKeyboardFocusEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus>.      -   Override <xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged&gt; is a similar event that tracks status changes in a property that maintains the focus state for an element; the GotKeyboardFocus event is raised in many of the same circumstances.","pos":[0,237],"source":"<xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the GotKeyboardFocus event is raised in many of the same circumstances."},{"content":"Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.","pos":[244,406]},{"content":"Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that has focus.","pos":[407,530],"source":" Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus."},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt; attached event for this class so that GotKeyboardFocus is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[537,811],"source":"       This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName> attached event for this class so that GotKeyboardFocus is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the GotKeyboardFocus event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[812,1041],"source":" Event handlers that are attached to the GotKeyboardFocus event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"GotKeyboardFocus is introduced in the .NET Framework version 3.5.","pos":[1048,1113]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1115,1208],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_GotKeyboardFocus\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.GotKeyboardFocusEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus&gt;.","pos":[1214,1595],"source":"<a name=\"routedEventInfo_GotKeyboardFocus\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.GotKeyboardFocusEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A&gt; to implement class handling for this event in derived classes.","pos":[1601,1732],"source":"      -   Override <xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes."}]},{"pos":[81899,81911],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[82322,82415],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.GotKeyboardFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.GotKeyboardFocus\"></xref> routed event."},{"pos":[82428,83139],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       GotKeyboardFocusEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"GotKeyboardFocusEvent is introduced in the .NET Framework version 3.5.","pos":[542,612]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[614,707],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[83307,83319],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[83700,83744],"content":"Occurs when this element captures the mouse.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when this element captures the mouse.","pos":[0,44]}]},{"pos":[83757,85469],"content":"When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds. The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.       Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.       This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName> attached event for  this class so that GotMouseCapture is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the GotMouseCapture event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName> attached event and receive the same event data instance.       GotMouseCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_GotMouseCapture\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.GotMouseCaptureEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.MouseEventHandler>|      -   There is no defined corresponding tunneling event.      -   Override <xref:System.Windows.UIElement3D.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.","pos":[0,108]},{"content":"The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.","pos":[109,259]},{"content":"Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.","pos":[266,430]},{"content":"Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that has mouse capture.","pos":[431,562],"source":" Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture."},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt; attached event for  this class so that GotMouseCapture is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[569,839],"source":"       This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName> attached event for  this class so that GotMouseCapture is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the GotMouseCapture event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[840,1064],"source":" Event handlers that are attached to the GotMouseCapture event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"GotMouseCapture is introduced in the .NET Framework version 3.5.","pos":[1071,1135]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1137,1230],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_GotMouseCapture\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.GotMouseCaptureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -   There is no defined corresponding tunneling event.","pos":[1236,1555],"source":"<a name=\"routedEventInfo_GotMouseCapture\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.GotMouseCaptureEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.MouseEventHandler>|      -   There is no defined corresponding tunneling event."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnGotMouseCapture%2A&gt; to implement class handling for this event in derived classes.","pos":[1561,1691],"source":"      -   Override <xref:System.Windows.UIElement3D.OnGotMouseCapture%2A> to implement class handling for this event in derived classes."}]},{"pos":[85645,85657],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[86063,86155],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.GotMouseCapture\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.GotMouseCapture\"></xref> routed event."},{"pos":[86168,86878],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       GotMouseCaptureEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"GotMouseCaptureEvent is introduced in the .NET Framework version 3.5.","pos":[542,611]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[613,706],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[87045,87057],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[87443,87488],"content":"Occurs when this element captures the stylus.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when this element captures the stylus.","pos":[0,45]}]},{"pos":[87501,89136],"content":"When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds. The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.       Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.       This event creates an alias for the attached event for this class so that GotStylusCapture is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the GotStylusCapture event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName> attached event and receive the same event data instance.       GotStylusCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_GotStylusCapture\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.GotStylusCaptureEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   There is no defined corresponding tunneling event.      -   Override <xref:System.Windows.UIElement3D.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.","pos":[0,104]},{"content":"The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.","pos":[105,255]},{"content":"Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.","pos":[262,426]},{"content":"Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that has capture.","pos":[427,552],"source":" Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture."},{"content":"This event creates an alias for the attached event for this class so that GotStylusCapture is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[559,754],"source":"       This event creates an alias for the attached event for this class so that GotStylusCapture is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the GotStylusCapture event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[755,982],"source":" Event handlers that are attached to the GotStylusCapture event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"GotStylusCapture is introduced in the .NET Framework version 3.5.","pos":[989,1054]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1056,1149],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_GotStylusCapture\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.GotStylusCaptureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   There is no defined corresponding tunneling event.","pos":[1155,1477],"source":"<a name=\"routedEventInfo_GotStylusCapture\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.GotStylusCaptureEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   There is no defined corresponding tunneling event."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnGotStylusCapture%2A&gt; to implement class handling for this event in derived classes.","pos":[1483,1614],"source":"      -   Override <xref:System.Windows.UIElement3D.OnGotStylusCapture%2A> to implement class handling for this event in derived classes."}]},{"pos":[89315,89327],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[89738,89831],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.GotStylusCapture\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.GotStylusCapture\"></xref> routed event."},{"pos":[89844,90555],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       GotStylusCaptureEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"GotStylusCaptureEvent is introduced in the .NET Framework version 3.5.","pos":[542,612]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[614,707],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[90723,90735],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[91116,91164],"content":"Occurs when a touch is captured to this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a touch is captured to this element.","pos":[0,48]}]},{"pos":[91177,91619],"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_GotTouchCapture\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.GotTouchCaptureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;|      -   Override &lt;xref:System.Windows.UIElement3D.OnGotTouchCapture%2A&gt; to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"source":"<a name=\"routedEventInfo_GotTouchCapture\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.GotTouchCaptureEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>|      -   Override <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> to implement class handling for this event in derived classes."},{"pos":[91824,91836],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[92242,92334],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.GotTouchCapture\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.GotTouchCapture\"></xref> routed event."},{"pos":[92500,92512],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[92886,92953],"content":"Gets the collection of input bindings associated with this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of input bindings associated with this element.","pos":[0,67]}]},{"pos":[92966,94427],"content":"Input bindings support the binding of commands to input devices. For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are particular to mouse devices.       The collection of input bindings will include both input bindings that pertain to the type as well as input bindings that are declared on the instance.       A related property, <xref:System.Windows.UIElement3D.CommandBindings%2A>, maintains a collection of command bindings. These differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands.       InputBindings is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"xamlPropertyElementUsage_InputBindings\"></a>    ## XAML Property Element Usage      ```   <object>     <object.InputBindings>       oneOrMoreInputBindings  </object.InputBindings>   </object>   ```      <a name=\"xamlValues_InputBindings\"></a>    ## XAML Values    *oneOrMoreInputBindings*    One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes). Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.","needQuote":false,"needEscape":true,"nodes":[{"content":"Input bindings support the binding of commands to input devices.","pos":[0,64]},{"content":"For example, &lt;xref:System.Windows.Input.MouseBinding&gt; implements input bindings that include properties that are particular to mouse devices.","pos":[65,206],"source":" For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are particular to mouse devices."},{"content":"The collection of input bindings will include both input bindings that pertain to the type as well as input bindings that are declared on the instance.","pos":[213,364]},{"content":"A related property, &lt;xref:System.Windows.UIElement3D.CommandBindings%2A&gt;, maintains a collection of command bindings.","pos":[371,488],"source":"       A related property, <xref:System.Windows.UIElement3D.CommandBindings%2A>, maintains a collection of command bindings."},{"content":"These differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands.","pos":[489,629]},{"content":"InputBindings is introduced in the .NET Framework version 3.5.","pos":[636,698]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[700,793],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlPropertyElementUsage_InputBindings\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id=\"ph1\">```   &lt;object&gt;     &lt;object.InputBindings&gt;       oneOrMoreInputBindings  &lt;/object.InputBindings&gt;   &lt;/object&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_InputBindings\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>oneOrMoreInputBindings<ept id=\"p3\">*</ept>    One or more &lt;xref:System.Windows.Input.InputBinding&gt; elements (typically the &lt;xref:System.Windows.Input.KeyBinding&gt; or &lt;xref:System.Windows.Input.MouseBinding&gt; derived classes).","pos":[799,1277],"source":"<a name=\"xamlPropertyElementUsage_InputBindings\"></a>    ## XAML Property Element Usage      ```   <object>     <object.InputBindings>       oneOrMoreInputBindings  </object.InputBindings>   </object>   ```      <a name=\"xamlValues_InputBindings\"></a>    ## XAML Values    *oneOrMoreInputBindings*    One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes)."},{"content":"Each of these is expected to have a &lt;xref:System.Windows.Input.InputBinding.Command%2A&gt; and &lt;xref:System.Windows.Input.InputBinding.Gesture%2A&gt; attribute set.","pos":[1278,1436],"source":" Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set."}]},{"pos":[94613,94646],"content":"The collection of input bindings.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of input bindings.","pos":[0,33]}]},{"pos":[95088,95138],"content":"Invalidates the model that represents the element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invalidates the model that represents the element.","pos":[0,50]}]},{"pos":[95151,95752],"content":"When you derive a class from the <xref:System.Windows.UIElement3D> class, you can use this method together with the <xref:System.Windows.UIElement3D.OnUpdateModel%2A> method to refresh the model of the element.       You only need to call this method in advanced scenarios. One such advanced scenario is if the derived class has multiple properties that affect the appearance, and you want to update the underlying model only once.       InvalidateModel is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"When you derive a class from the &lt;xref:System.Windows.UIElement3D&gt; class, you can use this method together with the &lt;xref:System.Windows.UIElement3D.OnUpdateModel%2A&gt; method to refresh the model of the element.","pos":[0,210],"source":"When you derive a class from the <xref:System.Windows.UIElement3D> class, you can use this method together with the <xref:System.Windows.UIElement3D.OnUpdateModel%2A> method to refresh the model of the element."},{"content":"You only need to call this method in advanced scenarios.","pos":[217,273]},{"content":"One such advanced scenario is if the derived class has multiple properties that affect the appearance, and you want to update the underlying model only once.","pos":[274,431]},{"content":"InvalidateModel is introduced in the .NET Framework version 3.5.","pos":[438,502]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[504,597],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[96653,96784],"content":"Gets or sets a value indicating whether this element is enabled in the <ph id=\"ph1\">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]."},{"pos":[96797,97703],"content":"Note that this property is influenced by class-specific implementations of <xref:System.Windows.UIElement3D.IsEnabledCore%2A> on particular elements, often at runtime. Therefore, the default value listed here is sometimes not effective. Attempting to set this value will also potentially be overridden by the value returned by <xref:System.Windows.UIElement3D.IsEnabledCore%2A>.       Elements that are not enabled do not participate in hit testing or focus and therefore will not be sources of input events.       IsEnabled is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_IsEnabled\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsEnabledProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"Note that this property is influenced by class-specific implementations of &lt;xref:System.Windows.UIElement3D.IsEnabledCore%2A&gt; on particular elements, often at runtime.","pos":[0,167],"source":"Note that this property is influenced by class-specific implementations of <xref:System.Windows.UIElement3D.IsEnabledCore%2A> on particular elements, often at runtime."},{"content":"Therefore, the default value listed here is sometimes not effective.","pos":[168,236]},{"content":"Attempting to set this value will also potentially be overridden by the value returned by &lt;xref:System.Windows.UIElement3D.IsEnabledCore%2A&gt;.","pos":[237,378],"source":" Attempting to set this value will also potentially be overridden by the value returned by <xref:System.Windows.UIElement3D.IsEnabledCore%2A>."},{"content":"Elements that are not enabled do not participate in hit testing or focus and therefore will not be sources of input events.","pos":[385,508]},{"content":"IsEnabled is introduced in the .NET Framework version 3.5.","pos":[515,573]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[575,668],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsEnabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.IsEnabledProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[674,892],"source":"<a name=\"dependencyPropertyInfo_IsEnabled\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsEnabledProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[97822,98067],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the element is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,162],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[163,245],"source":" The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[98503,98610],"content":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsEnabled*> property on this element changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.UIElement3D.IsEnabled*&gt; property on this element changes.","pos":[0,107],"source":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsEnabled*> property on this element changes."}]},{"pos":[98623,98899],"content":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.       IsEnabledChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This member is a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.","pos":[0,107],"source":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event."},{"content":"IsEnabledChanged is introduced in the .NET Framework version 3.5.","pos":[114,179]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[181,274],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[99104,99116],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[99490,99600],"content":"Gets a value that becomes the return value of <xref:System.Windows.UIElement3D.IsEnabled*> in derived classes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that becomes the return value of &lt;xref:System.Windows.UIElement3D.IsEnabled*&gt; in derived classes.","pos":[0,110],"source":"Gets a value that becomes the return value of <xref:System.Windows.UIElement3D.IsEnabled*> in derived classes."}]},{"pos":[99612,99769],"content":"IsEnabledCore is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEnabledCore is introduced in the .NET Framework version 3.5.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[64,157],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[99897,100059],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the element is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[100504,100584],"content":"Identifies the <xref:System.Windows.UIElement3D.IsEnabled*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.IsEnabled*&gt; dependency property.","pos":[0,80],"source":"Identifies the <xref:System.Windows.UIElement3D.IsEnabled*> dependency property."}]},{"pos":[100596,100757],"content":"IsEnabledProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEnabledProperty is introduced in the .NET Framework version 3.5.","pos":[0,66]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[68,161],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[100934,100946],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[101300,101368],"content":"Gets a value that determines whether this element has logical focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that determines whether this element has logical focus.","pos":[0,68]}]},{"pos":[101381,102622],"content":"Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application. In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus. For more information on logical focus, see [Focus Overview](~/add/includes/ajax-current-ext-md.md).       You do not set focus by setting this property (it is read-only). The typical use for this property is to use it as a dependency property for a <xref:System.Windows.Setter> or <xref:System.Windows.EventTrigger>. To set focus programmatically, call <xref:System.Windows.UIElement3D.Focus%2A>. Focus can also be set by user action or by control implementations, which possibly include mouse capture behavior.       IsFocused is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_IsFocused\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsFocusedProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.","pos":[0,162]},{"content":"In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.","pos":[163,331]},{"content":"For more information on logical focus, see <bpt id=\"p1\">[</bpt>Focus Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[332,431],"source":" For more information on logical focus, see [Focus Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"You do not set focus by setting this property (it is read-only).","pos":[438,502]},{"content":"The typical use for this property is to use it as a dependency property for a &lt;xref:System.Windows.Setter&gt; or &lt;xref:System.Windows.EventTrigger&gt;.","pos":[503,648],"source":" The typical use for this property is to use it as a dependency property for a <xref:System.Windows.Setter> or <xref:System.Windows.EventTrigger>."},{"content":"To set focus programmatically, call &lt;xref:System.Windows.UIElement3D.Focus%2A&gt;.","pos":[649,728],"source":" To set focus programmatically, call <xref:System.Windows.UIElement3D.Focus%2A>."},{"content":"Focus can also be set by user action or by control implementations, which possibly include mouse capture behavior.","pos":[729,843]},{"content":"IsFocused is introduced in the .NET Framework version 3.5.","pos":[850,908]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[910,1003],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsFocused\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.IsFocusedProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[1009,1227],"source":"<a name=\"dependencyPropertyInfo_IsFocused\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsFocusedProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[102736,102906],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this element has logical focus; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this element has logical focus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[103347,103427],"content":"Identifies the <xref:System.Windows.UIElement3D.IsFocused*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.IsFocused*&gt; dependency property.","pos":[0,80],"source":"Identifies the <xref:System.Windows.UIElement3D.IsFocused*> dependency property."}]},{"pos":[103439,103600],"content":"IsFocusedProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFocusedProperty is introduced in the .NET Framework version 3.5.","pos":[0,66]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[68,161],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[103777,103789],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[104178,104322],"content":"Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content.","pos":[0,144]}]},{"pos":[104335,105366],"content":"The effective value of this property is influenced by the relative positions of hit testable elements in the logical tree. For instance, if an element is a child element of an element that is not hit test visible, the effective value of the property on the child will remain `false`, even if attempting to set that value locally. For this reason, it is important that you do not set IsHitTestVisible to `false` on a composited control unless you do not want any input or hit testing on that control. For more information on hit testing, see [Hit Testing in the Visual Layer](~/add/includes/ajax-current-ext-md.md).       IsHitTestVisible is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_IsHitTestVisible\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsHitTestVisibleProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"The effective value of this property is influenced by the relative positions of hit testable elements in the logical tree.","pos":[0,122]},{"content":"For instance, if an element is a child element of an element that is not hit test visible, the effective value of the property on the child will remain <ph id=\"ph1\">`false`</ph>, even if attempting to set that value locally.","pos":[123,329],"source":" For instance, if an element is a child element of an element that is not hit test visible, the effective value of the property on the child will remain `false`, even if attempting to set that value locally."},{"content":"For this reason, it is important that you do not set IsHitTestVisible to <ph id=\"ph1\">`false`</ph> on a composited control unless you do not want any input or hit testing on that control.","pos":[330,499],"source":" For this reason, it is important that you do not set IsHitTestVisible to `false` on a composited control unless you do not want any input or hit testing on that control."},{"content":"For more information on hit testing, see <bpt id=\"p1\">[</bpt>Hit Testing in the Visual Layer<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[500,614],"source":" For more information on hit testing, see [Hit Testing in the Visual Layer](~/add/includes/ajax-current-ext-md.md)."},{"content":"IsHitTestVisible is introduced in the .NET Framework version 3.5.","pos":[621,686]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[688,781],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsHitTestVisible\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.IsHitTestVisibleProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[787,1019],"source":"<a name=\"dependencyPropertyInfo_IsHitTestVisible\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsHitTestVisibleProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[105492,105790],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this element could be returned as a hit test result from at least one point; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this element could be returned as a hit test result from at least one point; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,215],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this element could be returned as a hit test result from at least one point; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[216,298],"source":" The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[106268,106393],"content":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsHitTestVisible*> dependency property changes on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.UIElement3D.IsHitTestVisible*&gt; dependency property changes on this element.","pos":[0,125],"source":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsHitTestVisible*> dependency property changes on this element."}]},{"pos":[106406,106689],"content":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.       IsHitTestVisibleChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This member is a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.","pos":[0,107],"source":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event."},{"content":"IsHitTestVisibleChanged is introduced in the .NET Framework version 3.5.","pos":[114,186]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[188,281],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[106901,106913],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[107339,107426],"content":"Identifies the <xref:System.Windows.UIElement3D.IsHitTestVisible*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.IsHitTestVisible*&gt; dependency property.","pos":[0,87],"source":"Identifies the <xref:System.Windows.UIElement3D.IsHitTestVisible*> dependency property."}]},{"pos":[107438,107606],"content":"IsHitTestVisibleProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"IsHitTestVisibleProperty is introduced in the .NET Framework version 3.5.","pos":[0,73]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[75,168],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[107790,107802],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[108211,108395],"content":"Gets a value indicating whether an input method system, such as an <ph id=\"ph1\">[!INCLUDE[TLA#tla_ime](~/add/includes/ajax-current-ext-md.md)]</ph>,  is enabled for processing the input to this element.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/add/includes/ajax-current-ext-md.md)],  is enabled for processing the input to this element."},{"pos":[108408,108824],"content":"This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=fullName> for the currently enabled input methods (keyboard, speech, other input devices).       IsInputMethodEnabled is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This property returns the value that is returned by the attached property &lt;xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=fullName&gt; for the currently enabled input methods (keyboard, speech, other input devices).","pos":[0,243],"source":"This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=fullName> for the currently enabled input methods (keyboard, speech, other input devices)."},{"content":"IsInputMethodEnabled is introduced in the .NET Framework version 3.5.","pos":[250,319]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[321,414],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[108949,109316],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if an input method is active; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value of the underlying attached property is <xref uid=\"langword_csharp_true;\" name=\"true;\" href=\"\"></xref> however, this will be influenced by the actual state of input methods at runtime.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if an input method is active; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,165],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if an input method is active; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value of the underlying attached property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true;\" name=\"true;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> however, this will be influenced by the actual state of input methods at runtime.","pos":[166,367],"source":" The default value of the underlying attached property is <xref uid=\"langword_csharp_true;\" name=\"true;\" href=\"\"></xref> however, this will be influenced by the actual state of input methods at runtime."}]},{"pos":[109771,109835],"content":"Gets a value indicating whether this element has keyboard focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this element has keyboard focus.","pos":[0,64]}]},{"pos":[109848,110687],"content":"Changes to the determined value of this property may be accompanied by focus-related events.       IsKeyboardFocused and <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> are commonly used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.       IsKeyboardFocused is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_IsKeyboardFocused\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsKeyboardFocusedProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"Changes to the determined value of this property may be accompanied by focus-related events.","pos":[0,92]},{"content":"IsKeyboardFocused and &lt;xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A&gt; are commonly used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.","pos":[99,417],"source":"       IsKeyboardFocused and <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> are commonly used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction."},{"content":"IsKeyboardFocused is introduced in the .NET Framework version 3.5.","pos":[424,490]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[492,585],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsKeyboardFocused\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.IsKeyboardFocusedProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[591,825],"source":"<a name=\"dependencyPropertyInfo_IsKeyboardFocused\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsKeyboardFocusedProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[110809,111059],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this element has keyboard focus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this element has keyboard focus; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,171],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this element has keyboard focus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,250],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[111543,111658],"content":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsKeyboardFocused*> property changes on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.UIElement3D.IsKeyboardFocused*&gt; property changes on this element.","pos":[0,115],"source":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsKeyboardFocused*> property changes on this element."}]},{"pos":[111671,111955],"content":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.       IsKeyboardFocusedChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This member is a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.","pos":[0,107],"source":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event."},{"content":"IsKeyboardFocusedChanged is introduced in the .NET Framework version 3.5.","pos":[114,187]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[189,282],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[112168,112180],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[112611,112699],"content":"Identifies the <xref:System.Windows.UIElement3D.IsKeyboardFocused*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.IsKeyboardFocused*&gt; dependency property.","pos":[0,88],"source":"Identifies the <xref:System.Windows.UIElement3D.IsKeyboardFocused*> dependency property."}]},{"pos":[112711,112880],"content":"IsKeyboardFocusedProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"IsKeyboardFocusedProperty is introduced in the .NET Framework version 3.5.","pos":[0,74]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[76,169],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[113065,113077],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[113491,113603],"content":"Gets a value indicating whether keyboard focus is anywhere within the element or its visual tree child elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether keyboard focus is anywhere within the element or its visual tree child elements.","pos":[0,112]}]},{"pos":[113616,114908],"content":"Changes to the value of this property typically raise the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.       You do not set this property directly, but you can set the focus to an element by calling <xref:System.Windows.UIElement3D.Focus%2A>, or by making a <xref:System.Windows.UIElement3D.MoveFocus%2A> request. Either of these method calls might change this property value.       <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> and IsKeyboardFocusWithin are typically used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.       IsKeyboardFocusWithin is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_IsKeyboardFocusWithin\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"Changes to the value of this property typically raise the &lt;xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged&gt; event, unless a derived class has overridden &lt;xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A&gt; to suppress the event.","pos":[0,256],"source":"Changes to the value of this property typically raise the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A> to suppress the event."},{"content":"You do not set this property directly, but you can set the focus to an element by calling &lt;xref:System.Windows.UIElement3D.Focus%2A&gt;, or by making a &lt;xref:System.Windows.UIElement3D.MoveFocus%2A&gt; request.","pos":[263,467],"source":"       You do not set this property directly, but you can set the focus to an element by calling <xref:System.Windows.UIElement3D.Focus%2A>, or by making a <xref:System.Windows.UIElement3D.MoveFocus%2A> request."},{"content":"Either of these method calls might change this property value.","pos":[468,530]},{"content":"&lt;xref:System.Windows.UIElement3D.IsKeyboardFocused%2A&gt; and IsKeyboardFocusWithin are typically used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.","pos":[537,856],"source":"       <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> and IsKeyboardFocusWithin are typically used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction."},{"content":"IsKeyboardFocusWithin is introduced in the .NET Framework version 3.5.","pos":[863,933]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[935,1028],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsKeyboardFocusWithin\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[1034,1276],"source":"<a name=\"dependencyPropertyInfo_IsKeyboardFocusWithin\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[115034,115228],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if keyboard focus is on the element or its child elements; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if keyboard focus is on the element or its child elements; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[115736,115855],"content":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin*> property changes on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.UIElement3D.IsKeyboardFocusWithin*&gt; property changes on this element.","pos":[0,119],"source":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin*> property changes on this element."}]},{"pos":[115868,116156],"content":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.       IsKeyboardFocusWithinChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This member is a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.","pos":[0,107],"source":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event."},{"content":"IsKeyboardFocusWithinChanged is introduced in the .NET Framework version 3.5.","pos":[114,191]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[193,286],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[116373,116385],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[116836,116928],"content":"Identifies the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.IsKeyboardFocusWithin*&gt; dependency property.","pos":[0,92],"source":"Identifies the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin*> dependency property."}]},{"pos":[116940,117113],"content":"IsKeyboardFocusWithinProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"IsKeyboardFocusWithinProperty is introduced in the .NET Framework version 3.5.","pos":[0,78]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[80,173],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[117302,117314],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[117698,117768],"content":"Gets a value indicating whether the mouse is captured to this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the mouse is captured to this element.","pos":[0,70]}]},{"pos":[117781,118265],"content":"Mouse capture state is related to in-process drag-and-drop operations.       IsMouseCaptured is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_IsMouseCaptured\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsMouseCapturedProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"Mouse capture state is related to in-process drag-and-drop operations.","pos":[0,70]},{"content":"IsMouseCaptured is introduced in the .NET Framework version 3.5.","pos":[77,141]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[143,236],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsMouseCaptured\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.IsMouseCapturedProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[242,472],"source":"<a name=\"dependencyPropertyInfo_IsMouseCaptured\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsMouseCapturedProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[118385,118633],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element has mouse capture; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the element has mouse capture; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,169],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element has mouse capture; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[170,248],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[119105,119218],"content":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsMouseCaptured*> property changes on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.UIElement3D.IsMouseCaptured*&gt; property changes on this element.","pos":[0,113],"source":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsMouseCaptured*> property changes on this element."}]},{"pos":[119231,119513],"content":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.       IsMouseCapturedChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This member is a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.","pos":[0,107],"source":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event."},{"content":"IsMouseCapturedChanged is introduced in the .NET Framework version 3.5.","pos":[114,185]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[187,280],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[119724,119736],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[120157,120243],"content":"Identifies the <xref:System.Windows.UIElement3D.IsMouseCaptured*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.IsMouseCaptured*&gt; dependency property.","pos":[0,86],"source":"Identifies the <xref:System.Windows.UIElement3D.IsMouseCaptured*> dependency property."}]},{"pos":[120255,120422],"content":"IsMouseCapturedProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"IsMouseCapturedProperty is introduced in the .NET Framework version 3.5.","pos":[0,72]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[74,167],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[120605,120617],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[121026,121141],"content":"Gets a value that determines whether mouse capture is held by this element or by child elements in its visual tree.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that determines whether mouse capture is held by this element or by child elements in its visual tree.","pos":[0,115]}]},{"pos":[121154,121574],"content":"IsMouseCaptureWithin is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_IsMouseCaptureWithin\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsMouseCaptureWithinProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"IsMouseCaptureWithin is introduced in the .NET Framework version 3.5.","pos":[0,69]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[71,164],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsMouseCaptureWithin\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.IsMouseCaptureWithinProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[170,410],"source":"<a name=\"dependencyPropertyInfo_IsMouseCaptureWithin\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsMouseCaptureWithinProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[121699,121892],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this element or a contained element has mouse capture; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this element or a contained element has mouse capture; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[122394,122512],"content":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsMouseCaptureWithin*> property changes on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.UIElement3D.IsMouseCaptureWithin*&gt; property changes on this element.","pos":[0,118],"source":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsMouseCaptureWithin*> property changes on this element."}]},{"pos":[122525,122812],"content":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.       IsMouseCaptureWithinChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This member is a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.","pos":[0,107],"source":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event."},{"content":"IsMouseCaptureWithinChanged is introduced in the .NET Framework version 3.5.","pos":[114,190]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[192,285],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[123028,123040],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[123486,123577],"content":"Identifies the <xref:System.Windows.UIElement3D.IsMouseCaptureWithin*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.IsMouseCaptureWithin*&gt; dependency property.","pos":[0,91],"source":"Identifies the <xref:System.Windows.UIElement3D.IsMouseCaptureWithin*> dependency property."}]},{"pos":[123589,123761],"content":"IsMouseCaptureWithinProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"IsMouseCaptureWithinProperty is introduced in the .NET Framework version 3.5.","pos":[0,77]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[79,172],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[123949,123961],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[124365,124512],"content":"Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.","pos":[0,147]}]},{"pos":[124525,125525],"content":"Unlike <xref:System.Windows.UIElement3D.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element—as it is for a hit test. If the mouse pointer is instead over a child element, this property will be `false`. For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement3D.IsMouseOver%2A> instead.       If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.       IsMouseDirectlyOver is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_IsMouseDirectlyOver\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsMouseDirectlyOverProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"Unlike &lt;xref:System.Windows.UIElement3D.IsMouseOver%2A&gt;, this property is only <ph id=\"ph1\">`true`</ph> if the mouse pointer is over the literal element—as it is for a hit test.","pos":[0,159],"source":"Unlike <xref:System.Windows.UIElement3D.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element—as it is for a hit test."},{"content":"If the mouse pointer is instead over a child element, this property will be <ph id=\"ph1\">`false`</ph>.","pos":[160,244],"source":" If the mouse pointer is instead over a child element, this property will be `false`."},{"content":"For most scenarios where you are not authoring controls, use &lt;xref:System.Windows.UIElement3D.IsMouseOver%2A&gt; instead.","pos":[245,363],"source":" For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement3D.IsMouseOver%2A> instead."},{"content":"If the mouse is captured by this element, and this property is <ph id=\"ph1\">`true`</ph> at time of capture, this property will continue to return <ph id=\"ph2\">`true`</ph> until mouse capture is lost and the pointer is not over its bounds.","pos":[370,572],"source":"       If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds."},{"content":"IsMouseDirectlyOver is introduced in the .NET Framework version 3.5.","pos":[579,647]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[649,742],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsMouseDirectlyOver\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.IsMouseDirectlyOverProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[748,986],"source":"<a name=\"dependencyPropertyInfo_IsMouseDirectlyOver\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsMouseDirectlyOverProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[125649,125931],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the mouse pointer is over the same element result as a hit test; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the mouse pointer is over the same element result as a hit test; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,203],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the mouse pointer is over the same element result as a hit test; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[204,282],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[126427,126544],"content":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsMouseDirectlyOver*> property changes on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.UIElement3D.IsMouseDirectlyOver*&gt; property changes on this element.","pos":[0,117],"source":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsMouseDirectlyOver*> property changes on this element."}]},{"pos":[126557,126843],"content":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.       IsMouseDirectlyOverChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This member is a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.","pos":[0,107],"source":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event."},{"content":"IsMouseDirectlyOverChanged is introduced in the .NET Framework version 3.5.","pos":[114,189]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[191,284],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[127058,127070],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[127511,127601],"content":"Identifies the <xref:System.Windows.UIElement3D.IsMouseDirectlyOver*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.IsMouseDirectlyOver*&gt; dependency property.","pos":[0,90],"source":"Identifies the <xref:System.Windows.UIElement3D.IsMouseDirectlyOver*> dependency property."}]},{"pos":[127613,127784],"content":"IsMouseDirectlyOverProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"IsMouseDirectlyOverProperty is introduced in the .NET Framework version 3.5.","pos":[0,76]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[78,171],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[127971,127983],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[128347,128472],"content":"Gets a value indicating whether the mouse pointer is located over this element (including child elements in the visual tree).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the mouse pointer is located over this element (including child elements in the visual tree).","pos":[0,125]}]},{"pos":[128485,129902],"content":"Typically, controls are composited such that the various elements inside the control (the visual tree) will all report the mouse state for the containing control. For example, a <xref:System.Windows.Controls.ListBox> style control will report IsMouseOver as `true` if the mouse is anywhere over its geometry, including any <xref:System.Windows.Controls.ListBoxItem>.       Although an analogous \"IsMouseOverChanged\" event does not exist, several similar events do. For example, you can handle <xref:System.Windows.UIElement3D.MouseEnter>, <xref:System.Windows.UIElement3D.MouseMove>, and <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>.       If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.       Some controls deliberately capture the mouse on certain actions that do not appear to directly involve the mouse. This can lead to IsMouseOver being `true` even though the mouse has not apparently moved.       IsMouseOver is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_IsMouseOver\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsMouseOverProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"Typically, controls are composited such that the various elements inside the control (the visual tree) will all report the mouse state for the containing control.","pos":[0,162]},{"content":"For example, a &lt;xref:System.Windows.Controls.ListBox&gt; style control will report IsMouseOver as <ph id=\"ph1\">`true`</ph> if the mouse is anywhere over its geometry, including any &lt;xref:System.Windows.Controls.ListBoxItem&gt;.","pos":[163,366],"source":" For example, a <xref:System.Windows.Controls.ListBox> style control will report IsMouseOver as `true` if the mouse is anywhere over its geometry, including any <xref:System.Windows.Controls.ListBoxItem>."},{"content":"Although an analogous \"IsMouseOverChanged\" event does not exist, several similar events do.","pos":[373,464]},{"content":"For example, you can handle &lt;xref:System.Windows.UIElement3D.MouseEnter&gt;, &lt;xref:System.Windows.UIElement3D.MouseMove&gt;, and &lt;xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged&gt;.","pos":[465,649],"source":" For example, you can handle <xref:System.Windows.UIElement3D.MouseEnter>, <xref:System.Windows.UIElement3D.MouseMove>, and <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>."},{"content":"If this element captures the mouse, this property remains <ph id=\"ph1\">`true`</ph> until mouse capture is lost and the mouse pointer leaves the element bounds.","pos":[656,797],"source":"       If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds."},{"content":"Some controls deliberately capture the mouse on certain actions that do not appear to directly involve the mouse.","pos":[804,917]},{"content":"This can lead to IsMouseOver being <ph id=\"ph1\">`true`</ph> even though the mouse has not apparently moved.","pos":[918,1007],"source":" This can lead to IsMouseOver being `true` even though the mouse has not apparently moved."},{"content":"IsMouseOver is introduced in the .NET Framework version 3.5.","pos":[1014,1074]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1076,1169],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsMouseOver\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.IsMouseOverProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[1175,1397],"source":"<a name=\"dependencyPropertyInfo_IsMouseOver\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsMouseOverProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[130018,130292],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if mouse pointer is over the element or its child elements; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if mouse pointer is over the element or its child elements; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,195],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if mouse pointer is over the element or its child elements; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[196,274],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[130745,130827],"content":"Identifies the <xref:System.Windows.UIElement3D.IsMouseOver*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.IsMouseOver*&gt; dependency property.","pos":[0,82],"source":"Identifies the <xref:System.Windows.UIElement3D.IsMouseOver*> dependency property."}]},{"pos":[130839,131002],"content":"IsMouseOverProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"IsMouseOverProperty is introduced in the .NET Framework version 3.5.","pos":[0,68]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[70,163],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[131181,131193],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[131582,131653],"content":"Gets a value indicating whether the stylus is captured by this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the stylus is captured by this element.","pos":[0,71]}]},{"pos":[131666,132322],"content":"Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       IsStylusCaptured is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_IsStylusCaptured\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsStylusCapturedProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[0,66]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[67,239],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"IsStylusCaptured is introduced in the .NET Framework version 3.5.","pos":[246,311]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[313,406],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsStylusCaptured\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.IsStylusCapturedProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[412,644],"source":"<a name=\"dependencyPropertyInfo_IsStylusCaptured\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsStylusCapturedProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[132443,132692],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element has stylus capture; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the element has stylus capture; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,170],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element has stylus capture; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[171,249],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[133170,133284],"content":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsStylusCaptured*> property changes on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.UIElement3D.IsStylusCaptured*&gt; property changes on this element.","pos":[0,114],"source":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsStylusCaptured*> property changes on this element."}]},{"pos":[133297,133580],"content":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.       IsStylusCapturedChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This member is a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.","pos":[0,107],"source":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event."},{"content":"IsStylusCapturedChanged is introduced in the .NET Framework version 3.5.","pos":[114,186]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[188,281],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[133792,133804],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[134230,134317],"content":"Identifies the <xref:System.Windows.UIElement3D.IsStylusCaptured*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.IsStylusCaptured*&gt; dependency property.","pos":[0,87],"source":"Identifies the <xref:System.Windows.UIElement3D.IsStylusCaptured*> dependency property."}]},{"pos":[134329,134497],"content":"IsStylusCapturedProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"IsStylusCapturedProperty is introduced in the .NET Framework version 3.5.","pos":[0,73]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[75,168],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[134681,134693],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[135107,135244],"content":"Gets a value that determines whether stylus capture is held by this element, or an element within the element bounds and its visual tree.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that determines whether stylus capture is held by this element, or an element within the element bounds and its visual tree.","pos":[0,137]}]},{"pos":[135257,135928],"content":"Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       IsStylusCaptureWithin is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_IsStylusCaptureWithin\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsStylusCaptureWithinProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[0,66]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[67,239],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"IsStylusCaptureWithin is introduced in the .NET Framework version 3.5.","pos":[246,316]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[318,411],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsStylusCaptureWithin\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.IsStylusCaptureWithinProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[417,659],"source":"<a name=\"dependencyPropertyInfo_IsStylusCaptureWithin\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsStylusCaptureWithinProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[136054,136327],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this element or a contained element has stylus capture; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this element or a contained element has stylus capture; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,194],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this element or a contained element has stylus capture; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[195,273],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[136835,136954],"content":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsStylusCaptureWithin*> property changes on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.UIElement3D.IsStylusCaptureWithin*&gt; property changes on this element.","pos":[0,119],"source":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsStylusCaptureWithin*> property changes on this element."}]},{"pos":[136967,137248],"content":"This is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.       IsStylusCaptureWithinChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This is a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.","pos":[0,100],"source":"This is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event."},{"content":"IsStylusCaptureWithinChanged is introduced in the .NET Framework version 3.5.","pos":[107,184]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[186,279],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[137465,137477],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[137928,138020],"content":"Identifies the <xref:System.Windows.UIElement3D.IsStylusCaptureWithin*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.IsStylusCaptureWithin*&gt; dependency property.","pos":[0,92],"source":"Identifies the <xref:System.Windows.UIElement3D.IsStylusCaptureWithin*> dependency property."}]},{"pos":[138032,138205],"content":"IsStylusCaptureWithinProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"IsStylusCaptureWithinProperty is introduced in the .NET Framework version 3.5.","pos":[0,78]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[80,173],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[138394,138406],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[138815,138948],"content":"Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.","pos":[0,133]}]},{"pos":[138961,140429],"content":"Unlike <xref:System.Windows.UIElement3D.IsStylusOver%2A>, this property is only `true` if the stylus is over the element. If the stylus is instead over a child element or over elements that are part of an element's deeper compositing (the visual tree), this property will be `false`.       Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results. For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement3D.IsStylusOver%2A> instead.       If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       IsStylusDirectlyOver is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_IsStylusDirectlyOver\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsStylusDirectlyOverProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"Unlike &lt;xref:System.Windows.UIElement3D.IsStylusOver%2A&gt;, this property is only <ph id=\"ph1\">`true`</ph> if the stylus is over the element.","pos":[0,121],"source":"Unlike <xref:System.Windows.UIElement3D.IsStylusOver%2A>, this property is only `true` if the stylus is over the element."},{"content":"If the stylus is instead over a child element or over elements that are part of an element's deeper compositing (the visual tree), this property will be <ph id=\"ph1\">`false`</ph>.","pos":[122,283],"source":" If the stylus is instead over a child element or over elements that are part of an element's deeper compositing (the visual tree), this property will be `false`."},{"content":"Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.","pos":[290,477]},{"content":"For most scenarios where you are not authoring controls, use &lt;xref:System.Windows.UIElement3D.IsStylusOver%2A&gt; instead.","pos":[478,597],"source":" For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement3D.IsStylusOver%2A> instead."},{"content":"If this element has stylus capture and this property is <ph id=\"ph1\">`true`</ph> at the time of capture, this property remains <ph id=\"ph2\">`true`</ph> until stylus capture is lost and the stylus is not over its bounds.","pos":[604,787],"source":"       If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[794,860]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[861,1033],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"IsStylusDirectlyOver is introduced in the .NET Framework version 3.5.","pos":[1040,1109]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1111,1204],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsStylusDirectlyOver\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.IsStylusDirectlyOverProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[1210,1450],"source":"<a name=\"dependencyPropertyInfo_IsStylusDirectlyOver\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsStylusDirectlyOverProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[140554,140837],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the stylus pointer is over the same element result as a hit test; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the stylus pointer is over the same element result as a hit test; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,204],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the stylus pointer is over the same element result as a hit test; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[205,283],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[141339,141457],"content":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsStylusDirectlyOver*> property changes on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.UIElement3D.IsStylusDirectlyOver*&gt; property changes on this element.","pos":[0,118],"source":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsStylusDirectlyOver*> property changes on this element."}]},{"pos":[141470,141757],"content":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.       IsStylusDirectlyOverChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This member is a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.","pos":[0,107],"source":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event."},{"content":"IsStylusDirectlyOverChanged is introduced in the .NET Framework version 3.5.","pos":[114,190]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[192,285],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[141973,141985],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[142431,142522],"content":"Identifies the <xref:System.Windows.UIElement3D.IsStylusDirectlyOver*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.IsStylusDirectlyOver*&gt; dependency property.","pos":[0,91],"source":"Identifies the <xref:System.Windows.UIElement3D.IsStylusDirectlyOver*> dependency property."}]},{"pos":[142534,142706],"content":"IsStylusDirectlyOverProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"IsStylusDirectlyOverProperty is introduced in the .NET Framework version 3.5.","pos":[0,77]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[79,172],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[142894,142906],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[143275,143388],"content":"Gets a value indicating whether the stylus cursor is located over this element (including visual child elements).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the stylus cursor is located over this element (including visual child elements).","pos":[0,113]}]},{"pos":[143401,144201],"content":"If this element has stylus capture, this property will continue to return `true` until stylus capture is lost and the pointer is out of its bounds.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       IsStylusOver is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_IsStylusOver\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsStylusOverProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"If this element has stylus capture, this property will continue to return <ph id=\"ph1\">`true`</ph> until stylus capture is lost and the pointer is out of its bounds.","pos":[0,147],"source":"If this element has stylus capture, this property will continue to return `true` until stylus capture is lost and the pointer is out of its bounds."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[154,220]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[221,393],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"IsStylusOver is introduced in the .NET Framework version 3.5.","pos":[400,461]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[463,556],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsStylusOver\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.IsStylusOverProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[562,786],"source":"<a name=\"dependencyPropertyInfo_IsStylusOver\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsStylusOverProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[144318,144592],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if stylus cursor is over the element or its child elements; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if stylus cursor is over the element or its child elements; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,195],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if stylus cursor is over the element or its child elements; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[196,274],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[145051,145134],"content":"Identifies the <xref:System.Windows.UIElement3D.IsStylusOver*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.IsStylusOver*&gt; dependency property.","pos":[0,83],"source":"Identifies the <xref:System.Windows.UIElement3D.IsStylusOver*> dependency property."}]},{"pos":[145146,145310],"content":"IsStylusOverProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"IsStylusOverProperty is introduced in the .NET Framework version 3.5.","pos":[0,69]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[71,164],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[145490,145502],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[145856,145979],"content":"Gets a value indicating whether this element is visible in the <ph id=\"ph1\">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether this element is visible in the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]."},{"pos":[145992,147726],"content":"Determination of the IsVisible value takes many factors into account. In contrast, <xref:System.Windows.UIElement3D.Visibility%2A>, which is a settable property, only indicates the intention to programmatically make an element visible or invisible.       Changes to the value of this property will typically raise the <xref:System.Windows.UIElement3D.IsVisibleChanged> event. There is no matching [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] \"On*\" class handling override method that would allow some derived class to override that behavior and handle the event, but a class handler could still be attached directly with <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       Elements where IsVisible is `false` do not participate in input events (or commands), do not influence either the measure or arrange passes of layout, are not focusable, are not in a tab sequence, and will not be reported in hit testing. In contrast, elements where <xref:System.Windows.UIElement3D.IsEnabled%2A> is `false` will still participate in events and commands, and hit testing, but are also not focusable.       IsVisible is not intended to be used as a style trigger. Using IsVisible as a style trigger might have unpredictable results. IsVisible is intended for state checking by lower level input implementations.       IsVisible is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_IsVisible\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsVisibleProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"Determination of the IsVisible value takes many factors into account.","pos":[0,69]},{"content":"In contrast, &lt;xref:System.Windows.UIElement3D.Visibility%2A&gt;, which is a settable property, only indicates the intention to programmatically make an element visible or invisible.","pos":[70,248],"source":" In contrast, <xref:System.Windows.UIElement3D.Visibility%2A>, which is a settable property, only indicates the intention to programmatically make an element visible or invisible."},{"content":"Changes to the value of this property will typically raise the &lt;xref:System.Windows.UIElement3D.IsVisibleChanged&gt; event.","pos":[255,375],"source":"       Changes to the value of this property will typically raise the <xref:System.Windows.UIElement3D.IsVisibleChanged> event."},{"content":"There is no matching <ph id=\"ph1\">[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]</ph> \"On*\" class handling override method that would allow some derived class to override that behavior and handle the event, but a class handler could still be attached directly with &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[376,697],"source":" There is no matching [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] \"On*\" class handling override method that would allow some derived class to override that behavior and handle the event, but a class handler could still be attached directly with <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"Elements where IsVisible is <ph id=\"ph1\">`false`</ph> do not participate in input events (or commands), do not influence either the measure or arrange passes of layout, are not focusable, are not in a tab sequence, and will not be reported in hit testing.","pos":[704,941],"source":"       Elements where IsVisible is `false` do not participate in input events (or commands), do not influence either the measure or arrange passes of layout, are not focusable, are not in a tab sequence, and will not be reported in hit testing."},{"content":"In contrast, elements where &lt;xref:System.Windows.UIElement3D.IsEnabled%2A&gt; is <ph id=\"ph1\">`false`</ph> will still participate in events and commands, and hit testing, but are also not focusable.","pos":[942,1119],"source":" In contrast, elements where <xref:System.Windows.UIElement3D.IsEnabled%2A> is `false` will still participate in events and commands, and hit testing, but are also not focusable."},{"content":"IsVisible is not intended to be used as a style trigger.","pos":[1126,1182]},{"content":"Using IsVisible as a style trigger might have unpredictable results.","pos":[1183,1251]},{"content":"IsVisible is intended for state checking by lower level input implementations.","pos":[1252,1330]},{"content":"IsVisible is introduced in the .NET Framework version 3.5.","pos":[1337,1395]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1397,1490],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsVisible\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.IsVisibleProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[1496,1714],"source":"<a name=\"dependencyPropertyInfo_IsVisible\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.IsVisibleProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[147840,148002],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the element is visible; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element is visible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[148438,148545],"content":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsVisible*> property changes on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.UIElement3D.IsVisible*&gt; property changes on this element.","pos":[0,107],"source":"Occurs when the value of the <xref:System.Windows.UIElement3D.IsVisible*> property changes on this element."}]},{"pos":[148558,148834],"content":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.       IsVisibleChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This member is a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> event, not a routed event.","pos":[0,107],"source":"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event."},{"content":"IsVisibleChanged is introduced in the .NET Framework version 3.5.","pos":[114,179]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[181,274],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[149039,149051],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[149442,149522],"content":"Identifies the <xref:System.Windows.UIElement3D.IsVisible*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.IsVisible*&gt; dependency property.","pos":[0,80],"source":"Identifies the <xref:System.Windows.UIElement3D.IsVisible*> dependency property."}]},{"pos":[149534,149695],"content":"IsVisibleProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"IsVisibleProperty is introduced in the .NET Framework version 3.5.","pos":[0,66]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[68,161],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[149872,149884],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[150225,150300],"content":"Occurs when a key is pressed while the keyboard is focused on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a key is pressed while the keyboard is focused on this element.","pos":[0,75]}]},{"pos":[150313,151427],"content":"This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName> attached event for this class so that KeyDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the KeyDown event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName> attached event and receive the same event data instance.       KeyDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_KeyDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.KeyDownEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.KeyEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewKeyDown>.      -   Override <xref:System.Windows.UIElement3D.OnKeyDown%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt; attached event for this class so that KeyDown is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,256],"source":"This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName> attached event for this class so that KeyDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the KeyDown event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[257,468],"source":" Event handlers that are attached to the KeyDown event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"KeyDown is introduced in the .NET Framework version 3.5.","pos":[475,531]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[533,626],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_KeyDown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.KeyDownEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewKeyDown&gt;.","pos":[632,969],"source":"<a name=\"routedEventInfo_KeyDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.KeyDownEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.KeyEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewKeyDown>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnKeyDown%2A&gt; to implement class handling for this event in derived classes.","pos":[975,1097],"source":"      -   Override <xref:System.Windows.UIElement3D.OnKeyDown%2A> to implement class handling for this event in derived classes."}]},{"pos":[151591,151603],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[151969,152053],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.KeyDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.KeyDown\"></xref> routed event."},{"pos":[152066,152768],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       KeyDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"KeyDownEvent is introduced in the .NET Framework version 3.5.","pos":[542,603]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[605,698],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[152927,152939],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[153270,153346],"content":"Occurs when a key is released while the keyboard is focused on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a key is released while the keyboard is focused on this element.","pos":[0,76]}]},{"pos":[153359,154455],"content":"This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName> attached event for this class so that KeyUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the KeyUp event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName> attached event and receive the same event data instance.       KeyUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_KeyUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.KeyUpEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.KeyEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewKeyUp>.      -   Override <xref:System.Windows.UIElement3D.OnKeyUp%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt; attached event for this class so that KeyUp is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,252],"source":"This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName> attached event for this class so that KeyUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the KeyUp event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[253,460],"source":" Event handlers that are attached to the KeyUp event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"KeyUp is introduced in the .NET Framework version 3.5.","pos":[467,521]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[523,616],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_KeyUp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.KeyUpEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewKeyUp&gt;.","pos":[622,953],"source":"<a name=\"routedEventInfo_KeyUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.KeyUpEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.KeyEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewKeyUp>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnKeyUp%2A&gt; to implement class handling for this event in derived classes.","pos":[959,1079],"source":"      -   Override <xref:System.Windows.UIElement3D.OnKeyUp%2A> to implement class handling for this event in derived classes."}]},{"pos":[154617,154629],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[154985,155067],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.KeyUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.KeyUp\"></xref> routed event."},{"pos":[155080,155780],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       KeyUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"KeyUpEvent is introduced in the .NET Framework version 3.5.","pos":[542,601]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[603,696],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[155937,155949],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[156300,156345],"content":"Occurs when this element loses logical focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when this element loses logical focus.","pos":[0,45]}]},{"pos":[156358,157801],"content":"Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope. In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.UIElement3D.Focus%2A> method is called still gets logical focus.       A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement3D.IsFocused%2A> property of an element in the route changes from `true` to `false`.       Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.       LostFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_LostFocus\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.LostFocusEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|      -   There is no corresponding tunneling event.      -   Override <xref:System.Windows.UIElement3D.OnLostFocus%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.","pos":[0,162]},{"content":"In this scenario, keyboard focus remains where it is, and the element where a &lt;xref:System.Windows.UIElement3D.Focus%2A&gt; method is called still gets logical focus.","pos":[163,326],"source":" In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.UIElement3D.Focus%2A> method is called still gets logical focus."},{"content":"A more precise interpretation of this event is that it is raised when the value of the &lt;xref:System.Windows.UIElement3D.IsFocused%2A&gt; property of an element in the route changes from <ph id=\"ph1\">`true`</ph> to <ph id=\"ph2\">`false`</ph>.","pos":[333,534],"source":"       A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement3D.IsFocused%2A> property of an element in the route changes from `true` to `false`."},{"content":"Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.","pos":[541,705]},{"content":"Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that gained focus.","pos":[706,832],"source":" Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus."},{"content":"LostFocus is introduced in the .NET Framework version 3.5.","pos":[839,897]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[899,992],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_LostFocus\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.LostFocusEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|      -   There is no corresponding tunneling event.","pos":[998,1292],"source":"<a name=\"routedEventInfo_LostFocus\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.LostFocusEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|      -   There is no corresponding tunneling event."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnLostFocus%2A&gt; to implement class handling for this event in derived classes.","pos":[1298,1422],"source":"      -   Override <xref:System.Windows.UIElement3D.OnLostFocus%2A> to implement class handling for this event in derived classes."}]},{"pos":[157961,157973],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[158349,158435],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.LostFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.LostFocus\"></xref> routed event."},{"pos":[158448,159152],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       LostFocusEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"LostFocusEvent is introduced in the .NET Framework version 3.5.","pos":[542,605]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[607,700],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[159313,159325],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[159716,159778],"content":"Occurs when the keyboard is no longer focused on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the keyboard is no longer focused on this element.","pos":[0,62]}]},{"pos":[159791,161310],"content":"Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.       This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName> attached event for this class, so that LostKeyboardFocus is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the LostKeyboardFocus event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName> attached event and receive the same event data instance.       LostKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_LostKeyboardFocus\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.LostKeyboardFocusEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>.      -   Override <xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.","pos":[0,163]},{"content":"Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that lost focus.","pos":[164,288],"source":" Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus."},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt; attached event for this class, so that LostKeyboardFocus is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[295,572],"source":"       This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName> attached event for this class, so that LostKeyboardFocus is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the LostKeyboardFocus event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[573,804],"source":" Event handlers that are attached to the LostKeyboardFocus event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"LostKeyboardFocus is introduced in the .NET Framework version 3.5.","pos":[811,877]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[879,972],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_LostKeyboardFocus\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.LostKeyboardFocusEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus&gt;.","pos":[978,1362],"source":"<a name=\"routedEventInfo_LostKeyboardFocus\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.LostKeyboardFocusEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A&gt; to implement class handling for this event in derived classes.","pos":[1368,1500],"source":"      -   Override <xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes."}]},{"pos":[161518,161530],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[161946,162040],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.LostKeyboardFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.LostKeyboardFocus\"></xref> routed event."},{"pos":[162053,162765],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       LostKeyboardFocusEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"LostKeyboardFocusEvent is introduced in the .NET Framework version 3.5.","pos":[542,613]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[615,708],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[162934,162946],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[163332,163377],"content":"Occurs when this element loses mouse capture.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when this element loses mouse capture.","pos":[0,45]}]},{"pos":[163390,165020],"content":"When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds. The mouse is typically captured only during drag-and-drop operations.       Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.       This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName> attached event for this class, so that LostMouseCapture is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the LostMouseCapture event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName> attached event and receive the same event data instance.       LostMouseCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_LostMouseCapture\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.LostMouseCaptureEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.MouseEventHandler>|      -   There is no defined corresponding tunneling event.      -   Override <xref:System.Windows.UIElement3D.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.","pos":[0,102]},{"content":"The mouse is typically captured only during drag-and-drop operations.","pos":[103,172]},{"content":"Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.","pos":[179,345]},{"content":"Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that lost capture.","pos":[346,472],"source":" Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture."},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt; attached event for this class, so that LostMouseCapture is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[479,751],"source":"       This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName> attached event for this class, so that LostMouseCapture is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the LostMouseCapture event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[752,978],"source":" Event handlers that are attached to the LostMouseCapture event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"LostMouseCapture is introduced in the .NET Framework version 3.5.","pos":[985,1050]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1052,1145],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_LostMouseCapture\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.LostMouseCaptureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -   There is no defined corresponding tunneling event.","pos":[1151,1472],"source":"<a name=\"routedEventInfo_LostMouseCapture\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.LostMouseCaptureEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.MouseEventHandler>|      -   There is no defined corresponding tunneling event."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnLostMouseCapture%2A&gt; to implement class handling for this event in derived classes.","pos":[1478,1609],"source":"      -   Override <xref:System.Windows.UIElement3D.OnLostMouseCapture%2A> to implement class handling for this event in derived classes."}]},{"pos":[165197,165209],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[165620,165713],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.LostMouseCapture\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.LostMouseCapture\"></xref> routed event."},{"pos":[165726,166437],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       LostMouseCaptureEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"LostMouseCaptureEvent is introduced in the .NET Framework version 3.5.","pos":[542,612]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[614,707],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[166605,166617],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[167008,167054],"content":"Occurs when this element loses stylus capture.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when this element loses stylus capture.","pos":[0,46]}]},{"pos":[167067,168707],"content":"When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds. The stylus is typically captured only during drag-and-drop operations.       Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.       This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName> attached event for this class, so that LostStylusCapture is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the LostStylusCapture event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName> attached event and receive the same event data instance.       LostStylusCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_LostStylusCapture\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.LostStylusCaptureEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   There is no defined corresponding tunneling event.      -   Override <xref:System.Windows.UIElement3D.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.","pos":[0,104]},{"content":"The stylus is typically captured only during drag-and-drop operations.","pos":[105,175]},{"content":"Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.","pos":[182,346]},{"content":"Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that lost focus.","pos":[347,471],"source":" Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus."},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt; attached event for this class, so that LostStylusCapture is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[478,753],"source":"       This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName> attached event for this class, so that LostStylusCapture is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the LostStylusCapture event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[754,983],"source":" Event handlers that are attached to the LostStylusCapture event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"LostStylusCapture is introduced in the .NET Framework version 3.5.","pos":[990,1056]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1058,1151],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_LostStylusCapture\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.LostStylusCaptureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   There is no defined corresponding tunneling event.","pos":[1157,1481],"source":"<a name=\"routedEventInfo_LostStylusCapture\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.LostStylusCaptureEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   There is no defined corresponding tunneling event."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnLostStylusCapture%2A&gt; to implement class handling for this event in derived classes.","pos":[1487,1619],"source":"      -   Override <xref:System.Windows.UIElement3D.OnLostStylusCapture%2A> to implement class handling for this event in derived classes."}]},{"pos":[168887,168899],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[169315,169409],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.LostStylusCapture\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.LostStylusCapture\"></xref> routed event."},{"pos":[169422,170134],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       LostStylusCaptureEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"LostStylusCaptureEvent is introduced in the .NET Framework version 3.5.","pos":[542,613]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[615,708],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[170303,170315],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[170701,170748],"content":"Occurs when this element loses a touch capture.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when this element loses a touch capture.","pos":[0,47]}]},{"pos":[170761,171207],"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_LostTouchCapture\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.LostTouchCaptureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   Override &lt;xref:System.Windows.UIElement3D.OnLostTouchCapture%2A&gt; to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"source":"<a name=\"routedEventInfo_LostTouchCapture\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.LostTouchCaptureEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|      -   Override <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> to implement class handling for this event in derived classes."},{"pos":[171413,171425],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[171836,171929],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.LostTouchCapture\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.LostTouchCapture\"></xref> routed event."},{"pos":[172096,172108],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[172459,172538],"content":"Occurs when any mouse button is pressed while the pointer is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when any mouse button is pressed while the pointer is over this element.","pos":[0,79]}]},{"pos":[172551,175727],"content":"This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> attached event for this class, so that MouseDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the MouseDown event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> attached event and receive the same event data instance.       The MouseDown event is often raised together with either <xref:System.Windows.UIElement3D.MouseLeftButtonDown> or <xref:System.Windows.UIElement3D.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons. <xref:System.Windows.UIElement3D.MouseLeftButtonDown> and <xref:System.Windows.UIElement3D.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event reaches this element along the event route. See Remarks for <xref:System.Windows.UIElement3D.MouseLeftButtonDown> or <xref:System.Windows.UIElement3D.MouseRightButtonDown>.      > [!IMPORTANT] >  Some controls might have inherent class handling for mouse button events. The left mouse button down event is the most likely event to have class handling in a control. The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled. Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised. Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.       You can resolve the issue that is outlined in the preceding Important and still receive MouseDown events for left mouse button down events on a derived class that has class handling by using either of these solutions:      -   Attach handlers for the <xref:System.Windows.UIElement3D.PreviewMouseDown> event, which is not marked as handled by the controls. Notice that because this is a preview event, the route starts at the root and tunnels down to the control.      -   Register a handler on the control procedurally by calling <xref:System.Windows.UIElement3D.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.       MouseDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_MouseDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseDownEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseDown>.      -   Override <xref:System.Windows.UIElement3D.OnMouseDown%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; attached event for this class, so that MouseDown is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,258],"source":"This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> attached event for this class, so that MouseDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the MouseDown event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[259,471],"source":" Event handlers that are attached to the MouseDown event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"The MouseDown event is often raised together with either &lt;xref:System.Windows.UIElement3D.MouseLeftButtonDown&gt; or &lt;xref:System.Windows.UIElement3D.MouseRightButtonDown&gt;, which correspond to a press of one of the two standard mouse buttons.","pos":[478,717],"source":"       The MouseDown event is often raised together with either <xref:System.Windows.UIElement3D.MouseLeftButtonDown> or <xref:System.Windows.UIElement3D.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons."},{"content":"&lt;xref:System.Windows.UIElement3D.MouseLeftButtonDown&gt; and &lt;xref:System.Windows.UIElement3D.MouseRightButtonDown&gt; are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; event reaches this element along the event route.","pos":[718,1069],"source":" <xref:System.Windows.UIElement3D.MouseLeftButtonDown> and <xref:System.Windows.UIElement3D.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event reaches this element along the event route."},{"content":"See Remarks for &lt;xref:System.Windows.UIElement3D.MouseLeftButtonDown&gt; or &lt;xref:System.Windows.UIElement3D.MouseRightButtonDown&gt;.","pos":[1070,1198],"source":" See Remarks for <xref:System.Windows.UIElement3D.MouseLeftButtonDown> or <xref:System.Windows.UIElement3D.MouseRightButtonDown>."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  Some controls might have inherent class handling for mouse button events.","pos":[1204,1295],"source":"      > [!IMPORTANT] >  Some controls might have inherent class handling for mouse button events."},{"content":"The left mouse button down event is the most likely event to have class handling in a control.","pos":[1296,1390]},{"content":"The class handling often marks the underlying &lt;xref:System.Windows.Input.Mouse&gt; class event as handled.","pos":[1391,1494],"source":" The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled."},{"content":"Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.","pos":[1495,1613]},{"content":"Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.","pos":[1614,1770]},{"content":"You can resolve the issue that is outlined in the preceding Important and still receive MouseDown events for left mouse button down events on a derived class that has class handling by using either of these solutions:      -   Attach handlers for the &lt;xref:System.Windows.UIElement3D.PreviewMouseDown&gt; event, which is not marked as handled by the controls.","pos":[1777,2133],"source":"       You can resolve the issue that is outlined in the preceding Important and still receive MouseDown events for left mouse button down events on a derived class that has class handling by using either of these solutions:      -   Attach handlers for the <xref:System.Windows.UIElement3D.PreviewMouseDown> event, which is not marked as handled by the controls."},{"content":"Notice that because this is a preview event, the route starts at the root and tunnels down to the control.","pos":[2134,2240]},{"content":"-   Register a handler on the control procedurally by calling &lt;xref:System.Windows.UIElement3D.AddHandler%2A&gt; and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.","pos":[2246,2501],"source":"      -   Register a handler on the control procedurally by calling <xref:System.Windows.UIElement3D.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data."},{"content":"MouseDown is introduced in the .NET Framework version 3.5.","pos":[2508,2566]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2568,2661],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_MouseDown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.MouseDownEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewMouseDown&gt;.","pos":[2667,3018],"source":"<a name=\"routedEventInfo_MouseDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseDownEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseDown>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnMouseDown%2A&gt; to implement class handling for this event in derived classes.","pos":[3024,3148],"source":"      -   Override <xref:System.Windows.UIElement3D.OnMouseDown%2A> to implement class handling for this event in derived classes."}]},{"pos":[175909,175921],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[176297,176383],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.MouseDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.MouseDown\"></xref> routed event."},{"pos":[176396,177100],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       MouseDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"MouseDownEvent is introduced in the .NET Framework version 3.5.","pos":[542,605]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[607,700],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[177261,177273],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[177629,177693],"content":"Occurs when the mouse pointer enters the bounds of this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the mouse pointer enters the bounds of this element.","pos":[0,64]}]},{"pos":[177706,179253],"content":"MouseEnter is a [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) that uses the direct event handling routing strategy. Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.       Although MouseEnter tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsMouseOver%2A> property value has changed from `false` to `true` on this element.       This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName> attached event for this class, so that MouseEnter is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the MouseEnter event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName> attached event and receive the same event data instance.       MouseEnter is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_MouseEnter\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseEnterEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnMouseEnter%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"MouseEnter is a <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> that uses the direct event handling routing strategy.","pos":[0,133],"source":"MouseEnter is a [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) that uses the direct event handling routing strategy."},{"content":"Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.","pos":[134,253]},{"content":"Although MouseEnter tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the &lt;xref:System.Windows.UIElement3D.IsMouseOver%2A&gt; property value has changed from <ph id=\"ph1\">`false`</ph> to <ph id=\"ph2\">`true`</ph> on this element.","pos":[260,501],"source":"       Although MouseEnter tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsMouseOver%2A> property value has changed from `false` to `true` on this element."},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt; attached event for this class, so that MouseEnter is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[508,768],"source":"       This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName> attached event for this class, so that MouseEnter is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the MouseEnter event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[769,983],"source":" Event handlers that are attached to the MouseEnter event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"MouseEnter is introduced in the .NET Framework version 3.5.","pos":[990,1049]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1051,1144],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_MouseEnter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.MouseEnterEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement3D.OnMouseEnter%2A&gt; to implement class handling for this event in derived classes.","pos":[1150,1528],"source":"<a name=\"routedEventInfo_MouseEnter\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseEnterEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnMouseEnter%2A> to implement class handling for this event in derived classes."}]},{"pos":[179424,179436],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[179817,179904],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.MouseEnter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.MouseEnter\"></xref> routed event."},{"pos":[179917,180622],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       MouseEnterEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"MouseEnterEvent is introduced in the .NET Framework version 3.5.","pos":[542,606]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[608,701],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[180784,180796],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[181152,181216],"content":"Occurs when the mouse pointer leaves the bounds of this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the mouse pointer leaves the bounds of this element.","pos":[0,64]}]},{"pos":[181229,182754],"content":"MouseLeave is a [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) that uses the direct event handling routing strategy. Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.       Although MouseLeave tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsMouseOver%2A> property value has changed from `true` to `false` on this element.       This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName> attached event for this class, so that MouseLeave is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the MouseLeave event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName> attached event and receive the same event data instance.       MouseLeave is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_MouseLeave\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseLeaveEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnMouseLeave%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"MouseLeave is a <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> that uses the direct event handling routing strategy.","pos":[0,133],"source":"MouseLeave is a [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) that uses the direct event handling routing strategy."},{"content":"Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.","pos":[134,253]},{"content":"Although MouseLeave tracks when the mouse leaves an element, this event more literally reports that the &lt;xref:System.Windows.UIElement3D.IsMouseOver%2A&gt; property value has changed from <ph id=\"ph1\">`true`</ph> to <ph id=\"ph2\">`false`</ph> on this element.","pos":[260,479],"source":"       Although MouseLeave tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsMouseOver%2A> property value has changed from `true` to `false` on this element."},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt; attached event for this class, so that MouseLeave is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[486,746],"source":"       This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName> attached event for this class, so that MouseLeave is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the MouseLeave event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[747,961],"source":" Event handlers that are attached to the MouseLeave event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"MouseLeave is introduced in the .NET Framework version 3.5.","pos":[968,1027]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1029,1122],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_MouseLeave\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.MouseLeaveEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement3D.OnMouseLeave%2A&gt; to implement class handling for this event in derived classes.","pos":[1128,1506],"source":"<a name=\"routedEventInfo_MouseLeave\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseLeaveEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnMouseLeave%2A> to implement class handling for this event in derived classes."}]},{"pos":[182925,182937],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[183318,183405],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.MouseLeave\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.MouseLeave\"></xref> routed event."},{"pos":[183418,184123],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       MouseLeaveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"MouseLeaveEvent is introduced in the .NET Framework version 3.5.","pos":[542,606]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[608,701],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[184285,184297],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[184698,184788],"content":"Occurs when the left mouse button is pressed while the mouse pointer is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the left mouse button is pressed while the mouse pointer is over this element.","pos":[0,90]}]},{"pos":[184801,188598],"content":"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.       This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route.       The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event. If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event. If you mark MouseLeftButtonDown handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> handled for all further listeners along the route, and on all related events. This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.       Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \"service\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class). The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data. For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.      > [!IMPORTANT] >  The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled. Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised. Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.       You can resolve the issue that is outlined in the preceding Important and still receive MouseLeftButtonDown events for left mouse button down events on a derived class that has class handling by using either of these solutions:      -   Attach handlers for the <xref:System.Windows.UIElement3D.PreviewMouseDown> event, which is not marked as handled by the controls. Notice that because this is a preview event, the route starts at the root and tunnels down to the control.      -   Register a handler on the control procedurally by calling <xref:System.Windows.UIElement3D.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.       MouseLeftButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_MouseLeftButtonDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseLeftButtonDownEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Although this <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement3D&gt;.","pos":[0,266],"source":"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>."},{"content":"This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.","pos":[273,531],"source":"       This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route."},{"content":"The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; event.","pos":[538,683],"source":"       The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event."},{"content":"If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement3D.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.","pos":[684,1039],"source":" If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event."},{"content":"If you mark MouseLeftButtonDown handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.","pos":[1040,1255],"source":" If you mark MouseLeftButtonDown handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> handled for all further listeners along the route, and on all related events."},{"content":"This possibly includes class-handler generated events such as &lt;xref:System.Windows.Controls.Control.MouseDoubleClick&gt;.","pos":[1256,1374],"source":" This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>."},{"content":"Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement3D&gt;) to be a mouse \"service\" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).","pos":[1381,1594],"source":"       Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \"service\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class)."},{"content":"The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.","pos":[1595,1743]},{"content":"For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id=\"ph1\">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement3D&gt;.","pos":[1744,2034],"source":" For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  The class handling often marks the underlying &lt;xref:System.Windows.Input.Mouse&gt; class event as handled.","pos":[2040,2161],"source":"      > [!IMPORTANT] >  The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled."},{"content":"Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.","pos":[2162,2280]},{"content":"Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.","pos":[2281,2437]},{"content":"You can resolve the issue that is outlined in the preceding Important and still receive MouseLeftButtonDown events for left mouse button down events on a derived class that has class handling by using either of these solutions:      -   Attach handlers for the &lt;xref:System.Windows.UIElement3D.PreviewMouseDown&gt; event, which is not marked as handled by the controls.","pos":[2444,2810],"source":"       You can resolve the issue that is outlined in the preceding Important and still receive MouseLeftButtonDown events for left mouse button down events on a derived class that has class handling by using either of these solutions:      -   Attach handlers for the <xref:System.Windows.UIElement3D.PreviewMouseDown> event, which is not marked as handled by the controls."},{"content":"Notice that because this is a preview event, the route starts at the root and tunnels down to the control.","pos":[2811,2917]},{"content":"-   Register a handler on the control procedurally by calling &lt;xref:System.Windows.UIElement3D.AddHandler%2A&gt; and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.","pos":[2923,3178],"source":"      -   Register a handler on the control procedurally by calling <xref:System.Windows.UIElement3D.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data."},{"content":"MouseLeftButtonDown is introduced in the .NET Framework version 3.5.","pos":[3185,3253]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[3255,3348],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_MouseLeftButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.MouseLeftButtonDownEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A&gt; to implement class handling for this event in derived classes.","pos":[3354,3765],"source":"<a name=\"routedEventInfo_MouseLeftButtonDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseLeftButtonDownEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes."}]},{"pos":[188790,188802],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[189228,189324],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.MouseLeftButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.MouseLeftButtonDown\"></xref> routed event."},{"pos":[189337,190051],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       MouseLeftButtonDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"MouseLeftButtonDownEvent is introduced in the .NET Framework version 3.5.","pos":[542,615]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[617,710],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[190222,190234],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[190625,190716],"content":"Occurs when the left mouse button is released while the mouse pointer is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the left mouse button is released while the mouse pointer is over this element.","pos":[0,91]}]},{"pos":[190729,193238],"content":"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.       This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route.       The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> event. If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event. If you mark MouseLeftButtonUp handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> handled for all further listeners along the route, and on all related events.       Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \"service\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class). The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data. For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.       MouseLeftButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_MouseLeftButtonUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseLeftButtonUpEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Although this <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement3D&gt;.","pos":[0,266],"source":"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>."},{"content":"This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.","pos":[273,529],"source":"       This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route."},{"content":"The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; event.","pos":[536,679],"source":"       The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> event."},{"content":"If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement3D.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.","pos":[680,1035],"source":" If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event."},{"content":"If you mark MouseLeftButtonUp handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.","pos":[1036,1247],"source":" If you mark MouseLeftButtonUp handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> handled for all further listeners along the route, and on all related events."},{"content":"Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement3D&gt;) to be a mouse \"service\" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).","pos":[1254,1467],"source":"       Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \"service\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class)."},{"content":"The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.","pos":[1468,1616]},{"content":"For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id=\"ph1\">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement3D&gt;.","pos":[1617,1907],"source":" For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>."},{"content":"MouseLeftButtonUp is introduced in the .NET Framework version 3.5.","pos":[1914,1980]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1982,2075],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_MouseLeftButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.MouseLeftButtonUpEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A&gt; to implement class handling for this event in derived classes.","pos":[2081,2486],"source":"<a name=\"routedEventInfo_MouseLeftButtonUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseLeftButtonUpEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes."}]},{"pos":[193428,193440],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[193856,193950],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.MouseLeftButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.MouseLeftButtonUp\"></xref> routed event."},{"pos":[193963,194675],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       MouseLeftButtonUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"MouseLeftButtonUpEvent is introduced in the .NET Framework version 3.5.","pos":[542,613]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[615,708],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[194844,194856],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[195207,195267],"content":"Occurs when the mouse pointer moves while over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the mouse pointer moves while over this element.","pos":[0,60]}]},{"pos":[195280,196409],"content":"This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName> attached event for this class, so that MouseMove is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the MouseMove event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName> attached event and receive the same event data instance.       MouseMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_MouseMove\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseMoveEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.MouseEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseMove>.      -   Override <xref:System.Windows.UIElement3D.OnMouseMove%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt; attached event for this class, so that MouseMove is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,258],"source":"This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName> attached event for this class, so that MouseMove is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the MouseMove event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[259,471],"source":" Event handlers that are attached to the MouseMove event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"MouseMove is introduced in the .NET Framework version 3.5.","pos":[478,536]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[538,631],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_MouseMove\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.MouseMoveEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewMouseMove&gt;.","pos":[637,982],"source":"<a name=\"routedEventInfo_MouseMove\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseMoveEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.MouseEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseMove>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnMouseMove%2A&gt; to implement class handling for this event in derived classes.","pos":[988,1112],"source":"      -   Override <xref:System.Windows.UIElement3D.OnMouseMove%2A> to implement class handling for this event in derived classes."}]},{"pos":[196579,196591],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[196967,197053],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.MouseMove\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.MouseMove\"></xref> routed event."},{"pos":[197066,197770],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       MouseMoveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"MouseMoveEvent is introduced in the .NET Framework version 3.5.","pos":[542,605]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[607,700],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[197931,197943],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[198349,198440],"content":"Occurs when the right mouse button is pressed while the mouse pointer is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the right mouse button is pressed while the mouse pointer is over this element.","pos":[0,91]}]},{"pos":[198453,201331],"content":"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.       This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route.       The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event. If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event. If you mark MouseRightButtonDown handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> handled for all further listeners along the route, and on all related events. This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.       Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \"service\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class). The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data. For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.       Right button mouse events frequently have native handling in application scenarios. For instance, a right mouse button down might display a context menu. See [ContextMenu Overview](~/add/includes/ajax-current-ext-md.md).       MouseRightButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_MouseRightButtonDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseRightButtonDownEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Although this <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement3D&gt;.","pos":[0,266],"source":"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>."},{"content":"This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.","pos":[273,531],"source":"       This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route."},{"content":"The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; event.","pos":[538,683],"source":"       The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event."},{"content":"If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement3D.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.","pos":[684,1039],"source":" If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event."},{"content":"If you mark MouseRightButtonDown handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.","pos":[1040,1256],"source":" If you mark MouseRightButtonDown handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> handled for all further listeners along the route, and on all related events."},{"content":"This possibly includes class-handler generated events such as &lt;xref:System.Windows.Controls.Control.MouseDoubleClick&gt;.","pos":[1257,1375],"source":" This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>."},{"content":"Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement3D&gt;) to be a mouse \"service\" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).","pos":[1382,1595],"source":"       Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \"service\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class)."},{"content":"The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.","pos":[1596,1744]},{"content":"For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id=\"ph1\">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement3D&gt;.","pos":[1745,2035],"source":" For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>."},{"content":"Right button mouse events frequently have native handling in application scenarios.","pos":[2042,2125]},{"content":"For instance, a right mouse button down might display a context menu.","pos":[2126,2195]},{"content":"See <bpt id=\"p1\">[</bpt>ContextMenu Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2196,2262],"source":" See [ContextMenu Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"MouseRightButtonDown is introduced in the .NET Framework version 3.5.","pos":[2269,2338]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2340,2433],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_MouseRightButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.MouseRightButtonDownEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A&gt; to implement class handling for this event in derived classes.","pos":[2439,2853],"source":"<a name=\"routedEventInfo_MouseRightButtonDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseRightButtonDownEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes."}]},{"pos":[201524,201536],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[201967,202064],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.MouseRightButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.MouseRightButtonDown\"></xref> routed event."},{"pos":[202077,202792],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       MouseRightButtonDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"MouseRightButtonDownEvent is introduced in the .NET Framework version 3.5.","pos":[542,616]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[618,711],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[202964,202976],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[203372,203464],"content":"Occurs when the right mouse button is released while the mouse pointer is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the right mouse button is released while the mouse pointer is over this element.","pos":[0,92]}]},{"pos":[203477,205993],"content":"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.       This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route.       The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> event. If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event. If you mark MouseRightButtonUp handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> handled for all further listeners along the route, and on all related events.       Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \"service\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class). The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data. For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.       MouseRightButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_MouseRightButtonUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseRightButtonUpEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Although this <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement3D&gt;.","pos":[0,266],"source":"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>."},{"content":"This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.","pos":[273,529],"source":"       This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route."},{"content":"The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; event.","pos":[536,679],"source":"       The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> event."},{"content":"If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement3D.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.","pos":[680,1035],"source":" If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event."},{"content":"If you mark MouseRightButtonUp handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.","pos":[1036,1250],"source":" If you mark MouseRightButtonUp handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> handled for all further listeners along the route, and on all related events."},{"content":"Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement3D&gt;) to be a mouse \"service\" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).","pos":[1257,1470],"source":"       Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \"service\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class)."},{"content":"The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.","pos":[1471,1619]},{"content":"For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id=\"ph1\">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement3D&gt;.","pos":[1620,1910],"source":" For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>."},{"content":"MouseRightButtonUp is introduced in the .NET Framework version 3.5.","pos":[1917,1984]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1986,2079],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_MouseRightButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.MouseRightButtonUpEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A&gt; to implement class handling for this event in derived classes.","pos":[2085,2493],"source":"<a name=\"routedEventInfo_MouseRightButtonUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseRightButtonUpEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes."}]},{"pos":[206184,206196],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[206617,206712],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.MouseRightButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.MouseRightButtonUp\"></xref> routed event."},{"pos":[206725,207438],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       MouseRightButtonUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"MouseRightButtonUpEvent is introduced in the .NET Framework version 3.5.","pos":[542,614]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[616,709],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[207608,207620],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[207961,208020],"content":"Occurs when any mouse button is released over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when any mouse button is released over this element.","pos":[0,59]}]},{"pos":[208033,209867],"content":"This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> attached event for this class, so that MouseUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the MouseUp event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> attached event and receive the same event data instance.       The MouseUp event is often raised together with either <xref:System.Windows.UIElement3D.MouseLeftButtonUp> or <xref:System.Windows.UIElement3D.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons. <xref:System.Windows.UIElement3D.MouseLeftButtonUp> and <xref:System.Windows.UIElement3D.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event reaches this element along the event route. See Remarks for <xref:System.Windows.UIElement3D.MouseLeftButtonUp> or <xref:System.Windows.UIElement3D.MouseRightButtonUp>.       MouseUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_MouseUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseUpEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseUp>.      -   Override <xref:System.Windows.UIElement3D.OnMouseUp%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; attached event for this class, so that MouseUp is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,254],"source":"This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> attached event for this class, so that MouseUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the MouseUp event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[255,463],"source":" Event handlers that are attached to the MouseUp event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"The MouseUp event is often raised together with either &lt;xref:System.Windows.UIElement3D.MouseLeftButtonUp&gt; or &lt;xref:System.Windows.UIElement3D.MouseRightButtonUp&gt;, which correspond to a release of one of the two standard mouse buttons.","pos":[470,705],"source":"       The MouseUp event is often raised together with either <xref:System.Windows.UIElement3D.MouseLeftButtonUp> or <xref:System.Windows.UIElement3D.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons."},{"content":"&lt;xref:System.Windows.UIElement3D.MouseLeftButtonUp&gt; and &lt;xref:System.Windows.UIElement3D.MouseRightButtonUp&gt; are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; event reaches this element along the event route.","pos":[706,1053],"source":" <xref:System.Windows.UIElement3D.MouseLeftButtonUp> and <xref:System.Windows.UIElement3D.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event reaches this element along the event route."},{"content":"See Remarks for &lt;xref:System.Windows.UIElement3D.MouseLeftButtonUp&gt; or &lt;xref:System.Windows.UIElement3D.MouseRightButtonUp&gt;.","pos":[1054,1178],"source":" See Remarks for <xref:System.Windows.UIElement3D.MouseLeftButtonUp> or <xref:System.Windows.UIElement3D.MouseRightButtonUp>."},{"content":"MouseUp is introduced in the .NET Framework version 3.5.","pos":[1185,1241]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1243,1336],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_MouseUp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.MouseUpEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewMouseUp&gt;.","pos":[1342,1687],"source":"<a name=\"routedEventInfo_MouseUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseUpEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseUp>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnMouseUp%2A&gt; to implement class handling for this event in derived classes.","pos":[1693,1815],"source":"      -   Override <xref:System.Windows.UIElement3D.OnMouseUp%2A> to implement class handling for this event in derived classes."}]},{"pos":[210047,210059],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[210425,210509],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.MouseUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.MouseUp\"></xref> routed event."},{"pos":[210522,211224],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       MouseUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"MouseUpEvent is introduced in the .NET Framework version 3.5.","pos":[542,603]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[605,698],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[211383,211395],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[211751,211841],"content":"Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.","pos":[0,90]}]},{"pos":[211854,213218],"content":"Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the MouseWheel event from a focused or captured element, the mouse pointer might actually be over another element.       This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName> attached event for this class, so that MouseWheel is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the MouseWheel event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName> attached event and receive the same event data instance.       MouseWheel is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_MouseWheel\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseWheelEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.MouseWheelEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseWheel>.      -   Override <xref:System.Windows.UIElement3D.OnMouseWheel%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the MouseWheel event from a focused or captured element, the mouse pointer might actually be over another element.","pos":[0,212]},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt; attached event for this class, so that MouseWheel is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[219,479],"source":"       This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName> attached event for this class, so that MouseWheel is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the MouseWheel event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[480,694],"source":" Event handlers that are attached to the MouseWheel event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"MouseWheel is introduced in the .NET Framework version 3.5.","pos":[701,760]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[762,855],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_MouseWheel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.MouseWheelEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.MouseWheelEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewMouseWheel&gt;.","pos":[861,1214],"source":"<a name=\"routedEventInfo_MouseWheel\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.MouseWheelEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.MouseWheelEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseWheel>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnMouseWheel%2A&gt; to implement class handling for this event in derived classes.","pos":[1220,1345],"source":"      -   Override <xref:System.Windows.UIElement3D.OnMouseWheel%2A> to implement class handling for this event in derived classes."}]},{"pos":[213399,213411],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[213792,213879],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.MouseWheel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.MouseWheel\"></xref> routed event."},{"pos":[213892,214597],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       MouseWheelEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"MouseWheelEvent is introduced in the .NET Framework version 3.5.","pos":[542,606]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[608,701],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[214759,214771],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[215255,215465],"content":"Attempts to move focus from this element to another element. The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to move focus from this element to another element. The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.","pos":[0,210],"nodes":[{"content":"Attempts to move focus from this element to another element.","pos":[0,60]},{"content":"The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.","pos":[61,210]}]}]},{"pos":[215478,215869],"content":"Make sure you check the return value of this method. A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.       MoveFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Make sure you check the return value of this method.","pos":[0,52]},{"content":"A return value of <ph id=\"ph1\">`false`</ph> might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.","pos":[53,229],"source":" A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap."},{"content":"MoveFocus is introduced in the .NET Framework version 3.5.","pos":[236,294]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[296,389],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[216076,216219],"content":"A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.","needQuote":true,"needEscape":true,"nodes":[{"content":"A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.","pos":[0,143]}]},{"pos":[216278,216455],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the requested traversal was performed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the requested traversal was performed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[217009,217103],"content":"Provides class handling for when an access key that is meaningful for this element is invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides class handling for when an access key that is meaningful for this element is invoked.","pos":[0,94]}]},{"pos":[217116,217634],"content":"There is no actual AccessKey event in the <xref:System.Windows.UIElement3D> class, or elsewhere, which you can raise or attach handlers for. Instead, the event is originated via a dedicated manager class, <xref:System.Windows.Input.AccessKeyManager>, which post-processes all input to search for access keys that are applicable to the entire input model.       OnAccessKey is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"There is no actual AccessKey event in the &lt;xref:System.Windows.UIElement3D&gt; class, or elsewhere, which you can raise or attach handlers for.","pos":[0,140],"source":"There is no actual AccessKey event in the <xref:System.Windows.UIElement3D> class, or elsewhere, which you can raise or attach handlers for."},{"content":"Instead, the event is originated via a dedicated manager class, &lt;xref:System.Windows.Input.AccessKeyManager&gt;, which post-processes all input to search for access keys that are applicable to the entire input model.","pos":[141,354],"source":" Instead, the event is originated via a dedicated manager class, <xref:System.Windows.Input.AccessKeyManager>, which post-processes all input to search for access keys that are applicable to the entire input model."},{"content":"OnAccessKey is introduced in the .NET Framework version 3.5.","pos":[361,421]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[423,516],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[217838,218112],"content":"The event data to the access key event. The event data reports which key was invoked, and indicate whether the <xref href=\"System.Windows.Input.AccessKeyManager\"></xref> object that controls the sending of these events also sent this access key invocation to other elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data to the access key event.","pos":[0,39]},{"content":"The event data reports which key was invoked, and indicate whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.AccessKeyManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that controls the sending of these events also sent this access key invocation to other elements.","pos":[40,274],"source":" The event data reports which key was invoked, and indicate whether the <xref href=\"System.Windows.Input.AccessKeyManager\"></xref> object that controls the sending of these events also sent this access key invocation to other elements."}]},{"pos":[218587,218786],"content":"Returns class-specific <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.Peers.AutomationPeer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementations for the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure.","needQuote":true,"needEscape":true,"source":"Returns class-specific <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> implementations for the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure."},{"pos":[218798,218964],"content":"OnCreateAutomationPeer is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"OnCreateAutomationPeer is introduced in the .NET Framework version 3.5.","pos":[0,71]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[73,166],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[219189,219290],"content":"The type-specific <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.Peers.AutomationPeer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation.","needQuote":true,"needEscape":true,"source":"The type-specific <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> implementation."},{"pos":[219820,220057],"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,237],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,177],"source":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[178,237]}]}]},{"pos":[221692,221775],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.DragEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.DragEventArgs\"></xref> that contains the event data."},{"pos":[222294,222531],"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,237],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,177],"source":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[178,237]}]}]},{"pos":[224166,224249],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.DragEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.DragEventArgs\"></xref> that contains the event data."},{"pos":[224763,224999],"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,236],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.DragDrop.DragOver?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,176],"source":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[177,236]}]}]},{"pos":[226632,226715],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.DragEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.DragEventArgs\"></xref> that contains the event data."},{"pos":[227208,227440],"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,232],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.DragDrop.Drop?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,172],"source":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[173,232]}]}]},{"pos":[229065,229148],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.DragEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.DragEventArgs\"></xref> that contains the event data."},{"pos":[229717,229957],"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,240],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,180],"source":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[181,240]}]}]},{"pos":[231614,231705],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.GiveFeedbackEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.GiveFeedbackEventArgs\"></xref> that contains the event data."},{"pos":[232232,232346],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.GotFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event by using the event data provided.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.UIElement3D.GotFocus\"></xref> routed event by using the event data provided."},{"pos":[233243,233438],"content":"A <xref href=\"System.Windows.RoutedEventArgs\"></xref> that contains event data. This event data must contain the identifier for the <xref href=\"System.Windows.UIElement3D.GotFocus\"></xref> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.RoutedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains event data.","pos":[0,79],"source":"A <xref href=\"System.Windows.RoutedEventArgs\"></xref> that contains event data."},{"content":"This event data must contain the identifier for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.GotFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","pos":[80,195],"source":" This event data must contain the identifier for the <xref href=\"System.Windows.UIElement3D.GotFocus\"></xref> event."}]},{"pos":[234083,234333],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,250],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,190],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[191,250]}]}]},{"pos":[236026,236131],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.KeyboardFocusChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.KeyboardFocusChangedEventArgs\"></xref> that contains the event data."},{"pos":[236704,236950],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,246],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,186],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[187,246]}]}]},{"pos":[238611,238701],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.MouseEventArgs\"></xref> that contains the event data."},{"pos":[239283,239531],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,248],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,188],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[189,248]}]}]},{"pos":[241196,241287],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data."},{"pos":[241860,242022],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.GotTouchCapture\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event that occurs when a touch is captured to this element.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement3D.GotTouchCapture\"></xref> routed event that occurs when a touch is captured to this element."},{"pos":[242034,242308],"content":"The OnGotTouchCapture method has no default implementation. Override OnGotTouchCapture in a derived class to handle the <xref:System.Windows.UIElement3D.GotTouchCapture> event. Be sure to call the base class’s OnGotTouchCapture method so that base classes receive the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The OnGotTouchCapture method has no default implementation. Override OnGotTouchCapture in a derived class to handle the <xref:System.Windows.UIElement3D.GotTouchCapture> event. Be sure to call the base class’s OnGotTouchCapture method so that base classes receive the event.","pos":[0,274],"nodes":[{"content":"The OnGotTouchCapture method has no default implementation.","pos":[0,59]},{"content":"Override OnGotTouchCapture in a derived class to handle the &lt;xref:System.Windows.UIElement3D.GotTouchCapture&gt; event.","pos":[60,176],"source":" Override OnGotTouchCapture in a derived class to handle the <xref:System.Windows.UIElement3D.GotTouchCapture> event."},{"content":"Be sure to call the base class’s OnGotTouchCapture method so that base classes receive the event.","pos":[177,274]}]}]},{"pos":[242509,242597],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.TouchEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data."},{"pos":[243302,243493],"content":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsKeyboardFocusedChanged\"></xref> event is raised on this element. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.IsKeyboardFocusedChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event is raised on this element.","pos":[0,131],"source":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsKeyboardFocusedChanged\"></xref> event is raised on this element."},{"content":"Implement this method to add class handling for this event.","pos":[132,191]}]},{"pos":[243506,244491],"content":"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> dependency property changes. The virtual method is called first and can manipulate the event data as necessary. Then the <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> event is raised with that same event data instance. Notice that the  <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> event is not a routed event. Therefore, you cannot mark it as handled in the class handler.       This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.       OnIsKeyboardFocusedChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This virtual method is called when the value of the &lt;xref:System.Windows.UIElement3D.IsKeyboardFocused%2A&gt; dependency property changes.","pos":[0,135],"source":"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> dependency property changes."},{"content":"The virtual method is called first and can manipulate the event data as necessary.","pos":[136,218]},{"content":"Then the &lt;xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged&gt; event is raised with that same event data instance.","pos":[219,338],"source":" Then the <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> event is raised with that same event data instance."},{"content":"Notice that the  &lt;xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged&gt; event is not a routed event.","pos":[339,443],"source":" Notice that the  <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> event is not a routed event."},{"content":"Therefore, you cannot mark it as handled in the class handler.","pos":[444,506]},{"content":"This method has no default implementation.","pos":[513,555]},{"content":"Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.","pos":[556,708]},{"content":"You may call base either before or after your special handling, depending on your requirements.","pos":[709,804]},{"content":"OnIsKeyboardFocusedChanged is introduced in the .NET Framework version 3.5.","pos":[811,886]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[888,981],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[244730,244834],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> that contains the event data."},{"pos":[245568,245761],"content":"Invoked just before the <xref href=\"System.Windows.UIElement3D.IsKeyboardFocusWithinChanged\"></xref> event is raised by this element. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked just before the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.IsKeyboardFocusWithinChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event is raised by this element.","pos":[0,133],"source":"Invoked just before the <xref href=\"System.Windows.UIElement3D.IsKeyboardFocusWithinChanged\"></xref> event is raised by this element."},{"content":"Implement this method to add class handling for this event.","pos":[134,193]}]},{"pos":[245774,246784],"content":"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> dependency property changes its value. The virtual method is called first and can manipulate the event data as necessary. Then the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> event is raised with that same event data instance. Notice that the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> event is not a routed event. Therefore, you cannot mark it as handled in the class handler.       This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.       OnIsKeyboardFocusWithinChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This virtual method is called when the value of the &lt;xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A&gt; dependency property changes its value.","pos":[0,149],"source":"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> dependency property changes its value."},{"content":"The virtual method is called first and can manipulate the event data as necessary.","pos":[150,232]},{"content":"Then the &lt;xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged&gt; event is raised with that same event data instance.","pos":[233,356],"source":" Then the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> event is raised with that same event data instance."},{"content":"Notice that the &lt;xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged&gt; event is not a routed event.","pos":[357,464],"source":" Notice that the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> event is not a routed event."},{"content":"Therefore, you cannot mark it as handled in the class handler.","pos":[465,527]},{"content":"This method has no default implementation.","pos":[534,576]},{"content":"Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.","pos":[577,729]},{"content":"You may call base either before or after your special handling, depending on your requirements.","pos":[730,825]},{"content":"OnIsKeyboardFocusWithinChanged is introduced in the .NET Framework version 3.5.","pos":[832,911]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[913,1006],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[247027,247129],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> that contains the event data."},{"pos":[247837,248026],"content":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsMouseCapturedChanged\"></xref> event is raised on this element. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.IsMouseCapturedChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event is raised on this element.","pos":[0,129],"source":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsMouseCapturedChanged\"></xref> event is raised on this element."},{"content":"Implement this method to add class handling for this event.","pos":[130,189]}]},{"pos":[248039,249025],"content":"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> dependency property changes its value. The virtual method is called first and can manipulate the event data as necessary. Then the <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> event is raised with that same event data instance. Notice that the <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> event is not a routed event. Therefore, you cannot mark it as handled in the class handler.       This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.       OnIsMouseCapturedChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This virtual method is called when the value of the &lt;xref:System.Windows.UIElement3D.IsMouseCaptured%2A&gt; dependency property changes its value.","pos":[0,143],"source":"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> dependency property changes its value."},{"content":"The virtual method is called first and can manipulate the event data as necessary.","pos":[144,226]},{"content":"Then the &lt;xref:System.Windows.UIElement3D.IsMouseCapturedChanged&gt; event is raised with that same event data instance.","pos":[227,344],"source":" Then the <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> event is raised with that same event data instance."},{"content":"Notice that the &lt;xref:System.Windows.UIElement3D.IsMouseCapturedChanged&gt; event is not a routed event.","pos":[345,446],"source":" Notice that the <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> event is not a routed event."},{"content":"Therefore, you cannot mark it as handled in the class handler.","pos":[447,509]},{"content":"This method has no default implementation.","pos":[516,558]},{"content":"Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.","pos":[559,711]},{"content":"You may call base either before or after your special handling, depending on your requirements.","pos":[712,807]},{"content":"OnIsMouseCapturedChanged is introduced in the .NET Framework version 3.5.","pos":[814,887]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[889,982],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[249262,249366],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> that contains the event data."},{"pos":[250093,250287],"content":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsMouseCaptureWithinChanged\"></xref> event is raised on this element. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.IsMouseCaptureWithinChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event is raised on this element.","pos":[0,134],"source":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsMouseCaptureWithinChanged\"></xref> event is raised on this element."},{"content":"Implement this method to add class handling for this event.","pos":[135,194]}]},{"pos":[250299,250472],"content":"OnIsMouseCaptureWithinChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"OnIsMouseCaptureWithinChanged is introduced in the .NET Framework version 3.5.","pos":[0,78]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[80,173],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[250713,250815],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> that contains the event data."},{"pos":[251542,251735],"content":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsMouseDirectlyOverChanged\"></xref> event is raised on this element. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.IsMouseDirectlyOverChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event is raised on this element.","pos":[0,133],"source":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsMouseDirectlyOverChanged\"></xref> event is raised on this element."},{"content":"Implement this method to add class handling for this event.","pos":[134,193]}]},{"pos":[251748,252750],"content":"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A> dependency property changes its value. The virtual method is called first and can manipulate the event data as necessary. Then the <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> event is raised with that same event data instance. Notice that the <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> event is not a routed event. Therefore, you cannot mark it as handled in the class handler.       This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.       OnIsMouseDirectlyOverChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This virtual method is called when the value of the &lt;xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A&gt; dependency property changes its value.","pos":[0,147],"source":"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A> dependency property changes its value."},{"content":"The virtual method is called first and can manipulate the event data as necessary.","pos":[148,230]},{"content":"Then the &lt;xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged&gt; event is raised with that same event data instance.","pos":[231,352],"source":" Then the <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> event is raised with that same event data instance."},{"content":"Notice that the &lt;xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged&gt; event is not a routed event.","pos":[353,458],"source":" Notice that the <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> event is not a routed event."},{"content":"Therefore, you cannot mark it as handled in the class handler.","pos":[459,521]},{"content":"This method has no default implementation.","pos":[528,570]},{"content":"Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.","pos":[571,723]},{"content":"You may call base either before or after your special handling, depending on your requirements.","pos":[724,819]},{"content":"OnIsMouseDirectlyOverChanged is introduced in the .NET Framework version 3.5.","pos":[826,903]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[905,998],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[252991,253095],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> that contains the event data."},{"pos":[253806,253996],"content":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsStylusCapturedChanged\"></xref> event is raised on this element. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.IsStylusCapturedChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event is raised on this element.","pos":[0,130],"source":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsStylusCapturedChanged\"></xref> event is raised on this element."},{"content":"Implement this method to add class handling for this event.","pos":[131,190]}]},{"pos":[254009,254941],"content":"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> dependency property changes its value. The virtual method is called first and can manipulate the event data as necessary. Then the <xref:System.Windows.UIElement3D.IsStylusCapturedChanged> event is raised with that same event data instance. Notice that the event is not a routed event. Therefore, you cannot mark it as handled in the class handler.       This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.       OnIsStylusCapturedChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This virtual method is called when the value of the &lt;xref:System.Windows.UIElement3D.IsStylusCaptured%2A&gt; dependency property changes its value.","pos":[0,144],"source":"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> dependency property changes its value."},{"content":"The virtual method is called first and can manipulate the event data as necessary.","pos":[145,227]},{"content":"Then the &lt;xref:System.Windows.UIElement3D.IsStylusCapturedChanged&gt; event is raised with that same event data instance.","pos":[228,346],"source":" Then the <xref:System.Windows.UIElement3D.IsStylusCapturedChanged> event is raised with that same event data instance."},{"content":"Notice that the event is not a routed event.","pos":[347,391]},{"content":"Therefore, you cannot mark it as handled in the class handler.","pos":[392,454]},{"content":"This method has no default implementation.","pos":[461,503]},{"content":"Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.","pos":[504,656]},{"content":"You may call base either before or after your special handling, depending on your requirements.","pos":[657,752]},{"content":"OnIsStylusCapturedChanged is introduced in the .NET Framework version 3.5.","pos":[759,833]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[835,928],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[255179,255281],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> that contains the event data."},{"pos":[256014,256209],"content":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsStylusCaptureWithinChanged\"></xref> event is raised on this element. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.IsStylusCaptureWithinChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event is raised on this element.","pos":[0,135],"source":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsStylusCaptureWithinChanged\"></xref> event is raised on this element."},{"content":"Implement this method to add class handling for this event.","pos":[136,195]}]},{"pos":[256222,257169],"content":"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A> dependency property changes its value. The virtual method is called first and can manipulate the event data as necessary. Then the <xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged> event is raised with that same event data instance. Notice that the event is not a routed event. Therefore, you cannot mark it as handled in the class handler.       This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.       OnIsStylusCaptureWithinChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This virtual method is called when the value of the &lt;xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A&gt; dependency property changes its value.","pos":[0,149],"source":"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A> dependency property changes its value."},{"content":"The virtual method is called first and can manipulate the event data as necessary.","pos":[150,232]},{"content":"Then the &lt;xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged&gt; event is raised with that same event data instance.","pos":[233,356],"source":" Then the <xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged> event is raised with that same event data instance."},{"content":"Notice that the event is not a routed event.","pos":[357,401]},{"content":"Therefore, you cannot mark it as handled in the class handler.","pos":[402,464]},{"content":"This method has no default implementation.","pos":[471,513]},{"content":"Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.","pos":[514,666]},{"content":"You may call base either before or after your special handling, depending on your requirements.","pos":[667,762]},{"content":"OnIsStylusCaptureWithinChanged is introduced in the .NET Framework version 3.5.","pos":[769,848]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[850,943],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[257412,257516],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> that contains the event data."},{"pos":[258249,258443],"content":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsStylusDirectlyOverChanged\"></xref> event is raised on this element. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.IsStylusDirectlyOverChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event is raised on this element.","pos":[0,134],"source":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsStylusDirectlyOverChanged\"></xref> event is raised on this element."},{"content":"Implement this method to add class handling for this event.","pos":[135,194]}]},{"pos":[258456,259399],"content":"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A> dependency property changes its value. The virtual method is called first and can manipulate the event data as necessary. Then the <xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged> event is raised with that same event data instance. Notice that the event is not a routed event. Therefore you cannot mark it as handled in the class handler.       This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.       OnIsStylusDirectlyOverChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This virtual method is called when the value of the &lt;xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A&gt; dependency property changes its value.","pos":[0,148],"source":"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A> dependency property changes its value."},{"content":"The virtual method is called first and can manipulate the event data as necessary.","pos":[149,231]},{"content":"Then the &lt;xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged&gt; event is raised with that same event data instance.","pos":[232,354],"source":" Then the <xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged> event is raised with that same event data instance."},{"content":"Notice that the event is not a routed event.","pos":[355,399]},{"content":"Therefore you cannot mark it as handled in the class handler.","pos":[400,461]},{"content":"This method has no default implementation.","pos":[468,510]},{"content":"Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.","pos":[511,663]},{"content":"You may call base either before or after your special handling, depending on your requirements.","pos":[664,759]},{"content":"OnIsStylusDirectlyOverChanged is introduced in the .NET Framework version 3.5.","pos":[766,844]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[846,939],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[259641,259745],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> that contains the event data."},{"pos":[260279,260520],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,241],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,181],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[182,241]}]}]},{"pos":[262476,262564],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.KeyEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.KeyEventArgs\"></xref> that contains the event data."},{"pos":[263068,263307],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,239],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,179],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[180,239]}]}]},{"pos":[265257,265345],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.KeyEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.KeyEventArgs\"></xref> that contains the event data."},{"pos":[265870,265993],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.LostFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event by using the event data that is provided.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.UIElement3D.LostFocus\"></xref> routed event by using the event data that is provided."},{"pos":[266882,267078],"content":"A <xref href=\"System.Windows.RoutedEventArgs\"></xref> that contains event data. This event data must contain the identifier for the <xref href=\"System.Windows.UIElement3D.LostFocus\"></xref> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.RoutedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains event data.","pos":[0,79],"source":"A <xref href=\"System.Windows.RoutedEventArgs\"></xref> that contains event data."},{"content":"This event data must contain the identifier for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.LostFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","pos":[80,196],"source":" This event data must contain the identifier for the <xref href=\"System.Windows.UIElement3D.LostFocus\"></xref> event."}]},{"pos":[267729,267980],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,251],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,191],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[192,251]}]}]},{"pos":[269675,269776],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.KeyboardFocusChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.KeyboardFocusChangedEventArgs\"></xref> that contains event data."},{"pos":[270355,270602],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,247],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,187],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[188,247]}]}]},{"pos":[272265,272351],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.MouseEventArgs\"></xref> that contains event data."},{"pos":[272939,273188],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,249],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,189],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[190,249]}]}]},{"pos":[274855,274942],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains event data."},{"pos":[275521,275683],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.LostTouchCapture\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event that occurs when this element loses a touch capture.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement3D.LostTouchCapture\"></xref> routed event that occurs when this element loses a touch capture."},{"pos":[275695,275973],"content":"The OnLostTouchCapture method has no default implementation. Override OnLostTouchCapture in a derived class to handle the <xref:System.Windows.UIElement3D.LostTouchCapture> event. Be sure to call the base class’s OnLostTouchCapture method so that base classes receive the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The OnLostTouchCapture method has no default implementation. Override OnLostTouchCapture in a derived class to handle the <xref:System.Windows.UIElement3D.LostTouchCapture> event. Be sure to call the base class’s OnLostTouchCapture method so that base classes receive the event.","pos":[0,278],"nodes":[{"content":"The OnLostTouchCapture method has no default implementation.","pos":[0,60]},{"content":"Override OnLostTouchCapture in a derived class to handle the &lt;xref:System.Windows.UIElement3D.LostTouchCapture&gt; event.","pos":[61,179],"source":" Override OnLostTouchCapture in a derived class to handle the <xref:System.Windows.UIElement3D.LostTouchCapture> event."},{"content":"Be sure to call the base class’s OnLostTouchCapture method so that base classes receive the event.","pos":[180,278]}]}]},{"pos":[276175,276263],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.TouchEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data."},{"pos":[276836,277076],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,240],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,180],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[181,240]}]}]},{"pos":[280650,280841],"content":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. This event data reports details about the mouse button that was pressed and the handled state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseButtonEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","pos":[0,96],"source":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data."},{"content":"This event data reports details about the mouse button that was pressed and the handled state.","pos":[97,191]}]},{"pos":[281382,281585],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt; attached event is raised on this element. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt; attached event is raised on this element. Implement this method to add class handling for this event.","pos":[0,203],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event is raised on this element.","pos":[0,143],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt; attached event is raised on this element."},{"content":"Implement this method to add class handling for this event.","pos":[144,203]}]}]},{"pos":[281598,282581],"content":"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.       The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event, with a direct routing strategy. Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.       OnMouseEnter is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This method has no default implementation.","pos":[0,42]},{"content":"Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.","pos":[43,195]},{"content":"You may call base either before or after your special handling, depending on your requirements.","pos":[196,291]},{"content":"The purpose of this method is similar to the <ph id=\"ph1\">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.","pos":[298,576],"source":"       The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler."},{"content":"In this case the matching event is a routed event, with a direct routing strategy.","pos":[577,659]},{"content":"Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify <ph id=\"ph1\">`handledEventsToo`</ph>) from being invoked.","pos":[660,816],"source":" Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked."},{"content":"OnMouseEnter is introduced in the .NET Framework version 3.5.","pos":[823,884]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[886,979],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[282778,282868],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.MouseEventArgs\"></xref> that contains the event data."},{"pos":[283410,283613],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt; attached event is raised on this element. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt; attached event is raised on this element. Implement this method to add class handling for this event.","pos":[0,203],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event is raised on this element.","pos":[0,143],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt; attached event is raised on this element."},{"content":"Implement this method to add class handling for this event.","pos":[144,203]}]}]},{"pos":[283626,284609],"content":"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.       The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event, with a direct routing strategy. Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.       OnMouseLeave is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This method has no default implementation.","pos":[0,42]},{"content":"Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.","pos":[43,195]},{"content":"You may call base either before or after your special handling, depending on your requirements.","pos":[196,291]},{"content":"The purpose of this method is similar to the <ph id=\"ph1\">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.","pos":[298,576],"source":"       The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler."},{"content":"In this case the matching event is a routed event, with a direct routing strategy.","pos":[577,659]},{"content":"Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify <ph id=\"ph1\">`handledEventsToo`</ph>) from being invoked.","pos":[660,816],"source":" Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked."},{"content":"OnMouseLeave is introduced in the .NET Framework version 3.5.","pos":[823,884]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[886,979],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[284806,284896],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.MouseEventArgs\"></xref> that contains the event data."},{"pos":[285513,285706],"content":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.MouseLeftButtonDown\"></xref> routed event is raised on this element. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.MouseLeftButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event is raised on this element.","pos":[0,133],"source":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.MouseLeftButtonDown\"></xref> routed event is raised on this element."},{"content":"Implement this method to add class handling for this event.","pos":[134,193]}]},{"pos":[285719,287887],"content":"The <xref:System.Windows.UIElement3D.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way. <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseLeftButtonDown>. Although you can mark the <xref:System.Windows.UIElement3D.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route. However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.       The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> and converts it to an appropriate local event. If you want to override this logic, you must create a derived class. In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>. You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnMouseLeftButtonDown.       Alternatively, you can override this method in order to change event handling for a specific mouse state. Whether you choose to call the base implementation depends on your scenario. Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnMouseLeftButtonDown. For example, you can derive from <xref:System.Windows.Controls.Button> and override OnMouseLeftButtonDown in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.       OnMouseLeftButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.UIElement3D.MouseLeftButtonDown&gt; event appears to travel a bubbling route but actually travels in an indirect way.","pos":[0,139],"source":"The <xref:System.Windows.UIElement3D.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way."},{"content":"&lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; is the underlying event that is bubble routed, and each &lt;xref:System.Windows.UIElement3D&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement3D.MouseLeftButtonDown&gt;.","pos":[140,432],"source":" <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseLeftButtonDown>."},{"content":"Although you can mark the &lt;xref:System.Windows.UIElement3D.MouseLeftButtonDown&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.","pos":[433,638],"source":" Although you can mark the <xref:System.Windows.UIElement3D.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route."},{"content":"However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id=\"ph1\">`handledEventsToo`</ph>) from being invoked.","pos":[639,805],"source":" However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked."},{"content":"The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement3D&gt; listens for &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; and converts it to an appropriate local event.","pos":[812,1036],"source":"       The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> and converts it to an appropriate local event."},{"content":"If you want to override this logic, you must create a derived class.","pos":[1037,1105]},{"content":"In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;.","pos":[1106,1266],"source":" In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>."},{"content":"You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement3D&gt; by overriding OnMouseLeftButtonDown.","pos":[1267,1386],"source":" You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnMouseLeftButtonDown."},{"content":"Alternatively, you can override this method in order to change event handling for a specific mouse state.","pos":[1393,1498]},{"content":"Whether you choose to call the base implementation depends on your scenario.","pos":[1499,1575]},{"content":"Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnMouseLeftButtonDown.","pos":[1576,1719]},{"content":"For example, you can derive from &lt;xref:System.Windows.Controls.Button&gt; and override OnMouseLeftButtonDown in your derived class without calling the base implementation; however, this override disables the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event.","pos":[1720,1990],"source":" For example, you can derive from <xref:System.Windows.Controls.Button> and override OnMouseLeftButtonDown in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event."},{"content":"OnMouseLeftButtonDown is introduced in the .NET Framework version 3.5.","pos":[1997,2067]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2069,2162],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[288105,288264],"content":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that the left mouse button was pressed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseButtonEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","pos":[0,96],"source":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data."},{"content":"The event data reports that the left mouse button was pressed.","pos":[97,159]}]},{"pos":[288880,289109],"content":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.MouseLeftButtonUp\"></xref> routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.MouseLeftButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.","pos":[0,169],"source":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.MouseLeftButtonUp\"></xref> routed event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[170,229]}]},{"pos":[289122,290668],"content":"The <xref:System.Windows.UIElement3D.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way. <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseLeftButtonUp>. Although you can mark the <xref:System.Windows.UIElement3D.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route. However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.       The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> and converts it to an appropriate local event. If you want to override this logic, you must create a derived class. In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>. You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnMouseLeftButtonUp.       OnMouseLeftButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.UIElement3D.MouseLeftButtonUp&gt; event appears to travel a bubbling route but actually travels in an indirect way.","pos":[0,137],"source":"The <xref:System.Windows.UIElement3D.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way."},{"content":"&lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; is the underlying event that is bubble routed, and each &lt;xref:System.Windows.UIElement3D&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement3D.MouseLeftButtonUp&gt;.","pos":[138,426],"source":" <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseLeftButtonUp>."},{"content":"Although you can mark the &lt;xref:System.Windows.UIElement3D.MouseLeftButtonUp&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.","pos":[427,630],"source":" Although you can mark the <xref:System.Windows.UIElement3D.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route."},{"content":"However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id=\"ph1\">`handledEventsToo`</ph>) from being invoked.","pos":[631,797],"source":" However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked."},{"content":"The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement3D&gt; listens for &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; and converts it to an appropriate local event.","pos":[804,1026],"source":"       The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> and converts it to an appropriate local event."},{"content":"If you want to override this logic, you must create a derived class.","pos":[1027,1095]},{"content":"In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;.","pos":[1096,1254],"source":" In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>."},{"content":"You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement3D&gt; by overriding OnMouseLeftButtonUp.","pos":[1255,1372],"source":" You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnMouseLeftButtonUp."},{"content":"OnMouseLeftButtonUp is introduced in the .NET Framework version 3.5.","pos":[1379,1447]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1449,1542],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[290884,291044],"content":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that the left mouse button was released.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseButtonEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","pos":[0,96],"source":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data."},{"content":"The event data reports that the left mouse button was released.","pos":[97,160]}]},{"pos":[291588,291828],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,240],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,180],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[181,240]}]}]},{"pos":[293477,293567],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.MouseEventArgs\"></xref> that contains the event data."},{"pos":[294188,294420],"content":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.MouseRightButtonDown\"></xref> routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.MouseRightButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.","pos":[0,172],"source":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.MouseRightButtonDown\"></xref> routed event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[173,232]}]},{"pos":[294433,296642],"content":"The <xref:System.Windows.UIElement3D.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way. <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseRightButtonDown>. Although you can mark the <xref:System.Windows.UIElement3D.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route. However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.       The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> and converts it to an appropriate local event. If you want to override this logic, you must create a derived class. In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>. You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnMouseRightButtonDown.       Alternatively, you can override this method in order to change event handling for a specific mouse state. Whether you choose to call the base implementation depends on your scenario. Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnMouseRightButtonDown. For example, you can derive from <xref:System.Windows.Controls.Control> and override OnMouseRightButtonDown in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.       OnMouseRightButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.UIElement3D.MouseRightButtonDown&gt; event appears to travel a bubbling route but actually travels in an indirect way.","pos":[0,140],"source":"The <xref:System.Windows.UIElement3D.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way."},{"content":"&lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; is the underlying event that is bubble routed, and each &lt;xref:System.Windows.UIElement3D&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement3D.MouseRightButtonDown&gt;.","pos":[141,434],"source":" <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseRightButtonDown>."},{"content":"Although you can mark the &lt;xref:System.Windows.UIElement3D.MouseRightButtonDown&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.","pos":[435,641],"source":" Although you can mark the <xref:System.Windows.UIElement3D.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route."},{"content":"However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id=\"ph1\">`handledEventsToo`</ph>) from being invoked.","pos":[642,808],"source":" However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked."},{"content":"The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement3D&gt; listens for &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; and converts it to an appropriate local event.","pos":[815,1039],"source":"       The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> and converts it to an appropriate local event."},{"content":"If you want to override this logic, you must create a derived class.","pos":[1040,1108]},{"content":"In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;.","pos":[1109,1269],"source":" In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>."},{"content":"You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement3D&gt; by overriding OnMouseRightButtonDown.","pos":[1270,1390],"source":" You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnMouseRightButtonDown."},{"content":"Alternatively, you can override this method in order to change event handling for a specific mouse state.","pos":[1397,1502]},{"content":"Whether you choose to call the base implementation depends on your scenario.","pos":[1503,1579]},{"content":"Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnMouseRightButtonDown.","pos":[1580,1724]},{"content":"For example, you can derive from &lt;xref:System.Windows.Controls.Control&gt; and override OnMouseRightButtonDown in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the &lt;xref:System.Windows.Controls.Control&gt; default behavior.","pos":[1725,2030],"source":" For example, you can derive from <xref:System.Windows.Controls.Control> and override OnMouseRightButtonDown in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior."},{"content":"OnMouseRightButtonDown is introduced in the .NET Framework version 3.5.","pos":[2037,2108]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2110,2203],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[296861,297021],"content":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that the right mouse button was pressed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseButtonEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","pos":[0,96],"source":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data."},{"content":"The event data reports that the right mouse button was pressed.","pos":[97,160]}]},{"pos":[297643,297873],"content":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.MouseRightButtonUp\"></xref> routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.MouseRightButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.","pos":[0,170],"source":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.MouseRightButtonUp\"></xref> routed event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[171,230]}]},{"pos":[297886,299437],"content":"The <xref:System.Windows.UIElement3D.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way. <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseRightButtonUp>. Although you can mark the <xref:System.Windows.UIElement3D.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route. However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.       The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> and converts it to an appropriate local event. If you want to override this logic, you must create a derived class. In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>. You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnMouseRightButtonUp.       OnMouseRightButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.UIElement3D.MouseRightButtonUp&gt; event appears to travel a bubbling route but actually travels in an indirect way.","pos":[0,138],"source":"The <xref:System.Windows.UIElement3D.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way."},{"content":"&lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; is the underlying event that is bubble routed, and each &lt;xref:System.Windows.UIElement3D&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement3D.MouseRightButtonUp&gt;.","pos":[139,428],"source":" <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseRightButtonUp>."},{"content":"Although you can mark the &lt;xref:System.Windows.UIElement3D.MouseRightButtonUp&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.","pos":[429,633],"source":" Although you can mark the <xref:System.Windows.UIElement3D.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route."},{"content":"However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id=\"ph1\">`handledEventsToo`</ph>) from being invoked.","pos":[634,800],"source":" However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked."},{"content":"The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement3D&gt; listens for &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; and converts it to an appropriate local event.","pos":[807,1029],"source":"       The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> and converts it to an appropriate local event."},{"content":"If you want to override this logic, you must create a derived class.","pos":[1030,1098]},{"content":"In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;.","pos":[1099,1257],"source":" In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>."},{"content":"You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement3D&gt; by overriding OnMouseRightButtonUp.","pos":[1258,1376],"source":" You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnMouseRightButtonUp."},{"content":"OnMouseRightButtonUp is introduced in the .NET Framework version 3.5.","pos":[1383,1452]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1454,1547],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[299654,299815],"content":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that the right mouse button was released.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseButtonEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","pos":[0,96],"source":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data."},{"content":"The event data reports that the right mouse button was released.","pos":[97,161]}]},{"pos":[300380,300616],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,236],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> routed event reaches an element in its route that is derived from this class.","pos":[0,176],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; routed event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[177,236]}]}]},{"pos":[304174,304329],"content":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that the mouse button was released.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseButtonEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","pos":[0,96],"source":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data."},{"content":"The event data reports that the mouse button was released.","pos":[97,155]}]},{"pos":[304893,305134],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,241],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,181],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[182,241]}]}]},{"pos":[306795,306890],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseWheelEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.MouseWheelEventArgs\"></xref> that contains the event data."},{"pos":[307445,307689],"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,244],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,184],"source":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[185,244]}]}]},{"pos":[309481,309564],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.DragEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.DragEventArgs\"></xref> that contains the event data."},{"pos":[310125,310369],"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,244],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,184],"source":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[185,244]}]}]},{"pos":[312161,312244],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.DragEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.DragEventArgs\"></xref> that contains the event data."},{"pos":[312800,313043],"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,243],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,183],"source":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[184,243]}]}]},{"pos":[314833,314916],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.DragEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.DragEventArgs\"></xref> that contains the event data."},{"pos":[315451,315690],"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,239],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,179],"source":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[180,239]}]}]},{"pos":[317472,317555],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.DragEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.DragEventArgs\"></xref> that contains the event data."},{"pos":[318166,318413],"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,247],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,187],"source":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[188,247]}]}]},{"pos":[320227,320318],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.GiveFeedbackEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.GiveFeedbackEventArgs\"></xref> that contains the event data."},{"pos":[321009,321266],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,257],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,197],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[198,257]}]}]},{"pos":[323116,323221],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.KeyboardFocusChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.KeyboardFocusChangedEventArgs\"></xref> that contains the event data."},{"pos":[323786,324034],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,248],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,188],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[189,248]}]}]},{"pos":[325832,325920],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.KeyEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.KeyEventArgs\"></xref> that contains the event data."},{"pos":[326466,326712],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,246],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,186],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[187,246]}]}]},{"pos":[328506,328594],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.KeyEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.KeyEventArgs\"></xref> that contains the event data."},{"pos":[329283,329541],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,258],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,198],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[199,258]}]}]},{"pos":[331393,331498],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.KeyboardFocusChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.KeyboardFocusChangedEventArgs\"></xref> that contains the event data."},{"pos":[332114,332368],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; attached routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; attached routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,254],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached routed event reaches an element in its route that is derived from this class.","pos":[0,194],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; attached routed event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[195,254]}]}]},{"pos":[336141,336305],"content":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that one or more mouse buttons were pressed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseButtonEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","pos":[0,96],"source":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data."},{"content":"The event data reports that one or more mouse buttons were pressed.","pos":[97,164]}]},{"pos":[336963,337201],"content":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.PreviewMouseLeftButtonDown\"></xref> routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewMouseLeftButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.","pos":[0,178],"source":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.PreviewMouseLeftButtonDown\"></xref> routed event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[179,238]}]},{"pos":[337214,339453],"content":"The <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way. <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>. Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route. However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.       The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> and converts it to an appropriate local event. If you want to override this logic, you must create a derived class. In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>. You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnPreviewMouseLeftButtonDown.       Alternatively, you can override this method in order to change event handling for a specific mouse state. Whether you choose to call the base implementation depends on your scenario. Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnPreviewMouseLeftButtonDown. For example, you can derive from <xref:System.Windows.Controls.Button> and override OnPreviewMouseLeftButtonDown in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.       OnPreviewMouseLeftButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown&gt; event appears to travel a tunneling route but actually travels in an indirect way.","pos":[0,147],"source":"The <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way."},{"content":"&lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; is the underlying event that is tunnel routed, and each &lt;xref:System.Windows.UIElement3D&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown&gt;.","pos":[148,454],"source":" <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>."},{"content":"Although you can mark the &lt;xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.","pos":[455,667],"source":" Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route."},{"content":"However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id=\"ph1\">`handledEventsToo`</ph>) from being invoked.","pos":[668,834],"source":" However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked."},{"content":"The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement3D&gt; listens for &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; and converts it to an appropriate local event.","pos":[841,1072],"source":"       The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> and converts it to an appropriate local event."},{"content":"If you want to override this logic, you must create a derived class.","pos":[1073,1141]},{"content":"In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;.","pos":[1142,1309],"source":" In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>."},{"content":"You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement3D&gt; by overriding OnPreviewMouseLeftButtonDown.","pos":[1310,1436],"source":" You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnPreviewMouseLeftButtonDown."},{"content":"Alternatively, you can override this method in order to change event handling for a specific mouse state.","pos":[1443,1548]},{"content":"Whether you choose to call the base implementation depends on your scenario.","pos":[1549,1625]},{"content":"Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnPreviewMouseLeftButtonDown.","pos":[1626,1776]},{"content":"For example, you can derive from &lt;xref:System.Windows.Controls.Button&gt; and override OnPreviewMouseLeftButtonDown in your derived class without calling the base implementation; however, this override disables the &lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt; event.","pos":[1777,2054],"source":" For example, you can derive from <xref:System.Windows.Controls.Button> and override OnPreviewMouseLeftButtonDown in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event."},{"content":"OnPreviewMouseLeftButtonDown is introduced in the .NET Framework version 3.5.","pos":[2061,2138]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2140,2233],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[339678,339837],"content":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that the left mouse button was pressed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseButtonEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","pos":[0,96],"source":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data."},{"content":"The event data reports that the left mouse button was pressed.","pos":[97,159]}]},{"pos":[340495,340731],"content":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.PreviewMouseLeftButtonUp\"></xref> routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewMouseLeftButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.","pos":[0,176],"source":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.PreviewMouseLeftButtonUp\"></xref> routed event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[177,236]}]},{"pos":[340744,342347],"content":"The <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way. <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>. Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route. However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.       The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> and converts it to an appropriate local event. If you want to override this logic, you must create a derived class. In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>. You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnPreviewMouseLeftButtonUp.       OnPreviewMouseLeftButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp&gt; event appears to travel a tunneling route but actually travels in an indirect way.","pos":[0,145],"source":"The <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way."},{"content":"&lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; is the underlying event that is tunnel routed, and each &lt;xref:System.Windows.UIElement3D&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp&gt;.","pos":[146,448],"source":" <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>."},{"content":"Although you can mark the &lt;xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.","pos":[449,659],"source":" Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route."},{"content":"However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id=\"ph1\">`handledEventsToo`</ph>) from being invoked.","pos":[660,826],"source":" However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked."},{"content":"The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement3D&gt; listens for &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; and converts it to an appropriate local event.","pos":[833,1062],"source":"       The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> and converts it to an appropriate local event."},{"content":"If you want to override this logic, you must create a derived class.","pos":[1063,1131]},{"content":"In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;.","pos":[1132,1297],"source":" In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>."},{"content":"You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement3D&gt; by overriding OnPreviewMouseLeftButtonUp.","pos":[1298,1422],"source":" You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnPreviewMouseLeftButtonUp."},{"content":"OnPreviewMouseLeftButtonUp is introduced in the .NET Framework version 3.5.","pos":[1429,1504]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1506,1599],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[342570,342730],"content":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that the left mouse button was released.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseButtonEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","pos":[0,96],"source":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data."},{"content":"The event data reports that the left mouse button was released.","pos":[97,160]}]},{"pos":[343316,343563],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,247],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,187],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[188,247]}]}]},{"pos":[345369,345459],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.MouseEventArgs\"></xref> that contains the event data."},{"pos":[346122,346361],"content":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.PreviewMouseRightButtonDown\"></xref> routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewMouseRightButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.","pos":[0,179],"source":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.PreviewMouseRightButtonDown\"></xref> routed event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[180,239]}]},{"pos":[346374,348647],"content":"The <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way. <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseRightButtonDown>. Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route. However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.       The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> and converts it to an appropriate local event. If you want to override this logic, you must create a derived class. In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>. You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnPreviewMouseRightButtonDown.       Alternatively, you can override this method in order to change event handling for a specific mouse state. Whether you choose to call the base implementation depends on your scenario. Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnPreviewMouseRightButtonDown. For example, you can derive from <xref:System.Windows.Controls.Control> and override OnPreviewMouseRightButtonDown in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.       OnPreviewMouseRightButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown&gt; event appears to travel a tunneling route but actually travels in an indirect way.","pos":[0,148],"source":"The <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way."},{"content":"&lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; is the underlying event that is tunnel routed, and each &lt;xref:System.Windows.UIElement3D&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement3D.MouseRightButtonDown&gt;.","pos":[149,449],"source":" <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseRightButtonDown>."},{"content":"Although you can mark the &lt;xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.","pos":[450,663],"source":" Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route."},{"content":"However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id=\"ph1\">`handledEventsToo`</ph>) from being invoked.","pos":[664,830],"source":" However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked."},{"content":"The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement3D&gt; listens for &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; and converts it to an appropriate local event.","pos":[837,1068],"source":"       The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> and converts it to an appropriate local event."},{"content":"If you want to override this logic, you must create a derived class.","pos":[1069,1137]},{"content":"In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;.","pos":[1138,1305],"source":" In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>."},{"content":"You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement3D&gt; by overriding OnPreviewMouseRightButtonDown.","pos":[1306,1433],"source":" You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnPreviewMouseRightButtonDown."},{"content":"Alternatively, you can override this method in order to change event handling for a specific mouse state.","pos":[1440,1545]},{"content":"Whether you choose to call the base implementation depends on your scenario.","pos":[1546,1622]},{"content":"Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnPreviewMouseRightButtonDown.","pos":[1623,1774]},{"content":"For example, you can derive from &lt;xref:System.Windows.Controls.Control&gt; and override OnPreviewMouseRightButtonDown in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the &lt;xref:System.Windows.Controls.Control&gt; default behavior.","pos":[1775,2087],"source":" For example, you can derive from <xref:System.Windows.Controls.Control> and override OnPreviewMouseRightButtonDown in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior."},{"content":"OnPreviewMouseRightButtonDown is introduced in the .NET Framework version 3.5.","pos":[2094,2172]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2174,2267],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[348873,349033],"content":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that the right mouse button was pressed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseButtonEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","pos":[0,96],"source":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data."},{"content":"The event data reports that the right mouse button was pressed.","pos":[97,160]}]},{"pos":[349697,349934],"content":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.PreviewMouseRightButtonUp\"></xref> routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewMouseRightButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event reaches an element in its route that is derived from this class.","pos":[0,177],"source":"Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.PreviewMouseRightButtonUp\"></xref> routed event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[178,237]}]},{"pos":[349947,351555],"content":"The <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way. <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>. Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route. However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.       The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> and converts it to an appropriate local event. If you want to override this logic, you must create a derived class. In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>. You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnPreviewMouseRightButtonUp.       OnPreviewMouseRightButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp&gt; event appears to travel a tunneling route but actually travels in an indirect way.","pos":[0,146],"source":"The <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way."},{"content":"&lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; is the underlying event that is tunnel routed, and each &lt;xref:System.Windows.UIElement3D&gt; along the event route uses identical handling to raise the direct routed event &lt;xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp&gt;.","pos":[147,450],"source":" <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>."},{"content":"Although you can mark the &lt;xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp&gt; event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.","pos":[451,662],"source":" Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route."},{"content":"However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify <ph id=\"ph1\">`handledEventsToo`</ph>) from being invoked.","pos":[663,829],"source":" However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked."},{"content":"The default implementation for general mouse event handling in &lt;xref:System.Windows.UIElement3D&gt; listens for &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; and converts it to an appropriate local event.","pos":[836,1065],"source":"       The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> and converts it to an appropriate local event."},{"content":"If you want to override this logic, you must create a derived class.","pos":[1066,1134]},{"content":"In the static constructor of your derived class, register an alternative class handler for &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;.","pos":[1135,1300],"source":" In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>."},{"content":"You cannot change the mouse handling behavior of &lt;xref:System.Windows.UIElement3D&gt; by overriding OnPreviewMouseRightButtonUp.","pos":[1301,1426],"source":" You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnPreviewMouseRightButtonUp."},{"content":"OnPreviewMouseRightButtonUp is introduced in the .NET Framework version 3.5.","pos":[1433,1509]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1511,1604],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[351779,351940],"content":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that the right mouse button was released.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseButtonEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","pos":[0,96],"source":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data."},{"content":"The event data reports that the right mouse button was released.","pos":[97,161]}]},{"pos":[352547,352792],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,245],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,185],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[186,245]}]}]},{"pos":[356406,356571],"content":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that one or more mouse buttons were released.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseButtonEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","pos":[0,96],"source":"The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data."},{"content":"The event data reports that one or more mouse buttons were released.","pos":[97,165]}]},{"pos":[357177,357425],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,248],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,188],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[189,248]}]}]},{"pos":[359243,359338],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.MouseWheelEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.MouseWheelEventArgs\"></xref> that contains the event data."},{"pos":[360005,360257],"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,252],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,192],"source":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[193,252]}]}]},{"pos":[362091,362187],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.QueryContinueDragEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.QueryContinueDragEventArgs\"></xref> that contains the event data."},{"pos":[362843,363098],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,255],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,195],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[196,255]}]}]},{"pos":[364932,365029],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusButtonEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusButtonEventArgs\"></xref> that contains the event data."},{"pos":[365674,365927],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,253],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,193],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[194,253]}]}]},{"pos":[367757,367854],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusButtonEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusButtonEventArgs\"></xref> that contains the event data."},{"pos":[368467,368716],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,249],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,189],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[190,249]}]}]},{"pos":[370534,370629],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusDownEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusDownEventArgs\"></xref> that contains the event data."},{"pos":[371243,371497],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,254],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,194],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[195,254]}]}]},{"pos":[373317,373408],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data."},{"pos":[374017,374269],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,252],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,192],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[193,252]}]}]},{"pos":[376085,376176],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data."},{"pos":[376768,377017],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,249],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,189],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[190,249]}]}]},{"pos":[378827,378918],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data."},{"pos":[379537,379792],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,255],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,195],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[196,255]}]}]},{"pos":[381614,381705],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data."},{"pos":[382410,382668],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,258],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,198],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[199,258]}]}]},{"pos":[384522,384626],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusSystemGestureEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusSystemGestureEventArgs\"></xref> that contains the event data."},{"pos":[385214,385461],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,247],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,187],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[188,247]}]}]},{"pos":[387267,387358],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data."},{"pos":[387985,388249],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,264],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,204],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[205,264]}]}]},{"pos":[390075,390175],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.TextCompositionEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.TextCompositionEventArgs\"></xref> that contains the event data."},{"pos":[390753,390909],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewTouchDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event that occurs when a touch presses this element.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement3D.PreviewTouchDown\"></xref> routed event that occurs when a touch presses this element."},{"pos":[390921,391199],"content":"The OnPreviewTouchDown method has no default implementation. Override OnPreviewTouchDown in a derived class to handle the <xref:System.Windows.UIElement3D.PreviewTouchDown> event. Be sure to call the base class’s OnPreviewTouchDown method so that base classes receive the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The OnPreviewTouchDown method has no default implementation. Override OnPreviewTouchDown in a derived class to handle the <xref:System.Windows.UIElement3D.PreviewTouchDown> event. Be sure to call the base class’s OnPreviewTouchDown method so that base classes receive the event.","pos":[0,278],"nodes":[{"content":"The OnPreviewTouchDown method has no default implementation.","pos":[0,60]},{"content":"Override OnPreviewTouchDown in a derived class to handle the &lt;xref:System.Windows.UIElement3D.PreviewTouchDown&gt; event.","pos":[61,179],"source":" Override OnPreviewTouchDown in a derived class to handle the <xref:System.Windows.UIElement3D.PreviewTouchDown> event."},{"content":"Be sure to call the base class’s OnPreviewTouchDown method so that base classes receive the event.","pos":[180,278]}]}]},{"pos":[391401,391489],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.TouchEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data."},{"pos":[392067,392234],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewTouchMove\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event that occurs when a touch moves while inside this element.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement3D.PreviewTouchMove\"></xref> routed event that occurs when a touch moves while inside this element."},{"pos":[392246,392524],"content":"The OnPreviewTouchMove method has no default implementation. Override OnPreviewTouchMove in a derived class to handle the <xref:System.Windows.UIElement3D.PreviewTouchMove> event. Be sure to call the base class’s OnPreviewTouchMove method so that base classes receive the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The OnPreviewTouchMove method has no default implementation. Override OnPreviewTouchMove in a derived class to handle the <xref:System.Windows.UIElement3D.PreviewTouchMove> event. Be sure to call the base class’s OnPreviewTouchMove method so that base classes receive the event.","pos":[0,278],"nodes":[{"content":"The OnPreviewTouchMove method has no default implementation.","pos":[0,60]},{"content":"Override OnPreviewTouchMove in a derived class to handle the &lt;xref:System.Windows.UIElement3D.PreviewTouchMove&gt; event.","pos":[61,179],"source":" Override OnPreviewTouchMove in a derived class to handle the <xref:System.Windows.UIElement3D.PreviewTouchMove> event."},{"content":"Be sure to call the base class’s OnPreviewTouchMove method so that base classes receive the event.","pos":[180,278]}]}]},{"pos":[392726,392814],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.TouchEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data."},{"pos":[393382,393547],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewTouchUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event that occurs when a touch is released inside this element.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement3D.PreviewTouchUp\"></xref> routed event that occurs when a touch is released inside this element."},{"pos":[393559,393829],"content":"The OnPreviewTouchUp method has no default implementation. Override OnPreviewTouchUp in a derived class to handle the <xref:System.Windows.UIElement3D.PreviewTouchUp> event. Be sure to call the base class’s OnPreviewTouchUp method so that base classes receive the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The OnPreviewTouchUp method has no default implementation. Override OnPreviewTouchUp in a derived class to handle the <xref:System.Windows.UIElement3D.PreviewTouchUp> event. Be sure to call the base class’s OnPreviewTouchUp method so that base classes receive the event.","pos":[0,270],"nodes":[{"content":"The OnPreviewTouchUp method has no default implementation.","pos":[0,58]},{"content":"Override OnPreviewTouchUp in a derived class to handle the &lt;xref:System.Windows.UIElement3D.PreviewTouchUp&gt; event.","pos":[59,173],"source":" Override OnPreviewTouchUp in a derived class to handle the <xref:System.Windows.UIElement3D.PreviewTouchUp> event."},{"content":"Be sure to call the base class’s OnPreviewTouchUp method so that base classes receive the event.","pos":[174,270]}]}]},{"pos":[394029,394117],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.TouchEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data."},{"pos":[394746,394991],"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,245],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,185],"source":"Invoked when an unhandled &lt;xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[186,245]}]}]},{"pos":[396668,396764],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.QueryContinueDragEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.QueryContinueDragEventArgs\"></xref> that contains the event data."},{"pos":[397348,397590],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,242],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,182],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[183,242]}]}]},{"pos":[399255,399351],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.QueryCursorEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.QueryCursorEventArgs\"></xref> that contains the event data."},{"pos":[399959,400207],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,248],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,188],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[189,248]}]}]},{"pos":[401884,401981],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusButtonEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusButtonEventArgs\"></xref> that contains the event data."},{"pos":[402584,402830],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,246],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,186],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[187,246]}]}]},{"pos":[404503,404600],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusButtonEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusButtonEventArgs\"></xref> that contains the event data."},{"pos":[405171,405413],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,242],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,182],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[183,242]}]}]},{"pos":[407074,407169],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusDownEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusDownEventArgs\"></xref> that contains the event data."},{"pos":[407721,407926],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt; attached event is raised by this element. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt; attached event is raised by this element. Implement this method to add class handling for this event.","pos":[0,205],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event is raised by this element.","pos":[0,145],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt; attached event is raised by this element."},{"content":"Implement this method to add class handling for this event.","pos":[146,205]}]}]},{"pos":[407939,408883],"content":"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.       The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.       OnStylusEnter is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This method has no default implementation.","pos":[0,42]},{"content":"Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.","pos":[43,195]},{"content":"You may call base either before or after your special handling, depending on your requirements.","pos":[196,291]},{"content":"The purpose of this method is similar to <ph id=\"ph1\">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.","pos":[298,572],"source":"       The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler."},{"content":"In this case the matching event is a routed event.","pos":[573,623]},{"content":"Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify <ph id=\"ph1\">`handledEventsToo`</ph>) from being invoked.","pos":[624,776],"source":" Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked."},{"content":"OnStylusEnter is introduced in the .NET Framework version 3.5.","pos":[783,845]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[847,940],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[409083,409174],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data."},{"pos":[409747,409994],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,247],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,187],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[188,247]}]}]},{"pos":[411657,411748],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data."},{"pos":[412315,412560],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,245],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,185],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[186,245]}]}]},{"pos":[414219,414310],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data."},{"pos":[414865,415070],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt; attached event is raised by this element. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt; attached event is raised by this element. Implement this method to add class handling for this event.","pos":[0,205],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event is raised by this element.","pos":[0,145],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt; attached event is raised by this element."},{"content":"Implement this method to add class handling for this event.","pos":[146,205]}]}]},{"pos":[415083,416027],"content":"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.       The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.       OnStylusLeave is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This method has no default implementation.","pos":[0,42]},{"content":"Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.","pos":[43,195]},{"content":"You may call base either before or after your special handling, depending on your requirements.","pos":[196,291]},{"content":"The purpose of this method is similar to <ph id=\"ph1\">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.","pos":[298,572],"source":"       The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler."},{"content":"In this case the matching event is a routed event.","pos":[573,623]},{"content":"Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify <ph id=\"ph1\">`handledEventsToo`</ph>) from being invoked.","pos":[624,776],"source":" Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked."},{"content":"OnStylusLeave is introduced in the .NET Framework version 3.5.","pos":[783,845]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[847,940],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[416227,416318],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data."},{"pos":[416866,417108],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,242],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,182],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[183,242]}]}]},{"pos":[418761,418852],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data."},{"pos":[419429,419677],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,248],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,188],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[189,248]}]}]},{"pos":[421342,421433],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data."},{"pos":[422096,422347],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,251],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,191],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[192,251]}]}]},{"pos":[424044,424148],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusSystemGestureEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusSystemGestureEventArgs\"></xref> that contains the event data."},{"pos":[424694,424934],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,240],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,180],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[181,240]}]}]},{"pos":[426583,426674],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.StylusEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data."},{"pos":[427259,427516],"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked when an unhandled &lt;xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.","pos":[0,257],"nodes":[{"content":"Invoked when an unhandled <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached event reaches an element in its route that is derived from this class.","pos":[0,197],"source":"Invoked when an unhandled &lt;xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class."},{"content":"Implement this method to add class handling for this event.","pos":[198,257]}]}]},{"pos":[429185,429285],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.TextCompositionEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Input.TextCompositionEventArgs\"></xref> that contains the event data."},{"pos":[429821,429977],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.TouchDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event that occurs when a touch presses inside this element.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement3D.TouchDown\"></xref> routed event that occurs when a touch presses inside this element."},{"pos":[429989,430239],"content":"The OnTouchDown method has no default implementation. Override OnTouchDown in a derived class to handle the <xref:System.Windows.UIElement3D.TouchDown> event. Be sure to call the base class’s OnTouchDown method so that base classes receive the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The OnTouchDown method has no default implementation. Override OnTouchDown in a derived class to handle the <xref:System.Windows.UIElement3D.TouchDown> event. Be sure to call the base class’s OnTouchDown method so that base classes receive the event.","pos":[0,250],"nodes":[{"content":"The OnTouchDown method has no default implementation.","pos":[0,53]},{"content":"Override OnTouchDown in a derived class to handle the &lt;xref:System.Windows.UIElement3D.TouchDown&gt; event.","pos":[54,158],"source":" Override OnTouchDown in a derived class to handle the <xref:System.Windows.UIElement3D.TouchDown> event."},{"content":"Be sure to call the base class’s OnTouchDown method so that base classes receive the event.","pos":[159,250]}]}]},{"pos":[430434,430522],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.TouchEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data."},{"pos":[431063,431248],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.TouchEnter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event that occurs when a touch moves from outside to inside the bounds of this element.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement3D.TouchEnter\"></xref> routed event that occurs when a touch moves from outside to inside the bounds of this element."},{"pos":[431260,431514],"content":"The OnTouchEnter method has no default implementation. Override OnTouchEnter in a derived class to handle the <xref:System.Windows.UIElement3D.TouchEnter> event. Be sure to call the base class’s OnTouchEnter method so that base classes receive the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The OnTouchEnter method has no default implementation. Override OnTouchEnter in a derived class to handle the <xref:System.Windows.UIElement3D.TouchEnter> event. Be sure to call the base class’s OnTouchEnter method so that base classes receive the event.","pos":[0,254],"nodes":[{"content":"The OnTouchEnter method has no default implementation.","pos":[0,54]},{"content":"Override OnTouchEnter in a derived class to handle the &lt;xref:System.Windows.UIElement3D.TouchEnter&gt; event.","pos":[55,161],"source":" Override OnTouchEnter in a derived class to handle the <xref:System.Windows.UIElement3D.TouchEnter> event."},{"content":"Be sure to call the base class’s OnTouchEnter method so that base classes receive the event.","pos":[162,254]}]}]},{"pos":[431710,431798],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.TouchEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data."},{"pos":[432340,432525],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.TouchLeave\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event that occurs when a touch moves from inside to outside the bounds of this element.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement3D.TouchLeave\"></xref> routed event that occurs when a touch moves from inside to outside the bounds of this element."},{"pos":[432537,432791],"content":"The OnTouchLeave method has no default implementation. Override OnTouchLeave in a derived class to handle the <xref:System.Windows.UIElement3D.TouchLeave> event. Be sure to call the base class’s OnTouchLeave method so that base classes receive the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The OnTouchLeave method has no default implementation. Override OnTouchLeave in a derived class to handle the <xref:System.Windows.UIElement3D.TouchLeave> event. Be sure to call the base class’s OnTouchLeave method so that base classes receive the event.","pos":[0,254],"nodes":[{"content":"The OnTouchLeave method has no default implementation.","pos":[0,54]},{"content":"Override OnTouchLeave in a derived class to handle the &lt;xref:System.Windows.UIElement3D.TouchLeave&gt; event.","pos":[55,161],"source":" Override OnTouchLeave in a derived class to handle the <xref:System.Windows.UIElement3D.TouchLeave> event."},{"content":"Be sure to call the base class’s OnTouchLeave method so that base classes receive the event.","pos":[162,254]}]}]},{"pos":[432987,433075],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.TouchEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data."},{"pos":[433612,433772],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.TouchMove\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event that occurs when a touch moves while inside this element.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement3D.TouchMove\"></xref> routed event that occurs when a touch moves while inside this element."},{"pos":[433784,434034],"content":"The OnTouchMove method has no default implementation. Override OnTouchMove in a derived class to handle the <xref:System.Windows.UIElement3D.TouchMove> event. Be sure to call the base class’s OnTouchMove method so that base classes receive the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The OnTouchMove method has no default implementation. Override OnTouchMove in a derived class to handle the <xref:System.Windows.UIElement3D.TouchMove> event. Be sure to call the base class’s OnTouchMove method so that base classes receive the event.","pos":[0,250],"nodes":[{"content":"The OnTouchMove method has no default implementation.","pos":[0,53]},{"content":"Override OnTouchMove in a derived class to handle the &lt;xref:System.Windows.UIElement3D.TouchMove&gt; event.","pos":[54,158],"source":" Override OnTouchMove in a derived class to handle the <xref:System.Windows.UIElement3D.TouchMove> event."},{"content":"Be sure to call the base class’s OnTouchMove method so that base classes receive the event.","pos":[159,250]}]}]},{"pos":[434229,434317],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.TouchEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data."},{"pos":[434843,435001],"content":"Provides class handling for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.TouchUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event that occurs when a touch is released inside this element.","needQuote":true,"needEscape":true,"source":"Provides class handling for the <xref href=\"System.Windows.UIElement3D.TouchUp\"></xref> routed event that occurs when a touch is released inside this element."},{"pos":[435013,435255],"content":"The OnTouchUp method has no default implementation. Override OnTouchUp in a derived class to handle the <xref:System.Windows.UIElement3D.TouchUp> event. Be sure to call the base class’s OnTouchUp method so that base classes receive the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The OnTouchUp method has no default implementation. Override OnTouchUp in a derived class to handle the <xref:System.Windows.UIElement3D.TouchUp> event. Be sure to call the base class’s OnTouchUp method so that base classes receive the event.","pos":[0,242],"nodes":[{"content":"The OnTouchUp method has no default implementation.","pos":[0,51]},{"content":"Override OnTouchUp in a derived class to handle the &lt;xref:System.Windows.UIElement3D.TouchUp&gt; event.","pos":[52,152],"source":" Override OnTouchUp in a derived class to handle the <xref:System.Windows.UIElement3D.TouchUp> event."},{"content":"Be sure to call the base class’s OnTouchUp method so that base classes receive the event.","pos":[153,242]}]}]},{"pos":[435448,435536],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.TouchEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data."},{"pos":[435964,436036],"content":"Participates in rendering operations when overridden in a derived class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Participates in rendering operations when overridden in a derived class.","pos":[0,72]}]},{"pos":[436049,436931],"content":"When you derive a class from the <xref:System.Windows.UIElement3D> class, you can use this method together with the <xref:System.Windows.UIElement3D.InvalidateModel%2A> method to refresh the model of the element.       You only need to call this method in advanced scenarios. One such advanced scenario is if the derived class has multiple properties that affect the appearance, and you want to update the underlying model only once. Within the OnUpdateModel method you could update the <xref:System.Windows.Media.Media3D.Visual3D.Visual3DModel%2A> property of the <xref:System.Windows.Media.Media3D.Visual3D> class.       This method has no default implementation in the <xref:System.Windows.UIElement3D> class.       OnUpdateModel is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"When you derive a class from the &lt;xref:System.Windows.UIElement3D&gt; class, you can use this method together with the &lt;xref:System.Windows.UIElement3D.InvalidateModel%2A&gt; method to refresh the model of the element.","pos":[0,212],"source":"When you derive a class from the <xref:System.Windows.UIElement3D> class, you can use this method together with the <xref:System.Windows.UIElement3D.InvalidateModel%2A> method to refresh the model of the element."},{"content":"You only need to call this method in advanced scenarios.","pos":[219,275]},{"content":"One such advanced scenario is if the derived class has multiple properties that affect the appearance, and you want to update the underlying model only once.","pos":[276,433]},{"content":"Within the OnUpdateModel method you could update the &lt;xref:System.Windows.Media.Media3D.Visual3D.Visual3DModel%2A&gt; property of the &lt;xref:System.Windows.Media.Media3D.Visual3D&gt; class.","pos":[434,616],"source":" Within the OnUpdateModel method you could update the <xref:System.Windows.Media.Media3D.Visual3D.Visual3DModel%2A> property of the <xref:System.Windows.Media.Media3D.Visual3D> class."},{"content":"This method has no default implementation in the &lt;xref:System.Windows.UIElement3D&gt; class.","pos":[623,712],"source":"       This method has no default implementation in the <xref:System.Windows.UIElement3D> class."},{"content":"OnUpdateModel is introduced in the .NET Framework version 3.5.","pos":[719,781]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[783,876],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[438017,438154],"content":"Invoked when the parent element of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> reports a change to its underlying visual parent.","needQuote":true,"needEscape":true,"source":"Invoked when the parent element of this <xref href=\"System.Windows.UIElement3D\"></xref> reports a change to its underlying visual parent."},{"pos":[438166,438331],"content":"OnVisualParentChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"OnVisualParentChanged is introduced in the .NET Framework version 3.5.","pos":[0,70]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[72,165],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[438545,438752],"content":"The previous parent. This may be provided as <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <xref href=\"System.Windows.DependencyObject\"></xref> did not have a parent element previously.","needQuote":true,"needEscape":true,"nodes":[{"content":"The previous parent.","pos":[0,20]},{"content":"This may be provided as <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.DependencyObject\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> did not have a parent element previously.","pos":[21,207],"source":" This may be provided as <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <xref href=\"System.Windows.DependencyObject\"></xref> did not have a parent element previously."}]},{"pos":[439353,439523],"content":"When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.","pos":[0,170]}]},{"pos":[439536,439798],"content":"The default implementation of this method in this class is incomplete, and always returns `null`.       PredictFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The default implementation of this method in this class is incomplete, and always returns <ph id=\"ph1\">`null`</ph>.","pos":[0,97],"source":"The default implementation of this method in this class is incomplete, and always returns `null`."},{"content":"PredictFocus is introduced in the .NET Framework version 3.5.","pos":[104,165]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[167,260],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[440055,440102],"content":"The direction of the requested focus traversal.","needQuote":true,"needEscape":true,"nodes":[{"content":"The direction of the requested focus traversal.","pos":[0,47]}]},{"pos":[440178,440291],"content":"The element that would have received focus if <xref:System.Windows.UIElement3D.MoveFocus*> were actually invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element that would have received focus if &lt;xref:System.Windows.UIElement3D.MoveFocus*&gt; were actually invoked.","pos":[0,113],"source":"The element that would have received focus if <xref:System.Windows.UIElement3D.MoveFocus*> were actually invoked."}]},{"pos":[440730,440829],"content":"Occurs when the input system reports an underlying drag event with this element as the drag target.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the input system reports an underlying drag event with this element as the drag target.","pos":[0,99]}]},{"pos":[440842,442007],"content":"This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName> attached event for this class, so that PreviewDragEnter is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewDragEnter event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName> attached event and receive the same event data instance.       PreviewDragEnter is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewDragEnter\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewDragEnterEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.DragEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.DragEnter>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt; attached event for this class, so that PreviewDragEnter is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,269],"source":"This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName> attached event for this class, so that PreviewDragEnter is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewDragEnter event are attached to the underlying &lt;xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[270,493],"source":" Event handlers that are attached to the PreviewDragEnter event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"PreviewDragEnter is introduced in the .NET Framework version 3.5.","pos":[500,565]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[567,660],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewDragEnter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewDragEnterEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.DragEnter&gt;.","pos":[666,1011],"source":"<a name=\"routedEventInfo_PreviewDragEnter\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewDragEnterEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.DragEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.DragEnter>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A&gt; to implement class handling for this event in derived classes.","pos":[1017,1148],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes."}]},{"pos":[442170,442182],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[442593,442686],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewDragEnter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewDragEnter\"></xref> routed event."},{"pos":[442699,443410],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewDragEnterEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewDragEnterEvent is introduced in the .NET Framework version 3.5.","pos":[542,612]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[614,707],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[443578,443590],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[443976,444075],"content":"Occurs when the input system reports an underlying drag event with this element as the drag origin.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the input system reports an underlying drag event with this element as the drag origin.","pos":[0,99]}]},{"pos":[444088,445253],"content":"This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName> attached event for this class, so that PreviewDragLeave is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewDragLeave event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName> attached event and receive the same event data instance.       PreviewDragLeave is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewDragLeave\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewDragLeaveEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.DragEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.DragLeave>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt; attached event for this class, so that PreviewDragLeave is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,269],"source":"This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName> attached event for this class, so that PreviewDragLeave is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewDragLeave event are attached to the underlying &lt;xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[270,493],"source":" Event handlers that are attached to the PreviewDragLeave event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"PreviewDragLeave is introduced in the .NET Framework version 3.5.","pos":[500,565]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[567,660],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewDragLeave\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewDragLeaveEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.DragLeave&gt;.","pos":[666,1011],"source":"<a name=\"routedEventInfo_PreviewDragLeave\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewDragLeaveEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.DragEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.DragLeave>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A&gt; to implement class handling for this event in derived classes.","pos":[1017,1148],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes."}]},{"pos":[445416,445428],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[445839,445932],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewDragLeave\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewDragLeave\"></xref> routed event."},{"pos":[445945,446656],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewDragLeaveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewDragLeaveEvent is introduced in the .NET Framework version 3.5.","pos":[542,612]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[614,707],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[446824,446836],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[447217,447326],"content":"Occurs when the input system reports an underlying drag event with this element as the potential drop target.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the input system reports an underlying drag event with this element as the potential drop target.","pos":[0,109]}]},{"pos":[447339,448495],"content":"This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName> attached event for this class, so that PreviewDragOver is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewDragOver event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName> attached event and receive the same event data instance.       PreviewDragOver is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewDragOver\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewDragOverEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.DragEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.DragOver>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt; attached event for this class, so that PreviewDragOver is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,267],"source":"This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName> attached event for this class, so that PreviewDragOver is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewDragOver event are attached to the underlying &lt;xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[268,489],"source":" Event handlers that are attached to the PreviewDragOver event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"PreviewDragOver is introduced in the .NET Framework version 3.5.","pos":[496,560]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[562,655],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewDragOver\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewDragOverEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.DragOver&gt;.","pos":[661,1003],"source":"<a name=\"routedEventInfo_PreviewDragOver\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewDragOverEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.DragEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.DragOver>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewDragOver%2A&gt; to implement class handling for this event in derived classes.","pos":[1009,1139],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewDragOver%2A> to implement class handling for this event in derived classes."}]},{"pos":[448657,448669],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[449075,449167],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewDragOver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewDragOver\"></xref> routed event."},{"pos":[449180,449890],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewDragOverEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewDragOverEvent is introduced in the .NET Framework version 3.5.","pos":[542,611]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[613,706],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[450057,450069],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[450430,450529],"content":"Occurs when the input system reports an underlying drop event with this element as the drop target.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the input system reports an underlying drop event with this element as the drop target.","pos":[0,99]}]},{"pos":[450542,451662],"content":"This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName> attached event for this class, so that PreviewDrop is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewDrop event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName> attached event and receive the same event data instance.       PreviewDrop is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewDrop\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewDropEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.DragEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.Drop>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewDrop%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt; attached event for this class, so that PreviewDrop is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,259],"source":"This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName> attached event for this class, so that PreviewDrop is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewDrop event are attached to the underlying &lt;xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[260,473],"source":" Event handlers that are attached to the PreviewDrop event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"PreviewDrop is introduced in the .NET Framework version 3.5.","pos":[480,540]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[542,635],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewDrop\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewDropEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.DragEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.Drop&gt;.","pos":[641,971],"source":"<a name=\"routedEventInfo_PreviewDrop\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewDropEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.DragEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.Drop>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewDrop%2A&gt; to implement class handling for this event in derived classes.","pos":[977,1103],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewDrop%2A> to implement class handling for this event in derived classes."}]},{"pos":[451820,451832],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[452218,452306],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewDrop\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewDrop\"></xref> routed event."},{"pos":[452319,453025],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewDropEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewDropEvent is introduced in the .NET Framework version 3.5.","pos":[542,607]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[609,702],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[453188,453200],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[453601,453650],"content":"Occurs when a drag-and-drop operation is started.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a drag-and-drop operation is started.","pos":[0,49]}]},{"pos":[453663,455059],"content":"The PreviewGiveFeedback event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.       This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName> attached event for this class, so that PreviewGiveFeedback is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewGiveFeedback event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName> attached event and receive the same event data instance.       PreviewGiveFeedback is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewGiveFeedback\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewGiveFeedbackEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.GiveFeedbackEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.GiveFeedback>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"The PreviewGiveFeedback event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.","pos":[0,187]},{"content":"This event creates an alias for the &lt;xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt; attached event for this class, so that PreviewGiveFeedback is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[194,469],"source":"       This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName> attached event for this class, so that PreviewGiveFeedback is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewGiveFeedback event are attached to the underlying &lt;xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[470,699],"source":" Event handlers that are attached to the PreviewGiveFeedback event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"PreviewGiveFeedback is introduced in the .NET Framework version 3.5.","pos":[706,774]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[776,869],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewGiveFeedback\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewGiveFeedbackEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.GiveFeedbackEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.GiveFeedback&gt;.","pos":[875,1237],"source":"<a name=\"routedEventInfo_PreviewGiveFeedback\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewGiveFeedbackEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.GiveFeedbackEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.GiveFeedback>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A&gt; to implement class handling for this event in derived classes.","pos":[1243,1377],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes."}]},{"pos":[455241,455253],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[455679,455775],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewGiveFeedback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewGiveFeedback\"></xref> routed event."},{"pos":[455788,456502],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewGiveFeedbackEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewGiveFeedbackEvent is introduced in the .NET Framework version 3.5.","pos":[542,615]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[617,710],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[456673,456685],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[457106,457158],"content":"Occurs when the keyboard is focused on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the keyboard is focused on this element.","pos":[0,52]}]},{"pos":[457171,458729],"content":"Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.       This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName> attached event for this class, so that PreviewGotKeyboardFocus is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewGotKeyboardFocus event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName> attached event and receive the same event data instance.       PreviewGotKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewGotKeyboardFocus\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.GotKeyboardFocus>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.","pos":[0,163]},{"content":"Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that has focus.","pos":[164,287],"source":" Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus."},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt; attached event for this class, so that PreviewGotKeyboardFocus is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[294,583],"source":"       This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName> attached event for this class, so that PreviewGotKeyboardFocus is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewGotKeyboardFocus event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[584,827],"source":" Event handlers that are attached to the PreviewGotKeyboardFocus event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"PreviewGotKeyboardFocus is introduced in the .NET Framework version 3.5.","pos":[834,906]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[908,1001],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewGotKeyboardFocus\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.GotKeyboardFocus&gt;.","pos":[1007,1395],"source":"<a name=\"routedEventInfo_PreviewGotKeyboardFocus\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.GotKeyboardFocus>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A&gt; to implement class handling for this event in derived classes.","pos":[1401,1539],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes."}]},{"pos":[458943,458955],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[459401,459501],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewGotKeyboardFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewGotKeyboardFocus\"></xref> routed event."},{"pos":[459514,460232],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewGotKeyboardFocusEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewGotKeyboardFocusEvent is introduced in the .NET Framework version 3.5.","pos":[542,619]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[621,714],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[460407,460419],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[460795,460870],"content":"Occurs when a key is pressed while the keyboard is focused on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a key is pressed while the keyboard is focused on this element.","pos":[0,75]}]},{"pos":[460883,462140],"content":"Key handling interacts with other platform features such as commanding and text composition. This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName> attached event for this class, so that PreviewKeyDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewKeyDown event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName> attached event and receive the same event data instance.       PreviewKeyDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewKeyDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewKeyDownEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.KeyEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.KeyDown>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Key handling interacts with other platform features such as commanding and text composition.","pos":[0,92]},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt; attached event for this class, so that PreviewKeyDown is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[93,364],"source":" This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName> attached event for this class, so that PreviewKeyDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewKeyDown event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[365,590],"source":" Event handlers that are attached to the PreviewKeyDown event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"PreviewKeyDown is introduced in the .NET Framework version 3.5.","pos":[597,660]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[662,755],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewKeyDown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewKeyDownEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.KeyDown&gt;.","pos":[761,1105],"source":"<a name=\"routedEventInfo_PreviewKeyDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewKeyDownEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.KeyEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.KeyDown>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A&gt; to implement class handling for this event in derived classes.","pos":[1111,1240],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes."}]},{"pos":[462311,462323],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[462724,462815],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewKeyDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewKeyDown\"></xref> routed event."},{"pos":[462828,463537],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewKeyDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewKeyDownEvent is introduced in the .NET Framework version 3.5.","pos":[542,610]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[612,705],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[463703,463715],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[464081,464157],"content":"Occurs when a key is released while the keyboard is focused on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a key is released while the keyboard is focused on this element.","pos":[0,76]}]},{"pos":[464170,465417],"content":"Key handling interacts with other platform features such as commanding and text composition.       This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName> attached event for this class, so that PreviewKeyUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewKeyUp event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName> attached event and receive the same event data instance.       PreviewKeyUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewKeyUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewKeyUpEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.KeyEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.KeyUp>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Key handling interacts with other platform features such as commanding and text composition.","pos":[0,92]},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt; attached event for this class, so that PreviewKeyUp is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[99,366],"source":"       This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName> attached event for this class, so that PreviewKeyUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewKeyUp event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[367,588],"source":" Event handlers that are attached to the PreviewKeyUp event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"PreviewKeyUp is introduced in the .NET Framework version 3.5.","pos":[595,656]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[658,751],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewKeyUp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewKeyUpEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.KeyEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.KeyUp&gt;.","pos":[757,1095],"source":"<a name=\"routedEventInfo_PreviewKeyUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewKeyUpEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.KeyEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.KeyUp>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A&gt; to implement class handling for this event in derived classes.","pos":[1101,1228],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes."}]},{"pos":[465586,465598],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[465989,466078],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewKeyUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewKeyUp\"></xref> routed event."},{"pos":[466091,466798],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewKeyUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewKeyUpEvent is introduced in the .NET Framework version 3.5.","pos":[542,608]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[610,703],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[466962,466974],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[467400,467462],"content":"Occurs when the keyboard is no longer focused on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the keyboard is no longer focused on this element.","pos":[0,62]}]},{"pos":[467475,469044],"content":"Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.       This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName> attached event for this class, so that PreviewLostKeyboardFocus is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewLostKeyboardFocus event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName> attached event and receive the same event data instance.       PreviewLostKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewLostKeyboardFocus\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.LostKeyboardFocus>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.","pos":[0,164]},{"content":"Check the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data to determine the actual element that lost focus.","pos":[165,289],"source":" Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus."},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt; attached event for this class, so that PreviewLostKeyboardFocus is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[296,587],"source":"       This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName> attached event for this class, so that PreviewLostKeyboardFocus is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewLostKeyboardFocus event are attached to the underlying &lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[588,833],"source":" Event handlers that are attached to the PreviewLostKeyboardFocus event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"PreviewLostKeyboardFocus is introduced in the .NET Framework version 3.5.","pos":[840,913]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[915,1008],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewLostKeyboardFocus\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.KeyboardFocusChangedEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.LostKeyboardFocus&gt;.","pos":[1014,1405],"source":"<a name=\"routedEventInfo_PreviewLostKeyboardFocus\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.LostKeyboardFocus>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A&gt; to implement class handling for this event in derived classes.","pos":[1411,1550],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes."}]},{"pos":[469259,469271],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[469722,469823],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewLostKeyboardFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewLostKeyboardFocus\"></xref> routed event."},{"pos":[469836,470555],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewLostKeyboardFocusEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewLostKeyboardFocusEvent is introduced in the .NET Framework version 3.5.","pos":[542,620]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[622,715],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[470731,470743],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[471129,471208],"content":"Occurs when any mouse button is pressed while the pointer is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when any mouse button is pressed while the pointer is over this element.","pos":[0,79]}]},{"pos":[471221,473190],"content":"This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> attached event for this class, so that PreviewMouseDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewMouseDown event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> attached event and receive the same event data instance.       The PreviewMouseDown event is often raised together with either <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons. <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event reaches this element along the event route. See Remarks for <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>.       PreviewMouseDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewMouseDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseDownEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseDown>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; attached event for this class, so that PreviewMouseDown is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,272],"source":"This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> attached event for this class, so that PreviewMouseDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewMouseDown event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[273,499],"source":" Event handlers that are attached to the PreviewMouseDown event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"The PreviewMouseDown event is often raised together with either &lt;xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown&gt; or &lt;xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown&gt;, which correspond to a press of one of the two standard mouse buttons.","pos":[506,766],"source":"       The PreviewMouseDown event is often raised together with either <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons."},{"content":"&lt;xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown&gt; and &lt;xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown&gt; are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; event reaches this element along the event route.","pos":[767,1139],"source":" <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event reaches this element along the event route."},{"content":"See Remarks for &lt;xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown&gt; or &lt;xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown&gt;.","pos":[1140,1282],"source":" See Remarks for <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>."},{"content":"PreviewMouseDown is introduced in the .NET Framework version 3.5.","pos":[1289,1354]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1356,1449],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewMouseDown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewMouseDownEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.MouseDown&gt;.","pos":[1455,1813],"source":"<a name=\"routedEventInfo_PreviewMouseDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseDownEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseDown>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A&gt; to implement class handling for this event in derived classes.","pos":[1819,1950],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes."}]},{"pos":[473379,473391],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[473802,473895],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewMouseDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewMouseDown\"></xref> routed event."},{"pos":[473908,474619],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewMouseDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewMouseDownEvent is introduced in the .NET Framework version 3.5.","pos":[542,612]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[614,707],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[474787,474799],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[475235,475325],"content":"Occurs when the left mouse button is pressed while the mouse pointer is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the left mouse button is pressed while the mouse pointer is over this element.","pos":[0,90]}]},{"pos":[475338,478046],"content":"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.       This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route.       The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event. If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event. If you mark PreviewMouseLeftButtonDown handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> handled for all further listeners along the route, and on all related events. This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.       Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \"service\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class). The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data. For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.       PreviewMouseLeftButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewMouseLeftButtonDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Although this <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement3D&gt;.","pos":[0,267],"source":"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>."},{"content":"This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.","pos":[274,539],"source":"       This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route."},{"content":"The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; event.","pos":[546,698],"source":"       The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event."},{"content":"If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement3D.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.","pos":[699,1054],"source":" If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event."},{"content":"If you mark PreviewMouseLeftButtonDown handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.","pos":[1055,1284],"source":" If you mark PreviewMouseLeftButtonDown handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> handled for all further listeners along the route, and on all related events."},{"content":"This possibly includes class-handler generated events such as &lt;xref:System.Windows.Controls.Control.PreviewMouseDoubleClick&gt;.","pos":[1285,1410],"source":" This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>."},{"content":"Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement3D&gt;) to be a mouse \"service\" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).","pos":[1417,1630],"source":"       Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \"service\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class)."},{"content":"The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.","pos":[1631,1779]},{"content":"For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id=\"ph1\">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement3D&gt;.","pos":[1780,2070],"source":" For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>."},{"content":"PreviewMouseLeftButtonDown is introduced in the .NET Framework version 3.5.","pos":[2077,2152]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2154,2247],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewMouseLeftButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A&gt; to implement class handling for this event in derived classes.","pos":[2253,2685],"source":"<a name=\"routedEventInfo_PreviewMouseLeftButtonDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes."}]},{"pos":[478245,478257],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[478718,478821],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewMouseLeftButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewMouseLeftButtonDown\"></xref> routed event."},{"pos":[478834,479555],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewMouseLeftButtonDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewMouseLeftButtonDownEvent is introduced in the .NET Framework version 3.5.","pos":[542,622]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[624,717],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[479733,479745],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[480171,480262],"content":"Occurs when the left mouse button is released while the mouse pointer is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the left mouse button is released while the mouse pointer is over this element.","pos":[0,91]}]},{"pos":[480275,482841],"content":"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.       This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route.       The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event. If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event. If you mark PreviewMouseLeftButtonUp handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> handled for all further listeners along the route, and on all related events.       Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \"service\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class). The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data. For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.       PreviewMouseLeftButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewMouseLeftButtonUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Although this <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement3D&gt;.","pos":[0,267],"source":"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>."},{"content":"This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.","pos":[274,537],"source":"       This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route."},{"content":"The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; event.","pos":[544,694],"source":"       The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event."},{"content":"If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement3D.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.","pos":[695,1050],"source":" If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event."},{"content":"If you mark PreviewMouseLeftButtonUp handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.","pos":[1051,1276],"source":" If you mark PreviewMouseLeftButtonUp handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> handled for all further listeners along the route, and on all related events."},{"content":"Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement3D&gt;) to be a mouse \"service\" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).","pos":[1283,1496],"source":"       Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \"service\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class)."},{"content":"The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.","pos":[1497,1645]},{"content":"For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id=\"ph1\">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement3D&gt;.","pos":[1646,1936],"source":" For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>."},{"content":"PreviewMouseLeftButtonUp is introduced in the .NET Framework version 3.5.","pos":[1943,2016]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2018,2111],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewMouseLeftButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A&gt; to implement class handling for this event in derived classes.","pos":[2117,2543],"source":"<a name=\"routedEventInfo_PreviewMouseLeftButtonUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes."}]},{"pos":[483038,483050],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[483501,483602],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewMouseLeftButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewMouseLeftButtonUp\"></xref> routed event."},{"pos":[483615,484334],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewMouseLeftButtonUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewMouseLeftButtonUpEvent is introduced in the .NET Framework version 3.5.","pos":[542,620]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[622,715],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[484510,484522],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[484908,484989],"content":"Occurs when the mouse pointer moves while the mouse pointer is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the mouse pointer moves while the mouse pointer is over this element.","pos":[0,81]}]},{"pos":[485002,486359],"content":"This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.       This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName> attached event for this class, so that PreviewMouseMove is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewMouseMove event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName> attached event and receive the same event data instance.       PreviewMouseMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewMouseMove\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseMoveEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.MouseEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseMove>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.","pos":[0,170]},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt; attached event for this class, so that PreviewMouseMove is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[177,449],"source":"       This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName> attached event for this class, so that PreviewMouseMove is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewMouseMove event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[450,676],"source":" Event handlers that are attached to the PreviewMouseMove event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"PreviewMouseMove is introduced in the .NET Framework version 3.5.","pos":[683,748]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[750,843],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewMouseMove\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewMouseMoveEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.MouseEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.MouseMove&gt;.","pos":[849,1201],"source":"<a name=\"routedEventInfo_PreviewMouseMove\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseMoveEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.MouseEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseMove>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A&gt; to implement class handling for this event in derived classes.","pos":[1207,1338],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes."}]},{"pos":[486536,486548],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[486959,487052],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewMouseMove\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewMouseMove\"></xref> routed event."},{"pos":[487065,487776],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewMouseMoveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewMouseMoveEvent is introduced in the .NET Framework version 3.5.","pos":[542,612]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[614,707],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[487944,487956],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[488397,488488],"content":"Occurs when the right mouse button is pressed while the mouse pointer is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the right mouse button is pressed while the mouse pointer is over this element.","pos":[0,91]}]},{"pos":[488501,491214],"content":"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.       This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route.       The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event. If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event. If you mark PreviewMouseRightButtonDown handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> handled for all further listeners along the route, and on all related events. This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.       Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \"service\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class). The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data. For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.       PreviewMouseRightButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewMouseRightButtonDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Although this <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement3D&gt;.","pos":[0,267],"source":"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>."},{"content":"This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.","pos":[274,539],"source":"       This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route."},{"content":"The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; event.","pos":[546,698],"source":"       The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event."},{"content":"If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement3D.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.","pos":[699,1054],"source":" If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event."},{"content":"If you mark PreviewMouseRightButtonDown handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.","pos":[1055,1285],"source":" If you mark PreviewMouseRightButtonDown handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> handled for all further listeners along the route, and on all related events."},{"content":"This possibly includes class-handler generated events such as &lt;xref:System.Windows.Controls.Control.PreviewMouseDoubleClick&gt;.","pos":[1286,1411],"source":" This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>."},{"content":"Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement3D&gt;) to be a mouse \"service\" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).","pos":[1418,1631],"source":"       Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \"service\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class)."},{"content":"The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.","pos":[1632,1780]},{"content":"For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id=\"ph1\">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement3D&gt;.","pos":[1781,2071],"source":" For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>."},{"content":"PreviewMouseRightButtonDown is introduced in the .NET Framework version 3.5.","pos":[2078,2154]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2156,2249],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewMouseRightButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A&gt; to implement class handling for this event in derived classes.","pos":[2255,2690],"source":"<a name=\"routedEventInfo_PreviewMouseRightButtonDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes."}]},{"pos":[491414,491426],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[491892,491996],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewMouseRightButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewMouseRightButtonDown\"></xref> routed event."},{"pos":[492009,492731],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewMouseRightButtonDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewMouseRightButtonDownEvent is introduced in the .NET Framework version 3.5.","pos":[542,623]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[625,718],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[492910,492922],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[493353,493445],"content":"Occurs when the right mouse button is released while the mouse pointer is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the right mouse button is released while the mouse pointer is over this element.","pos":[0,92]}]},{"pos":[493458,496029],"content":"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.       This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route.       The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event. If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event. If you mark PreviewMouseRightButtonUp handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> handled for all further listeners along the route, and on all related events.       Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \"service\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class). The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data. For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.       PreviewMouseRightButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewMouseRightButtonUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Although this <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each &lt;xref:System.Windows.UIElement3D&gt;.","pos":[0,267],"source":"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>."},{"content":"This event is one of several related events that report the mouse-button specifics of an underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; event, which is an attached event that is processed by each element along an event route.","pos":[274,537],"source":"       This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route."},{"content":"The event data of this event exposes the event data of the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; event.","pos":[544,694],"source":"       The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event."},{"content":"If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling &lt;xref:System.Windows.UIElement3D.AddHandler%2A&gt;, with the option to handle events that are already marked as handled, in order to be listeners to the event.","pos":[695,1050],"source":" If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event."},{"content":"If you mark PreviewMouseRightButtonUp handled, you are essentially marking &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; handled for all further listeners along the route, and on all related events.","pos":[1051,1277],"source":" If you mark PreviewMouseRightButtonUp handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> handled for all further listeners along the route, and on all related events."},{"content":"Conceptually, think of this event (and other mouse-button events on &lt;xref:System.Windows.UIElement3D&gt;) to be a mouse \"service\" (with the service definition provided by the &lt;xref:System.Windows.Input.Mouse&gt; class).","pos":[1284,1497],"source":"       Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \"service\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class)."},{"content":"The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.","pos":[1498,1646]},{"content":"For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the <ph id=\"ph1\">[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]</ph> on the &lt;xref:System.Windows.Input.Mouse&gt; class rather than those on &lt;xref:System.Windows.UIElement3D&gt;.","pos":[1647,1937],"source":" For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>."},{"content":"PreviewMouseRightButtonUp is introduced in the .NET Framework version 3.5.","pos":[1944,2018]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2020,2113],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewMouseRightButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A&gt; to implement class handling for this event in derived classes.","pos":[2119,2548],"source":"<a name=\"routedEventInfo_PreviewMouseRightButtonUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes."}]},{"pos":[496227,496239],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[496695,496797],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewMouseRightButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewMouseRightButtonUp\"></xref> routed event."},{"pos":[496810,497530],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewMouseRightButtonUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewMouseRightButtonUpEvent is introduced in the .NET Framework version 3.5.","pos":[542,621]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[623,716],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[497707,497719],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[498095,498181],"content":"Occurs when any mouse button is released while the mouse pointer is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when any mouse button is released while the mouse pointer is over this element.","pos":[0,86]}]},{"pos":[498194,500129],"content":"This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> attached event for this class, so that PreviewMouseUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewMouseUp event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> attached event and receive the same event data instance.       The PreviewMouseUp event is often raised together with either <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons. <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event reaches this element along the event route. See Remarks for <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>.       PreviewMouseUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewMouseUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseUpEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseUp>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; attached event for this class, so that PreviewMouseUp is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,268],"source":"This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> attached event for this class, so that PreviewMouseUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewMouseUp event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[269,491],"source":" Event handlers that are attached to the PreviewMouseUp event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"The PreviewMouseUp event is often raised together with either &lt;xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp&gt; or &lt;xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp&gt;, which correspond to a press of one of the two standard mouse buttons.","pos":[498,752],"source":"       The PreviewMouseUp event is often raised together with either <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons."},{"content":"&lt;xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp&gt; and &lt;xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp&gt; are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; event reaches this element along the event route.","pos":[753,1119],"source":" <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event reaches this element along the event route."},{"content":"See Remarks for &lt;xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp&gt; or &lt;xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp&gt;.","pos":[1120,1258],"source":" See Remarks for <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>."},{"content":"PreviewMouseUp is introduced in the .NET Framework version 3.5.","pos":[1265,1328]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1330,1423],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewMouseUp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewMouseUpEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.MouseButtonEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.MouseUp&gt;.","pos":[1429,1781],"source":"<a name=\"routedEventInfo_PreviewMouseUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseUpEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseUp>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A&gt; to implement class handling for this event in derived classes.","pos":[1787,1916],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes."}]},{"pos":[500316,500328],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[500729,500820],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewMouseUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewMouseUp\"></xref> routed event."},{"pos":[500833,501542],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewMouseUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewMouseUpEvent is introduced in the .NET Framework version 3.5.","pos":[542,610]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[612,705],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[501708,501720],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[502111,502201],"content":"Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.","pos":[0,90]}]},{"pos":[502214,503683],"content":"Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.       This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName> attached event and receive the same event data instance.       PreviewMouseWheel is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewMouseWheel\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseWheelEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.MouseWheelEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseWheel>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.","pos":[0,202]},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt; attached event for this class, so that &lt;xref:System.Windows.UIElement3D.PreviewMouseMove&gt; is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[209,516],"source":"       This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the &lt;xref:System.Windows.UIElement3D.PreviewMouseMove&gt; event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[517,778],"source":" Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"PreviewMouseWheel is introduced in the .NET Framework version 3.5.","pos":[785,851]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[853,946],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewMouseWheel\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewMouseWheelEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.MouseWheelEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.MouseWheel&gt;.","pos":[952,1312],"source":"<a name=\"routedEventInfo_PreviewMouseWheel\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseWheelEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.MouseWheelEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseWheel>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A&gt; to implement class handling for this event in derived classes.","pos":[1318,1450],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes."}]},{"pos":[503871,503883],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[504299,504393],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewMouseWheel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewMouseWheel\"></xref> routed event."},{"pos":[504406,505118],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewMouseWheelEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewMouseWheelEvent is introduced in the .NET Framework version 3.5.","pos":[542,613]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[615,708],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[505287,505299],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[505725,505826],"content":"Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.","pos":[0,101]}]},{"pos":[505839,507223],"content":"The PreviewQueryContinueDrag event enables the drag source to declare whether the drag-and-drop operation should be canceled.       This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName> attached event for this class, so that PreviewQueryContinueDrag is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewQueryContinueDrag event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName> attached event and receive the same event data instance.       PreviewQueryContinueDrag is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewQueryContinueDrag\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewQueryContinueDragEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.QueryContinueDragEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.QueryContinueDrag>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"The PreviewQueryContinueDrag event enables the drag source to declare whether the drag-and-drop operation should be canceled.","pos":[0,125]},{"content":"This event creates an alias for the &lt;xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt; attached event for this class, so that PreviewQueryContinueDrag is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[132,417],"source":"       This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName> attached event for this class, so that PreviewQueryContinueDrag is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewQueryContinueDrag event are attached to the underlying &lt;xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[418,657],"source":" Event handlers that are attached to the PreviewQueryContinueDrag event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"PreviewQueryContinueDrag is introduced in the .NET Framework version 3.5.","pos":[664,737]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[739,832],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewQueryContinueDrag\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewQueryContinueDragEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.QueryContinueDragEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.QueryContinueDrag&gt;.","pos":[838,1220],"source":"<a name=\"routedEventInfo_PreviewQueryContinueDrag\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewQueryContinueDragEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.QueryContinueDragEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.QueryContinueDrag>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A&gt; to implement class handling for this event in derived classes.","pos":[1226,1365],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes."}]},{"pos":[507420,507432],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[507883,507984],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewQueryContinueDrag\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewQueryContinueDrag\"></xref> routed event."},{"pos":[507997,508716],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewQueryContinueDragEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewQueryContinueDragEvent is introduced in the .NET Framework version 3.5.","pos":[542,620]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[622,715],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[508892,508904],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[509325,509405],"content":"Occurs when the stylus button is pressed while the pointer is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the stylus button is pressed while the pointer is over this element.","pos":[0,80]}]},{"pos":[509418,510916],"content":"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName> attached event for this class, so that PreviewStylusButtonDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewStylusButtonDown event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       PreviewStylusButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewStylusButtonDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusButtonDownEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusButtonDown>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusButtonDown is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,287],"source":"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName> attached event for this class, so that PreviewStylusButtonDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewStylusButtonDown event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[288,529],"source":" Event handlers that are attached to the PreviewStylusButtonDown event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[536,602]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[603,775],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"PreviewStylusButtonDown is introduced in the .NET Framework version 3.5.","pos":[782,854]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[856,949],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewStylusButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewStylusButtonDownEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.StylusButtonDown&gt;.","pos":[955,1335],"source":"<a name=\"routedEventInfo_PreviewStylusButtonDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusButtonDownEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusButtonDown>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A&gt; to implement class handling for this event in derived classes.","pos":[1341,1479],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes."}]},{"pos":[511114,511126],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[511572,511672],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewStylusButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewStylusButtonDown\"></xref> routed event."},{"pos":[511685,512403],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewStylusButtonDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewStylusButtonDownEvent is introduced in the .NET Framework version 3.5.","pos":[542,619]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[621,714],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[512578,512590],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[513001,513082],"content":"Occurs when the stylus button is released while the pointer is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the stylus button is released while the pointer is over this element.","pos":[0,81]}]},{"pos":[513095,514575],"content":"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName> attached event for this class, so that PreviewStylusButtonUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewStylusButtonUp event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       PreviewStylusButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewStylusButtonUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusButtonUpEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusButtonUp>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusButtonUp is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,283],"source":"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName> attached event for this class, so that PreviewStylusButtonUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewStylusButtonUp event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[284,521],"source":" Event handlers that are attached to the PreviewStylusButtonUp event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[528,594]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[595,767],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"PreviewStylusButtonUp is introduced in the .NET Framework version 3.5.","pos":[774,844]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[846,939],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewStylusButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewStylusButtonUpEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.StylusButtonUp&gt;.","pos":[945,1319],"source":"<a name=\"routedEventInfo_PreviewStylusButtonUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusButtonUpEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusButtonUp>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A&gt; to implement class handling for this event in derived classes.","pos":[1325,1461],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes."}]},{"pos":[514771,514783],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[515219,515317],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewStylusButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewStylusButtonUp\"></xref> routed event."},{"pos":[515330,516046],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewStylusButtonUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewStylusButtonUpEvent is introduced in the .NET Framework version 3.5.","pos":[542,617]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[619,712],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[516219,516231],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[516622,516697],"content":"Occurs when the stylus touches the digitizer while it is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the stylus touches the digitizer while it is over this element.","pos":[0,75]}]},{"pos":[516710,518152],"content":"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName> attached event for this class, so that PreviewStylusDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewStylusDown event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       PreviewStylusDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewStylusDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusDownEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.StylusDownEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusDown>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusDown is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,275],"source":"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName> attached event for this class, so that PreviewStylusDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewStylusDown event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[276,505],"source":" Event handlers that are attached to the PreviewStylusDown event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[512,578]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[579,751],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"PreviewStylusDown is introduced in the .NET Framework version 3.5.","pos":[758,824]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[826,919],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewStylusDown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewStylusDownEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusDownEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.StylusDown&gt;.","pos":[925,1285],"source":"<a name=\"routedEventInfo_PreviewStylusDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusDownEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.StylusDownEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusDown>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A&gt; to implement class handling for this event in derived classes.","pos":[1291,1423],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes."}]},{"pos":[518340,518352],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[518768,518862],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewStylusDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewStylusDown\"></xref> routed event."},{"pos":[518875,519587],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewStylusDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewStylusDownEvent is introduced in the .NET Framework version 3.5.","pos":[542,613]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[615,708],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[519756,519768],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[520184,520269],"content":"Occurs when the stylus moves over an element without actually touching the digitizer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the stylus moves over an element without actually touching the digitizer.","pos":[0,85]}]},{"pos":[520282,521765],"content":"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName> attached event for this class, so that PreviewStylusInAirMove is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewStylusInAirMove event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       PreviewStylusInAirMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewStylusInAirMove\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusInAirMove>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusInAirMove is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,285],"source":"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName> attached event for this class, so that PreviewStylusInAirMove is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewStylusInAirMove event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[286,525],"source":" Event handlers that are attached to the PreviewStylusInAirMove event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[532,598]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[599,771],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"PreviewStylusInAirMove is introduced in the .NET Framework version 3.5.","pos":[778,849]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[851,944],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewStylusInAirMove\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.StylusInAirMove&gt;.","pos":[950,1321],"source":"<a name=\"routedEventInfo_PreviewStylusInAirMove\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusInAirMove>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A&gt; to implement class handling for this event in derived classes.","pos":[1327,1464],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes."}]},{"pos":[521950,521962],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[522403,522502],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewStylusInAirMove\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewStylusInAirMove\"></xref> routed event."},{"pos":[522515,523232],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewStylusInAirMoveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewStylusInAirMoveEvent is introduced in the .NET Framework version 3.5.","pos":[542,618]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[620,713],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[523406,523418],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[523824,523920],"content":"Occurs when the stylus is close enough to the digitizer to be detected, while over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the stylus is close enough to the digitizer to be detected, while over this element.","pos":[0,96]}]},{"pos":[523933,525398],"content":"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName> attached event for this class, so that PreviewStylusInRange is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewStylusInRange event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       PreviewStylusInRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewStylusInRange\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusInRangeEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusInRange>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusInRange is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,281],"source":"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName> attached event for this class, so that PreviewStylusInRange is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewStylusInRange event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[282,517],"source":" Event handlers that are attached to the PreviewStylusInRange event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[524,590]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[591,763],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"PreviewStylusInRange is introduced in the .NET Framework version 3.5.","pos":[770,839]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[841,934],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewStylusInRange\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewStylusInRangeEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.StylusInRange&gt;.","pos":[940,1305],"source":"<a name=\"routedEventInfo_PreviewStylusInRange\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusInRangeEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusInRange>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A&gt; to implement class handling for this event in derived classes.","pos":[1311,1446],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes."}]},{"pos":[525581,525593],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[526024,526121],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewStylusInRange\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewStylusInRange\"></xref> routed event."},{"pos":[526134,526849],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewStylusInRangeEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewStylusInRangeEvent is introduced in the .NET Framework version 3.5.","pos":[542,616]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[618,711],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[527021,527033],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[527424,527657],"content":"Occurs when the stylus moves while over the element. The stylus must move while being detected by the digitizer to raise this event, otherwise, <xref href=\"System.Windows.UIElement3D.PreviewStylusInAirMove\"></xref> is raised instead.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the stylus moves while over the element.","pos":[0,52]},{"content":"The stylus must move while being detected by the digitizer to raise this event, otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewStylusInAirMove\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is raised instead.","pos":[53,233],"source":" The stylus must move while being detected by the digitizer to raise this event, otherwise, <xref href=\"System.Windows.UIElement3D.PreviewStylusInAirMove\"></xref> is raised instead."}]},{"pos":[527670,529108],"content":"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName> attached event for this class, so that PreviewStylusMove is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewStylusMove event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       PreviewStylusMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewStylusMove\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusMoveEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusMove>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusMove is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,275],"source":"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName> attached event for this class, so that PreviewStylusMove is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewStylusMove event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[276,505],"source":" Event handlers that are attached to the PreviewStylusMove event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[512,578]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[579,751],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"PreviewStylusMove is introduced in the .NET Framework version 3.5.","pos":[758,824]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[826,919],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewStylusMove\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewStylusMoveEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.StylusMove&gt;.","pos":[925,1281],"source":"<a name=\"routedEventInfo_PreviewStylusMove\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusMoveEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusMove>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A&gt; to implement class handling for this event in derived classes.","pos":[1287,1419],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes."}]},{"pos":[529288,529300],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[529716,529810],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewStylusMove\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewStylusMove\"></xref> routed event."},{"pos":[529823,530535],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewStylusMoveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewStylusMoveEvent is introduced in the .NET Framework version 3.5.","pos":[542,613]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[615,708],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[530704,530716],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[531137,531205],"content":"Occurs when the stylus is too far from the digitizer to be detected.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the stylus is too far from the digitizer to be detected.","pos":[0,68]}]},{"pos":[531218,532710],"content":"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName> attached event for this class, so that PreviewStylusOutOfRange is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewStylusOutOfRange event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       PreviewStylusOutOfRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewStylusOutOfRange\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusOutOfRange>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusOutOfRange is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,287],"source":"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName> attached event for this class, so that PreviewStylusOutOfRange is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewStylusOutOfRange event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[288,529],"source":" Event handlers that are attached to the PreviewStylusOutOfRange event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[536,602]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[603,775],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"PreviewStylusOutOfRange is introduced in the .NET Framework version 3.5.","pos":[782,854]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[856,949],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewStylusOutOfRange\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.StylusOutOfRange&gt;.","pos":[955,1329],"source":"<a name=\"routedEventInfo_PreviewStylusOutOfRange\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusOutOfRange>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A&gt; to implement class handling for this event in derived classes.","pos":[1335,1473],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes."}]},{"pos":[532896,532908],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[533354,533454],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewStylusOutOfRange\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewStylusOutOfRange\"></xref> routed event."},{"pos":[533467,534185],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewStylusOutOfRangeEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewStylusOutOfRangeEvent is introduced in the .NET Framework version 3.5.","pos":[542,619]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[621,714],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[534360,534372],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[534808,534867],"content":"Occurs when a user performs one of several stylus gestures.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a user performs one of several stylus gestures.","pos":[0,59]}]},{"pos":[534880,536506],"content":"For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.       This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName> attached event for this class, so that PreviewStylusSystemGesture is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewStylusSystemGesture event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       PreviewStylusSystemGesture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewStylusSystemGesture\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusSystemGesture>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"For information about stylus gestures, see &lt;xref:System.Windows.Input.SystemGesture&gt;.","pos":[0,85],"source":"For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>."},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt; attached event for this class, so that PreviewStylusSystemGesture is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[92,385],"source":"       This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName> attached event for this class, so that PreviewStylusSystemGesture is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewStylusSystemGesture event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[386,633],"source":" Event handlers that are attached to the PreviewStylusSystemGesture event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[640,706]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[707,879],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"PreviewStylusSystemGesture is introduced in the .NET Framework version 3.5.","pos":[886,961]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[963,1056],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewStylusSystemGesture\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusSystemGestureEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.StylusSystemGesture&gt;.","pos":[1062,1458],"source":"<a name=\"routedEventInfo_PreviewStylusSystemGesture\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusSystemGesture>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A&gt; to implement class handling for this event in derived classes.","pos":[1464,1605],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes."}]},{"pos":[536721,536733],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[537194,537297],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewStylusSystemGesture\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewStylusSystemGesture\"></xref> routed event."},{"pos":[537310,538031],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewStylusSystemGestureEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewStylusSystemGestureEvent is introduced in the .NET Framework version 3.5.","pos":[542,622]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[624,717],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[538209,538221],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[538602,538697],"content":"Occurs when the user raises the stylus off the digitizer while the stylus is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the user raises the stylus off the digitizer while the stylus is over this element.","pos":[0,95]}]},{"pos":[538710,540202],"content":"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       PreviewStylusUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewStylusUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusUpEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusUp>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt; attached event for this class, so that &lt;xref:System.Windows.UIElement3D.PreviewStylusDown&gt; is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,307],"source":"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the &lt;xref:System.Windows.UIElement3D.PreviewStylusDown&gt; event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[308,569],"source":" Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[576,642]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[643,815],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"PreviewStylusUp is introduced in the .NET Framework version 3.5.","pos":[822,886]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[888,981],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewStylusUp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewStylusUpEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.StylusUp&gt;.","pos":[987,1337],"source":"<a name=\"routedEventInfo_PreviewStylusUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusUpEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusUp>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A&gt; to implement class handling for this event in derived classes.","pos":[1343,1473],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes."}]},{"pos":[540380,540392],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[540798,540890],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewStylusUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewStylusUp\"></xref> routed event."},{"pos":[540903,541613],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewStylusUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewStylusUpEvent is introduced in the .NET Framework version 3.5.","pos":[542,611]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[613,706],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[541780,541792],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[542178,542244],"content":"Occurs when this element gets text in a device-independent manner.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when this element gets text in a device-independent manner.","pos":[0,66]}]},{"pos":[542257,543898],"content":"The PreviewTextInput event allows a component or application to listen for text input in a device-independent manner. The keyboard is the primary means of PreviewTextInput; but speech, handwriting, and other input devices can also generate PreviewTextInput.       Because of key combinations—either in default keyboards or through input method editors—multiple key events may raise just one text input event.       This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName> attached event for this class, so that PreviewTextInput is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewTextInput event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName> attached event and receive the same event data instance.       PreviewTextInput is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_PreviewTextInput\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewTextInputEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.TextCompositionEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.TextInput>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"The PreviewTextInput event allows a component or application to listen for text input in a device-independent manner.","pos":[0,117]},{"content":"The keyboard is the primary means of PreviewTextInput; but speech, handwriting, and other input devices can also generate PreviewTextInput.","pos":[118,257]},{"content":"Because of key combinations—either in default keyboards or through input method editors—multiple key events may raise just one text input event.","pos":[264,408]},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt; attached event for this class, so that PreviewTextInput is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[415,704],"source":"       This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName> attached event for this class, so that PreviewTextInput is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the PreviewTextInput event are attached to the underlying &lt;xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[705,948],"source":" Event handlers that are attached to the PreviewTextInput event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"PreviewTextInput is introduced in the .NET Framework version 3.5.","pos":[955,1020]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1022,1115],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewTextInput\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewTextInputEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.Windows.Input.TextCompositionEventHandler&gt;|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.TextInput&gt;.","pos":[1121,1483],"source":"<a name=\"routedEventInfo_PreviewTextInput\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewTextInputEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.Windows.Input.TextCompositionEventHandler>|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.TextInput>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewTextInput%2A&gt; to implement class handling for this event in derived classes.","pos":[1489,1620],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewTextInput%2A> to implement class handling for this event in derived classes."}]},{"pos":[544095,544107],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[544518,544611],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewTextInput\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewTextInput\"></xref> routed event."},{"pos":[544624,545335],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       PreviewTextInputEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"PreviewTextInputEvent is introduced in the .NET Framework version 3.5.","pos":[542,612]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[614,707],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[545503,545515],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[545901,545979],"content":"Occurs when a finger touches the screen while the finger is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a finger touches the screen while the finger is over this element.","pos":[0,78]}]},{"pos":[545992,547173],"content":"By default, the PreviewTouchDown and <xref:System.Windows.UIElement3D.TouchDown> events do not occur until a finger touches the screen and moves. Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>. The press and hold behavior is equivalent to a mouse right-click.       To cause the PreviewTouchDown and <xref:System.Windows.UIElement3D.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName> attached property to `false` for this element.      <a name=\"routedEventInfo_PreviewTouchDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewTouchDownEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.TouchDown>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"By default, the PreviewTouchDown and &lt;xref:System.Windows.UIElement3D.TouchDown&gt; events do not occur until a finger touches the screen and moves.","pos":[0,145],"source":"By default, the PreviewTouchDown and <xref:System.Windows.UIElement3D.TouchDown> events do not occur until a finger touches the screen and moves."},{"content":"Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a &lt;xref:System.Windows.Input.Stylus&gt;.","pos":[146,286],"source":" Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>."},{"content":"The press and hold behavior is equivalent to a mouse right-click.","pos":[287,352]},{"content":"To cause the PreviewTouchDown and &lt;xref:System.Windows.UIElement3D.TouchDown&gt; events to occur as soon as a finger touches the screen, set the &lt;xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName&gt; attached property to <ph id=\"ph1\">`false`</ph> for this element.","pos":[359,632],"source":"       To cause the PreviewTouchDown and <xref:System.Windows.UIElement3D.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName> attached property to `false` for this element."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewTouchDown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewTouchDownEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.TouchDown&gt;.","pos":[638,1027],"source":"<a name=\"routedEventInfo_PreviewTouchDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewTouchDownEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.TouchDown>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A&gt; to implement class handling for this event in derived classes.","pos":[1033,1164],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes."}]},{"pos":[547379,547391],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[547802,547895],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewTouchDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewTouchDown\"></xref> routed event."},{"pos":[548062,548074],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[548460,548539],"content":"Occurs when a finger moves on the screen while the finger is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a finger moves on the screen while the finger is over this element.","pos":[0,79]}]},{"pos":[548552,549091],"content":"<a name=\"routedEventInfo_PreviewTouchMove\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewTouchMoveEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.TouchMove>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewTouchMove\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewTouchMoveEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.TouchMove&gt;.","pos":[0,389],"source":"<a name=\"routedEventInfo_PreviewTouchMove\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewTouchMoveEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.TouchMove>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A&gt; to implement class handling for this event in derived classes.","pos":[395,526],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes."}]},{"pos":[549297,549309],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[549720,549813],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewTouchMove\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewTouchMove\"></xref> routed event."},{"pos":[549980,549992],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[550368,550455],"content":"Occurs when a finger is raised off of the screen while the finger is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a finger is raised off of the screen while the finger is over this element.","pos":[0,87]}]},{"pos":[550468,550999],"content":"<a name=\"routedEventInfo_PreviewTouchUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewTouchUpEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.TouchUp>.      -   Override <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_PreviewTouchUp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.PreviewTouchUpEvent&gt;|   |Routing strategy|Tunneling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   The corresponding bubbling event is &lt;xref:System.Windows.UIElement3D.TouchUp&gt;.","pos":[0,383],"source":"<a name=\"routedEventInfo_PreviewTouchUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.PreviewTouchUpEvent>|   |Routing strategy|Tunneling|   |Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|      -   The corresponding bubbling event is <xref:System.Windows.UIElement3D.TouchUp>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A&gt; to implement class handling for this event in derived classes.","pos":[389,518],"source":"      -   Override <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes."}]},{"pos":[551203,551215],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[551616,551707],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.PreviewTouchUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.PreviewTouchUp\"></xref> routed event."},{"pos":[551872,551884],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[552275,552376],"content":"Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.","pos":[0,101]}]},{"pos":[552389,553719],"content":"The QueryContinueDrag event enables the drag source to determine whether the drag-and-drop operation should be canceled.       This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName> attached event for this class, so that QueryContinueDrag is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the QueryContinueDrag event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName> attached event and receive the same event data instance.       QueryContinueDrag is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_QueryContinueDrag\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.QueryContinueDragEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.QueryContinueDragEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag>.      -   Override <xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"The QueryContinueDrag event enables the drag source to determine whether the drag-and-drop operation should be canceled.","pos":[0,120]},{"content":"This event creates an alias for the &lt;xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt; attached event for this class, so that QueryContinueDrag is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[127,398],"source":"       This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName> attached event for this class, so that QueryContinueDrag is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the QueryContinueDrag event are attached to the underlying &lt;xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[399,624],"source":" Event handlers that are attached to the QueryContinueDrag event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"QueryContinueDrag is introduced in the .NET Framework version 3.5.","pos":[631,697]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[699,792],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_QueryContinueDrag\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.QueryContinueDragEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.QueryContinueDragEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewQueryContinueDrag&gt;.","pos":[798,1173],"source":"<a name=\"routedEventInfo_QueryContinueDrag\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.QueryContinueDragEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.QueryContinueDragEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A&gt; to implement class handling for this event in derived classes.","pos":[1179,1311],"source":"      -   Override <xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes."}]},{"pos":[553909,553921],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[554337,554431],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.QueryContinueDrag\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.QueryContinueDrag\"></xref> routed event."},{"pos":[554444,555156],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       QueryContinueDragEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"QueryContinueDragEvent is introduced in the .NET Framework version 3.5.","pos":[542,613]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[615,708],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[555325,555337],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[555698,555920],"content":"Occurs when the cursor is requested to display. This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the cursor is requested to display. This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.","pos":[0,222],"nodes":[{"content":"Occurs when the cursor is requested to display.","pos":[0,47]},{"content":"This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.","pos":[48,222]}]}]},{"pos":[555933,558534],"content":"This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName> attached event for this class, so that QueryCursor is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the QueryCursor event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName> attached event and receive the same event data instance.       The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point). Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in [!INCLUDE[TLA2#tla_win](~/add/includes/tla2sharptla-win-md.md)] programming. That object is represented by the <xref:System.Windows.Input.Cursor> class in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]. The [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] input system enables you to change this cursor when it represents the onscreen position of the mouse pointer. You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.       Listening for the QueryCursor event is not an efficient technique for cursor management. Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>. You should only rely on QueryCursor if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs. For more information on implementing cursor behavior in response to QueryCursor, see <xref:System.Windows.Input.QueryCursorEventHandler>.       QueryCursor is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_QueryCursor\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.QueryCursorEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.QueryCursorEventHandler>|      -   There is no defined corresponding tunneling event.      -   Override <xref:System.Windows.UIElement3D.OnQueryCursor%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt; attached event for this class, so that QueryCursor is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,262],"source":"This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName> attached event for this class, so that QueryCursor is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the QueryCursor event are attached to the underlying &lt;xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[263,479],"source":" Event handlers that are attached to the QueryCursor event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).","pos":[486,610]},{"content":"Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win](~/add/includes/tla2sharptla-win-md.md)]</ph> programming.","pos":[611,847],"source":" Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in [!INCLUDE[TLA2#tla_win](~/add/includes/tla2sharptla-win-md.md)] programming."},{"content":"That object is represented by the &lt;xref:System.Windows.Input.Cursor&gt; class in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.","pos":[848,1002],"source":" That object is represented by the <xref:System.Windows.Input.Cursor> class in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]."},{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.","pos":[1003,1192],"source":" The [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] input system enables you to change this cursor when it represents the onscreen position of the mouse pointer."},{"content":"You can use predefined values from the &lt;xref:System.Windows.Input.Cursors&gt; enumeration, or you can declare a custom cursor as an image file.","pos":[1193,1333],"source":" You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file."},{"content":"Listening for the QueryCursor event is not an efficient technique for cursor management.","pos":[1340,1428]},{"content":"Instead, each element should define its own cursor behavior with &lt;xref:System.Windows.FrameworkContentElement.Cursor%2A&gt; and &lt;xref:System.Windows.FrameworkContentElement.ForceCursor%2A&gt;.","pos":[1429,1615],"source":" Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>."},{"content":"You should only rely on QueryCursor if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.","pos":[1616,1825]},{"content":"For more information on implementing cursor behavior in response to QueryCursor, see &lt;xref:System.Windows.Input.QueryCursorEventHandler&gt;.","pos":[1826,1963],"source":" For more information on implementing cursor behavior in response to QueryCursor, see <xref:System.Windows.Input.QueryCursorEventHandler>."},{"content":"QueryCursor is introduced in the .NET Framework version 3.5.","pos":[1970,2030]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2032,2125],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_QueryCursor\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.QueryCursorEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.QueryCursorEventHandler&gt;|      -   There is no defined corresponding tunneling event.","pos":[2131,2448],"source":"<a name=\"routedEventInfo_QueryCursor\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.QueryCursorEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.QueryCursorEventHandler>|      -   There is no defined corresponding tunneling event."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnQueryCursor%2A&gt; to implement class handling for this event in derived classes.","pos":[2454,2580],"source":"      -   Override <xref:System.Windows.UIElement3D.OnQueryCursor%2A> to implement class handling for this event in derived classes."}]},{"pos":[558718,558730],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[559116,559204],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.QueryCursor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.QueryCursor\"></xref> routed event."},{"pos":[559217,559923],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       QueryCursorEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"QueryCursorEvent is introduced in the .NET Framework version 3.5.","pos":[542,607]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[609,702],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[560086,560098],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[560570,560858],"content":"Raises a specific routed event. The <xref href=\"System.Windows.RoutedEvent\"></xref> to be raised is identified within the <xref href=\"System.Windows.RoutedEventArgs\"></xref> instance that is provided (as the <xref:System.Windows.RoutedEventArgs.RoutedEvent*> property of that event data).","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises a specific routed event.","pos":[0,31]},{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.RoutedEvent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be raised is identified within the <bpt id=\"p2\">&lt;xref href=\"System.Windows.RoutedEventArgs\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance that is provided (as the &lt;xref:System.Windows.RoutedEventArgs.RoutedEvent*&gt; property of that event data).","pos":[32,288],"source":" The <xref href=\"System.Windows.RoutedEvent\"></xref> to be raised is identified within the <xref href=\"System.Windows.RoutedEventArgs\"></xref> instance that is provided (as the <xref:System.Windows.RoutedEventArgs.RoutedEvent*> property of that event data)."}]},{"pos":[560871,561770],"content":"The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.       <xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise. This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.       RaiseEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`e`</ph> parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because &lt;xref:System.Windows.RoutedEventArgs&gt; derived classes contain the actual specific data properties that are intended for the specific event when it is raised.","pos":[0,366],"source":"The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised."},{"content":"&lt;xref:System.Windows.RoutedEventArgs&gt; is not just the state properties for the event; it also identifies which routed event to raise.","pos":[373,506],"source":"       <xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise."},{"content":"This event-raising pattern and the routed event data both differ from <ph id=\"ph1\">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> events and data classes, which typically just contain properties that are related to the event.","pos":[507,734],"source":" This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event."},{"content":"RaiseEvent is introduced in the .NET Framework version 3.5.","pos":[741,800]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[802,895],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[561944,562066],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.RoutedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data and also identifies the event to raise.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.RoutedEventArgs\"></xref> that contains the event data and also identifies the event to raise."},{"pos":[562545,562599],"content":"Releases all captured touch devices from this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Releases all captured touch devices from this element.","pos":[0,54]}]},{"pos":[563153,563214],"content":"Releases the mouse capture, if this element held the capture.","needQuote":true,"needEscape":true,"nodes":[{"content":"Releases the mouse capture, if this element held the capture.","pos":[0,61]}]},{"pos":[563227,563588],"content":"If this element did not hold the capture, calling this method has no effect. Consider checking the value of <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> before you call this method.       ReleaseMouseCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"If this element did not hold the capture, calling this method has no effect.","pos":[0,76]},{"content":"Consider checking the value of &lt;xref:System.Windows.UIElement3D.IsMouseCaptured%2A&gt; before you call this method.","pos":[77,189],"source":" Consider checking the value of <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> before you call this method."},{"content":"ReleaseMouseCapture is introduced in the .NET Framework version 3.5.","pos":[196,264]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[266,359],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[564140,564209],"content":"Releases the stylus device capture, if this element held the capture.","needQuote":true,"needEscape":true,"nodes":[{"content":"Releases the stylus device capture, if this element held the capture.","pos":[0,69]}]},{"pos":[564222,564585],"content":"If this element did not hold the capture, calling this method has no effect. Consider checking the value of <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> before you call this method.       ReleaseStylusCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"If this element did not hold the capture, calling this method has no effect.","pos":[0,76]},{"content":"Consider checking the value of &lt;xref:System.Windows.UIElement3D.IsStylusCaptured%2A&gt; before you call this method.","pos":[77,190],"source":" Consider checking the value of <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> before you call this method."},{"content":"ReleaseStylusCapture is introduced in the .NET Framework version 3.5.","pos":[197,266]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[268,361],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[565235,565300],"content":"Attempts to release the specified touch device from this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to release the specified touch device from this element.","pos":[0,65]}]},{"pos":[565506,565528],"content":"The device to release.","needQuote":true,"needEscape":true,"nodes":[{"content":"The device to release.","pos":[0,22]}]},{"pos":[565587,565755],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the touch device is released; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the touch device is released; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[565932,566021],"content":"<ph id=\"ph1\">&lt;code&gt;touchDevice&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>touchDevice</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[566530,566591],"content":"Removes the specified routed event handler from this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified routed event handler from this element.","pos":[0,61]}]},{"pos":[566604,568043],"content":"The most common scenario for using this [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)] is when you implement the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] \"wrapper\" event that is associated with a custom routed event, specifically when you implement the \"remove\" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] level.       Calling this method has no effect if there were no handlers registered with criteria that match the input parameters for the method call.       If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed. This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.       Neither `routedEvent` nor `handler` may be `null`. Attempting to provide either value as `null` will raise an exception.       This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events. Either type of handler is removed.       RemoveHandler is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The most common scenario for using this <ph id=\"ph1\">[!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]</ph> is when you implement the <ph id=\"ph2\">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> \"wrapper\" event that is associated with a custom routed event, specifically when you implement the \"remove\" logic for handlers at the <ph id=\"ph3\">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> level.","pos":[0,394],"source":"The most common scenario for using this [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)] is when you implement the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] \"wrapper\" event that is associated with a custom routed event, specifically when you implement the \"remove\" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] level."},{"content":"Calling this method has no effect if there were no handlers registered with criteria that match the input parameters for the method call.","pos":[401,538]},{"content":"If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.","pos":[545,670]},{"content":"This behavior is consistent with <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> behavior of the <ph id=\"ph2\">`-=`</ph> operator.","pos":[671,798],"source":" This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator."},{"content":"Neither <ph id=\"ph1\">`routedEvent`</ph> nor <ph id=\"ph2\">`handler`</ph> may be <ph id=\"ph3\">`null`</ph>.","pos":[805,855],"source":"       Neither `routedEvent` nor `handler` may be `null`."},{"content":"Attempting to provide either value as <ph id=\"ph1\">`null`</ph> will raise an exception.","pos":[856,925],"source":" Attempting to provide either value as `null` will raise an exception."},{"content":"This method ignores the <ph id=\"ph1\">`handledEventsToo`</ph> parameter information, which is provided if the handler was first added with the &lt;xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt; signature that enables handling of already-handled events.","pos":[932,1226],"source":"       This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events."},{"content":"Either type of handler is removed.","pos":[1227,1261]},{"content":"RemoveHandler is introduced in the .NET Framework version 3.5.","pos":[1268,1330]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1332,1425],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[568250,568319],"content":"The identifier of the routed event for which the handler is attached.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the routed event for which the handler is attached.","pos":[0,69]}]},{"pos":[568385,568481],"content":"The specific handler implementation to remove from the event handler collection on this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specific handler implementation to remove from the event handler collection on this element.","pos":[0,96]}]},{"pos":[568998,569162],"content":"Returns whether serialization processes should serialize the contents of the <xref:System.Windows.UIElement3D.CommandBindings*> property on instances of this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns whether serialization processes should serialize the contents of the &lt;xref:System.Windows.UIElement3D.CommandBindings*&gt; property on instances of this class.","pos":[0,164],"source":"Returns whether serialization processes should serialize the contents of the <xref:System.Windows.UIElement3D.CommandBindings*> property on instances of this class."}]},{"pos":[569175,569992],"content":"This will return `true` if <xref:System.Windows.UIElement3D.CommandBindings%2A> is locally set.       This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement3D.CommandBindings%2A> property does not have a simple default value. This method indicates whether the property has changed from its default value. You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement3D>.       For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/add/includes/ajax-current-ext-md.md).       ShouldSerializeCommandBindings is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This will return <ph id=\"ph1\">`true`</ph> if &lt;xref:System.Windows.UIElement3D.CommandBindings%2A&gt; is locally set.","pos":[0,95],"source":"This will return `true` if <xref:System.Windows.UIElement3D.CommandBindings%2A> is locally set."},{"content":"This <ph id=\"ph1\">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.UIElement3D.CommandBindings%2A&gt; property does not have a simple default value.","pos":[102,255],"source":"       This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement3D.CommandBindings%2A> property does not have a simple default value."},{"content":"This method indicates whether the property has changed from its default value.","pos":[256,334]},{"content":"You typically invoke this method if you are either developing a designer or developing your own control incorporating a &lt;xref:System.Windows.UIElement3D&gt;.","pos":[335,489],"source":" You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement3D>."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Defining Default Values with the ShouldSerialize and Reset Methods<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[496,630],"source":"       For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/add/includes/ajax-current-ext-md.md)."},{"content":"ShouldSerializeCommandBindings is introduced in the .NET Framework version 3.5.","pos":[637,716]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[718,811],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[570141,570371],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.UIElement3D.CommandBindings*&gt; property value should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.UIElement3D.CommandBindings*> property value should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[570895,571057],"content":"Returns whether serialization processes should serialize the contents of the <xref:System.Windows.UIElement3D.InputBindings*> property on instances of this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns whether serialization processes should serialize the contents of the &lt;xref:System.Windows.UIElement3D.InputBindings*&gt; property on instances of this class.","pos":[0,162],"source":"Returns whether serialization processes should serialize the contents of the <xref:System.Windows.UIElement3D.InputBindings*> property on instances of this class."}]},{"pos":[571070,571881],"content":"This will return `true` if <xref:System.Windows.UIElement3D.InputBindings%2A> is locally set.       This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement3D.InputBindings%2A> property does not have a simple default value. This method indicates whether the property has changed from its default value. You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement3D>.       For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/add/includes/ajax-current-ext-md.md).       ShouldSerializeInputBindings is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This will return <ph id=\"ph1\">`true`</ph> if &lt;xref:System.Windows.UIElement3D.InputBindings%2A&gt; is locally set.","pos":[0,93],"source":"This will return `true` if <xref:System.Windows.UIElement3D.InputBindings%2A> is locally set."},{"content":"This <ph id=\"ph1\">`ShouldSerialize`</ph> method is provided because the &lt;xref:System.Windows.UIElement3D.InputBindings%2A&gt; property does not have a simple default value.","pos":[100,251],"source":"       This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement3D.InputBindings%2A> property does not have a simple default value."},{"content":"This method indicates whether the property has changed from its default value.","pos":[252,330]},{"content":"You typically invoke this method if you are either developing a designer or developing your own control incorporating a &lt;xref:System.Windows.UIElement3D&gt;.","pos":[331,485],"source":" You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement3D>."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Defining Default Values with the ShouldSerialize and Reset Methods<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[492,626],"source":"       For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/add/includes/ajax-current-ext-md.md)."},{"content":"ShouldSerializeInputBindings is introduced in the .NET Framework version 3.5.","pos":[633,710]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[712,805],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[572028,572256],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.UIElement3D.InputBindings*&gt; property value should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.UIElement3D.InputBindings*> property value should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[572711,572791],"content":"Occurs when the stylus button is pressed while the pointer is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the stylus button is pressed while the pointer is over this element.","pos":[0,80]}]},{"pos":[572804,574253],"content":"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName> attached event for this class, so that StylusButtonDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusButtonDown event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       StylusButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_StylusButtonDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusButtonDownEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusButtonDown>.      -   Override <xref:System.Windows.UIElement3D.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt; attached event for this class, so that StylusButtonDown is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,273],"source":"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName> attached event for this class, so that StylusButtonDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the StylusButtonDown event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[274,501],"source":" Event handlers that are attached to the StylusButtonDown event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[508,574]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[575,747],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"StylusButtonDown is introduced in the .NET Framework version 3.5.","pos":[754,819]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[821,914],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_StylusButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.StylusButtonDownEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewStylusButtonDown&gt;.","pos":[920,1293],"source":"<a name=\"routedEventInfo_StylusButtonDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusButtonDownEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusButtonDown>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnStylusButtonDown%2A&gt; to implement class handling for this event in derived classes.","pos":[1299,1430],"source":"      -   Override <xref:System.Windows.UIElement3D.OnStylusButtonDown%2A> to implement class handling for this event in derived classes."}]},{"pos":[574444,574456],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[574867,574960],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.StylusButtonDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.StylusButtonDown\"></xref> routed event."},{"pos":[574973,575684],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       StylusButtonDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"StylusButtonDownEvent is introduced in the .NET Framework version 3.5.","pos":[542,612]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[614,707],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[575852,575864],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[576240,576321],"content":"Occurs when the stylus button is released while the pointer is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the stylus button is released while the pointer is over this element.","pos":[0,81]}]},{"pos":[576334,577765],"content":"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName> attached event for this class, so that StylusButtonUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusButtonUp event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       StylusButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_StylusButtonUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusButtonUpEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusButtonUp>.      -   Override <xref:System.Windows.UIElement3D.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt; attached event for this class, so that StylusButtonUp is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,269],"source":"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName> attached event for this class, so that StylusButtonUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the StylusButtonUp event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[270,493],"source":" Event handlers that are attached to the StylusButtonUp event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[500,566]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[567,739],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"StylusButtonUp is introduced in the .NET Framework version 3.5.","pos":[746,809]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[811,904],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_StylusButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.StylusButtonUpEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusButtonEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewStylusButtonUp&gt;.","pos":[910,1277],"source":"<a name=\"routedEventInfo_StylusButtonUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusButtonUpEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusButtonUp>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnStylusButtonUp%2A&gt; to implement class handling for this event in derived classes.","pos":[1283,1412],"source":"      -   Override <xref:System.Windows.UIElement3D.OnStylusButtonUp%2A> to implement class handling for this event in derived classes."}]},{"pos":[577954,577966],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[578367,578458],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.StylusButtonUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.StylusButtonUp\"></xref> routed event."},{"pos":[578471,579180],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       StylusButtonUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"StylusButtonUpEvent is introduced in the .NET Framework version 3.5.","pos":[542,610]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[612,705],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[579346,579358],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[579714,579797],"content":"Occurs when the stylus touches the digitizer while the stylus is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the stylus touches the digitizer while the stylus is over this element.","pos":[0,83]}]},{"pos":[579810,581203],"content":"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName> attached event for this class, so that StylusDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusDown event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       StylusDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_StylusDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusDownEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusDownEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusDown>.      -   Override <xref:System.Windows.UIElement3D.OnStylusDown%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt; attached event for this class, so that StylusDown is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,261],"source":"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName> attached event for this class, so that StylusDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the StylusDown event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[262,477],"source":" Event handlers that are attached to the StylusDown event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[484,550]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[551,723],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"StylusDown is introduced in the .NET Framework version 3.5.","pos":[730,789]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[791,884],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_StylusDown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.StylusDownEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusDownEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewStylusDown&gt;.","pos":[890,1243],"source":"<a name=\"routedEventInfo_StylusDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusDownEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusDownEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusDown>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnStylusDown%2A&gt; to implement class handling for this event in derived classes.","pos":[1249,1374],"source":"      -   Override <xref:System.Windows.UIElement3D.OnStylusDown%2A> to implement class handling for this event in derived classes."}]},{"pos":[581384,581396],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[581777,581864],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.StylusDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.StylusDown\"></xref> routed event."},{"pos":[581877,582582],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       StylusDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"StylusDownEvent is introduced in the .NET Framework version 3.5.","pos":[542,606]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[608,701],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[582744,582756],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[583117,583174],"content":"Occurs when the stylus enters the bounds of this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the stylus enters the bounds of this element.","pos":[0,57]}]},{"pos":[583187,585087],"content":"StylusEnter is a [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) that uses the direct event handling routing strategy. Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised. However, they do enable other aspects of routed event behavior, such as event triggers in styles.       Although StylusEnter tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsStylusOver%2A> property value has changed from `false` to `true` on this element.       This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName> attached event for this class, so that StylusEnter is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusEnter event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       StylusEnter is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_StylusEnter\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusEnterEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnStylusEnter%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"StylusEnter is a <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> that uses the direct event handling routing strategy.","pos":[0,134],"source":"StylusEnter is a [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) that uses the direct event handling routing strategy."},{"content":"Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.","pos":[135,254]},{"content":"However, they do enable other aspects of routed event behavior, such as event triggers in styles.","pos":[255,352]},{"content":"Although StylusEnter tracks when the stylus enters the bounds of an element, this event more literally reports that the &lt;xref:System.Windows.UIElement3D.IsStylusOver%2A&gt; property value has changed from <ph id=\"ph1\">`false`</ph> to <ph id=\"ph2\">`true`</ph> on this element.","pos":[359,595],"source":"       Although StylusEnter tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsStylusOver%2A> property value has changed from `false` to `true` on this element."},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt; attached event for this class, so that StylusEnter is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[602,865],"source":"       This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName> attached event for this class, so that StylusEnter is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the StylusEnter event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[866,1083],"source":" Event handlers that are attached to the StylusEnter event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[1090,1156]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1157,1329],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"StylusEnter is introduced in the .NET Framework version 3.5.","pos":[1336,1396]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1398,1491],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_StylusEnter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.StylusEnterEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement3D.OnStylusEnter%2A&gt; to implement class handling for this event in derived classes.","pos":[1497,1879],"source":"<a name=\"routedEventInfo_StylusEnter\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusEnterEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnStylusEnter%2A> to implement class handling for this event in derived classes."}]},{"pos":[585261,585273],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[585659,585747],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.StylusEnter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.StylusEnter\"></xref> routed event."},{"pos":[585760,586466],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       StylusEnterEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"StylusEnterEvent is introduced in the .NET Framework version 3.5.","pos":[542,607]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[609,702],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[586629,586641],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[587022,587107],"content":"Occurs when the stylus moves over an element without actually touching the digitizer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the stylus moves over an element without actually touching the digitizer.","pos":[0,85]}]},{"pos":[587120,588554],"content":"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName> attached event for this class, so that StylusInAirMove is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusInAirMove event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       StylusInAirMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_StylusInAirMove\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusInAirMoveEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusInAirMove>.      -   Override <xref:System.Windows.UIElement3D.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt; attached event for this class, so that StylusInAirMove is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,271],"source":"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName> attached event for this class, so that StylusInAirMove is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the StylusInAirMove event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[272,497],"source":" Event handlers that are attached to the StylusInAirMove event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[504,570]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[571,743],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"StylusInAirMove is introduced in the .NET Framework version 3.5.","pos":[750,814]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[816,909],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_StylusInAirMove\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.StylusInAirMoveEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewStylusInAirMove&gt;.","pos":[915,1279],"source":"<a name=\"routedEventInfo_StylusInAirMove\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusInAirMoveEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusInAirMove>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnStylusInAirMove%2A&gt; to implement class handling for this event in derived classes.","pos":[1285,1415],"source":"      -   Override <xref:System.Windows.UIElement3D.OnStylusInAirMove%2A> to implement class handling for this event in derived classes."}]},{"pos":[588732,588744],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[589150,589242],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.StylusInAirMove\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.StylusInAirMove\"></xref> routed event."},{"pos":[589255,589965],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       StylusInAirMoveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"StylusInAirMoveEvent is introduced in the .NET Framework version 3.5.","pos":[542,611]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[613,706],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[590132,590144],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[590515,590611],"content":"Occurs when the stylus is close enough to the digitizer to be detected, while over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the stylus is close enough to the digitizer to be detected, while over this element.","pos":[0,96]}]},{"pos":[590624,592040],"content":"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName> attached event for this class, so that StylusInRange is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusInRange event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       StylusInRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_StylusInRange\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusInRangeEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusInRange>.      -   Override <xref:System.Windows.UIElement3D.OnStylusInRange%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt; attached event for this class, so that StylusInRange is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,267],"source":"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName> attached event for this class, so that StylusInRange is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the StylusInRange event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[268,489],"source":" Event handlers that are attached to the StylusInRange event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[496,562]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[563,735],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"StylusInRange is introduced in the .NET Framework version 3.5.","pos":[742,804]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[806,899],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_StylusInRange\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.StylusInRangeEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewStylusInRange&gt;.","pos":[905,1263],"source":"<a name=\"routedEventInfo_StylusInRange\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusInRangeEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusInRange>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnStylusInRange%2A&gt; to implement class handling for this event in derived classes.","pos":[1269,1397],"source":"      -   Override <xref:System.Windows.UIElement3D.OnStylusInRange%2A> to implement class handling for this event in derived classes."}]},{"pos":[592216,592228],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[592624,592714],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.StylusInRange\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.StylusInRange\"></xref> routed event."},{"pos":[592727,593435],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       StylusInRangeEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"StylusInRangeEvent is introduced in the .NET Framework version 3.5.","pos":[542,609]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[611,704],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[593600,593612],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[593973,594029],"content":"Occurs when the stylus leaves the bounds of the element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the stylus leaves the bounds of the element.","pos":[0,56]}]},{"pos":[594042,595942],"content":"StylusLeave is a [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) that uses the direct event handling routing strategy. Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised. However, they do enable other aspects of routed event behavior, such as event triggers in styles.       Although StylusLeave tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsStylusOver%2A> property value has changed from `true` to `false` on this element.       This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName> attached event for this class, so that StylusLeave is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusLeave event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       StylusLeave is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_StylusLeave\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusLeaveEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnStylusLeave%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"StylusLeave is a <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> that uses the direct event handling routing strategy.","pos":[0,134],"source":"StylusLeave is a [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) that uses the direct event handling routing strategy."},{"content":"Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.","pos":[135,254]},{"content":"However, they do enable other aspects of routed event behavior, such as event triggers in styles.","pos":[255,352]},{"content":"Although StylusLeave tracks when the stylus leaves the bounds of an element, this event more literally reports that the &lt;xref:System.Windows.UIElement3D.IsStylusOver%2A&gt; property value has changed from <ph id=\"ph1\">`true`</ph> to <ph id=\"ph2\">`false`</ph> on this element.","pos":[359,595],"source":"       Although StylusLeave tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsStylusOver%2A> property value has changed from `true` to `false` on this element."},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt; attached event for this class, so that StylusLeave is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[602,865],"source":"       This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName> attached event for this class, so that StylusLeave is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the StylusLeave event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[866,1083],"source":" Event handlers that are attached to the StylusLeave event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[1090,1156]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1157,1329],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"StylusLeave is introduced in the .NET Framework version 3.5.","pos":[1336,1396]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1398,1491],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_StylusLeave\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.StylusLeaveEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   Override &lt;xref:System.Windows.UIElement3D.OnStylusLeave%2A&gt; to implement class handling for this event in derived classes.","pos":[1497,1879],"source":"<a name=\"routedEventInfo_StylusLeave\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusLeaveEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   Override <xref:System.Windows.UIElement3D.OnStylusLeave%2A> to implement class handling for this event in derived classes."}]},{"pos":[596116,596128],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[596514,596602],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.StylusLeave\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.StylusLeave\"></xref> routed event."},{"pos":[596615,597321],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       StylusLeaveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"StylusLeaveEvent is introduced in the .NET Framework version 3.5.","pos":[542,607]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[609,702],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[597484,597496],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[597852,598058],"content":"Occurs when the stylus moves over this element. The stylus must move while on the digitizer to raise this event. Otherwise, <xref href=\"System.Windows.UIElement3D.StylusInAirMove\"></xref> is raised instead.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the stylus moves over this element.","pos":[0,47]},{"content":"The stylus must move while on the digitizer to raise this event.","pos":[48,112]},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.StylusInAirMove\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is raised instead.","pos":[113,206],"source":" Otherwise, <xref href=\"System.Windows.UIElement3D.StylusInAirMove\"></xref> is raised instead."}]},{"pos":[598071,599460],"content":"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName> attached event for this class, so that StylusMove is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusMove event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       StylusMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_StylusMove\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusMoveEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusMove>.      -   Override <xref:System.Windows.UIElement3D.OnStylusMove%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt; attached event for this class, so that StylusMove is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,261],"source":"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName> attached event for this class, so that StylusMove is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the StylusMove event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[262,477],"source":" Event handlers that are attached to the StylusMove event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[484,550]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[551,723],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"StylusMove is introduced in the .NET Framework version 3.5.","pos":[730,789]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[791,884],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_StylusMove\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.StylusMoveEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewStylusMove&gt;.","pos":[890,1239],"source":"<a name=\"routedEventInfo_StylusMove\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusMoveEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusMove>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnStylusMove%2A&gt; to implement class handling for this event in derived classes.","pos":[1245,1370],"source":"      -   Override <xref:System.Windows.UIElement3D.OnStylusMove%2A> to implement class handling for this event in derived classes."}]},{"pos":[599633,599645],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[600026,600113],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.StylusMove\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.StylusMove\"></xref> routed event."},{"pos":[600126,600831],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       StylusMoveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"StylusMoveEvent is introduced in the .NET Framework version 3.5.","pos":[542,606]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[608,701],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[600993,601005],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[601391,601484],"content":"Occurs when the stylus is too far from the digitizer to be detected, while over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the stylus is too far from the digitizer to be detected, while over this element.","pos":[0,93]}]},{"pos":[601497,602940],"content":"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName> attached event for this class, so that StylusOutOfRange is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusOutOfRange event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       StylusOutOfRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_StylusOutOfRange\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusOutOfRangeEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange>.      -   Override <xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt; attached event for this class, so that StylusOutOfRange is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,273],"source":"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName> attached event for this class, so that StylusOutOfRange is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the StylusOutOfRange event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[274,501],"source":" Event handlers that are attached to the StylusOutOfRange event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[508,574]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[575,747],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"StylusOutOfRange is introduced in the .NET Framework version 3.5.","pos":[754,819]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[821,914],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_StylusOutOfRange\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.StylusOutOfRangeEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewStylusOutOfRange&gt;.","pos":[920,1287],"source":"<a name=\"routedEventInfo_StylusOutOfRange\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusOutOfRangeEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A&gt; to implement class handling for this event in derived classes.","pos":[1293,1424],"source":"      -   Override <xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes."}]},{"pos":[603119,603131],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[603542,603635],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.StylusOutOfRange\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.StylusOutOfRange\"></xref> routed event."},{"pos":[603648,604359],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       StylusOutOfRangeEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"StylusOutOfRangeEvent is introduced in the .NET Framework version 3.5.","pos":[542,612]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[614,707],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[604527,604539],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[604940,604999],"content":"Occurs when a user performs one of several stylus gestures.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a user performs one of several stylus gestures.","pos":[0,59]}]},{"pos":[605012,606594],"content":"For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.       This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName> attached event for this class, so that StylusSystemGesture is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusSystemGesture event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       StylusSystemGesture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_StylusSystemGesture\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusSystemGestureEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture>.      -   Override <xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"For more information about stylus gestures, see &lt;xref:System.Windows.Input.SystemGesture&gt;.","pos":[0,90],"source":"For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>."},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt; attached event for this class, so that StylusSystemGesture is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[97,376],"source":"       This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName> attached event for this class, so that StylusSystemGesture is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the StylusSystemGesture event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[377,610],"source":" Event handlers that are attached to the StylusSystemGesture event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[617,683]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[684,856],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"StylusSystemGesture is introduced in the .NET Framework version 3.5.","pos":[863,931]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[933,1026],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_StylusSystemGesture\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.StylusSystemGestureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusSystemGestureEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewStylusSystemGesture&gt;.","pos":[1032,1421],"source":"<a name=\"routedEventInfo_StylusSystemGesture\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusSystemGestureEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A&gt; to implement class handling for this event in derived classes.","pos":[1427,1561],"source":"      -   Override <xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes."}]},{"pos":[606802,606814],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[607240,607336],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.StylusSystemGesture\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.StylusSystemGesture\"></xref> routed event."},{"pos":[607349,608063],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       StylusSystemGestureEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"StylusSystemGestureEvent is introduced in the .NET Framework version 3.5.","pos":[542,615]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[617,710],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[608234,608246],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[608592,608679],"content":"Occurs when the user raises the stylus off the digitizer while it is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the user raises the stylus off the digitizer while it is over this element.","pos":[0,87]}]},{"pos":[608692,610063],"content":"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName> attached event for this class, so that StylusUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusUp event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName> attached event and receive the same event data instance.       Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).       StylusUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_StylusUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusUpEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusUp>.      -   Override <xref:System.Windows.UIElement3D.OnStylusUp%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt; attached event for this class, so that StylusUp is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[0,257],"source":"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName> attached event for this class, so that StylusUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the StylusUp event are attached to the underlying &lt;xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[258,469],"source":" Event handlers that are attached to the StylusUp event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"Touch, mouse, and stylus input exist in a particular relationship.","pos":[476,542]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Touch Input Support in Windows Vista<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=160818)</ept> and <bpt id=\"p2\">[</bpt>Input Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[543,715],"source":" For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"StylusUp is introduced in the .NET Framework version 3.5.","pos":[722,779]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[781,874],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_StylusUp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.StylusUpEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.StylusEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewStylusUp&gt;.","pos":[880,1223],"source":"<a name=\"routedEventInfo_StylusUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.StylusUpEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.StylusEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusUp>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnStylusUp%2A&gt; to implement class handling for this event in derived classes.","pos":[1229,1352],"source":"      -   Override <xref:System.Windows.UIElement3D.OnStylusUp%2A> to implement class handling for this event in derived classes."}]},{"pos":[610234,610246],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[610617,610702],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.StylusUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.StylusUp\"></xref> routed event."},{"pos":[610715,611418],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       StylusUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"StylusUpEvent is introduced in the .NET Framework version 3.5.","pos":[542,604]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[606,699],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[611578,611590],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[611941,612007],"content":"Occurs when this element gets text in a device-independent manner.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when this element gets text in a device-independent manner.","pos":[0,66]}]},{"pos":[612020,613590],"content":"The TextInput event allows a component or application to listen for text input in a device-independent manner. The keyboard is the primary means of TextInput, but speech, handwriting, and other input devices can also raise TextInput.       Because of key combinations—either in default keyboards or through input method editors—multiple key events might raise just one text input event.       This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName> attached event for this class, so that TextInput is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the TextInput event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName> attached event and receive the same event data instance.       TextInput is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"routedEventInfo_TextInput\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.TextInputEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.TextCompositionEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTextInput>.      -   Override <xref:System.Windows.UIElement3D.OnTextInput%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"The TextInput event allows a component or application to listen for text input in a device-independent manner.","pos":[0,110]},{"content":"The keyboard is the primary means of TextInput, but speech, handwriting, and other input devices can also raise TextInput.","pos":[111,233]},{"content":"Because of key combinations—either in default keyboards or through input method editors—multiple key events might raise just one text input event.","pos":[240,386]},{"content":"This event creates an alias for the &lt;xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt; attached event for this class, so that TextInput is part of the class members list when &lt;xref:System.Windows.UIElement3D&gt; is inherited as a base element.","pos":[393,668],"source":"       This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName> attached event for this class, so that TextInput is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element."},{"content":"Event handlers that are attached to the TextInput event are attached to the underlying &lt;xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt; attached event and receive the same event data instance.","pos":[669,898],"source":" Event handlers that are attached to the TextInput event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName> attached event and receive the same event data instance."},{"content":"TextInput is introduced in the .NET Framework version 3.5.","pos":[905,963]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[965,1058],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_TextInput\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.TextInputEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Input.TextCompositionEventHandler&gt;|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewTextInput&gt;.","pos":[1064,1419],"source":"<a name=\"routedEventInfo_TextInput\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.TextInputEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Input.TextCompositionEventHandler>|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTextInput>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnTextInput%2A&gt; to implement class handling for this event in derived classes.","pos":[1425,1549],"source":"      -   Override <xref:System.Windows.UIElement3D.OnTextInput%2A> to implement class handling for this event in derived classes."}]},{"pos":[613780,613792],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[614168,614254],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.TextInput\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.TextInput\"></xref> routed event."},{"pos":[614267,614971],"content":"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.       TextInputEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Routed event identifiers are created when routed events are registered.","pos":[0,71]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.","pos":[72,214]},{"content":"You can use these identifiers to add class handlers.","pos":[215,267]},{"content":"For more information about registering routed events, see &lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;.","pos":[274,390],"source":"       For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."},{"content":"For more information about using routed event identifiers to add class handlers, see &lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;.","pos":[391,535],"source":" For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>."},{"content":"TextInputEvent is introduced in the .NET Framework version 3.5.","pos":[542,605]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[607,700],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[615132,615144],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[615495,615573],"content":"Occurs when a finger touches the screen while the finger is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a finger touches the screen while the finger is over this element.","pos":[0,78]}]},{"pos":[615586,616753],"content":"By default, the <xref:System.Windows.UIElement3D.PreviewTouchDown> and TouchDown events do not occur until a finger touches the screen and moves. Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>. The press and hold behavior is equivalent to a mouse right-click.       To cause the <xref:System.Windows.UIElement3D.PreviewTouchDown> and TouchDown events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName> attached property to `false` for this element.      <a name=\"routedEventInfo_TouchDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.TouchDownEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTouchDown>.      -   Override <xref:System.Windows.UIElement3D.OnTouchDown%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"By default, the &lt;xref:System.Windows.UIElement3D.PreviewTouchDown&gt; and TouchDown events do not occur until a finger touches the screen and moves.","pos":[0,145],"source":"By default, the <xref:System.Windows.UIElement3D.PreviewTouchDown> and TouchDown events do not occur until a finger touches the screen and moves."},{"content":"Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a &lt;xref:System.Windows.Input.Stylus&gt;.","pos":[146,286],"source":" Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>."},{"content":"The press and hold behavior is equivalent to a mouse right-click.","pos":[287,352]},{"content":"To cause the &lt;xref:System.Windows.UIElement3D.PreviewTouchDown&gt; and TouchDown events to occur as soon as a finger touches the screen, set the &lt;xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName&gt; attached property to <ph id=\"ph1\">`false`</ph> for this element.","pos":[359,632],"source":"       To cause the <xref:System.Windows.UIElement3D.PreviewTouchDown> and TouchDown events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName> attached property to `false` for this element."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_TouchDown\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.TouchDownEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewTouchDown&gt;.","pos":[638,1020],"source":"<a name=\"routedEventInfo_TouchDown\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.TouchDownEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTouchDown>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnTouchDown%2A&gt; to implement class handling for this event in derived classes.","pos":[1026,1150],"source":"      -   Override <xref:System.Windows.UIElement3D.OnTouchDown%2A> to implement class handling for this event in derived classes."}]},{"pos":[616952,616964],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[617340,617426],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.TouchDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.TouchDown\"></xref> routed event."},{"pos":[617586,617598],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[617954,618030],"content":"Occurs when a touch moves from outside to inside the bounds of this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a touch moves from outside to inside the bounds of this element.","pos":[0,76]}]},{"pos":[618043,618566],"content":"This event is always raised, whether or not the touch device is captured to this element.      <a name=\"routedEventInfo_TouchEnter\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.TouchEnterEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|      -   Override <xref:System.Windows.UIElement3D.OnTouchEnter%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event is always raised, whether or not the touch device is captured to this element.","pos":[0,89]},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_TouchEnter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.TouchEnterEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   Override &lt;xref:System.Windows.UIElement3D.OnTouchEnter%2A&gt; to implement class handling for this event in derived classes.","pos":[95,510],"source":"<a name=\"routedEventInfo_TouchEnter\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.TouchEnterEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|      -   Override <xref:System.Windows.UIElement3D.OnTouchEnter%2A> to implement class handling for this event in derived classes."}]},{"pos":[618766,618778],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[619159,619246],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.TouchEnter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.TouchEnter\"></xref> routed event."},{"pos":[619407,619419],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[619803,619860],"content":"Gets all touch devices that are captured to this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets all touch devices that are captured to this element.","pos":[0,57]}]},{"pos":[620105,620219],"content":"An enumeration of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.TouchDevice\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that are captured to this element.","needQuote":true,"needEscape":true,"source":"An enumeration of <xref href=\"System.Windows.Input.TouchDevice\"></xref> objects that are captured to this element."},{"pos":[620689,620787],"content":"Gets all touch devices that are captured to this element or any child elements in its visual tree.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets all touch devices that are captured to this element or any child elements in its visual tree.","pos":[0,98]}]},{"pos":[621038,621193],"content":"An enumeration of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.TouchDevice\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that are captured to this element or any child elements in its visual tree.","needQuote":true,"needEscape":true,"source":"An enumeration of <xref href=\"System.Windows.Input.TouchDevice\"></xref> objects that are captured to this element or any child elements in its visual tree."},{"pos":[621659,621709],"content":"Gets all touch devices that are over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets all touch devices that are over this element.","pos":[0,50]}]},{"pos":[621958,622065],"content":"An enumeration of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.TouchDevice\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that are over this element.","needQuote":true,"needEscape":true,"source":"An enumeration of <xref href=\"System.Windows.Input.TouchDevice\"></xref> objects that are over this element."},{"pos":[622489,622580],"content":"Gets all touch devices that are over this element or any child elements in its visual tree.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets all touch devices that are over this element or any child elements in its visual tree.","pos":[0,91]}]},{"pos":[622821,622969],"content":"An enumeration of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.TouchDevice\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that are over this element or any child elements in its visual tree.","needQuote":true,"needEscape":true,"source":"An enumeration of <xref href=\"System.Windows.Input.TouchDevice\"></xref> objects that are over this element or any child elements in its visual tree."},{"pos":[623377,623453],"content":"Occurs when a touch moves from inside to outside the bounds of this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a touch moves from inside to outside the bounds of this element.","pos":[0,76]}]},{"pos":[623466,623892],"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_TouchLeave\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.TouchLeaveEvent&gt;|   |Routing strategy|Direct|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   Override &lt;xref:System.Windows.UIElement3D.OnTouchLeave%2A&gt; to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"source":"<a name=\"routedEventInfo_TouchLeave\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.TouchLeaveEvent>|   |Routing strategy|Direct|   |Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|      -   Override <xref:System.Windows.UIElement3D.OnTouchLeave%2A> to implement class handling for this event in derived classes."},{"pos":[624092,624104],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[624485,624572],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.TouchLeave\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.TouchLeave\"></xref> routed event."},{"pos":[624733,624745],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[625096,625175],"content":"Occurs when a finger moves on the screen while the finger is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a finger moves on the screen while the finger is over this element.","pos":[0,79]}]},{"pos":[625188,625713],"content":"<a name=\"routedEventInfo_TouchMove\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.TouchMoveEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTouchMove>.      -   Override <xref:System.Windows.UIElement3D.OnTouchMove%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_TouchMove\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.TouchMoveEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewTouchMove&gt;.","pos":[0,382],"source":"<a name=\"routedEventInfo_TouchMove\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.TouchMoveEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTouchMove>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnTouchMove%2A&gt; to implement class handling for this event in derived classes.","pos":[388,512],"source":"      -   Override <xref:System.Windows.UIElement3D.OnTouchMove%2A> to implement class handling for this event in derived classes."}]},{"pos":[625912,625924],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[626300,626386],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.TouchMove\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.TouchMove\"></xref> routed event."},{"pos":[626546,626558],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[626899,626986],"content":"Occurs when a finger is raised off of the screen while the finger is over this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a finger is raised off of the screen while the finger is over this element.","pos":[0,87]}]},{"pos":[626999,627516],"content":"<a name=\"routedEventInfo_TouchUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.TouchUpEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTouchUp>.      -   Override <xref:System.Windows.UIElement3D.OnTouchUp%2A> to implement class handling for this event in derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_TouchUp\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.TouchUpEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.EventHandler%601&gt; of type &lt;xref:System.Windows.Input.TouchEventArgs&gt;.|      -   The corresponding tunneling event is &lt;xref:System.Windows.UIElement3D.PreviewTouchUp&gt;.","pos":[0,376],"source":"<a name=\"routedEventInfo_TouchUp\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.TouchUpEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|      -   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTouchUp>."},{"content":"-   Override &lt;xref:System.Windows.UIElement3D.OnTouchUp%2A&gt; to implement class handling for this event in derived classes.","pos":[382,504],"source":"      -   Override <xref:System.Windows.UIElement3D.OnTouchUp%2A> to implement class handling for this event in derived classes."}]},{"pos":[627713,627725],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[628091,628175],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement3D.TouchUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.UIElement3D.TouchUp\"></xref> routed event."},{"pos":[628333,628345],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[628704,628808],"content":"Gets or sets the <ph id=\"ph1\">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> visibility of this element.","needQuote":true,"needEscape":true,"source":"Gets or sets the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] visibility of this element."},{"pos":[628821,629714],"content":"Setting this property affects the value of <xref:System.Windows.UIElement3D.IsVisible%2A>, which in turn may raise the <xref:System.Windows.UIElement3D.IsVisibleChanged> event. However, <xref:System.Windows.UIElement3D.IsVisible%2A> has other factors that influence it, for instance the visibility settings of parents that contain it.       Elements where Visibility is not <xref:System.Windows.Visibility> do not participate in input events (or commands) and are not reported in hit testing.       Visibility is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_Visibility\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.VisibilityProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"Setting this property affects the value of &lt;xref:System.Windows.UIElement3D.IsVisible%2A&gt;, which in turn may raise the &lt;xref:System.Windows.UIElement3D.IsVisibleChanged&gt; event.","pos":[0,176],"source":"Setting this property affects the value of <xref:System.Windows.UIElement3D.IsVisible%2A>, which in turn may raise the <xref:System.Windows.UIElement3D.IsVisibleChanged> event."},{"content":"However, &lt;xref:System.Windows.UIElement3D.IsVisible%2A&gt; has other factors that influence it, for instance the visibility settings of parents that contain it.","pos":[177,334],"source":" However, <xref:System.Windows.UIElement3D.IsVisible%2A> has other factors that influence it, for instance the visibility settings of parents that contain it."},{"content":"Elements where Visibility is not &lt;xref:System.Windows.Visibility&gt; do not participate in input events (or commands) and are not reported in hit testing.","pos":[341,492],"source":"       Elements where Visibility is not <xref:System.Windows.Visibility> do not participate in input events (or commands) and are not reported in hit testing."},{"content":"Visibility is introduced in the .NET Framework version 3.5.","pos":[499,558]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[560,653],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Visibility\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.UIElement3D.VisibilityProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[659,879],"source":"<a name=\"dependencyPropertyInfo_Visibility\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.UIElement3D.VisibilityProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[629866,629962],"content":"A value of the enumeration. The default value is <xref href=\"System.Windows.Visibility\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value of the enumeration.","pos":[0,27]},{"content":"The default value is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Visibility\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[28,96],"source":" The default value is <xref href=\"System.Windows.Visibility\"></xref>."}]},{"pos":[630409,630490],"content":"Identifies the <xref:System.Windows.UIElement3D.Visibility*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.UIElement3D.Visibility*&gt; dependency property.","pos":[0,81],"source":"Identifies the <xref:System.Windows.UIElement3D.Visibility*> dependency property."}]},{"pos":[630502,630664],"content":"VisibilityProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"VisibilityProperty is introduced in the .NET Framework version 3.5.","pos":[0,67]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[69,162],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[630842,630854],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.UIElement3D\n  id: UIElement3D\n  children:\n  - System.Windows.UIElement3D.#ctor\n  - System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  - System.Windows.UIElement3D.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement3D.AllowDrop\n  - System.Windows.UIElement3D.AllowDropProperty\n  - System.Windows.UIElement3D.AreAnyTouchesCaptured\n  - System.Windows.UIElement3D.AreAnyTouchesCapturedProperty\n  - System.Windows.UIElement3D.AreAnyTouchesCapturedWithin\n  - System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty\n  - System.Windows.UIElement3D.AreAnyTouchesDirectlyOver\n  - System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty\n  - System.Windows.UIElement3D.AreAnyTouchesOver\n  - System.Windows.UIElement3D.AreAnyTouchesOverProperty\n  - System.Windows.UIElement3D.CaptureMouse\n  - System.Windows.UIElement3D.CaptureStylus\n  - System.Windows.UIElement3D.CaptureTouch(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement3D.CommandBindings\n  - System.Windows.UIElement3D.DragEnter\n  - System.Windows.UIElement3D.DragEnterEvent\n  - System.Windows.UIElement3D.DragLeave\n  - System.Windows.UIElement3D.DragLeaveEvent\n  - System.Windows.UIElement3D.DragOver\n  - System.Windows.UIElement3D.DragOverEvent\n  - System.Windows.UIElement3D.Drop\n  - System.Windows.UIElement3D.DropEvent\n  - System.Windows.UIElement3D.Focus\n  - System.Windows.UIElement3D.Focusable\n  - System.Windows.UIElement3D.FocusableChanged\n  - System.Windows.UIElement3D.FocusableProperty\n  - System.Windows.UIElement3D.GetUIParentCore\n  - System.Windows.UIElement3D.GiveFeedback\n  - System.Windows.UIElement3D.GiveFeedbackEvent\n  - System.Windows.UIElement3D.GotFocus\n  - System.Windows.UIElement3D.GotFocusEvent\n  - System.Windows.UIElement3D.GotKeyboardFocus\n  - System.Windows.UIElement3D.GotKeyboardFocusEvent\n  - System.Windows.UIElement3D.GotMouseCapture\n  - System.Windows.UIElement3D.GotMouseCaptureEvent\n  - System.Windows.UIElement3D.GotStylusCapture\n  - System.Windows.UIElement3D.GotStylusCaptureEvent\n  - System.Windows.UIElement3D.GotTouchCapture\n  - System.Windows.UIElement3D.GotTouchCaptureEvent\n  - System.Windows.UIElement3D.InputBindings\n  - System.Windows.UIElement3D.InvalidateModel\n  - System.Windows.UIElement3D.IsEnabled\n  - System.Windows.UIElement3D.IsEnabledChanged\n  - System.Windows.UIElement3D.IsEnabledCore\n  - System.Windows.UIElement3D.IsEnabledProperty\n  - System.Windows.UIElement3D.IsFocused\n  - System.Windows.UIElement3D.IsFocusedProperty\n  - System.Windows.UIElement3D.IsHitTestVisible\n  - System.Windows.UIElement3D.IsHitTestVisibleChanged\n  - System.Windows.UIElement3D.IsHitTestVisibleProperty\n  - System.Windows.UIElement3D.IsInputMethodEnabled\n  - System.Windows.UIElement3D.IsKeyboardFocused\n  - System.Windows.UIElement3D.IsKeyboardFocusedChanged\n  - System.Windows.UIElement3D.IsKeyboardFocusedProperty\n  - System.Windows.UIElement3D.IsKeyboardFocusWithin\n  - System.Windows.UIElement3D.IsKeyboardFocusWithinChanged\n  - System.Windows.UIElement3D.IsKeyboardFocusWithinProperty\n  - System.Windows.UIElement3D.IsMouseCaptured\n  - System.Windows.UIElement3D.IsMouseCapturedChanged\n  - System.Windows.UIElement3D.IsMouseCapturedProperty\n  - System.Windows.UIElement3D.IsMouseCaptureWithin\n  - System.Windows.UIElement3D.IsMouseCaptureWithinChanged\n  - System.Windows.UIElement3D.IsMouseCaptureWithinProperty\n  - System.Windows.UIElement3D.IsMouseDirectlyOver\n  - System.Windows.UIElement3D.IsMouseDirectlyOverChanged\n  - System.Windows.UIElement3D.IsMouseDirectlyOverProperty\n  - System.Windows.UIElement3D.IsMouseOver\n  - System.Windows.UIElement3D.IsMouseOverProperty\n  - System.Windows.UIElement3D.IsStylusCaptured\n  - System.Windows.UIElement3D.IsStylusCapturedChanged\n  - System.Windows.UIElement3D.IsStylusCapturedProperty\n  - System.Windows.UIElement3D.IsStylusCaptureWithin\n  - System.Windows.UIElement3D.IsStylusCaptureWithinChanged\n  - System.Windows.UIElement3D.IsStylusCaptureWithinProperty\n  - System.Windows.UIElement3D.IsStylusDirectlyOver\n  - System.Windows.UIElement3D.IsStylusDirectlyOverChanged\n  - System.Windows.UIElement3D.IsStylusDirectlyOverProperty\n  - System.Windows.UIElement3D.IsStylusOver\n  - System.Windows.UIElement3D.IsStylusOverProperty\n  - System.Windows.UIElement3D.IsVisible\n  - System.Windows.UIElement3D.IsVisibleChanged\n  - System.Windows.UIElement3D.IsVisibleProperty\n  - System.Windows.UIElement3D.KeyDown\n  - System.Windows.UIElement3D.KeyDownEvent\n  - System.Windows.UIElement3D.KeyUp\n  - System.Windows.UIElement3D.KeyUpEvent\n  - System.Windows.UIElement3D.LostFocus\n  - System.Windows.UIElement3D.LostFocusEvent\n  - System.Windows.UIElement3D.LostKeyboardFocus\n  - System.Windows.UIElement3D.LostKeyboardFocusEvent\n  - System.Windows.UIElement3D.LostMouseCapture\n  - System.Windows.UIElement3D.LostMouseCaptureEvent\n  - System.Windows.UIElement3D.LostStylusCapture\n  - System.Windows.UIElement3D.LostStylusCaptureEvent\n  - System.Windows.UIElement3D.LostTouchCapture\n  - System.Windows.UIElement3D.LostTouchCaptureEvent\n  - System.Windows.UIElement3D.MouseDown\n  - System.Windows.UIElement3D.MouseDownEvent\n  - System.Windows.UIElement3D.MouseEnter\n  - System.Windows.UIElement3D.MouseEnterEvent\n  - System.Windows.UIElement3D.MouseLeave\n  - System.Windows.UIElement3D.MouseLeaveEvent\n  - System.Windows.UIElement3D.MouseLeftButtonDown\n  - System.Windows.UIElement3D.MouseLeftButtonDownEvent\n  - System.Windows.UIElement3D.MouseLeftButtonUp\n  - System.Windows.UIElement3D.MouseLeftButtonUpEvent\n  - System.Windows.UIElement3D.MouseMove\n  - System.Windows.UIElement3D.MouseMoveEvent\n  - System.Windows.UIElement3D.MouseRightButtonDown\n  - System.Windows.UIElement3D.MouseRightButtonDownEvent\n  - System.Windows.UIElement3D.MouseRightButtonUp\n  - System.Windows.UIElement3D.MouseRightButtonUpEvent\n  - System.Windows.UIElement3D.MouseUp\n  - System.Windows.UIElement3D.MouseUpEvent\n  - System.Windows.UIElement3D.MouseWheel\n  - System.Windows.UIElement3D.MouseWheelEvent\n  - System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)\n  - System.Windows.UIElement3D.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  - System.Windows.UIElement3D.OnCreateAutomationPeer\n  - System.Windows.UIElement3D.OnDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement3D.OnDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement3D.OnDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement3D.OnDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement3D.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement3D.OnGotFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement3D.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement3D.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement3D.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement3D.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement3D.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement3D.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement3D.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement3D.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement3D.OnLostFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement3D.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement3D.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement3D.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement3D.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement3D.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement3D.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement3D.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement3D.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement3D.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement3D.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement3D.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement3D.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement3D.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement3D.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement3D.OnPreviewDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement3D.OnPreviewDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement3D.OnPreviewDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement3D.OnPreviewDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement3D.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement3D.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement3D.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement3D.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement3D.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement3D.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement3D.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement3D.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement3D.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement3D.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement3D.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement3D.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement3D.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement3D.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement3D.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement3D.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement3D.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement3D.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement3D.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement3D.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement3D.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement3D.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement3D.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  - System.Windows.UIElement3D.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement3D.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement3D.OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement3D.OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement3D.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement3D.OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement3D.OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement3D.OnStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement3D.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement3D.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement3D.OnStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement3D.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement3D.OnTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement3D.OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement3D.OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement3D.OnTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement3D.OnTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement3D.OnUpdateModel\n  - System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)\n  - System.Windows.UIElement3D.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  - System.Windows.UIElement3D.PreviewDragEnter\n  - System.Windows.UIElement3D.PreviewDragEnterEvent\n  - System.Windows.UIElement3D.PreviewDragLeave\n  - System.Windows.UIElement3D.PreviewDragLeaveEvent\n  - System.Windows.UIElement3D.PreviewDragOver\n  - System.Windows.UIElement3D.PreviewDragOverEvent\n  - System.Windows.UIElement3D.PreviewDrop\n  - System.Windows.UIElement3D.PreviewDropEvent\n  - System.Windows.UIElement3D.PreviewGiveFeedback\n  - System.Windows.UIElement3D.PreviewGiveFeedbackEvent\n  - System.Windows.UIElement3D.PreviewGotKeyboardFocus\n  - System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent\n  - System.Windows.UIElement3D.PreviewKeyDown\n  - System.Windows.UIElement3D.PreviewKeyDownEvent\n  - System.Windows.UIElement3D.PreviewKeyUp\n  - System.Windows.UIElement3D.PreviewKeyUpEvent\n  - System.Windows.UIElement3D.PreviewLostKeyboardFocus\n  - System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent\n  - System.Windows.UIElement3D.PreviewMouseDown\n  - System.Windows.UIElement3D.PreviewMouseDownEvent\n  - System.Windows.UIElement3D.PreviewMouseLeftButtonDown\n  - System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent\n  - System.Windows.UIElement3D.PreviewMouseLeftButtonUp\n  - System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent\n  - System.Windows.UIElement3D.PreviewMouseMove\n  - System.Windows.UIElement3D.PreviewMouseMoveEvent\n  - System.Windows.UIElement3D.PreviewMouseRightButtonDown\n  - System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent\n  - System.Windows.UIElement3D.PreviewMouseRightButtonUp\n  - System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent\n  - System.Windows.UIElement3D.PreviewMouseUp\n  - System.Windows.UIElement3D.PreviewMouseUpEvent\n  - System.Windows.UIElement3D.PreviewMouseWheel\n  - System.Windows.UIElement3D.PreviewMouseWheelEvent\n  - System.Windows.UIElement3D.PreviewQueryContinueDrag\n  - System.Windows.UIElement3D.PreviewQueryContinueDragEvent\n  - System.Windows.UIElement3D.PreviewStylusButtonDown\n  - System.Windows.UIElement3D.PreviewStylusButtonDownEvent\n  - System.Windows.UIElement3D.PreviewStylusButtonUp\n  - System.Windows.UIElement3D.PreviewStylusButtonUpEvent\n  - System.Windows.UIElement3D.PreviewStylusDown\n  - System.Windows.UIElement3D.PreviewStylusDownEvent\n  - System.Windows.UIElement3D.PreviewStylusInAirMove\n  - System.Windows.UIElement3D.PreviewStylusInAirMoveEvent\n  - System.Windows.UIElement3D.PreviewStylusInRange\n  - System.Windows.UIElement3D.PreviewStylusInRangeEvent\n  - System.Windows.UIElement3D.PreviewStylusMove\n  - System.Windows.UIElement3D.PreviewStylusMoveEvent\n  - System.Windows.UIElement3D.PreviewStylusOutOfRange\n  - System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent\n  - System.Windows.UIElement3D.PreviewStylusSystemGesture\n  - System.Windows.UIElement3D.PreviewStylusSystemGestureEvent\n  - System.Windows.UIElement3D.PreviewStylusUp\n  - System.Windows.UIElement3D.PreviewStylusUpEvent\n  - System.Windows.UIElement3D.PreviewTextInput\n  - System.Windows.UIElement3D.PreviewTextInputEvent\n  - System.Windows.UIElement3D.PreviewTouchDown\n  - System.Windows.UIElement3D.PreviewTouchDownEvent\n  - System.Windows.UIElement3D.PreviewTouchMove\n  - System.Windows.UIElement3D.PreviewTouchMoveEvent\n  - System.Windows.UIElement3D.PreviewTouchUp\n  - System.Windows.UIElement3D.PreviewTouchUpEvent\n  - System.Windows.UIElement3D.QueryContinueDrag\n  - System.Windows.UIElement3D.QueryContinueDragEvent\n  - System.Windows.UIElement3D.QueryCursor\n  - System.Windows.UIElement3D.QueryCursorEvent\n  - System.Windows.UIElement3D.RaiseEvent(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement3D.ReleaseAllTouchCaptures\n  - System.Windows.UIElement3D.ReleaseMouseCapture\n  - System.Windows.UIElement3D.ReleaseStylusCapture\n  - System.Windows.UIElement3D.ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement3D.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement3D.ShouldSerializeCommandBindings\n  - System.Windows.UIElement3D.ShouldSerializeInputBindings\n  - System.Windows.UIElement3D.StylusButtonDown\n  - System.Windows.UIElement3D.StylusButtonDownEvent\n  - System.Windows.UIElement3D.StylusButtonUp\n  - System.Windows.UIElement3D.StylusButtonUpEvent\n  - System.Windows.UIElement3D.StylusDown\n  - System.Windows.UIElement3D.StylusDownEvent\n  - System.Windows.UIElement3D.StylusEnter\n  - System.Windows.UIElement3D.StylusEnterEvent\n  - System.Windows.UIElement3D.StylusInAirMove\n  - System.Windows.UIElement3D.StylusInAirMoveEvent\n  - System.Windows.UIElement3D.StylusInRange\n  - System.Windows.UIElement3D.StylusInRangeEvent\n  - System.Windows.UIElement3D.StylusLeave\n  - System.Windows.UIElement3D.StylusLeaveEvent\n  - System.Windows.UIElement3D.StylusMove\n  - System.Windows.UIElement3D.StylusMoveEvent\n  - System.Windows.UIElement3D.StylusOutOfRange\n  - System.Windows.UIElement3D.StylusOutOfRangeEvent\n  - System.Windows.UIElement3D.StylusSystemGesture\n  - System.Windows.UIElement3D.StylusSystemGestureEvent\n  - System.Windows.UIElement3D.StylusUp\n  - System.Windows.UIElement3D.StylusUpEvent\n  - System.Windows.UIElement3D.TextInput\n  - System.Windows.UIElement3D.TextInputEvent\n  - System.Windows.UIElement3D.TouchDown\n  - System.Windows.UIElement3D.TouchDownEvent\n  - System.Windows.UIElement3D.TouchEnter\n  - System.Windows.UIElement3D.TouchEnterEvent\n  - System.Windows.UIElement3D.TouchesCaptured\n  - System.Windows.UIElement3D.TouchesCapturedWithin\n  - System.Windows.UIElement3D.TouchesDirectlyOver\n  - System.Windows.UIElement3D.TouchesOver\n  - System.Windows.UIElement3D.TouchLeave\n  - System.Windows.UIElement3D.TouchLeaveEvent\n  - System.Windows.UIElement3D.TouchMove\n  - System.Windows.UIElement3D.TouchMoveEvent\n  - System.Windows.UIElement3D.TouchUp\n  - System.Windows.UIElement3D.TouchUpEvent\n  - System.Windows.UIElement3D.Visibility\n  - System.Windows.UIElement3D.VisibilityProperty\n  langs:\n  - csharp\n  name: UIElement3D\n  nameWithType: UIElement3D\n  fullName: System.Windows.UIElement3D\n  type: Class\n  summary: UIElement3D is a base class for WPF core level implementations building on [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] elements and basic presentation characteristics.\n  remarks: \"UIElement3D is an abstract base class from which you can derive classes to represent specific 3D elements.  \\n  \\n Much of the input, focusing, and eventing behavior for 3D elements in general is defined in the UIElement3D class. This includes the events for keyboard, mouse, and stylus input, and related status properties. Many of these events are routed events, and many of the input-related events have both a bubbling routing version as well as a tunneling version of the event. These paired events are typically the events of greatest interest to control authors.  \\n  \\n UIElement3D also includes [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] that relate to the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] event model, including methods that can raise specified routed events that are sourced from an element instance.  \\n  \\n A UIElement3D has the following capabilities that are specifically defined by the UIElement3D class:  \\n  \\n-   Can respond to user input (including control of where input is sent via handling of event routing or routing of commands).  \\n  \\n-   Can raise routed events that travel a route through the logical element tree.  \\n  \\n> [!IMPORTANT]\\n>  <xref:System.Windows.UIElement3D.Visibility%2A> state affects all input handling by that element. Elements that are not visible do not participate in hit testing and do not receive input events, even if the mouse is over the bounds of where the element would be if were visible.  \\n  \\n Unlike the <xref:System.Windows.UIElement> class, the UIElement3D class does not include layout. Therefore, the UIElement3D class does not include **Measure** or **Arrange** methods.  \\n  \\n A class that derives from UIElement3D and maintains its own collection of <xref:System.Windows.Media.Media3D.Visual3D> objects by overriding <xref:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild%2A> and <xref:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount%2A> must still pass new <xref:System.Windows.Media.Media3D.Visual3D> objects to <xref:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild%2A>.  \\n  \\n UIElement3D is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example shows how to derive from the UIElement3D class to create a `Sphere` class:  \\n  \\n [!code-cs[Shapes#Sphere](~/add/codesnippet/csharp/Shapes/Sphere.cs#sphere)]\\n [!code-vb[Shapes#Sphere](~/add/codesnippet/visualbasic/shapes/sphere.vb#sphere)]  \\n  \\n For the complete sample, see [UIElement3D Sphere Sample](http://go.microsoft.com/fwlink/?LinkID=160044).\"\n  syntax:\n    content: 'public abstract class UIElement3D : System.Windows.Media.Media3D.Visual3D, System.Windows.IInputElement'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Media.Media3D.Visual3D\n  implements:\n  - System.Windows.IInputElement\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Media.Media3D.Visual3D.AddVisual3DChild(System.Windows.Media.Media3D.Visual3D)\n  - System.Windows.Media.Media3D.Visual3D.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Media3D.Visual3D.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Media3D.Visual3D.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Media3D.Visual3D.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Media3D.Visual3D.FindCommonVisualAncestor(System.Windows.DependencyObject)\n  - System.Windows.Media.Media3D.Visual3D.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Media3D.Visual3D.GetVisual3DChild(System.Int32)\n  - System.Windows.Media.Media3D.Visual3D.HasAnimatedProperties\n  - System.Windows.Media.Media3D.Visual3D.IsAncestorOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Media3D.Visual3D.IsDescendantOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Media3D.Visual3D.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Media.Media3D.Visual3D.RemoveVisual3DChild(System.Windows.Media.Media3D.Visual3D)\n  - System.Windows.Media.Media3D.Visual3D.Transform\n  - System.Windows.Media.Media3D.Visual3D.TransformProperty\n  - System.Windows.Media.Media3D.Visual3D.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)\n  - System.Windows.Media.Media3D.Visual3D.TransformToAncestor(System.Windows.Media.Visual)\n  - System.Windows.Media.Media3D.Visual3D.TransformToDescendant(System.Windows.Media.Media3D.Visual3D)\n  - System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount\n  - System.Windows.Media.Media3D.Visual3D.Visual3DModel\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.#ctor\n  id: '#ctor'\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: UIElement3D()\n  nameWithType: UIElement3D.UIElement3D()\n  fullName: System.Windows.UIElement3D.UIElement3D()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.UIElement3D\"></xref> class.\n  remarks: UIElement3D is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: protected UIElement3D ();\n    parameters: []\n  overload: System.Windows.UIElement3D.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  id: AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: AddHandler(RoutedEvent,Delegate)\n  nameWithType: UIElement3D.AddHandler(RoutedEvent,Delegate)\n  fullName: System.Windows.UIElement3D.AddHandler(RoutedEvent,Delegate)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.\n  remarks: \"You can add the same handler for the same event multiple times without raising an exception. However, the handler is actually invoked multiple times when the event is handled. Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.  \\n  \\n You typically use this method to provide the implementation of the \\\"add\\\" accessor for the [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.  \\n  \\n AddHandler is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);\n    parameters:\n    - id: routedEvent\n      type: System.Windows.RoutedEvent\n      description: An identifier for the routed event to be handled.\n    - id: handler\n      type: System.Delegate\n      description: A reference to the handler implementation.\n  overload: System.Windows.UIElement3D.AddHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  id: AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: AddHandler(RoutedEvent,Delegate,Boolean)\n  nameWithType: UIElement3D.AddHandler(RoutedEvent,Delegate,Boolean)\n  fullName: System.Windows.UIElement3D.AddHandler(RoutedEvent,Delegate,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element. Specify <code>handledEventsToo</code> as <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.\n  remarks: \"Processing low-level input events in a practical way is a complex task. Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event. Generally, a control will only mark a platform input event as handled if there is some design intention for doing so. In certain scenarios, those design intentions might not be what your particular handling of the input event requires. It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate. But you should not do this routinely. Invoking handlers in response to all events even if handled will complicate your own application event processing logic. You may see a decrease in performance if the handler logic is substantial. You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.  \\n  \\n Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative. For example, if <xref:System.Windows.UIElement3D.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> instead.  \\n  \\n You can add the same handler for the same event multiple times without raising an exception. However, the handler is actually invoked multiple times when the event is handled. Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.  \\n  \\n You typically use this method to provide the implementation of the \\\"add\\\" accessor for the [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.  \\n  \\n AddHandler is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);\n    parameters:\n    - id: routedEvent\n      type: System.Windows.RoutedEvent\n      description: An identifier for the routed event to be handled.\n    - id: handler\n      type: System.Delegate\n      description: A reference to the handler implementation.\n    - id: handledEventsToo\n      type: System.Boolean\n      description: \"<xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> to register the handler such that it is invoked even when the routed event is marked handled in its event data; <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.  \\n  \\n The default is <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>.  \\n  \\n Do not routinely ask to rehandle a routed event. For more information, see Remarks.\"\n  overload: System.Windows.UIElement3D.AddHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  id: AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: AddToEventRoute(EventRoute,RoutedEventArgs)\n  nameWithType: UIElement3D.AddToEventRoute(EventRoute,RoutedEventArgs)\n  fullName: System.Windows.UIElement3D.AddToEventRoute(EventRoute,RoutedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Adds handlers to the specified <xref href=\"System.Windows.EventRoute\"></xref> for the current <xref href=\"System.Windows.UIElement3D\"></xref> event handler collection.\n  remarks: \"This method can be used by content host elements (either those that implement <xref:System.Windows.IContentHost> or those that don't) to add handlers for child elements to the <xref:System.Windows.EventRoute>.  \\n  \\n AddToEventRoute is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);\n    parameters:\n    - id: route\n      type: System.Windows.EventRoute\n      description: The event route that handlers are added to.\n    - id: e\n      type: System.Windows.RoutedEventArgs\n      description: The event data that is used to add the handlers. This method uses the <xref:System.Windows.RoutedEventArgs.RoutedEvent*> property of the event data to create the handlers.\n  overload: System.Windows.UIElement3D.AddToEventRoute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.AllowDrop\n  id: AllowDrop\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: AllowDrop\n  nameWithType: UIElement3D.AllowDrop\n  fullName: System.Windows.UIElement3D.AllowDrop\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.\n  remarks: \"Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting AllowDrop to `true`. Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.UIElement3D> or any other base element class. Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior. For more information on drag and drop, see [Drag and Drop Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n AllowDrop is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_AllowDrop\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.AllowDropProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool AllowDrop { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this element can be used as the target of a drag-and-drop operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.AllowDrop*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.AllowDropProperty\n  id: AllowDropProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: AllowDropProperty\n  nameWithType: UIElement3D.AllowDropProperty\n  fullName: System.Windows.UIElement3D.AllowDropProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.AllowDrop*> dependency property.\n  remarks: AllowDropProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty AllowDropProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.AreAnyTouchesCaptured\n  id: AreAnyTouchesCaptured\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: AreAnyTouchesCaptured\n  nameWithType: UIElement3D.AreAnyTouchesCaptured\n  fullName: System.Windows.UIElement3D.AreAnyTouchesCaptured\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value that indicates whether at least one touch is captured to this element.\n  syntax:\n    content: public bool AreAnyTouchesCaptured { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if at least one touch is captured to this element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.AreAnyTouchesCaptured*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedProperty\n  id: AreAnyTouchesCapturedProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: AreAnyTouchesCapturedProperty\n  nameWithType: UIElement3D.AreAnyTouchesCapturedProperty\n  fullName: System.Windows.UIElement3D.AreAnyTouchesCapturedProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.AreAnyTouchesCaptured*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedWithin\n  id: AreAnyTouchesCapturedWithin\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: AreAnyTouchesCapturedWithin\n  nameWithType: UIElement3D.AreAnyTouchesCapturedWithin\n  fullName: System.Windows.UIElement3D.AreAnyTouchesCapturedWithin\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.\n  syntax:\n    content: public bool AreAnyTouchesCapturedWithin { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.AreAnyTouchesCapturedWithin*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty\n  id: AreAnyTouchesCapturedWithinProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: AreAnyTouchesCapturedWithinProperty\n  nameWithType: UIElement3D.AreAnyTouchesCapturedWithinProperty\n  fullName: System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.AreAnyTouchesCapturedWithin*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.AreAnyTouchesDirectlyOver\n  id: AreAnyTouchesDirectlyOver\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: AreAnyTouchesDirectlyOver\n  nameWithType: UIElement3D.AreAnyTouchesDirectlyOver\n  fullName: System.Windows.UIElement3D.AreAnyTouchesDirectlyOver\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value that indicates whether at least one touch is pressed over this element.\n  syntax:\n    content: public bool AreAnyTouchesDirectlyOver { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if at least one touch is pressed over this element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.AreAnyTouchesDirectlyOver*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty\n  id: AreAnyTouchesDirectlyOverProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: AreAnyTouchesDirectlyOverProperty\n  nameWithType: UIElement3D.AreAnyTouchesDirectlyOverProperty\n  fullName: System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.AreAnyTouchesDirectlyOver*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.AreAnyTouchesOver\n  id: AreAnyTouchesOver\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: AreAnyTouchesOver\n  nameWithType: UIElement3D.AreAnyTouchesOver\n  fullName: System.Windows.UIElement3D.AreAnyTouchesOver\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.\n  syntax:\n    content: public bool AreAnyTouchesOver { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.AreAnyTouchesOver*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.AreAnyTouchesOverProperty\n  id: AreAnyTouchesOverProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: AreAnyTouchesOverProperty\n  nameWithType: UIElement3D.AreAnyTouchesOverProperty\n  fullName: System.Windows.UIElement3D.AreAnyTouchesOverProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.AreAnyTouchesOver*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.CaptureMouse\n  id: CaptureMouse\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: CaptureMouse()\n  nameWithType: UIElement3D.CaptureMouse()\n  fullName: System.Windows.UIElement3D.CaptureMouse()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Attempts to force capture of the mouse to this element.\n  remarks: \"To be captured, an element must be enabled. Check whether <xref:System.Windows.UIElement3D.IsEnabled%2A> is `true` before you call CaptureMouse.  \\n  \\n If calling CaptureMouse returns `true`, then <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> is also `true`.  \\n  \\n If calling CaptureMouse returns `true`, then the <xref:System.Windows.UIElement3D.GotMouseCapture> and <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName> in the event data reported as the element where the CaptureMouse method is called. If you force capture, you might interfere with existing captures—especially with captures that relate to drag-and-drop with the mouse.  \\n  \\n To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName> with the `element` parameter provided as `null`.  \\n  \\n CaptureMouse is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public bool CaptureMouse ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the mouse is successfully captured; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.CaptureMouse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.CaptureStylus\n  id: CaptureStylus\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: CaptureStylus()\n  nameWithType: UIElement3D.CaptureStylus()\n  fullName: System.Windows.UIElement3D.CaptureStylus()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Attempts to force capture of the stylus to this element.\n  remarks: \"The default implementation based on the underlying default stylus device always returns `true`. However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.  \\n  \\n When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds. The stylus is typically captured only during drag-and-drop operations.  \\n  \\n Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>. The actual capture behavior is implemented by the active stylus device implementation.  \\n  \\n To be captured, an element must be enabled. Check whether <xref:System.Windows.UIElement3D.IsEnabled%2A> is `true` return before you call CaptureStylus.  \\n  \\n If calling CaptureStylus returns `true`, <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> is also `true`.  \\n  \\n CaptureStylus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public bool CaptureStylus ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the stylus was successfully captured; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.CaptureStylus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.CaptureTouch(System.Windows.Input.TouchDevice)\n  id: CaptureTouch(System.Windows.Input.TouchDevice)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: CaptureTouch(TouchDevice)\n  nameWithType: UIElement3D.CaptureTouch(TouchDevice)\n  fullName: System.Windows.UIElement3D.CaptureTouch(TouchDevice)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Attempts to force capture of a touch to this element.\n  remarks: \"CaptureTouch will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.  \\n  \\n If CaptureTouch returns `true`, then the <xref:System.Windows.UIElement3D.GotTouchCapture> event is raised.  \\n  \\n To release capture of a single touch from this element, use the <xref:System.Windows.UIElement3D.ReleaseTouchCapture%2A> method and specify the touch device to release. To release all touches from this element, use the <xref:System.Windows.UIElement3D.ReleaseAllTouchCaptures%2A> method.\"\n  syntax:\n    content: public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);\n    parameters:\n    - id: touchDevice\n      type: System.Windows.Input.TouchDevice\n      description: The device to capture.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified touch is captured to this element; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.CaptureTouch*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>touchDevice</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.CommandBindings\n  id: CommandBindings\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: CommandBindings\n  nameWithType: UIElement3D.CommandBindings\n  fullName: System.Windows.UIElement3D.CommandBindings\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a collection of <xref href=\"System.Windows.Input.CommandBinding\"></xref> objects associated with this element.\n  remarks: \"A <xref:System.Windows.Input.CommandBinding> enables command handling of a specific command for this element, and declares the linkage between a command, its events, and the handlers attached by this element.  \\n  \\n Another typical way to populate the CommandBindings collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.  \\n  \\n CommandBindings is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"xamlPropertyElementUsage_CommandBindings\\\"></a>   \\n## XAML Property Element Usage  \\n  \\n```  \\n<object>  \\n  <object.CommandBindings>  \\n    oneOrMoreCommandBindings  </object.CommandBindings>  \\n</object>  \\n```  \\n  \\n<a name=\\\"xamlValues_CommandBindings\\\"></a>   \\n## XAML Values  \\n *oneOrMoreCommandBindings*  \\n One or more <xref:System.Windows.Input.CommandBinding> elements. Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations. For more information see <xref:System.Windows.Input.CommandBinding>.\"\n  syntax:\n    content: public System.Windows.Input.CommandBindingCollection CommandBindings { get; }\n    return:\n      type: System.Windows.Input.CommandBindingCollection\n      description: The collection of all <xref href=\"System.Windows.Input.CommandBinding\"></xref> objects.\n  overload: System.Windows.UIElement3D.CommandBindings*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.DragEnter\n  id: DragEnter\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: DragEnter\n  nameWithType: UIElement3D.DragEnter\n  fullName: System.Windows.UIElement3D.DragEnter\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the input system reports an underlying drag event with this element as the drag target.\n  remarks: \"This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName> attached event for this class, so that DragEnter is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the DragEnter event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n DragEnter is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_DragEnter\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.DragEnterEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.DragEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDragEnter>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnDragEnter%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.DragEventHandler DragEnter;\n    return:\n      type: System.Windows.DragEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.DragEnterEvent\n  id: DragEnterEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: DragEnterEvent\n  nameWithType: UIElement3D.DragEnterEvent\n  fullName: System.Windows.UIElement3D.DragEnterEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.DragEnter\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n DragEnterEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent DragEnterEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.DragLeave\n  id: DragLeave\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: DragLeave\n  nameWithType: UIElement3D.DragLeave\n  fullName: System.Windows.UIElement3D.DragLeave\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the input system reports an underlying drag event with this element as the drag origin.\n  remarks: \"This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName> attached event for this class so that DragLeave is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the DragLeave event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n DragLeave is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_DragLeave\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.DragLeaveEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.DragEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDragLeave>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnDragLeave%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.DragEventHandler DragLeave;\n    return:\n      type: System.Windows.DragEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.DragLeaveEvent\n  id: DragLeaveEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: DragLeaveEvent\n  nameWithType: UIElement3D.DragLeaveEvent\n  fullName: System.Windows.UIElement3D.DragLeaveEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.DragLeave\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n DragLeaveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent DragLeaveEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.DragOver\n  id: DragOver\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: DragOver\n  nameWithType: UIElement3D.DragOver\n  fullName: System.Windows.UIElement3D.DragOver\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the input system reports an underlying drag event with this element as the potential drop target.\n  remarks: \"This event occurs even if the drag originates in the element bounds. If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.UIElement3D.DragEnter> and related preview events.  \\n  \\n This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=fullName> attached event for this class so that DragOver is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the DragOver event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n DragOver is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_DragOver\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.DragOverEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.DragEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDragOver>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnDragOver%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.DragEventHandler DragOver;\n    return:\n      type: System.Windows.DragEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.DragOverEvent\n  id: DragOverEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: DragOverEvent\n  nameWithType: UIElement3D.DragOverEvent\n  fullName: System.Windows.UIElement3D.DragOverEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.DragOver\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n DragOverEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent DragOverEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.Drop\n  id: Drop\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: Drop\n  nameWithType: UIElement3D.Drop\n  fullName: System.Windows.UIElement3D.Drop\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the input system reports an underlying drop event with this element as the drop target.\n  remarks: \"This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=fullName> attached event for this class so that Drop is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the Drop event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Drop is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_Drop\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.DropEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.DragEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewDrop>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnDrop%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.DragEventHandler Drop;\n    return:\n      type: System.Windows.DragEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.DropEvent\n  id: DropEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: DropEvent\n  nameWithType: UIElement3D.DropEvent\n  fullName: System.Windows.UIElement3D.DropEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.Drop\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n DropEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent DropEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.Focus\n  id: Focus\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: Focus()\n  nameWithType: UIElement3D.Focus()\n  fullName: System.Windows.UIElement3D.Focus()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Attempts to set the logical focus on this element.\n  remarks: \"To be focusable, <xref:System.Windows.UIElement3D.Focusable%2A> and <xref:System.Windows.UIElement3D.IsEnabled%2A> must both be `true`.  \\n  \\n Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.  \\n  \\n If calling  Focus returns `true`, <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> are also `true`.  \\n  \\n If the related properties are not already `true`, when you call  Focus, one or more of the following events are raised in the following order: <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement3D.LostKeyboardFocus>, <xref:System.Windows.UIElement3D.GotKeyboardFocus> (source is the new focus target).  \\n  \\n In order for this call to be successful, some other element in the application needed to have focus previously.  \\n  \\n Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical. This method sets the logical focus, and also attempts to set the keyboard focus. There is no programmatic means to set keyboard focus specifically, this happens due to user input. For more information, see [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n Focus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public bool Focus ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if both logical and keyboard focus were set to this element; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if only logical focus was set.\n  overload: System.Windows.UIElement3D.Focus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.Focusable\n  id: Focusable\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: Focusable\n  nameWithType: UIElement3D.Focusable\n  fullName: System.Windows.UIElement3D.Focusable\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets or sets a value that indicates whether the element can receive focus.\n  remarks: \"Only the focused element receives keyboard input.  \\n  \\n Focusable is the [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] property accessor for what is in reality a dependency property. This particular dependency property quite frequently has its apparent \\\"default\\\" value set differently in derived element classes. This commonly occurs in one of two ways:  \\n  \\n-   The dependency property is inherited by a particular derived class, but that derived class overrides the metadata of the dependency property and changes the property default value.  \\n  \\n Focusable is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_Focusable\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.FocusableProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool Focusable { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element is focusable; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, but see Remarks.\n  overload: System.Windows.UIElement3D.Focusable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.FocusableChanged\n  id: FocusableChanged\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: FocusableChanged\n  nameWithType: UIElement3D.FocusableChanged\n  fullName: System.Windows.UIElement3D.FocusableChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the value of the <xref:System.Windows.UIElement3D.Focusable*> property changes.\n  remarks: \"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.  \\n  \\n FocusableChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;\n    return:\n      type: System.Windows.DependencyPropertyChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.FocusableProperty\n  id: FocusableProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: FocusableProperty\n  nameWithType: UIElement3D.FocusableProperty\n  fullName: System.Windows.UIElement3D.FocusableProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.Focusable*> dependency property.\n  remarks: FocusableProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty FocusableProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.GetUIParentCore\n  id: GetUIParentCore\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: GetUIParentCore()\n  nameWithType: UIElement3D.GetUIParentCore()\n  fullName: System.Windows.UIElement3D.GetUIParentCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.\n  remarks: \"The default virtual implementation of this method returns `null`. <xref:System.Windows.FrameworkElement> provides a practical implementation.  \\n  \\n Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.  \\n  \\n GetUIParentCore is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected System.Windows.DependencyObject GetUIParentCore ();\n    parameters: []\n    return:\n      type: System.Windows.DependencyObject\n      description: An object, if implementation of a derived class has an alternate parent connection to report.\n  overload: System.Windows.UIElement3D.GetUIParentCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.GiveFeedback\n  id: GiveFeedback\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: GiveFeedback\n  nameWithType: UIElement3D.GiveFeedback\n  fullName: System.Windows.UIElement3D.GiveFeedback\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the input system reports an underlying drag-and-drop event that involves this element.\n  remarks: \"The GiveFeedback event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation. The visual feedback reinforces that a drag-and-drop operation is in process.  \\n  \\n This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName> attached event for this class so that GiveFeedback is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the GiveFeedback event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n GiveFeedback is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_GiveFeedback\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.GiveFeedbackEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.GiveFeedbackEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewGiveFeedback>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnGiveFeedback%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.GiveFeedbackEventHandler GiveFeedback;\n    return:\n      type: System.Windows.GiveFeedbackEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.GiveFeedbackEvent\n  id: GiveFeedbackEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: GiveFeedbackEvent\n  nameWithType: UIElement3D.GiveFeedbackEvent\n  fullName: System.Windows.UIElement3D.GiveFeedbackEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.GiveFeedback\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n GiveFeedbackEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.GotFocus\n  id: GotFocus\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: GotFocus\n  nameWithType: UIElement3D.GotFocus\n  fullName: System.Windows.UIElement3D.GotFocus\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when this element gets logical focus.\n  remarks: \"Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope. In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.UIElement3D.Focus%2A> method is called still gets logical focus.  \\n  \\n A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement3D.IsFocused%2A> property of an element in the route is changed from `false` to `true`.  \\n  \\n Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.  \\n  \\n GotFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_GotFocus\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.GotFocusEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.RoutedEventHandler>|  \\n  \\n-   There is no corresponding tunneling event.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnGotFocus%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.RoutedEventHandler GotFocus;\n    return:\n      type: System.Windows.RoutedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.GotFocusEvent\n  id: GotFocusEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: GotFocusEvent\n  nameWithType: UIElement3D.GotFocusEvent\n  fullName: System.Windows.UIElement3D.GotFocusEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.GotFocus\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n GotFocusEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent GotFocusEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.GotKeyboardFocus\n  id: GotKeyboardFocus\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: GotKeyboardFocus\n  nameWithType: UIElement3D.GotKeyboardFocus\n  fullName: System.Windows.UIElement3D.GotKeyboardFocus\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the keyboard is focused on this element.\n  remarks: \"<xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the GotKeyboardFocus event is raised in many of the same circumstances.  \\n  \\n Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName> attached event for this class so that GotKeyboardFocus is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the GotKeyboardFocus event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n GotKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_GotKeyboardFocus\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.GotKeyboardFocusEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;\n    return:\n      type: System.Windows.Input.KeyboardFocusChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.GotKeyboardFocusEvent\n  id: GotKeyboardFocusEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: GotKeyboardFocusEvent\n  nameWithType: UIElement3D.GotKeyboardFocusEvent\n  fullName: System.Windows.UIElement3D.GotKeyboardFocusEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.GotKeyboardFocus\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n GotKeyboardFocusEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.GotMouseCapture\n  id: GotMouseCapture\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: GotMouseCapture\n  nameWithType: UIElement3D.GotMouseCapture\n  fullName: System.Windows.UIElement3D.GotMouseCapture\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when this element captures the mouse.\n  remarks: \"When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds. The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.  \\n  \\n Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName> attached event for  this class so that GotMouseCapture is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the GotMouseCapture event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n GotMouseCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_GotMouseCapture\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.GotMouseCaptureEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.MouseEventHandler>|  \\n  \\n-   There is no defined corresponding tunneling event.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseEventHandler GotMouseCapture;\n    return:\n      type: System.Windows.Input.MouseEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.GotMouseCaptureEvent\n  id: GotMouseCaptureEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: GotMouseCaptureEvent\n  nameWithType: UIElement3D.GotMouseCaptureEvent\n  fullName: System.Windows.UIElement3D.GotMouseCaptureEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.GotMouseCapture\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n GotMouseCaptureEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.GotStylusCapture\n  id: GotStylusCapture\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: GotStylusCapture\n  nameWithType: UIElement3D.GotStylusCapture\n  fullName: System.Windows.UIElement3D.GotStylusCapture\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when this element captures the stylus.\n  remarks: \"When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds. The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.  \\n  \\n Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.  \\n  \\n This event creates an alias for the attached event for this class so that GotStylusCapture is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the GotStylusCapture event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n GotStylusCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_GotStylusCapture\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.GotStylusCaptureEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  \\n  \\n-   There is no defined corresponding tunneling event.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusEventHandler GotStylusCapture;\n    return:\n      type: System.Windows.Input.StylusEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.GotStylusCaptureEvent\n  id: GotStylusCaptureEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: GotStylusCaptureEvent\n  nameWithType: UIElement3D.GotStylusCaptureEvent\n  fullName: System.Windows.UIElement3D.GotStylusCaptureEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.GotStylusCapture\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n GotStylusCaptureEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.GotTouchCapture\n  id: GotTouchCapture\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: GotTouchCapture\n  nameWithType: UIElement3D.GotTouchCapture\n  fullName: System.Windows.UIElement3D.GotTouchCapture\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when a touch is captured to this element.\n  remarks: \"<a name=\\\"routedEventInfo_GotTouchCapture\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.GotTouchCaptureEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>|  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event EventHandler<System.Windows.Input.TouchEventArgs> GotTouchCapture;\n    return:\n      type: System.EventHandler{System.Windows.Input.TouchEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.GotTouchCaptureEvent\n  id: GotTouchCaptureEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: GotTouchCaptureEvent\n  nameWithType: UIElement3D.GotTouchCaptureEvent\n  fullName: System.Windows.UIElement3D.GotTouchCaptureEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.GotTouchCapture\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.InputBindings\n  id: InputBindings\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: InputBindings\n  nameWithType: UIElement3D.InputBindings\n  fullName: System.Windows.UIElement3D.InputBindings\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets the collection of input bindings associated with this element.\n  remarks: \"Input bindings support the binding of commands to input devices. For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are particular to mouse devices.  \\n  \\n The collection of input bindings will include both input bindings that pertain to the type as well as input bindings that are declared on the instance.  \\n  \\n A related property, <xref:System.Windows.UIElement3D.CommandBindings%2A>, maintains a collection of command bindings. These differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands.  \\n  \\n InputBindings is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"xamlPropertyElementUsage_InputBindings\\\"></a>   \\n## XAML Property Element Usage  \\n  \\n```  \\n<object>  \\n  <object.InputBindings>  \\n    oneOrMoreInputBindings  </object.InputBindings>  \\n</object>  \\n```  \\n  \\n<a name=\\\"xamlValues_InputBindings\\\"></a>   \\n## XAML Values  \\n *oneOrMoreInputBindings*  \\n One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes). Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.\"\n  syntax:\n    content: public System.Windows.Input.InputBindingCollection InputBindings { get; }\n    return:\n      type: System.Windows.Input.InputBindingCollection\n      description: The collection of input bindings.\n  overload: System.Windows.UIElement3D.InputBindings*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.InvalidateModel\n  id: InvalidateModel\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: InvalidateModel()\n  nameWithType: UIElement3D.InvalidateModel()\n  fullName: System.Windows.UIElement3D.InvalidateModel()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invalidates the model that represents the element.\n  remarks: \"When you derive a class from the <xref:System.Windows.UIElement3D> class, you can use this method together with the <xref:System.Windows.UIElement3D.OnUpdateModel%2A> method to refresh the model of the element.  \\n  \\n You only need to call this method in advanced scenarios. One such advanced scenario is if the derived class has multiple properties that affect the appearance, and you want to update the underlying model only once.  \\n  \\n InvalidateModel is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example shows how to derive from the <xref:System.Windows.UIElement3D> class to create a `Sphere` class:  \\n  \\n [!code-cs[Shapes#Sphere](~/add/codesnippet/csharp/Shapes/Sphere.cs#sphere)]\\n [!code-vb[Shapes#Sphere](~/add/codesnippet/visualbasic/shapes/sphere.vb#sphere)]  \\n  \\n For the complete sample, see [UIElement3D Sphere Sample](http://go.microsoft.com/fwlink/?LinkID=160044).\"\n  syntax:\n    content: public void InvalidateModel ();\n    parameters: []\n  overload: System.Windows.UIElement3D.InvalidateModel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsEnabled\n  id: IsEnabled\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsEnabled\n  nameWithType: UIElement3D.IsEnabled\n  fullName: System.Windows.UIElement3D.IsEnabled\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets or sets a value indicating whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)].\n  remarks: \"Note that this property is influenced by class-specific implementations of <xref:System.Windows.UIElement3D.IsEnabledCore%2A> on particular elements, often at runtime. Therefore, the default value listed here is sometimes not effective. Attempting to set this value will also potentially be overridden by the value returned by <xref:System.Windows.UIElement3D.IsEnabledCore%2A>.  \\n  \\n Elements that are not enabled do not participate in hit testing or focus and therefore will not be sources of input events.  \\n  \\n IsEnabled is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsEnabled\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.IsEnabledProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool IsEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.IsEnabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsEnabledChanged\n  id: IsEnabledChanged\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsEnabledChanged\n  nameWithType: UIElement3D.IsEnabledChanged\n  fullName: System.Windows.UIElement3D.IsEnabledChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the value of the <xref:System.Windows.UIElement3D.IsEnabled*> property on this element changes.\n  remarks: \"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.  \\n  \\n IsEnabledChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;\n    return:\n      type: System.Windows.DependencyPropertyChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsEnabledCore\n  id: IsEnabledCore\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsEnabledCore\n  nameWithType: UIElement3D.IsEnabledCore\n  fullName: System.Windows.UIElement3D.IsEnabledCore\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value that becomes the return value of <xref:System.Windows.UIElement3D.IsEnabled*> in derived classes.\n  remarks: IsEnabledCore is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: protected virtual bool IsEnabledCore { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.IsEnabledCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsEnabledProperty\n  id: IsEnabledProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsEnabledProperty\n  nameWithType: UIElement3D.IsEnabledProperty\n  fullName: System.Windows.UIElement3D.IsEnabledProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.IsEnabled*> dependency property.\n  remarks: IsEnabledProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsEnabledProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsFocused\n  id: IsFocused\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsFocused\n  nameWithType: UIElement3D.IsFocused\n  fullName: System.Windows.UIElement3D.IsFocused\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value that determines whether this element has logical focus.\n  remarks: \"Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application. In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus. For more information on logical focus, see [Focus Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n You do not set focus by setting this property (it is read-only). The typical use for this property is to use it as a dependency property for a <xref:System.Windows.Setter> or <xref:System.Windows.EventTrigger>. To set focus programmatically, call <xref:System.Windows.UIElement3D.Focus%2A>. Focus can also be set by user action or by control implementations, which possibly include mouse capture behavior.  \\n  \\n IsFocused is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsFocused\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.IsFocusedProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool IsFocused { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this element has logical focus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.IsFocused*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsFocusedProperty\n  id: IsFocusedProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsFocusedProperty\n  nameWithType: UIElement3D.IsFocusedProperty\n  fullName: System.Windows.UIElement3D.IsFocusedProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.IsFocused*> dependency property.\n  remarks: IsFocusedProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsFocusedProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsHitTestVisible\n  id: IsHitTestVisible\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsHitTestVisible\n  nameWithType: UIElement3D.IsHitTestVisible\n  fullName: System.Windows.UIElement3D.IsHitTestVisible\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content.\n  remarks: \"The effective value of this property is influenced by the relative positions of hit testable elements in the logical tree. For instance, if an element is a child element of an element that is not hit test visible, the effective value of the property on the child will remain `false`, even if attempting to set that value locally. For this reason, it is important that you do not set IsHitTestVisible to `false` on a composited control unless you do not want any input or hit testing on that control. For more information on hit testing, see [Hit Testing in the Visual Layer](~/add/includes/ajax-current-ext-md.md).  \\n  \\n IsHitTestVisible is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsHitTestVisible\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.IsHitTestVisibleProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool IsHitTestVisible { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this element could be returned as a hit test result from at least one point; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.IsHitTestVisible*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsHitTestVisibleChanged\n  id: IsHitTestVisibleChanged\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsHitTestVisibleChanged\n  nameWithType: UIElement3D.IsHitTestVisibleChanged\n  fullName: System.Windows.UIElement3D.IsHitTestVisibleChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the value of the <xref:System.Windows.UIElement3D.IsHitTestVisible*> dependency property changes on this element.\n  remarks: \"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.  \\n  \\n IsHitTestVisibleChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public event System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged;\n    return:\n      type: System.Windows.DependencyPropertyChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsHitTestVisibleProperty\n  id: IsHitTestVisibleProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsHitTestVisibleProperty\n  nameWithType: UIElement3D.IsHitTestVisibleProperty\n  fullName: System.Windows.UIElement3D.IsHitTestVisibleProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.IsHitTestVisible*> dependency property.\n  remarks: IsHitTestVisibleProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsHitTestVisibleProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsInputMethodEnabled\n  id: IsInputMethodEnabled\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsInputMethodEnabled\n  nameWithType: UIElement3D.IsInputMethodEnabled\n  fullName: System.Windows.UIElement3D.IsInputMethodEnabled\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value indicating whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/add/includes/ajax-current-ext-md.md)],  is enabled for processing the input to this element.\n  remarks: \"This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=fullName> for the currently enabled input methods (keyboard, speech, other input devices).  \\n  \\n IsInputMethodEnabled is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public bool IsInputMethodEnabled { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if an input method is active; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value of the underlying attached property is <xref uid=\"langword_csharp_true;\" name=\"true;\" href=\"\"></xref> however, this will be influenced by the actual state of input methods at runtime.\n  overload: System.Windows.UIElement3D.IsInputMethodEnabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsKeyboardFocused\n  id: IsKeyboardFocused\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsKeyboardFocused\n  nameWithType: UIElement3D.IsKeyboardFocused\n  fullName: System.Windows.UIElement3D.IsKeyboardFocused\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value indicating whether this element has keyboard focus.\n  remarks: \"Changes to the determined value of this property may be accompanied by focus-related events.  \\n  \\n IsKeyboardFocused and <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> are commonly used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.  \\n  \\n IsKeyboardFocused is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsKeyboardFocused\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.IsKeyboardFocusedProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool IsKeyboardFocused { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this element has keyboard focus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.IsKeyboardFocused*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsKeyboardFocusedChanged\n  id: IsKeyboardFocusedChanged\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsKeyboardFocusedChanged\n  nameWithType: UIElement3D.IsKeyboardFocusedChanged\n  fullName: System.Windows.UIElement3D.IsKeyboardFocusedChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the value of the <xref:System.Windows.UIElement3D.IsKeyboardFocused*> property changes on this element.\n  remarks: \"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.  \\n  \\n IsKeyboardFocusedChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;\n    return:\n      type: System.Windows.DependencyPropertyChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsKeyboardFocusedProperty\n  id: IsKeyboardFocusedProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsKeyboardFocusedProperty\n  nameWithType: UIElement3D.IsKeyboardFocusedProperty\n  fullName: System.Windows.UIElement3D.IsKeyboardFocusedProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.IsKeyboardFocused*> dependency property.\n  remarks: IsKeyboardFocusedProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsKeyboardFocusWithin\n  id: IsKeyboardFocusWithin\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsKeyboardFocusWithin\n  nameWithType: UIElement3D.IsKeyboardFocusWithin\n  fullName: System.Windows.UIElement3D.IsKeyboardFocusWithin\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value indicating whether keyboard focus is anywhere within the element or its visual tree child elements.\n  remarks: \"Changes to the value of this property typically raise the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.  \\n  \\n You do not set this property directly, but you can set the focus to an element by calling <xref:System.Windows.UIElement3D.Focus%2A>, or by making a <xref:System.Windows.UIElement3D.MoveFocus%2A> request. Either of these method calls might change this property value.  \\n  \\n <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> and IsKeyboardFocusWithin are typically used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.  \\n  \\n IsKeyboardFocusWithin is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsKeyboardFocusWithin\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool IsKeyboardFocusWithin { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if keyboard focus is on the element or its child elements; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.IsKeyboardFocusWithin*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsKeyboardFocusWithinChanged\n  id: IsKeyboardFocusWithinChanged\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsKeyboardFocusWithinChanged\n  nameWithType: UIElement3D.IsKeyboardFocusWithinChanged\n  fullName: System.Windows.UIElement3D.IsKeyboardFocusWithinChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the value of the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin*> property changes on this element.\n  remarks: \"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.  \\n  \\n IsKeyboardFocusWithinChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;\n    return:\n      type: System.Windows.DependencyPropertyChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsKeyboardFocusWithinProperty\n  id: IsKeyboardFocusWithinProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsKeyboardFocusWithinProperty\n  nameWithType: UIElement3D.IsKeyboardFocusWithinProperty\n  fullName: System.Windows.UIElement3D.IsKeyboardFocusWithinProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin*> dependency property.\n  remarks: IsKeyboardFocusWithinProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsMouseCaptured\n  id: IsMouseCaptured\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsMouseCaptured\n  nameWithType: UIElement3D.IsMouseCaptured\n  fullName: System.Windows.UIElement3D.IsMouseCaptured\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value indicating whether the mouse is captured to this element.\n  remarks: \"Mouse capture state is related to in-process drag-and-drop operations.  \\n  \\n IsMouseCaptured is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsMouseCaptured\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.IsMouseCapturedProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool IsMouseCaptured { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element has mouse capture; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.IsMouseCaptured*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsMouseCapturedChanged\n  id: IsMouseCapturedChanged\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsMouseCapturedChanged\n  nameWithType: UIElement3D.IsMouseCapturedChanged\n  fullName: System.Windows.UIElement3D.IsMouseCapturedChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the value of the <xref:System.Windows.UIElement3D.IsMouseCaptured*> property changes on this element.\n  remarks: \"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.  \\n  \\n IsMouseCapturedChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;\n    return:\n      type: System.Windows.DependencyPropertyChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsMouseCapturedProperty\n  id: IsMouseCapturedProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsMouseCapturedProperty\n  nameWithType: UIElement3D.IsMouseCapturedProperty\n  fullName: System.Windows.UIElement3D.IsMouseCapturedProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.IsMouseCaptured*> dependency property.\n  remarks: IsMouseCapturedProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsMouseCaptureWithin\n  id: IsMouseCaptureWithin\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsMouseCaptureWithin\n  nameWithType: UIElement3D.IsMouseCaptureWithin\n  fullName: System.Windows.UIElement3D.IsMouseCaptureWithin\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value that determines whether mouse capture is held by this element or by child elements in its visual tree.\n  remarks: \"IsMouseCaptureWithin is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsMouseCaptureWithin\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.IsMouseCaptureWithinProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool IsMouseCaptureWithin { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this element or a contained element has mouse capture; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.IsMouseCaptureWithin*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsMouseCaptureWithinChanged\n  id: IsMouseCaptureWithinChanged\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsMouseCaptureWithinChanged\n  nameWithType: UIElement3D.IsMouseCaptureWithinChanged\n  fullName: System.Windows.UIElement3D.IsMouseCaptureWithinChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the value of the <xref:System.Windows.UIElement3D.IsMouseCaptureWithin*> property changes on this element.\n  remarks: \"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.  \\n  \\n IsMouseCaptureWithinChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;\n    return:\n      type: System.Windows.DependencyPropertyChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsMouseCaptureWithinProperty\n  id: IsMouseCaptureWithinProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsMouseCaptureWithinProperty\n  nameWithType: UIElement3D.IsMouseCaptureWithinProperty\n  fullName: System.Windows.UIElement3D.IsMouseCaptureWithinProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.IsMouseCaptureWithin*> dependency property.\n  remarks: IsMouseCaptureWithinProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsMouseDirectlyOver\n  id: IsMouseDirectlyOver\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsMouseDirectlyOver\n  nameWithType: UIElement3D.IsMouseDirectlyOver\n  fullName: System.Windows.UIElement3D.IsMouseDirectlyOver\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.\n  remarks: \"Unlike <xref:System.Windows.UIElement3D.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element—as it is for a hit test. If the mouse pointer is instead over a child element, this property will be `false`. For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement3D.IsMouseOver%2A> instead.  \\n  \\n If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.  \\n  \\n IsMouseDirectlyOver is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsMouseDirectlyOver\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.IsMouseDirectlyOverProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool IsMouseDirectlyOver { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the mouse pointer is over the same element result as a hit test; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.IsMouseDirectlyOver*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsMouseDirectlyOverChanged\n  id: IsMouseDirectlyOverChanged\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsMouseDirectlyOverChanged\n  nameWithType: UIElement3D.IsMouseDirectlyOverChanged\n  fullName: System.Windows.UIElement3D.IsMouseDirectlyOverChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the value of the <xref:System.Windows.UIElement3D.IsMouseDirectlyOver*> property changes on this element.\n  remarks: \"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.  \\n  \\n IsMouseDirectlyOverChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;\n    return:\n      type: System.Windows.DependencyPropertyChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsMouseDirectlyOverProperty\n  id: IsMouseDirectlyOverProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsMouseDirectlyOverProperty\n  nameWithType: UIElement3D.IsMouseDirectlyOverProperty\n  fullName: System.Windows.UIElement3D.IsMouseDirectlyOverProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.IsMouseDirectlyOver*> dependency property.\n  remarks: IsMouseDirectlyOverProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsMouseOver\n  id: IsMouseOver\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsMouseOver\n  nameWithType: UIElement3D.IsMouseOver\n  fullName: System.Windows.UIElement3D.IsMouseOver\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value indicating whether the mouse pointer is located over this element (including child elements in the visual tree).\n  remarks: \"Typically, controls are composited such that the various elements inside the control (the visual tree) will all report the mouse state for the containing control. For example, a <xref:System.Windows.Controls.ListBox> style control will report IsMouseOver as `true` if the mouse is anywhere over its geometry, including any <xref:System.Windows.Controls.ListBoxItem>.  \\n  \\n Although an analogous \\\"IsMouseOverChanged\\\" event does not exist, several similar events do. For example, you can handle <xref:System.Windows.UIElement3D.MouseEnter>, <xref:System.Windows.UIElement3D.MouseMove>, and <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>.  \\n  \\n If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.  \\n  \\n Some controls deliberately capture the mouse on certain actions that do not appear to directly involve the mouse. This can lead to IsMouseOver being `true` even though the mouse has not apparently moved.  \\n  \\n IsMouseOver is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsMouseOver\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.IsMouseOverProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool IsMouseOver { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if mouse pointer is over the element or its child elements; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.IsMouseOver*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsMouseOverProperty\n  id: IsMouseOverProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsMouseOverProperty\n  nameWithType: UIElement3D.IsMouseOverProperty\n  fullName: System.Windows.UIElement3D.IsMouseOverProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.IsMouseOver*> dependency property.\n  remarks: IsMouseOverProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsMouseOverProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsStylusCaptured\n  id: IsStylusCaptured\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsStylusCaptured\n  nameWithType: UIElement3D.IsStylusCaptured\n  fullName: System.Windows.UIElement3D.IsStylusCaptured\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value indicating whether the stylus is captured by this element.\n  remarks: \"Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n IsStylusCaptured is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsStylusCaptured\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.IsStylusCapturedProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool IsStylusCaptured { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element has stylus capture; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.IsStylusCaptured*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsStylusCapturedChanged\n  id: IsStylusCapturedChanged\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsStylusCapturedChanged\n  nameWithType: UIElement3D.IsStylusCapturedChanged\n  fullName: System.Windows.UIElement3D.IsStylusCapturedChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the value of the <xref:System.Windows.UIElement3D.IsStylusCaptured*> property changes on this element.\n  remarks: \"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.  \\n  \\n IsStylusCapturedChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;\n    return:\n      type: System.Windows.DependencyPropertyChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsStylusCapturedProperty\n  id: IsStylusCapturedProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsStylusCapturedProperty\n  nameWithType: UIElement3D.IsStylusCapturedProperty\n  fullName: System.Windows.UIElement3D.IsStylusCapturedProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.IsStylusCaptured*> dependency property.\n  remarks: IsStylusCapturedProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsStylusCaptureWithin\n  id: IsStylusCaptureWithin\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsStylusCaptureWithin\n  nameWithType: UIElement3D.IsStylusCaptureWithin\n  fullName: System.Windows.UIElement3D.IsStylusCaptureWithin\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value that determines whether stylus capture is held by this element, or an element within the element bounds and its visual tree.\n  remarks: \"Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n IsStylusCaptureWithin is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsStylusCaptureWithin\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.IsStylusCaptureWithinProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool IsStylusCaptureWithin { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this element or a contained element has stylus capture; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.IsStylusCaptureWithin*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsStylusCaptureWithinChanged\n  id: IsStylusCaptureWithinChanged\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsStylusCaptureWithinChanged\n  nameWithType: UIElement3D.IsStylusCaptureWithinChanged\n  fullName: System.Windows.UIElement3D.IsStylusCaptureWithinChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the value of the <xref:System.Windows.UIElement3D.IsStylusCaptureWithin*> property changes on this element.\n  remarks: \"This is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.  \\n  \\n IsStylusCaptureWithinChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;\n    return:\n      type: System.Windows.DependencyPropertyChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsStylusCaptureWithinProperty\n  id: IsStylusCaptureWithinProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsStylusCaptureWithinProperty\n  nameWithType: UIElement3D.IsStylusCaptureWithinProperty\n  fullName: System.Windows.UIElement3D.IsStylusCaptureWithinProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.IsStylusCaptureWithin*> dependency property.\n  remarks: IsStylusCaptureWithinProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsStylusDirectlyOver\n  id: IsStylusDirectlyOver\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsStylusDirectlyOver\n  nameWithType: UIElement3D.IsStylusDirectlyOver\n  fullName: System.Windows.UIElement3D.IsStylusDirectlyOver\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.\n  remarks: \"Unlike <xref:System.Windows.UIElement3D.IsStylusOver%2A>, this property is only `true` if the stylus is over the element. If the stylus is instead over a child element or over elements that are part of an element's deeper compositing (the visual tree), this property will be `false`.  \\n  \\n Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results. For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement3D.IsStylusOver%2A> instead.  \\n  \\n If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n IsStylusDirectlyOver is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsStylusDirectlyOver\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.IsStylusDirectlyOverProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool IsStylusDirectlyOver { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the stylus pointer is over the same element result as a hit test; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.IsStylusDirectlyOver*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsStylusDirectlyOverChanged\n  id: IsStylusDirectlyOverChanged\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsStylusDirectlyOverChanged\n  nameWithType: UIElement3D.IsStylusDirectlyOverChanged\n  fullName: System.Windows.UIElement3D.IsStylusDirectlyOverChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the value of the <xref:System.Windows.UIElement3D.IsStylusDirectlyOver*> property changes on this element.\n  remarks: \"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.  \\n  \\n IsStylusDirectlyOverChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;\n    return:\n      type: System.Windows.DependencyPropertyChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsStylusDirectlyOverProperty\n  id: IsStylusDirectlyOverProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsStylusDirectlyOverProperty\n  nameWithType: UIElement3D.IsStylusDirectlyOverProperty\n  fullName: System.Windows.UIElement3D.IsStylusDirectlyOverProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.IsStylusDirectlyOver*> dependency property.\n  remarks: IsStylusDirectlyOverProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsStylusOver\n  id: IsStylusOver\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsStylusOver\n  nameWithType: UIElement3D.IsStylusOver\n  fullName: System.Windows.UIElement3D.IsStylusOver\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value indicating whether the stylus cursor is located over this element (including visual child elements).\n  remarks: \"If this element has stylus capture, this property will continue to return `true` until stylus capture is lost and the pointer is out of its bounds.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n IsStylusOver is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsStylusOver\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.IsStylusOverProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool IsStylusOver { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if stylus cursor is over the element or its child elements; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.IsStylusOver*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsStylusOverProperty\n  id: IsStylusOverProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsStylusOverProperty\n  nameWithType: UIElement3D.IsStylusOverProperty\n  fullName: System.Windows.UIElement3D.IsStylusOverProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.IsStylusOver*> dependency property.\n  remarks: IsStylusOverProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsStylusOverProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsVisible\n  id: IsVisible\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsVisible\n  nameWithType: UIElement3D.IsVisible\n  fullName: System.Windows.UIElement3D.IsVisible\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value indicating whether this element is visible in the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)].\n  remarks: \"Determination of the IsVisible value takes many factors into account. In contrast, <xref:System.Windows.UIElement3D.Visibility%2A>, which is a settable property, only indicates the intention to programmatically make an element visible or invisible.  \\n  \\n Changes to the value of this property will typically raise the <xref:System.Windows.UIElement3D.IsVisibleChanged> event. There is no matching [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] \\\"On*\\\" class handling override method that would allow some derived class to override that behavior and handle the event, but a class handler could still be attached directly with <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n Elements where IsVisible is `false` do not participate in input events (or commands), do not influence either the measure or arrange passes of layout, are not focusable, are not in a tab sequence, and will not be reported in hit testing. In contrast, elements where <xref:System.Windows.UIElement3D.IsEnabled%2A> is `false` will still participate in events and commands, and hit testing, but are also not focusable.  \\n  \\n IsVisible is not intended to be used as a style trigger. Using IsVisible as a style trigger might have unpredictable results. IsVisible is intended for state checking by lower level input implementations.  \\n  \\n IsVisible is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsVisible\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.IsVisibleProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool IsVisible { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element is visible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.IsVisible*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsVisibleChanged\n  id: IsVisibleChanged\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsVisibleChanged\n  nameWithType: UIElement3D.IsVisibleChanged\n  fullName: System.Windows.UIElement3D.IsVisibleChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the value of the <xref:System.Windows.UIElement3D.IsVisible*> property changes on this element.\n  remarks: \"This member is a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event, not a routed event.  \\n  \\n IsVisibleChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public event System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged;\n    return:\n      type: System.Windows.DependencyPropertyChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.IsVisibleProperty\n  id: IsVisibleProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: IsVisibleProperty\n  nameWithType: UIElement3D.IsVisibleProperty\n  fullName: System.Windows.UIElement3D.IsVisibleProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.IsVisible*> dependency property.\n  remarks: IsVisibleProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsVisibleProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.KeyDown\n  id: KeyDown\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: KeyDown\n  nameWithType: UIElement3D.KeyDown\n  fullName: System.Windows.UIElement3D.KeyDown\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when a key is pressed while the keyboard is focused on this element.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName> attached event for this class so that KeyDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the KeyDown event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n KeyDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_KeyDown\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.KeyDownEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.KeyEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewKeyDown>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnKeyDown%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.KeyEventHandler KeyDown;\n    return:\n      type: System.Windows.Input.KeyEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.KeyDownEvent\n  id: KeyDownEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: KeyDownEvent\n  nameWithType: UIElement3D.KeyDownEvent\n  fullName: System.Windows.UIElement3D.KeyDownEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.KeyDown\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n KeyDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent KeyDownEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.KeyUp\n  id: KeyUp\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: KeyUp\n  nameWithType: UIElement3D.KeyUp\n  fullName: System.Windows.UIElement3D.KeyUp\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when a key is released while the keyboard is focused on this element.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName> attached event for this class so that KeyUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the KeyUp event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n KeyUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_KeyUp\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.KeyUpEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.KeyEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewKeyUp>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnKeyUp%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.KeyEventHandler KeyUp;\n    return:\n      type: System.Windows.Input.KeyEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.KeyUpEvent\n  id: KeyUpEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: KeyUpEvent\n  nameWithType: UIElement3D.KeyUpEvent\n  fullName: System.Windows.UIElement3D.KeyUpEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.KeyUp\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n KeyUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent KeyUpEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.LostFocus\n  id: LostFocus\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: LostFocus\n  nameWithType: UIElement3D.LostFocus\n  fullName: System.Windows.UIElement3D.LostFocus\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when this element loses logical focus.\n  remarks: \"Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope. In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.UIElement3D.Focus%2A> method is called still gets logical focus.  \\n  \\n A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement3D.IsFocused%2A> property of an element in the route changes from `true` to `false`.  \\n  \\n Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.  \\n  \\n LostFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_LostFocus\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.LostFocusEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.RoutedEventHandler>|  \\n  \\n-   There is no corresponding tunneling event.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnLostFocus%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.RoutedEventHandler LostFocus;\n    return:\n      type: System.Windows.RoutedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.LostFocusEvent\n  id: LostFocusEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: LostFocusEvent\n  nameWithType: UIElement3D.LostFocusEvent\n  fullName: System.Windows.UIElement3D.LostFocusEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.LostFocus\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n LostFocusEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent LostFocusEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.LostKeyboardFocus\n  id: LostKeyboardFocus\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: LostKeyboardFocus\n  nameWithType: UIElement3D.LostKeyboardFocus\n  fullName: System.Windows.UIElement3D.LostKeyboardFocus\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the keyboard is no longer focused on this element.\n  remarks: \"Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName> attached event for this class, so that LostKeyboardFocus is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the LostKeyboardFocus event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n LostKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_LostKeyboardFocus\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.LostKeyboardFocusEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;\n    return:\n      type: System.Windows.Input.KeyboardFocusChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.LostKeyboardFocusEvent\n  id: LostKeyboardFocusEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: LostKeyboardFocusEvent\n  nameWithType: UIElement3D.LostKeyboardFocusEvent\n  fullName: System.Windows.UIElement3D.LostKeyboardFocusEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.LostKeyboardFocus\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n LostKeyboardFocusEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.LostMouseCapture\n  id: LostMouseCapture\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: LostMouseCapture\n  nameWithType: UIElement3D.LostMouseCapture\n  fullName: System.Windows.UIElement3D.LostMouseCapture\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when this element loses mouse capture.\n  remarks: \"When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds. The mouse is typically captured only during drag-and-drop operations.  \\n  \\n Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName> attached event for this class, so that LostMouseCapture is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the LostMouseCapture event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n LostMouseCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_LostMouseCapture\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.LostMouseCaptureEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.MouseEventHandler>|  \\n  \\n-   There is no defined corresponding tunneling event.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseEventHandler LostMouseCapture;\n    return:\n      type: System.Windows.Input.MouseEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.LostMouseCaptureEvent\n  id: LostMouseCaptureEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: LostMouseCaptureEvent\n  nameWithType: UIElement3D.LostMouseCaptureEvent\n  fullName: System.Windows.UIElement3D.LostMouseCaptureEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.LostMouseCapture\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n LostMouseCaptureEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.LostStylusCapture\n  id: LostStylusCapture\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: LostStylusCapture\n  nameWithType: UIElement3D.LostStylusCapture\n  fullName: System.Windows.UIElement3D.LostStylusCapture\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when this element loses stylus capture.\n  remarks: \"When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds. The stylus is typically captured only during drag-and-drop operations.  \\n  \\n Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName> attached event for this class, so that LostStylusCapture is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the LostStylusCapture event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n LostStylusCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_LostStylusCapture\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.LostStylusCaptureEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  \\n  \\n-   There is no defined corresponding tunneling event.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusEventHandler LostStylusCapture;\n    return:\n      type: System.Windows.Input.StylusEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.LostStylusCaptureEvent\n  id: LostStylusCaptureEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: LostStylusCaptureEvent\n  nameWithType: UIElement3D.LostStylusCaptureEvent\n  fullName: System.Windows.UIElement3D.LostStylusCaptureEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.LostStylusCapture\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n LostStylusCaptureEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.LostTouchCapture\n  id: LostTouchCapture\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: LostTouchCapture\n  nameWithType: UIElement3D.LostTouchCapture\n  fullName: System.Windows.UIElement3D.LostTouchCapture\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when this element loses a touch capture.\n  remarks: \"<a name=\\\"routedEventInfo_LostTouchCapture\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.LostTouchCaptureEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event EventHandler<System.Windows.Input.TouchEventArgs> LostTouchCapture;\n    return:\n      type: System.EventHandler{System.Windows.Input.TouchEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.LostTouchCaptureEvent\n  id: LostTouchCaptureEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: LostTouchCaptureEvent\n  nameWithType: UIElement3D.LostTouchCaptureEvent\n  fullName: System.Windows.UIElement3D.LostTouchCaptureEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.LostTouchCapture\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseDown\n  id: MouseDown\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseDown\n  nameWithType: UIElement3D.MouseDown\n  fullName: System.Windows.UIElement3D.MouseDown\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when any mouse button is pressed while the pointer is over this element.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> attached event for this class, so that MouseDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the MouseDown event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n The MouseDown event is often raised together with either <xref:System.Windows.UIElement3D.MouseLeftButtonDown> or <xref:System.Windows.UIElement3D.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons. <xref:System.Windows.UIElement3D.MouseLeftButtonDown> and <xref:System.Windows.UIElement3D.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event reaches this element along the event route. See Remarks for <xref:System.Windows.UIElement3D.MouseLeftButtonDown> or <xref:System.Windows.UIElement3D.MouseRightButtonDown>.  \\n  \\n> [!IMPORTANT]\\n>  Some controls might have inherent class handling for mouse button events. The left mouse button down event is the most likely event to have class handling in a control. The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled. Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised. Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.  \\n  \\n You can resolve the issue that is outlined in the preceding Important and still receive MouseDown events for left mouse button down events on a derived class that has class handling by using either of these solutions:  \\n  \\n-   Attach handlers for the <xref:System.Windows.UIElement3D.PreviewMouseDown> event, which is not marked as handled by the controls. Notice that because this is a preview event, the route starts at the root and tunnels down to the control.  \\n  \\n-   Register a handler on the control procedurally by calling <xref:System.Windows.UIElement3D.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.  \\n  \\n MouseDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_MouseDown\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.MouseDownEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseDown>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnMouseDown%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseButtonEventHandler MouseDown;\n    return:\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseDownEvent\n  id: MouseDownEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseDownEvent\n  nameWithType: UIElement3D.MouseDownEvent\n  fullName: System.Windows.UIElement3D.MouseDownEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.MouseDown\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n MouseDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MouseDownEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseEnter\n  id: MouseEnter\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseEnter\n  nameWithType: UIElement3D.MouseEnter\n  fullName: System.Windows.UIElement3D.MouseEnter\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the mouse pointer enters the bounds of this element.\n  remarks: \"MouseEnter is a [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) that uses the direct event handling routing strategy. Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.  \\n  \\n Although MouseEnter tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsMouseOver%2A> property value has changed from `false` to `true` on this element.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName> attached event for this class, so that MouseEnter is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the MouseEnter event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n MouseEnter is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_MouseEnter\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.MouseEnterEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.Windows.Input.MouseEventHandler>|  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnMouseEnter%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseEventHandler MouseEnter;\n    return:\n      type: System.Windows.Input.MouseEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseEnterEvent\n  id: MouseEnterEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseEnterEvent\n  nameWithType: UIElement3D.MouseEnterEvent\n  fullName: System.Windows.UIElement3D.MouseEnterEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.MouseEnter\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n MouseEnterEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MouseEnterEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseLeave\n  id: MouseLeave\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseLeave\n  nameWithType: UIElement3D.MouseLeave\n  fullName: System.Windows.UIElement3D.MouseLeave\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the mouse pointer leaves the bounds of this element.\n  remarks: \"MouseLeave is a [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) that uses the direct event handling routing strategy. Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.  \\n  \\n Although MouseLeave tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsMouseOver%2A> property value has changed from `true` to `false` on this element.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName> attached event for this class, so that MouseLeave is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the MouseLeave event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n MouseLeave is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_MouseLeave\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.MouseLeaveEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.Windows.Input.MouseEventHandler>|  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnMouseLeave%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseEventHandler MouseLeave;\n    return:\n      type: System.Windows.Input.MouseEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseLeaveEvent\n  id: MouseLeaveEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseLeaveEvent\n  nameWithType: UIElement3D.MouseLeaveEvent\n  fullName: System.Windows.UIElement3D.MouseLeaveEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.MouseLeave\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n MouseLeaveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MouseLeaveEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseLeftButtonDown\n  id: MouseLeftButtonDown\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseLeftButtonDown\n  nameWithType: UIElement3D.MouseLeftButtonDown\n  fullName: System.Windows.UIElement3D.MouseLeftButtonDown\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the left mouse button is pressed while the mouse pointer is over this element.\n  remarks: \"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.  \\n  \\n This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route.  \\n  \\n The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event. If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event. If you mark MouseLeftButtonDown handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> handled for all further listeners along the route, and on all related events. This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.  \\n  \\n Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \\\"service\\\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class). The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data. For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.  \\n  \\n> [!IMPORTANT]\\n>  The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled. Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised. Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.  \\n  \\n You can resolve the issue that is outlined in the preceding Important and still receive MouseLeftButtonDown events for left mouse button down events on a derived class that has class handling by using either of these solutions:  \\n  \\n-   Attach handlers for the <xref:System.Windows.UIElement3D.PreviewMouseDown> event, which is not marked as handled by the controls. Notice that because this is a preview event, the route starts at the root and tunnels down to the control.  \\n  \\n-   Register a handler on the control procedurally by calling <xref:System.Windows.UIElement3D.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.  \\n  \\n MouseLeftButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_MouseLeftButtonDown\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.MouseLeftButtonDownEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;\n    return:\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseLeftButtonDownEvent\n  id: MouseLeftButtonDownEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseLeftButtonDownEvent\n  nameWithType: UIElement3D.MouseLeftButtonDownEvent\n  fullName: System.Windows.UIElement3D.MouseLeftButtonDownEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.MouseLeftButtonDown\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n MouseLeftButtonDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseLeftButtonUp\n  id: MouseLeftButtonUp\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseLeftButtonUp\n  nameWithType: UIElement3D.MouseLeftButtonUp\n  fullName: System.Windows.UIElement3D.MouseLeftButtonUp\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the left mouse button is released while the mouse pointer is over this element.\n  remarks: \"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.  \\n  \\n This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route.  \\n  \\n The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> event. If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event. If you mark MouseLeftButtonUp handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> handled for all further listeners along the route, and on all related events.  \\n  \\n Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \\\"service\\\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class). The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data. For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.  \\n  \\n MouseLeftButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_MouseLeftButtonUp\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.MouseLeftButtonUpEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;\n    return:\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseLeftButtonUpEvent\n  id: MouseLeftButtonUpEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseLeftButtonUpEvent\n  nameWithType: UIElement3D.MouseLeftButtonUpEvent\n  fullName: System.Windows.UIElement3D.MouseLeftButtonUpEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.MouseLeftButtonUp\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n MouseLeftButtonUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseMove\n  id: MouseMove\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseMove\n  nameWithType: UIElement3D.MouseMove\n  fullName: System.Windows.UIElement3D.MouseMove\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the mouse pointer moves while over this element.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName> attached event for this class, so that MouseMove is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the MouseMove event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n MouseMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_MouseMove\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.MouseMoveEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.MouseEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseMove>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnMouseMove%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseEventHandler MouseMove;\n    return:\n      type: System.Windows.Input.MouseEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseMoveEvent\n  id: MouseMoveEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseMoveEvent\n  nameWithType: UIElement3D.MouseMoveEvent\n  fullName: System.Windows.UIElement3D.MouseMoveEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.MouseMove\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n MouseMoveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MouseMoveEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseRightButtonDown\n  id: MouseRightButtonDown\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseRightButtonDown\n  nameWithType: UIElement3D.MouseRightButtonDown\n  fullName: System.Windows.UIElement3D.MouseRightButtonDown\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the right mouse button is pressed while the mouse pointer is over this element.\n  remarks: \"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.  \\n  \\n This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route.  \\n  \\n The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event. If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event. If you mark MouseRightButtonDown handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> handled for all further listeners along the route, and on all related events. This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.  \\n  \\n Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \\\"service\\\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class). The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data. For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.  \\n  \\n Right button mouse events frequently have native handling in application scenarios. For instance, a right mouse button down might display a context menu. See [ContextMenu Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n MouseRightButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_MouseRightButtonDown\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.MouseRightButtonDownEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;\n    return:\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseRightButtonDownEvent\n  id: MouseRightButtonDownEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseRightButtonDownEvent\n  nameWithType: UIElement3D.MouseRightButtonDownEvent\n  fullName: System.Windows.UIElement3D.MouseRightButtonDownEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.MouseRightButtonDown\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n MouseRightButtonDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseRightButtonUp\n  id: MouseRightButtonUp\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseRightButtonUp\n  nameWithType: UIElement3D.MouseRightButtonUp\n  fullName: System.Windows.UIElement3D.MouseRightButtonUp\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the right mouse button is released while the mouse pointer is over this element.\n  remarks: \"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.  \\n  \\n This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route.  \\n  \\n The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> event. If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event. If you mark MouseRightButtonUp handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> handled for all further listeners along the route, and on all related events.  \\n  \\n Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \\\"service\\\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class). The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data. For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.  \\n  \\n MouseRightButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_MouseRightButtonUp\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.MouseRightButtonUpEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;\n    return:\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseRightButtonUpEvent\n  id: MouseRightButtonUpEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseRightButtonUpEvent\n  nameWithType: UIElement3D.MouseRightButtonUpEvent\n  fullName: System.Windows.UIElement3D.MouseRightButtonUpEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.MouseRightButtonUp\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n MouseRightButtonUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseUp\n  id: MouseUp\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseUp\n  nameWithType: UIElement3D.MouseUp\n  fullName: System.Windows.UIElement3D.MouseUp\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when any mouse button is released over this element.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> attached event for this class, so that MouseUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the MouseUp event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n The MouseUp event is often raised together with either <xref:System.Windows.UIElement3D.MouseLeftButtonUp> or <xref:System.Windows.UIElement3D.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons. <xref:System.Windows.UIElement3D.MouseLeftButtonUp> and <xref:System.Windows.UIElement3D.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event reaches this element along the event route. See Remarks for <xref:System.Windows.UIElement3D.MouseLeftButtonUp> or <xref:System.Windows.UIElement3D.MouseRightButtonUp>.  \\n  \\n MouseUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_MouseUp\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.MouseUpEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseUp>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnMouseUp%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseButtonEventHandler MouseUp;\n    return:\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseUpEvent\n  id: MouseUpEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseUpEvent\n  nameWithType: UIElement3D.MouseUpEvent\n  fullName: System.Windows.UIElement3D.MouseUpEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.MouseUp\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n MouseUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MouseUpEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseWheel\n  id: MouseWheel\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseWheel\n  nameWithType: UIElement3D.MouseWheel\n  fullName: System.Windows.UIElement3D.MouseWheel\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.\n  remarks: \"Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the MouseWheel event from a focused or captured element, the mouse pointer might actually be over another element.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName> attached event for this class, so that MouseWheel is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the MouseWheel event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n MouseWheel is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_MouseWheel\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.MouseWheelEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.MouseWheelEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewMouseWheel>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnMouseWheel%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseWheelEventHandler MouseWheel;\n    return:\n      type: System.Windows.Input.MouseWheelEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MouseWheelEvent\n  id: MouseWheelEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MouseWheelEvent\n  nameWithType: UIElement3D.MouseWheelEvent\n  fullName: System.Windows.UIElement3D.MouseWheelEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.MouseWheel\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n MouseWheelEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MouseWheelEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)\n  id: MoveFocus(System.Windows.Input.TraversalRequest)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: MoveFocus(TraversalRequest)\n  nameWithType: UIElement3D.MoveFocus(TraversalRequest)\n  fullName: System.Windows.UIElement3D.MoveFocus(TraversalRequest)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Attempts to move focus from this element to another element. The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.\n  remarks: \"Make sure you check the return value of this method. A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.  \\n  \\n MoveFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);\n    parameters:\n    - id: request\n      type: System.Windows.Input.TraversalRequest\n      description: A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the requested traversal was performed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.MoveFocus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  id: OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnAccessKey(AccessKeyEventArgs)\n  nameWithType: UIElement3D.OnAccessKey(AccessKeyEventArgs)\n  fullName: System.Windows.UIElement3D.OnAccessKey(AccessKeyEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Provides class handling for when an access key that is meaningful for this element is invoked.\n  remarks: \"There is no actual AccessKey event in the <xref:System.Windows.UIElement3D> class, or elsewhere, which you can raise or attach handlers for. Instead, the event is originated via a dedicated manager class, <xref:System.Windows.Input.AccessKeyManager>, which post-processes all input to search for access keys that are applicable to the entire input model.  \\n  \\n OnAccessKey is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.AccessKeyEventArgs\n      description: The event data to the access key event. The event data reports which key was invoked, and indicate whether the <xref href=\"System.Windows.Input.AccessKeyManager\"></xref> object that controls the sending of these events also sent this access key invocation to other elements.\n  overload: System.Windows.UIElement3D.OnAccessKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnCreateAutomationPeer\n  id: OnCreateAutomationPeer\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnCreateAutomationPeer()\n  nameWithType: UIElement3D.OnCreateAutomationPeer()\n  fullName: System.Windows.UIElement3D.OnCreateAutomationPeer()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Returns class-specific <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> implementations for the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure.\n  remarks: OnCreateAutomationPeer is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();\n    parameters: []\n    return:\n      type: System.Windows.Automation.Peers.AutomationPeer\n      description: The type-specific <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> implementation.\n  overload: System.Windows.UIElement3D.OnCreateAutomationPeer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnDragEnter(System.Windows.DragEventArgs)\n  id: OnDragEnter(System.Windows.DragEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnDragEnter(DragEventArgs)\n  nameWithType: UIElement3D.OnDragEnter(DragEventArgs)\n  fullName: System.Windows.UIElement3D.OnDragEnter(DragEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnDragEnter is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnDragEnter (System.Windows.DragEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DragEventArgs\n      description: The <xref href=\"System.Windows.DragEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnDragEnter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnDragLeave(System.Windows.DragEventArgs)\n  id: OnDragLeave(System.Windows.DragEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnDragLeave(DragEventArgs)\n  nameWithType: UIElement3D.OnDragLeave(DragEventArgs)\n  fullName: System.Windows.UIElement3D.OnDragLeave(DragEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnDragLeave is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnDragLeave (System.Windows.DragEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DragEventArgs\n      description: The <xref href=\"System.Windows.DragEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnDragLeave*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnDragOver(System.Windows.DragEventArgs)\n  id: OnDragOver(System.Windows.DragEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnDragOver(DragEventArgs)\n  nameWithType: UIElement3D.OnDragOver(DragEventArgs)\n  fullName: System.Windows.UIElement3D.OnDragOver(DragEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnDragOver is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnDragOver (System.Windows.DragEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DragEventArgs\n      description: The <xref href=\"System.Windows.DragEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnDragOver*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnDrop(System.Windows.DragEventArgs)\n  id: OnDrop(System.Windows.DragEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnDrop(DragEventArgs)\n  nameWithType: UIElement3D.OnDrop(DragEventArgs)\n  fullName: System.Windows.UIElement3D.OnDrop(DragEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnDrop is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnDrop (System.Windows.DragEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DragEventArgs\n      description: The <xref href=\"System.Windows.DragEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnDrop*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  id: OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnGiveFeedback(GiveFeedbackEventArgs)\n  nameWithType: UIElement3D.OnGiveFeedback(GiveFeedbackEventArgs)\n  fullName: System.Windows.UIElement3D.OnGiveFeedback(GiveFeedbackEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnGiveFeedback is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.GiveFeedbackEventArgs\n      description: The <xref href=\"System.Windows.GiveFeedbackEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnGiveFeedback*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnGotFocus(System.Windows.RoutedEventArgs)\n  id: OnGotFocus(System.Windows.RoutedEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnGotFocus(RoutedEventArgs)\n  nameWithType: UIElement3D.OnGotFocus(RoutedEventArgs)\n  fullName: System.Windows.UIElement3D.OnGotFocus(RoutedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Raises the <xref href=\"System.Windows.UIElement3D.GotFocus\"></xref> routed event by using the event data provided.\n  remarks: \"This method, although virtual, does have a default implementation that raises the event.  \\n  \\n This On* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement3D.IsFocused%2A> property value changes. The OnGotFocus implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] On\\\\* implementations, which only provide a convenient way to add class handling for that event.  \\n  \\n OnGotFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.RoutedEventArgs\n      description: A <xref href=\"System.Windows.RoutedEventArgs\"></xref> that contains event data. This event data must contain the identifier for the <xref href=\"System.Windows.UIElement3D.GotFocus\"></xref> event.\n  overload: System.Windows.UIElement3D.OnGotFocus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  id: OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)\n  nameWithType: UIElement3D.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnGotKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.KeyboardFocusChangedEventArgs\n      description: The <xref href=\"System.Windows.Input.KeyboardFocusChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnGotKeyboardFocus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  id: OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnGotMouseCapture(MouseEventArgs)\n  nameWithType: UIElement3D.OnGotMouseCapture(MouseEventArgs)\n  fullName: System.Windows.UIElement3D.OnGotMouseCapture(MouseEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnGotMouseCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnGotMouseCapture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  id: OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnGotStylusCapture(StylusEventArgs)\n  nameWithType: UIElement3D.OnGotStylusCapture(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnGotStylusCapture(StylusEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnGotStylusCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnGotStylusCapture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  id: OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnGotTouchCapture(TouchEventArgs)\n  nameWithType: UIElement3D.OnGotTouchCapture(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnGotTouchCapture(TouchEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement3D.GotTouchCapture\"></xref> routed event that occurs when a touch is captured to this element.\n  remarks: The OnGotTouchCapture method has no default implementation. Override OnGotTouchCapture in a derived class to handle the <xref:System.Windows.UIElement3D.GotTouchCapture> event. Be sure to call the base class’s OnGotTouchCapture method so that base classes receive the event.\n  syntax:\n    content: protected virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.TouchEventArgs\n      description: A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnGotTouchCapture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  id: OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: UIElement3D.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsKeyboardFocusedChanged\"></xref> event is raised on this element. Implement this method to add class handling for this event.\n  remarks: \"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> dependency property changes. The virtual method is called first and can manipulate the event data as necessary. Then the <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> event is raised with that same event data instance. Notice that the  <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> event is not a routed event. Therefore, you cannot mark it as handled in the class handler.  \\n  \\n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.  \\n  \\n OnIsKeyboardFocusedChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnIsKeyboardFocusedChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  id: OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: UIElement3D.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked just before the <xref href=\"System.Windows.UIElement3D.IsKeyboardFocusWithinChanged\"></xref> event is raised by this element. Implement this method to add class handling for this event.\n  remarks: \"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> dependency property changes its value. The virtual method is called first and can manipulate the event data as necessary. Then the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> event is raised with that same event data instance. Notice that the <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> event is not a routed event. Therefore, you cannot mark it as handled in the class handler.  \\n  \\n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.  \\n  \\n OnIsKeyboardFocusWithinChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: A <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  id: OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: UIElement3D.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsMouseCapturedChanged\"></xref> event is raised on this element. Implement this method to add class handling for this event.\n  remarks: \"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> dependency property changes its value. The virtual method is called first and can manipulate the event data as necessary. Then the <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> event is raised with that same event data instance. Notice that the <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> event is not a routed event. Therefore, you cannot mark it as handled in the class handler.  \\n  \\n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.  \\n  \\n OnIsMouseCapturedChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnIsMouseCapturedChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  id: OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: UIElement3D.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsMouseCaptureWithinChanged\"></xref> event is raised on this element. Implement this method to add class handling for this event.\n  remarks: OnIsMouseCaptureWithinChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: A <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  id: OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: UIElement3D.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsMouseDirectlyOverChanged\"></xref> event is raised on this element. Implement this method to add class handling for this event.\n  remarks: \"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A> dependency property changes its value. The virtual method is called first and can manipulate the event data as necessary. Then the <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> event is raised with that same event data instance. Notice that the <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> event is not a routed event. Therefore, you cannot mark it as handled in the class handler.  \\n  \\n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.  \\n  \\n OnIsMouseDirectlyOverChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  id: OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: UIElement3D.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsStylusCapturedChanged\"></xref> event is raised on this element. Implement this method to add class handling for this event.\n  remarks: \"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> dependency property changes its value. The virtual method is called first and can manipulate the event data as necessary. Then the <xref:System.Windows.UIElement3D.IsStylusCapturedChanged> event is raised with that same event data instance. Notice that the event is not a routed event. Therefore, you cannot mark it as handled in the class handler.  \\n  \\n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.  \\n  \\n OnIsStylusCapturedChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: A <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnIsStylusCapturedChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  id: OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: UIElement3D.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsStylusCaptureWithinChanged\"></xref> event is raised on this element. Implement this method to add class handling for this event.\n  remarks: \"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A> dependency property changes its value. The virtual method is called first and can manipulate the event data as necessary. Then the <xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged> event is raised with that same event data instance. Notice that the event is not a routed event. Therefore, you cannot mark it as handled in the class handler.  \\n  \\n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.  \\n  \\n OnIsStylusCaptureWithinChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  id: OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: UIElement3D.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.IsStylusDirectlyOverChanged\"></xref> event is raised on this element. Implement this method to add class handling for this event.\n  remarks: \"This virtual method is called when the value of the <xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A> dependency property changes its value. The virtual method is called first and can manipulate the event data as necessary. Then the <xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged> event is raised with that same event data instance. Notice that the event is not a routed event. Therefore you cannot mark it as handled in the class handler.  \\n  \\n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.  \\n  \\n OnIsStylusDirectlyOverChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  id: OnKeyDown(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnKeyDown(KeyEventArgs)\n  nameWithType: UIElement3D.OnKeyDown(KeyEventArgs)\n  fullName: System.Windows.UIElement3D.OnKeyDown(KeyEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"Keystrokes are handled by a dedicated input manager. Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke. If these input system features mark the event as handled, then OnKeyDown is not invoked.  \\n  \\n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnKeyDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.KeyEventArgs\n      description: The <xref href=\"System.Windows.Input.KeyEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnKeyDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  id: OnKeyUp(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnKeyUp(KeyEventArgs)\n  nameWithType: UIElement3D.OnKeyUp(KeyEventArgs)\n  fullName: System.Windows.UIElement3D.OnKeyUp(KeyEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"Keystrokes are handled by a dedicated input manager. Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke. If these input system features mark the event as handled, then OnKeyUp is not invoked.  \\n  \\n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnKeyUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.KeyEventArgs\n      description: The <xref href=\"System.Windows.Input.KeyEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnKeyUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnLostFocus(System.Windows.RoutedEventArgs)\n  id: OnLostFocus(System.Windows.RoutedEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnLostFocus(RoutedEventArgs)\n  nameWithType: UIElement3D.OnLostFocus(RoutedEventArgs)\n  fullName: System.Windows.UIElement3D.OnLostFocus(RoutedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Raises the <xref href=\"System.Windows.UIElement3D.LostFocus\"></xref> routed event by using the event data that is provided.\n  remarks: \"This method, although virtual, does have a default implementation that raises the event.  \\n  \\n This On* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement3D.IsFocused%2A> property value changes. This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] On\\\\* implementations, which only provide a convenient way to add class handling for that event.  \\n  \\n OnLostFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.RoutedEventArgs\n      description: A <xref href=\"System.Windows.RoutedEventArgs\"></xref> that contains event data. This event data must contain the identifier for the <xref href=\"System.Windows.UIElement3D.LostFocus\"></xref> event.\n  overload: System.Windows.UIElement3D.OnLostFocus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  id: OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  nameWithType: UIElement3D.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnLostKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.KeyboardFocusChangedEventArgs\n      description: The <xref href=\"System.Windows.Input.KeyboardFocusChangedEventArgs\"></xref> that contains event data.\n  overload: System.Windows.UIElement3D.OnLostKeyboardFocus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  id: OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnLostMouseCapture(MouseEventArgs)\n  nameWithType: UIElement3D.OnLostMouseCapture(MouseEventArgs)\n  fullName: System.Windows.UIElement3D.OnLostMouseCapture(MouseEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnLostMouseCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseEventArgs\"></xref> that contains event data.\n  overload: System.Windows.UIElement3D.OnLostMouseCapture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  id: OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnLostStylusCapture(StylusEventArgs)\n  nameWithType: UIElement3D.OnLostStylusCapture(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnLostStylusCapture(StylusEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnLostStylusCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains event data.\n  overload: System.Windows.UIElement3D.OnLostStylusCapture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  id: OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnLostTouchCapture(TouchEventArgs)\n  nameWithType: UIElement3D.OnLostTouchCapture(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnLostTouchCapture(TouchEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement3D.LostTouchCapture\"></xref> routed event that occurs when this element loses a touch capture.\n  remarks: The OnLostTouchCapture method has no default implementation. Override OnLostTouchCapture in a derived class to handle the <xref:System.Windows.UIElement3D.LostTouchCapture> event. Be sure to call the base class’s OnLostTouchCapture method so that base classes receive the event.\n  syntax:\n    content: protected virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.TouchEventArgs\n      description: A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnLostTouchCapture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  id: OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnMouseDown(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnMouseDown(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseDown(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event as handled, OnMouseDown is not invoked.  \\n  \\n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.MouseLeftButtonDown> and <xref:System.Windows.UIElement3D.MouseRightButtonDown>. Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> is received.  \\n  \\n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnMouseDown, you are implying that your class handling accounted for all possible mouse button down actions. This behavior might be unwanted. Therefore, use caution when you use this virtual method to mark events as handled.  \\n  \\n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \\n  \\n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnMouseDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. This event data reports details about the mouse button that was pressed and the handled state.\n  overload: System.Windows.UIElement3D.OnMouseDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  id: OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnMouseEnter(MouseEventArgs)\n  nameWithType: UIElement3D.OnMouseEnter(MouseEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseEnter(MouseEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt; attached event is raised on this element. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event, with a direct routing strategy. Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.  \\n  \\n OnMouseEnter is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnMouseEnter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  id: OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnMouseLeave(MouseEventArgs)\n  nameWithType: UIElement3D.OnMouseLeave(MouseEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseLeave(MouseEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt; attached event is raised on this element. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event, with a direct routing strategy. Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.  \\n  \\n OnMouseLeave is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnMouseLeave*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  id: OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnMouseLeftButtonDown(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnMouseLeftButtonDown(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseLeftButtonDown(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.MouseLeftButtonDown\"></xref> routed event is raised on this element. Implement this method to add class handling for this event.\n  remarks: \"The <xref:System.Windows.UIElement3D.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way. <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseLeftButtonDown>. Although you can mark the <xref:System.Windows.UIElement3D.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route. However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.  \\n  \\n The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> and converts it to an appropriate local event. If you want to override this logic, you must create a derived class. In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>. You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnMouseLeftButtonDown.  \\n  \\n Alternatively, you can override this method in order to change event handling for a specific mouse state. Whether you choose to call the base implementation depends on your scenario. Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnMouseLeftButtonDown. For example, you can derive from <xref:System.Windows.Controls.Button> and override OnMouseLeftButtonDown in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.  \\n  \\n OnMouseLeftButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that the left mouse button was pressed.\n  overload: System.Windows.UIElement3D.OnMouseLeftButtonDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  id: OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnMouseLeftButtonUp(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnMouseLeftButtonUp(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseLeftButtonUp(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.MouseLeftButtonUp\"></xref> routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"The <xref:System.Windows.UIElement3D.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way. <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseLeftButtonUp>. Although you can mark the <xref:System.Windows.UIElement3D.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route. However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.  \\n  \\n The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> and converts it to an appropriate local event. If you want to override this logic, you must create a derived class. In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>. You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnMouseLeftButtonUp.  \\n  \\n OnMouseLeftButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that the left mouse button was released.\n  overload: System.Windows.UIElement3D.OnMouseLeftButtonUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  id: OnMouseMove(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnMouseMove(MouseEventArgs)\n  nameWithType: UIElement3D.OnMouseMove(MouseEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseMove(MouseEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnMouseMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnMouseMove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  id: OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnMouseRightButtonDown(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnMouseRightButtonDown(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseRightButtonDown(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.MouseRightButtonDown\"></xref> routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"The <xref:System.Windows.UIElement3D.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way. <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseRightButtonDown>. Although you can mark the <xref:System.Windows.UIElement3D.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route. However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.  \\n  \\n The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> and converts it to an appropriate local event. If you want to override this logic, you must create a derived class. In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>. You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnMouseRightButtonDown.  \\n  \\n Alternatively, you can override this method in order to change event handling for a specific mouse state. Whether you choose to call the base implementation depends on your scenario. Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnMouseRightButtonDown. For example, you can derive from <xref:System.Windows.Controls.Control> and override OnMouseRightButtonDown in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.  \\n  \\n OnMouseRightButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that the right mouse button was pressed.\n  overload: System.Windows.UIElement3D.OnMouseRightButtonDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  id: OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnMouseRightButtonUp(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnMouseRightButtonUp(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseRightButtonUp(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.MouseRightButtonUp\"></xref> routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"The <xref:System.Windows.UIElement3D.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way. <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseRightButtonUp>. Although you can mark the <xref:System.Windows.UIElement3D.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route. However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.  \\n  \\n The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> and converts it to an appropriate local event. If you want to override this logic, you must create a derived class. In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>. You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnMouseRightButtonUp.  \\n  \\n OnMouseRightButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that the right mouse button was released.\n  overload: System.Windows.UIElement3D.OnMouseRightButtonUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  id: OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnMouseUp(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnMouseUp(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseUp(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> event as handled, OnMouseUp is not invoked.  \\n  \\n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.MouseLeftButtonUp> and <xref:System.Windows.UIElement3D.MouseRightButtonUp>. Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> is received.  \\n  \\n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnMouseUp, you are implying that your class handling accounted for all possible mouse button up actions. This behavior might be unwanted. Therefore, use caution when you use this virtual method to mark events as handled.  \\n  \\n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \\n  \\n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnMouseUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that the mouse button was released.\n  overload: System.Windows.UIElement3D.OnMouseUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  id: OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnMouseWheel(MouseWheelEventArgs)\n  nameWithType: UIElement3D.OnMouseWheel(MouseWheelEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseWheel(MouseWheelEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnMouseWheel is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseWheelEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseWheelEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnMouseWheel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewDragEnter(System.Windows.DragEventArgs)\n  id: OnPreviewDragEnter(System.Windows.DragEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewDragEnter(DragEventArgs)\n  nameWithType: UIElement3D.OnPreviewDragEnter(DragEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewDragEnter(DragEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewDragEnter is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DragEventArgs\n      description: The <xref href=\"System.Windows.DragEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewDragEnter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewDragLeave(System.Windows.DragEventArgs)\n  id: OnPreviewDragLeave(System.Windows.DragEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewDragLeave(DragEventArgs)\n  nameWithType: UIElement3D.OnPreviewDragLeave(DragEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewDragLeave(DragEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewDragLeave is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DragEventArgs\n      description: The <xref href=\"System.Windows.DragEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewDragLeave*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewDragOver(System.Windows.DragEventArgs)\n  id: OnPreviewDragOver(System.Windows.DragEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewDragOver(DragEventArgs)\n  nameWithType: UIElement3D.OnPreviewDragOver(DragEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewDragOver(DragEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewDragOver is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DragEventArgs\n      description: The <xref href=\"System.Windows.DragEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewDragOver*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewDrop(System.Windows.DragEventArgs)\n  id: OnPreviewDrop(System.Windows.DragEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewDrop(DragEventArgs)\n  nameWithType: UIElement3D.OnPreviewDrop(DragEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewDrop(DragEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewDrop is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewDrop (System.Windows.DragEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DragEventArgs\n      description: The <xref href=\"System.Windows.DragEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewDrop*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  id: OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewGiveFeedback(GiveFeedbackEventArgs)\n  nameWithType: UIElement3D.OnPreviewGiveFeedback(GiveFeedbackEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewGiveFeedback(GiveFeedbackEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewGiveFeedback is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.GiveFeedbackEventArgs\n      description: The <xref href=\"System.Windows.GiveFeedbackEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewGiveFeedback*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  id: OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)\n  nameWithType: UIElement3D.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewGotKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.KeyboardFocusChangedEventArgs\n      description: The <xref href=\"System.Windows.Input.KeyboardFocusChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewGotKeyboardFocus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  id: OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewKeyDown(KeyEventArgs)\n  nameWithType: UIElement3D.OnPreviewKeyDown(KeyEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewKeyDown(KeyEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewKeyDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.KeyEventArgs\n      description: The <xref href=\"System.Windows.Input.KeyEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewKeyDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  id: OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewKeyUp(KeyEventArgs)\n  nameWithType: UIElement3D.OnPreviewKeyUp(KeyEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewKeyUp(KeyEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewKeyUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.KeyEventArgs\n      description: The <xref href=\"System.Windows.Input.KeyEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewKeyUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  id: OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  nameWithType: UIElement3D.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewLostKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.KeyboardFocusChangedEventArgs\n      description: The <xref href=\"System.Windows.Input.KeyboardFocusChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewLostKeyboardFocus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  id: OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewMouseDown(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnPreviewMouseDown(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewMouseDown(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; attached routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event as handled, OnPreviewMouseDown is not invoked.  \\n  \\n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>. Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> is received.  \\n  \\n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnPreviewMouseDown, you are implying that your class handling accounted for all possible mouse button down actions. This behavior might be unwanted. Therefore, use caution when you use this virtual method to mark events as handled.  \\n  \\n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \\n  \\n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewMouseDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that one or more mouse buttons were pressed.\n  overload: System.Windows.UIElement3D.OnPreviewMouseDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  id: OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.PreviewMouseLeftButtonDown\"></xref> routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"The <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way. <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>. Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route. However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.  \\n  \\n The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> and converts it to an appropriate local event. If you want to override this logic, you must create a derived class. In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>. You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnPreviewMouseLeftButtonDown.  \\n  \\n Alternatively, you can override this method in order to change event handling for a specific mouse state. Whether you choose to call the base implementation depends on your scenario. Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnPreviewMouseLeftButtonDown. For example, you can derive from <xref:System.Windows.Controls.Button> and override OnPreviewMouseLeftButtonDown in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.  \\n  \\n OnPreviewMouseLeftButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that the left mouse button was pressed.\n  overload: System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  id: OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.PreviewMouseLeftButtonUp\"></xref> routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"The <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way. <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>. Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route. However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.  \\n  \\n The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> and converts it to an appropriate local event. If you want to override this logic, you must create a derived class. In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>. You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnPreviewMouseLeftButtonUp.  \\n  \\n OnPreviewMouseLeftButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that the left mouse button was released.\n  overload: System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  id: OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewMouseMove(MouseEventArgs)\n  nameWithType: UIElement3D.OnPreviewMouseMove(MouseEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewMouseMove(MouseEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewMouseMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewMouseMove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  id: OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewMouseRightButtonDown(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.PreviewMouseRightButtonDown\"></xref> routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"The <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way. <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.MouseRightButtonDown>. Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route. However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.  \\n  \\n The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> and converts it to an appropriate local event. If you want to override this logic, you must create a derived class. In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>. You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnPreviewMouseRightButtonDown.  \\n  \\n Alternatively, you can override this method in order to change event handling for a specific mouse state. Whether you choose to call the base implementation depends on your scenario. Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke OnPreviewMouseRightButtonDown. For example, you can derive from <xref:System.Windows.Controls.Control> and override OnPreviewMouseRightButtonDown in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.  \\n  \\n OnPreviewMouseRightButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that the right mouse button was pressed.\n  overload: System.Windows.UIElement3D.OnPreviewMouseRightButtonDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  id: OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewMouseRightButtonUp(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled <xref href=\"System.Windows.UIElement3D.PreviewMouseRightButtonUp\"></xref> routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"The <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way. <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement3D> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>. Although you can mark the <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route. However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.  \\n  \\n The default implementation for general mouse event handling in <xref:System.Windows.UIElement3D> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> and converts it to an appropriate local event. If you want to override this logic, you must create a derived class. In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>. You cannot change the mouse handling behavior of <xref:System.Windows.UIElement3D> by overriding OnPreviewMouseRightButtonUp.  \\n  \\n OnPreviewMouseRightButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that the right mouse button was released.\n  overload: System.Windows.UIElement3D.OnPreviewMouseRightButtonUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  id: OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewMouseUp(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnPreviewMouseUp(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewMouseUp(MouseButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event as handled, OnPreviewMouseUp is not invoked.  \\n  \\n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>. Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> is received.  \\n  \\n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnPreviewMouseUp, you are implying that your class handling accounted for all possible mouse button up actions. This behavior might be unwanted. Therefore, use caution when you use this virtual method to mark events as handled.  \\n  \\n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \\n  \\n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnPreviewMouseUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseButtonEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseButtonEventArgs\"></xref> that contains the event data. The event data reports that one or more mouse buttons were released.\n  overload: System.Windows.UIElement3D.OnPreviewMouseUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  id: OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewMouseWheel(MouseWheelEventArgs)\n  nameWithType: UIElement3D.OnPreviewMouseWheel(MouseWheelEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewMouseWheel(MouseWheelEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewMouseWheel is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.MouseWheelEventArgs\n      description: The <xref href=\"System.Windows.Input.MouseWheelEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewMouseWheel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  id: OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)\n  nameWithType: UIElement3D.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewQueryContinueDrag is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.QueryContinueDragEventArgs\n      description: The <xref href=\"System.Windows.QueryContinueDragEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewQueryContinueDrag*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  id: OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewStylusButtonDown(StylusButtonEventArgs)\n  nameWithType: UIElement3D.OnPreviewStylusButtonDown(StylusButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewStylusButtonDown(StylusButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewStylusButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusButtonEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusButtonEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewStylusButtonDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  id: OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewStylusButtonUp(StylusButtonEventArgs)\n  nameWithType: UIElement3D.OnPreviewStylusButtonUp(StylusButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewStylusButtonUp(StylusButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewStylusButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusButtonEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusButtonEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewStylusButtonUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  id: OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewStylusDown(StylusDownEventArgs)\n  nameWithType: UIElement3D.OnPreviewStylusDown(StylusDownEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewStylusDown(StylusDownEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewStylusDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusDownEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusDownEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewStylusDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  id: OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewStylusInAirMove(StylusEventArgs)\n  nameWithType: UIElement3D.OnPreviewStylusInAirMove(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewStylusInAirMove(StylusEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewStylusInAirMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewStylusInAirMove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  id: OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewStylusInRange(StylusEventArgs)\n  nameWithType: UIElement3D.OnPreviewStylusInRange(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewStylusInRange(StylusEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewStylusInRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewStylusInRange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  id: OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewStylusMove(StylusEventArgs)\n  nameWithType: UIElement3D.OnPreviewStylusMove(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewStylusMove(StylusEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewStylusMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewStylusMove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  id: OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewStylusOutOfRange(StylusEventArgs)\n  nameWithType: UIElement3D.OnPreviewStylusOutOfRange(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewStylusOutOfRange(StylusEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewStylusOutOfRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewStylusOutOfRange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  id: OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)\n  nameWithType: UIElement3D.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewStylusSystemGesture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusSystemGestureEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusSystemGestureEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewStylusSystemGesture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  id: OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewStylusUp(StylusEventArgs)\n  nameWithType: UIElement3D.OnPreviewStylusUp(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewStylusUp(StylusEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewStylusUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewStylusUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  id: OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewTextInput(TextCompositionEventArgs)\n  nameWithType: UIElement3D.OnPreviewTextInput(TextCompositionEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewTextInput(TextCompositionEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \\n  \\n OnPreviewTextInput is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.TextCompositionEventArgs\n      description: The <xref href=\"System.Windows.Input.TextCompositionEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewTextInput*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  id: OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewTouchDown(TouchEventArgs)\n  nameWithType: UIElement3D.OnPreviewTouchDown(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewTouchDown(TouchEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement3D.PreviewTouchDown\"></xref> routed event that occurs when a touch presses this element.\n  remarks: The OnPreviewTouchDown method has no default implementation. Override OnPreviewTouchDown in a derived class to handle the <xref:System.Windows.UIElement3D.PreviewTouchDown> event. Be sure to call the base class’s OnPreviewTouchDown method so that base classes receive the event.\n  syntax:\n    content: protected virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.TouchEventArgs\n      description: A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewTouchDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  id: OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewTouchMove(TouchEventArgs)\n  nameWithType: UIElement3D.OnPreviewTouchMove(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewTouchMove(TouchEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement3D.PreviewTouchMove\"></xref> routed event that occurs when a touch moves while inside this element.\n  remarks: The OnPreviewTouchMove method has no default implementation. Override OnPreviewTouchMove in a derived class to handle the <xref:System.Windows.UIElement3D.PreviewTouchMove> event. Be sure to call the base class’s OnPreviewTouchMove method so that base classes receive the event.\n  syntax:\n    content: protected virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.TouchEventArgs\n      description: A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewTouchMove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  id: OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnPreviewTouchUp(TouchEventArgs)\n  nameWithType: UIElement3D.OnPreviewTouchUp(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewTouchUp(TouchEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement3D.PreviewTouchUp\"></xref> routed event that occurs when a touch is released inside this element.\n  remarks: The OnPreviewTouchUp method has no default implementation. Override OnPreviewTouchUp in a derived class to handle the <xref:System.Windows.UIElement3D.PreviewTouchUp> event. Be sure to call the base class’s OnPreviewTouchUp method so that base classes receive the event.\n  syntax:\n    content: protected virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.TouchEventArgs\n      description: A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnPreviewTouchUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  id: OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnQueryContinueDrag(QueryContinueDragEventArgs)\n  nameWithType: UIElement3D.OnQueryContinueDrag(QueryContinueDragEventArgs)\n  fullName: System.Windows.UIElement3D.OnQueryContinueDrag(QueryContinueDragEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnQueryContinueDrag is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.QueryContinueDragEventArgs\n      description: The <xref href=\"System.Windows.QueryContinueDragEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnQueryContinueDrag*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  id: OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnQueryCursor(QueryCursorEventArgs)\n  nameWithType: UIElement3D.OnQueryCursor(QueryCursorEventArgs)\n  fullName: System.Windows.UIElement3D.OnQueryCursor(QueryCursorEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnQueryCursor is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.QueryCursorEventArgs\n      description: The <xref href=\"System.Windows.Input.QueryCursorEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnQueryCursor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  id: OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnStylusButtonDown(StylusButtonEventArgs)\n  nameWithType: UIElement3D.OnStylusButtonDown(StylusButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusButtonDown(StylusButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnStylusButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusButtonEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusButtonEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnStylusButtonDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  id: OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnStylusButtonUp(StylusButtonEventArgs)\n  nameWithType: UIElement3D.OnStylusButtonUp(StylusButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusButtonUp(StylusButtonEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnStylusButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusButtonEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusButtonEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnStylusButtonUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  id: OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnStylusDown(StylusDownEventArgs)\n  nameWithType: UIElement3D.OnStylusDown(StylusDownEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusDown(StylusDownEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnStylusDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusDownEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusDownEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnStylusDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  id: OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnStylusEnter(StylusEventArgs)\n  nameWithType: UIElement3D.OnStylusEnter(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusEnter(StylusEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt; attached event is raised by this element. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.  \\n  \\n The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.  \\n  \\n OnStylusEnter is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnStylusEnter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  id: OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnStylusInAirMove(StylusEventArgs)\n  nameWithType: UIElement3D.OnStylusInAirMove(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusInAirMove(StylusEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnStylusInAirMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnStylusInAirMove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  id: OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnStylusInRange(StylusEventArgs)\n  nameWithType: UIElement3D.OnStylusInRange(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusInRange(StylusEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnStylusInRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnStylusInRange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  id: OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnStylusLeave(StylusEventArgs)\n  nameWithType: UIElement3D.OnStylusLeave(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusLeave(StylusEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt; attached event is raised by this element. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.  \\n  \\n The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.  \\n  \\n OnStylusLeave is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnStylusLeave*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnStylusMove(System.Windows.Input.StylusEventArgs)\n  id: OnStylusMove(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnStylusMove(StylusEventArgs)\n  nameWithType: UIElement3D.OnStylusMove(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusMove(StylusEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnStylusMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnStylusMove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  id: OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnStylusOutOfRange(StylusEventArgs)\n  nameWithType: UIElement3D.OnStylusOutOfRange(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusOutOfRange(StylusEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnStylusOutOfRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnStylusOutOfRange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  id: OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnStylusSystemGesture(StylusSystemGestureEventArgs)\n  nameWithType: UIElement3D.OnStylusSystemGesture(StylusSystemGestureEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusSystemGesture(StylusSystemGestureEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnStylusSystemGesture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusSystemGestureEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusSystemGestureEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnStylusSystemGesture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnStylusUp(System.Windows.Input.StylusEventArgs)\n  id: OnStylusUp(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnStylusUp(StylusEventArgs)\n  nameWithType: UIElement3D.OnStylusUp(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusUp(StylusEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnStylusUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.StylusEventArgs\n      description: The <xref href=\"System.Windows.Input.StylusEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnStylusUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  id: OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnTextInput(TextCompositionEventArgs)\n  nameWithType: UIElement3D.OnTextInput(TextCompositionEventArgs)\n  fullName: System.Windows.UIElement3D.OnTextInput(TextCompositionEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when an unhandled &lt;xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt; attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \\n  \\n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \\n  \\n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \\n  \\n OnTextInput is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: protected virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.TextCompositionEventArgs\n      description: The <xref href=\"System.Windows.Input.TextCompositionEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnTextInput*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnTouchDown(System.Windows.Input.TouchEventArgs)\n  id: OnTouchDown(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnTouchDown(TouchEventArgs)\n  nameWithType: UIElement3D.OnTouchDown(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnTouchDown(TouchEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement3D.TouchDown\"></xref> routed event that occurs when a touch presses inside this element.\n  remarks: The OnTouchDown method has no default implementation. Override OnTouchDown in a derived class to handle the <xref:System.Windows.UIElement3D.TouchDown> event. Be sure to call the base class’s OnTouchDown method so that base classes receive the event.\n  syntax:\n    content: protected virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.TouchEventArgs\n      description: A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnTouchDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  id: OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnTouchEnter(TouchEventArgs)\n  nameWithType: UIElement3D.OnTouchEnter(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnTouchEnter(TouchEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement3D.TouchEnter\"></xref> routed event that occurs when a touch moves from outside to inside the bounds of this element.\n  remarks: The OnTouchEnter method has no default implementation. Override OnTouchEnter in a derived class to handle the <xref:System.Windows.UIElement3D.TouchEnter> event. Be sure to call the base class’s OnTouchEnter method so that base classes receive the event.\n  syntax:\n    content: protected virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.TouchEventArgs\n      description: A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnTouchEnter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  id: OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnTouchLeave(TouchEventArgs)\n  nameWithType: UIElement3D.OnTouchLeave(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnTouchLeave(TouchEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement3D.TouchLeave\"></xref> routed event that occurs when a touch moves from inside to outside the bounds of this element.\n  remarks: The OnTouchLeave method has no default implementation. Override OnTouchLeave in a derived class to handle the <xref:System.Windows.UIElement3D.TouchLeave> event. Be sure to call the base class’s OnTouchLeave method so that base classes receive the event.\n  syntax:\n    content: protected virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.TouchEventArgs\n      description: A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnTouchLeave*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnTouchMove(System.Windows.Input.TouchEventArgs)\n  id: OnTouchMove(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnTouchMove(TouchEventArgs)\n  nameWithType: UIElement3D.OnTouchMove(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnTouchMove(TouchEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement3D.TouchMove\"></xref> routed event that occurs when a touch moves while inside this element.\n  remarks: The OnTouchMove method has no default implementation. Override OnTouchMove in a derived class to handle the <xref:System.Windows.UIElement3D.TouchMove> event. Be sure to call the base class’s OnTouchMove method so that base classes receive the event.\n  syntax:\n    content: protected virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.TouchEventArgs\n      description: A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnTouchMove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnTouchUp(System.Windows.Input.TouchEventArgs)\n  id: OnTouchUp(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnTouchUp(TouchEventArgs)\n  nameWithType: UIElement3D.OnTouchUp(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnTouchUp(TouchEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Provides class handling for the <xref href=\"System.Windows.UIElement3D.TouchUp\"></xref> routed event that occurs when a touch is released inside this element.\n  remarks: The OnTouchUp method has no default implementation. Override OnTouchUp in a derived class to handle the <xref:System.Windows.UIElement3D.TouchUp> event. Be sure to call the base class’s OnTouchUp method so that base classes receive the event.\n  syntax:\n    content: protected virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Input.TouchEventArgs\n      description: A <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.UIElement3D.OnTouchUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnUpdateModel\n  id: OnUpdateModel\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnUpdateModel()\n  nameWithType: UIElement3D.OnUpdateModel()\n  fullName: System.Windows.UIElement3D.OnUpdateModel()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Participates in rendering operations when overridden in a derived class.\n  remarks: \"When you derive a class from the <xref:System.Windows.UIElement3D> class, you can use this method together with the <xref:System.Windows.UIElement3D.InvalidateModel%2A> method to refresh the model of the element.  \\n  \\n You only need to call this method in advanced scenarios. One such advanced scenario is if the derived class has multiple properties that affect the appearance, and you want to update the underlying model only once. Within the OnUpdateModel method you could update the <xref:System.Windows.Media.Media3D.Visual3D.Visual3DModel%2A> property of the <xref:System.Windows.Media.Media3D.Visual3D> class.  \\n  \\n This method has no default implementation in the <xref:System.Windows.UIElement3D> class.  \\n  \\n OnUpdateModel is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example shows how to derive from the <xref:System.Windows.UIElement3D> class to create a `Sphere` class:  \\n  \\n [!code-cs[Shapes#Sphere](~/add/codesnippet/csharp/Shapes/Sphere.cs#sphere)]\\n [!code-vb[Shapes#Sphere](~/add/codesnippet/visualbasic/shapes/sphere.vb#sphere)]  \\n  \\n For the complete sample, see [UIElement3D Sphere Sample](http://go.microsoft.com/fwlink/?LinkID=160044).\"\n  syntax:\n    content: protected virtual void OnUpdateModel ();\n    parameters: []\n  overload: System.Windows.UIElement3D.OnUpdateModel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)\n  id: OnVisualParentChanged(System.Windows.DependencyObject)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: OnVisualParentChanged(DependencyObject)\n  nameWithType: UIElement3D.OnVisualParentChanged(DependencyObject)\n  fullName: System.Windows.UIElement3D.OnVisualParentChanged(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Invoked when the parent element of this <xref href=\"System.Windows.UIElement3D\"></xref> reports a change to its underlying visual parent.\n  remarks: OnVisualParentChanged is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: protected override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);\n    parameters:\n    - id: oldParent\n      type: System.Windows.DependencyObject\n      description: The previous parent. This may be provided as <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <xref href=\"System.Windows.DependencyObject\"></xref> did not have a parent element previously.\n  overload: System.Windows.UIElement3D.OnVisualParentChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  id: PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PredictFocus(FocusNavigationDirection)\n  nameWithType: UIElement3D.PredictFocus(FocusNavigationDirection)\n  fullName: System.Windows.UIElement3D.PredictFocus(FocusNavigationDirection)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.\n  remarks: \"The default implementation of this method in this class is incomplete, and always returns `null`.  \\n  \\n PredictFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);\n    parameters:\n    - id: direction\n      type: System.Windows.Input.FocusNavigationDirection\n      description: The direction of the requested focus traversal.\n    return:\n      type: System.Windows.DependencyObject\n      description: The element that would have received focus if <xref:System.Windows.UIElement3D.MoveFocus*> were actually invoked.\n  overload: System.Windows.UIElement3D.PredictFocus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewDragEnter\n  id: PreviewDragEnter\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewDragEnter\n  nameWithType: UIElement3D.PreviewDragEnter\n  fullName: System.Windows.UIElement3D.PreviewDragEnter\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the input system reports an underlying drag event with this element as the drag target.\n  remarks: \"This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName> attached event for this class, so that PreviewDragEnter is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewDragEnter event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n PreviewDragEnter is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewDragEnter\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewDragEnterEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.DragEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.DragEnter>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.DragEventHandler PreviewDragEnter;\n    return:\n      type: System.Windows.DragEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewDragEnterEvent\n  id: PreviewDragEnterEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewDragEnterEvent\n  nameWithType: UIElement3D.PreviewDragEnterEvent\n  fullName: System.Windows.UIElement3D.PreviewDragEnterEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewDragEnter\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewDragEnterEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewDragLeave\n  id: PreviewDragLeave\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewDragLeave\n  nameWithType: UIElement3D.PreviewDragLeave\n  fullName: System.Windows.UIElement3D.PreviewDragLeave\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the input system reports an underlying drag event with this element as the drag origin.\n  remarks: \"This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName> attached event for this class, so that PreviewDragLeave is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewDragLeave event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n PreviewDragLeave is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewDragLeave\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewDragLeaveEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.DragEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.DragLeave>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.DragEventHandler PreviewDragLeave;\n    return:\n      type: System.Windows.DragEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewDragLeaveEvent\n  id: PreviewDragLeaveEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewDragLeaveEvent\n  nameWithType: UIElement3D.PreviewDragLeaveEvent\n  fullName: System.Windows.UIElement3D.PreviewDragLeaveEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewDragLeave\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewDragLeaveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewDragOver\n  id: PreviewDragOver\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewDragOver\n  nameWithType: UIElement3D.PreviewDragOver\n  fullName: System.Windows.UIElement3D.PreviewDragOver\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the input system reports an underlying drag event with this element as the potential drop target.\n  remarks: \"This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName> attached event for this class, so that PreviewDragOver is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewDragOver event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n PreviewDragOver is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewDragOver\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewDragOverEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.DragEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.DragOver>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.DragEventHandler PreviewDragOver;\n    return:\n      type: System.Windows.DragEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewDragOverEvent\n  id: PreviewDragOverEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewDragOverEvent\n  nameWithType: UIElement3D.PreviewDragOverEvent\n  fullName: System.Windows.UIElement3D.PreviewDragOverEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewDragOver\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewDragOverEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewDrop\n  id: PreviewDrop\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewDrop\n  nameWithType: UIElement3D.PreviewDrop\n  fullName: System.Windows.UIElement3D.PreviewDrop\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the input system reports an underlying drop event with this element as the drop target.\n  remarks: \"This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName> attached event for this class, so that PreviewDrop is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewDrop event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n PreviewDrop is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewDrop\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewDropEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.DragEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.Drop>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewDrop%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.DragEventHandler PreviewDrop;\n    return:\n      type: System.Windows.DragEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewDropEvent\n  id: PreviewDropEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewDropEvent\n  nameWithType: UIElement3D.PreviewDropEvent\n  fullName: System.Windows.UIElement3D.PreviewDropEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewDrop\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewDropEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewDropEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewGiveFeedback\n  id: PreviewGiveFeedback\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewGiveFeedback\n  nameWithType: UIElement3D.PreviewGiveFeedback\n  fullName: System.Windows.UIElement3D.PreviewGiveFeedback\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when a drag-and-drop operation is started.\n  remarks: \"The PreviewGiveFeedback event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.  \\n  \\n This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName> attached event for this class, so that PreviewGiveFeedback is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewGiveFeedback event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n PreviewGiveFeedback is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewGiveFeedback\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewGiveFeedbackEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.GiveFeedbackEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.GiveFeedback>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;\n    return:\n      type: System.Windows.GiveFeedbackEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewGiveFeedbackEvent\n  id: PreviewGiveFeedbackEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewGiveFeedbackEvent\n  nameWithType: UIElement3D.PreviewGiveFeedbackEvent\n  fullName: System.Windows.UIElement3D.PreviewGiveFeedbackEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewGiveFeedback\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewGiveFeedbackEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewGotKeyboardFocus\n  id: PreviewGotKeyboardFocus\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewGotKeyboardFocus\n  nameWithType: UIElement3D.PreviewGotKeyboardFocus\n  fullName: System.Windows.UIElement3D.PreviewGotKeyboardFocus\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the keyboard is focused on this element.\n  remarks: \"Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName> attached event for this class, so that PreviewGotKeyboardFocus is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewGotKeyboardFocus event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n PreviewGotKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewGotKeyboardFocus\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.GotKeyboardFocus>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;\n    return:\n      type: System.Windows.Input.KeyboardFocusChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent\n  id: PreviewGotKeyboardFocusEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewGotKeyboardFocusEvent\n  nameWithType: UIElement3D.PreviewGotKeyboardFocusEvent\n  fullName: System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewGotKeyboardFocus\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewGotKeyboardFocusEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewKeyDown\n  id: PreviewKeyDown\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewKeyDown\n  nameWithType: UIElement3D.PreviewKeyDown\n  fullName: System.Windows.UIElement3D.PreviewKeyDown\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when a key is pressed while the keyboard is focused on this element.\n  remarks: \"Key handling interacts with other platform features such as commanding and text composition. This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName> attached event for this class, so that PreviewKeyDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewKeyDown event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n PreviewKeyDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewKeyDown\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewKeyDownEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.Input.KeyEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.KeyDown>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.KeyEventHandler PreviewKeyDown;\n    return:\n      type: System.Windows.Input.KeyEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewKeyDownEvent\n  id: PreviewKeyDownEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewKeyDownEvent\n  nameWithType: UIElement3D.PreviewKeyDownEvent\n  fullName: System.Windows.UIElement3D.PreviewKeyDownEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewKeyDown\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewKeyDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewKeyUp\n  id: PreviewKeyUp\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewKeyUp\n  nameWithType: UIElement3D.PreviewKeyUp\n  fullName: System.Windows.UIElement3D.PreviewKeyUp\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when a key is released while the keyboard is focused on this element.\n  remarks: \"Key handling interacts with other platform features such as commanding and text composition.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName> attached event for this class, so that PreviewKeyUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewKeyUp event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n PreviewKeyUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewKeyUp\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewKeyUpEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.Input.KeyEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.KeyUp>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.KeyEventHandler PreviewKeyUp;\n    return:\n      type: System.Windows.Input.KeyEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewKeyUpEvent\n  id: PreviewKeyUpEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewKeyUpEvent\n  nameWithType: UIElement3D.PreviewKeyUpEvent\n  fullName: System.Windows.UIElement3D.PreviewKeyUpEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewKeyUp\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewKeyUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewLostKeyboardFocus\n  id: PreviewLostKeyboardFocus\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewLostKeyboardFocus\n  nameWithType: UIElement3D.PreviewLostKeyboardFocus\n  fullName: System.Windows.UIElement3D.PreviewLostKeyboardFocus\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the keyboard is no longer focused on this element.\n  remarks: \"Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached. Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName> attached event for this class, so that PreviewLostKeyboardFocus is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewLostKeyboardFocus event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n PreviewLostKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewLostKeyboardFocus\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.LostKeyboardFocus>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;\n    return:\n      type: System.Windows.Input.KeyboardFocusChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent\n  id: PreviewLostKeyboardFocusEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewLostKeyboardFocusEvent\n  nameWithType: UIElement3D.PreviewLostKeyboardFocusEvent\n  fullName: System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewLostKeyboardFocus\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewLostKeyboardFocusEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewMouseDown\n  id: PreviewMouseDown\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewMouseDown\n  nameWithType: UIElement3D.PreviewMouseDown\n  fullName: System.Windows.UIElement3D.PreviewMouseDown\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when any mouse button is pressed while the pointer is over this element.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> attached event for this class, so that PreviewMouseDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewMouseDown event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n The PreviewMouseDown event is often raised together with either <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons. <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event reaches this element along the event route. See Remarks for <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>.  \\n  \\n PreviewMouseDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewMouseDown\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseDownEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseDown>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;\n    return:\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewMouseDownEvent\n  id: PreviewMouseDownEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewMouseDownEvent\n  nameWithType: UIElement3D.PreviewMouseDownEvent\n  fullName: System.Windows.UIElement3D.PreviewMouseDownEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewMouseDown\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewMouseDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonDown\n  id: PreviewMouseLeftButtonDown\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewMouseLeftButtonDown\n  nameWithType: UIElement3D.PreviewMouseLeftButtonDown\n  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonDown\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the left mouse button is pressed while the mouse pointer is over this element.\n  remarks: \"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.  \\n  \\n This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route.  \\n  \\n The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event. If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event. If you mark PreviewMouseLeftButtonDown handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> handled for all further listeners along the route, and on all related events. This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.  \\n  \\n Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \\\"service\\\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class). The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data. For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.  \\n  \\n PreviewMouseLeftButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewMouseLeftButtonDown\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;\n    return:\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent\n  id: PreviewMouseLeftButtonDownEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewMouseLeftButtonDownEvent\n  nameWithType: UIElement3D.PreviewMouseLeftButtonDownEvent\n  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewMouseLeftButtonDown\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewMouseLeftButtonDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonUp\n  id: PreviewMouseLeftButtonUp\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewMouseLeftButtonUp\n  nameWithType: UIElement3D.PreviewMouseLeftButtonUp\n  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonUp\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the left mouse button is released while the mouse pointer is over this element.\n  remarks: \"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.  \\n  \\n This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route.  \\n  \\n The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event. If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event. If you mark PreviewMouseLeftButtonUp handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> handled for all further listeners along the route, and on all related events.  \\n  \\n Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \\\"service\\\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class). The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data. For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.  \\n  \\n PreviewMouseLeftButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewMouseLeftButtonUp\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;\n    return:\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent\n  id: PreviewMouseLeftButtonUpEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewMouseLeftButtonUpEvent\n  nameWithType: UIElement3D.PreviewMouseLeftButtonUpEvent\n  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewMouseLeftButtonUp\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewMouseLeftButtonUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewMouseMove\n  id: PreviewMouseMove\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewMouseMove\n  nameWithType: UIElement3D.PreviewMouseMove\n  fullName: System.Windows.UIElement3D.PreviewMouseMove\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the mouse pointer moves while the mouse pointer is over this element.\n  remarks: \"This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName> attached event for this class, so that PreviewMouseMove is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewMouseMove event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n PreviewMouseMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewMouseMove\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseMoveEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.Input.MouseEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseMove>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseEventHandler PreviewMouseMove;\n    return:\n      type: System.Windows.Input.MouseEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewMouseMoveEvent\n  id: PreviewMouseMoveEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewMouseMoveEvent\n  nameWithType: UIElement3D.PreviewMouseMoveEvent\n  fullName: System.Windows.UIElement3D.PreviewMouseMoveEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewMouseMove\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewMouseMoveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewMouseRightButtonDown\n  id: PreviewMouseRightButtonDown\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewMouseRightButtonDown\n  nameWithType: UIElement3D.PreviewMouseRightButtonDown\n  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonDown\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the right mouse button is pressed while the mouse pointer is over this element.\n  remarks: \"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.  \\n  \\n This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route.  \\n  \\n The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event. If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event. If you mark PreviewMouseRightButtonDown handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> handled for all further listeners along the route, and on all related events. This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.  \\n  \\n Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \\\"service\\\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class). The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data. For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.  \\n  \\n PreviewMouseRightButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewMouseRightButtonDown\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;\n    return:\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent\n  id: PreviewMouseRightButtonDownEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewMouseRightButtonDownEvent\n  nameWithType: UIElement3D.PreviewMouseRightButtonDownEvent\n  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewMouseRightButtonDown\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewMouseRightButtonDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewMouseRightButtonUp\n  id: PreviewMouseRightButtonUp\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewMouseRightButtonUp\n  nameWithType: UIElement3D.PreviewMouseRightButtonUp\n  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonUp\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the right mouse button is released while the mouse pointer is over this element.\n  remarks: \"Although this [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement3D>.  \\n  \\n This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event, which is an attached event that is processed by each element along an event route.  \\n  \\n The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event. If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement3D.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event. If you mark PreviewMouseRightButtonUp handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> handled for all further listeners along the route, and on all related events.  \\n  \\n Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement3D>) to be a mouse \\\"service\\\" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class). The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data. For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement3D>.  \\n  \\n PreviewMouseRightButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewMouseRightButtonUp\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;\n    return:\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent\n  id: PreviewMouseRightButtonUpEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewMouseRightButtonUpEvent\n  nameWithType: UIElement3D.PreviewMouseRightButtonUpEvent\n  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewMouseRightButtonUp\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewMouseRightButtonUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewMouseUp\n  id: PreviewMouseUp\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewMouseUp\n  nameWithType: UIElement3D.PreviewMouseUp\n  fullName: System.Windows.UIElement3D.PreviewMouseUp\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when any mouse button is released while the mouse pointer is over this element.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> attached event for this class, so that PreviewMouseUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewMouseUp event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n The PreviewMouseUp event is often raised together with either <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons. <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event reaches this element along the event route. See Remarks for <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>.  \\n  \\n PreviewMouseUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewMouseUp\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseUpEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseUp>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;\n    return:\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewMouseUpEvent\n  id: PreviewMouseUpEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewMouseUpEvent\n  nameWithType: UIElement3D.PreviewMouseUpEvent\n  fullName: System.Windows.UIElement3D.PreviewMouseUpEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewMouseUp\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewMouseUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewMouseWheel\n  id: PreviewMouseWheel\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewMouseWheel\n  nameWithType: UIElement3D.PreviewMouseWheel\n  fullName: System.Windows.UIElement3D.PreviewMouseWheel\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.\n  remarks: \"Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n PreviewMouseWheel is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewMouseWheel\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewMouseWheelEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.Input.MouseWheelEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.MouseWheel>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;\n    return:\n      type: System.Windows.Input.MouseWheelEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewMouseWheelEvent\n  id: PreviewMouseWheelEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewMouseWheelEvent\n  nameWithType: UIElement3D.PreviewMouseWheelEvent\n  fullName: System.Windows.UIElement3D.PreviewMouseWheelEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewMouseWheel\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewMouseWheelEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewQueryContinueDrag\n  id: PreviewQueryContinueDrag\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewQueryContinueDrag\n  nameWithType: UIElement3D.PreviewQueryContinueDrag\n  fullName: System.Windows.UIElement3D.PreviewQueryContinueDrag\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.\n  remarks: \"The PreviewQueryContinueDrag event enables the drag source to declare whether the drag-and-drop operation should be canceled.  \\n  \\n This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName> attached event for this class, so that PreviewQueryContinueDrag is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewQueryContinueDrag event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n PreviewQueryContinueDrag is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewQueryContinueDrag\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewQueryContinueDragEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.QueryContinueDragEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.QueryContinueDrag>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;\n    return:\n      type: System.Windows.QueryContinueDragEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewQueryContinueDragEvent\n  id: PreviewQueryContinueDragEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewQueryContinueDragEvent\n  nameWithType: UIElement3D.PreviewQueryContinueDragEvent\n  fullName: System.Windows.UIElement3D.PreviewQueryContinueDragEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewQueryContinueDrag\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewQueryContinueDragEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewStylusButtonDown\n  id: PreviewStylusButtonDown\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewStylusButtonDown\n  nameWithType: UIElement3D.PreviewStylusButtonDown\n  fullName: System.Windows.UIElement3D.PreviewStylusButtonDown\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the stylus button is pressed while the pointer is over this element.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName> attached event for this class, so that PreviewStylusButtonDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewStylusButtonDown event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n PreviewStylusButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewStylusButtonDown\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusButtonDownEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusButtonDown>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;\n    return:\n      type: System.Windows.Input.StylusButtonEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewStylusButtonDownEvent\n  id: PreviewStylusButtonDownEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewStylusButtonDownEvent\n  nameWithType: UIElement3D.PreviewStylusButtonDownEvent\n  fullName: System.Windows.UIElement3D.PreviewStylusButtonDownEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewStylusButtonDown\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewStylusButtonDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewStylusButtonUp\n  id: PreviewStylusButtonUp\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewStylusButtonUp\n  nameWithType: UIElement3D.PreviewStylusButtonUp\n  fullName: System.Windows.UIElement3D.PreviewStylusButtonUp\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the stylus button is released while the pointer is over this element.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName> attached event for this class, so that PreviewStylusButtonUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewStylusButtonUp event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n PreviewStylusButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewStylusButtonUp\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusButtonUpEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusButtonUp>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;\n    return:\n      type: System.Windows.Input.StylusButtonEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewStylusButtonUpEvent\n  id: PreviewStylusButtonUpEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewStylusButtonUpEvent\n  nameWithType: UIElement3D.PreviewStylusButtonUpEvent\n  fullName: System.Windows.UIElement3D.PreviewStylusButtonUpEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewStylusButtonUp\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewStylusButtonUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewStylusDown\n  id: PreviewStylusDown\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewStylusDown\n  nameWithType: UIElement3D.PreviewStylusDown\n  fullName: System.Windows.UIElement3D.PreviewStylusDown\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the stylus touches the digitizer while it is over this element.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName> attached event for this class, so that PreviewStylusDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewStylusDown event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n PreviewStylusDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewStylusDown\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusDownEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.Input.StylusDownEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusDown>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;\n    return:\n      type: System.Windows.Input.StylusDownEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewStylusDownEvent\n  id: PreviewStylusDownEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewStylusDownEvent\n  nameWithType: UIElement3D.PreviewStylusDownEvent\n  fullName: System.Windows.UIElement3D.PreviewStylusDownEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewStylusDown\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewStylusDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewStylusInAirMove\n  id: PreviewStylusInAirMove\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewStylusInAirMove\n  nameWithType: UIElement3D.PreviewStylusInAirMove\n  fullName: System.Windows.UIElement3D.PreviewStylusInAirMove\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the stylus moves over an element without actually touching the digitizer.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName> attached event for this class, so that PreviewStylusInAirMove is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewStylusInAirMove event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n PreviewStylusInAirMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewStylusInAirMove\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusInAirMove>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;\n    return:\n      type: System.Windows.Input.StylusEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewStylusInAirMoveEvent\n  id: PreviewStylusInAirMoveEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewStylusInAirMoveEvent\n  nameWithType: UIElement3D.PreviewStylusInAirMoveEvent\n  fullName: System.Windows.UIElement3D.PreviewStylusInAirMoveEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewStylusInAirMove\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewStylusInAirMoveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewStylusInRange\n  id: PreviewStylusInRange\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewStylusInRange\n  nameWithType: UIElement3D.PreviewStylusInRange\n  fullName: System.Windows.UIElement3D.PreviewStylusInRange\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the stylus is close enough to the digitizer to be detected, while over this element.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName> attached event for this class, so that PreviewStylusInRange is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewStylusInRange event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n PreviewStylusInRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewStylusInRange\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusInRangeEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusInRange>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;\n    return:\n      type: System.Windows.Input.StylusEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewStylusInRangeEvent\n  id: PreviewStylusInRangeEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewStylusInRangeEvent\n  nameWithType: UIElement3D.PreviewStylusInRangeEvent\n  fullName: System.Windows.UIElement3D.PreviewStylusInRangeEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewStylusInRange\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewStylusInRangeEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewStylusMove\n  id: PreviewStylusMove\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewStylusMove\n  nameWithType: UIElement3D.PreviewStylusMove\n  fullName: System.Windows.UIElement3D.PreviewStylusMove\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the stylus moves while over the element. The stylus must move while being detected by the digitizer to raise this event, otherwise, <xref href=\"System.Windows.UIElement3D.PreviewStylusInAirMove\"></xref> is raised instead.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName> attached event for this class, so that PreviewStylusMove is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewStylusMove event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n PreviewStylusMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewStylusMove\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusMoveEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusMove>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusEventHandler PreviewStylusMove;\n    return:\n      type: System.Windows.Input.StylusEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewStylusMoveEvent\n  id: PreviewStylusMoveEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewStylusMoveEvent\n  nameWithType: UIElement3D.PreviewStylusMoveEvent\n  fullName: System.Windows.UIElement3D.PreviewStylusMoveEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewStylusMove\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewStylusMoveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewStylusOutOfRange\n  id: PreviewStylusOutOfRange\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewStylusOutOfRange\n  nameWithType: UIElement3D.PreviewStylusOutOfRange\n  fullName: System.Windows.UIElement3D.PreviewStylusOutOfRange\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the stylus is too far from the digitizer to be detected.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName> attached event for this class, so that PreviewStylusOutOfRange is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewStylusOutOfRange event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n PreviewStylusOutOfRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewStylusOutOfRange\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusOutOfRange>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;\n    return:\n      type: System.Windows.Input.StylusEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent\n  id: PreviewStylusOutOfRangeEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewStylusOutOfRangeEvent\n  nameWithType: UIElement3D.PreviewStylusOutOfRangeEvent\n  fullName: System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewStylusOutOfRange\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewStylusOutOfRangeEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewStylusSystemGesture\n  id: PreviewStylusSystemGesture\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewStylusSystemGesture\n  nameWithType: UIElement3D.PreviewStylusSystemGesture\n  fullName: System.Windows.UIElement3D.PreviewStylusSystemGesture\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when a user performs one of several stylus gestures.\n  remarks: \"For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName> attached event for this class, so that PreviewStylusSystemGesture is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewStylusSystemGesture event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n PreviewStylusSystemGesture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewStylusSystemGesture\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusSystemGesture>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;\n    return:\n      type: System.Windows.Input.StylusSystemGestureEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewStylusSystemGestureEvent\n  id: PreviewStylusSystemGestureEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewStylusSystemGestureEvent\n  nameWithType: UIElement3D.PreviewStylusSystemGestureEvent\n  fullName: System.Windows.UIElement3D.PreviewStylusSystemGestureEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewStylusSystemGesture\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewStylusSystemGestureEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewStylusUp\n  id: PreviewStylusUp\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewStylusUp\n  nameWithType: UIElement3D.PreviewStylusUp\n  fullName: System.Windows.UIElement3D.PreviewStylusUp\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the user raises the stylus off the digitizer while the stylus is over this element.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName> attached event for this class, so that <xref:System.Windows.UIElement3D.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the <xref:System.Windows.UIElement3D.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n PreviewStylusUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewStylusUp\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewStylusUpEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.StylusUp>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusEventHandler PreviewStylusUp;\n    return:\n      type: System.Windows.Input.StylusEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewStylusUpEvent\n  id: PreviewStylusUpEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewStylusUpEvent\n  nameWithType: UIElement3D.PreviewStylusUpEvent\n  fullName: System.Windows.UIElement3D.PreviewStylusUpEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewStylusUp\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewStylusUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewTextInput\n  id: PreviewTextInput\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewTextInput\n  nameWithType: UIElement3D.PreviewTextInput\n  fullName: System.Windows.UIElement3D.PreviewTextInput\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when this element gets text in a device-independent manner.\n  remarks: \"The PreviewTextInput event allows a component or application to listen for text input in a device-independent manner. The keyboard is the primary means of PreviewTextInput; but speech, handwriting, and other input devices can also generate PreviewTextInput.  \\n  \\n Because of key combinations—either in default keyboards or through input method editors—multiple key events may raise just one text input event.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName> attached event for this class, so that PreviewTextInput is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the PreviewTextInput event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n PreviewTextInput is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_PreviewTextInput\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewTextInputEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.Windows.Input.TextCompositionEventHandler>|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.TextInput>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;\n    return:\n      type: System.Windows.Input.TextCompositionEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewTextInputEvent\n  id: PreviewTextInputEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewTextInputEvent\n  nameWithType: UIElement3D.PreviewTextInputEvent\n  fullName: System.Windows.UIElement3D.PreviewTextInputEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewTextInput\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n PreviewTextInputEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewTouchDown\n  id: PreviewTouchDown\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewTouchDown\n  nameWithType: UIElement3D.PreviewTouchDown\n  fullName: System.Windows.UIElement3D.PreviewTouchDown\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when a finger touches the screen while the finger is over this element.\n  remarks: \"By default, the PreviewTouchDown and <xref:System.Windows.UIElement3D.TouchDown> events do not occur until a finger touches the screen and moves. Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>. The press and hold behavior is equivalent to a mouse right-click.  \\n  \\n To cause the PreviewTouchDown and <xref:System.Windows.UIElement3D.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName> attached property to `false` for this element.  \\n  \\n<a name=\\\"routedEventInfo_PreviewTouchDown\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewTouchDownEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.TouchDown>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event EventHandler<System.Windows.Input.TouchEventArgs> PreviewTouchDown;\n    return:\n      type: System.EventHandler{System.Windows.Input.TouchEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewTouchDownEvent\n  id: PreviewTouchDownEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewTouchDownEvent\n  nameWithType: UIElement3D.PreviewTouchDownEvent\n  fullName: System.Windows.UIElement3D.PreviewTouchDownEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewTouchDown\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewTouchMove\n  id: PreviewTouchMove\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewTouchMove\n  nameWithType: UIElement3D.PreviewTouchMove\n  fullName: System.Windows.UIElement3D.PreviewTouchMove\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when a finger moves on the screen while the finger is over this element.\n  remarks: \"<a name=\\\"routedEventInfo_PreviewTouchMove\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewTouchMoveEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.TouchMove>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event EventHandler<System.Windows.Input.TouchEventArgs> PreviewTouchMove;\n    return:\n      type: System.EventHandler{System.Windows.Input.TouchEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewTouchMoveEvent\n  id: PreviewTouchMoveEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewTouchMoveEvent\n  nameWithType: UIElement3D.PreviewTouchMoveEvent\n  fullName: System.Windows.UIElement3D.PreviewTouchMoveEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewTouchMove\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewTouchUp\n  id: PreviewTouchUp\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewTouchUp\n  nameWithType: UIElement3D.PreviewTouchUp\n  fullName: System.Windows.UIElement3D.PreviewTouchUp\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when a finger is raised off of the screen while the finger is over this element.\n  remarks: \"<a name=\\\"routedEventInfo_PreviewTouchUp\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.PreviewTouchUpEvent>|  \\n|Routing strategy|Tunneling|  \\n|Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|  \\n  \\n-   The corresponding bubbling event is <xref:System.Windows.UIElement3D.TouchUp>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event EventHandler<System.Windows.Input.TouchEventArgs> PreviewTouchUp;\n    return:\n      type: System.EventHandler{System.Windows.Input.TouchEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.PreviewTouchUpEvent\n  id: PreviewTouchUpEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: PreviewTouchUpEvent\n  nameWithType: UIElement3D.PreviewTouchUpEvent\n  fullName: System.Windows.UIElement3D.PreviewTouchUpEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.PreviewTouchUp\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.QueryContinueDrag\n  id: QueryContinueDrag\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: QueryContinueDrag\n  nameWithType: UIElement3D.QueryContinueDrag\n  fullName: System.Windows.UIElement3D.QueryContinueDrag\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.\n  remarks: \"The QueryContinueDrag event enables the drag source to determine whether the drag-and-drop operation should be canceled.  \\n  \\n This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName> attached event for this class, so that QueryContinueDrag is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the QueryContinueDrag event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n QueryContinueDrag is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_QueryContinueDrag\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.QueryContinueDragEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.QueryContinueDragEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;\n    return:\n      type: System.Windows.QueryContinueDragEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.QueryContinueDragEvent\n  id: QueryContinueDragEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: QueryContinueDragEvent\n  nameWithType: UIElement3D.QueryContinueDragEvent\n  fullName: System.Windows.UIElement3D.QueryContinueDragEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.QueryContinueDrag\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n QueryContinueDragEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.QueryCursor\n  id: QueryCursor\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: QueryCursor\n  nameWithType: UIElement3D.QueryCursor\n  fullName: System.Windows.UIElement3D.QueryCursor\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the cursor is requested to display. This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName> attached event for this class, so that QueryCursor is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the QueryCursor event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point). Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in [!INCLUDE[TLA2#tla_win](~/add/includes/tla2sharptla-win-md.md)] programming. That object is represented by the <xref:System.Windows.Input.Cursor> class in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]. The [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] input system enables you to change this cursor when it represents the onscreen position of the mouse pointer. You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.  \\n  \\n Listening for the QueryCursor event is not an efficient technique for cursor management. Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>. You should only rely on QueryCursor if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs. For more information on implementing cursor behavior in response to QueryCursor, see <xref:System.Windows.Input.QueryCursorEventHandler>.  \\n  \\n QueryCursor is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_QueryCursor\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.QueryCursorEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.QueryCursorEventHandler>|  \\n  \\n-   There is no defined corresponding tunneling event.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnQueryCursor%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.QueryCursorEventHandler QueryCursor;\n    return:\n      type: System.Windows.Input.QueryCursorEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.QueryCursorEvent\n  id: QueryCursorEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: QueryCursorEvent\n  nameWithType: UIElement3D.QueryCursorEvent\n  fullName: System.Windows.UIElement3D.QueryCursorEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.QueryCursor\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n QueryCursorEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent QueryCursorEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.RaiseEvent(System.Windows.RoutedEventArgs)\n  id: RaiseEvent(System.Windows.RoutedEventArgs)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: RaiseEvent(RoutedEventArgs)\n  nameWithType: UIElement3D.RaiseEvent(RoutedEventArgs)\n  fullName: System.Windows.UIElement3D.RaiseEvent(RoutedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Raises a specific routed event. The <xref href=\"System.Windows.RoutedEvent\"></xref> to be raised is identified within the <xref href=\"System.Windows.RoutedEventArgs\"></xref> instance that is provided (as the <xref:System.Windows.RoutedEventArgs.RoutedEvent*> property of that event data).\n  remarks: \"The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.  \\n  \\n <xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise. This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.  \\n  \\n RaiseEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public void RaiseEvent (System.Windows.RoutedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.RoutedEventArgs\n      description: A <xref href=\"System.Windows.RoutedEventArgs\"></xref> that contains the event data and also identifies the event to raise.\n  overload: System.Windows.UIElement3D.RaiseEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.ReleaseAllTouchCaptures\n  id: ReleaseAllTouchCaptures\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: ReleaseAllTouchCaptures()\n  nameWithType: UIElement3D.ReleaseAllTouchCaptures()\n  fullName: System.Windows.UIElement3D.ReleaseAllTouchCaptures()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Releases all captured touch devices from this element.\n  syntax:\n    content: public void ReleaseAllTouchCaptures ();\n    parameters: []\n  overload: System.Windows.UIElement3D.ReleaseAllTouchCaptures*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.ReleaseMouseCapture\n  id: ReleaseMouseCapture\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: ReleaseMouseCapture()\n  nameWithType: UIElement3D.ReleaseMouseCapture()\n  fullName: System.Windows.UIElement3D.ReleaseMouseCapture()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Releases the mouse capture, if this element held the capture.\n  remarks: \"If this element did not hold the capture, calling this method has no effect. Consider checking the value of <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> before you call this method.  \\n  \\n ReleaseMouseCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public void ReleaseMouseCapture ();\n    parameters: []\n  overload: System.Windows.UIElement3D.ReleaseMouseCapture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.ReleaseStylusCapture\n  id: ReleaseStylusCapture\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: ReleaseStylusCapture()\n  nameWithType: UIElement3D.ReleaseStylusCapture()\n  fullName: System.Windows.UIElement3D.ReleaseStylusCapture()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Releases the stylus device capture, if this element held the capture.\n  remarks: \"If this element did not hold the capture, calling this method has no effect. Consider checking the value of <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> before you call this method.  \\n  \\n ReleaseStylusCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public void ReleaseStylusCapture ();\n    parameters: []\n  overload: System.Windows.UIElement3D.ReleaseStylusCapture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  id: ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: ReleaseTouchCapture(TouchDevice)\n  nameWithType: UIElement3D.ReleaseTouchCapture(TouchDevice)\n  fullName: System.Windows.UIElement3D.ReleaseTouchCapture(TouchDevice)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Attempts to release the specified touch device from this element.\n  syntax:\n    content: public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);\n    parameters:\n    - id: touchDevice\n      type: System.Windows.Input.TouchDevice\n      description: The device to release.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the touch device is released; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.ReleaseTouchCapture*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>touchDevice</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  id: RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: RemoveHandler(RoutedEvent,Delegate)\n  nameWithType: UIElement3D.RemoveHandler(RoutedEvent,Delegate)\n  fullName: System.Windows.UIElement3D.RemoveHandler(RoutedEvent,Delegate)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Removes the specified routed event handler from this element.\n  remarks: \"The most common scenario for using this [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)] is when you implement the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] \\\"wrapper\\\" event that is associated with a custom routed event, specifically when you implement the \\\"remove\\\" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] level.  \\n  \\n Calling this method has no effect if there were no handlers registered with criteria that match the input parameters for the method call.  \\n  \\n If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed. This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.  \\n  \\n Neither `routedEvent` nor `handler` may be `null`. Attempting to provide either value as `null` will raise an exception.  \\n  \\n This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events. Either type of handler is removed.  \\n  \\n RemoveHandler is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);\n    parameters:\n    - id: routedEvent\n      type: System.Windows.RoutedEvent\n      description: The identifier of the routed event for which the handler is attached.\n    - id: handler\n      type: System.Delegate\n      description: The specific handler implementation to remove from the event handler collection on this element.\n  overload: System.Windows.UIElement3D.RemoveHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.ShouldSerializeCommandBindings\n  id: ShouldSerializeCommandBindings\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: ShouldSerializeCommandBindings()\n  nameWithType: UIElement3D.ShouldSerializeCommandBindings()\n  fullName: System.Windows.UIElement3D.ShouldSerializeCommandBindings()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Returns whether serialization processes should serialize the contents of the <xref:System.Windows.UIElement3D.CommandBindings*> property on instances of this class.\n  remarks: \"This will return `true` if <xref:System.Windows.UIElement3D.CommandBindings%2A> is locally set.  \\n  \\n This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement3D.CommandBindings%2A> property does not have a simple default value. This method indicates whether the property has changed from its default value. You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement3D>.  \\n  \\n For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/add/includes/ajax-current-ext-md.md).  \\n  \\n ShouldSerializeCommandBindings is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public bool ShouldSerializeCommandBindings ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.UIElement3D.CommandBindings*> property value should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.ShouldSerializeCommandBindings*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.ShouldSerializeInputBindings\n  id: ShouldSerializeInputBindings\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: ShouldSerializeInputBindings()\n  nameWithType: UIElement3D.ShouldSerializeInputBindings()\n  fullName: System.Windows.UIElement3D.ShouldSerializeInputBindings()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Returns whether serialization processes should serialize the contents of the <xref:System.Windows.UIElement3D.InputBindings*> property on instances of this class.\n  remarks: \"This will return `true` if <xref:System.Windows.UIElement3D.InputBindings%2A> is locally set.  \\n  \\n This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement3D.InputBindings%2A> property does not have a simple default value. This method indicates whether the property has changed from its default value. You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement3D>.  \\n  \\n For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/add/includes/ajax-current-ext-md.md).  \\n  \\n ShouldSerializeInputBindings is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public bool ShouldSerializeInputBindings ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.UIElement3D.InputBindings*> property value should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.UIElement3D.ShouldSerializeInputBindings*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusButtonDown\n  id: StylusButtonDown\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusButtonDown\n  nameWithType: UIElement3D.StylusButtonDown\n  fullName: System.Windows.UIElement3D.StylusButtonDown\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the stylus button is pressed while the pointer is over this element.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName> attached event for this class, so that StylusButtonDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusButtonDown event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n StylusButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_StylusButtonDown\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.StylusButtonDownEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusButtonDown>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;\n    return:\n      type: System.Windows.Input.StylusButtonEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusButtonDownEvent\n  id: StylusButtonDownEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusButtonDownEvent\n  nameWithType: UIElement3D.StylusButtonDownEvent\n  fullName: System.Windows.UIElement3D.StylusButtonDownEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.StylusButtonDown\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n StylusButtonDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusButtonUp\n  id: StylusButtonUp\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusButtonUp\n  nameWithType: UIElement3D.StylusButtonUp\n  fullName: System.Windows.UIElement3D.StylusButtonUp\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the stylus button is released while the pointer is over this element.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName> attached event for this class, so that StylusButtonUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusButtonUp event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n StylusButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_StylusButtonUp\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.StylusButtonUpEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusButtonUp>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;\n    return:\n      type: System.Windows.Input.StylusButtonEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusButtonUpEvent\n  id: StylusButtonUpEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusButtonUpEvent\n  nameWithType: UIElement3D.StylusButtonUpEvent\n  fullName: System.Windows.UIElement3D.StylusButtonUpEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.StylusButtonUp\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n StylusButtonUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusDown\n  id: StylusDown\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusDown\n  nameWithType: UIElement3D.StylusDown\n  fullName: System.Windows.UIElement3D.StylusDown\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the stylus touches the digitizer while the stylus is over this element.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName> attached event for this class, so that StylusDown is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusDown event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n StylusDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_StylusDown\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.StylusDownEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.StylusDownEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusDown>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnStylusDown%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusDownEventHandler StylusDown;\n    return:\n      type: System.Windows.Input.StylusDownEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusDownEvent\n  id: StylusDownEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusDownEvent\n  nameWithType: UIElement3D.StylusDownEvent\n  fullName: System.Windows.UIElement3D.StylusDownEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.StylusDown\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n StylusDownEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent StylusDownEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusEnter\n  id: StylusEnter\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusEnter\n  nameWithType: UIElement3D.StylusEnter\n  fullName: System.Windows.UIElement3D.StylusEnter\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the stylus enters the bounds of this element.\n  remarks: \"StylusEnter is a [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) that uses the direct event handling routing strategy. Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised. However, they do enable other aspects of routed event behavior, such as event triggers in styles.  \\n  \\n Although StylusEnter tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsStylusOver%2A> property value has changed from `false` to `true` on this element.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName> attached event for this class, so that StylusEnter is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusEnter event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n StylusEnter is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_StylusEnter\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.StylusEnterEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnStylusEnter%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusEventHandler StylusEnter;\n    return:\n      type: System.Windows.Input.StylusEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusEnterEvent\n  id: StylusEnterEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusEnterEvent\n  nameWithType: UIElement3D.StylusEnterEvent\n  fullName: System.Windows.UIElement3D.StylusEnterEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.StylusEnter\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n StylusEnterEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent StylusEnterEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusInAirMove\n  id: StylusInAirMove\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusInAirMove\n  nameWithType: UIElement3D.StylusInAirMove\n  fullName: System.Windows.UIElement3D.StylusInAirMove\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the stylus moves over an element without actually touching the digitizer.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName> attached event for this class, so that StylusInAirMove is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusInAirMove event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n StylusInAirMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_StylusInAirMove\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.StylusInAirMoveEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusInAirMove>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusEventHandler StylusInAirMove;\n    return:\n      type: System.Windows.Input.StylusEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusInAirMoveEvent\n  id: StylusInAirMoveEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusInAirMoveEvent\n  nameWithType: UIElement3D.StylusInAirMoveEvent\n  fullName: System.Windows.UIElement3D.StylusInAirMoveEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.StylusInAirMove\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n StylusInAirMoveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusInRange\n  id: StylusInRange\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusInRange\n  nameWithType: UIElement3D.StylusInRange\n  fullName: System.Windows.UIElement3D.StylusInRange\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the stylus is close enough to the digitizer to be detected, while over this element.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName> attached event for this class, so that StylusInRange is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusInRange event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n StylusInRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_StylusInRange\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.StylusInRangeEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusInRange>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnStylusInRange%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusEventHandler StylusInRange;\n    return:\n      type: System.Windows.Input.StylusEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusInRangeEvent\n  id: StylusInRangeEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusInRangeEvent\n  nameWithType: UIElement3D.StylusInRangeEvent\n  fullName: System.Windows.UIElement3D.StylusInRangeEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.StylusInRange\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n StylusInRangeEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent StylusInRangeEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusLeave\n  id: StylusLeave\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusLeave\n  nameWithType: UIElement3D.StylusLeave\n  fullName: System.Windows.UIElement3D.StylusLeave\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the stylus leaves the bounds of the element.\n  remarks: \"StylusLeave is a [Routed Events Overview](~/add/includes/ajax-current-ext-md.md) that uses the direct event handling routing strategy. Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised. However, they do enable other aspects of routed event behavior, such as event triggers in styles.  \\n  \\n Although StylusLeave tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement3D.IsStylusOver%2A> property value has changed from `true` to `false` on this element.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName> attached event for this class, so that StylusLeave is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusLeave event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n StylusLeave is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_StylusLeave\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.StylusLeaveEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnStylusLeave%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusEventHandler StylusLeave;\n    return:\n      type: System.Windows.Input.StylusEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusLeaveEvent\n  id: StylusLeaveEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusLeaveEvent\n  nameWithType: UIElement3D.StylusLeaveEvent\n  fullName: System.Windows.UIElement3D.StylusLeaveEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.StylusLeave\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n StylusLeaveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent StylusLeaveEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusMove\n  id: StylusMove\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusMove\n  nameWithType: UIElement3D.StylusMove\n  fullName: System.Windows.UIElement3D.StylusMove\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the stylus moves over this element. The stylus must move while on the digitizer to raise this event. Otherwise, <xref href=\"System.Windows.UIElement3D.StylusInAirMove\"></xref> is raised instead.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName> attached event for this class, so that StylusMove is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusMove event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n StylusMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_StylusMove\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.StylusMoveEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusMove>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnStylusMove%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusEventHandler StylusMove;\n    return:\n      type: System.Windows.Input.StylusEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusMoveEvent\n  id: StylusMoveEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusMoveEvent\n  nameWithType: UIElement3D.StylusMoveEvent\n  fullName: System.Windows.UIElement3D.StylusMoveEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.StylusMove\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n StylusMoveEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent StylusMoveEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusOutOfRange\n  id: StylusOutOfRange\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusOutOfRange\n  nameWithType: UIElement3D.StylusOutOfRange\n  fullName: System.Windows.UIElement3D.StylusOutOfRange\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the stylus is too far from the digitizer to be detected, while over this element.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName> attached event for this class, so that StylusOutOfRange is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusOutOfRange event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n StylusOutOfRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_StylusOutOfRange\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.StylusOutOfRangeEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusEventHandler StylusOutOfRange;\n    return:\n      type: System.Windows.Input.StylusEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusOutOfRangeEvent\n  id: StylusOutOfRangeEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusOutOfRangeEvent\n  nameWithType: UIElement3D.StylusOutOfRangeEvent\n  fullName: System.Windows.UIElement3D.StylusOutOfRangeEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.StylusOutOfRange\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n StylusOutOfRangeEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusSystemGesture\n  id: StylusSystemGesture\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusSystemGesture\n  nameWithType: UIElement3D.StylusSystemGesture\n  fullName: System.Windows.UIElement3D.StylusSystemGesture\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when a user performs one of several stylus gestures.\n  remarks: \"For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName> attached event for this class, so that StylusSystemGesture is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusSystemGesture event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n StylusSystemGesture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_StylusSystemGesture\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.StylusSystemGestureEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;\n    return:\n      type: System.Windows.Input.StylusSystemGestureEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusSystemGestureEvent\n  id: StylusSystemGestureEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusSystemGestureEvent\n  nameWithType: UIElement3D.StylusSystemGestureEvent\n  fullName: System.Windows.UIElement3D.StylusSystemGestureEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.StylusSystemGesture\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n StylusSystemGestureEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusUp\n  id: StylusUp\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusUp\n  nameWithType: UIElement3D.StylusUp\n  fullName: System.Windows.UIElement3D.StylusUp\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when the user raises the stylus off the digitizer while it is over this element.\n  remarks: \"This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName> attached event for this class, so that StylusUp is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the StylusUp event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n Touch, mouse, and stylus input exist in a particular relationship. For more information, see [Touch Input Support in Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) and [Input Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n StylusUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_StylusUp\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.StylusUpEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewStylusUp>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnStylusUp%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.StylusEventHandler StylusUp;\n    return:\n      type: System.Windows.Input.StylusEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.StylusUpEvent\n  id: StylusUpEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: StylusUpEvent\n  nameWithType: UIElement3D.StylusUpEvent\n  fullName: System.Windows.UIElement3D.StylusUpEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.StylusUp\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n StylusUpEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent StylusUpEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.TextInput\n  id: TextInput\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: TextInput\n  nameWithType: UIElement3D.TextInput\n  fullName: System.Windows.UIElement3D.TextInput\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when this element gets text in a device-independent manner.\n  remarks: \"The TextInput event allows a component or application to listen for text input in a device-independent manner. The keyboard is the primary means of TextInput, but speech, handwriting, and other input devices can also raise TextInput.  \\n  \\n Because of key combinations—either in default keyboards or through input method editors—multiple key events might raise just one text input event.  \\n  \\n This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName> attached event for this class, so that TextInput is part of the class members list when <xref:System.Windows.UIElement3D> is inherited as a base element. Event handlers that are attached to the TextInput event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName> attached event and receive the same event data instance.  \\n  \\n TextInput is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"routedEventInfo_TextInput\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.TextInputEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Input.TextCompositionEventHandler>|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTextInput>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnTextInput%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event System.Windows.Input.TextCompositionEventHandler TextInput;\n    return:\n      type: System.Windows.Input.TextCompositionEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.TextInputEvent\n  id: TextInputEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: TextInputEvent\n  nameWithType: UIElement3D.TextInputEvent\n  fullName: System.Windows.UIElement3D.TextInputEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.TextInput\"></xref> routed event.\n  remarks: \"Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  \\n  \\n For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  \\n  \\n TextInputEvent is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent TextInputEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.TouchDown\n  id: TouchDown\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: TouchDown\n  nameWithType: UIElement3D.TouchDown\n  fullName: System.Windows.UIElement3D.TouchDown\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when a finger touches the screen while the finger is over this element.\n  remarks: \"By default, the <xref:System.Windows.UIElement3D.PreviewTouchDown> and TouchDown events do not occur until a finger touches the screen and moves. Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>. The press and hold behavior is equivalent to a mouse right-click.  \\n  \\n To cause the <xref:System.Windows.UIElement3D.PreviewTouchDown> and TouchDown events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName> attached property to `false` for this element.  \\n  \\n<a name=\\\"routedEventInfo_TouchDown\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.TouchDownEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTouchDown>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnTouchDown%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchDown;\n    return:\n      type: System.EventHandler{System.Windows.Input.TouchEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.TouchDownEvent\n  id: TouchDownEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: TouchDownEvent\n  nameWithType: UIElement3D.TouchDownEvent\n  fullName: System.Windows.UIElement3D.TouchDownEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.TouchDown\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent TouchDownEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.TouchEnter\n  id: TouchEnter\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: TouchEnter\n  nameWithType: UIElement3D.TouchEnter\n  fullName: System.Windows.UIElement3D.TouchEnter\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when a touch moves from outside to inside the bounds of this element.\n  remarks: \"This event is always raised, whether or not the touch device is captured to this element.  \\n  \\n<a name=\\\"routedEventInfo_TouchEnter\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.TouchEnterEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnTouchEnter%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchEnter;\n    return:\n      type: System.EventHandler{System.Windows.Input.TouchEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.TouchEnterEvent\n  id: TouchEnterEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: TouchEnterEvent\n  nameWithType: UIElement3D.TouchEnterEvent\n  fullName: System.Windows.UIElement3D.TouchEnterEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.TouchEnter\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent TouchEnterEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.TouchesCaptured\n  id: TouchesCaptured\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: TouchesCaptured\n  nameWithType: UIElement3D.TouchesCaptured\n  fullName: System.Windows.UIElement3D.TouchesCaptured\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets all touch devices that are captured to this element.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesCaptured { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}\n      description: An enumeration of <xref href=\"System.Windows.Input.TouchDevice\"></xref> objects that are captured to this element.\n  overload: System.Windows.UIElement3D.TouchesCaptured*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.TouchesCapturedWithin\n  id: TouchesCapturedWithin\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: TouchesCapturedWithin\n  nameWithType: UIElement3D.TouchesCapturedWithin\n  fullName: System.Windows.UIElement3D.TouchesCapturedWithin\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets all touch devices that are captured to this element or any child elements in its visual tree.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesCapturedWithin { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}\n      description: An enumeration of <xref href=\"System.Windows.Input.TouchDevice\"></xref> objects that are captured to this element or any child elements in its visual tree.\n  overload: System.Windows.UIElement3D.TouchesCapturedWithin*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.TouchesDirectlyOver\n  id: TouchesDirectlyOver\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: TouchesDirectlyOver\n  nameWithType: UIElement3D.TouchesDirectlyOver\n  fullName: System.Windows.UIElement3D.TouchesDirectlyOver\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets all touch devices that are over this element.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesDirectlyOver { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}\n      description: An enumeration of <xref href=\"System.Windows.Input.TouchDevice\"></xref> objects that are over this element.\n  overload: System.Windows.UIElement3D.TouchesDirectlyOver*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.TouchesOver\n  id: TouchesOver\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: TouchesOver\n  nameWithType: UIElement3D.TouchesOver\n  fullName: System.Windows.UIElement3D.TouchesOver\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets all touch devices that are over this element or any child elements in its visual tree.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesOver { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}\n      description: An enumeration of <xref href=\"System.Windows.Input.TouchDevice\"></xref> objects that are over this element or any child elements in its visual tree.\n  overload: System.Windows.UIElement3D.TouchesOver*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.TouchLeave\n  id: TouchLeave\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: TouchLeave\n  nameWithType: UIElement3D.TouchLeave\n  fullName: System.Windows.UIElement3D.TouchLeave\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when a touch moves from inside to outside the bounds of this element.\n  remarks: \"<a name=\\\"routedEventInfo_TouchLeave\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.TouchLeaveEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnTouchLeave%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchLeave;\n    return:\n      type: System.EventHandler{System.Windows.Input.TouchEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.TouchLeaveEvent\n  id: TouchLeaveEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: TouchLeaveEvent\n  nameWithType: UIElement3D.TouchLeaveEvent\n  fullName: System.Windows.UIElement3D.TouchLeaveEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.TouchLeave\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent TouchLeaveEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.TouchMove\n  id: TouchMove\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: TouchMove\n  nameWithType: UIElement3D.TouchMove\n  fullName: System.Windows.UIElement3D.TouchMove\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when a finger moves on the screen while the finger is over this element.\n  remarks: \"<a name=\\\"routedEventInfo_TouchMove\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.TouchMoveEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTouchMove>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnTouchMove%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchMove;\n    return:\n      type: System.EventHandler{System.Windows.Input.TouchEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.TouchMoveEvent\n  id: TouchMoveEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: TouchMoveEvent\n  nameWithType: UIElement3D.TouchMoveEvent\n  fullName: System.Windows.UIElement3D.TouchMoveEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.TouchMove\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent TouchMoveEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.TouchUp\n  id: TouchUp\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: TouchUp\n  nameWithType: UIElement3D.TouchUp\n  fullName: System.Windows.UIElement3D.TouchUp\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Occurs when a finger is raised off of the screen while the finger is over this element.\n  remarks: \"<a name=\\\"routedEventInfo_TouchUp\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.TouchUpEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.|  \\n  \\n-   The corresponding tunneling event is <xref:System.Windows.UIElement3D.PreviewTouchUp>.  \\n  \\n-   Override <xref:System.Windows.UIElement3D.OnTouchUp%2A> to implement class handling for this event in derived classes.\"\n  syntax:\n    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchUp;\n    return:\n      type: System.EventHandler{System.Windows.Input.TouchEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.TouchUpEvent\n  id: TouchUpEvent\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: TouchUpEvent\n  nameWithType: UIElement3D.TouchUpEvent\n  fullName: System.Windows.UIElement3D.TouchUpEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.UIElement3D.TouchUp\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent TouchUpEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.Visibility\n  id: Visibility\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: Visibility\n  nameWithType: UIElement3D.Visibility\n  fullName: System.Windows.UIElement3D.Visibility\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets or sets the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] visibility of this element.\n  remarks: \"Setting this property affects the value of <xref:System.Windows.UIElement3D.IsVisible%2A>, which in turn may raise the <xref:System.Windows.UIElement3D.IsVisibleChanged> event. However, <xref:System.Windows.UIElement3D.IsVisible%2A> has other factors that influence it, for instance the visibility settings of parents that contain it.  \\n  \\n Elements where Visibility is not <xref:System.Windows.Visibility> do not participate in input events (or commands) and are not reported in hit testing.  \\n  \\n Visibility is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_Visibility\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.UIElement3D.VisibilityProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public System.Windows.Visibility Visibility { get; set; }\n    return:\n      type: System.Windows.Visibility\n      description: A value of the enumeration. The default value is <xref href=\"System.Windows.Visibility\"></xref>.\n  overload: System.Windows.UIElement3D.Visibility*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.UIElement3D.VisibilityProperty\n  id: VisibilityProperty\n  parent: System.Windows.UIElement3D\n  langs:\n  - csharp\n  name: VisibilityProperty\n  nameWithType: UIElement3D.VisibilityProperty\n  fullName: System.Windows.UIElement3D.VisibilityProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.UIElement3D.Visibility*> dependency property.\n  remarks: VisibilityProperty is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty VisibilityProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Media.Media3D.Visual3D\n  isExternal: false\n  name: System.Windows.Media.Media3D.Visual3D\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Windows.UIElement3D.#ctor\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: UIElement3D()\n  nameWithType: UIElement3D.UIElement3D()\n  fullName: System.Windows.UIElement3D.UIElement3D()\n- uid: System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AddHandler(RoutedEvent,Delegate)\n  nameWithType: UIElement3D.AddHandler(RoutedEvent,Delegate)\n  fullName: System.Windows.UIElement3D.AddHandler(RoutedEvent,Delegate)\n- uid: System.Windows.RoutedEvent\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEvent\n  fullName: System.Windows.RoutedEvent\n- uid: System.Delegate\n  parent: System\n  isExternal: true\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AddHandler(RoutedEvent,Delegate,Boolean)\n  nameWithType: UIElement3D.AddHandler(RoutedEvent,Delegate,Boolean)\n  fullName: System.Windows.UIElement3D.AddHandler(RoutedEvent,Delegate,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.UIElement3D.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AddToEventRoute(EventRoute,RoutedEventArgs)\n  nameWithType: UIElement3D.AddToEventRoute(EventRoute,RoutedEventArgs)\n  fullName: System.Windows.UIElement3D.AddToEventRoute(EventRoute,RoutedEventArgs)\n- uid: System.Windows.EventRoute\n  parent: System.Windows\n  isExternal: false\n  name: EventRoute\n  nameWithType: EventRoute\n  fullName: System.Windows.EventRoute\n- uid: System.Windows.RoutedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEventArgs\n  nameWithType: RoutedEventArgs\n  fullName: System.Windows.RoutedEventArgs\n- uid: System.Windows.UIElement3D.AllowDrop\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AllowDrop\n  nameWithType: UIElement3D.AllowDrop\n  fullName: System.Windows.UIElement3D.AllowDrop\n- uid: System.Windows.UIElement3D.AllowDropProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AllowDropProperty\n  nameWithType: UIElement3D.AllowDropProperty\n  fullName: System.Windows.UIElement3D.AllowDropProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.UIElement3D.AreAnyTouchesCaptured\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AreAnyTouchesCaptured\n  nameWithType: UIElement3D.AreAnyTouchesCaptured\n  fullName: System.Windows.UIElement3D.AreAnyTouchesCaptured\n- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AreAnyTouchesCapturedProperty\n  nameWithType: UIElement3D.AreAnyTouchesCapturedProperty\n  fullName: System.Windows.UIElement3D.AreAnyTouchesCapturedProperty\n- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedWithin\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AreAnyTouchesCapturedWithin\n  nameWithType: UIElement3D.AreAnyTouchesCapturedWithin\n  fullName: System.Windows.UIElement3D.AreAnyTouchesCapturedWithin\n- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AreAnyTouchesCapturedWithinProperty\n  nameWithType: UIElement3D.AreAnyTouchesCapturedWithinProperty\n  fullName: System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty\n- uid: System.Windows.UIElement3D.AreAnyTouchesDirectlyOver\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AreAnyTouchesDirectlyOver\n  nameWithType: UIElement3D.AreAnyTouchesDirectlyOver\n  fullName: System.Windows.UIElement3D.AreAnyTouchesDirectlyOver\n- uid: System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AreAnyTouchesDirectlyOverProperty\n  nameWithType: UIElement3D.AreAnyTouchesDirectlyOverProperty\n  fullName: System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty\n- uid: System.Windows.UIElement3D.AreAnyTouchesOver\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AreAnyTouchesOver\n  nameWithType: UIElement3D.AreAnyTouchesOver\n  fullName: System.Windows.UIElement3D.AreAnyTouchesOver\n- uid: System.Windows.UIElement3D.AreAnyTouchesOverProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AreAnyTouchesOverProperty\n  nameWithType: UIElement3D.AreAnyTouchesOverProperty\n  fullName: System.Windows.UIElement3D.AreAnyTouchesOverProperty\n- uid: System.Windows.UIElement3D.CaptureMouse\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: CaptureMouse()\n  nameWithType: UIElement3D.CaptureMouse()\n  fullName: System.Windows.UIElement3D.CaptureMouse()\n- uid: System.Windows.UIElement3D.CaptureStylus\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: CaptureStylus()\n  nameWithType: UIElement3D.CaptureStylus()\n  fullName: System.Windows.UIElement3D.CaptureStylus()\n- uid: System.Windows.UIElement3D.CaptureTouch(System.Windows.Input.TouchDevice)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: CaptureTouch(TouchDevice)\n  nameWithType: UIElement3D.CaptureTouch(TouchDevice)\n  fullName: System.Windows.UIElement3D.CaptureTouch(TouchDevice)\n- uid: System.Windows.Input.TouchDevice\n  parent: System.Windows.Input\n  isExternal: false\n  name: TouchDevice\n  nameWithType: TouchDevice\n  fullName: System.Windows.Input.TouchDevice\n- uid: System.Windows.UIElement3D.CommandBindings\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: CommandBindings\n  nameWithType: UIElement3D.CommandBindings\n  fullName: System.Windows.UIElement3D.CommandBindings\n- uid: System.Windows.Input.CommandBindingCollection\n  parent: System.Windows.Input\n  isExternal: false\n  name: CommandBindingCollection\n  nameWithType: CommandBindingCollection\n  fullName: System.Windows.Input.CommandBindingCollection\n- uid: System.Windows.UIElement3D.DragEnter\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: DragEnter\n  nameWithType: UIElement3D.DragEnter\n  fullName: System.Windows.UIElement3D.DragEnter\n- uid: System.Windows.DragEventHandler\n  parent: System.Windows\n  isExternal: false\n  name: DragEventHandler\n  nameWithType: DragEventHandler\n  fullName: System.Windows.DragEventHandler\n- uid: System.Windows.UIElement3D.DragEnterEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: DragEnterEvent\n  nameWithType: UIElement3D.DragEnterEvent\n  fullName: System.Windows.UIElement3D.DragEnterEvent\n- uid: System.Windows.UIElement3D.DragLeave\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: DragLeave\n  nameWithType: UIElement3D.DragLeave\n  fullName: System.Windows.UIElement3D.DragLeave\n- uid: System.Windows.UIElement3D.DragLeaveEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: DragLeaveEvent\n  nameWithType: UIElement3D.DragLeaveEvent\n  fullName: System.Windows.UIElement3D.DragLeaveEvent\n- uid: System.Windows.UIElement3D.DragOver\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: DragOver\n  nameWithType: UIElement3D.DragOver\n  fullName: System.Windows.UIElement3D.DragOver\n- uid: System.Windows.UIElement3D.DragOverEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: DragOverEvent\n  nameWithType: UIElement3D.DragOverEvent\n  fullName: System.Windows.UIElement3D.DragOverEvent\n- uid: System.Windows.UIElement3D.Drop\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: Drop\n  nameWithType: UIElement3D.Drop\n  fullName: System.Windows.UIElement3D.Drop\n- uid: System.Windows.UIElement3D.DropEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: DropEvent\n  nameWithType: UIElement3D.DropEvent\n  fullName: System.Windows.UIElement3D.DropEvent\n- uid: System.Windows.UIElement3D.Focus\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: Focus()\n  nameWithType: UIElement3D.Focus()\n  fullName: System.Windows.UIElement3D.Focus()\n- uid: System.Windows.UIElement3D.Focusable\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: Focusable\n  nameWithType: UIElement3D.Focusable\n  fullName: System.Windows.UIElement3D.Focusable\n- uid: System.Windows.UIElement3D.FocusableChanged\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: FocusableChanged\n  nameWithType: UIElement3D.FocusableChanged\n  fullName: System.Windows.UIElement3D.FocusableChanged\n- uid: System.Windows.DependencyPropertyChangedEventHandler\n  parent: System.Windows\n  isExternal: false\n  name: DependencyPropertyChangedEventHandler\n  nameWithType: DependencyPropertyChangedEventHandler\n  fullName: System.Windows.DependencyPropertyChangedEventHandler\n- uid: System.Windows.UIElement3D.FocusableProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: FocusableProperty\n  nameWithType: UIElement3D.FocusableProperty\n  fullName: System.Windows.UIElement3D.FocusableProperty\n- uid: System.Windows.UIElement3D.GetUIParentCore\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: GetUIParentCore()\n  nameWithType: UIElement3D.GetUIParentCore()\n  fullName: System.Windows.UIElement3D.GetUIParentCore()\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.UIElement3D.GiveFeedback\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: GiveFeedback\n  nameWithType: UIElement3D.GiveFeedback\n  fullName: System.Windows.UIElement3D.GiveFeedback\n- uid: System.Windows.GiveFeedbackEventHandler\n  parent: System.Windows\n  isExternal: false\n  name: GiveFeedbackEventHandler\n  nameWithType: GiveFeedbackEventHandler\n  fullName: System.Windows.GiveFeedbackEventHandler\n- uid: System.Windows.UIElement3D.GiveFeedbackEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: GiveFeedbackEvent\n  nameWithType: UIElement3D.GiveFeedbackEvent\n  fullName: System.Windows.UIElement3D.GiveFeedbackEvent\n- uid: System.Windows.UIElement3D.GotFocus\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: GotFocus\n  nameWithType: UIElement3D.GotFocus\n  fullName: System.Windows.UIElement3D.GotFocus\n- uid: System.Windows.RoutedEventHandler\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEventHandler\n  nameWithType: RoutedEventHandler\n  fullName: System.Windows.RoutedEventHandler\n- uid: System.Windows.UIElement3D.GotFocusEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: GotFocusEvent\n  nameWithType: UIElement3D.GotFocusEvent\n  fullName: System.Windows.UIElement3D.GotFocusEvent\n- uid: System.Windows.UIElement3D.GotKeyboardFocus\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: GotKeyboardFocus\n  nameWithType: UIElement3D.GotKeyboardFocus\n  fullName: System.Windows.UIElement3D.GotKeyboardFocus\n- uid: System.Windows.Input.KeyboardFocusChangedEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: KeyboardFocusChangedEventHandler\n  nameWithType: KeyboardFocusChangedEventHandler\n  fullName: System.Windows.Input.KeyboardFocusChangedEventHandler\n- uid: System.Windows.UIElement3D.GotKeyboardFocusEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: GotKeyboardFocusEvent\n  nameWithType: UIElement3D.GotKeyboardFocusEvent\n  fullName: System.Windows.UIElement3D.GotKeyboardFocusEvent\n- uid: System.Windows.UIElement3D.GotMouseCapture\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: GotMouseCapture\n  nameWithType: UIElement3D.GotMouseCapture\n  fullName: System.Windows.UIElement3D.GotMouseCapture\n- uid: System.Windows.Input.MouseEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseEventHandler\n  nameWithType: MouseEventHandler\n  fullName: System.Windows.Input.MouseEventHandler\n- uid: System.Windows.UIElement3D.GotMouseCaptureEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: GotMouseCaptureEvent\n  nameWithType: UIElement3D.GotMouseCaptureEvent\n  fullName: System.Windows.UIElement3D.GotMouseCaptureEvent\n- uid: System.Windows.UIElement3D.GotStylusCapture\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: GotStylusCapture\n  nameWithType: UIElement3D.GotStylusCapture\n  fullName: System.Windows.UIElement3D.GotStylusCapture\n- uid: System.Windows.Input.StylusEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: StylusEventHandler\n  nameWithType: StylusEventHandler\n  fullName: System.Windows.Input.StylusEventHandler\n- uid: System.Windows.UIElement3D.GotStylusCaptureEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: GotStylusCaptureEvent\n  nameWithType: UIElement3D.GotStylusCaptureEvent\n  fullName: System.Windows.UIElement3D.GotStylusCaptureEvent\n- uid: System.Windows.UIElement3D.GotTouchCapture\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: GotTouchCapture\n  nameWithType: UIElement3D.GotTouchCapture\n  fullName: System.Windows.UIElement3D.GotTouchCapture\n- uid: System.EventHandler{System.Windows.Input.TouchEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<TouchEventArgs>\n  nameWithType: EventHandler<TouchEventArgs>\n  fullName: System.EventHandler<System.Windows.Input.TouchEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.Windows.Input.TouchEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Input.TouchEventArgs\n    name: TouchEventArgs\n    nameWithType: TouchEventArgs\n    fullName: TouchEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.UIElement3D.GotTouchCaptureEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: GotTouchCaptureEvent\n  nameWithType: UIElement3D.GotTouchCaptureEvent\n  fullName: System.Windows.UIElement3D.GotTouchCaptureEvent\n- uid: System.Windows.UIElement3D.InputBindings\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: InputBindings\n  nameWithType: UIElement3D.InputBindings\n  fullName: System.Windows.UIElement3D.InputBindings\n- uid: System.Windows.Input.InputBindingCollection\n  parent: System.Windows.Input\n  isExternal: false\n  name: InputBindingCollection\n  nameWithType: InputBindingCollection\n  fullName: System.Windows.Input.InputBindingCollection\n- uid: System.Windows.UIElement3D.InvalidateModel\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: InvalidateModel()\n  nameWithType: UIElement3D.InvalidateModel()\n  fullName: System.Windows.UIElement3D.InvalidateModel()\n- uid: System.Windows.UIElement3D.IsEnabled\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsEnabled\n  nameWithType: UIElement3D.IsEnabled\n  fullName: System.Windows.UIElement3D.IsEnabled\n- uid: System.Windows.UIElement3D.IsEnabledChanged\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsEnabledChanged\n  nameWithType: UIElement3D.IsEnabledChanged\n  fullName: System.Windows.UIElement3D.IsEnabledChanged\n- uid: System.Windows.UIElement3D.IsEnabledCore\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsEnabledCore\n  nameWithType: UIElement3D.IsEnabledCore\n  fullName: System.Windows.UIElement3D.IsEnabledCore\n- uid: System.Windows.UIElement3D.IsEnabledProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsEnabledProperty\n  nameWithType: UIElement3D.IsEnabledProperty\n  fullName: System.Windows.UIElement3D.IsEnabledProperty\n- uid: System.Windows.UIElement3D.IsFocused\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsFocused\n  nameWithType: UIElement3D.IsFocused\n  fullName: System.Windows.UIElement3D.IsFocused\n- uid: System.Windows.UIElement3D.IsFocusedProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsFocusedProperty\n  nameWithType: UIElement3D.IsFocusedProperty\n  fullName: System.Windows.UIElement3D.IsFocusedProperty\n- uid: System.Windows.UIElement3D.IsHitTestVisible\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsHitTestVisible\n  nameWithType: UIElement3D.IsHitTestVisible\n  fullName: System.Windows.UIElement3D.IsHitTestVisible\n- uid: System.Windows.UIElement3D.IsHitTestVisibleChanged\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsHitTestVisibleChanged\n  nameWithType: UIElement3D.IsHitTestVisibleChanged\n  fullName: System.Windows.UIElement3D.IsHitTestVisibleChanged\n- uid: System.Windows.UIElement3D.IsHitTestVisibleProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsHitTestVisibleProperty\n  nameWithType: UIElement3D.IsHitTestVisibleProperty\n  fullName: System.Windows.UIElement3D.IsHitTestVisibleProperty\n- uid: System.Windows.UIElement3D.IsInputMethodEnabled\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsInputMethodEnabled\n  nameWithType: UIElement3D.IsInputMethodEnabled\n  fullName: System.Windows.UIElement3D.IsInputMethodEnabled\n- uid: System.Windows.UIElement3D.IsKeyboardFocused\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsKeyboardFocused\n  nameWithType: UIElement3D.IsKeyboardFocused\n  fullName: System.Windows.UIElement3D.IsKeyboardFocused\n- uid: System.Windows.UIElement3D.IsKeyboardFocusedChanged\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsKeyboardFocusedChanged\n  nameWithType: UIElement3D.IsKeyboardFocusedChanged\n  fullName: System.Windows.UIElement3D.IsKeyboardFocusedChanged\n- uid: System.Windows.UIElement3D.IsKeyboardFocusedProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsKeyboardFocusedProperty\n  nameWithType: UIElement3D.IsKeyboardFocusedProperty\n  fullName: System.Windows.UIElement3D.IsKeyboardFocusedProperty\n- uid: System.Windows.UIElement3D.IsKeyboardFocusWithin\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsKeyboardFocusWithin\n  nameWithType: UIElement3D.IsKeyboardFocusWithin\n  fullName: System.Windows.UIElement3D.IsKeyboardFocusWithin\n- uid: System.Windows.UIElement3D.IsKeyboardFocusWithinChanged\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsKeyboardFocusWithinChanged\n  nameWithType: UIElement3D.IsKeyboardFocusWithinChanged\n  fullName: System.Windows.UIElement3D.IsKeyboardFocusWithinChanged\n- uid: System.Windows.UIElement3D.IsKeyboardFocusWithinProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsKeyboardFocusWithinProperty\n  nameWithType: UIElement3D.IsKeyboardFocusWithinProperty\n  fullName: System.Windows.UIElement3D.IsKeyboardFocusWithinProperty\n- uid: System.Windows.UIElement3D.IsMouseCaptured\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsMouseCaptured\n  nameWithType: UIElement3D.IsMouseCaptured\n  fullName: System.Windows.UIElement3D.IsMouseCaptured\n- uid: System.Windows.UIElement3D.IsMouseCapturedChanged\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsMouseCapturedChanged\n  nameWithType: UIElement3D.IsMouseCapturedChanged\n  fullName: System.Windows.UIElement3D.IsMouseCapturedChanged\n- uid: System.Windows.UIElement3D.IsMouseCapturedProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsMouseCapturedProperty\n  nameWithType: UIElement3D.IsMouseCapturedProperty\n  fullName: System.Windows.UIElement3D.IsMouseCapturedProperty\n- uid: System.Windows.UIElement3D.IsMouseCaptureWithin\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsMouseCaptureWithin\n  nameWithType: UIElement3D.IsMouseCaptureWithin\n  fullName: System.Windows.UIElement3D.IsMouseCaptureWithin\n- uid: System.Windows.UIElement3D.IsMouseCaptureWithinChanged\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsMouseCaptureWithinChanged\n  nameWithType: UIElement3D.IsMouseCaptureWithinChanged\n  fullName: System.Windows.UIElement3D.IsMouseCaptureWithinChanged\n- uid: System.Windows.UIElement3D.IsMouseCaptureWithinProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsMouseCaptureWithinProperty\n  nameWithType: UIElement3D.IsMouseCaptureWithinProperty\n  fullName: System.Windows.UIElement3D.IsMouseCaptureWithinProperty\n- uid: System.Windows.UIElement3D.IsMouseDirectlyOver\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsMouseDirectlyOver\n  nameWithType: UIElement3D.IsMouseDirectlyOver\n  fullName: System.Windows.UIElement3D.IsMouseDirectlyOver\n- uid: System.Windows.UIElement3D.IsMouseDirectlyOverChanged\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsMouseDirectlyOverChanged\n  nameWithType: UIElement3D.IsMouseDirectlyOverChanged\n  fullName: System.Windows.UIElement3D.IsMouseDirectlyOverChanged\n- uid: System.Windows.UIElement3D.IsMouseDirectlyOverProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsMouseDirectlyOverProperty\n  nameWithType: UIElement3D.IsMouseDirectlyOverProperty\n  fullName: System.Windows.UIElement3D.IsMouseDirectlyOverProperty\n- uid: System.Windows.UIElement3D.IsMouseOver\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsMouseOver\n  nameWithType: UIElement3D.IsMouseOver\n  fullName: System.Windows.UIElement3D.IsMouseOver\n- uid: System.Windows.UIElement3D.IsMouseOverProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsMouseOverProperty\n  nameWithType: UIElement3D.IsMouseOverProperty\n  fullName: System.Windows.UIElement3D.IsMouseOverProperty\n- uid: System.Windows.UIElement3D.IsStylusCaptured\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsStylusCaptured\n  nameWithType: UIElement3D.IsStylusCaptured\n  fullName: System.Windows.UIElement3D.IsStylusCaptured\n- uid: System.Windows.UIElement3D.IsStylusCapturedChanged\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsStylusCapturedChanged\n  nameWithType: UIElement3D.IsStylusCapturedChanged\n  fullName: System.Windows.UIElement3D.IsStylusCapturedChanged\n- uid: System.Windows.UIElement3D.IsStylusCapturedProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsStylusCapturedProperty\n  nameWithType: UIElement3D.IsStylusCapturedProperty\n  fullName: System.Windows.UIElement3D.IsStylusCapturedProperty\n- uid: System.Windows.UIElement3D.IsStylusCaptureWithin\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsStylusCaptureWithin\n  nameWithType: UIElement3D.IsStylusCaptureWithin\n  fullName: System.Windows.UIElement3D.IsStylusCaptureWithin\n- uid: System.Windows.UIElement3D.IsStylusCaptureWithinChanged\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsStylusCaptureWithinChanged\n  nameWithType: UIElement3D.IsStylusCaptureWithinChanged\n  fullName: System.Windows.UIElement3D.IsStylusCaptureWithinChanged\n- uid: System.Windows.UIElement3D.IsStylusCaptureWithinProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsStylusCaptureWithinProperty\n  nameWithType: UIElement3D.IsStylusCaptureWithinProperty\n  fullName: System.Windows.UIElement3D.IsStylusCaptureWithinProperty\n- uid: System.Windows.UIElement3D.IsStylusDirectlyOver\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsStylusDirectlyOver\n  nameWithType: UIElement3D.IsStylusDirectlyOver\n  fullName: System.Windows.UIElement3D.IsStylusDirectlyOver\n- uid: System.Windows.UIElement3D.IsStylusDirectlyOverChanged\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsStylusDirectlyOverChanged\n  nameWithType: UIElement3D.IsStylusDirectlyOverChanged\n  fullName: System.Windows.UIElement3D.IsStylusDirectlyOverChanged\n- uid: System.Windows.UIElement3D.IsStylusDirectlyOverProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsStylusDirectlyOverProperty\n  nameWithType: UIElement3D.IsStylusDirectlyOverProperty\n  fullName: System.Windows.UIElement3D.IsStylusDirectlyOverProperty\n- uid: System.Windows.UIElement3D.IsStylusOver\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsStylusOver\n  nameWithType: UIElement3D.IsStylusOver\n  fullName: System.Windows.UIElement3D.IsStylusOver\n- uid: System.Windows.UIElement3D.IsStylusOverProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsStylusOverProperty\n  nameWithType: UIElement3D.IsStylusOverProperty\n  fullName: System.Windows.UIElement3D.IsStylusOverProperty\n- uid: System.Windows.UIElement3D.IsVisible\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsVisible\n  nameWithType: UIElement3D.IsVisible\n  fullName: System.Windows.UIElement3D.IsVisible\n- uid: System.Windows.UIElement3D.IsVisibleChanged\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsVisibleChanged\n  nameWithType: UIElement3D.IsVisibleChanged\n  fullName: System.Windows.UIElement3D.IsVisibleChanged\n- uid: System.Windows.UIElement3D.IsVisibleProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsVisibleProperty\n  nameWithType: UIElement3D.IsVisibleProperty\n  fullName: System.Windows.UIElement3D.IsVisibleProperty\n- uid: System.Windows.UIElement3D.KeyDown\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: KeyDown\n  nameWithType: UIElement3D.KeyDown\n  fullName: System.Windows.UIElement3D.KeyDown\n- uid: System.Windows.Input.KeyEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: KeyEventHandler\n  nameWithType: KeyEventHandler\n  fullName: System.Windows.Input.KeyEventHandler\n- uid: System.Windows.UIElement3D.KeyDownEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: KeyDownEvent\n  nameWithType: UIElement3D.KeyDownEvent\n  fullName: System.Windows.UIElement3D.KeyDownEvent\n- uid: System.Windows.UIElement3D.KeyUp\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: KeyUp\n  nameWithType: UIElement3D.KeyUp\n  fullName: System.Windows.UIElement3D.KeyUp\n- uid: System.Windows.UIElement3D.KeyUpEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: KeyUpEvent\n  nameWithType: UIElement3D.KeyUpEvent\n  fullName: System.Windows.UIElement3D.KeyUpEvent\n- uid: System.Windows.UIElement3D.LostFocus\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: LostFocus\n  nameWithType: UIElement3D.LostFocus\n  fullName: System.Windows.UIElement3D.LostFocus\n- uid: System.Windows.UIElement3D.LostFocusEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: LostFocusEvent\n  nameWithType: UIElement3D.LostFocusEvent\n  fullName: System.Windows.UIElement3D.LostFocusEvent\n- uid: System.Windows.UIElement3D.LostKeyboardFocus\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: LostKeyboardFocus\n  nameWithType: UIElement3D.LostKeyboardFocus\n  fullName: System.Windows.UIElement3D.LostKeyboardFocus\n- uid: System.Windows.UIElement3D.LostKeyboardFocusEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: LostKeyboardFocusEvent\n  nameWithType: UIElement3D.LostKeyboardFocusEvent\n  fullName: System.Windows.UIElement3D.LostKeyboardFocusEvent\n- uid: System.Windows.UIElement3D.LostMouseCapture\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: LostMouseCapture\n  nameWithType: UIElement3D.LostMouseCapture\n  fullName: System.Windows.UIElement3D.LostMouseCapture\n- uid: System.Windows.UIElement3D.LostMouseCaptureEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: LostMouseCaptureEvent\n  nameWithType: UIElement3D.LostMouseCaptureEvent\n  fullName: System.Windows.UIElement3D.LostMouseCaptureEvent\n- uid: System.Windows.UIElement3D.LostStylusCapture\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: LostStylusCapture\n  nameWithType: UIElement3D.LostStylusCapture\n  fullName: System.Windows.UIElement3D.LostStylusCapture\n- uid: System.Windows.UIElement3D.LostStylusCaptureEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: LostStylusCaptureEvent\n  nameWithType: UIElement3D.LostStylusCaptureEvent\n  fullName: System.Windows.UIElement3D.LostStylusCaptureEvent\n- uid: System.Windows.UIElement3D.LostTouchCapture\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: LostTouchCapture\n  nameWithType: UIElement3D.LostTouchCapture\n  fullName: System.Windows.UIElement3D.LostTouchCapture\n- uid: System.Windows.UIElement3D.LostTouchCaptureEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: LostTouchCaptureEvent\n  nameWithType: UIElement3D.LostTouchCaptureEvent\n  fullName: System.Windows.UIElement3D.LostTouchCaptureEvent\n- uid: System.Windows.UIElement3D.MouseDown\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseDown\n  nameWithType: UIElement3D.MouseDown\n  fullName: System.Windows.UIElement3D.MouseDown\n- uid: System.Windows.Input.MouseButtonEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseButtonEventHandler\n  nameWithType: MouseButtonEventHandler\n  fullName: System.Windows.Input.MouseButtonEventHandler\n- uid: System.Windows.UIElement3D.MouseDownEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseDownEvent\n  nameWithType: UIElement3D.MouseDownEvent\n  fullName: System.Windows.UIElement3D.MouseDownEvent\n- uid: System.Windows.UIElement3D.MouseEnter\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseEnter\n  nameWithType: UIElement3D.MouseEnter\n  fullName: System.Windows.UIElement3D.MouseEnter\n- uid: System.Windows.UIElement3D.MouseEnterEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseEnterEvent\n  nameWithType: UIElement3D.MouseEnterEvent\n  fullName: System.Windows.UIElement3D.MouseEnterEvent\n- uid: System.Windows.UIElement3D.MouseLeave\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseLeave\n  nameWithType: UIElement3D.MouseLeave\n  fullName: System.Windows.UIElement3D.MouseLeave\n- uid: System.Windows.UIElement3D.MouseLeaveEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseLeaveEvent\n  nameWithType: UIElement3D.MouseLeaveEvent\n  fullName: System.Windows.UIElement3D.MouseLeaveEvent\n- uid: System.Windows.UIElement3D.MouseLeftButtonDown\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseLeftButtonDown\n  nameWithType: UIElement3D.MouseLeftButtonDown\n  fullName: System.Windows.UIElement3D.MouseLeftButtonDown\n- uid: System.Windows.UIElement3D.MouseLeftButtonDownEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseLeftButtonDownEvent\n  nameWithType: UIElement3D.MouseLeftButtonDownEvent\n  fullName: System.Windows.UIElement3D.MouseLeftButtonDownEvent\n- uid: System.Windows.UIElement3D.MouseLeftButtonUp\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseLeftButtonUp\n  nameWithType: UIElement3D.MouseLeftButtonUp\n  fullName: System.Windows.UIElement3D.MouseLeftButtonUp\n- uid: System.Windows.UIElement3D.MouseLeftButtonUpEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseLeftButtonUpEvent\n  nameWithType: UIElement3D.MouseLeftButtonUpEvent\n  fullName: System.Windows.UIElement3D.MouseLeftButtonUpEvent\n- uid: System.Windows.UIElement3D.MouseMove\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseMove\n  nameWithType: UIElement3D.MouseMove\n  fullName: System.Windows.UIElement3D.MouseMove\n- uid: System.Windows.UIElement3D.MouseMoveEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseMoveEvent\n  nameWithType: UIElement3D.MouseMoveEvent\n  fullName: System.Windows.UIElement3D.MouseMoveEvent\n- uid: System.Windows.UIElement3D.MouseRightButtonDown\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseRightButtonDown\n  nameWithType: UIElement3D.MouseRightButtonDown\n  fullName: System.Windows.UIElement3D.MouseRightButtonDown\n- uid: System.Windows.UIElement3D.MouseRightButtonDownEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseRightButtonDownEvent\n  nameWithType: UIElement3D.MouseRightButtonDownEvent\n  fullName: System.Windows.UIElement3D.MouseRightButtonDownEvent\n- uid: System.Windows.UIElement3D.MouseRightButtonUp\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseRightButtonUp\n  nameWithType: UIElement3D.MouseRightButtonUp\n  fullName: System.Windows.UIElement3D.MouseRightButtonUp\n- uid: System.Windows.UIElement3D.MouseRightButtonUpEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseRightButtonUpEvent\n  nameWithType: UIElement3D.MouseRightButtonUpEvent\n  fullName: System.Windows.UIElement3D.MouseRightButtonUpEvent\n- uid: System.Windows.UIElement3D.MouseUp\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseUp\n  nameWithType: UIElement3D.MouseUp\n  fullName: System.Windows.UIElement3D.MouseUp\n- uid: System.Windows.UIElement3D.MouseUpEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseUpEvent\n  nameWithType: UIElement3D.MouseUpEvent\n  fullName: System.Windows.UIElement3D.MouseUpEvent\n- uid: System.Windows.UIElement3D.MouseWheel\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseWheel\n  nameWithType: UIElement3D.MouseWheel\n  fullName: System.Windows.UIElement3D.MouseWheel\n- uid: System.Windows.Input.MouseWheelEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseWheelEventHandler\n  nameWithType: MouseWheelEventHandler\n  fullName: System.Windows.Input.MouseWheelEventHandler\n- uid: System.Windows.UIElement3D.MouseWheelEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MouseWheelEvent\n  nameWithType: UIElement3D.MouseWheelEvent\n  fullName: System.Windows.UIElement3D.MouseWheelEvent\n- uid: System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MoveFocus(TraversalRequest)\n  nameWithType: UIElement3D.MoveFocus(TraversalRequest)\n  fullName: System.Windows.UIElement3D.MoveFocus(TraversalRequest)\n- uid: System.Windows.Input.TraversalRequest\n  parent: System.Windows.Input\n  isExternal: false\n  name: TraversalRequest\n  nameWithType: TraversalRequest\n  fullName: System.Windows.Input.TraversalRequest\n- uid: System.Windows.UIElement3D.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnAccessKey(AccessKeyEventArgs)\n  nameWithType: UIElement3D.OnAccessKey(AccessKeyEventArgs)\n  fullName: System.Windows.UIElement3D.OnAccessKey(AccessKeyEventArgs)\n- uid: System.Windows.Input.AccessKeyEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: AccessKeyEventArgs\n  nameWithType: AccessKeyEventArgs\n  fullName: System.Windows.Input.AccessKeyEventArgs\n- uid: System.Windows.UIElement3D.OnCreateAutomationPeer\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnCreateAutomationPeer()\n  nameWithType: UIElement3D.OnCreateAutomationPeer()\n  fullName: System.Windows.UIElement3D.OnCreateAutomationPeer()\n- uid: System.Windows.Automation.Peers.AutomationPeer\n  parent: System.Windows.Automation.Peers\n  isExternal: false\n  name: AutomationPeer\n  nameWithType: AutomationPeer\n  fullName: System.Windows.Automation.Peers.AutomationPeer\n- uid: System.Windows.UIElement3D.OnDragEnter(System.Windows.DragEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnDragEnter(DragEventArgs)\n  nameWithType: UIElement3D.OnDragEnter(DragEventArgs)\n  fullName: System.Windows.UIElement3D.OnDragEnter(DragEventArgs)\n- uid: System.Windows.DragEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: DragEventArgs\n  nameWithType: DragEventArgs\n  fullName: System.Windows.DragEventArgs\n- uid: System.Windows.UIElement3D.OnDragLeave(System.Windows.DragEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnDragLeave(DragEventArgs)\n  nameWithType: UIElement3D.OnDragLeave(DragEventArgs)\n  fullName: System.Windows.UIElement3D.OnDragLeave(DragEventArgs)\n- uid: System.Windows.UIElement3D.OnDragOver(System.Windows.DragEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnDragOver(DragEventArgs)\n  nameWithType: UIElement3D.OnDragOver(DragEventArgs)\n  fullName: System.Windows.UIElement3D.OnDragOver(DragEventArgs)\n- uid: System.Windows.UIElement3D.OnDrop(System.Windows.DragEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnDrop(DragEventArgs)\n  nameWithType: UIElement3D.OnDrop(DragEventArgs)\n  fullName: System.Windows.UIElement3D.OnDrop(DragEventArgs)\n- uid: System.Windows.UIElement3D.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnGiveFeedback(GiveFeedbackEventArgs)\n  nameWithType: UIElement3D.OnGiveFeedback(GiveFeedbackEventArgs)\n  fullName: System.Windows.UIElement3D.OnGiveFeedback(GiveFeedbackEventArgs)\n- uid: System.Windows.GiveFeedbackEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: GiveFeedbackEventArgs\n  nameWithType: GiveFeedbackEventArgs\n  fullName: System.Windows.GiveFeedbackEventArgs\n- uid: System.Windows.UIElement3D.OnGotFocus(System.Windows.RoutedEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnGotFocus(RoutedEventArgs)\n  nameWithType: UIElement3D.OnGotFocus(RoutedEventArgs)\n  fullName: System.Windows.UIElement3D.OnGotFocus(RoutedEventArgs)\n- uid: System.Windows.UIElement3D.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)\n  nameWithType: UIElement3D.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)\n- uid: System.Windows.Input.KeyboardFocusChangedEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: KeyboardFocusChangedEventArgs\n  nameWithType: KeyboardFocusChangedEventArgs\n  fullName: System.Windows.Input.KeyboardFocusChangedEventArgs\n- uid: System.Windows.UIElement3D.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnGotMouseCapture(MouseEventArgs)\n  nameWithType: UIElement3D.OnGotMouseCapture(MouseEventArgs)\n  fullName: System.Windows.UIElement3D.OnGotMouseCapture(MouseEventArgs)\n- uid: System.Windows.Input.MouseEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseEventArgs\n  nameWithType: MouseEventArgs\n  fullName: System.Windows.Input.MouseEventArgs\n- uid: System.Windows.UIElement3D.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnGotStylusCapture(StylusEventArgs)\n  nameWithType: UIElement3D.OnGotStylusCapture(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnGotStylusCapture(StylusEventArgs)\n- uid: System.Windows.Input.StylusEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: StylusEventArgs\n  nameWithType: StylusEventArgs\n  fullName: System.Windows.Input.StylusEventArgs\n- uid: System.Windows.UIElement3D.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnGotTouchCapture(TouchEventArgs)\n  nameWithType: UIElement3D.OnGotTouchCapture(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnGotTouchCapture(TouchEventArgs)\n- uid: System.Windows.Input.TouchEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: TouchEventArgs\n  nameWithType: TouchEventArgs\n  fullName: System.Windows.Input.TouchEventArgs\n- uid: System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: UIElement3D.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyPropertyChangedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: DependencyPropertyChangedEventArgs\n  nameWithType: DependencyPropertyChangedEventArgs\n  fullName: System.Windows.DependencyPropertyChangedEventArgs\n- uid: System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: UIElement3D.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.UIElement3D.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: UIElement3D.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: UIElement3D.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: UIElement3D.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.UIElement3D.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: UIElement3D.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: UIElement3D.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: UIElement3D.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.UIElement3D.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnKeyDown(KeyEventArgs)\n  nameWithType: UIElement3D.OnKeyDown(KeyEventArgs)\n  fullName: System.Windows.UIElement3D.OnKeyDown(KeyEventArgs)\n- uid: System.Windows.Input.KeyEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: KeyEventArgs\n  nameWithType: KeyEventArgs\n  fullName: System.Windows.Input.KeyEventArgs\n- uid: System.Windows.UIElement3D.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnKeyUp(KeyEventArgs)\n  nameWithType: UIElement3D.OnKeyUp(KeyEventArgs)\n  fullName: System.Windows.UIElement3D.OnKeyUp(KeyEventArgs)\n- uid: System.Windows.UIElement3D.OnLostFocus(System.Windows.RoutedEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnLostFocus(RoutedEventArgs)\n  nameWithType: UIElement3D.OnLostFocus(RoutedEventArgs)\n  fullName: System.Windows.UIElement3D.OnLostFocus(RoutedEventArgs)\n- uid: System.Windows.UIElement3D.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  nameWithType: UIElement3D.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n- uid: System.Windows.UIElement3D.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnLostMouseCapture(MouseEventArgs)\n  nameWithType: UIElement3D.OnLostMouseCapture(MouseEventArgs)\n  fullName: System.Windows.UIElement3D.OnLostMouseCapture(MouseEventArgs)\n- uid: System.Windows.UIElement3D.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnLostStylusCapture(StylusEventArgs)\n  nameWithType: UIElement3D.OnLostStylusCapture(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnLostStylusCapture(StylusEventArgs)\n- uid: System.Windows.UIElement3D.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnLostTouchCapture(TouchEventArgs)\n  nameWithType: UIElement3D.OnLostTouchCapture(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnLostTouchCapture(TouchEventArgs)\n- uid: System.Windows.UIElement3D.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseDown(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnMouseDown(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseDown(MouseButtonEventArgs)\n- uid: System.Windows.Input.MouseButtonEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseButtonEventArgs\n  nameWithType: MouseButtonEventArgs\n  fullName: System.Windows.Input.MouseButtonEventArgs\n- uid: System.Windows.UIElement3D.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseEnter(MouseEventArgs)\n  nameWithType: UIElement3D.OnMouseEnter(MouseEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseEnter(MouseEventArgs)\n- uid: System.Windows.UIElement3D.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseLeave(MouseEventArgs)\n  nameWithType: UIElement3D.OnMouseLeave(MouseEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseLeave(MouseEventArgs)\n- uid: System.Windows.UIElement3D.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseLeftButtonDown(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnMouseLeftButtonDown(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseLeftButtonDown(MouseButtonEventArgs)\n- uid: System.Windows.UIElement3D.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseLeftButtonUp(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnMouseLeftButtonUp(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseLeftButtonUp(MouseButtonEventArgs)\n- uid: System.Windows.UIElement3D.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseMove(MouseEventArgs)\n  nameWithType: UIElement3D.OnMouseMove(MouseEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseMove(MouseEventArgs)\n- uid: System.Windows.UIElement3D.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseRightButtonDown(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnMouseRightButtonDown(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseRightButtonDown(MouseButtonEventArgs)\n- uid: System.Windows.UIElement3D.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseRightButtonUp(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnMouseRightButtonUp(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseRightButtonUp(MouseButtonEventArgs)\n- uid: System.Windows.UIElement3D.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseUp(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnMouseUp(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseUp(MouseButtonEventArgs)\n- uid: System.Windows.UIElement3D.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseWheel(MouseWheelEventArgs)\n  nameWithType: UIElement3D.OnMouseWheel(MouseWheelEventArgs)\n  fullName: System.Windows.UIElement3D.OnMouseWheel(MouseWheelEventArgs)\n- uid: System.Windows.Input.MouseWheelEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseWheelEventArgs\n  nameWithType: MouseWheelEventArgs\n  fullName: System.Windows.Input.MouseWheelEventArgs\n- uid: System.Windows.UIElement3D.OnPreviewDragEnter(System.Windows.DragEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewDragEnter(DragEventArgs)\n  nameWithType: UIElement3D.OnPreviewDragEnter(DragEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewDragEnter(DragEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewDragLeave(System.Windows.DragEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewDragLeave(DragEventArgs)\n  nameWithType: UIElement3D.OnPreviewDragLeave(DragEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewDragLeave(DragEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewDragOver(System.Windows.DragEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewDragOver(DragEventArgs)\n  nameWithType: UIElement3D.OnPreviewDragOver(DragEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewDragOver(DragEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewDrop(System.Windows.DragEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewDrop(DragEventArgs)\n  nameWithType: UIElement3D.OnPreviewDrop(DragEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewDrop(DragEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewGiveFeedback(GiveFeedbackEventArgs)\n  nameWithType: UIElement3D.OnPreviewGiveFeedback(GiveFeedbackEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewGiveFeedback(GiveFeedbackEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)\n  nameWithType: UIElement3D.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewKeyDown(KeyEventArgs)\n  nameWithType: UIElement3D.OnPreviewKeyDown(KeyEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewKeyDown(KeyEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewKeyUp(KeyEventArgs)\n  nameWithType: UIElement3D.OnPreviewKeyUp(KeyEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewKeyUp(KeyEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  nameWithType: UIElement3D.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewMouseDown(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnPreviewMouseDown(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewMouseDown(MouseButtonEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewMouseMove(MouseEventArgs)\n  nameWithType: UIElement3D.OnPreviewMouseMove(MouseEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewMouseMove(MouseEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewMouseRightButtonDown(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewMouseRightButtonUp(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewMouseUp(MouseButtonEventArgs)\n  nameWithType: UIElement3D.OnPreviewMouseUp(MouseButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewMouseUp(MouseButtonEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewMouseWheel(MouseWheelEventArgs)\n  nameWithType: UIElement3D.OnPreviewMouseWheel(MouseWheelEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewMouseWheel(MouseWheelEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)\n  nameWithType: UIElement3D.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)\n- uid: System.Windows.QueryContinueDragEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: QueryContinueDragEventArgs\n  nameWithType: QueryContinueDragEventArgs\n  fullName: System.Windows.QueryContinueDragEventArgs\n- uid: System.Windows.UIElement3D.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewStylusButtonDown(StylusButtonEventArgs)\n  nameWithType: UIElement3D.OnPreviewStylusButtonDown(StylusButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewStylusButtonDown(StylusButtonEventArgs)\n- uid: System.Windows.Input.StylusButtonEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: StylusButtonEventArgs\n  nameWithType: StylusButtonEventArgs\n  fullName: System.Windows.Input.StylusButtonEventArgs\n- uid: System.Windows.UIElement3D.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewStylusButtonUp(StylusButtonEventArgs)\n  nameWithType: UIElement3D.OnPreviewStylusButtonUp(StylusButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewStylusButtonUp(StylusButtonEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewStylusDown(StylusDownEventArgs)\n  nameWithType: UIElement3D.OnPreviewStylusDown(StylusDownEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewStylusDown(StylusDownEventArgs)\n- uid: System.Windows.Input.StylusDownEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: StylusDownEventArgs\n  nameWithType: StylusDownEventArgs\n  fullName: System.Windows.Input.StylusDownEventArgs\n- uid: System.Windows.UIElement3D.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewStylusInAirMove(StylusEventArgs)\n  nameWithType: UIElement3D.OnPreviewStylusInAirMove(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewStylusInAirMove(StylusEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewStylusInRange(StylusEventArgs)\n  nameWithType: UIElement3D.OnPreviewStylusInRange(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewStylusInRange(StylusEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewStylusMove(StylusEventArgs)\n  nameWithType: UIElement3D.OnPreviewStylusMove(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewStylusMove(StylusEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewStylusOutOfRange(StylusEventArgs)\n  nameWithType: UIElement3D.OnPreviewStylusOutOfRange(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewStylusOutOfRange(StylusEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)\n  nameWithType: UIElement3D.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)\n- uid: System.Windows.Input.StylusSystemGestureEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: StylusSystemGestureEventArgs\n  nameWithType: StylusSystemGestureEventArgs\n  fullName: System.Windows.Input.StylusSystemGestureEventArgs\n- uid: System.Windows.UIElement3D.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewStylusUp(StylusEventArgs)\n  nameWithType: UIElement3D.OnPreviewStylusUp(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewStylusUp(StylusEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewTextInput(TextCompositionEventArgs)\n  nameWithType: UIElement3D.OnPreviewTextInput(TextCompositionEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewTextInput(TextCompositionEventArgs)\n- uid: System.Windows.Input.TextCompositionEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: TextCompositionEventArgs\n  nameWithType: TextCompositionEventArgs\n  fullName: System.Windows.Input.TextCompositionEventArgs\n- uid: System.Windows.UIElement3D.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewTouchDown(TouchEventArgs)\n  nameWithType: UIElement3D.OnPreviewTouchDown(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewTouchDown(TouchEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewTouchMove(TouchEventArgs)\n  nameWithType: UIElement3D.OnPreviewTouchMove(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewTouchMove(TouchEventArgs)\n- uid: System.Windows.UIElement3D.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewTouchUp(TouchEventArgs)\n  nameWithType: UIElement3D.OnPreviewTouchUp(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnPreviewTouchUp(TouchEventArgs)\n- uid: System.Windows.UIElement3D.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnQueryContinueDrag(QueryContinueDragEventArgs)\n  nameWithType: UIElement3D.OnQueryContinueDrag(QueryContinueDragEventArgs)\n  fullName: System.Windows.UIElement3D.OnQueryContinueDrag(QueryContinueDragEventArgs)\n- uid: System.Windows.UIElement3D.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnQueryCursor(QueryCursorEventArgs)\n  nameWithType: UIElement3D.OnQueryCursor(QueryCursorEventArgs)\n  fullName: System.Windows.UIElement3D.OnQueryCursor(QueryCursorEventArgs)\n- uid: System.Windows.Input.QueryCursorEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: QueryCursorEventArgs\n  nameWithType: QueryCursorEventArgs\n  fullName: System.Windows.Input.QueryCursorEventArgs\n- uid: System.Windows.UIElement3D.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusButtonDown(StylusButtonEventArgs)\n  nameWithType: UIElement3D.OnStylusButtonDown(StylusButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusButtonDown(StylusButtonEventArgs)\n- uid: System.Windows.UIElement3D.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusButtonUp(StylusButtonEventArgs)\n  nameWithType: UIElement3D.OnStylusButtonUp(StylusButtonEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusButtonUp(StylusButtonEventArgs)\n- uid: System.Windows.UIElement3D.OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusDown(StylusDownEventArgs)\n  nameWithType: UIElement3D.OnStylusDown(StylusDownEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusDown(StylusDownEventArgs)\n- uid: System.Windows.UIElement3D.OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusEnter(StylusEventArgs)\n  nameWithType: UIElement3D.OnStylusEnter(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusEnter(StylusEventArgs)\n- uid: System.Windows.UIElement3D.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusInAirMove(StylusEventArgs)\n  nameWithType: UIElement3D.OnStylusInAirMove(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusInAirMove(StylusEventArgs)\n- uid: System.Windows.UIElement3D.OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusInRange(StylusEventArgs)\n  nameWithType: UIElement3D.OnStylusInRange(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusInRange(StylusEventArgs)\n- uid: System.Windows.UIElement3D.OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusLeave(StylusEventArgs)\n  nameWithType: UIElement3D.OnStylusLeave(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusLeave(StylusEventArgs)\n- uid: System.Windows.UIElement3D.OnStylusMove(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusMove(StylusEventArgs)\n  nameWithType: UIElement3D.OnStylusMove(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusMove(StylusEventArgs)\n- uid: System.Windows.UIElement3D.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusOutOfRange(StylusEventArgs)\n  nameWithType: UIElement3D.OnStylusOutOfRange(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusOutOfRange(StylusEventArgs)\n- uid: System.Windows.UIElement3D.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusSystemGesture(StylusSystemGestureEventArgs)\n  nameWithType: UIElement3D.OnStylusSystemGesture(StylusSystemGestureEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusSystemGesture(StylusSystemGestureEventArgs)\n- uid: System.Windows.UIElement3D.OnStylusUp(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusUp(StylusEventArgs)\n  nameWithType: UIElement3D.OnStylusUp(StylusEventArgs)\n  fullName: System.Windows.UIElement3D.OnStylusUp(StylusEventArgs)\n- uid: System.Windows.UIElement3D.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnTextInput(TextCompositionEventArgs)\n  nameWithType: UIElement3D.OnTextInput(TextCompositionEventArgs)\n  fullName: System.Windows.UIElement3D.OnTextInput(TextCompositionEventArgs)\n- uid: System.Windows.UIElement3D.OnTouchDown(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnTouchDown(TouchEventArgs)\n  nameWithType: UIElement3D.OnTouchDown(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnTouchDown(TouchEventArgs)\n- uid: System.Windows.UIElement3D.OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnTouchEnter(TouchEventArgs)\n  nameWithType: UIElement3D.OnTouchEnter(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnTouchEnter(TouchEventArgs)\n- uid: System.Windows.UIElement3D.OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnTouchLeave(TouchEventArgs)\n  nameWithType: UIElement3D.OnTouchLeave(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnTouchLeave(TouchEventArgs)\n- uid: System.Windows.UIElement3D.OnTouchMove(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnTouchMove(TouchEventArgs)\n  nameWithType: UIElement3D.OnTouchMove(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnTouchMove(TouchEventArgs)\n- uid: System.Windows.UIElement3D.OnTouchUp(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnTouchUp(TouchEventArgs)\n  nameWithType: UIElement3D.OnTouchUp(TouchEventArgs)\n  fullName: System.Windows.UIElement3D.OnTouchUp(TouchEventArgs)\n- uid: System.Windows.UIElement3D.OnUpdateModel\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnUpdateModel()\n  nameWithType: UIElement3D.OnUpdateModel()\n  fullName: System.Windows.UIElement3D.OnUpdateModel()\n- uid: System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnVisualParentChanged(DependencyObject)\n  nameWithType: UIElement3D.OnVisualParentChanged(DependencyObject)\n  fullName: System.Windows.UIElement3D.OnVisualParentChanged(DependencyObject)\n- uid: System.Windows.UIElement3D.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PredictFocus(FocusNavigationDirection)\n  nameWithType: UIElement3D.PredictFocus(FocusNavigationDirection)\n  fullName: System.Windows.UIElement3D.PredictFocus(FocusNavigationDirection)\n- uid: System.Windows.Input.FocusNavigationDirection\n  parent: System.Windows.Input\n  isExternal: false\n  name: FocusNavigationDirection\n  nameWithType: FocusNavigationDirection\n  fullName: System.Windows.Input.FocusNavigationDirection\n- uid: System.Windows.UIElement3D.PreviewDragEnter\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewDragEnter\n  nameWithType: UIElement3D.PreviewDragEnter\n  fullName: System.Windows.UIElement3D.PreviewDragEnter\n- uid: System.Windows.UIElement3D.PreviewDragEnterEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewDragEnterEvent\n  nameWithType: UIElement3D.PreviewDragEnterEvent\n  fullName: System.Windows.UIElement3D.PreviewDragEnterEvent\n- uid: System.Windows.UIElement3D.PreviewDragLeave\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewDragLeave\n  nameWithType: UIElement3D.PreviewDragLeave\n  fullName: System.Windows.UIElement3D.PreviewDragLeave\n- uid: System.Windows.UIElement3D.PreviewDragLeaveEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewDragLeaveEvent\n  nameWithType: UIElement3D.PreviewDragLeaveEvent\n  fullName: System.Windows.UIElement3D.PreviewDragLeaveEvent\n- uid: System.Windows.UIElement3D.PreviewDragOver\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewDragOver\n  nameWithType: UIElement3D.PreviewDragOver\n  fullName: System.Windows.UIElement3D.PreviewDragOver\n- uid: System.Windows.UIElement3D.PreviewDragOverEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewDragOverEvent\n  nameWithType: UIElement3D.PreviewDragOverEvent\n  fullName: System.Windows.UIElement3D.PreviewDragOverEvent\n- uid: System.Windows.UIElement3D.PreviewDrop\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewDrop\n  nameWithType: UIElement3D.PreviewDrop\n  fullName: System.Windows.UIElement3D.PreviewDrop\n- uid: System.Windows.UIElement3D.PreviewDropEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewDropEvent\n  nameWithType: UIElement3D.PreviewDropEvent\n  fullName: System.Windows.UIElement3D.PreviewDropEvent\n- uid: System.Windows.UIElement3D.PreviewGiveFeedback\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewGiveFeedback\n  nameWithType: UIElement3D.PreviewGiveFeedback\n  fullName: System.Windows.UIElement3D.PreviewGiveFeedback\n- uid: System.Windows.UIElement3D.PreviewGiveFeedbackEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewGiveFeedbackEvent\n  nameWithType: UIElement3D.PreviewGiveFeedbackEvent\n  fullName: System.Windows.UIElement3D.PreviewGiveFeedbackEvent\n- uid: System.Windows.UIElement3D.PreviewGotKeyboardFocus\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewGotKeyboardFocus\n  nameWithType: UIElement3D.PreviewGotKeyboardFocus\n  fullName: System.Windows.UIElement3D.PreviewGotKeyboardFocus\n- uid: System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewGotKeyboardFocusEvent\n  nameWithType: UIElement3D.PreviewGotKeyboardFocusEvent\n  fullName: System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent\n- uid: System.Windows.UIElement3D.PreviewKeyDown\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewKeyDown\n  nameWithType: UIElement3D.PreviewKeyDown\n  fullName: System.Windows.UIElement3D.PreviewKeyDown\n- uid: System.Windows.UIElement3D.PreviewKeyDownEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewKeyDownEvent\n  nameWithType: UIElement3D.PreviewKeyDownEvent\n  fullName: System.Windows.UIElement3D.PreviewKeyDownEvent\n- uid: System.Windows.UIElement3D.PreviewKeyUp\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewKeyUp\n  nameWithType: UIElement3D.PreviewKeyUp\n  fullName: System.Windows.UIElement3D.PreviewKeyUp\n- uid: System.Windows.UIElement3D.PreviewKeyUpEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewKeyUpEvent\n  nameWithType: UIElement3D.PreviewKeyUpEvent\n  fullName: System.Windows.UIElement3D.PreviewKeyUpEvent\n- uid: System.Windows.UIElement3D.PreviewLostKeyboardFocus\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewLostKeyboardFocus\n  nameWithType: UIElement3D.PreviewLostKeyboardFocus\n  fullName: System.Windows.UIElement3D.PreviewLostKeyboardFocus\n- uid: System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewLostKeyboardFocusEvent\n  nameWithType: UIElement3D.PreviewLostKeyboardFocusEvent\n  fullName: System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent\n- uid: System.Windows.UIElement3D.PreviewMouseDown\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewMouseDown\n  nameWithType: UIElement3D.PreviewMouseDown\n  fullName: System.Windows.UIElement3D.PreviewMouseDown\n- uid: System.Windows.UIElement3D.PreviewMouseDownEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewMouseDownEvent\n  nameWithType: UIElement3D.PreviewMouseDownEvent\n  fullName: System.Windows.UIElement3D.PreviewMouseDownEvent\n- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonDown\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewMouseLeftButtonDown\n  nameWithType: UIElement3D.PreviewMouseLeftButtonDown\n  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonDown\n- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewMouseLeftButtonDownEvent\n  nameWithType: UIElement3D.PreviewMouseLeftButtonDownEvent\n  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent\n- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonUp\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewMouseLeftButtonUp\n  nameWithType: UIElement3D.PreviewMouseLeftButtonUp\n  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonUp\n- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewMouseLeftButtonUpEvent\n  nameWithType: UIElement3D.PreviewMouseLeftButtonUpEvent\n  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent\n- uid: System.Windows.UIElement3D.PreviewMouseMove\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewMouseMove\n  nameWithType: UIElement3D.PreviewMouseMove\n  fullName: System.Windows.UIElement3D.PreviewMouseMove\n- uid: System.Windows.UIElement3D.PreviewMouseMoveEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewMouseMoveEvent\n  nameWithType: UIElement3D.PreviewMouseMoveEvent\n  fullName: System.Windows.UIElement3D.PreviewMouseMoveEvent\n- uid: System.Windows.UIElement3D.PreviewMouseRightButtonDown\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewMouseRightButtonDown\n  nameWithType: UIElement3D.PreviewMouseRightButtonDown\n  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonDown\n- uid: System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewMouseRightButtonDownEvent\n  nameWithType: UIElement3D.PreviewMouseRightButtonDownEvent\n  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent\n- uid: System.Windows.UIElement3D.PreviewMouseRightButtonUp\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewMouseRightButtonUp\n  nameWithType: UIElement3D.PreviewMouseRightButtonUp\n  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonUp\n- uid: System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewMouseRightButtonUpEvent\n  nameWithType: UIElement3D.PreviewMouseRightButtonUpEvent\n  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent\n- uid: System.Windows.UIElement3D.PreviewMouseUp\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewMouseUp\n  nameWithType: UIElement3D.PreviewMouseUp\n  fullName: System.Windows.UIElement3D.PreviewMouseUp\n- uid: System.Windows.UIElement3D.PreviewMouseUpEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewMouseUpEvent\n  nameWithType: UIElement3D.PreviewMouseUpEvent\n  fullName: System.Windows.UIElement3D.PreviewMouseUpEvent\n- uid: System.Windows.UIElement3D.PreviewMouseWheel\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewMouseWheel\n  nameWithType: UIElement3D.PreviewMouseWheel\n  fullName: System.Windows.UIElement3D.PreviewMouseWheel\n- uid: System.Windows.UIElement3D.PreviewMouseWheelEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewMouseWheelEvent\n  nameWithType: UIElement3D.PreviewMouseWheelEvent\n  fullName: System.Windows.UIElement3D.PreviewMouseWheelEvent\n- uid: System.Windows.UIElement3D.PreviewQueryContinueDrag\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewQueryContinueDrag\n  nameWithType: UIElement3D.PreviewQueryContinueDrag\n  fullName: System.Windows.UIElement3D.PreviewQueryContinueDrag\n- uid: System.Windows.QueryContinueDragEventHandler\n  parent: System.Windows\n  isExternal: false\n  name: QueryContinueDragEventHandler\n  nameWithType: QueryContinueDragEventHandler\n  fullName: System.Windows.QueryContinueDragEventHandler\n- uid: System.Windows.UIElement3D.PreviewQueryContinueDragEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewQueryContinueDragEvent\n  nameWithType: UIElement3D.PreviewQueryContinueDragEvent\n  fullName: System.Windows.UIElement3D.PreviewQueryContinueDragEvent\n- uid: System.Windows.UIElement3D.PreviewStylusButtonDown\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewStylusButtonDown\n  nameWithType: UIElement3D.PreviewStylusButtonDown\n  fullName: System.Windows.UIElement3D.PreviewStylusButtonDown\n- uid: System.Windows.Input.StylusButtonEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: StylusButtonEventHandler\n  nameWithType: StylusButtonEventHandler\n  fullName: System.Windows.Input.StylusButtonEventHandler\n- uid: System.Windows.UIElement3D.PreviewStylusButtonDownEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewStylusButtonDownEvent\n  nameWithType: UIElement3D.PreviewStylusButtonDownEvent\n  fullName: System.Windows.UIElement3D.PreviewStylusButtonDownEvent\n- uid: System.Windows.UIElement3D.PreviewStylusButtonUp\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewStylusButtonUp\n  nameWithType: UIElement3D.PreviewStylusButtonUp\n  fullName: System.Windows.UIElement3D.PreviewStylusButtonUp\n- uid: System.Windows.UIElement3D.PreviewStylusButtonUpEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewStylusButtonUpEvent\n  nameWithType: UIElement3D.PreviewStylusButtonUpEvent\n  fullName: System.Windows.UIElement3D.PreviewStylusButtonUpEvent\n- uid: System.Windows.UIElement3D.PreviewStylusDown\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewStylusDown\n  nameWithType: UIElement3D.PreviewStylusDown\n  fullName: System.Windows.UIElement3D.PreviewStylusDown\n- uid: System.Windows.Input.StylusDownEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: StylusDownEventHandler\n  nameWithType: StylusDownEventHandler\n  fullName: System.Windows.Input.StylusDownEventHandler\n- uid: System.Windows.UIElement3D.PreviewStylusDownEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewStylusDownEvent\n  nameWithType: UIElement3D.PreviewStylusDownEvent\n  fullName: System.Windows.UIElement3D.PreviewStylusDownEvent\n- uid: System.Windows.UIElement3D.PreviewStylusInAirMove\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewStylusInAirMove\n  nameWithType: UIElement3D.PreviewStylusInAirMove\n  fullName: System.Windows.UIElement3D.PreviewStylusInAirMove\n- uid: System.Windows.UIElement3D.PreviewStylusInAirMoveEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewStylusInAirMoveEvent\n  nameWithType: UIElement3D.PreviewStylusInAirMoveEvent\n  fullName: System.Windows.UIElement3D.PreviewStylusInAirMoveEvent\n- uid: System.Windows.UIElement3D.PreviewStylusInRange\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewStylusInRange\n  nameWithType: UIElement3D.PreviewStylusInRange\n  fullName: System.Windows.UIElement3D.PreviewStylusInRange\n- uid: System.Windows.UIElement3D.PreviewStylusInRangeEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewStylusInRangeEvent\n  nameWithType: UIElement3D.PreviewStylusInRangeEvent\n  fullName: System.Windows.UIElement3D.PreviewStylusInRangeEvent\n- uid: System.Windows.UIElement3D.PreviewStylusMove\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewStylusMove\n  nameWithType: UIElement3D.PreviewStylusMove\n  fullName: System.Windows.UIElement3D.PreviewStylusMove\n- uid: System.Windows.UIElement3D.PreviewStylusMoveEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewStylusMoveEvent\n  nameWithType: UIElement3D.PreviewStylusMoveEvent\n  fullName: System.Windows.UIElement3D.PreviewStylusMoveEvent\n- uid: System.Windows.UIElement3D.PreviewStylusOutOfRange\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewStylusOutOfRange\n  nameWithType: UIElement3D.PreviewStylusOutOfRange\n  fullName: System.Windows.UIElement3D.PreviewStylusOutOfRange\n- uid: System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewStylusOutOfRangeEvent\n  nameWithType: UIElement3D.PreviewStylusOutOfRangeEvent\n  fullName: System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent\n- uid: System.Windows.UIElement3D.PreviewStylusSystemGesture\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewStylusSystemGesture\n  nameWithType: UIElement3D.PreviewStylusSystemGesture\n  fullName: System.Windows.UIElement3D.PreviewStylusSystemGesture\n- uid: System.Windows.Input.StylusSystemGestureEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: StylusSystemGestureEventHandler\n  nameWithType: StylusSystemGestureEventHandler\n  fullName: System.Windows.Input.StylusSystemGestureEventHandler\n- uid: System.Windows.UIElement3D.PreviewStylusSystemGestureEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewStylusSystemGestureEvent\n  nameWithType: UIElement3D.PreviewStylusSystemGestureEvent\n  fullName: System.Windows.UIElement3D.PreviewStylusSystemGestureEvent\n- uid: System.Windows.UIElement3D.PreviewStylusUp\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewStylusUp\n  nameWithType: UIElement3D.PreviewStylusUp\n  fullName: System.Windows.UIElement3D.PreviewStylusUp\n- uid: System.Windows.UIElement3D.PreviewStylusUpEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewStylusUpEvent\n  nameWithType: UIElement3D.PreviewStylusUpEvent\n  fullName: System.Windows.UIElement3D.PreviewStylusUpEvent\n- uid: System.Windows.UIElement3D.PreviewTextInput\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewTextInput\n  nameWithType: UIElement3D.PreviewTextInput\n  fullName: System.Windows.UIElement3D.PreviewTextInput\n- uid: System.Windows.Input.TextCompositionEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: TextCompositionEventHandler\n  nameWithType: TextCompositionEventHandler\n  fullName: System.Windows.Input.TextCompositionEventHandler\n- uid: System.Windows.UIElement3D.PreviewTextInputEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewTextInputEvent\n  nameWithType: UIElement3D.PreviewTextInputEvent\n  fullName: System.Windows.UIElement3D.PreviewTextInputEvent\n- uid: System.Windows.UIElement3D.PreviewTouchDown\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewTouchDown\n  nameWithType: UIElement3D.PreviewTouchDown\n  fullName: System.Windows.UIElement3D.PreviewTouchDown\n- uid: System.Windows.UIElement3D.PreviewTouchDownEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewTouchDownEvent\n  nameWithType: UIElement3D.PreviewTouchDownEvent\n  fullName: System.Windows.UIElement3D.PreviewTouchDownEvent\n- uid: System.Windows.UIElement3D.PreviewTouchMove\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewTouchMove\n  nameWithType: UIElement3D.PreviewTouchMove\n  fullName: System.Windows.UIElement3D.PreviewTouchMove\n- uid: System.Windows.UIElement3D.PreviewTouchMoveEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewTouchMoveEvent\n  nameWithType: UIElement3D.PreviewTouchMoveEvent\n  fullName: System.Windows.UIElement3D.PreviewTouchMoveEvent\n- uid: System.Windows.UIElement3D.PreviewTouchUp\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewTouchUp\n  nameWithType: UIElement3D.PreviewTouchUp\n  fullName: System.Windows.UIElement3D.PreviewTouchUp\n- uid: System.Windows.UIElement3D.PreviewTouchUpEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PreviewTouchUpEvent\n  nameWithType: UIElement3D.PreviewTouchUpEvent\n  fullName: System.Windows.UIElement3D.PreviewTouchUpEvent\n- uid: System.Windows.UIElement3D.QueryContinueDrag\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: QueryContinueDrag\n  nameWithType: UIElement3D.QueryContinueDrag\n  fullName: System.Windows.UIElement3D.QueryContinueDrag\n- uid: System.Windows.UIElement3D.QueryContinueDragEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: QueryContinueDragEvent\n  nameWithType: UIElement3D.QueryContinueDragEvent\n  fullName: System.Windows.UIElement3D.QueryContinueDragEvent\n- uid: System.Windows.UIElement3D.QueryCursor\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: QueryCursor\n  nameWithType: UIElement3D.QueryCursor\n  fullName: System.Windows.UIElement3D.QueryCursor\n- uid: System.Windows.Input.QueryCursorEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: QueryCursorEventHandler\n  nameWithType: QueryCursorEventHandler\n  fullName: System.Windows.Input.QueryCursorEventHandler\n- uid: System.Windows.UIElement3D.QueryCursorEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: QueryCursorEvent\n  nameWithType: UIElement3D.QueryCursorEvent\n  fullName: System.Windows.UIElement3D.QueryCursorEvent\n- uid: System.Windows.UIElement3D.RaiseEvent(System.Windows.RoutedEventArgs)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: RaiseEvent(RoutedEventArgs)\n  nameWithType: UIElement3D.RaiseEvent(RoutedEventArgs)\n  fullName: System.Windows.UIElement3D.RaiseEvent(RoutedEventArgs)\n- uid: System.Windows.UIElement3D.ReleaseAllTouchCaptures\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: ReleaseAllTouchCaptures()\n  nameWithType: UIElement3D.ReleaseAllTouchCaptures()\n  fullName: System.Windows.UIElement3D.ReleaseAllTouchCaptures()\n- uid: System.Windows.UIElement3D.ReleaseMouseCapture\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: ReleaseMouseCapture()\n  nameWithType: UIElement3D.ReleaseMouseCapture()\n  fullName: System.Windows.UIElement3D.ReleaseMouseCapture()\n- uid: System.Windows.UIElement3D.ReleaseStylusCapture\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: ReleaseStylusCapture()\n  nameWithType: UIElement3D.ReleaseStylusCapture()\n  fullName: System.Windows.UIElement3D.ReleaseStylusCapture()\n- uid: System.Windows.UIElement3D.ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: ReleaseTouchCapture(TouchDevice)\n  nameWithType: UIElement3D.ReleaseTouchCapture(TouchDevice)\n  fullName: System.Windows.UIElement3D.ReleaseTouchCapture(TouchDevice)\n- uid: System.Windows.UIElement3D.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: RemoveHandler(RoutedEvent,Delegate)\n  nameWithType: UIElement3D.RemoveHandler(RoutedEvent,Delegate)\n  fullName: System.Windows.UIElement3D.RemoveHandler(RoutedEvent,Delegate)\n- uid: System.Windows.UIElement3D.ShouldSerializeCommandBindings\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: ShouldSerializeCommandBindings()\n  nameWithType: UIElement3D.ShouldSerializeCommandBindings()\n  fullName: System.Windows.UIElement3D.ShouldSerializeCommandBindings()\n- uid: System.Windows.UIElement3D.ShouldSerializeInputBindings\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: ShouldSerializeInputBindings()\n  nameWithType: UIElement3D.ShouldSerializeInputBindings()\n  fullName: System.Windows.UIElement3D.ShouldSerializeInputBindings()\n- uid: System.Windows.UIElement3D.StylusButtonDown\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusButtonDown\n  nameWithType: UIElement3D.StylusButtonDown\n  fullName: System.Windows.UIElement3D.StylusButtonDown\n- uid: System.Windows.UIElement3D.StylusButtonDownEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusButtonDownEvent\n  nameWithType: UIElement3D.StylusButtonDownEvent\n  fullName: System.Windows.UIElement3D.StylusButtonDownEvent\n- uid: System.Windows.UIElement3D.StylusButtonUp\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusButtonUp\n  nameWithType: UIElement3D.StylusButtonUp\n  fullName: System.Windows.UIElement3D.StylusButtonUp\n- uid: System.Windows.UIElement3D.StylusButtonUpEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusButtonUpEvent\n  nameWithType: UIElement3D.StylusButtonUpEvent\n  fullName: System.Windows.UIElement3D.StylusButtonUpEvent\n- uid: System.Windows.UIElement3D.StylusDown\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusDown\n  nameWithType: UIElement3D.StylusDown\n  fullName: System.Windows.UIElement3D.StylusDown\n- uid: System.Windows.UIElement3D.StylusDownEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusDownEvent\n  nameWithType: UIElement3D.StylusDownEvent\n  fullName: System.Windows.UIElement3D.StylusDownEvent\n- uid: System.Windows.UIElement3D.StylusEnter\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusEnter\n  nameWithType: UIElement3D.StylusEnter\n  fullName: System.Windows.UIElement3D.StylusEnter\n- uid: System.Windows.UIElement3D.StylusEnterEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusEnterEvent\n  nameWithType: UIElement3D.StylusEnterEvent\n  fullName: System.Windows.UIElement3D.StylusEnterEvent\n- uid: System.Windows.UIElement3D.StylusInAirMove\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusInAirMove\n  nameWithType: UIElement3D.StylusInAirMove\n  fullName: System.Windows.UIElement3D.StylusInAirMove\n- uid: System.Windows.UIElement3D.StylusInAirMoveEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusInAirMoveEvent\n  nameWithType: UIElement3D.StylusInAirMoveEvent\n  fullName: System.Windows.UIElement3D.StylusInAirMoveEvent\n- uid: System.Windows.UIElement3D.StylusInRange\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusInRange\n  nameWithType: UIElement3D.StylusInRange\n  fullName: System.Windows.UIElement3D.StylusInRange\n- uid: System.Windows.UIElement3D.StylusInRangeEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusInRangeEvent\n  nameWithType: UIElement3D.StylusInRangeEvent\n  fullName: System.Windows.UIElement3D.StylusInRangeEvent\n- uid: System.Windows.UIElement3D.StylusLeave\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusLeave\n  nameWithType: UIElement3D.StylusLeave\n  fullName: System.Windows.UIElement3D.StylusLeave\n- uid: System.Windows.UIElement3D.StylusLeaveEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusLeaveEvent\n  nameWithType: UIElement3D.StylusLeaveEvent\n  fullName: System.Windows.UIElement3D.StylusLeaveEvent\n- uid: System.Windows.UIElement3D.StylusMove\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusMove\n  nameWithType: UIElement3D.StylusMove\n  fullName: System.Windows.UIElement3D.StylusMove\n- uid: System.Windows.UIElement3D.StylusMoveEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusMoveEvent\n  nameWithType: UIElement3D.StylusMoveEvent\n  fullName: System.Windows.UIElement3D.StylusMoveEvent\n- uid: System.Windows.UIElement3D.StylusOutOfRange\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusOutOfRange\n  nameWithType: UIElement3D.StylusOutOfRange\n  fullName: System.Windows.UIElement3D.StylusOutOfRange\n- uid: System.Windows.UIElement3D.StylusOutOfRangeEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusOutOfRangeEvent\n  nameWithType: UIElement3D.StylusOutOfRangeEvent\n  fullName: System.Windows.UIElement3D.StylusOutOfRangeEvent\n- uid: System.Windows.UIElement3D.StylusSystemGesture\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusSystemGesture\n  nameWithType: UIElement3D.StylusSystemGesture\n  fullName: System.Windows.UIElement3D.StylusSystemGesture\n- uid: System.Windows.UIElement3D.StylusSystemGestureEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusSystemGestureEvent\n  nameWithType: UIElement3D.StylusSystemGestureEvent\n  fullName: System.Windows.UIElement3D.StylusSystemGestureEvent\n- uid: System.Windows.UIElement3D.StylusUp\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusUp\n  nameWithType: UIElement3D.StylusUp\n  fullName: System.Windows.UIElement3D.StylusUp\n- uid: System.Windows.UIElement3D.StylusUpEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: StylusUpEvent\n  nameWithType: UIElement3D.StylusUpEvent\n  fullName: System.Windows.UIElement3D.StylusUpEvent\n- uid: System.Windows.UIElement3D.TextInput\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TextInput\n  nameWithType: UIElement3D.TextInput\n  fullName: System.Windows.UIElement3D.TextInput\n- uid: System.Windows.UIElement3D.TextInputEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TextInputEvent\n  nameWithType: UIElement3D.TextInputEvent\n  fullName: System.Windows.UIElement3D.TextInputEvent\n- uid: System.Windows.UIElement3D.TouchDown\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TouchDown\n  nameWithType: UIElement3D.TouchDown\n  fullName: System.Windows.UIElement3D.TouchDown\n- uid: System.Windows.UIElement3D.TouchDownEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TouchDownEvent\n  nameWithType: UIElement3D.TouchDownEvent\n  fullName: System.Windows.UIElement3D.TouchDownEvent\n- uid: System.Windows.UIElement3D.TouchEnter\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TouchEnter\n  nameWithType: UIElement3D.TouchEnter\n  fullName: System.Windows.UIElement3D.TouchEnter\n- uid: System.Windows.UIElement3D.TouchEnterEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TouchEnterEvent\n  nameWithType: UIElement3D.TouchEnterEvent\n  fullName: System.Windows.UIElement3D.TouchEnterEvent\n- uid: System.Windows.UIElement3D.TouchesCaptured\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TouchesCaptured\n  nameWithType: UIElement3D.TouchesCaptured\n  fullName: System.Windows.UIElement3D.TouchesCaptured\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<TouchDevice>\n  nameWithType: IEnumerable<TouchDevice>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Windows.Input.TouchDevice>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Input.TouchDevice\n    name: TouchDevice\n    nameWithType: TouchDevice\n    fullName: TouchDevice\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.UIElement3D.TouchesCapturedWithin\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TouchesCapturedWithin\n  nameWithType: UIElement3D.TouchesCapturedWithin\n  fullName: System.Windows.UIElement3D.TouchesCapturedWithin\n- uid: System.Windows.UIElement3D.TouchesDirectlyOver\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TouchesDirectlyOver\n  nameWithType: UIElement3D.TouchesDirectlyOver\n  fullName: System.Windows.UIElement3D.TouchesDirectlyOver\n- uid: System.Windows.UIElement3D.TouchesOver\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TouchesOver\n  nameWithType: UIElement3D.TouchesOver\n  fullName: System.Windows.UIElement3D.TouchesOver\n- uid: System.Windows.UIElement3D.TouchLeave\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TouchLeave\n  nameWithType: UIElement3D.TouchLeave\n  fullName: System.Windows.UIElement3D.TouchLeave\n- uid: System.Windows.UIElement3D.TouchLeaveEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TouchLeaveEvent\n  nameWithType: UIElement3D.TouchLeaveEvent\n  fullName: System.Windows.UIElement3D.TouchLeaveEvent\n- uid: System.Windows.UIElement3D.TouchMove\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TouchMove\n  nameWithType: UIElement3D.TouchMove\n  fullName: System.Windows.UIElement3D.TouchMove\n- uid: System.Windows.UIElement3D.TouchMoveEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TouchMoveEvent\n  nameWithType: UIElement3D.TouchMoveEvent\n  fullName: System.Windows.UIElement3D.TouchMoveEvent\n- uid: System.Windows.UIElement3D.TouchUp\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TouchUp\n  nameWithType: UIElement3D.TouchUp\n  fullName: System.Windows.UIElement3D.TouchUp\n- uid: System.Windows.UIElement3D.TouchUpEvent\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TouchUpEvent\n  nameWithType: UIElement3D.TouchUpEvent\n  fullName: System.Windows.UIElement3D.TouchUpEvent\n- uid: System.Windows.UIElement3D.Visibility\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: Visibility\n  nameWithType: UIElement3D.Visibility\n  fullName: System.Windows.UIElement3D.Visibility\n- uid: System.Windows.Visibility\n  parent: System.Windows\n  isExternal: false\n  name: Visibility\n  nameWithType: Visibility\n  fullName: System.Windows.Visibility\n- uid: System.Windows.UIElement3D.VisibilityProperty\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: VisibilityProperty\n  nameWithType: UIElement3D.VisibilityProperty\n  fullName: System.Windows.UIElement3D.VisibilityProperty\n- uid: System.Windows.UIElement3D.#ctor*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: UIElement3D\n  nameWithType: UIElement3D.UIElement3D\n- uid: System.Windows.UIElement3D.AddHandler*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AddHandler\n  nameWithType: UIElement3D.AddHandler\n- uid: System.Windows.UIElement3D.AddToEventRoute*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AddToEventRoute\n  nameWithType: UIElement3D.AddToEventRoute\n- uid: System.Windows.UIElement3D.AllowDrop*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AllowDrop\n  nameWithType: UIElement3D.AllowDrop\n- uid: System.Windows.UIElement3D.AreAnyTouchesCaptured*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AreAnyTouchesCaptured\n  nameWithType: UIElement3D.AreAnyTouchesCaptured\n- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedWithin*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AreAnyTouchesCapturedWithin\n  nameWithType: UIElement3D.AreAnyTouchesCapturedWithin\n- uid: System.Windows.UIElement3D.AreAnyTouchesDirectlyOver*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AreAnyTouchesDirectlyOver\n  nameWithType: UIElement3D.AreAnyTouchesDirectlyOver\n- uid: System.Windows.UIElement3D.AreAnyTouchesOver*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: AreAnyTouchesOver\n  nameWithType: UIElement3D.AreAnyTouchesOver\n- uid: System.Windows.UIElement3D.CaptureMouse*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: CaptureMouse\n  nameWithType: UIElement3D.CaptureMouse\n- uid: System.Windows.UIElement3D.CaptureStylus*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: CaptureStylus\n  nameWithType: UIElement3D.CaptureStylus\n- uid: System.Windows.UIElement3D.CaptureTouch*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: CaptureTouch\n  nameWithType: UIElement3D.CaptureTouch\n- uid: System.Windows.UIElement3D.CommandBindings*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: CommandBindings\n  nameWithType: UIElement3D.CommandBindings\n- uid: System.Windows.UIElement3D.Focus*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: Focus\n  nameWithType: UIElement3D.Focus\n- uid: System.Windows.UIElement3D.Focusable*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: Focusable\n  nameWithType: UIElement3D.Focusable\n- uid: System.Windows.UIElement3D.GetUIParentCore*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: GetUIParentCore\n  nameWithType: UIElement3D.GetUIParentCore\n- uid: System.Windows.UIElement3D.InputBindings*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: InputBindings\n  nameWithType: UIElement3D.InputBindings\n- uid: System.Windows.UIElement3D.InvalidateModel*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: InvalidateModel\n  nameWithType: UIElement3D.InvalidateModel\n- uid: System.Windows.UIElement3D.IsEnabled*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsEnabled\n  nameWithType: UIElement3D.IsEnabled\n- uid: System.Windows.UIElement3D.IsEnabledCore*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsEnabledCore\n  nameWithType: UIElement3D.IsEnabledCore\n- uid: System.Windows.UIElement3D.IsFocused*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsFocused\n  nameWithType: UIElement3D.IsFocused\n- uid: System.Windows.UIElement3D.IsHitTestVisible*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsHitTestVisible\n  nameWithType: UIElement3D.IsHitTestVisible\n- uid: System.Windows.UIElement3D.IsInputMethodEnabled*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsInputMethodEnabled\n  nameWithType: UIElement3D.IsInputMethodEnabled\n- uid: System.Windows.UIElement3D.IsKeyboardFocused*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsKeyboardFocused\n  nameWithType: UIElement3D.IsKeyboardFocused\n- uid: System.Windows.UIElement3D.IsKeyboardFocusWithin*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsKeyboardFocusWithin\n  nameWithType: UIElement3D.IsKeyboardFocusWithin\n- uid: System.Windows.UIElement3D.IsMouseCaptured*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsMouseCaptured\n  nameWithType: UIElement3D.IsMouseCaptured\n- uid: System.Windows.UIElement3D.IsMouseCaptureWithin*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsMouseCaptureWithin\n  nameWithType: UIElement3D.IsMouseCaptureWithin\n- uid: System.Windows.UIElement3D.IsMouseDirectlyOver*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsMouseDirectlyOver\n  nameWithType: UIElement3D.IsMouseDirectlyOver\n- uid: System.Windows.UIElement3D.IsMouseOver*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsMouseOver\n  nameWithType: UIElement3D.IsMouseOver\n- uid: System.Windows.UIElement3D.IsStylusCaptured*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsStylusCaptured\n  nameWithType: UIElement3D.IsStylusCaptured\n- uid: System.Windows.UIElement3D.IsStylusCaptureWithin*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsStylusCaptureWithin\n  nameWithType: UIElement3D.IsStylusCaptureWithin\n- uid: System.Windows.UIElement3D.IsStylusDirectlyOver*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsStylusDirectlyOver\n  nameWithType: UIElement3D.IsStylusDirectlyOver\n- uid: System.Windows.UIElement3D.IsStylusOver*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsStylusOver\n  nameWithType: UIElement3D.IsStylusOver\n- uid: System.Windows.UIElement3D.IsVisible*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: IsVisible\n  nameWithType: UIElement3D.IsVisible\n- uid: System.Windows.UIElement3D.MoveFocus*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: MoveFocus\n  nameWithType: UIElement3D.MoveFocus\n- uid: System.Windows.UIElement3D.OnAccessKey*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnAccessKey\n  nameWithType: UIElement3D.OnAccessKey\n- uid: System.Windows.UIElement3D.OnCreateAutomationPeer*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnCreateAutomationPeer\n  nameWithType: UIElement3D.OnCreateAutomationPeer\n- uid: System.Windows.UIElement3D.OnDragEnter*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnDragEnter\n  nameWithType: UIElement3D.OnDragEnter\n- uid: System.Windows.UIElement3D.OnDragLeave*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnDragLeave\n  nameWithType: UIElement3D.OnDragLeave\n- uid: System.Windows.UIElement3D.OnDragOver*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnDragOver\n  nameWithType: UIElement3D.OnDragOver\n- uid: System.Windows.UIElement3D.OnDrop*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnDrop\n  nameWithType: UIElement3D.OnDrop\n- uid: System.Windows.UIElement3D.OnGiveFeedback*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnGiveFeedback\n  nameWithType: UIElement3D.OnGiveFeedback\n- uid: System.Windows.UIElement3D.OnGotFocus*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnGotFocus\n  nameWithType: UIElement3D.OnGotFocus\n- uid: System.Windows.UIElement3D.OnGotKeyboardFocus*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnGotKeyboardFocus\n  nameWithType: UIElement3D.OnGotKeyboardFocus\n- uid: System.Windows.UIElement3D.OnGotMouseCapture*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnGotMouseCapture\n  nameWithType: UIElement3D.OnGotMouseCapture\n- uid: System.Windows.UIElement3D.OnGotStylusCapture*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnGotStylusCapture\n  nameWithType: UIElement3D.OnGotStylusCapture\n- uid: System.Windows.UIElement3D.OnGotTouchCapture*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnGotTouchCapture\n  nameWithType: UIElement3D.OnGotTouchCapture\n- uid: System.Windows.UIElement3D.OnIsKeyboardFocusedChanged*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnIsKeyboardFocusedChanged\n  nameWithType: UIElement3D.OnIsKeyboardFocusedChanged\n- uid: System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnIsKeyboardFocusWithinChanged\n  nameWithType: UIElement3D.OnIsKeyboardFocusWithinChanged\n- uid: System.Windows.UIElement3D.OnIsMouseCapturedChanged*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnIsMouseCapturedChanged\n  nameWithType: UIElement3D.OnIsMouseCapturedChanged\n- uid: System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnIsMouseCaptureWithinChanged\n  nameWithType: UIElement3D.OnIsMouseCaptureWithinChanged\n- uid: System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnIsMouseDirectlyOverChanged\n  nameWithType: UIElement3D.OnIsMouseDirectlyOverChanged\n- uid: System.Windows.UIElement3D.OnIsStylusCapturedChanged*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnIsStylusCapturedChanged\n  nameWithType: UIElement3D.OnIsStylusCapturedChanged\n- uid: System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnIsStylusCaptureWithinChanged\n  nameWithType: UIElement3D.OnIsStylusCaptureWithinChanged\n- uid: System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnIsStylusDirectlyOverChanged\n  nameWithType: UIElement3D.OnIsStylusDirectlyOverChanged\n- uid: System.Windows.UIElement3D.OnKeyDown*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnKeyDown\n  nameWithType: UIElement3D.OnKeyDown\n- uid: System.Windows.UIElement3D.OnKeyUp*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnKeyUp\n  nameWithType: UIElement3D.OnKeyUp\n- uid: System.Windows.UIElement3D.OnLostFocus*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnLostFocus\n  nameWithType: UIElement3D.OnLostFocus\n- uid: System.Windows.UIElement3D.OnLostKeyboardFocus*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnLostKeyboardFocus\n  nameWithType: UIElement3D.OnLostKeyboardFocus\n- uid: System.Windows.UIElement3D.OnLostMouseCapture*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnLostMouseCapture\n  nameWithType: UIElement3D.OnLostMouseCapture\n- uid: System.Windows.UIElement3D.OnLostStylusCapture*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnLostStylusCapture\n  nameWithType: UIElement3D.OnLostStylusCapture\n- uid: System.Windows.UIElement3D.OnLostTouchCapture*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnLostTouchCapture\n  nameWithType: UIElement3D.OnLostTouchCapture\n- uid: System.Windows.UIElement3D.OnMouseDown*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseDown\n  nameWithType: UIElement3D.OnMouseDown\n- uid: System.Windows.UIElement3D.OnMouseEnter*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseEnter\n  nameWithType: UIElement3D.OnMouseEnter\n- uid: System.Windows.UIElement3D.OnMouseLeave*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseLeave\n  nameWithType: UIElement3D.OnMouseLeave\n- uid: System.Windows.UIElement3D.OnMouseLeftButtonDown*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseLeftButtonDown\n  nameWithType: UIElement3D.OnMouseLeftButtonDown\n- uid: System.Windows.UIElement3D.OnMouseLeftButtonUp*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseLeftButtonUp\n  nameWithType: UIElement3D.OnMouseLeftButtonUp\n- uid: System.Windows.UIElement3D.OnMouseMove*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseMove\n  nameWithType: UIElement3D.OnMouseMove\n- uid: System.Windows.UIElement3D.OnMouseRightButtonDown*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseRightButtonDown\n  nameWithType: UIElement3D.OnMouseRightButtonDown\n- uid: System.Windows.UIElement3D.OnMouseRightButtonUp*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseRightButtonUp\n  nameWithType: UIElement3D.OnMouseRightButtonUp\n- uid: System.Windows.UIElement3D.OnMouseUp*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseUp\n  nameWithType: UIElement3D.OnMouseUp\n- uid: System.Windows.UIElement3D.OnMouseWheel*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnMouseWheel\n  nameWithType: UIElement3D.OnMouseWheel\n- uid: System.Windows.UIElement3D.OnPreviewDragEnter*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewDragEnter\n  nameWithType: UIElement3D.OnPreviewDragEnter\n- uid: System.Windows.UIElement3D.OnPreviewDragLeave*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewDragLeave\n  nameWithType: UIElement3D.OnPreviewDragLeave\n- uid: System.Windows.UIElement3D.OnPreviewDragOver*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewDragOver\n  nameWithType: UIElement3D.OnPreviewDragOver\n- uid: System.Windows.UIElement3D.OnPreviewDrop*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewDrop\n  nameWithType: UIElement3D.OnPreviewDrop\n- uid: System.Windows.UIElement3D.OnPreviewGiveFeedback*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewGiveFeedback\n  nameWithType: UIElement3D.OnPreviewGiveFeedback\n- uid: System.Windows.UIElement3D.OnPreviewGotKeyboardFocus*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewGotKeyboardFocus\n  nameWithType: UIElement3D.OnPreviewGotKeyboardFocus\n- uid: System.Windows.UIElement3D.OnPreviewKeyDown*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewKeyDown\n  nameWithType: UIElement3D.OnPreviewKeyDown\n- uid: System.Windows.UIElement3D.OnPreviewKeyUp*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewKeyUp\n  nameWithType: UIElement3D.OnPreviewKeyUp\n- uid: System.Windows.UIElement3D.OnPreviewLostKeyboardFocus*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewLostKeyboardFocus\n  nameWithType: UIElement3D.OnPreviewLostKeyboardFocus\n- uid: System.Windows.UIElement3D.OnPreviewMouseDown*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewMouseDown\n  nameWithType: UIElement3D.OnPreviewMouseDown\n- uid: System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewMouseLeftButtonDown\n  nameWithType: UIElement3D.OnPreviewMouseLeftButtonDown\n- uid: System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewMouseLeftButtonUp\n  nameWithType: UIElement3D.OnPreviewMouseLeftButtonUp\n- uid: System.Windows.UIElement3D.OnPreviewMouseMove*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewMouseMove\n  nameWithType: UIElement3D.OnPreviewMouseMove\n- uid: System.Windows.UIElement3D.OnPreviewMouseRightButtonDown*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewMouseRightButtonDown\n  nameWithType: UIElement3D.OnPreviewMouseRightButtonDown\n- uid: System.Windows.UIElement3D.OnPreviewMouseRightButtonUp*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewMouseRightButtonUp\n  nameWithType: UIElement3D.OnPreviewMouseRightButtonUp\n- uid: System.Windows.UIElement3D.OnPreviewMouseUp*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewMouseUp\n  nameWithType: UIElement3D.OnPreviewMouseUp\n- uid: System.Windows.UIElement3D.OnPreviewMouseWheel*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewMouseWheel\n  nameWithType: UIElement3D.OnPreviewMouseWheel\n- uid: System.Windows.UIElement3D.OnPreviewQueryContinueDrag*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewQueryContinueDrag\n  nameWithType: UIElement3D.OnPreviewQueryContinueDrag\n- uid: System.Windows.UIElement3D.OnPreviewStylusButtonDown*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewStylusButtonDown\n  nameWithType: UIElement3D.OnPreviewStylusButtonDown\n- uid: System.Windows.UIElement3D.OnPreviewStylusButtonUp*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewStylusButtonUp\n  nameWithType: UIElement3D.OnPreviewStylusButtonUp\n- uid: System.Windows.UIElement3D.OnPreviewStylusDown*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewStylusDown\n  nameWithType: UIElement3D.OnPreviewStylusDown\n- uid: System.Windows.UIElement3D.OnPreviewStylusInAirMove*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewStylusInAirMove\n  nameWithType: UIElement3D.OnPreviewStylusInAirMove\n- uid: System.Windows.UIElement3D.OnPreviewStylusInRange*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewStylusInRange\n  nameWithType: UIElement3D.OnPreviewStylusInRange\n- uid: System.Windows.UIElement3D.OnPreviewStylusMove*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewStylusMove\n  nameWithType: UIElement3D.OnPreviewStylusMove\n- uid: System.Windows.UIElement3D.OnPreviewStylusOutOfRange*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewStylusOutOfRange\n  nameWithType: UIElement3D.OnPreviewStylusOutOfRange\n- uid: System.Windows.UIElement3D.OnPreviewStylusSystemGesture*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewStylusSystemGesture\n  nameWithType: UIElement3D.OnPreviewStylusSystemGesture\n- uid: System.Windows.UIElement3D.OnPreviewStylusUp*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewStylusUp\n  nameWithType: UIElement3D.OnPreviewStylusUp\n- uid: System.Windows.UIElement3D.OnPreviewTextInput*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewTextInput\n  nameWithType: UIElement3D.OnPreviewTextInput\n- uid: System.Windows.UIElement3D.OnPreviewTouchDown*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewTouchDown\n  nameWithType: UIElement3D.OnPreviewTouchDown\n- uid: System.Windows.UIElement3D.OnPreviewTouchMove*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewTouchMove\n  nameWithType: UIElement3D.OnPreviewTouchMove\n- uid: System.Windows.UIElement3D.OnPreviewTouchUp*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnPreviewTouchUp\n  nameWithType: UIElement3D.OnPreviewTouchUp\n- uid: System.Windows.UIElement3D.OnQueryContinueDrag*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnQueryContinueDrag\n  nameWithType: UIElement3D.OnQueryContinueDrag\n- uid: System.Windows.UIElement3D.OnQueryCursor*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnQueryCursor\n  nameWithType: UIElement3D.OnQueryCursor\n- uid: System.Windows.UIElement3D.OnStylusButtonDown*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusButtonDown\n  nameWithType: UIElement3D.OnStylusButtonDown\n- uid: System.Windows.UIElement3D.OnStylusButtonUp*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusButtonUp\n  nameWithType: UIElement3D.OnStylusButtonUp\n- uid: System.Windows.UIElement3D.OnStylusDown*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusDown\n  nameWithType: UIElement3D.OnStylusDown\n- uid: System.Windows.UIElement3D.OnStylusEnter*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusEnter\n  nameWithType: UIElement3D.OnStylusEnter\n- uid: System.Windows.UIElement3D.OnStylusInAirMove*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusInAirMove\n  nameWithType: UIElement3D.OnStylusInAirMove\n- uid: System.Windows.UIElement3D.OnStylusInRange*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusInRange\n  nameWithType: UIElement3D.OnStylusInRange\n- uid: System.Windows.UIElement3D.OnStylusLeave*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusLeave\n  nameWithType: UIElement3D.OnStylusLeave\n- uid: System.Windows.UIElement3D.OnStylusMove*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusMove\n  nameWithType: UIElement3D.OnStylusMove\n- uid: System.Windows.UIElement3D.OnStylusOutOfRange*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusOutOfRange\n  nameWithType: UIElement3D.OnStylusOutOfRange\n- uid: System.Windows.UIElement3D.OnStylusSystemGesture*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusSystemGesture\n  nameWithType: UIElement3D.OnStylusSystemGesture\n- uid: System.Windows.UIElement3D.OnStylusUp*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnStylusUp\n  nameWithType: UIElement3D.OnStylusUp\n- uid: System.Windows.UIElement3D.OnTextInput*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnTextInput\n  nameWithType: UIElement3D.OnTextInput\n- uid: System.Windows.UIElement3D.OnTouchDown*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnTouchDown\n  nameWithType: UIElement3D.OnTouchDown\n- uid: System.Windows.UIElement3D.OnTouchEnter*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnTouchEnter\n  nameWithType: UIElement3D.OnTouchEnter\n- uid: System.Windows.UIElement3D.OnTouchLeave*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnTouchLeave\n  nameWithType: UIElement3D.OnTouchLeave\n- uid: System.Windows.UIElement3D.OnTouchMove*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnTouchMove\n  nameWithType: UIElement3D.OnTouchMove\n- uid: System.Windows.UIElement3D.OnTouchUp*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnTouchUp\n  nameWithType: UIElement3D.OnTouchUp\n- uid: System.Windows.UIElement3D.OnUpdateModel*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnUpdateModel\n  nameWithType: UIElement3D.OnUpdateModel\n- uid: System.Windows.UIElement3D.OnVisualParentChanged*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: OnVisualParentChanged\n  nameWithType: UIElement3D.OnVisualParentChanged\n- uid: System.Windows.UIElement3D.PredictFocus*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: PredictFocus\n  nameWithType: UIElement3D.PredictFocus\n- uid: System.Windows.UIElement3D.RaiseEvent*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: RaiseEvent\n  nameWithType: UIElement3D.RaiseEvent\n- uid: System.Windows.UIElement3D.ReleaseAllTouchCaptures*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: ReleaseAllTouchCaptures\n  nameWithType: UIElement3D.ReleaseAllTouchCaptures\n- uid: System.Windows.UIElement3D.ReleaseMouseCapture*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: ReleaseMouseCapture\n  nameWithType: UIElement3D.ReleaseMouseCapture\n- uid: System.Windows.UIElement3D.ReleaseStylusCapture*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: ReleaseStylusCapture\n  nameWithType: UIElement3D.ReleaseStylusCapture\n- uid: System.Windows.UIElement3D.ReleaseTouchCapture*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: ReleaseTouchCapture\n  nameWithType: UIElement3D.ReleaseTouchCapture\n- uid: System.Windows.UIElement3D.RemoveHandler*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: RemoveHandler\n  nameWithType: UIElement3D.RemoveHandler\n- uid: System.Windows.UIElement3D.ShouldSerializeCommandBindings*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: ShouldSerializeCommandBindings\n  nameWithType: UIElement3D.ShouldSerializeCommandBindings\n- uid: System.Windows.UIElement3D.ShouldSerializeInputBindings*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: ShouldSerializeInputBindings\n  nameWithType: UIElement3D.ShouldSerializeInputBindings\n- uid: System.Windows.UIElement3D.TouchesCaptured*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TouchesCaptured\n  nameWithType: UIElement3D.TouchesCaptured\n- uid: System.Windows.UIElement3D.TouchesCapturedWithin*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TouchesCapturedWithin\n  nameWithType: UIElement3D.TouchesCapturedWithin\n- uid: System.Windows.UIElement3D.TouchesDirectlyOver*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TouchesDirectlyOver\n  nameWithType: UIElement3D.TouchesDirectlyOver\n- uid: System.Windows.UIElement3D.TouchesOver*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: TouchesOver\n  nameWithType: UIElement3D.TouchesOver\n- uid: System.Windows.UIElement3D.Visibility*\n  parent: System.Windows.UIElement3D\n  isExternal: false\n  name: Visibility\n  nameWithType: UIElement3D.Visibility\n"}