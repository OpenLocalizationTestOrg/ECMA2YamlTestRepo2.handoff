{"nodes":[{"pos":[2048,2103],"content":"This class has been deprecated as of Visual Basic 2005.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class has been deprecated as of Visual Basic 2005.","pos":[0,55]}]},{"pos":[2115,2210],"content":"This class provides methods for manipulating data that potentially represents a <ph id=\"ph1\">`String`</ph> value.","needQuote":true,"needEscape":true,"source":"This class provides methods for manipulating data that potentially represents a `String` value."},{"pos":[2944,3126],"content":"Returns a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that corresponds to the specified <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to the specified <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref>."},{"pos":[3138,3239],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[3388,3552],"content":"Required. <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert to a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","pos":[10,164],"source":"<xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value."}]},{"pos":[3610,3721],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value corresponding to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">Value</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>."},{"pos":[4284,4460],"content":"Returns a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that corresponds to the specified <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Byte\" name=\"Byte\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to the specified <xref uid=\"langword_csharp_Byte\" name=\"Byte\" href=\"\"></xref>."},{"pos":[4472,4573],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[4716,4874],"content":"Required. <xref uid=\"langword_csharp_Byte\" name=\"Byte\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Byte\" name=\"Byte\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert to a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","pos":[10,158],"source":"<xref uid=\"langword_csharp_Byte\" name=\"Byte\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value."}]},{"pos":[4932,5043],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value corresponding to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">Value</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>."},{"pos":[5603,5779],"content":"Returns a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that corresponds to the specified <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Char\" name=\"Char\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to the specified <xref uid=\"langword_csharp_Char\" name=\"Char\" href=\"\"></xref>."},{"pos":[5791,5892],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[6035,6193],"content":"Required. <xref uid=\"langword_csharp_Char\" name=\"Char\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Char\" name=\"Char\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert to a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","pos":[10,158],"source":"<xref uid=\"langword_csharp_Char\" name=\"Char\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value."}]},{"pos":[6251,6362],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value corresponding to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">Value</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>."},{"pos":[6942,7062],"content":"Returns a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that corresponds to the specified date.","needQuote":true,"needEscape":true,"source":"Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to the specified date."},{"pos":[7074,7175],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[7326,7428],"content":"Required. Date to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Date to convert to a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","pos":[10,102],"source":" Date to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value."}]},{"pos":[7486,7597],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value corresponding to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">Value</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>."},{"pos":[8187,8369],"content":"Returns a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that corresponds to the specified <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to the specified <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref>."},{"pos":[8381,8482],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[8634,8798],"content":"Required. <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert to a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","pos":[10,164],"source":"<xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value."}]},{"pos":[8856,8967],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value corresponding to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">Value</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>."},{"pos":[9687,9897],"content":"Returns a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that corresponds to a specified <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and number format information.","needQuote":true,"needEscape":true,"source":"Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to a specified <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> and number format information."},{"pos":[9909,10010],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[10214,10378],"content":"Required. <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert to a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","pos":[10,164],"source":"<xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value."}]},{"pos":[10471,10611],"content":"A <xref:System.Globalization.NumberFormatInfo> object that defines how numeric values are formatted and displayed, depending on the culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Globalization.NumberFormatInfo&gt; object that defines how numeric values are formatted and displayed, depending on the culture.","pos":[0,140],"source":"A <xref:System.Globalization.NumberFormatInfo> object that defines how numeric values are formatted and displayed, depending on the culture."}]},{"pos":[10669,10780],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value corresponding to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">Value</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>."},{"pos":[11363,11541],"content":"Returns a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that corresponds to a specified <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to a specified <xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref>."},{"pos":[11553,11654],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[11803,11965],"content":"Required. <xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert to a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","pos":[10,162],"source":"<xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value."}]},{"pos":[12023,12134],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value corresponding to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">Value</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>."},{"pos":[12843,13051],"content":"Returns a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that corresponds to a specified <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and number format information.","needQuote":true,"needEscape":true,"source":"Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to a specified <xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref> and number format information."},{"pos":[13063,13164],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[13365,13527],"content":"Required. <xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert to a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","pos":[10,162],"source":"<xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value."}]},{"pos":[13620,13760],"content":"A <xref:System.Globalization.NumberFormatInfo> object that defines how numeric values are formatted and displayed, depending on the culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Globalization.NumberFormatInfo&gt; object that defines how numeric values are formatted and displayed, depending on the culture.","pos":[0,140],"source":"A <xref:System.Globalization.NumberFormatInfo> object that defines how numeric values are formatted and displayed, depending on the culture."}]},{"pos":[13818,13929],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value corresponding to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">Value</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>."},{"pos":[14511,14691],"content":"Returns a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that corresponds to a specified <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to a specified <xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>."},{"pos":[14703,14804],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[14950,15114],"content":"Required. <xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert to a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","pos":[10,164],"source":"<xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value."}]},{"pos":[15172,15283],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value corresponding to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">Value</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>."},{"pos":[15851,16044],"content":"Returns a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that corresponds to a specified <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Int64\" name=\"Int64\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> (64-bit integer).","needQuote":true,"needEscape":true,"source":"Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to a specified <xref uid=\"langword_csharp_Int64\" name=\"Int64\" href=\"\"></xref> (64-bit integer)."},{"pos":[16056,16157],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[16301,16461],"content":"Required. <xref uid=\"langword_csharp_Int64\" name=\"Int64\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Int64\" name=\"Int64\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert to a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","pos":[10,160],"source":"<xref uid=\"langword_csharp_Int64\" name=\"Int64\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value."}]},{"pos":[16519,16630],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value corresponding to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">Value</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>."},{"pos":[17210,17332],"content":"Returns a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that corresponds to the specified object.","needQuote":true,"needEscape":true,"source":"Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to the specified object."},{"pos":[17344,17445],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[17594,17698],"content":"Required. Object to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Object to convert to a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","pos":[10,104],"source":" Object to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value."}]},{"pos":[17756,17867],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value corresponding to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">Value</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>."},{"pos":[18439,18632],"content":"Returns a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that corresponds to a specified <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Int16\" name=\"Int16\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> (16-bit integer).","needQuote":true,"needEscape":true,"source":"Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to a specified <xref uid=\"langword_csharp_Int16\" name=\"Int16\" href=\"\"></xref> (16-bit integer)."},{"pos":[18644,18745],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[18891,19053],"content":"Required. <xref uid=\"langword_csharp_Int616\" name=\"Int616\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Int616\" name=\"Int616\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert to a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","pos":[10,162],"source":"<xref uid=\"langword_csharp_Int616\" name=\"Int616\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value."}]},{"pos":[19111,19222],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value corresponding to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">Value</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>."},{"pos":[19803,19981],"content":"Returns a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that corresponds to a specified <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to a specified <xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"></xref>."},{"pos":[19993,20094],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[20242,20404],"content":"Required. <xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert to a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","pos":[10,162],"source":"<xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value."}]},{"pos":[20462,20573],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value corresponding to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">Value</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>."},{"pos":[21282,21490],"content":"Returns a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that corresponds to a specified <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and number format information.","needQuote":true,"needEscape":true,"source":"Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to a specified <xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"></xref> and number format information."},{"pos":[21502,21603],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[21803,21965],"content":"Required. <xref uid=\"langword_csharp_Sinble\" name=\"Sinble\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Sinble\" name=\"Sinble\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert to a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","pos":[10,162],"source":"<xref uid=\"langword_csharp_Sinble\" name=\"Sinble\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value."}]},{"pos":[22058,22198],"content":"A <xref:System.Globalization.NumberFormatInfo> object that defines how numeric values are formatted and displayed, depending on the culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Globalization.NumberFormatInfo&gt; object that defines how numeric values are formatted and displayed, depending on the culture.","pos":[0,140],"source":"A <xref:System.Globalization.NumberFormatInfo> object that defines how numeric values are formatted and displayed, depending on the culture."}]},{"pos":[22256,22367],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value corresponding to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">Value</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>."},{"pos":[23088,23188],"content":"Overwrites the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sDest</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter with the contents of the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">sInsert</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"Overwrites the <code>sDest</code> parameter with the contents of the <code>sInsert</code> parameter."},{"pos":[23200,23301],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[23508,23544],"content":"Required. String variable to modify.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required. String variable to modify.","pos":[0,36],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"String variable to modify.","pos":[10,36]}]}]},{"pos":[23613,23705],"content":"Required. Location in the `sDest` parameter to begin overwriting from. The index is 1-based.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Location in the <ph id=\"ph1\">`sDest`</ph> parameter to begin overwriting from.","pos":[10,70],"source":" Location in the `sDest` parameter to begin overwriting from."},{"content":"The index is 1-based.","pos":[71,92]}]},{"pos":[23776,23886],"content":"Required. Maximum number of characters from the `sInsert` parameter to use, starting from the first character.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Maximum number of characters from the <ph id=\"ph1\">`sInsert`</ph> parameter to use, starting from the first character.","pos":[10,110],"source":" Maximum number of characters from the `sInsert` parameter to use, starting from the first character."}]},{"pos":[23950,24013],"content":"Required. String value to overwrite the `sDest` parameter with.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"String value to overwrite the <ph id=\"ph1\">`sDest`</ph> parameter with.","pos":[10,63],"source":" String value to overwrite the `sDest` parameter with."}]},{"pos":[24678,24699],"content":"Compares two strings.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares two strings.","pos":[0,21]}]},{"pos":[24711,24812],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]},{"pos":[24987,25029],"content":"Required. String to compare with `sRight`.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"String to compare with <ph id=\"ph1\">`sRight`</ph>.","pos":[10,42],"source":" String to compare with `sRight`."}]},{"pos":[25092,25133],"content":"Required. String to compare with `sLeft`.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"String to compare with <ph id=\"ph1\">`sLeft`</ph>.","pos":[10,41],"source":" String to compare with `sLeft`."}]},{"pos":[25202,25388],"content":"Required. <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> to perform a case-insensitive comparison; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to perform a case-insensitive comparison; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[10,186],"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> to perform a case-insensitive comparison; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>."}]},{"pos":[25446,25883],"content":"<table><thead><tr><th> Value       </th><th> Condition       </th></tr></thead><tbody><tr><td> zero       </td><td> The two strings are equal.       </td></tr><tr><td> less than zero       </td><td>           <code>sLeft</code> is less than <code>sRight</code>.       </td></tr><tr><td> greater than zero       </td><td>           <code>sLeft</code> is greater than <code>sRight</code>.       </td></tr></tbody></table>","needQuote":false,"needEscape":true,"nodes":[{"content":"Value","pos":[23,28]},{"content":"Condition","pos":[45,54]},{"content":"zero","pos":[95,99]},{"content":" The two strings are equal.       ","pos":[115,149],"nodes":[{"content":"The two strings are equal.","pos":[1,27]}]},{"content":"less than zero","pos":[168,182]},{"content":"           <code>sLeft</code> is less than <code>sRight</code>.       ","pos":[198,268],"nodes":[{"content":"<ph id=\"ph1\">           &lt;code&gt;sLeft&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;code&gt;sRight&lt;/code&gt;</ph>.","pos":[0,63],"source":"           <code>sLeft</code> is less than <code>sRight</code>."}]},{"content":"greater than zero","pos":[287,304]},{"content":"           <code>sLeft</code> is greater than <code>sRight</code>.       ","pos":[320,393],"nodes":[{"content":"<ph id=\"ph1\">           &lt;code&gt;sLeft&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;code&gt;sRight&lt;/code&gt;</ph>.","pos":[0,66],"source":"           <code>sLeft</code> is greater than <code>sRight</code>."}]}]},{"pos":[26610,26785],"content":"Compares the parameters <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Source</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">Pattern</ph><ept id=\"p2\">&lt;/code&gt;</ept> and returns the same results as the <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_Like\" name=\"Like\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> operator.","needQuote":true,"needEscape":true,"source":"Compares the parameters <code>Source</code> and <code>Pattern</code> and returns the same results as the <xref uid=\"langword_csharp_Like\" name=\"Like\" href=\"\"></xref> operator."},{"pos":[26797,27037],"content":"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/add/includes/ajax-current-ext-md.md). The result is a Boolean value indicating whether or not the string satisfies the pattern.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method compares the parameters <ph id=\"ph1\">`Source`</ph> and <ph id=\"ph2\">`Pattern`</ph> and returns the same results as the <bpt id=\"p1\">[</bpt>Like Operator<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[0,150],"source":"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/add/includes/ajax-current-ext-md.md)."},{"content":"The result is a Boolean value indicating whether or not the string satisfies the pattern.","pos":[151,240]}]},{"pos":[27250,27340],"content":"Required. Any <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> expression.","pos":[10,90],"source":" Any <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> expression."}]},{"pos":[27404,27558],"content":"Any <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> expression conforming to the pattern-matching conventions described in Like Operator.","needQuote":true,"needEscape":true,"source":"Any <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> expression conforming to the pattern-matching conventions described in Like Operator."},{"pos":[27650,28127],"content":"Specifies how to compare strings to patterns, according to the <xref href=\"Microsoft.VisualBasic.CompareMethod\"></xref>. Can be <xref uid=\"langword_csharp_vbBinaryCompare\" name=\"vbBinaryCompare\" href=\"\"></xref> for binary comparison or <xref uid=\"langword_csharp_vbTextCompare\" name=\"vbTextCompare\" href=\"\"></xref> for comparison based on a case-insensitive text sort order determined by your system's <xref uid=\"langword_csharp_LocaleID\" name=\"LocaleID\" href=\"\"></xref> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies how to compare strings to patterns, according to the <bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.CompareMethod\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,120],"source":"Specifies how to compare strings to patterns, according to the <xref href=\"Microsoft.VisualBasic.CompareMethod\"></xref>."},{"content":"Can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_vbBinaryCompare\" name=\"vbBinaryCompare\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for binary comparison or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_vbTextCompare\" name=\"vbTextCompare\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> for comparison based on a case-insensitive text sort order determined by your system's <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_LocaleID\" name=\"LocaleID\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> value.","pos":[121,477],"source":" Can be <xref uid=\"langword_csharp_vbBinaryCompare\" name=\"vbBinaryCompare\" href=\"\"></xref> for binary comparison or <xref uid=\"langword_csharp_vbTextCompare\" name=\"vbTextCompare\" href=\"\"></xref> for comparison based on a case-insensitive text sort order determined by your system's <xref uid=\"langword_csharp_LocaleID\" name=\"LocaleID\" href=\"\"></xref> value."}]},{"pos":[28186,28699],"content":"A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>. If the string does not satisfy the pattern, result is <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>. If both string and pattern are empty strings, the result is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value indicating whether or not the string satisfies the pattern.","pos":[0,134],"source":"A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value indicating whether or not the string satisfies the pattern."},{"content":"If the value in string satisfies the pattern contained in pattern, result is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[135,273],"source":" If the value in string satisfies the pattern contained in pattern, result is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>."},{"content":"If the string does not satisfy the pattern, result is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[274,391],"source":" If the string does not satisfy the pattern, result is <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>."},{"content":"If both string and pattern are empty strings, the result is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[392,513],"source":" If both string and pattern are empty strings, the result is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>."}]},{"pos":[29342,29542],"content":"Compares the parameters <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Source</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">Pattern</ph><ept id=\"p2\">&lt;/code&gt;</ept> and returns the same results as the <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_Like\" name=\"Like\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> operator, using binary comparison.","needQuote":true,"needEscape":true,"source":"Compares the parameters <code>Source</code> and <code>Pattern</code> and returns the same results as the <xref uid=\"langword_csharp_Like\" name=\"Like\" href=\"\"></xref> operator, using binary comparison."},{"pos":[29555,29964],"content":"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/add/includes/ajax-current-ext-md.md). The result is a Boolean value indicating whether or not the string satisfies the pattern.       This method is similar to <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> except that it always performs a case-sensitive binary comparison.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method compares the parameters <ph id=\"ph1\">`Source`</ph> and <ph id=\"ph2\">`Pattern`</ph> and returns the same results as the <bpt id=\"p1\">[</bpt>Like Operator<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[0,150],"source":"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/add/includes/ajax-current-ext-md.md)."},{"content":"The result is a Boolean value indicating whether or not the string satisfies the pattern.","pos":[151,240]},{"content":"This method is similar to &lt;xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A&gt; except that it always performs a case-sensitive binary comparison.","pos":[247,407],"source":"       This method is similar to <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> except that it always performs a case-sensitive binary comparison."}]},{"pos":[30133,30223],"content":"Required. Any <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> expression.","pos":[10,90],"source":" Any <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> expression."}]},{"pos":[30287,30451],"content":"Required. Any <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> expression conforming to the pattern-matching conventions described in Like Operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> expression conforming to the pattern-matching conventions described in Like Operator.","pos":[10,164],"source":" Any <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> expression conforming to the pattern-matching conventions described in Like Operator."}]},{"pos":[30510,31023],"content":"A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>. If the string does not satisfy the pattern, result is <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>. If both string and pattern are empty strings, the result is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value indicating whether or not the string satisfies the pattern.","pos":[0,134],"source":"A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value indicating whether or not the string satisfies the pattern."},{"content":"If the value in string satisfies the pattern contained in pattern, result is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[135,273],"source":" If the value in string satisfies the pattern contained in pattern, result is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>."},{"content":"If the string does not satisfy the pattern, result is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[274,391],"source":" If the string does not satisfy the pattern, result is <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>."},{"content":"If both string and pattern are empty strings, the result is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[392,513],"source":" If both string and pattern are empty strings, the result is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>."}]},{"pos":[31662,31860],"content":"Compares the parameters <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Source</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">Pattern</ph><ept id=\"p2\">&lt;/code&gt;</ept> and returns the same results as the <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_Like\" name=\"Like\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> operator, using text comparison.","needQuote":true,"needEscape":true,"source":"Compares the parameters <code>Source</code> and <code>Pattern</code> and returns the same results as the <xref uid=\"langword_csharp_Like\" name=\"Like\" href=\"\"></xref> operator, using text comparison."},{"pos":[31873,32351],"content":"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/add/includes/ajax-current-ext-md.md). The result is a `Boolean` value indicating whether or not the string satisfies the pattern.       This method is similar to <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> except that it always performs a comparison based on a case-insensitive text sort order determined by your system's `LocaleID` value.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method compares the parameters <ph id=\"ph1\">`Source`</ph> and <ph id=\"ph2\">`Pattern`</ph> and returns the same results as the <bpt id=\"p1\">[</bpt>Like Operator<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[0,150],"source":"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/add/includes/ajax-current-ext-md.md)."},{"content":"The result is a <ph id=\"ph1\">`Boolean`</ph> value indicating whether or not the string satisfies the pattern.","pos":[151,242],"source":" The result is a `Boolean` value indicating whether or not the string satisfies the pattern."},{"content":"This method is similar to &lt;xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A&gt; except that it always performs a comparison based on a case-insensitive text sort order determined by your system's <ph id=\"ph1\">`LocaleID`</ph> value.","pos":[249,476],"source":"       This method is similar to <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> except that it always performs a comparison based on a case-insensitive text sort order determined by your system's `LocaleID` value."}]},{"pos":[32518,32608],"content":"Required. Any <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> expression.","pos":[10,90],"source":" Any <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> expression."}]},{"pos":[32672,32836],"content":"Required. Any <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> expression conforming to the pattern-matching conventions described in Like Operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> expression conforming to the pattern-matching conventions described in Like Operator.","pos":[10,164],"source":" Any <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> expression conforming to the pattern-matching conventions described in Like Operator."}]},{"pos":[32895,33408],"content":"A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>. If the string does not satisfy the pattern, result is <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>. If both string and pattern are empty strings, the result is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value indicating whether or not the string satisfies the pattern.","pos":[0,134],"source":"A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value indicating whether or not the string satisfies the pattern."},{"content":"If the value in string satisfies the pattern contained in pattern, result is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[135,273],"source":" If the value in string satisfies the pattern contained in pattern, result is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>."},{"content":"If the string does not satisfy the pattern, result is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[274,391],"source":" If the string does not satisfy the pattern, result is <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>."},{"content":"If both string and pattern are empty strings, the result is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[392,513],"source":" If both string and pattern are empty strings, the result is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.CompilerServices.StringType\n  id: StringType\n  children:\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)\n  - Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)\n  - Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)\n  - Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)\n  - Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)\n  - Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)\n  - Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)\n  langs:\n  - csharp\n  name: StringType\n  nameWithType: StringType\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType\n  type: Class\n  summary: This class has been deprecated as of Visual Basic 2005.\n  remarks: This class provides methods for manipulating data that potentially represents a `String` value.\n  syntax:\n    content: >-\n      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]\n\n      public sealed class StringType\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)\n  id: FromBoolean(System.Boolean)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromBoolean(Boolean)\n  nameWithType: StringType.FromBoolean(Boolean)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to the specified <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref>.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromBoolean (bool Value);\n    parameters:\n    - id: Value\n      type: System.Boolean\n      description: Required. <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.\n    return:\n      type: System.String\n      description: The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)\n  id: FromByte(System.Byte)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromByte(Byte)\n  nameWithType: StringType.FromByte(Byte)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromByte(Byte)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to the specified <xref uid=\"langword_csharp_Byte\" name=\"Byte\" href=\"\"></xref>.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromByte (byte Value);\n    parameters:\n    - id: Value\n      type: System.Byte\n      description: Required. <xref uid=\"langword_csharp_Byte\" name=\"Byte\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.\n    return:\n      type: System.String\n      description: The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromByte*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)\n  id: FromChar(System.Char)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromChar(Char)\n  nameWithType: StringType.FromChar(Char)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromChar(Char)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to the specified <xref uid=\"langword_csharp_Char\" name=\"Char\" href=\"\"></xref>.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromChar (char Value);\n    parameters:\n    - id: Value\n      type: System.Char\n      description: Required. <xref uid=\"langword_csharp_Char\" name=\"Char\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.\n    return:\n      type: System.String\n      description: The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromChar*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)\n  id: FromDate(System.DateTime)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromDate(DateTime)\n  nameWithType: StringType.FromDate(DateTime)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDate(DateTime)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to the specified date.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromDate (DateTime Value);\n    parameters:\n    - id: Value\n      type: System.DateTime\n      description: Required. Date to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.\n    return:\n      type: System.String\n      description: The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromDate*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)\n  id: FromDecimal(System.Decimal)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromDecimal(Decimal)\n  nameWithType: StringType.FromDecimal(Decimal)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(Decimal)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to the specified <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref>.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromDecimal (decimal Value);\n    parameters:\n    - id: Value\n      type: System.Decimal\n      description: Required. <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.\n    return:\n      type: System.String\n      description: The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)\n  id: FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromDecimal(Decimal,NumberFormatInfo)\n  nameWithType: StringType.FromDecimal(Decimal,NumberFormatInfo)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(Decimal,NumberFormatInfo)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to a specified <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> and number format information.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromDecimal (decimal Value, System.Globalization.NumberFormatInfo NumberFormat);\n    parameters:\n    - id: Value\n      type: System.Decimal\n      description: Required. <xref uid=\"langword_csharp_Decimal\" name=\"Decimal\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.\n    - id: NumberFormat\n      type: System.Globalization.NumberFormatInfo\n      description: A <xref:System.Globalization.NumberFormatInfo> object that defines how numeric values are formatted and displayed, depending on the culture.\n    return:\n      type: System.String\n      description: The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)\n  id: FromDouble(System.Double)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromDouble(Double)\n  nameWithType: StringType.FromDouble(Double)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(Double)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to a specified <xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref>.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromDouble (double Value);\n    parameters:\n    - id: Value\n      type: System.Double\n      description: Required. <xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.\n    return:\n      type: System.String\n      description: The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)\n  id: FromDouble(System.Double,System.Globalization.NumberFormatInfo)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromDouble(Double,NumberFormatInfo)\n  nameWithType: StringType.FromDouble(Double,NumberFormatInfo)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(Double,NumberFormatInfo)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to a specified <xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref> and number format information.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromDouble (double Value, System.Globalization.NumberFormatInfo NumberFormat);\n    parameters:\n    - id: Value\n      type: System.Double\n      description: Required. <xref uid=\"langword_csharp_Double\" name=\"Double\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.\n    - id: NumberFormat\n      type: System.Globalization.NumberFormatInfo\n      description: A <xref:System.Globalization.NumberFormatInfo> object that defines how numeric values are formatted and displayed, depending on the culture.\n    return:\n      type: System.String\n      description: The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)\n  id: FromInteger(System.Int32)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromInteger(Int32)\n  nameWithType: StringType.FromInteger(Int32)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to a specified <xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromInteger (int Value);\n    parameters:\n    - id: Value\n      type: System.Int32\n      description: Required. <xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.\n    return:\n      type: System.String\n      description: The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromInteger*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)\n  id: FromLong(System.Int64)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromLong(Int64)\n  nameWithType: StringType.FromLong(Int64)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromLong(Int64)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to a specified <xref uid=\"langword_csharp_Int64\" name=\"Int64\" href=\"\"></xref> (64-bit integer).\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromLong (long Value);\n    parameters:\n    - id: Value\n      type: System.Int64\n      description: Required. <xref uid=\"langword_csharp_Int64\" name=\"Int64\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.\n    return:\n      type: System.String\n      description: The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromLong*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)\n  id: FromObject(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromObject(Object)\n  nameWithType: StringType.FromObject(Object)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromObject(Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to the specified object.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromObject (object Value);\n    parameters:\n    - id: Value\n      type: System.Object\n      description: Required. Object to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.\n    return:\n      type: System.String\n      description: The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)\n  id: FromShort(System.Int16)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromShort(Int16)\n  nameWithType: StringType.FromShort(Int16)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromShort(Int16)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to a specified <xref uid=\"langword_csharp_Int16\" name=\"Int16\" href=\"\"></xref> (16-bit integer).\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromShort (short Value);\n    parameters:\n    - id: Value\n      type: System.Int16\n      description: Required. <xref uid=\"langword_csharp_Int616\" name=\"Int616\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.\n    return:\n      type: System.String\n      description: The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromShort*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)\n  id: FromSingle(System.Single)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromSingle(Single)\n  nameWithType: StringType.FromSingle(Single)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(Single)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to a specified <xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"></xref>.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromSingle (float Value);\n    parameters:\n    - id: Value\n      type: System.Single\n      description: Required. <xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.\n    return:\n      type: System.String\n      description: The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)\n  id: FromSingle(System.Single,System.Globalization.NumberFormatInfo)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: FromSingle(Single,NumberFormatInfo)\n  nameWithType: StringType.FromSingle(Single,NumberFormatInfo)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(Single,NumberFormatInfo)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value that corresponds to a specified <xref uid=\"langword_csharp_Single\" name=\"Single\" href=\"\"></xref> and number format information.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static string FromSingle (float Value, System.Globalization.NumberFormatInfo NumberFormat);\n    parameters:\n    - id: Value\n      type: System.Single\n      description: Required. <xref uid=\"langword_csharp_Sinble\" name=\"Sinble\" href=\"\"></xref> to convert to a <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value.\n    - id: NumberFormat\n      type: System.Globalization.NumberFormatInfo\n      description: A <xref:System.Globalization.NumberFormatInfo> object that defines how numeric values are formatted and displayed, depending on the culture.\n    return:\n      type: System.String\n      description: The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> value corresponding to <code>Value</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)\n  id: MidStmtStr(System.String@,System.Int32,System.Int32,System.String)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: MidStmtStr(String,Int32,Int32,String)\n  nameWithType: StringType.MidStmtStr(String,Int32,Int32,String)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(String,Int32,Int32,String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Overwrites the <code>sDest</code> parameter with the contents of the <code>sInsert</code> parameter.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static void MidStmtStr (ref string sDest, int StartPosition, int MaxInsertLength, string sInsert);\n    parameters:\n    - id: sDest\n      type: System.String\n      description: Required. String variable to modify.\n    - id: StartPosition\n      type: System.Int32\n      description: Required. Location in the `sDest` parameter to begin overwriting from. The index is 1-based.\n    - id: MaxInsertLength\n      type: System.Int32\n      description: Required. Maximum number of characters from the `sInsert` parameter to use, starting from the first character.\n    - id: sInsert\n      type: System.String\n      description: Required. String value to overwrite the `sDest` parameter with.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)\n  id: StrCmp(System.String,System.String,System.Boolean)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: StrCmp(String,String,Boolean)\n  nameWithType: StringType.StrCmp(String,String,Boolean)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(String,String,Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Compares two strings.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static int StrCmp (string sLeft, string sRight, bool TextCompare);\n    parameters:\n    - id: sLeft\n      type: System.String\n      description: Required. String to compare with `sRight`.\n    - id: sRight\n      type: System.String\n      description: Required. String to compare with `sLeft`.\n    - id: TextCompare\n      type: System.Boolean\n      description: Required. <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> to perform a case-insensitive comparison; otherwise <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>.\n    return:\n      type: System.Int32\n      description: \"<table><thead><tr><th> Value  \\n  \\n </th><th> Condition  \\n  \\n </th></tr></thead><tbody><tr><td> zero  \\n  \\n </td><td> The two strings are equal.  \\n  \\n </td></tr><tr><td> less than zero  \\n  \\n </td><td>\\n          <code>sLeft</code> is less than <code>sRight</code>.  \\n  \\n </td></tr><tr><td> greater than zero  \\n  \\n </td><td>\\n          <code>sLeft</code> is greater than <code>sRight</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.StrCmp*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)\n  id: StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: StrLike(String,String,CompareMethod)\n  nameWithType: StringType.StrLike(String,String,CompareMethod)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.StrLike(String,String,CompareMethod)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Compares the parameters <code>Source</code> and <code>Pattern</code> and returns the same results as the <xref uid=\"langword_csharp_Like\" name=\"Like\" href=\"\"></xref> operator.\n  remarks: This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/add/includes/ajax-current-ext-md.md). The result is a Boolean value indicating whether or not the string satisfies the pattern.\n  syntax:\n    content: public static bool StrLike (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);\n    parameters:\n    - id: Source\n      type: System.String\n      description: Required. Any <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> expression.\n    - id: Pattern\n      type: System.String\n      description: Any <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> expression conforming to the pattern-matching conventions described in Like Operator.\n    - id: CompareOption\n      type: Microsoft.VisualBasic.CompareMethod\n      description: Specifies how to compare strings to patterns, according to the <xref href=\"Microsoft.VisualBasic.CompareMethod\"></xref>. Can be <xref uid=\"langword_csharp_vbBinaryCompare\" name=\"vbBinaryCompare\" href=\"\"></xref> for binary comparison or <xref uid=\"langword_csharp_vbTextCompare\" name=\"vbTextCompare\" href=\"\"></xref> for comparison based on a case-insensitive text sort order determined by your system's <xref uid=\"langword_csharp_LocaleID\" name=\"LocaleID\" href=\"\"></xref> value.\n    return:\n      type: System.Boolean\n      description: A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>. If the string does not satisfy the pattern, result is <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>. If both string and pattern are empty strings, the result is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.StrLike*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)\n  id: StrLikeBinary(System.String,System.String)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: StrLikeBinary(String,String)\n  nameWithType: StringType.StrLikeBinary(String,String)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(String,String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Compares the parameters <code>Source</code> and <code>Pattern</code> and returns the same results as the <xref uid=\"langword_csharp_Like\" name=\"Like\" href=\"\"></xref> operator, using binary comparison.\n  remarks: \"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/add/includes/ajax-current-ext-md.md). The result is a Boolean value indicating whether or not the string satisfies the pattern.  \\n  \\n This method is similar to <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> except that it always performs a case-sensitive binary comparison.\"\n  syntax:\n    content: public static bool StrLikeBinary (string Source, string Pattern);\n    parameters:\n    - id: Source\n      type: System.String\n      description: Required. Any <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> expression.\n    - id: Pattern\n      type: System.String\n      description: Required. Any <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> expression conforming to the pattern-matching conventions described in Like Operator.\n    return:\n      type: System.Boolean\n      description: A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>. If the string does not satisfy the pattern, result is <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>. If both string and pattern are empty strings, the result is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)\n  id: StrLikeText(System.String,System.String)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  langs:\n  - csharp\n  name: StrLikeText(String,String)\n  nameWithType: StringType.StrLikeText(String,String)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(String,String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Compares the parameters <code>Source</code> and <code>Pattern</code> and returns the same results as the <xref uid=\"langword_csharp_Like\" name=\"Like\" href=\"\"></xref> operator, using text comparison.\n  remarks: \"This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/add/includes/ajax-current-ext-md.md). The result is a `Boolean` value indicating whether or not the string satisfies the pattern.  \\n  \\n This method is similar to <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> except that it always performs a comparison based on a case-insensitive text sort order determined by your system's `LocaleID` value.\"\n  syntax:\n    content: public static bool StrLikeText (string Source, string Pattern);\n    parameters:\n    - id: Source\n      type: System.String\n      description: Required. Any <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> expression.\n    - id: Pattern\n      type: System.String\n      description: Required. Any <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> expression conforming to the pattern-matching conventions described in Like Operator.\n    return:\n      type: System.Boolean\n      description: A <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref> value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>. If the string does not satisfy the pattern, result is <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref>. If both string and pattern are empty strings, the result is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>.\n  overload: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromBoolean(Boolean)\n  nameWithType: StringType.FromBoolean(Boolean)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(Boolean)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromByte(Byte)\n  nameWithType: StringType.FromByte(Byte)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromByte(Byte)\n- uid: System.Byte\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromChar(Char)\n  nameWithType: StringType.FromChar(Char)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromChar(Char)\n- uid: System.Char\n  parent: System\n  isExternal: true\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromDate(DateTime)\n  nameWithType: StringType.FromDate(DateTime)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDate(DateTime)\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromDecimal(Decimal)\n  nameWithType: StringType.FromDecimal(Decimal)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(Decimal)\n- uid: System.Decimal\n  parent: System\n  isExternal: true\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromDecimal(Decimal,NumberFormatInfo)\n  nameWithType: StringType.FromDecimal(Decimal,NumberFormatInfo)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(Decimal,NumberFormatInfo)\n- uid: System.Globalization.NumberFormatInfo\n  parent: System.Globalization\n  isExternal: true\n  name: NumberFormatInfo\n  nameWithType: NumberFormatInfo\n  fullName: System.Globalization.NumberFormatInfo\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromDouble(Double)\n  nameWithType: StringType.FromDouble(Double)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromDouble(Double,NumberFormatInfo)\n  nameWithType: StringType.FromDouble(Double,NumberFormatInfo)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(Double,NumberFormatInfo)\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromInteger(Int32)\n  nameWithType: StringType.FromInteger(Int32)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromLong(Int64)\n  nameWithType: StringType.FromLong(Int64)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromLong(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromObject(Object)\n  nameWithType: StringType.FromObject(Object)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromObject(Object)\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromShort(Int16)\n  nameWithType: StringType.FromShort(Int16)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromShort(Int16)\n- uid: System.Int16\n  parent: System\n  isExternal: true\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromSingle(Single)\n  nameWithType: StringType.FromSingle(Single)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(Single)\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromSingle(Single,NumberFormatInfo)\n  nameWithType: StringType.FromSingle(Single,NumberFormatInfo)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(Single,NumberFormatInfo)\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: MidStmtStr(String,Int32,Int32,String)\n  nameWithType: StringType.MidStmtStr(String,Int32,Int32,String)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(String,Int32,Int32,String)\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: StrCmp(String,String,Boolean)\n  nameWithType: StringType.StrCmp(String,String,Boolean)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(String,String,Boolean)\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: StrLike(String,String,CompareMethod)\n  nameWithType: StringType.StrLike(String,String,CompareMethod)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.StrLike(String,String,CompareMethod)\n- uid: Microsoft.VisualBasic.CompareMethod\n  parent: Microsoft.VisualBasic\n  isExternal: false\n  name: CompareMethod\n  nameWithType: CompareMethod\n  fullName: Microsoft.VisualBasic.CompareMethod\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: StrLikeBinary(String,String)\n  nameWithType: StringType.StrLikeBinary(String,String)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(String,String)\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: StrLikeText(String,String)\n  nameWithType: StringType.StrLikeText(String,String)\n  fullName: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(String,String)\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromBoolean\n  nameWithType: StringType.FromBoolean\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromByte*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromByte\n  nameWithType: StringType.FromByte\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromChar*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromChar\n  nameWithType: StringType.FromChar\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDate*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromDate\n  nameWithType: StringType.FromDate\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromDecimal\n  nameWithType: StringType.FromDecimal\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromDouble\n  nameWithType: StringType.FromDouble\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromInteger*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromInteger\n  nameWithType: StringType.FromInteger\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromLong*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromLong\n  nameWithType: StringType.FromLong\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromObject*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromObject\n  nameWithType: StringType.FromObject\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromShort*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromShort\n  nameWithType: StringType.FromShort\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: FromSingle\n  nameWithType: StringType.FromSingle\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: MidStmtStr\n  nameWithType: StringType.MidStmtStr\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrCmp*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: StrCmp\n  nameWithType: StringType.StrCmp\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLike*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: StrLike\n  nameWithType: StringType.StrLike\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: StrLikeBinary\n  nameWithType: StringType.StrLikeBinary\n- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText*\n  parent: Microsoft.VisualBasic.CompilerServices.StringType\n  isExternal: false\n  name: StrLikeText\n  nameWithType: StringType.StrLikeText\n"}