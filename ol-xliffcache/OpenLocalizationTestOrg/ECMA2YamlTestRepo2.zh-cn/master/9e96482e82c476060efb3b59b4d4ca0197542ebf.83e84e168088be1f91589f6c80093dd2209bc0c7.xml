{"nodes":[{"pos":[560,637],"content":"Defines the interface required for processing messages from simplex datagram.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the interface required for processing messages from simplex datagram.","pos":[0,77]}]},{"pos":[650,771],"content":"This contract has the following settings:      -   Sessions are allowed, but not required.      -   One way messages.","needQuote":false,"needEscape":true,"nodes":[{"content":"This contract has the following settings:      -   Sessions are allowed, but not required.      -   One way messages.","pos":[0,117],"nodes":[{"content":"This contract has the following settings:      -   Sessions are allowed, but not required.","pos":[0,90]},{"content":"-   One way messages.","pos":[96,117]}]}]},{"pos":[1751,1804],"content":"Initiates the asynchronous processing of the message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initiates the asynchronous processing of the message.","pos":[0,53]}]},{"pos":[2056,2084],"content":"The message to be processed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message to be processed.","pos":[0,28]}]},{"pos":[2156,2254],"content":"An <xref:System.AsyncCallback> delegate that is invoked when the message processing has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.AsyncCallback&gt; delegate that is invoked when the message processing has completed.","pos":[0,98],"source":"An <xref:System.AsyncCallback> delegate that is invoked when the message processing has completed."}]},{"pos":[2316,2385],"content":"A user-defined state object that is passed to the callback procedure.","needQuote":true,"needEscape":true,"nodes":[{"content":"A user-defined state object that is passed to the callback procedure.","pos":[0,69]}]},{"pos":[2449,2651],"content":"An <xref:System.IAsyncResult> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref:System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IAsyncResult&gt; that can be used to poll or wait for results, or both; this value is also needed when invoking &lt;xref:System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage*&gt;.","pos":[0,202],"source":"An <xref:System.IAsyncResult> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref:System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage*>."}]},{"pos":[3318,3372],"content":"Finishes asynchronous execution of message processing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Finishes asynchronous execution of message processing.","pos":[0,54]}]},{"pos":[3533,3660],"content":"The asynchronous result returned by the call to <xref:System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The asynchronous result returned by the call to &lt;xref:System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage*&gt;.","pos":[0,127],"source":"The asynchronous result returned by the call to <xref:System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage*>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Routing.ISimplexDatagramRouter\n  id: ISimplexDatagramRouter\n  children:\n  - System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(System.IAsyncResult)\n  langs:\n  - csharp\n  name: ISimplexDatagramRouter\n  nameWithType: ISimplexDatagramRouter\n  fullName: System.ServiceModel.Routing.ISimplexDatagramRouter\n  type: Interface\n  summary: Defines the interface required for processing messages from simplex datagram.\n  remarks: \"This contract has the following settings:  \\n  \\n-   Sessions are allowed, but not required.  \\n  \\n-   One way messages.\"\n  syntax:\n    content: >-\n      [System.ServiceModel.ServiceContract(Namespace=\"http://schemas.microsoft.com/netfx/2009/05/routing\", SessionMode=System.ServiceModel.SessionMode.Allowed)]\n\n      public interface ISimplexDatagramRouter\n  implements: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  id: BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Routing.ISimplexDatagramRouter\n  langs:\n  - csharp\n  name: BeginProcessMessage(Message,AsyncCallback,Object)\n  nameWithType: ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  fullName: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Initiates the asynchronous processing of the message.\n  syntax:\n    content: public IAsyncResult BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The message to be processed.\n    - id: callback\n      type: System.AsyncCallback\n      description: An <xref:System.AsyncCallback> delegate that is invoked when the message processing has completed.\n    - id: state\n      type: System.Object\n      description: A user-defined state object that is passed to the callback procedure.\n    return:\n      type: System.IAsyncResult\n      description: An <xref:System.IAsyncResult> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref:System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage*>.\n  overload: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(System.IAsyncResult)\n  id: EndProcessMessage(System.IAsyncResult)\n  parent: System.ServiceModel.Routing.ISimplexDatagramRouter\n  langs:\n  - csharp\n  name: EndProcessMessage(IAsyncResult)\n  nameWithType: ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)\n  fullName: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Finishes asynchronous execution of message processing.\n  syntax:\n    content: public void EndProcessMessage (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The asynchronous result returned by the call to <xref:System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage*>.\n  overload: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Routing.ISimplexDatagramRouter\n  isExternal: false\n  name: BeginProcessMessage(Message,AsyncCallback,Object)\n  nameWithType: ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n  fullName: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(System.IAsyncResult)\n  parent: System.ServiceModel.Routing.ISimplexDatagramRouter\n  isExternal: false\n  name: EndProcessMessage(IAsyncResult)\n  nameWithType: ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)\n  fullName: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)\n- uid: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage*\n  parent: System.ServiceModel.Routing.ISimplexDatagramRouter\n  isExternal: false\n  name: BeginProcessMessage\n  nameWithType: ISimplexDatagramRouter.BeginProcessMessage\n- uid: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage*\n  parent: System.ServiceModel.Routing.ISimplexDatagramRouter\n  isExternal: false\n  name: EndProcessMessage\n  nameWithType: ISimplexDatagramRouter.EndProcessMessage\n"}