{"nodes":[{"pos":[481,593],"content":"Defines a contract that components can use to access an object across application domain and process boundaries.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines a contract that components can use to access an object across application domain and process boundaries.","pos":[0,112]}]},{"pos":[605,1138],"content":"When you implement IRemoteObjectContract on a type, components can use the contract to access type information for objects of the type. Components access type information by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to obtain an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>. The <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> interface defines a contract that components can use to access specific type and member information, and to invoke members.","needQuote":true,"needEscape":true,"nodes":[{"content":"When you implement IRemoteObjectContract on a type, components can use the contract to access type information for objects of the type. Components access type information by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to obtain an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>. The <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> interface defines a contract that components can use to access specific type and member information, and to invoke members.","pos":[0,533],"nodes":[{"content":"When you implement IRemoteObjectContract on a type, components can use the contract to access type information for objects of the type.","pos":[0,135]},{"content":"Components access type information by calling the &lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A&gt; method to obtain an &lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract&gt;.","pos":[136,345],"source":" Components access type information by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to obtain an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>."},{"content":"The &lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract&gt; interface defines a contract that components can use to access specific type and member information, and to invoke members.","pos":[346,533],"source":" The <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> interface defines a contract that components can use to access specific type and member information, and to invoke members."}]}]},{"pos":[1764,1964],"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Contract.Automation.IRemoteTypeContract\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the type of the current <bpt id=\"p2\">&lt;xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns an <xref href=\"System.AddIn.Contract.Automation.IRemoteTypeContract\"></xref> that specifies the type of the current <xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"></xref>."},{"pos":[1976,2138],"content":"Use the GetRemoteType method to access the members of the remote object that the current <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> identifies.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the GetRemoteType method to access the members of the remote object that the current &lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract&gt; identifies.","pos":[0,162],"source":"Use the GetRemoteType method to access the members of the remote object that the current <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> identifies."}]},{"pos":[2355,2547],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Contract.Automation.IRemoteTypeContract\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the type of the current <bpt id=\"p2\">&lt;xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.AddIn.Contract.Automation.IRemoteTypeContract\"></xref> that specifies the type of the current <xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"></xref>."},{"pos":[3157,3296],"content":"Casts the object identified by the current <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to a specified type.","needQuote":true,"needEscape":true,"source":"Casts the object identified by the current <xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"></xref> to a specified type."},{"pos":[4181,4234],"content":"The canonical name of the type to cast the object to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The canonical name of the type to cast the object to.","pos":[0,53]}]},{"pos":[4315,4424],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Contract.RemoteArgument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the result of the cast operation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref> that represents the result of the cast operation."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Contract.Automation.IRemoteObjectContract\n  id: IRemoteObjectContract\n  children:\n  - System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType\n  - System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)\n  langs:\n  - csharp\n  name: IRemoteObjectContract\n  nameWithType: IRemoteObjectContract\n  fullName: System.AddIn.Contract.Automation.IRemoteObjectContract\n  type: Interface\n  summary: Defines a contract that components can use to access an object across application domain and process boundaries.\n  remarks: When you implement IRemoteObjectContract on a type, components can use the contract to access type information for objects of the type. Components access type information by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to obtain an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>. The <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> interface defines a contract that components can use to access specific type and member information, and to invoke members.\n  syntax:\n    content: 'public interface IRemoteObjectContract : System.AddIn.Contract.IContract'\n  implements:\n  - System.AddIn.Contract.IContract\n  platform:\n  - net462\n- uid: System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType\n  id: GetRemoteType\n  parent: System.AddIn.Contract.Automation.IRemoteObjectContract\n  langs:\n  - csharp\n  name: GetRemoteType()\n  nameWithType: IRemoteObjectContract.GetRemoteType()\n  fullName: System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Automation\n  summary: Returns an <xref href=\"System.AddIn.Contract.Automation.IRemoteTypeContract\"></xref> that specifies the type of the current <xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"></xref>.\n  remarks: Use the GetRemoteType method to access the members of the remote object that the current <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> identifies.\n  syntax:\n    content: public System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType ();\n    parameters: []\n    return:\n      type: System.AddIn.Contract.Automation.IRemoteTypeContract\n      description: An <xref href=\"System.AddIn.Contract.Automation.IRemoteTypeContract\"></xref> that specifies the type of the current <xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"></xref>.\n  overload: System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)\n  id: RemoteCast(System.String)\n  parent: System.AddIn.Contract.Automation.IRemoteObjectContract\n  langs:\n  - csharp\n  name: RemoteCast(String)\n  nameWithType: IRemoteObjectContract.RemoteCast(String)\n  fullName: System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(String)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Automation\n  summary: Casts the object identified by the current <xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"></xref> to a specified type.\n  remarks: \"A canonical name is a globally unique name, such as a GUID. Strings in the format \\\\<*assembly name*>, \\\\<*fully qualified type name*> are recommended. An example of the recommended format of a canonical name is \\\"ShapeApp, Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application\\\".  \\n  \\n The canonical name for a type cannot change after a type is published in a component. Changing the canonical name of a type in a future version of a component breaks compatibility between the component and clients that are already using the type.  \\n  \\n It is recommended that RemoteCast implementations throw an <xref:System.InvalidCastException> if the cast operation fails.\"\n  syntax:\n    content: public System.AddIn.Contract.RemoteArgument RemoteCast (string canonicalName);\n    parameters:\n    - id: canonicalName\n      type: System.String\n      description: The canonical name of the type to cast the object to.\n    return:\n      type: System.AddIn.Contract.RemoteArgument\n      description: A <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref> that represents the result of the cast operation.\n  overload: System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType\n  parent: System.AddIn.Contract.Automation.IRemoteObjectContract\n  isExternal: false\n  name: GetRemoteType()\n  nameWithType: IRemoteObjectContract.GetRemoteType()\n  fullName: System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType()\n- uid: System.AddIn.Contract.Automation.IRemoteTypeContract\n  parent: System.AddIn.Contract.Automation\n  isExternal: false\n  name: IRemoteTypeContract\n  nameWithType: IRemoteTypeContract\n  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract\n- uid: System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)\n  parent: System.AddIn.Contract.Automation.IRemoteObjectContract\n  isExternal: false\n  name: RemoteCast(String)\n  nameWithType: IRemoteObjectContract.RemoteCast(String)\n  fullName: System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(String)\n- uid: System.AddIn.Contract.RemoteArgument\n  parent: System.AddIn.Contract\n  isExternal: false\n  name: RemoteArgument\n  nameWithType: RemoteArgument\n  fullName: System.AddIn.Contract.RemoteArgument\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType*\n  parent: System.AddIn.Contract.Automation.IRemoteObjectContract\n  isExternal: false\n  name: GetRemoteType\n  nameWithType: IRemoteObjectContract.GetRemoteType\n- uid: System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast*\n  parent: System.AddIn.Contract.Automation.IRemoteObjectContract\n  isExternal: false\n  name: RemoteCast\n  nameWithType: IRemoteObjectContract.RemoteCast\n"}