{"nodes":[{"pos":[1106,1175],"content":"Controls rights to make or accept connections on a transport address.","needQuote":true,"needEscape":true,"nodes":[{"content":"Controls rights to make or accept connections on a transport address.","pos":[0,69]}]},{"pos":[1188,1607],"content":"SocketPermission instances control permission to accept connections or initiate <xref:System.Net.Sockets.Socket> connections. A <xref:System.Net.Sockets.Socket> permission can be established for a host name or IP address, a port number, and a transport protocol.      > [!NOTE] >  Avoid creating socket permissions using host names, as these names have to be resolved to IP addresses, and this might block the stack.","needQuote":false,"needEscape":true,"nodes":[{"content":"SocketPermission instances control permission to accept connections or initiate &lt;xref:System.Net.Sockets.Socket&gt; connections.","pos":[0,125],"source":"SocketPermission instances control permission to accept connections or initiate <xref:System.Net.Sockets.Socket> connections."},{"content":"A &lt;xref:System.Net.Sockets.Socket&gt; permission can be established for a host name or IP address, a port number, and a transport protocol.","pos":[126,262],"source":" A <xref:System.Net.Sockets.Socket> permission can be established for a host name or IP address, a port number, and a transport protocol."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Avoid creating socket permissions using host names, as these names have to be resolved to IP addresses, and this might block the stack.","pos":[268,416],"source":"      > [!NOTE] >  Avoid creating socket permissions using host names, as these names have to be resolved to IP addresses, and this might block the stack."}]},{"pos":[3443,3664],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that allows unrestricted access to the &lt;xref:System.Net.Sockets.Socket&gt; or disallows access to the &lt;xref:System.Net.Sockets.Socket&gt;.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.SocketPermission\"></xref> class that allows unrestricted access to the <xref:System.Net.Sockets.Socket> or disallows access to the <xref:System.Net.Sockets.Socket>."},{"pos":[3676,4109],"content":"If the <xref:System.Net.SocketPermission> instance is created with the `Unrestricted` value from <xref:System.Security.Permissions.PermissionState> then the <xref:System.Net.SocketPermission> instance passes all demands. Any other value for `state` results in a <xref:System.Net.SocketPermission> instance that fails all demands unless a transport address permission is added with <xref:System.Net.SocketPermission.AddPermission%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the &lt;xref:System.Net.SocketPermission&gt; instance is created with the <ph id=\"ph1\">`Unrestricted`</ph> value from &lt;xref:System.Security.Permissions.PermissionState&gt; then the &lt;xref:System.Net.SocketPermission&gt; instance passes all demands.","pos":[0,220],"source":"If the <xref:System.Net.SocketPermission> instance is created with the `Unrestricted` value from <xref:System.Security.Permissions.PermissionState> then the <xref:System.Net.SocketPermission> instance passes all demands."},{"content":"Any other value for <ph id=\"ph1\">`state`</ph> results in a &lt;xref:System.Net.SocketPermission&gt; instance that fails all demands unless a transport address permission is added with &lt;xref:System.Net.SocketPermission.AddPermission%2A&gt;.","pos":[221,433],"source":" Any other value for `state` results in a <xref:System.Net.SocketPermission> instance that fails all demands unless a transport address permission is added with <xref:System.Net.SocketPermission.AddPermission%2A>."}]},{"pos":[4824,4907],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."},{"pos":[5602,5753],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for the given transport address with the specified permission.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.SocketPermission\"></xref> class for the given transport address with the specified permission."},{"pos":[5766,6183],"content":"This constructor creates a <xref:System.Net.SocketPermission> that controls access to the specified `hostName` and `portNumber` using the specified `transport`.       The `hostName` can be a DNS name, an IP address, or a specified IP subnet, such as 192.168.1.*.       The `portNumber` can be any valid port number defined by the transport, or <xref:System.Net.SocketPermission.AllPorts?displayProperty=fullName>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This constructor creates a &lt;xref:System.Net.SocketPermission&gt; that controls access to the specified <ph id=\"ph1\">`hostName`</ph> and <ph id=\"ph2\">`portNumber`</ph> using the specified <ph id=\"ph3\">`transport`</ph>.","pos":[0,160],"source":"This constructor creates a <xref:System.Net.SocketPermission> that controls access to the specified `hostName` and `portNumber` using the specified `transport`."},{"content":"The <ph id=\"ph1\">`hostName`</ph> can be a DNS name, an IP address, or a specified IP subnet, such as 192.168.1.*.","pos":[167,262],"source":"       The `hostName` can be a DNS name, an IP address, or a specified IP subnet, such as 192.168.1.*."},{"content":"The <ph id=\"ph1\">`portNumber`</ph> can be any valid port number defined by the transport, or &lt;xref:System.Net.SocketPermission.AllPorts?displayProperty=fullName&gt;.","pos":[269,413],"source":"       The `portNumber` can be any valid port number defined by the transport, or <xref:System.Net.SocketPermission.AllPorts?displayProperty=fullName>."}]},{"pos":[7000,7064],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Net.NetworkAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Net.NetworkAccess\"></xref> values."},{"pos":[7141,7205],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Net.TransportType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Net.TransportType\"></xref> values."},{"pos":[7270,7310],"content":"The host name for the transport address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The host name for the transport address.","pos":[0,40]}]},{"pos":[7376,7418],"content":"The port number for the transport address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The port number for the transport address.","pos":[0,42]}]},{"pos":[7582,7668],"content":"<ph id=\"ph1\">&lt;code&gt;hostName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>hostName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8004,8162],"content":"Gets a list of <bpt id=\"p1\">&lt;xref href=\"System.Net.EndpointPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances that identifies the endpoints that can be accepted under this permission instance.","needQuote":true,"needEscape":true,"source":"Gets a list of <xref href=\"System.Net.EndpointPermission\"></xref> instances that identifies the endpoints that can be accepted under this permission instance."},{"pos":[8774,8929],"content":"An instance that implements the &lt;xref:System.Collections.IEnumerator&gt; interface that contains <bpt id=\"p1\">&lt;xref href=\"System.Net.EndpointPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances.","needQuote":true,"needEscape":true,"source":"An instance that implements the <xref:System.Collections.IEnumerator> interface that contains <xref href=\"System.Net.EndpointPermission\"></xref> instances."},{"pos":[9629,9697],"content":"Adds a permission to the set of permissions for a transport address.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a permission to the set of permissions for a transport address.","pos":[0,68]}]},{"pos":[9709,9804],"content":"The <ph id=\"ph1\">`hostName`</ph> can be a DNS name, an IP address, or a specified IP subnet, such as 192.168.1.*.","needQuote":true,"needEscape":true,"source":"The `hostName` can be a DNS name, an IP address, or a specified IP subnet, such as 192.168.1.*."},{"pos":[10515,10579],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Net.NetworkAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Net.NetworkAccess\"></xref> values."},{"pos":[10656,10720],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Net.TransportType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Net.TransportType\"></xref> values."},{"pos":[10785,10825],"content":"The host name for the transport address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The host name for the transport address.","pos":[0,40]}]},{"pos":[10891,10933],"content":"The port number for the transport address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The port number for the transport address.","pos":[0,42]}]},{"pos":[11105,11191],"content":"<ph id=\"ph1\">&lt;code&gt;hostName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>hostName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11514,11559],"content":"Defines a constant that represents all ports.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines a constant that represents all ports.","pos":[0,45]}]},{"pos":[11571,11626],"content":"This field is read-only. The value of this field is -1.","needQuote":true,"needEscape":true,"nodes":[{"content":"This field is read-only. The value of this field is -1.","pos":[0,55],"nodes":[{"content":"This field is read-only.","pos":[0,24]},{"content":"The value of this field is -1.","pos":[25,55]}]}]},{"pos":[12215,12227],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12585,12747],"content":"Gets a list of <bpt id=\"p1\">&lt;xref href=\"System.Net.EndpointPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances that identifies the endpoints that can be connected to under this permission instance.","needQuote":true,"needEscape":true,"source":"Gets a list of <xref href=\"System.Net.EndpointPermission\"></xref> instances that identifies the endpoints that can be connected to under this permission instance."},{"pos":[13395,13550],"content":"An instance that implements the &lt;xref:System.Collections.IEnumerator&gt; interface that contains <bpt id=\"p1\">&lt;xref href=\"System.Net.EndpointPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances.","needQuote":true,"needEscape":true,"source":"An instance that implements the <xref:System.Collections.IEnumerator> interface that contains <xref href=\"System.Net.EndpointPermission\"></xref> instances."},{"pos":[13930,14008],"content":"Creates a copy of a <bpt id=\"p1\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Creates a copy of a <xref href=\"System.Net.SocketPermission\"></xref> instance."},{"pos":[14020,14269],"content":"The object returned by this method represents the same level of access as the current instance. This method overrides <xref:System.Security.CodeAccessPermission.Copy%2A> and is implemented to support the <xref:System.Security.IPermission> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object returned by this method represents the same level of access as the current instance. This method overrides <xref:System.Security.CodeAccessPermission.Copy%2A> and is implemented to support the <xref:System.Security.IPermission> interface.","pos":[0,249],"nodes":[{"content":"The object returned by this method represents the same level of access as the current instance.","pos":[0,95]},{"content":"This method overrides &lt;xref:System.Security.CodeAccessPermission.Copy%2A&gt; and is implemented to support the &lt;xref:System.Security.IPermission&gt; interface.","pos":[96,249],"source":" This method overrides <xref:System.Security.CodeAccessPermission.Copy%2A> and is implemented to support the <xref:System.Security.IPermission> interface."}]}]},{"pos":[14892,15008],"content":"A new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that is a copy of the current instance.","needQuote":true,"needEscape":true,"source":"A new instance of the <xref href=\"System.Net.SocketPermission\"></xref> class that is a copy of the current instance."},{"pos":[15507,15600],"content":"Reconstructs a <bpt id=\"p1\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance for an XML encoding.","needQuote":true,"needEscape":true,"source":"Reconstructs a <xref href=\"System.Net.SocketPermission\"></xref> instance for an XML encoding."},{"pos":[15613,15935],"content":"The FromXml method reconstructs a <xref:System.Net.SocketPermission> instance from an XML encoding defined by the <xref:System.Security.SecurityElement> class.       Use the <xref:System.Net.SocketPermission.ToXml%2A> method to encode the <xref:System.Net.SocketPermission> instance, including state information, in XML.","needQuote":false,"needEscape":true,"nodes":[{"content":"The FromXml method reconstructs a <xref:System.Net.SocketPermission> instance from an XML encoding defined by the <xref:System.Security.SecurityElement> class.       Use the <xref:System.Net.SocketPermission.ToXml%2A> method to encode the <xref:System.Net.SocketPermission> instance, including state information, in XML.","pos":[0,320],"nodes":[{"content":"The FromXml method reconstructs a &lt;xref:System.Net.SocketPermission&gt; instance from an XML encoding defined by the &lt;xref:System.Security.SecurityElement&gt; class.","pos":[0,159],"source":"The FromXml method reconstructs a <xref:System.Net.SocketPermission> instance from an XML encoding defined by the <xref:System.Security.SecurityElement> class."},{"content":"Use the &lt;xref:System.Net.SocketPermission.ToXml%2A&gt; method to encode the &lt;xref:System.Net.SocketPermission&gt; instance, including state information, in XML.","pos":[166,320],"source":"       Use the <xref:System.Net.SocketPermission.ToXml%2A> method to encode the <xref:System.Net.SocketPermission> instance, including state information, in XML."}]}]},{"pos":[16638,16737],"content":"The XML encoding used to reconstruct the <bpt id=\"p1\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"The XML encoding used to reconstruct the <xref href=\"System.Net.SocketPermission\"></xref> instance."},{"pos":[16903,17000],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">securityElement</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>securityElement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[17095,17170],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">securityElement</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not a permission element for this type.","needQuote":true,"needEscape":true,"source":"The <code>securityElement</code> is not a permission element for this type."},{"pos":[17596,17700],"content":"Returns the logical intersection between two <bpt id=\"p1\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances.","needQuote":true,"needEscape":true,"source":"Returns the logical intersection between two <xref href=\"System.Net.SocketPermission\"></xref> instances."},{"pos":[17712,18137],"content":"The intersection of two permissions is a permission that helps to protect the resources and operations protected by both permissions. Specifically, it represents the minimum permission such that any demand that passes both permissions also passes their intersection. This method overrides <xref:System.Security.CodeAccessPermission.Intersect%2A> and is implemented to support the <xref:System.Security.IPermission> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"The intersection of two permissions is a permission that helps to protect the resources and operations protected by both permissions. Specifically, it represents the minimum permission such that any demand that passes both permissions also passes their intersection. This method overrides <xref:System.Security.CodeAccessPermission.Intersect%2A> and is implemented to support the <xref:System.Security.IPermission> interface.","pos":[0,425],"nodes":[{"content":"The intersection of two permissions is a permission that helps to protect the resources and operations protected by both permissions.","pos":[0,133]},{"content":"Specifically, it represents the minimum permission such that any demand that passes both permissions also passes their intersection.","pos":[134,266]},{"content":"This method overrides &lt;xref:System.Security.CodeAccessPermission.Intersect%2A&gt; and is implemented to support the &lt;xref:System.Security.IPermission&gt; interface.","pos":[267,425],"source":" This method overrides <xref:System.Security.CodeAccessPermission.Intersect%2A> and is implemented to support the <xref:System.Security.IPermission> interface."}]}]},{"pos":[18853,18954],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to intersect with the current instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Net.SocketPermission\"></xref> instance to intersect with the current instance."},{"pos":[19026,19437],"content":"The <xref href=\"System.Net.SocketPermission\"></xref> instance that represents the intersection of two <xref href=\"System.Net.SocketPermission\"></xref> instances. If the intersection is empty, the method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. If the <code>target</code> parameter is a null reference, the method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that represents the intersection of two <bpt id=\"p2\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances.","pos":[0,161],"source":"The <xref href=\"System.Net.SocketPermission\"></xref> instance that represents the intersection of two <xref href=\"System.Net.SocketPermission\"></xref> instances."},{"content":"If the intersection is empty, the method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[162,272],"source":" If the intersection is empty, the method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is a null reference, the method returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[273,411],"source":" If the <code>target</code> parameter is a null reference, the method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[19597,19689],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a <bpt id=\"p2\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>target</code> parameter is not a <xref href=\"System.Net.SocketPermission\"></xref>."},{"pos":[19802,19884],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Net.DnsPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not granted to the method caller.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Net.DnsPermission\"></xref> is not granted to the method caller."},{"pos":[20315,20392],"content":"Determines if the current permission is a subset of the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines if the current permission is a subset of the specified permission.","pos":[0,77]}]},{"pos":[20405,20865],"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.       For example, a permission that represents access to 192.168.1.1:80 is a subset of a permission that represents access to 192.168.1.1:Any. If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.","needQuote":false,"needEscape":true,"nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.","pos":[0,172]},{"content":"For example, a permission that represents access to 192.168.1.1:80 is a subset of a permission that represents access to 192.168.1.1:Any.","pos":[179,316]},{"content":"If this method returns <ph id=\"ph1\">`true`</ph>, the current permission represents no more access to the protected resource than does the specified permission.","pos":[317,458],"source":" If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission."}]},{"pos":[21503,21603],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is to be tested for the subset relationship.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Net.SocketPermission\"></xref> that is to be tested for the subset relationship."},{"pos":[21662,22278],"content":"If <code>target</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current instance defines no permissions; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. If <code>target</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current instance defines a subset of <code>target</code> permissions; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, this method returns <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the current instance defines no permissions; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[0,291],"source":"If <code>target</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current instance defines no permissions; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, this method returns <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the current instance defines a subset of <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph2\">target</ph><ept id=\"p4\">&lt;/code&gt;</ept> permissions; otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","pos":[292,616],"source":" If <code>target</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current instance defines a subset of <code>target</code> permissions; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[22439,22510],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>target</code> is not a <xref:System.Net.Sockets.SocketException>."},{"pos":[22623,22705],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Net.DnsPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not granted to the method caller.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Net.DnsPermission\"></xref> is not granted to the method caller."},{"pos":[23065,23115],"content":"Checks the overall permission state of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Checks the overall permission state of the object.","pos":[0,50]}]},{"pos":[23756,24130],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance is created with the <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_Unrestricted\" name=\"Unrestricted\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> value from <bpt id=\"p4\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Net.SocketPermission\"></xref> instance is created with the <xref uid=\"langword_csharp_Unrestricted\" name=\"Unrestricted\" href=\"\"></xref> value from <xref href=\"System.Security.Permissions.PermissionState\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24518,24627],"content":"Creates an XML encoding of a <bpt id=\"p1\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance and its current state.","needQuote":true,"needEscape":true,"source":"Creates an XML encoding of a <xref href=\"System.Net.SocketPermission\"></xref> instance and its current state."},{"pos":[24640,24988],"content":"The ToXml method creates a <xref:System.Security.SecurityElement> instance to encode a representation of the <xref:System.Net.SocketPermission> instance, including state information, in XML.       Use the <xref:System.Net.SocketPermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement> instance.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ToXml method creates a <xref:System.Security.SecurityElement> instance to encode a representation of the <xref:System.Net.SocketPermission> instance, including state information, in XML.       Use the <xref:System.Net.SocketPermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement> instance.","pos":[0,346],"nodes":[{"content":"The ToXml method creates a &lt;xref:System.Security.SecurityElement&gt; instance to encode a representation of the &lt;xref:System.Net.SocketPermission&gt; instance, including state information, in XML.","pos":[0,190],"source":"The ToXml method creates a <xref:System.Security.SecurityElement> instance to encode a representation of the <xref:System.Net.SocketPermission> instance, including state information, in XML."},{"content":"Use the &lt;xref:System.Net.SocketPermission.FromXml%2A&gt; method to restore the state information from a &lt;xref:System.Security.SecurityElement&gt; instance.","pos":[197,346],"source":"       Use the <xref:System.Net.SocketPermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement> instance."}]}]},{"pos":[25616,25818],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that contains an XML-encoded representation of the <bpt id=\"p2\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance, including state information.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.SecurityElement\"></xref> instance that contains an XML-encoded representation of the <xref href=\"System.Net.SocketPermission\"></xref> instance, including state information."},{"pos":[26288,26385],"content":"Returns the logical union between two <bpt id=\"p1\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances.","needQuote":true,"needEscape":true,"source":"Returns the logical union between two <xref href=\"System.Net.SocketPermission\"></xref> instances."},{"pos":[26397,26845],"content":"The result of a call to Union is a permission that represents all of the access to <xref:System.Net.Sockets.Socket> connections represented by the current instance as well as the access represented by `target`. Any demand that passes either the current instance or `target` passes their union. This method overrides <xref:System.Security.CodeAccessPermission.Union%2A> and is implemented to support the <xref:System.Security.IPermission> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of a call to Union is a permission that represents all of the access to &lt;xref:System.Net.Sockets.Socket&gt; connections represented by the current instance as well as the access represented by <ph id=\"ph1\">`target`</ph>.","pos":[0,210],"source":"The result of a call to Union is a permission that represents all of the access to <xref:System.Net.Sockets.Socket> connections represented by the current instance as well as the access represented by `target`."},{"content":"Any demand that passes either the current instance or <ph id=\"ph1\">`target`</ph> passes their union.","pos":[211,293],"source":" Any demand that passes either the current instance or `target` passes their union."},{"content":"This method overrides &lt;xref:System.Security.CodeAccessPermission.Union%2A&gt; and is implemented to support the &lt;xref:System.Security.IPermission&gt; interface.","pos":[294,448],"source":" This method overrides <xref:System.Security.CodeAccessPermission.Union%2A> and is implemented to support the <xref:System.Security.IPermission> interface."}]},{"pos":[27504,27603],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to combine with the current instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Net.SocketPermission\"></xref> instance to combine with the current instance."},{"pos":[27675,27970],"content":"The <xref href=\"System.Net.SocketPermission\"></xref> instance that represents the union of two <xref href=\"System.Net.SocketPermission\"></xref> instances. If <code>target</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, it returns a copy of the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that represents the union of two <bpt id=\"p2\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances.","pos":[0,154],"source":"The <xref href=\"System.Net.SocketPermission\"></xref> instance that represents the union of two <xref href=\"System.Net.SocketPermission\"></xref> instances."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, it returns a copy of the current instance.","pos":[155,295],"source":" If <code>target</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, it returns a copy of the current instance."}]},{"pos":[28126,28204],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not a <bpt id=\"p1\">&lt;xref href=\"System.Net.SocketPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>target</code> is not a <xref href=\"System.Net.SocketPermission\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.SocketPermission\n  id: SocketPermission\n  children:\n  - System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)\n  - System.Net.SocketPermission.AcceptList\n  - System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)\n  - System.Net.SocketPermission.AllPorts\n  - System.Net.SocketPermission.ConnectList\n  - System.Net.SocketPermission.Copy\n  - System.Net.SocketPermission.FromXml(System.Security.SecurityElement)\n  - System.Net.SocketPermission.Intersect(System.Security.IPermission)\n  - System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Net.SocketPermission.IsUnrestricted\n  - System.Net.SocketPermission.ToXml\n  - System.Net.SocketPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: SocketPermission\n  nameWithType: SocketPermission\n  fullName: System.Net.SocketPermission\n  type: Class\n  summary: Controls rights to make or accept connections on a transport address.\n  remarks: \"SocketPermission instances control permission to accept connections or initiate <xref:System.Net.Sockets.Socket> connections. A <xref:System.Net.Sockets.Socket> permission can be established for a host name or IP address, a port number, and a transport protocol.  \\n  \\n> [!NOTE]\\n>  Avoid creating socket permissions using host names, as these names have to be resolved to IP addresses, and this might block the stack.\"\n  example:\n  - \"The following example demonstrates how to use the SocketPermission class to set, change, and enforce various socket access restrictions.  \\n  \\n [!code-cs[SocketPermissionExample#1](~/add/codesnippet/csharp/t-system.net.socketpermi_1.cs)]\\n [!code-vb[SocketPermissionExample#1](~/add/codesnippet/visualbasic/t-system.net.socketpermi_1.vb)]\\n [!code-cpp[SocketPermissionExample#1](~/add/codesnippet/cpp/t-system.net.socketpermi_1.cpp)]\"\n  syntax:\n    content: 'public sealed class SocketPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net462\n- uid: System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Net.SocketPermission\n  langs:\n  - csharp\n  name: SocketPermission(PermissionState)\n  nameWithType: SocketPermission.SocketPermission(PermissionState)\n  fullName: System.Net.SocketPermission.SocketPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Initializes a new instance of the <xref href=\"System.Net.SocketPermission\"></xref> class that allows unrestricted access to the <xref:System.Net.Sockets.Socket> or disallows access to the <xref:System.Net.Sockets.Socket>.\n  remarks: If the <xref:System.Net.SocketPermission> instance is created with the `Unrestricted` value from <xref:System.Security.Permissions.PermissionState> then the <xref:System.Net.SocketPermission> instance passes all demands. Any other value for `state` results in a <xref:System.Net.SocketPermission> instance that fails all demands unless a transport address permission is added with <xref:System.Net.SocketPermission.AddPermission%2A>.\n  example:\n  - \"The following example creates a <xref:System.Net.SocketPermission> using a <xref:System.Security.Permissions.PermissionState> enumerated value.  \\n  \\n [!code-cpp[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/cpp/0407ee1f-774e-4447-a7b4-_1.cpp)]\\n [!code-vb[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/visualbasic/0407ee1f-774e-4447-a7b4-_1.vb)]\\n [!code-cs[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/csharp/0407ee1f-774e-4447-a7b4-_1.cs)]\"\n  syntax:\n    content: public SocketPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Net.SocketPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)\n  id: '#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)'\n  parent: System.Net.SocketPermission\n  langs:\n  - csharp\n  name: SocketPermission(NetworkAccess,TransportType,String,Int32)\n  nameWithType: SocketPermission.SocketPermission(NetworkAccess,TransportType,String,Int32)\n  fullName: System.Net.SocketPermission.SocketPermission(NetworkAccess,TransportType,String,Int32)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Initializes a new instance of the <xref href=\"System.Net.SocketPermission\"></xref> class for the given transport address with the specified permission.\n  remarks: \"This constructor creates a <xref:System.Net.SocketPermission> that controls access to the specified `hostName` and `portNumber` using the specified `transport`.  \\n  \\n The `hostName` can be a DNS name, an IP address, or a specified IP subnet, such as 192.168.1.*.  \\n  \\n The `portNumber` can be any valid port number defined by the transport, or <xref:System.Net.SocketPermission.AllPorts?displayProperty=fullName>.\"\n  example:\n  - \"The following example creates a <xref:System.Net.SocketPermission> using a <xref:System.Net.NetworkAccess> enumerated value, a <xref:System.Net.TransportType> enumerated value, the hostname, and the port number.  \\n  \\n [!code-cpp[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/cpp/1e71f379-a56e-49d8-98b6-_1.cpp)]\\n [!code-vb[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/visualbasic/1e71f379-a56e-49d8-98b6-_1.vb)]\\n [!code-cs[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/csharp/1e71f379-a56e-49d8-98b6-_1.cs)]\"\n  syntax:\n    content: public SocketPermission (System.Net.NetworkAccess access, System.Net.TransportType transport, string hostName, int portNumber);\n    parameters:\n    - id: access\n      type: System.Net.NetworkAccess\n      description: One of the <xref href=\"System.Net.NetworkAccess\"></xref> values.\n    - id: transport\n      type: System.Net.TransportType\n      description: One of the <xref href=\"System.Net.TransportType\"></xref> values.\n    - id: hostName\n      type: System.String\n      description: The host name for the transport address.\n    - id: portNumber\n      type: System.Int32\n      description: The port number for the transport address.\n  overload: System.Net.SocketPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>hostName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Net.SocketPermission.AcceptList\n  id: AcceptList\n  parent: System.Net.SocketPermission\n  langs:\n  - csharp\n  name: AcceptList\n  nameWithType: SocketPermission.AcceptList\n  fullName: System.Net.SocketPermission.AcceptList\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets a list of <xref href=\"System.Net.EndpointPermission\"></xref> instances that identifies the endpoints that can be accepted under this permission instance.\n  remarks: ''\n  example:\n  - \"The following example uses the AcceptList property to return a list of endpoints to which accept privileges are granted.  \\n  \\n [!code-cs[SocketPermissionExample#2](~/add/codesnippet/csharp/p-system.net.socketpermi_1_1.cs)]\\n [!code-vb[SocketPermissionExample#2](~/add/codesnippet/visualbasic/p-system.net.socketpermi_1_1.vb)]\\n [!code-cpp[SocketPermissionExample#2](~/add/codesnippet/cpp/p-system.net.socketpermi_1_1.cpp)]\"\n  syntax:\n    content: public System.Collections.IEnumerator AcceptList { get; }\n    return:\n      type: System.Collections.IEnumerator\n      description: An instance that implements the <xref:System.Collections.IEnumerator> interface that contains <xref href=\"System.Net.EndpointPermission\"></xref> instances.\n  overload: System.Net.SocketPermission.AcceptList*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)\n  id: AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)\n  parent: System.Net.SocketPermission\n  langs:\n  - csharp\n  name: AddPermission(NetworkAccess,TransportType,String,Int32)\n  nameWithType: SocketPermission.AddPermission(NetworkAccess,TransportType,String,Int32)\n  fullName: System.Net.SocketPermission.AddPermission(NetworkAccess,TransportType,String,Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Adds a permission to the set of permissions for a transport address.\n  remarks: The `hostName` can be a DNS name, an IP address, or a specified IP subnet, such as 192.168.1.*.\n  example:\n  - \"The following example uses the AddPermission method to add connection permissions to the specified host.  \\n  \\n [!code-cpp[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/cpp/d5f881e9-ca35-4558-976c-_1.cpp)]\\n [!code-vb[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/visualbasic/d5f881e9-ca35-4558-976c-_1.vb)]\\n [!code-cs[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/csharp/d5f881e9-ca35-4558-976c-_1.cs)]\"\n  syntax:\n    content: public void AddPermission (System.Net.NetworkAccess access, System.Net.TransportType transport, string hostName, int portNumber);\n    parameters:\n    - id: access\n      type: System.Net.NetworkAccess\n      description: One of the <xref href=\"System.Net.NetworkAccess\"></xref> values.\n    - id: transport\n      type: System.Net.TransportType\n      description: One of the <xref href=\"System.Net.TransportType\"></xref> values.\n    - id: hostName\n      type: System.String\n      description: The host name for the transport address.\n    - id: portNumber\n      type: System.Int32\n      description: The port number for the transport address.\n  overload: System.Net.SocketPermission.AddPermission*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>hostName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Net.SocketPermission.AllPorts\n  id: AllPorts\n  parent: System.Net.SocketPermission\n  langs:\n  - csharp\n  name: AllPorts\n  nameWithType: SocketPermission.AllPorts\n  fullName: System.Net.SocketPermission.AllPorts\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Defines a constant that represents all ports.\n  remarks: This field is read-only. The value of this field is -1.\n  example:\n  - \"The following example uses the AllPorts property to provide connection permissions to all of the resources ports.  \\n  \\n [!code-cpp[DateClient_SocketPermission_Constructor#1](~/add/codesnippet/cpp/f-system.net.socketpermi_1.cpp)]\\n [!code-vb[DateClient_SocketPermission_Constructor#1](~/add/codesnippet/visualbasic/f-system.net.socketpermi_1.vb)]\\n [!code-cs[DateClient_SocketPermission_Constructor#1](~/add/codesnippet/csharp/f-system.net.socketpermi_1.cs)]\"\n  syntax:\n    content: public const int AllPorts = -1;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.SocketPermission.ConnectList\n  id: ConnectList\n  parent: System.Net.SocketPermission\n  langs:\n  - csharp\n  name: ConnectList\n  nameWithType: SocketPermission.ConnectList\n  fullName: System.Net.SocketPermission.ConnectList\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets a list of <xref href=\"System.Net.EndpointPermission\"></xref> instances that identifies the endpoints that can be connected to under this permission instance.\n  remarks: ''\n  example:\n  - \"The following example uses the ConnectList property to return a list of endpoints to which connection privileges are granted.  \\n  \\n [!code-cs[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/csharp/p-system.net.socketpermi_0_1.cs)]\\n [!code-cpp[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/cpp/p-system.net.socketpermi_0_1.cpp)]\\n [!code-vb[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/visualbasic/p-system.net.socketpermi_0_1.vb)]\"\n  syntax:\n    content: public System.Collections.IEnumerator ConnectList { get; }\n    return:\n      type: System.Collections.IEnumerator\n      description: An instance that implements the <xref:System.Collections.IEnumerator> interface that contains <xref href=\"System.Net.EndpointPermission\"></xref> instances.\n  overload: System.Net.SocketPermission.ConnectList*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.SocketPermission.Copy\n  id: Copy\n  parent: System.Net.SocketPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: SocketPermission.Copy()\n  fullName: System.Net.SocketPermission.Copy()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Creates a copy of a <xref href=\"System.Net.SocketPermission\"></xref> instance.\n  remarks: The object returned by this method represents the same level of access as the current instance. This method overrides <xref:System.Security.CodeAccessPermission.Copy%2A> and is implemented to support the <xref:System.Security.IPermission> interface.\n  example:\n  - \"The following example creates a <xref:System.Net.SocketPermission> by taking a copy of an existing <xref:System.Net.SocketPermission>.  \\n  \\n [!code-cs[SocketPermissionExample#4](~/add/codesnippet/csharp/m-system.net.socketpermi_2_1.cs)]\\n [!code-vb[SocketPermissionExample#4](~/add/codesnippet/visualbasic/m-system.net.socketpermi_2_1.vb)]\\n [!code-cpp[SocketPermissionExample#4](~/add/codesnippet/cpp/m-system.net.socketpermi_2_1.cpp)]\"\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A new instance of the <xref href=\"System.Net.SocketPermission\"></xref> class that is a copy of the current instance.\n  overload: System.Net.SocketPermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.SocketPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Net.SocketPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: SocketPermission.FromXml(SecurityElement)\n  fullName: System.Net.SocketPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Reconstructs a <xref href=\"System.Net.SocketPermission\"></xref> instance for an XML encoding.\n  remarks: \"The FromXml method reconstructs a <xref:System.Net.SocketPermission> instance from an XML encoding defined by the <xref:System.Security.SecurityElement> class.  \\n  \\n Use the <xref:System.Net.SocketPermission.ToXml%2A> method to encode the <xref:System.Net.SocketPermission> instance, including state information, in XML.\"\n  example:\n  - \"The following example uses the FromXml method to convert XML encoded data to a <xref:System.Net.SocketPermission> instance.  \\n  \\n [!code-cpp[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/cpp/m-system.net.socketpermi_6_1.cpp)]\\n [!code-vb[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/visualbasic/m-system.net.socketpermi_6_1.vb)]\\n [!code-cs[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/csharp/m-system.net.socketpermi_6_1.cs)]\"\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: The XML encoding used to reconstruct the <xref href=\"System.Net.SocketPermission\"></xref> instance.\n  overload: System.Net.SocketPermission.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>securityElement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>securityElement</code> is not a permission element for this type.\n  platform:\n  - net462\n- uid: System.Net.SocketPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Net.SocketPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: SocketPermission.Intersect(IPermission)\n  fullName: System.Net.SocketPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Returns the logical intersection between two <xref href=\"System.Net.SocketPermission\"></xref> instances.\n  remarks: The intersection of two permissions is a permission that helps to protect the resources and operations protected by both permissions. Specifically, it represents the minimum permission such that any demand that passes both permissions also passes their intersection. This method overrides <xref:System.Security.CodeAccessPermission.Intersect%2A> and is implemented to support the <xref:System.Security.IPermission> interface.\n  example:\n  - \"The following example uses the Intersect method to obtain a logical intersection between two <xref:System.Net.SocketPermission> instances.  \\n  \\n [!code-cpp[DateClient_SocketPermission_Constructor#1](~/add/codesnippet/cpp/m-system.net.socketpermi_0_1.cpp)]\\n [!code-vb[DateClient_SocketPermission_Constructor#1](~/add/codesnippet/visualbasic/m-system.net.socketpermi_0_1.vb)]\\n [!code-cs[DateClient_SocketPermission_Constructor#1](~/add/codesnippet/csharp/m-system.net.socketpermi_0_1.cs)]\"\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: The <xref href=\"System.Net.SocketPermission\"></xref> instance to intersect with the current instance.\n    return:\n      type: System.Security.IPermission\n      description: The <xref href=\"System.Net.SocketPermission\"></xref> instance that represents the intersection of two <xref href=\"System.Net.SocketPermission\"></xref> instances. If the intersection is empty, the method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. If the <code>target</code> parameter is a null reference, the method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Net.SocketPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not a <xref href=\"System.Net.SocketPermission\"></xref>.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: <xref href=\"System.Net.DnsPermission\"></xref> is not granted to the method caller.\n  platform:\n  - net462\n- uid: System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Net.SocketPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: SocketPermission.IsSubsetOf(IPermission)\n  fullName: System.Net.SocketPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Determines if the current permission is a subset of the specified permission.\n  remarks: \"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.  \\n  \\n For example, a permission that represents access to 192.168.1.1:80 is a subset of a permission that represents access to 192.168.1.1:Any. If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.\"\n  example:\n  - \"The following example uses the IsSubsetOf method to determine if one <xref:System.Net.SocketPermission> is the subset of another.  \\n  \\n [!code-cs[SocketPermissionExample#2](~/add/codesnippet/csharp/m-system.net.socketpermi_5_1.cs)]\\n [!code-vb[SocketPermissionExample#2](~/add/codesnippet/visualbasic/m-system.net.socketpermi_5_1.vb)]\\n [!code-cpp[SocketPermissionExample#2](~/add/codesnippet/cpp/m-system.net.socketpermi_5_1.cpp)]\"\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A <xref href=\"System.Net.SocketPermission\"></xref> that is to be tested for the subset relationship.\n    return:\n      type: System.Boolean\n      description: If <code>target</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current instance defines no permissions; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. If <code>target</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current instance defines a subset of <code>target</code> permissions; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.SocketPermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not a <xref:System.Net.Sockets.SocketException>.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: <xref href=\"System.Net.DnsPermission\"></xref> is not granted to the method caller.\n  platform:\n  - net462\n- uid: System.Net.SocketPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Net.SocketPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: SocketPermission.IsUnrestricted()\n  fullName: System.Net.SocketPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Checks the overall permission state of the object.\n  remarks: ''\n  example:\n  - \"The following example checks the IsUnrestricted property to determine if the specified <xref:System.Net.SocketPermission> has any restrictions.  \\n  \\n [!code-cs[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/csharp/m-system.net.socketpermi_4_1.cs)]\\n [!code-cpp[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/cpp/m-system.net.socketpermi_4_1.cpp)]\\n [!code-vb[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/visualbasic/m-system.net.socketpermi_4_1.vb)]\"\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Net.SocketPermission\"></xref> instance is created with the <xref uid=\"langword_csharp_Unrestricted\" name=\"Unrestricted\" href=\"\"></xref> value from <xref href=\"System.Security.Permissions.PermissionState\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.SocketPermission.IsUnrestricted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.SocketPermission.ToXml\n  id: ToXml\n  parent: System.Net.SocketPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: SocketPermission.ToXml()\n  fullName: System.Net.SocketPermission.ToXml()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Creates an XML encoding of a <xref href=\"System.Net.SocketPermission\"></xref> instance and its current state.\n  remarks: \"The ToXml method creates a <xref:System.Security.SecurityElement> instance to encode a representation of the <xref:System.Net.SocketPermission> instance, including state information, in XML.  \\n  \\n Use the <xref:System.Net.SocketPermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement> instance.\"\n  example:\n  - \"The following example uses the ToXml method to convert a <xref:System.Net.SocketPermission> to XML.  \\n  \\n [!code-cs[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/csharp/m-system.net.socketpermi_1_1.cs)]\\n [!code-cpp[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/cpp/m-system.net.socketpermi_1_1.cpp)]\\n [!code-vb[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/visualbasic/m-system.net.socketpermi_1_1.vb)]\"\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: A <xref href=\"System.Security.SecurityElement\"></xref> instance that contains an XML-encoded representation of the <xref href=\"System.Net.SocketPermission\"></xref> instance, including state information.\n  overload: System.Net.SocketPermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.SocketPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Net.SocketPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: SocketPermission.Union(IPermission)\n  fullName: System.Net.SocketPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Returns the logical union between two <xref href=\"System.Net.SocketPermission\"></xref> instances.\n  remarks: The result of a call to Union is a permission that represents all of the access to <xref:System.Net.Sockets.Socket> connections represented by the current instance as well as the access represented by `target`. Any demand that passes either the current instance or `target` passes their union. This method overrides <xref:System.Security.CodeAccessPermission.Union%2A> and is implemented to support the <xref:System.Security.IPermission> interface.\n  example:\n  - \"The following example uses the Union method to return the logical union of two existing <xref:System.Net.SocketPermission> instances.  \\n  \\n [!code-cs[SocketPermissionExample#2](~/add/codesnippet/csharp/m-system.net.socketpermi_3_1.cs)]\\n [!code-vb[SocketPermissionExample#2](~/add/codesnippet/visualbasic/m-system.net.socketpermi_3_1.vb)]\\n [!code-cpp[SocketPermissionExample#2](~/add/codesnippet/cpp/m-system.net.socketpermi_3_1.cpp)]\"\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: The <xref href=\"System.Net.SocketPermission\"></xref> instance to combine with the current instance.\n    return:\n      type: System.Security.IPermission\n      description: The <xref href=\"System.Net.SocketPermission\"></xref> instance that represents the union of two <xref href=\"System.Net.SocketPermission\"></xref> instances. If <code>target</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, it returns a copy of the current instance.\n  overload: System.Net.SocketPermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not a <xref href=\"System.Net.SocketPermission\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: SocketPermission(PermissionState)\n  nameWithType: SocketPermission.SocketPermission(PermissionState)\n  fullName: System.Net.SocketPermission.SocketPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: SocketPermission(NetworkAccess,TransportType,String,Int32)\n  nameWithType: SocketPermission.SocketPermission(NetworkAccess,TransportType,String,Int32)\n  fullName: System.Net.SocketPermission.SocketPermission(NetworkAccess,TransportType,String,Int32)\n- uid: System.Net.NetworkAccess\n  parent: System.Net\n  isExternal: false\n  name: NetworkAccess\n  nameWithType: NetworkAccess\n  fullName: System.Net.NetworkAccess\n- uid: System.Net.TransportType\n  parent: System.Net\n  isExternal: false\n  name: TransportType\n  nameWithType: TransportType\n  fullName: System.Net.TransportType\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.SocketPermission.AcceptList\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: AcceptList\n  nameWithType: SocketPermission.AcceptList\n  fullName: System.Net.SocketPermission.AcceptList\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: AddPermission(NetworkAccess,TransportType,String,Int32)\n  nameWithType: SocketPermission.AddPermission(NetworkAccess,TransportType,String,Int32)\n  fullName: System.Net.SocketPermission.AddPermission(NetworkAccess,TransportType,String,Int32)\n- uid: System.Net.SocketPermission.AllPorts\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: AllPorts\n  nameWithType: SocketPermission.AllPorts\n  fullName: System.Net.SocketPermission.AllPorts\n- uid: System.Net.SocketPermission.ConnectList\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: ConnectList\n  nameWithType: SocketPermission.ConnectList\n  fullName: System.Net.SocketPermission.ConnectList\n- uid: System.Net.SocketPermission.Copy\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: SocketPermission.Copy()\n  fullName: System.Net.SocketPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Net.SocketPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: SocketPermission.FromXml(SecurityElement)\n  fullName: System.Net.SocketPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Net.SocketPermission.Intersect(System.Security.IPermission)\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: SocketPermission.Intersect(IPermission)\n  fullName: System.Net.SocketPermission.Intersect(IPermission)\n- uid: System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: SocketPermission.IsSubsetOf(IPermission)\n  fullName: System.Net.SocketPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.SocketPermission.IsUnrestricted\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: SocketPermission.IsUnrestricted()\n  fullName: System.Net.SocketPermission.IsUnrestricted()\n- uid: System.Net.SocketPermission.ToXml\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: SocketPermission.ToXml()\n  fullName: System.Net.SocketPermission.ToXml()\n- uid: System.Net.SocketPermission.Union(System.Security.IPermission)\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: SocketPermission.Union(IPermission)\n  fullName: System.Net.SocketPermission.Union(IPermission)\n- uid: System.Net.SocketPermission.#ctor*\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: SocketPermission\n  nameWithType: SocketPermission.SocketPermission\n- uid: System.Net.SocketPermission.AcceptList*\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: AcceptList\n  nameWithType: SocketPermission.AcceptList\n- uid: System.Net.SocketPermission.AddPermission*\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: AddPermission\n  nameWithType: SocketPermission.AddPermission\n- uid: System.Net.SocketPermission.ConnectList*\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: ConnectList\n  nameWithType: SocketPermission.ConnectList\n- uid: System.Net.SocketPermission.Copy*\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: Copy\n  nameWithType: SocketPermission.Copy\n- uid: System.Net.SocketPermission.FromXml*\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: SocketPermission.FromXml\n- uid: System.Net.SocketPermission.Intersect*\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: SocketPermission.Intersect\n- uid: System.Net.SocketPermission.IsSubsetOf*\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: SocketPermission.IsSubsetOf\n- uid: System.Net.SocketPermission.IsUnrestricted*\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: SocketPermission.IsUnrestricted\n- uid: System.Net.SocketPermission.ToXml*\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: SocketPermission.ToXml\n- uid: System.Net.SocketPermission.Union*\n  parent: System.Net.SocketPermission\n  isExternal: false\n  name: Union\n  nameWithType: SocketPermission.Union\n"}