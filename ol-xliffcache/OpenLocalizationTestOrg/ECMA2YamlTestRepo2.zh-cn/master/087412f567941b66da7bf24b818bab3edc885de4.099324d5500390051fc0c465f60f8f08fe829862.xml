{"nodes":[{"pos":[3163,3237],"content":"Represents a control that can be used to display or edit unformatted text.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a control that can be used to display or edit unformatted text.","pos":[0,74]}]},{"pos":[3250,7977],"content":"A TextBox control can contain only unformatted text in its <xref:System.Windows.Controls.TextBox.Text%2A> property. The following graphic shows an example of a TextBox.       ![TextBox screen shot](~/add/media/ss-ctl-textbox.gif \"TextBox screen shot\")   Example of a TextBox       TextBox is a composite control that is composed of several encapsulated components. Consequently, some events do not bubble up to the containing control because they are handled by encapsulated child elements. Because of this, application developers should listen for the tunneling version of an event (denoted by the prefix \"Preview\").       TextBox supports unformatted text only. For applications that require support for richer content, see <xref:System.Windows.Controls.RichTextBox>. For applications that need to accept passwords or other sensitive input, see <xref:System.Windows.Controls.PasswordBox>.       Horizontally and vertically aligning text within a TextBox is done with the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> and <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> properties. Aligning the TextBox within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties.       The best way to hide the border around a TextBox is to set the <xref:System.Windows.Controls.Control.BorderThickness%2A> property of the TextBox to `0`.      > [!IMPORTANT] >  TextBox has built-in handling for the bubbling  <xref:System.Windows.UIElement.MouseUp> and <xref:System.Windows.UIElement.MouseDown> events. Consequently, custom event handlers that listen for <xref:System.Windows.UIElement.MouseUp> or <xref:System.Windows.UIElement.MouseDown> events from a TextBox will not be called. If you need to respond to these events, listen for the tunneling <xref:System.Windows.UIElement.PreviewMouseUp> and <xref:System.Windows.UIElement.PreviewMouseDown> events instead, or register the handlers with the <xref:System.Windows.EventSetter.HandledEventsToo%2A> argument (this latter option is only available through code). Do not mark the event handled unless you deliberately want to disable TextBox native handling of these events, and be aware that this has notable effects on the control's [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)].       Scrollbars are not visible on a TextBox by default. To make scrollbars visible, set the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> properties to <xref:System.Windows.Controls.ScrollBarVisibility> or <xref:System.Windows.Controls.ScrollBarVisibility>.       Usually the <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event should be used to detect whenever the text in a TextBox or <xref:System.Windows.Controls.RichTextBox> changes rather then <xref:System.Windows.UIElement.KeyDown> as you might expect. See [How to: Detect When Text in a TextBox Has Changed](~/add/includes/ajax-current-ext-md.md) for an example.      ## Customizing the TextBox Control    To apply the same property settings to multiple TextBox controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property. You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance. For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md).  To see the parts and states that are specific to the TextBox, see [TextBox Styles and Templates](~/add/includes/ajax-current-ext-md.md).       Dependency properties for this control might be set by the controlâ€™s default style.  If a property is set by a default style, the property might change from its default value when the control appears in the application. The default style is determined by which desktop theme is used when the application is running.  For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).      > [!NOTE] >  Setting a visual property will only have an effect if that property is both present in TextBox control's default template and is set by using a . You can find a list of visual properties in the \"Changing the Visual Structure of a Control\" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](../Topic/Customizing%20the%20Appearance%20of%20an%20Existing%20Control%20by%20Creating%20a%20ControlTemplate.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"A TextBox control can contain only unformatted text in its &lt;xref:System.Windows.Controls.TextBox.Text%2A&gt; property.","pos":[0,115],"source":"A TextBox control can contain only unformatted text in its <xref:System.Windows.Controls.TextBox.Text%2A> property."},{"content":"The following graphic shows an example of a TextBox.","pos":[116,168]},{"content":"<bpt id=\"p1\">![</bpt>TextBox screen shot<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/ss-ctl-textbox.gif \"</bpt>TextBox screen shot<ept id=\"p2\">\")</ept>   Example of a TextBox       TextBox is a composite control that is composed of several encapsulated components.","pos":[175,364],"source":"![TextBox screen shot](~/add/media/ss-ctl-textbox.gif \"TextBox screen shot\")   Example of a TextBox       TextBox is a composite control that is composed of several encapsulated components."},{"content":"Consequently, some events do not bubble up to the containing control because they are handled by encapsulated child elements.","pos":[365,490]},{"content":"Because of this, application developers should listen for the tunneling version of an event (denoted by the prefix \"Preview\").","pos":[491,617]},{"content":"TextBox supports unformatted text only.","pos":[624,663]},{"content":"For applications that require support for richer content, see &lt;xref:System.Windows.Controls.RichTextBox&gt;.","pos":[664,769],"source":" For applications that require support for richer content, see <xref:System.Windows.Controls.RichTextBox>."},{"content":"For applications that need to accept passwords or other sensitive input, see &lt;xref:System.Windows.Controls.PasswordBox&gt;.","pos":[770,890],"source":" For applications that need to accept passwords or other sensitive input, see <xref:System.Windows.Controls.PasswordBox>."},{"content":"Horizontally and vertically aligning text within a TextBox is done with the &lt;xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A&gt; and &lt;xref:System.Windows.Controls.Control.VerticalContentAlignment%2A&gt; properties.","pos":[897,1124],"source":"       Horizontally and vertically aligning text within a TextBox is done with the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> and <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> properties."},{"content":"Aligning the TextBox within the layout of the page is done with the &lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt; and &lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt; properties.","pos":[1125,1330],"source":" Aligning the TextBox within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties."},{"content":"The best way to hide the border around a TextBox is to set the &lt;xref:System.Windows.Controls.Control.BorderThickness%2A&gt; property of the TextBox to <ph id=\"ph1\">`0`</ph>.","pos":[1337,1489],"source":"       The best way to hide the border around a TextBox is to set the <xref:System.Windows.Controls.Control.BorderThickness%2A> property of the TextBox to `0`."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  TextBox has built-in handling for the bubbling  &lt;xref:System.Windows.UIElement.MouseUp&gt; and &lt;xref:System.Windows.UIElement.MouseDown&gt; events.","pos":[1495,1654],"source":"      > [!IMPORTANT] >  TextBox has built-in handling for the bubbling  <xref:System.Windows.UIElement.MouseUp> and <xref:System.Windows.UIElement.MouseDown> events."},{"content":"Consequently, custom event handlers that listen for &lt;xref:System.Windows.UIElement.MouseUp&gt; or &lt;xref:System.Windows.UIElement.MouseDown&gt; events from a TextBox will not be called.","pos":[1655,1833],"source":" Consequently, custom event handlers that listen for <xref:System.Windows.UIElement.MouseUp> or <xref:System.Windows.UIElement.MouseDown> events from a TextBox will not be called."},{"content":"If you need to respond to these events, listen for the tunneling &lt;xref:System.Windows.UIElement.PreviewMouseUp&gt; and &lt;xref:System.Windows.UIElement.PreviewMouseDown&gt; events instead, or register the handlers with the &lt;xref:System.Windows.EventSetter.HandledEventsToo%2A&gt; argument (this latter option is only available through code).","pos":[1834,2164],"source":" If you need to respond to these events, listen for the tunneling <xref:System.Windows.UIElement.PreviewMouseUp> and <xref:System.Windows.UIElement.PreviewMouseDown> events instead, or register the handlers with the <xref:System.Windows.EventSetter.HandledEventsToo%2A> argument (this latter option is only available through code)."},{"content":"Do not mark the event handled unless you deliberately want to disable TextBox native handling of these events, and be aware that this has notable effects on the control's <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>.","pos":[2165,2399],"source":" Do not mark the event handled unless you deliberately want to disable TextBox native handling of these events, and be aware that this has notable effects on the control's [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]."},{"content":"Scrollbars are not visible on a TextBox by default.","pos":[2406,2457]},{"content":"To make scrollbars visible, set the &lt;xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A&gt; and &lt;xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A&gt; properties to &lt;xref:System.Windows.Controls.ScrollBarVisibility&gt; or &lt;xref:System.Windows.Controls.ScrollBarVisibility&gt;.","pos":[2458,2789],"source":" To make scrollbars visible, set the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> properties to <xref:System.Windows.Controls.ScrollBarVisibility> or <xref:System.Windows.Controls.ScrollBarVisibility>."},{"content":"Usually the &lt;xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged&gt; event should be used to detect whenever the text in a TextBox or &lt;xref:System.Windows.Controls.RichTextBox&gt; changes rather then &lt;xref:System.Windows.UIElement.KeyDown&gt; as you might expect.","pos":[2796,3062],"source":"       Usually the <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event should be used to detect whenever the text in a TextBox or <xref:System.Windows.Controls.RichTextBox> changes rather then <xref:System.Windows.UIElement.KeyDown> as you might expect."},{"content":"See <bpt id=\"p1\">[</bpt>How to: Detect When Text in a TextBox Has Changed<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> for an example.","pos":[3063,3173],"source":" See [How to: Detect When Text in a TextBox Has Changed](~/add/includes/ajax-current-ext-md.md) for an example."},{"content":"Customizing the TextBox Control    To apply the same property settings to multiple TextBox controls, use the &lt;xref:System.Windows.FrameworkElement.Style%2A&gt; property.","pos":[3182,3348],"source":"      ## Customizing the TextBox Control    To apply the same property settings to multiple TextBox controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property."},{"content":"You can modify the default &lt;xref:System.Windows.Controls.ControlTemplate&gt; to give the control a unique appearance.","pos":[3349,3463],"source":" You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance."},{"content":"For more information about creating a &lt;xref:System.Windows.Controls.ControlTemplate&gt;, see <bpt id=\"p1\">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[3464,3675],"source":" For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md)."},{"content":"To see the parts and states that are specific to the TextBox, see <bpt id=\"p1\">[</bpt>TextBox Styles and Templates<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[3677,3813],"source":"  To see the parts and states that are specific to the TextBox, see [TextBox Styles and Templates](~/add/includes/ajax-current-ext-md.md)."},{"content":"Dependency properties for this control might be set by the controlâ€™s default style.","pos":[3820,3903]},{"content":"If a property is set by a default style, the property might change from its default value when the control appears in the application.","pos":[3905,4039]},{"content":"The default style is determined by which desktop theme is used when the application is running.","pos":[4040,4135]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Default WPF Themes<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>.","pos":[4137,4231],"source":"  For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Setting a visual property will only have an effect if that property is both present in TextBox control's default template and is set by using a .","pos":[4237,4395],"source":"      > [!NOTE] >  Setting a visual property will only have an effect if that property is both present in TextBox control's default template and is set by using a ."},{"content":"You can find a list of visual properties in the \"Changing the Visual Structure of a Control\" section in <bpt id=\"p1\">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id=\"p1\">](../Topic/Customizing%20the%20Appearance%20of%20an%20Existing%20Control%20by%20Creating%20a%20ControlTemplate.md)</ept>.","pos":[4396,4695],"source":" You can find a list of visual properties in the \"Changing the Visual Structure of a Control\" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](../Topic/Customizing%20the%20Appearance%20of%20an%20Existing%20Control%20by%20Creating%20a%20ControlTemplate.md)."}]},{"pos":[51740,51833],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.TextBox\"></xref> class."},{"pos":[52329,52384],"content":"Gets or sets the insertion position index of the caret.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the insertion position index of the caret.","pos":[0,55]}]},{"pos":[52397,52737],"content":"Getting this property returns the current insertion position index of the caret (see <xref:System.Windows.Documents.TextPointer> for information on terminology like \"insertion position\"). Setting this property moves the caret to the specified insertion position.       An insertion position is between either characters or element tags.","needQuote":false,"needEscape":true,"nodes":[{"content":"Getting this property returns the current insertion position index of the caret (see <xref:System.Windows.Documents.TextPointer> for information on terminology like \"insertion position\"). Setting this property moves the caret to the specified insertion position.       An insertion position is between either characters or element tags.","pos":[0,336],"nodes":[{"content":"Getting this property returns the current insertion position index of the caret (see &lt;xref:System.Windows.Documents.TextPointer&gt; for information on terminology like \"insertion position\").","pos":[0,187],"source":"Getting this property returns the current insertion position index of the caret (see <xref:System.Windows.Documents.TextPointer> for information on terminology like \"insertion position\")."},{"content":"Setting this property moves the caret to the specified insertion position.","pos":[188,262]},{"content":"An insertion position is between either characters or element tags.","pos":[269,336]}]}]},{"pos":[52854,52907],"content":"The zero-based insertion position index of the caret.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based insertion position index of the caret.","pos":[0,53]}]},{"pos":[53372,53459],"content":"Gets or sets how characters are cased when they are manually entered into the text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets how characters are cased when they are manually entered into the text box.","pos":[0,87]}]},{"pos":[53472,53796],"content":"This property does not affect characters that are added programmatically.      <a name=\"dependencyPropertyInfo_CharacterCasing\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBox.CharacterCasingProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"This property does not affect characters that are added programmatically.","pos":[0,73]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_CharacterCasing\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBox.CharacterCasingProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[79,314],"source":"<a name=\"dependencyPropertyInfo_CharacterCasing\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBox.CharacterCasingProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[54808,55021],"content":"One of the <xref href=\"System.Windows.Controls.CharacterCasing\"></xref> values that specifies how manually entered characters are cased. The default is <xref href=\"System.Windows.Controls.CharacterCasing\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.CharacterCasing\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies how manually entered characters are cased.","pos":[0,136],"source":"One of the <xref href=\"System.Windows.Controls.CharacterCasing\"></xref> values that specifies how manually entered characters are cased."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.CharacterCasing\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[137,213],"source":" The default is <xref href=\"System.Windows.Controls.CharacterCasing\"></xref>."}]},{"pos":[55528,55619],"content":"Identifies the <xref:System.Windows.Controls.TextBox.CharacterCasing*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBox.CharacterCasing*&gt; dependency property.","pos":[0,91],"source":"Identifies the <xref:System.Windows.Controls.TextBox.CharacterCasing*> dependency property."}]},{"pos":[55802,55814],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[56177,56218],"content":"Clears all the content from the text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears all the content from the text box.","pos":[0,41]}]},{"pos":[56864,56949],"content":"Returns the zero-based character index for the first character in the specified line.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the zero-based character index for the first character in the specified line.","pos":[0,85]}]},{"pos":[57112,57189],"content":"The zero-based index of the line to retrieve the initial character index for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the line to retrieve the initial character index for.","pos":[0,77]}]},{"pos":[57246,57313],"content":"The zero-based index for the first character in the specified line.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index for the first character in the specified line.","pos":[0,67]}]},{"pos":[57970,58055],"content":"Returns the zero-based index of the character that is closest to the specified point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the zero-based index of the character that is closest to the specified point.","pos":[0,85]}]},{"pos":[58248,58358],"content":"A point in <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> coordinate-space for which to return an index.","needQuote":true,"needEscape":true,"source":"A point in <xref href=\"System.Windows.Controls.TextBox\"></xref> coordinate-space for which to return an index."},{"pos":[58426,58688],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to return the nearest index if there is no character at the specified point; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to return â€“1 if there is no character at the specified point.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return the nearest index if there is no character at the specified point; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to return â€“1 if there is no character at the specified point."},{"pos":[58745,58849],"content":"The index of the character that is closest to the specified point, or â€“1 if no valid index can be found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the character that is closest to the specified point, or â€“1 if no valid index can be found.","pos":[0,104]}]},{"pos":[59379,59463],"content":"Returns the line index for the first line that is currently visible in the text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the line index for the first line that is currently visible in the text box.","pos":[0,84]}]},{"pos":[59602,59666],"content":"The zero-based index for the first visible line in the text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index for the first visible line in the text box.","pos":[0,64]}]},{"pos":[60189,60272],"content":"Returns the line index for the last line that is currently visible in the text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the line index for the last line that is currently visible in the text box.","pos":[0,83]}]},{"pos":[60410,60473],"content":"The zero-based index for the last visible line in the text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index for the last visible line in the text box.","pos":[0,63]}]},{"pos":[61073,61164],"content":"Returns the zero-based line index for the line that contains the specified character index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the zero-based line index for the line that contains the specified character index.","pos":[0,91]}]},{"pos":[61327,61406],"content":"The zero-based character index for which to retrieve the associated line index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based character index for which to retrieve the associated line index.","pos":[0,79]}]},{"pos":[61463,61541],"content":"The zero-based index for the line that contains the specified character index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index for the line that contains the specified character index.","pos":[0,78]}]},{"pos":[62063,62118],"content":"Returns the number of characters in the specified line.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the number of characters in the specified line.","pos":[0,55]}]},{"pos":[62264,62328],"content":"The zero-based line index for which to return a character count.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based line index for which to return a character count.","pos":[0,64]}]},{"pos":[62385,62432],"content":"The number of characters in the specified line.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of characters in the specified line.","pos":[0,47]}]},{"pos":[62927,62994],"content":"Returns the text that is currently displayed on the specified line.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the text that is currently displayed on the specified line.","pos":[0,67]}]},{"pos":[63141,63218],"content":"The zero-based line index for which to retrieve the currently displayed text.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based line index for which to retrieve the currently displayed text.","pos":[0,77]}]},{"pos":[63276,63355],"content":"A string containing a copy of the text currently visible on the specified line.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing a copy of the text currently visible on the specified line.","pos":[0,79]}]},{"pos":[64098,64196],"content":"Returns the beginning character index for the next spelling error in the contents of the text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the beginning character index for the next spelling error in the contents of the text box.","pos":[0,98]}]},{"pos":[64416,64518],"content":"The zero-based character index indicating a position from which to search for the next spelling error.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based character index indicating a position from which to search for the next spelling error.","pos":[0,102]}]},{"pos":[64612,64808],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.LogicalDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the direction in which to search for the next spelling error, starting at the specified <ph id=\"ph1\">`charIndex`</ph>.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Documents.LogicalDirection\"></xref> values that specifies the direction in which to search for the next spelling error, starting at the specified `charIndex`."},{"pos":[64865,65002],"content":"The character index for the beginning of the next spelling error in the contents of the text box, or â€“1 if no next spelling error exists.","needQuote":true,"needEscape":true,"nodes":[{"content":"The character index for the beginning of the next spelling error in the contents of the text box, or â€“1 if no next spelling error exists.","pos":[0,137]}]},{"pos":[65588,65671],"content":"Returns the rectangle for the leading edge of the character at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the rectangle for the leading edge of the character at the specified index.","pos":[0,83]}]},{"pos":[65683,65797],"content":"Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.","pos":[0,114]}]},{"pos":[65971,66055],"content":"The zero-based character index of the character for which to retrieve the rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based character index of the character for which to retrieve the rectangle.","pos":[0,84]}]},{"pos":[66119,66318],"content":"A rectangle for the leading edge of the character at the specified character index, or &lt;xref:System.Windows.Rect.Empty%2A?displayProperty=fullName&gt; if a bounding rectangle cannot be determined.","needQuote":true,"needEscape":true,"nodes":[{"content":"A rectangle for the leading edge of the character at the specified character index, or <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Rect.Empty%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> if a bounding rectangle cannot be determined.","pos":[0,199],"source":"A rectangle for the leading edge of the character at the specified character index, or &lt;xref:System.Windows.Rect.Empty%2A?displayProperty=fullName&gt; if a bounding rectangle cannot be determined."}]},{"pos":[66949,67044],"content":"Returns the rectangle for the leading or trailing edge of the character at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the rectangle for the leading or trailing edge of the character at the specified index.","pos":[0,95]}]},{"pos":[67056,67170],"content":"Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.","pos":[0,114]}]},{"pos":[67363,67447],"content":"The zero-based character index of the character for which to retrieve the rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based character index of the character for which to retrieve the rectangle.","pos":[0,84]}]},{"pos":[67517,67725],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to get the trailing edge of the character; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to get the leading edge of the character.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to get the trailing edge of the character; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to get the leading edge of the character."},{"pos":[67789,67946],"content":"A rectangle for an edge of the character at the specified character index, or <xref:System.Windows.Rect.Empty*> if a bounding rectangle cannot be determined.","needQuote":true,"needEscape":true,"nodes":[{"content":"A rectangle for an edge of the character at the specified character index, or &lt;xref:System.Windows.Rect.Empty*&gt; if a bounding rectangle cannot be determined.","pos":[0,157],"source":"A rectangle for an edge of the character at the specified character index, or <xref:System.Windows.Rect.Empty*> if a bounding rectangle cannot be determined."}]},{"pos":[68146,68226],"content":"<ph id=\"ph1\">&lt;code&gt;charIndex&lt;/code&gt;</ph> is negative or is greater than the length of the content.","needQuote":true,"needEscape":true,"source":"<code>charIndex</code> is negative or is greater than the length of the content."},{"pos":[68670,68814],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.SpellingError\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with any spelling error at the specified character index.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Windows.Controls.SpellingError\"></xref> object associated with any spelling error at the specified character index."},{"pos":[68997,69085],"content":"The zero-based character index of a position in content to examine for a spelling error.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based character index of a position in content to examine for a spelling error.","pos":[0,88]}]},{"pos":[69167,69459],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.SpellingError\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object containing the details of the spelling error found at the character indicated by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">charIndex</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if no spelling error exists at the specified character.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Controls.SpellingError\"></xref> object containing the details of the spelling error found at the character indicated by <code>charIndex</code>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no spelling error exists at the specified character."},{"pos":[70012,70091],"content":"Returns the length of any spelling error that includes the specified character.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the length of any spelling error that includes the specified character.","pos":[0,79]}]},{"pos":[70246,70334],"content":"The zero-based character index of a position in content to examine for a spelling error.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based character index of a position in content to examine for a spelling error.","pos":[0,88]}]},{"pos":[70391,70540],"content":"The length of any spelling error that includes the character specified by charIndex, or 0 if the specified character is not part of a spelling error.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of any spelling error that includes the character specified by charIndex, or 0 if the specified character is not part of a spelling error.","pos":[0,149]}]},{"pos":[71094,71193],"content":"Returns the beginning character index for any spelling error that includes the specified character.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the beginning character index for any spelling error that includes the specified character.","pos":[0,99]}]},{"pos":[71347,71435],"content":"The zero-based character index of a position in content to examine for a spelling error.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based character index of a position in content to examine for a spelling error.","pos":[0,88]}]},{"pos":[71492,71675],"content":"The beginning character index for any spelling error that includes the character specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">charIndex</ph><ept id=\"p1\">&lt;/code&gt;</ept>, or â€“1 if the specified character is not part of a spelling error.","needQuote":true,"needEscape":true,"source":"The beginning character index for any spelling error that includes the character specified by <code>charIndex</code>, or â€“1 if the specified character is not part of a spelling error."},{"pos":[72121,72168],"content":"Gets the total number of lines in the text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the total number of lines in the text box.","pos":[0,47]}]},{"pos":[72181,72386],"content":"If text wrapping is enabled, changing the width of the text box may change this value.       The value returned is the total number of lines in the text box, regardless of how many are currently visible.","needQuote":false,"needEscape":true,"nodes":[{"content":"If text wrapping is enabled, changing the width of the text box may change this value.       The value returned is the total number of lines in the text box, regardless of how many are currently visible.","pos":[0,203],"nodes":[{"content":"If text wrapping is enabled, changing the width of the text box may change this value.","pos":[0,86]},{"content":"The value returned is the total number of lines in the text box, regardless of how many are currently visible.","pos":[93,203]}]}]},{"pos":[72497,72585],"content":"The total number of lines in the text box, or â€“1 if layout information is not available.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of lines in the text box, or â€“1 if layout information is not available.","pos":[0,88]}]},{"pos":[73049,73159],"content":"Gets an enumerator for the logical child elements of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets an enumerator for the logical child elements of the <xref href=\"System.Windows.Controls.TextBox\"></xref>."},{"pos":[73171,73353],"content":"The LogicalChildren property returns an enumerator for a collection that contains a <xref:System.String> that is equal to the <xref:System.Windows.Controls.TextBox.Text%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The LogicalChildren property returns an enumerator for a collection that contains a &lt;xref:System.String&gt; that is equal to the &lt;xref:System.Windows.Controls.TextBox.Text%2A&gt; property.","pos":[0,182],"source":"The LogicalChildren property returns an enumerator for a collection that contains a <xref:System.String> that is equal to the <xref:System.Windows.Controls.TextBox.Text%2A> property."}]},{"pos":[73526,73631],"content":"An enumerator for the logical child elements of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An enumerator for the logical child elements of the <xref href=\"System.Windows.Controls.TextBox\"></xref>."},{"pos":[74071,74164],"content":"Gets or sets the maximum number of characters that can be manually entered into the text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum number of characters that can be manually entered into the text box.","pos":[0,93]}]},{"pos":[74177,75010],"content":"You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers. You can also use this property to restrict the length of text entered when the data is to be stored in a database so that the text entered into the control does not exceed the maximum length of the corresponding field in the database.       This property does not affect characters that are added programmatically.       When this property is set to 0, the maximum length of the text that can be entered in the control is limited only by available memory.      <a name=\"dependencyPropertyInfo_MaxLength\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBox.MaxLengthProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers.","pos":[0,134]},{"content":"You can also use this property to restrict the length of text entered when the data is to be stored in a database so that the text entered into the control does not exceed the maximum length of the corresponding field in the database.","pos":[135,369]},{"content":"This property does not affect characters that are added programmatically.","pos":[376,449]},{"content":"When this property is set to 0, the maximum length of the text that can be entered in the control is limited only by available memory.","pos":[456,590]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_MaxLength\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBox.MaxLengthProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[596,819],"source":"<a name=\"dependencyPropertyInfo_MaxLength\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBox.MaxLengthProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[75853,75977],"content":"The maximum number of characters that can be manually entered into the text box. The default is 0, which indicates no limit.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of characters that can be manually entered into the text box. The default is 0, which indicates no limit.","pos":[0,124],"nodes":[{"content":"The maximum number of characters that can be manually entered into the text box.","pos":[0,80]},{"content":"The default is 0, which indicates no limit.","pos":[81,124]}]}]},{"pos":[76448,76533],"content":"Identifies the <xref:System.Windows.Controls.TextBox.MaxLength*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBox.MaxLength*&gt; dependency property.","pos":[0,85],"source":"Identifies the <xref:System.Windows.Controls.TextBox.MaxLength*> dependency property."}]},{"pos":[76710,76722],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[77096,77145],"content":"Gets or sets the maximum number of visible lines.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum number of visible lines.","pos":[0,49]}]},{"pos":[77158,78095],"content":"Getting this property returns the current value of MaxLines. Setting this property causes the text box to resize if the number of visible lines exceeds the limit specified by MaxLines.       This property applies only to visible lines, and does not constrain the actual number of lines. Depending on its configuration, a text box may contain additional non-visible lines that are accessible by scrolling.       If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the MaxLines and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.      <a name=\"dependencyPropertyInfo_MaxLines\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBox.MaxLinesProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"Getting this property returns the current value of MaxLines.","pos":[0,60]},{"content":"Setting this property causes the text box to resize if the number of visible lines exceeds the limit specified by MaxLines.","pos":[61,184]},{"content":"This property applies only to visible lines, and does not constrain the actual number of lines.","pos":[191,286]},{"content":"Depending on its configuration, a text box may contain additional non-visible lines that are accessible by scrolling.","pos":[287,404]},{"content":"If the &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; property is explicitly set on a &lt;xref:System.Windows.Controls.TextBox&gt;, the MaxLines and &lt;xref:System.Windows.Controls.TextBox.MinLines%2A&gt; property values are ignored.","pos":[411,635],"source":"       If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the MaxLines and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_MaxLines\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBox.MaxLinesProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|","pos":[641,923],"source":"<a name=\"dependencyPropertyInfo_MaxLines\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBox.MaxLinesProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"}]},{"pos":[78929,79032],"content":"The maximum number of visible lines. The default is &lt;xref:System.Int32?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of visible lines. The default is &lt;xref:System.Int32?displayProperty=fullName&gt;.","pos":[0,103],"nodes":[{"content":"The maximum number of visible lines.","pos":[0,36]},{"content":"The default is <ph id=\"ph1\">&amp;lt;</ph>xref:System.Int32?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[37,103],"source":" The default is &lt;xref:System.Int32?displayProperty=fullName&gt;."}]}]},{"pos":[79179,79250],"content":"MaxLines is less than <xref:System.Windows.Controls.TextBox.MinLines*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxLines is less than &lt;xref:System.Windows.Controls.TextBox.MinLines*&gt;.","pos":[0,71],"source":"MaxLines is less than <xref:System.Windows.Controls.TextBox.MinLines*>."}]},{"pos":[79644,79728],"content":"Identifies the <xref:System.Windows.Controls.TextBox.MaxLines*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBox.MaxLines*&gt; dependency property.","pos":[0,84],"source":"Identifies the <xref:System.Windows.Controls.TextBox.MaxLines*> dependency property."}]},{"pos":[79904,79916],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[80383,80417],"content":"Sizes the text box to its content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sizes the text box to its content.","pos":[0,34]}]},{"pos":[80429,80486],"content":"Override this method to implement custom sizing behavior.","needQuote":true,"needEscape":true,"nodes":[{"content":"Override this method to implement custom sizing behavior.","pos":[0,57]}]},{"pos":[80687,80799],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that specifies the constraints on the size of the text box.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Size\"></xref> structure that specifies the constraints on the size of the text box."},{"pos":[80863,80956],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure indicating the new size of the text box.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Size\"></xref> structure indicating the new size of the text box."},{"pos":[81391,81440],"content":"Gets or sets the minimum number of visible lines.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the minimum number of visible lines.","pos":[0,49]}]},{"pos":[81453,82169],"content":"Getting this property returns the current value of MinLines. Setting this property causes the text box to resize if the number of visible lines is less than value specified by MinLines.       If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and MinLines property values are ignored.      <a name=\"dependencyPropertyInfo_MinLines\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBox.MinLinesProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"Getting this property returns the current value of MinLines.","pos":[0,60]},{"content":"Setting this property causes the text box to resize if the number of visible lines is less than value specified by MinLines.","pos":[61,185]},{"content":"If the &lt;xref:System.Windows.FrameworkElement.Height%2A&gt; property is explicitly set on a &lt;xref:System.Windows.Controls.TextBox&gt;, the &lt;xref:System.Windows.Controls.TextBox.MaxLines%2A&gt; and MinLines property values are ignored.","pos":[192,416],"source":"       If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and MinLines property values are ignored."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_MinLines\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBox.MinLinesProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|","pos":[422,704],"source":"<a name=\"dependencyPropertyInfo_MinLines\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBox.MinLinesProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"}]},{"pos":[83003,83057],"content":"The minimum number of visible lines. The default is 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The minimum number of visible lines. The default is 1.","pos":[0,54],"nodes":[{"content":"The minimum number of visible lines.","pos":[0,36]},{"content":"The default is 1.","pos":[37,54]}]}]},{"pos":[83204,83278],"content":"MinLines is greater than <xref:System.Windows.Controls.TextBox.MaxLines*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"MinLines is greater than &lt;xref:System.Windows.Controls.TextBox.MaxLines*&gt;.","pos":[0,74],"source":"MinLines is greater than <xref:System.Windows.Controls.TextBox.MaxLines*>."}]},{"pos":[83672,83756],"content":"Identifies the <xref:System.Windows.Controls.TextBox.MinLines*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBox.MinLines*&gt; dependency property.","pos":[0,84],"source":"Identifies the <xref:System.Windows.Controls.TextBox.MinLines*> dependency property."}]},{"pos":[83932,83944],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[84392,84507],"content":"Creates and returns an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.Peers.AutomationPeer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the text box.","needQuote":true,"needEscape":true,"source":"Creates and returns an <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> object for the text box."},{"pos":[84519,84629],"content":"This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=fullName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method overrides &lt;xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=fullName&gt;.","pos":[0,110],"source":"This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=fullName>."}]},{"pos":[84855,84950],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.Peers.AutomationPeer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the text box.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> object for the text box."},{"pos":[85645,85764],"content":"Called when one or more of the dependency properties that exist on the element have had their effective values changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when one or more of the dependency properties that exist on the element have had their effective values changed.","pos":[0,119]}]},{"pos":[85776,85883],"content":"This method overrides <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=fullName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method overrides &lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=fullName&gt;.","pos":[0,107],"source":"This method overrides <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=fullName>."}]},{"pos":[86113,86148],"content":"Arguments for the associated event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Arguments for the associated event.","pos":[0,35]}]},{"pos":[86652,86707],"content":"Scrolls the line at the specified line index into view.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls the line at the specified line index into view.","pos":[0,55]}]},{"pos":[86719,86836],"content":"This method causes the text box to scroll by the minimum amount necessary to bring the specified line into full view.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method causes the text box to scroll by the minimum amount necessary to bring the specified line into full view.","pos":[0,117]}]},{"pos":[86982,87040],"content":"The zero-based line index of the line to scroll into view.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based line index of the line to scroll into view.","pos":[0,58]}]},{"pos":[87553,87593],"content":"Selects a range of text in the text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Selects a range of text in the text box.","pos":[0,40]}]},{"pos":[87737,87808],"content":"The zero-based character index of the first character in the selection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based character index of the first character in the selection.","pos":[0,71]}]},{"pos":[87870,87913],"content":"The length of the selection, in characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of the selection, in characters.","pos":[0,43]}]},{"pos":[88094,88148],"content":"<ph id=\"ph1\">&lt;code&gt;start&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;length&lt;/code&gt;</ph> is negative.","needQuote":true,"needEscape":true,"source":"<code>start</code> or <code>length</code> is negative."},{"pos":[88525,88591],"content":"Gets or sets the content of the current selection in the text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the content of the current selection in the text box.","pos":[0,66]}]},{"pos":[88603,88758],"content":"Getting this property returns a string copy of the currently selected text. Setting this property replaces the current selection with the specified string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Getting this property returns a string copy of the currently selected text. Setting this property replaces the current selection with the specified string.","pos":[0,155],"nodes":[{"content":"Getting this property returns a string copy of the currently selected text.","pos":[0,75]},{"content":"Setting this property replaces the current selection with the specified string.","pos":[76,155]}]}]},{"pos":[88880,88924],"content":"The currently selected text in the text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"The currently selected text in the text box.","pos":[0,44]}]},{"pos":[89391,89489],"content":"Gets or sets a value indicating the number of characters in the current selection in the text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating the number of characters in the current selection in the text box.","pos":[0,98]}]},{"pos":[89502,90020],"content":"Getting this property returns the number of characters in the current selection. Setting this property adjusts the length of the current selection to the specified value, keeping the beginning of the selection fixed.       In general, when the specified selection length causes the selection to end in an invalid position (for example, between a carriage return and a new-line character, or inside a tag), the selection length automatically adjusts so that the resulting selection starts and ends in valid positions.","needQuote":false,"needEscape":true,"nodes":[{"content":"Getting this property returns the number of characters in the current selection. Setting this property adjusts the length of the current selection to the specified value, keeping the beginning of the selection fixed.       In general, when the specified selection length causes the selection to end in an invalid position (for example, between a carriage return and a new-line character, or inside a tag), the selection length automatically adjusts so that the resulting selection starts and ends in valid positions.","pos":[0,516],"nodes":[{"content":"Getting this property returns the number of characters in the current selection.","pos":[0,80]},{"content":"Setting this property adjusts the length of the current selection to the specified value, keeping the beginning of the selection fixed.","pos":[81,216]},{"content":"In general, when the specified selection length causes the selection to end in an invalid position (for example, between a carriage return and a new-line character, or inside a tag), the selection length automatically adjusts so that the resulting selection starts and ends in valid positions.","pos":[223,516]}]}]},{"pos":[90142,90226],"content":"The number of characters in the current selection in the text box. The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of characters in the current selection in the text box. The default is 0.","pos":[0,84],"nodes":[{"content":"The number of characters in the current selection in the text box.","pos":[0,66]},{"content":"The default is 0.","pos":[67,84]}]}]},{"pos":[90416,90459],"content":"SelectionLength is set to a negative value.","needQuote":true,"needEscape":true,"nodes":[{"content":"SelectionLength is set to a negative value.","pos":[0,43]}]},{"pos":[90846,90920],"content":"Gets or sets a character index for the beginning of the current selection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a character index for the beginning of the current selection.","pos":[0,74]}]},{"pos":[90932,91184],"content":"In cases where the specified selection length would cause the selection to end between a carriage return and a new-line character, the selection length is automatically increased by 1 so that the resulting selection spans the entire end-of-line marker.","needQuote":true,"needEscape":true,"nodes":[{"content":"In cases where the specified selection length would cause the selection to end between a carriage return and a new-line character, the selection length is automatically increased by 1 so that the resulting selection spans the entire end-of-line marker.","pos":[0,252]}]},{"pos":[91304,91367],"content":"The character index for the beginning of the current selection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The character index for the beginning of the current selection.","pos":[0,63]}]},{"pos":[91556,91598],"content":"SelectionStart is set to a negative value.","needQuote":true,"needEscape":true,"nodes":[{"content":"SelectionStart is set to a negative value.","pos":[0,42]}]},{"pos":[92222,92451],"content":"Returns a value that indicates whether the effective value of the &lt;xref:System.Windows.Controls.TextBox.Text*&gt; property should be serialized during serialization of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the effective value of the <xref:System.Windows.Controls.TextBox.Text*> property should be serialized during serialization of the <xref href=\"System.Windows.Controls.TextBox\"></xref> object."},{"pos":[92693,92748],"content":"A serialization service manager object for this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A serialization service manager object for this object.","pos":[0,55]}]},{"pos":[92807,93025],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Controls.TextBox.Text*&gt; property should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Controls.TextBox.Text*> property should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[93209,93294],"content":"<ph id=\"ph1\">&lt;code&gt;manager&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>manager</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[93877,93910],"content":"Throws an exception in all cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"Throws an exception in all cases.","pos":[0,33]}]},{"pos":[93922,94040],"content":"<xref:System.Windows.Controls.TextBox> accepts only text through the <xref:System.Windows.Markup.IAddChild> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Windows.Controls.TextBox&gt; accepts only text through the &lt;xref:System.Windows.Markup.IAddChild&gt; interface.","pos":[0,118],"source":"<xref:System.Windows.Controls.TextBox> accepts only text through the <xref:System.Windows.Markup.IAddChild> interface."}]},{"pos":[94181,94209],"content":"An object to add as a child.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object to add as a child.","pos":[0,28]}]},{"pos":[94412,94495],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[94606,94625],"content":"In all other cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"In all other cases.","pos":[0,19]}]},{"pos":[95203,95249],"content":"Adds the text content of a node to the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the text content of a node to the object.","pos":[0,46]}]},{"pos":[95261,95461],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Controls.TextBox> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Controls.TextBox> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.","pos":[0,200],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Windows.Controls.TextBox&gt; instance is cast to an &lt;xref:System.Windows.Markup.IAddChild&gt; interface.","pos":[60,200],"source":" It can be used only when the <xref:System.Windows.Controls.TextBox> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface."}]}]},{"pos":[95599,95629],"content":"A string to add to the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string to add to the object.","pos":[0,30]}]},{"pos":[96068,96115],"content":"Gets or sets the text contents of the text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the text contents of the text box.","pos":[0,47]}]},{"pos":[96128,97009],"content":"Getting this property returns a string copy of the contents of the text box. Setting this property replaces the contents of the text box with the specified string.       This property does not support animation.       When used in data-binding scenarios, this property uses the default update behavior of <xref:System.Windows.Data.UpdateSourceTrigger?displayProperty=fullName>.      <a name=\"xamlPropertyElementUsage_Text\"></a>    ## XAML Property Element Usage      ```   <object>     String   </object>   ```      <a name=\"dependencyPropertyInfo_Text\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBox.TextProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"Getting this property returns a string copy of the contents of the text box.","pos":[0,76]},{"content":"Setting this property replaces the contents of the text box with the specified string.","pos":[77,163]},{"content":"This property does not support animation.","pos":[170,211]},{"content":"When used in data-binding scenarios, this property uses the default update behavior of &lt;xref:System.Windows.Data.UpdateSourceTrigger?displayProperty=fullName&gt;.","pos":[218,377],"source":"       When used in data-binding scenarios, this property uses the default update behavior of <xref:System.Windows.Data.UpdateSourceTrigger?displayProperty=fullName>."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlPropertyElementUsage_Text\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id=\"ph1\">```   &lt;object&gt;     String   &lt;/object&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"dependencyPropertyInfo_Text\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBox.TextProperty&gt;|   |Metadata properties set to <ph id=\"ph2\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Journal%2A&gt;|","pos":[383,856],"source":"<a name=\"xamlPropertyElementUsage_Text\"></a>    ## XAML Property Element Usage      ```   <object>     String   </object>   ```      <a name=\"dependencyPropertyInfo_Text\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBox.TextProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A>|"}]},{"pos":[97124,97215],"content":"A string containing the text contents of the text box. The default is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing the text contents of the text box. The default is an empty string (\"\").","pos":[0,91],"nodes":[{"content":"A string containing the text contents of the text box.","pos":[0,54]},{"content":"The default is an empty string (\"\").","pos":[55,91]}]}]},{"pos":[97664,97734],"content":"Gets or sets the horizontal alignment of the contents of the text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the horizontal alignment of the contents of the text box.","pos":[0,70]}]},{"pos":[97747,98463],"content":"Getting this property returns the current alignment. Setting this property adjusts the contents of the text box to reflect the specified alignment.       This property has a higher precedence than the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> property.      <a name=\"dependencyPropertyInfo_TextAlignment\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBox.TextAlignmentProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"Getting this property returns the current alignment.","pos":[0,52]},{"content":"Setting this property adjusts the contents of the text box to reflect the specified alignment.","pos":[53,147]},{"content":"This property has a higher precedence than the &lt;xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A&gt; property.","pos":[154,279],"source":"       This property has a higher precedence than the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> property."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_TextAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBox.TextAlignmentProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|","pos":[285,704],"source":"<a name=\"dependencyPropertyInfo_TextAlignment\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBox.TextAlignmentProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"}]},{"pos":[99401,99607],"content":"One of the <xref href=\"System.Windows.TextAlignment\"></xref> values that specifies the horizontal alignment of the contents of the text box. The default is <xref href=\"System.Windows.TextAlignment\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.TextAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the horizontal alignment of the contents of the text box.","pos":[0,140],"source":"One of the <xref href=\"System.Windows.TextAlignment\"></xref> values that specifies the horizontal alignment of the contents of the text box."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.TextAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[141,206],"source":" The default is <xref href=\"System.Windows.TextAlignment\"></xref>."}]},{"pos":[100102,100191],"content":"Identifies the <xref:System.Windows.Controls.TextBox.TextAlignment*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBox.TextAlignment*&gt; dependency property.","pos":[0,89],"source":"Identifies the <xref:System.Windows.Controls.TextBox.TextAlignment*> dependency property."}]},{"pos":[100372,100384],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[100793,100844],"content":"Gets the text decorations to apply to the text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the text decorations to apply to the text box.","pos":[0,51]}]},{"pos":[100857,101476],"content":"A <xref:System.Windows.TextDecoration> object is a visual ornamentation you can add to text. There are four types of text decorations: underline, baseline, strikethrough, and overline. For more information about text decorations, see [How to: Create a Text Decoration](~/add/includes/ajax-current-ext-md.md).      <a name=\"dependencyPropertyInfo_TextDecorations\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBox.TextDecorationsProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Windows.TextDecoration&gt; object is a visual ornamentation you can add to text.","pos":[0,92],"source":"A <xref:System.Windows.TextDecoration> object is a visual ornamentation you can add to text."},{"content":"There are four types of text decorations: underline, baseline, strikethrough, and overline.","pos":[93,184]},{"content":"For more information about text decorations, see <bpt id=\"p1\">[</bpt>How to: Create a Text Decoration<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[185,308],"source":" For more information about text decorations, see [How to: Create a Text Decoration](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_TextDecorations\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBox.TextDecorationsProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;|","pos":[314,609],"source":"<a name=\"dependencyPropertyInfo_TextDecorations\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBox.TextDecorationsProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"}]},{"pos":[103227,103464],"content":"A <xref href=\"System.Windows.TextDecorationCollection\"></xref> collection that contains text decorations to apply to the text box. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> (no text decorations applied).","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.TextDecorationCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection that contains text decorations to apply to the text box.","pos":[0,130],"source":"A <xref href=\"System.Windows.TextDecorationCollection\"></xref> collection that contains text decorations to apply to the text box."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> (no text decorations applied).","pos":[131,237],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> (no text decorations applied)."}]},{"pos":[103971,104062],"content":"Identifies the <xref:System.Windows.Controls.TextBox.TextDecorations*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBox.TextDecorations*&gt; dependency property.","pos":[0,91],"source":"Identifies the <xref:System.Windows.Controls.TextBox.TextDecorations*> dependency property."}]},{"pos":[104074,104175],"content":"The identifier for the <xref:System.Windows.Controls.TextBox.TextDecorations%2A> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier for the &lt;xref:System.Windows.Controls.TextBox.TextDecorations%2A&gt; dependency property.","pos":[0,101],"source":"The identifier for the <xref:System.Windows.Controls.TextBox.TextDecorations%2A> dependency property."}]},{"pos":[104358,104370],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[104761,104841],"content":"Identifies the <xref:System.Windows.Controls.TextBox.Text*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBox.Text*&gt; dependency property.","pos":[0,80],"source":"Identifies the <xref:System.Windows.Controls.TextBox.Text*> dependency property."}]},{"pos":[105013,105025],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[105419,105466],"content":"Gets or sets how the text box should wrap text.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets how the text box should wrap text.","pos":[0,47]}]},{"pos":[105479,106180],"content":"Setting the TextWrapping attribute to <xref:System.Windows.TextWrapping> causes entered text to wrap to a new line when the edge of the <xref:System.Windows.Controls.TextBox> control is reached, automatically expanding the height of the <xref:System.Windows.Controls.TextBox> control to include room for a new line, if necessary.      <a name=\"dependencyPropertyInfo_TextWrapping\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBox.TextWrappingProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"Setting the TextWrapping attribute to &lt;xref:System.Windows.TextWrapping&gt; causes entered text to wrap to a new line when the edge of the &lt;xref:System.Windows.Controls.TextBox&gt; control is reached, automatically expanding the height of the &lt;xref:System.Windows.Controls.TextBox&gt; control to include room for a new line, if necessary.","pos":[0,329],"source":"Setting the TextWrapping attribute to <xref:System.Windows.TextWrapping> causes entered text to wrap to a new line when the edge of the <xref:System.Windows.Controls.TextBox> control is reached, automatically expanding the height of the <xref:System.Windows.Controls.TextBox> control to include room for a new line, if necessary."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_TextWrapping\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBox.TextWrappingProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;|","pos":[335,691],"source":"<a name=\"dependencyPropertyInfo_TextWrapping\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBox.TextWrappingProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"}]},{"pos":[106671,106852],"content":"One of the <xref href=\"System.Windows.TextWrapping\"></xref> values that indicates how the text box should wrap text. The default is <xref href=\"System.Windows.TextWrapping\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.TextWrapping\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that indicates how the text box should wrap text.","pos":[0,116],"source":"One of the <xref href=\"System.Windows.TextWrapping\"></xref> values that indicates how the text box should wrap text."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.TextWrapping\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[117,181],"source":" The default is <xref href=\"System.Windows.TextWrapping\"></xref>."}]},{"pos":[107341,107429],"content":"Identifies the <xref:System.Windows.Controls.TextBox.TextWrapping*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBox.TextWrapping*&gt; dependency property.","pos":[0,88],"source":"Identifies the <xref:System.Windows.Controls.TextBox.TextWrapping*> dependency property."}]},{"pos":[107441,107539],"content":"The identifier for the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier for the &lt;xref:System.Windows.Controls.TextBox.TextWrapping%2A&gt; dependency property.","pos":[0,98],"source":"The identifier for the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> dependency property."}]},{"pos":[107719,107731],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[108115,108204],"content":"Gets the currently effective typography variations for the text contents of the text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the currently effective typography variations for the text contents of the text box.","pos":[0,89]}]},{"pos":[108216,108568],"content":"The <xref:System.Windows.Documents.FlowDocument.Typography%2A> property is applicable only to [!INCLUDE[TLA#tla_opentype](~/add/includes/tlasharptla-opentype-md.md)] fonts. A typography variant has no effect on fonts that do not support the variant. For more information about this topic, see [Typography in WPF](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Documents.FlowDocument.Typography%2A&gt; property is applicable only to <ph id=\"ph1\">[!INCLUDE[TLA#tla_opentype](~/add/includes/tlasharptla-opentype-md.md)]</ph> fonts.","pos":[0,172],"source":"The <xref:System.Windows.Documents.FlowDocument.Typography%2A> property is applicable only to [!INCLUDE[TLA#tla_opentype](~/add/includes/tlasharptla-opentype-md.md)] fonts."},{"content":"A typography variant has no effect on fonts that do not support the variant.","pos":[173,249]},{"content":"For more information about this topic, see <bpt id=\"p1\">[</bpt>Typography in WPF<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[250,352],"source":" For more information about this topic, see [Typography in WPF](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[109895,110125],"content":"A <xref href=\"System.Windows.Documents.Typography\"></xref> object that specifies the currently effective typography variations. For a list of default typography values, see <xref href=\"System.Windows.Documents.Typography\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.Typography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies the currently effective typography variations.","pos":[0,127],"source":"A <xref href=\"System.Windows.Documents.Typography\"></xref> object that specifies the currently effective typography variations."},{"content":"For a list of default typography values, see <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.Typography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[128,230],"source":" For a list of default typography values, see <xref href=\"System.Windows.Documents.Typography\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.TextBox\n  id: TextBox\n  children:\n  - System.Windows.Controls.TextBox.#ctor\n  - System.Windows.Controls.TextBox.CaretIndex\n  - System.Windows.Controls.TextBox.CharacterCasing\n  - System.Windows.Controls.TextBox.CharacterCasingProperty\n  - System.Windows.Controls.TextBox.Clear\n  - System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)\n  - System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)\n  - System.Windows.Controls.TextBox.GetFirstVisibleLineIndex\n  - System.Windows.Controls.TextBox.GetLastVisibleLineIndex\n  - System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)\n  - System.Windows.Controls.TextBox.GetLineLength(System.Int32)\n  - System.Windows.Controls.TextBox.GetLineText(System.Int32)\n  - System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)\n  - System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)\n  - System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)\n  - System.Windows.Controls.TextBox.GetSpellingError(System.Int32)\n  - System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)\n  - System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)\n  - System.Windows.Controls.TextBox.LineCount\n  - System.Windows.Controls.TextBox.LogicalChildren\n  - System.Windows.Controls.TextBox.MaxLength\n  - System.Windows.Controls.TextBox.MaxLengthProperty\n  - System.Windows.Controls.TextBox.MaxLines\n  - System.Windows.Controls.TextBox.MaxLinesProperty\n  - System.Windows.Controls.TextBox.MeasureOverride(System.Windows.Size)\n  - System.Windows.Controls.TextBox.MinLines\n  - System.Windows.Controls.TextBox.MinLinesProperty\n  - System.Windows.Controls.TextBox.OnCreateAutomationPeer\n  - System.Windows.Controls.TextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Controls.TextBox.ScrollToLine(System.Int32)\n  - System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)\n  - System.Windows.Controls.TextBox.SelectedText\n  - System.Windows.Controls.TextBox.SelectionLength\n  - System.Windows.Controls.TextBox.SelectionStart\n  - System.Windows.Controls.TextBox.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)\n  - System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  - System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText(System.String)\n  - System.Windows.Controls.TextBox.Text\n  - System.Windows.Controls.TextBox.TextAlignment\n  - System.Windows.Controls.TextBox.TextAlignmentProperty\n  - System.Windows.Controls.TextBox.TextDecorations\n  - System.Windows.Controls.TextBox.TextDecorationsProperty\n  - System.Windows.Controls.TextBox.TextProperty\n  - System.Windows.Controls.TextBox.TextWrapping\n  - System.Windows.Controls.TextBox.TextWrappingProperty\n  - System.Windows.Controls.TextBox.Typography\n  langs:\n  - csharp\n  name: TextBox\n  nameWithType: TextBox\n  fullName: System.Windows.Controls.TextBox\n  type: Class\n  summary: Represents a control that can be used to display or edit unformatted text.\n  remarks: \"A TextBox control can contain only unformatted text in its <xref:System.Windows.Controls.TextBox.Text%2A> property. The following graphic shows an example of a TextBox.  \\n  \\n ![TextBox screen shot](~/add/media/ss-ctl-textbox.gif \\\"TextBox screen shot\\\")  \\nExample of a TextBox  \\n  \\n TextBox is a composite control that is composed of several encapsulated components. Consequently, some events do not bubble up to the containing control because they are handled by encapsulated child elements. Because of this, application developers should listen for the tunneling version of an event (denoted by the prefix \\\"Preview\\\").  \\n  \\n TextBox supports unformatted text only. For applications that require support for richer content, see <xref:System.Windows.Controls.RichTextBox>. For applications that need to accept passwords or other sensitive input, see <xref:System.Windows.Controls.PasswordBox>.  \\n  \\n Horizontally and vertically aligning text within a TextBox is done with the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> and <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> properties. Aligning the TextBox within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties.  \\n  \\n The best way to hide the border around a TextBox is to set the <xref:System.Windows.Controls.Control.BorderThickness%2A> property of the TextBox to `0`.  \\n  \\n> [!IMPORTANT]\\n>  TextBox has built-in handling for the bubbling  <xref:System.Windows.UIElement.MouseUp> and <xref:System.Windows.UIElement.MouseDown> events. Consequently, custom event handlers that listen for <xref:System.Windows.UIElement.MouseUp> or <xref:System.Windows.UIElement.MouseDown> events from a TextBox will not be called. If you need to respond to these events, listen for the tunneling <xref:System.Windows.UIElement.PreviewMouseUp> and <xref:System.Windows.UIElement.PreviewMouseDown> events instead, or register the handlers with the <xref:System.Windows.EventSetter.HandledEventsToo%2A> argument (this latter option is only available through code). Do not mark the event handled unless you deliberately want to disable TextBox native handling of these events, and be aware that this has notable effects on the control's [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)].  \\n  \\n Scrollbars are not visible on a TextBox by default. To make scrollbars visible, set the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> properties to <xref:System.Windows.Controls.ScrollBarVisibility> or <xref:System.Windows.Controls.ScrollBarVisibility>.  \\n  \\n Usually the <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event should be used to detect whenever the text in a TextBox or <xref:System.Windows.Controls.RichTextBox> changes rather then <xref:System.Windows.UIElement.KeyDown> as you might expect. See [How to: Detect When Text in a TextBox Has Changed](~/add/includes/ajax-current-ext-md.md) for an example.  \\n  \\n## Customizing the TextBox Control  \\n To apply the same property settings to multiple TextBox controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property. You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance. For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md).  To see the parts and states that are specific to the TextBox, see [TextBox Styles and Templates](~/add/includes/ajax-current-ext-md.md).  \\n  \\n Dependency properties for this control might be set by the controlâ€™s default style.  If a property is set by a default style, the property might change from its default value when the control appears in the application. The default style is determined by which desktop theme is used when the application is running.  For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).  \\n  \\n> [!NOTE]\\n>  Setting a visual property will only have an effect if that property is both present in TextBox control's default template and is set by using a . You can find a list of visual properties in the \\\"Changing the Visual Structure of a Control\\\" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](../Topic/Customizing%20the%20Appearance%20of%20an%20Existing%20Control%20by%20Creating%20a%20ControlTemplate.md).\"\n  example:\n  - \"This example shows how to use the Text property to set the initial text contents of a TextBox control.  \\n  \\n> [!NOTE]\\n>  Although the Extensible Application Markup Language (XAML) version of the example could use the \\\\<TextBox.Text> tags around the text of each button's TextBox content, it is not necessary because the TextBox applies the ContentPropertyAttribute attribute to the Text property.  \\n  \\n```xaml  \\n<TextBox Name=\\\"tbSettingText\\\">  \\n  Initial text contents of the TextBox.  \\n</TextBox>  \\n```  \\n  \\n```c#  \\ntbSettingText.Text = \\\"Initial text contents of the TextBox.\\\";  \\n```  \\n  \\n```vb  \\ntbSettingText.Text = \\\"Initial text contents of the TextBox.\\\"  \\n```  \\n  \\n For additional examples, see the 4.0 version of this document: [TextBox Class](https://msdn.microsoft.com/en-US/library/ms617604\\\\(v=vs.100\\\\).aspx).\"\n  syntax:\n    content: >-\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.Text)]\n\n      [System.Windows.Markup.ContentProperty(\"Text\")]\n\n      public class TextBox : System.Windows.Controls.Primitives.TextBoxBase, System.Windows.Markup.IAddChild\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Media.Visual\n  - System.Windows.UIElement\n  - System.Windows.FrameworkElement\n  - System.Windows.Controls.Control\n  - System.Windows.Controls.Primitives.TextBoxBase\n  implements:\n  - System.Windows.Markup.IAddChild\n  inheritedMembers:\n  - System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)\n  - System.Windows.Controls.Control.Background\n  - System.Windows.Controls.Control.BackgroundProperty\n  - System.Windows.Controls.Control.BorderBrush\n  - System.Windows.Controls.Control.BorderBrushProperty\n  - System.Windows.Controls.Control.BorderThickness\n  - System.Windows.Controls.Control.BorderThicknessProperty\n  - System.Windows.Controls.Control.FontFamily\n  - System.Windows.Controls.Control.FontFamilyProperty\n  - System.Windows.Controls.Control.FontSize\n  - System.Windows.Controls.Control.FontSizeProperty\n  - System.Windows.Controls.Control.FontStretch\n  - System.Windows.Controls.Control.FontStretchProperty\n  - System.Windows.Controls.Control.FontStyle\n  - System.Windows.Controls.Control.FontStyleProperty\n  - System.Windows.Controls.Control.FontWeight\n  - System.Windows.Controls.Control.FontWeightProperty\n  - System.Windows.Controls.Control.Foreground\n  - System.Windows.Controls.Control.ForegroundProperty\n  - System.Windows.Controls.Control.HandlesScrolling\n  - System.Windows.Controls.Control.HorizontalContentAlignment\n  - System.Windows.Controls.Control.HorizontalContentAlignmentProperty\n  - System.Windows.Controls.Control.IsTabStop\n  - System.Windows.Controls.Control.IsTabStopProperty\n  - System.Windows.Controls.Control.MouseDoubleClick\n  - System.Windows.Controls.Control.MouseDoubleClickEvent\n  - System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Control.Padding\n  - System.Windows.Controls.Control.PaddingProperty\n  - System.Windows.Controls.Control.PreviewMouseDoubleClick\n  - System.Windows.Controls.Control.PreviewMouseDoubleClickEvent\n  - System.Windows.Controls.Control.TabIndex\n  - System.Windows.Controls.Control.TabIndexProperty\n  - System.Windows.Controls.Control.Template\n  - System.Windows.Controls.Control.TemplateProperty\n  - System.Windows.Controls.Control.ToString\n  - System.Windows.Controls.Control.VerticalContentAlignment\n  - System.Windows.Controls.Control.VerticalContentAlignmentProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn\n  - System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab\n  - System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.AppendText(System.String)\n  - System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection\n  - System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.BeginChange\n  - System.Windows.Controls.Primitives.TextBoxBase.CanRedo\n  - System.Windows.Controls.Primitives.TextBoxBase.CanUndo\n  - System.Windows.Controls.Primitives.TextBoxBase.CaretBrush\n  - System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.Copy\n  - System.Windows.Controls.Primitives.TextBoxBase.Cut\n  - System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock\n  - System.Windows.Controls.Primitives.TextBoxBase.EndChange\n  - System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight\n  - System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth\n  - System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset\n  - System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility\n  - System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled\n  - System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly\n  - System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible\n  - System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive\n  - System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled\n  - System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.LineDown\n  - System.Windows.Controls.Primitives.TextBoxBase.LineLeft\n  - System.Windows.Controls.Primitives.TextBoxBase.LineRight\n  - System.Windows.Controls.Primitives.TextBoxBase.LineUp\n  - System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit\n  - System.Windows.Controls.Primitives.TextBoxBase.OnApplyTemplate\n  - System.Windows.Controls.Primitives.TextBoxBase.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnDragOver(System.Windows.DragEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnDrop(System.Windows.DragEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnLostFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged(System.Windows.RoutedEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.PageDown\n  - System.Windows.Controls.Primitives.TextBoxBase.PageLeft\n  - System.Windows.Controls.Primitives.TextBoxBase.PageRight\n  - System.Windows.Controls.Primitives.TextBoxBase.PageUp\n  - System.Windows.Controls.Primitives.TextBoxBase.Paste\n  - System.Windows.Controls.Primitives.TextBoxBase.Redo\n  - System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd\n  - System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome\n  - System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)\n  - System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)\n  - System.Windows.Controls.Primitives.TextBoxBase.SelectAll\n  - System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush\n  - System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged\n  - System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent\n  - System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity\n  - System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.SpellCheck\n  - System.Windows.Controls.Primitives.TextBoxBase.TextChanged\n  - System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent\n  - System.Windows.Controls.Primitives.TextBoxBase.Undo\n  - System.Windows.Controls.Primitives.TextBoxBase.UndoLimit\n  - System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset\n  - System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility\n  - System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight\n  - System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.ActualHeight\n  - System.Windows.FrameworkElement.ActualHeightProperty\n  - System.Windows.FrameworkElement.ActualWidth\n  - System.Windows.FrameworkElement.ActualWidthProperty\n  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.ApplyTemplate\n  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)\n  - System.Windows.FrameworkElement.BeginInit\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  - System.Windows.FrameworkElement.BindingGroup\n  - System.Windows.FrameworkElement.BindingGroupProperty\n  - System.Windows.FrameworkElement.BringIntoView\n  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)\n  - System.Windows.FrameworkElement.ContextMenu\n  - System.Windows.FrameworkElement.ContextMenuClosing\n  - System.Windows.FrameworkElement.ContextMenuClosingEvent\n  - System.Windows.FrameworkElement.ContextMenuOpening\n  - System.Windows.FrameworkElement.ContextMenuOpeningEvent\n  - System.Windows.FrameworkElement.ContextMenuProperty\n  - System.Windows.FrameworkElement.Cursor\n  - System.Windows.FrameworkElement.CursorProperty\n  - System.Windows.FrameworkElement.DataContext\n  - System.Windows.FrameworkElement.DataContextChanged\n  - System.Windows.FrameworkElement.DataContextProperty\n  - System.Windows.FrameworkElement.DefaultStyleKey\n  - System.Windows.FrameworkElement.DefaultStyleKeyProperty\n  - System.Windows.FrameworkElement.EndInit\n  - System.Windows.FrameworkElement.FindName(System.String)\n  - System.Windows.FrameworkElement.FindResource(System.Object)\n  - System.Windows.FrameworkElement.FlowDirection\n  - System.Windows.FrameworkElement.FlowDirectionProperty\n  - System.Windows.FrameworkElement.FocusVisualStyle\n  - System.Windows.FrameworkElement.FocusVisualStyleProperty\n  - System.Windows.FrameworkElement.ForceCursor\n  - System.Windows.FrameworkElement.ForceCursorProperty\n  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)\n  - System.Windows.FrameworkElement.GetTemplateChild(System.String)\n  - System.Windows.FrameworkElement.GetUIParentCore\n  - System.Windows.FrameworkElement.GetVisualChild(System.Int32)\n  - System.Windows.FrameworkElement.Height\n  - System.Windows.FrameworkElement.HeightProperty\n  - System.Windows.FrameworkElement.HorizontalAlignment\n  - System.Windows.FrameworkElement.HorizontalAlignmentProperty\n  - System.Windows.FrameworkElement.InheritanceBehavior\n  - System.Windows.FrameworkElement.Initialized\n  - System.Windows.FrameworkElement.InputScope\n  - System.Windows.FrameworkElement.InputScopeProperty\n  - System.Windows.FrameworkElement.IsInitialized\n  - System.Windows.FrameworkElement.IsLoaded\n  - System.Windows.FrameworkElement.Language\n  - System.Windows.FrameworkElement.LanguageProperty\n  - System.Windows.FrameworkElement.LayoutTransform\n  - System.Windows.FrameworkElement.LayoutTransformProperty\n  - System.Windows.FrameworkElement.Loaded\n  - System.Windows.FrameworkElement.LoadedEvent\n  - System.Windows.FrameworkElement.Margin\n  - System.Windows.FrameworkElement.MarginProperty\n  - System.Windows.FrameworkElement.MaxHeight\n  - System.Windows.FrameworkElement.MaxHeightProperty\n  - System.Windows.FrameworkElement.MaxWidth\n  - System.Windows.FrameworkElement.MaxWidthProperty\n  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)\n  - System.Windows.FrameworkElement.MinHeight\n  - System.Windows.FrameworkElement.MinHeightProperty\n  - System.Windows.FrameworkElement.MinWidth\n  - System.Windows.FrameworkElement.MinWidthProperty\n  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)\n  - System.Windows.FrameworkElement.Name\n  - System.Windows.FrameworkElement.NameProperty\n  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.FrameworkElement.OnInitialized(System.EventArgs)\n  - System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)\n  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)\n  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.OverridesDefaultStyle\n  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty\n  - System.Windows.FrameworkElement.Parent\n  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)\n  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)\n  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.RequestBringIntoView\n  - System.Windows.FrameworkElement.RequestBringIntoViewEvent\n  - System.Windows.FrameworkElement.Resources\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)\n  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)\n  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.FrameworkElement.ShouldSerializeResources\n  - System.Windows.FrameworkElement.ShouldSerializeStyle\n  - System.Windows.FrameworkElement.ShouldSerializeTriggers\n  - System.Windows.FrameworkElement.SizeChanged\n  - System.Windows.FrameworkElement.SizeChangedEvent\n  - System.Windows.FrameworkElement.SourceUpdated\n  - System.Windows.FrameworkElement.Style\n  - System.Windows.FrameworkElement.StyleProperty\n  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  - System.Windows.FrameworkElement.Tag\n  - System.Windows.FrameworkElement.TagProperty\n  - System.Windows.FrameworkElement.TargetUpdated\n  - System.Windows.FrameworkElement.TemplatedParent\n  - System.Windows.FrameworkElement.ToolTip\n  - System.Windows.FrameworkElement.ToolTipClosing\n  - System.Windows.FrameworkElement.ToolTipClosingEvent\n  - System.Windows.FrameworkElement.ToolTipOpening\n  - System.Windows.FrameworkElement.ToolTipOpeningEvent\n  - System.Windows.FrameworkElement.ToolTipProperty\n  - System.Windows.FrameworkElement.Triggers\n  - System.Windows.FrameworkElement.TryFindResource(System.Object)\n  - System.Windows.FrameworkElement.Unloaded\n  - System.Windows.FrameworkElement.UnloadedEvent\n  - System.Windows.FrameworkElement.UnregisterName(System.String)\n  - System.Windows.FrameworkElement.UpdateDefaultStyle\n  - System.Windows.FrameworkElement.UseLayoutRounding\n  - System.Windows.FrameworkElement.UseLayoutRoundingProperty\n  - System.Windows.FrameworkElement.VerticalAlignment\n  - System.Windows.FrameworkElement.VerticalAlignmentProperty\n  - System.Windows.FrameworkElement.VisualChildrenCount\n  - System.Windows.FrameworkElement.Width\n  - System.Windows.FrameworkElement.WidthProperty\n  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)\n  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.VisualBitmapEffect\n  - System.Windows.Media.Visual.VisualBitmapEffectInput\n  - System.Windows.Media.Visual.VisualBitmapScalingMode\n  - System.Windows.Media.Visual.VisualCacheMode\n  - System.Windows.Media.Visual.VisualClearTypeHint\n  - System.Windows.Media.Visual.VisualClip\n  - System.Windows.Media.Visual.VisualEdgeMode\n  - System.Windows.Media.Visual.VisualEffect\n  - System.Windows.Media.Visual.VisualOffset\n  - System.Windows.Media.Visual.VisualOpacity\n  - System.Windows.Media.Visual.VisualOpacityMask\n  - System.Windows.Media.Visual.VisualParent\n  - System.Windows.Media.Visual.VisualScrollableAreaClip\n  - System.Windows.Media.Visual.VisualTextHintingMode\n  - System.Windows.Media.Visual.VisualTextRenderingMode\n  - System.Windows.Media.Visual.VisualTransform\n  - System.Windows.Media.Visual.VisualXSnappingGuidelines\n  - System.Windows.Media.Visual.VisualYSnappingGuidelines\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.AllowDrop\n  - System.Windows.UIElement.AllowDropProperty\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.AreAnyTouchesCaptured\n  - System.Windows.UIElement.AreAnyTouchesCapturedProperty\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithin\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOver\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty\n  - System.Windows.UIElement.AreAnyTouchesOver\n  - System.Windows.UIElement.AreAnyTouchesOverProperty\n  - System.Windows.UIElement.Arrange(System.Windows.Rect)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.BitmapEffect\n  - System.Windows.UIElement.BitmapEffectInput\n  - System.Windows.UIElement.BitmapEffectInputProperty\n  - System.Windows.UIElement.BitmapEffectProperty\n  - System.Windows.UIElement.CacheMode\n  - System.Windows.UIElement.CacheModeProperty\n  - System.Windows.UIElement.CaptureMouse\n  - System.Windows.UIElement.CaptureStylus\n  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.Clip\n  - System.Windows.UIElement.ClipProperty\n  - System.Windows.UIElement.ClipToBounds\n  - System.Windows.UIElement.ClipToBoundsProperty\n  - System.Windows.UIElement.CommandBindings\n  - System.Windows.UIElement.DesiredSize\n  - System.Windows.UIElement.DragEnter\n  - System.Windows.UIElement.DragEnterEvent\n  - System.Windows.UIElement.DragLeave\n  - System.Windows.UIElement.DragLeaveEvent\n  - System.Windows.UIElement.DragOver\n  - System.Windows.UIElement.DragOverEvent\n  - System.Windows.UIElement.Drop\n  - System.Windows.UIElement.DropEvent\n  - System.Windows.UIElement.Effect\n  - System.Windows.UIElement.EffectProperty\n  - System.Windows.UIElement.Focus\n  - System.Windows.UIElement.Focusable\n  - System.Windows.UIElement.FocusableChanged\n  - System.Windows.UIElement.FocusableProperty\n  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.UIElement.GiveFeedback\n  - System.Windows.UIElement.GiveFeedbackEvent\n  - System.Windows.UIElement.GotFocus\n  - System.Windows.UIElement.GotFocusEvent\n  - System.Windows.UIElement.GotKeyboardFocus\n  - System.Windows.UIElement.GotKeyboardFocusEvent\n  - System.Windows.UIElement.GotMouseCapture\n  - System.Windows.UIElement.GotMouseCaptureEvent\n  - System.Windows.UIElement.GotStylusCapture\n  - System.Windows.UIElement.GotStylusCaptureEvent\n  - System.Windows.UIElement.GotTouchCapture\n  - System.Windows.UIElement.GotTouchCaptureEvent\n  - System.Windows.UIElement.HasAnimatedProperties\n  - System.Windows.UIElement.HasEffectiveKeyboardFocus\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)\n  - System.Windows.UIElement.InputBindings\n  - System.Windows.UIElement.InputHitTest(System.Windows.Point)\n  - System.Windows.UIElement.InvalidateArrange\n  - System.Windows.UIElement.InvalidateMeasure\n  - System.Windows.UIElement.InvalidateVisual\n  - System.Windows.UIElement.IsArrangeValid\n  - System.Windows.UIElement.IsEnabled\n  - System.Windows.UIElement.IsEnabledChanged\n  - System.Windows.UIElement.IsEnabledCore\n  - System.Windows.UIElement.IsEnabledProperty\n  - System.Windows.UIElement.IsFocused\n  - System.Windows.UIElement.IsFocusedProperty\n  - System.Windows.UIElement.IsHitTestVisible\n  - System.Windows.UIElement.IsHitTestVisibleChanged\n  - System.Windows.UIElement.IsHitTestVisibleProperty\n  - System.Windows.UIElement.IsInputMethodEnabled\n  - System.Windows.UIElement.IsKeyboardFocused\n  - System.Windows.UIElement.IsKeyboardFocusedChanged\n  - System.Windows.UIElement.IsKeyboardFocusedProperty\n  - System.Windows.UIElement.IsKeyboardFocusWithin\n  - System.Windows.UIElement.IsKeyboardFocusWithinChanged\n  - System.Windows.UIElement.IsKeyboardFocusWithinProperty\n  - System.Windows.UIElement.IsManipulationEnabled\n  - System.Windows.UIElement.IsManipulationEnabledProperty\n  - System.Windows.UIElement.IsMeasureValid\n  - System.Windows.UIElement.IsMouseCaptured\n  - System.Windows.UIElement.IsMouseCapturedChanged\n  - System.Windows.UIElement.IsMouseCapturedProperty\n  - System.Windows.UIElement.IsMouseCaptureWithin\n  - System.Windows.UIElement.IsMouseCaptureWithinChanged\n  - System.Windows.UIElement.IsMouseCaptureWithinProperty\n  - System.Windows.UIElement.IsMouseDirectlyOver\n  - System.Windows.UIElement.IsMouseDirectlyOverChanged\n  - System.Windows.UIElement.IsMouseDirectlyOverProperty\n  - System.Windows.UIElement.IsMouseOver\n  - System.Windows.UIElement.IsMouseOverProperty\n  - System.Windows.UIElement.IsStylusCaptured\n  - System.Windows.UIElement.IsStylusCapturedChanged\n  - System.Windows.UIElement.IsStylusCapturedProperty\n  - System.Windows.UIElement.IsStylusCaptureWithin\n  - System.Windows.UIElement.IsStylusCaptureWithinChanged\n  - System.Windows.UIElement.IsStylusCaptureWithinProperty\n  - System.Windows.UIElement.IsStylusDirectlyOver\n  - System.Windows.UIElement.IsStylusDirectlyOverChanged\n  - System.Windows.UIElement.IsStylusDirectlyOverProperty\n  - System.Windows.UIElement.IsStylusOver\n  - System.Windows.UIElement.IsStylusOverProperty\n  - System.Windows.UIElement.IsVisible\n  - System.Windows.UIElement.IsVisibleChanged\n  - System.Windows.UIElement.IsVisibleProperty\n  - System.Windows.UIElement.KeyDown\n  - System.Windows.UIElement.KeyDownEvent\n  - System.Windows.UIElement.KeyUp\n  - System.Windows.UIElement.KeyUpEvent\n  - System.Windows.UIElement.LayoutUpdated\n  - System.Windows.UIElement.LostFocus\n  - System.Windows.UIElement.LostFocusEvent\n  - System.Windows.UIElement.LostKeyboardFocus\n  - System.Windows.UIElement.LostKeyboardFocusEvent\n  - System.Windows.UIElement.LostMouseCapture\n  - System.Windows.UIElement.LostMouseCaptureEvent\n  - System.Windows.UIElement.LostStylusCapture\n  - System.Windows.UIElement.LostStylusCaptureEvent\n  - System.Windows.UIElement.LostTouchCapture\n  - System.Windows.UIElement.LostTouchCaptureEvent\n  - System.Windows.UIElement.ManipulationBoundaryFeedback\n  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent\n  - System.Windows.UIElement.ManipulationCompleted\n  - System.Windows.UIElement.ManipulationCompletedEvent\n  - System.Windows.UIElement.ManipulationDelta\n  - System.Windows.UIElement.ManipulationDeltaEvent\n  - System.Windows.UIElement.ManipulationInertiaStarting\n  - System.Windows.UIElement.ManipulationInertiaStartingEvent\n  - System.Windows.UIElement.ManipulationStarted\n  - System.Windows.UIElement.ManipulationStartedEvent\n  - System.Windows.UIElement.ManipulationStarting\n  - System.Windows.UIElement.ManipulationStartingEvent\n  - System.Windows.UIElement.Measure(System.Windows.Size)\n  - System.Windows.UIElement.MouseDown\n  - System.Windows.UIElement.MouseDownEvent\n  - System.Windows.UIElement.MouseEnter\n  - System.Windows.UIElement.MouseEnterEvent\n  - System.Windows.UIElement.MouseLeave\n  - System.Windows.UIElement.MouseLeaveEvent\n  - System.Windows.UIElement.MouseLeftButtonDown\n  - System.Windows.UIElement.MouseLeftButtonDownEvent\n  - System.Windows.UIElement.MouseLeftButtonUp\n  - System.Windows.UIElement.MouseLeftButtonUpEvent\n  - System.Windows.UIElement.MouseMove\n  - System.Windows.UIElement.MouseMoveEvent\n  - System.Windows.UIElement.MouseRightButtonDown\n  - System.Windows.UIElement.MouseRightButtonDownEvent\n  - System.Windows.UIElement.MouseRightButtonUp\n  - System.Windows.UIElement.MouseRightButtonUpEvent\n  - System.Windows.UIElement.MouseUp\n  - System.Windows.UIElement.MouseUpEvent\n  - System.Windows.UIElement.MouseWheel\n  - System.Windows.UIElement.MouseWheelEvent\n  - System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)\n  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)\n  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)\n  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)\n  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)\n  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)\n  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)\n  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)\n  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.Opacity\n  - System.Windows.UIElement.OpacityMask\n  - System.Windows.UIElement.OpacityMaskProperty\n  - System.Windows.UIElement.OpacityProperty\n  - System.Windows.UIElement.PersistId\n  - System.Windows.UIElement.PreviewDragEnter\n  - System.Windows.UIElement.PreviewDragEnterEvent\n  - System.Windows.UIElement.PreviewDragLeave\n  - System.Windows.UIElement.PreviewDragLeaveEvent\n  - System.Windows.UIElement.PreviewDragOver\n  - System.Windows.UIElement.PreviewDragOverEvent\n  - System.Windows.UIElement.PreviewDrop\n  - System.Windows.UIElement.PreviewDropEvent\n  - System.Windows.UIElement.PreviewGiveFeedback\n  - System.Windows.UIElement.PreviewGiveFeedbackEvent\n  - System.Windows.UIElement.PreviewGotKeyboardFocus\n  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewKeyDown\n  - System.Windows.UIElement.PreviewKeyDownEvent\n  - System.Windows.UIElement.PreviewKeyUp\n  - System.Windows.UIElement.PreviewKeyUpEvent\n  - System.Windows.UIElement.PreviewLostKeyboardFocus\n  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewMouseDown\n  - System.Windows.UIElement.PreviewMouseDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonDown\n  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonUp\n  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseMove\n  - System.Windows.UIElement.PreviewMouseMoveEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonDown\n  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonUp\n  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseUp\n  - System.Windows.UIElement.PreviewMouseUpEvent\n  - System.Windows.UIElement.PreviewMouseWheel\n  - System.Windows.UIElement.PreviewMouseWheelEvent\n  - System.Windows.UIElement.PreviewQueryContinueDrag\n  - System.Windows.UIElement.PreviewQueryContinueDragEvent\n  - System.Windows.UIElement.PreviewStylusButtonDown\n  - System.Windows.UIElement.PreviewStylusButtonDownEvent\n  - System.Windows.UIElement.PreviewStylusButtonUp\n  - System.Windows.UIElement.PreviewStylusButtonUpEvent\n  - System.Windows.UIElement.PreviewStylusDown\n  - System.Windows.UIElement.PreviewStylusDownEvent\n  - System.Windows.UIElement.PreviewStylusInAirMove\n  - System.Windows.UIElement.PreviewStylusInAirMoveEvent\n  - System.Windows.UIElement.PreviewStylusInRange\n  - System.Windows.UIElement.PreviewStylusInRangeEvent\n  - System.Windows.UIElement.PreviewStylusMove\n  - System.Windows.UIElement.PreviewStylusMoveEvent\n  - System.Windows.UIElement.PreviewStylusOutOfRange\n  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent\n  - System.Windows.UIElement.PreviewStylusSystemGesture\n  - System.Windows.UIElement.PreviewStylusSystemGestureEvent\n  - System.Windows.UIElement.PreviewStylusUp\n  - System.Windows.UIElement.PreviewStylusUpEvent\n  - System.Windows.UIElement.PreviewTextInput\n  - System.Windows.UIElement.PreviewTextInputEvent\n  - System.Windows.UIElement.PreviewTouchDown\n  - System.Windows.UIElement.PreviewTouchDownEvent\n  - System.Windows.UIElement.PreviewTouchMove\n  - System.Windows.UIElement.PreviewTouchMoveEvent\n  - System.Windows.UIElement.PreviewTouchUp\n  - System.Windows.UIElement.PreviewTouchUpEvent\n  - System.Windows.UIElement.QueryContinueDrag\n  - System.Windows.UIElement.QueryContinueDragEvent\n  - System.Windows.UIElement.QueryCursor\n  - System.Windows.UIElement.QueryCursorEvent\n  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.ReleaseAllTouchCaptures\n  - System.Windows.UIElement.ReleaseMouseCapture\n  - System.Windows.UIElement.ReleaseStylusCapture\n  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.RenderSize\n  - System.Windows.UIElement.RenderTransform\n  - System.Windows.UIElement.RenderTransformOrigin\n  - System.Windows.UIElement.RenderTransformOriginProperty\n  - System.Windows.UIElement.RenderTransformProperty\n  - System.Windows.UIElement.ShouldSerializeCommandBindings\n  - System.Windows.UIElement.ShouldSerializeInputBindings\n  - System.Windows.UIElement.SnapsToDevicePixels\n  - System.Windows.UIElement.SnapsToDevicePixelsProperty\n  - System.Windows.UIElement.StylusButtonDown\n  - System.Windows.UIElement.StylusButtonDownEvent\n  - System.Windows.UIElement.StylusButtonUp\n  - System.Windows.UIElement.StylusButtonUpEvent\n  - System.Windows.UIElement.StylusDown\n  - System.Windows.UIElement.StylusDownEvent\n  - System.Windows.UIElement.StylusEnter\n  - System.Windows.UIElement.StylusEnterEvent\n  - System.Windows.UIElement.StylusInAirMove\n  - System.Windows.UIElement.StylusInAirMoveEvent\n  - System.Windows.UIElement.StylusInRange\n  - System.Windows.UIElement.StylusInRangeEvent\n  - System.Windows.UIElement.StylusLeave\n  - System.Windows.UIElement.StylusLeaveEvent\n  - System.Windows.UIElement.StylusMove\n  - System.Windows.UIElement.StylusMoveEvent\n  - System.Windows.UIElement.StylusOutOfRange\n  - System.Windows.UIElement.StylusOutOfRangeEvent\n  - System.Windows.UIElement.StylusPlugIns\n  - System.Windows.UIElement.StylusSystemGesture\n  - System.Windows.UIElement.StylusSystemGestureEvent\n  - System.Windows.UIElement.StylusUp\n  - System.Windows.UIElement.StylusUpEvent\n  - System.Windows.UIElement.TextInput\n  - System.Windows.UIElement.TextInputEvent\n  - System.Windows.UIElement.TouchDown\n  - System.Windows.UIElement.TouchDownEvent\n  - System.Windows.UIElement.TouchEnter\n  - System.Windows.UIElement.TouchEnterEvent\n  - System.Windows.UIElement.TouchesCaptured\n  - System.Windows.UIElement.TouchesCapturedWithin\n  - System.Windows.UIElement.TouchesDirectlyOver\n  - System.Windows.UIElement.TouchesOver\n  - System.Windows.UIElement.TouchLeave\n  - System.Windows.UIElement.TouchLeaveEvent\n  - System.Windows.UIElement.TouchMove\n  - System.Windows.UIElement.TouchMoveEvent\n  - System.Windows.UIElement.TouchUp\n  - System.Windows.UIElement.TouchUpEvent\n  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)\n  - System.Windows.UIElement.Uid\n  - System.Windows.UIElement.UidProperty\n  - System.Windows.UIElement.UpdateLayout\n  - System.Windows.UIElement.Visibility\n  - System.Windows.UIElement.VisibilityProperty\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.#ctor\n  id: '#ctor'\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: TextBox()\n  nameWithType: TextBox.TextBox()\n  fullName: System.Windows.Controls.TextBox.TextBox()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.TextBox\"></xref> class.\n  syntax:\n    content: public TextBox ();\n    parameters: []\n  overload: System.Windows.Controls.TextBox.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.CaretIndex\n  id: CaretIndex\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: CaretIndex\n  nameWithType: TextBox.CaretIndex\n  fullName: System.Windows.Controls.TextBox.CaretIndex\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the insertion position index of the caret.\n  remarks: \"Getting this property returns the current insertion position index of the caret (see <xref:System.Windows.Documents.TextPointer> for information on terminology like \\\"insertion position\\\"). Setting this property moves the caret to the specified insertion position.  \\n  \\n An insertion position is between either characters or element tags.\"\n  syntax:\n    content: public int CaretIndex { get; set; }\n    return:\n      type: System.Int32\n      description: The zero-based insertion position index of the caret.\n  overload: System.Windows.Controls.TextBox.CaretIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.CharacterCasing\n  id: CharacterCasing\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: CharacterCasing\n  nameWithType: TextBox.CharacterCasing\n  fullName: System.Windows.Controls.TextBox.CharacterCasing\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets how characters are cased when they are manually entered into the text box.\n  remarks: \"This property does not affect characters that are added programmatically.  \\n  \\n<a name=\\\"dependencyPropertyInfo_CharacterCasing\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBox.CharacterCasingProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example shows how to use the CharacterCasing property to convert all manually entered characters to uppercase in a text box.  \\n  \\n [!code-xml[TextBoxMiscSnippets_snip#CharacterCasingExampleWholePage](~/add/codesnippet/xaml/textmiscsnippets_snip/charactercasingexample.xaml#charactercasingexamplewholepage)]  \\n  \\n [!code-vb[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/add/codesnippet/visualbasic/TextBoxMiscSnippets_procedural_snip.textmiscsnippets_procedural/charactercasingexample.vb#charactercasingcodeexamplewholepage)]\\n [!code-cs[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/add/codesnippet/csharp/TextBoxMiscSnippets_procedural_snip.TextMiscSnippets_procedural/CharacterCasingExample.cs#charactercasingcodeexamplewholepage)]\"\n  syntax:\n    content: public System.Windows.Controls.CharacterCasing CharacterCasing { get; set; }\n    return:\n      type: System.Windows.Controls.CharacterCasing\n      description: One of the <xref href=\"System.Windows.Controls.CharacterCasing\"></xref> values that specifies how manually entered characters are cased. The default is <xref href=\"System.Windows.Controls.CharacterCasing\"></xref>.\n  overload: System.Windows.Controls.TextBox.CharacterCasing*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.CharacterCasingProperty\n  id: CharacterCasingProperty\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: CharacterCasingProperty\n  nameWithType: TextBox.CharacterCasingProperty\n  fullName: System.Windows.Controls.TextBox.CharacterCasingProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBox.CharacterCasing*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty CharacterCasingProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.Clear\n  id: Clear\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: TextBox.Clear()\n  fullName: System.Windows.Controls.TextBox.Clear()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Clears all the content from the text box.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Windows.Controls.TextBox.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)\n  id: GetCharacterIndexFromLineIndex(System.Int32)\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: GetCharacterIndexFromLineIndex(Int32)\n  nameWithType: TextBox.GetCharacterIndexFromLineIndex(Int32)\n  fullName: System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the zero-based character index for the first character in the specified line.\n  syntax:\n    content: public int GetCharacterIndexFromLineIndex (int lineIndex);\n    parameters:\n    - id: lineIndex\n      type: System.Int32\n      description: The zero-based index of the line to retrieve the initial character index for.\n    return:\n      type: System.Int32\n      description: The zero-based index for the first character in the specified line.\n  overload: System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)\n  id: GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: GetCharacterIndexFromPoint(Point,Boolean)\n  nameWithType: TextBox.GetCharacterIndexFromPoint(Point,Boolean)\n  fullName: System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(Point,Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the zero-based index of the character that is closest to the specified point.\n  syntax:\n    content: public int GetCharacterIndexFromPoint (System.Windows.Point point, bool snapToText);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: A point in <xref href=\"System.Windows.Controls.TextBox\"></xref> coordinate-space for which to return an index.\n    - id: snapToText\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return the nearest index if there is no character at the specified point; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to return â€“1 if there is no character at the specified point.\n    return:\n      type: System.Int32\n      description: The index of the character that is closest to the specified point, or â€“1 if no valid index can be found.\n  overload: System.Windows.Controls.TextBox.GetCharacterIndexFromPoint*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.GetFirstVisibleLineIndex\n  id: GetFirstVisibleLineIndex\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: GetFirstVisibleLineIndex()\n  nameWithType: TextBox.GetFirstVisibleLineIndex()\n  fullName: System.Windows.Controls.TextBox.GetFirstVisibleLineIndex()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the line index for the first line that is currently visible in the text box.\n  syntax:\n    content: public int GetFirstVisibleLineIndex ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The zero-based index for the first visible line in the text box.\n  overload: System.Windows.Controls.TextBox.GetFirstVisibleLineIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.GetLastVisibleLineIndex\n  id: GetLastVisibleLineIndex\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: GetLastVisibleLineIndex()\n  nameWithType: TextBox.GetLastVisibleLineIndex()\n  fullName: System.Windows.Controls.TextBox.GetLastVisibleLineIndex()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the line index for the last line that is currently visible in the text box.\n  syntax:\n    content: public int GetLastVisibleLineIndex ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The zero-based index for the last visible line in the text box.\n  overload: System.Windows.Controls.TextBox.GetLastVisibleLineIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)\n  id: GetLineIndexFromCharacterIndex(System.Int32)\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: GetLineIndexFromCharacterIndex(Int32)\n  nameWithType: TextBox.GetLineIndexFromCharacterIndex(Int32)\n  fullName: System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the zero-based line index for the line that contains the specified character index.\n  syntax:\n    content: public int GetLineIndexFromCharacterIndex (int charIndex);\n    parameters:\n    - id: charIndex\n      type: System.Int32\n      description: The zero-based character index for which to retrieve the associated line index.\n    return:\n      type: System.Int32\n      description: The zero-based index for the line that contains the specified character index.\n  overload: System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.GetLineLength(System.Int32)\n  id: GetLineLength(System.Int32)\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: GetLineLength(Int32)\n  nameWithType: TextBox.GetLineLength(Int32)\n  fullName: System.Windows.Controls.TextBox.GetLineLength(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the number of characters in the specified line.\n  syntax:\n    content: public int GetLineLength (int lineIndex);\n    parameters:\n    - id: lineIndex\n      type: System.Int32\n      description: The zero-based line index for which to return a character count.\n    return:\n      type: System.Int32\n      description: The number of characters in the specified line.\n  overload: System.Windows.Controls.TextBox.GetLineLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.GetLineText(System.Int32)\n  id: GetLineText(System.Int32)\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: GetLineText(Int32)\n  nameWithType: TextBox.GetLineText(Int32)\n  fullName: System.Windows.Controls.TextBox.GetLineText(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the text that is currently displayed on the specified line.\n  syntax:\n    content: public string GetLineText (int lineIndex);\n    parameters:\n    - id: lineIndex\n      type: System.Int32\n      description: The zero-based line index for which to retrieve the currently displayed text.\n    return:\n      type: System.String\n      description: A string containing a copy of the text currently visible on the specified line.\n  overload: System.Windows.Controls.TextBox.GetLineText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)\n  id: GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: GetNextSpellingErrorCharacterIndex(Int32,LogicalDirection)\n  nameWithType: TextBox.GetNextSpellingErrorCharacterIndex(Int32,LogicalDirection)\n  fullName: System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(Int32,LogicalDirection)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the beginning character index for the next spelling error in the contents of the text box.\n  syntax:\n    content: public int GetNextSpellingErrorCharacterIndex (int charIndex, System.Windows.Documents.LogicalDirection direction);\n    parameters:\n    - id: charIndex\n      type: System.Int32\n      description: The zero-based character index indicating a position from which to search for the next spelling error.\n    - id: direction\n      type: System.Windows.Documents.LogicalDirection\n      description: One of the <xref href=\"System.Windows.Documents.LogicalDirection\"></xref> values that specifies the direction in which to search for the next spelling error, starting at the specified `charIndex`.\n    return:\n      type: System.Int32\n      description: The character index for the beginning of the next spelling error in the contents of the text box, or â€“1 if no next spelling error exists.\n  overload: System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)\n  id: GetRectFromCharacterIndex(System.Int32)\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: GetRectFromCharacterIndex(Int32)\n  nameWithType: TextBox.GetRectFromCharacterIndex(Int32)\n  fullName: System.Windows.Controls.TextBox.GetRectFromCharacterIndex(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the rectangle for the leading edge of the character at the specified index.\n  remarks: Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.\n  syntax:\n    content: public System.Windows.Rect GetRectFromCharacterIndex (int charIndex);\n    parameters:\n    - id: charIndex\n      type: System.Int32\n      description: The zero-based character index of the character for which to retrieve the rectangle.\n    return:\n      type: System.Windows.Rect\n      description: A rectangle for the leading edge of the character at the specified character index, or &lt;xref:System.Windows.Rect.Empty%2A?displayProperty=fullName&gt; if a bounding rectangle cannot be determined.\n  overload: System.Windows.Controls.TextBox.GetRectFromCharacterIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)\n  id: GetRectFromCharacterIndex(System.Int32,System.Boolean)\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: GetRectFromCharacterIndex(Int32,Boolean)\n  nameWithType: TextBox.GetRectFromCharacterIndex(Int32,Boolean)\n  fullName: System.Windows.Controls.TextBox.GetRectFromCharacterIndex(Int32,Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the rectangle for the leading or trailing edge of the character at the specified index.\n  remarks: Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.\n  syntax:\n    content: public System.Windows.Rect GetRectFromCharacterIndex (int charIndex, bool trailingEdge);\n    parameters:\n    - id: charIndex\n      type: System.Int32\n      description: The zero-based character index of the character for which to retrieve the rectangle.\n    - id: trailingEdge\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to get the trailing edge of the character; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to get the leading edge of the character.\n    return:\n      type: System.Windows.Rect\n      description: A rectangle for an edge of the character at the specified character index, or <xref:System.Windows.Rect.Empty*> if a bounding rectangle cannot be determined.\n  overload: System.Windows.Controls.TextBox.GetRectFromCharacterIndex*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>charIndex</code> is negative or is greater than the length of the content.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.GetSpellingError(System.Int32)\n  id: GetSpellingError(System.Int32)\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: GetSpellingError(Int32)\n  nameWithType: TextBox.GetSpellingError(Int32)\n  fullName: System.Windows.Controls.TextBox.GetSpellingError(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns a <xref href=\"System.Windows.Controls.SpellingError\"></xref> object associated with any spelling error at the specified character index.\n  syntax:\n    content: public System.Windows.Controls.SpellingError GetSpellingError (int charIndex);\n    parameters:\n    - id: charIndex\n      type: System.Int32\n      description: The zero-based character index of a position in content to examine for a spelling error.\n    return:\n      type: System.Windows.Controls.SpellingError\n      description: A <xref href=\"System.Windows.Controls.SpellingError\"></xref> object containing the details of the spelling error found at the character indicated by <code>charIndex</code>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no spelling error exists at the specified character.\n  overload: System.Windows.Controls.TextBox.GetSpellingError*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)\n  id: GetSpellingErrorLength(System.Int32)\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: GetSpellingErrorLength(Int32)\n  nameWithType: TextBox.GetSpellingErrorLength(Int32)\n  fullName: System.Windows.Controls.TextBox.GetSpellingErrorLength(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the length of any spelling error that includes the specified character.\n  syntax:\n    content: public int GetSpellingErrorLength (int charIndex);\n    parameters:\n    - id: charIndex\n      type: System.Int32\n      description: The zero-based character index of a position in content to examine for a spelling error.\n    return:\n      type: System.Int32\n      description: The length of any spelling error that includes the character specified by charIndex, or 0 if the specified character is not part of a spelling error.\n  overload: System.Windows.Controls.TextBox.GetSpellingErrorLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)\n  id: GetSpellingErrorStart(System.Int32)\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: GetSpellingErrorStart(Int32)\n  nameWithType: TextBox.GetSpellingErrorStart(Int32)\n  fullName: System.Windows.Controls.TextBox.GetSpellingErrorStart(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the beginning character index for any spelling error that includes the specified character.\n  syntax:\n    content: public int GetSpellingErrorStart (int charIndex);\n    parameters:\n    - id: charIndex\n      type: System.Int32\n      description: The zero-based character index of a position in content to examine for a spelling error.\n    return:\n      type: System.Int32\n      description: The beginning character index for any spelling error that includes the character specified by <code>charIndex</code>, or â€“1 if the specified character is not part of a spelling error.\n  overload: System.Windows.Controls.TextBox.GetSpellingErrorStart*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.LineCount\n  id: LineCount\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: LineCount\n  nameWithType: TextBox.LineCount\n  fullName: System.Windows.Controls.TextBox.LineCount\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the total number of lines in the text box.\n  remarks: \"If text wrapping is enabled, changing the width of the text box may change this value.  \\n  \\n The value returned is the total number of lines in the text box, regardless of how many are currently visible.\"\n  syntax:\n    content: public int LineCount { get; }\n    return:\n      type: System.Int32\n      description: The total number of lines in the text box, or â€“1 if layout information is not available.\n  overload: System.Windows.Controls.TextBox.LineCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.LogicalChildren\n  id: LogicalChildren\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: LogicalChildren\n  nameWithType: TextBox.LogicalChildren\n  fullName: System.Windows.Controls.TextBox.LogicalChildren\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets an enumerator for the logical child elements of the <xref href=\"System.Windows.Controls.TextBox\"></xref>.\n  remarks: The LogicalChildren property returns an enumerator for a collection that contains a <xref:System.String> that is equal to the <xref:System.Windows.Controls.TextBox.Text%2A> property.\n  syntax:\n    content: protected override System.Collections.IEnumerator LogicalChildren { get; }\n    return:\n      type: System.Collections.IEnumerator\n      description: An enumerator for the logical child elements of the <xref href=\"System.Windows.Controls.TextBox\"></xref>.\n  overload: System.Windows.Controls.TextBox.LogicalChildren*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.MaxLength\n  id: MaxLength\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: MaxLength\n  nameWithType: TextBox.MaxLength\n  fullName: System.Windows.Controls.TextBox.MaxLength\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the maximum number of characters that can be manually entered into the text box.\n  remarks: \"You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers. You can also use this property to restrict the length of text entered when the data is to be stored in a database so that the text entered into the control does not exceed the maximum length of the corresponding field in the database.  \\n  \\n This property does not affect characters that are added programmatically.  \\n  \\n When this property is set to 0, the maximum length of the text that can be entered in the control is limited only by available memory.  \\n  \\n<a name=\\\"dependencyPropertyInfo_MaxLength\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBox.MaxLengthProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a MaxLength of 500 characters.  \\n  \\n [!code-xml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/add/codesnippet/xaml/textmiscsnippets_snip/textboxexample.xaml#textboxexamplewholepage)]  \\n  \\n [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/add/codesnippet/visualbasic/TextBoxMiscSnippets_procedural_snip.textmiscsnippets_procedural/textboxexample.vb#textboxcodeexampleinline1)]\\n [!code-cs[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/add/codesnippet/csharp/TextBoxMiscSnippets_procedural_snip.TextMiscSnippets_procedural/TextBoxExample.cs#textboxcodeexampleinline1)]\"\n  syntax:\n    content: public int MaxLength { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of characters that can be manually entered into the text box. The default is 0, which indicates no limit.\n  overload: System.Windows.Controls.TextBox.MaxLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.MaxLengthProperty\n  id: MaxLengthProperty\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: MaxLengthProperty\n  nameWithType: TextBox.MaxLengthProperty\n  fullName: System.Windows.Controls.TextBox.MaxLengthProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBox.MaxLength*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty MaxLengthProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.MaxLines\n  id: MaxLines\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: MaxLines\n  nameWithType: TextBox.MaxLines\n  fullName: System.Windows.Controls.TextBox.MaxLines\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the maximum number of visible lines.\n  remarks: \"Getting this property returns the current value of MaxLines. Setting this property causes the text box to resize if the number of visible lines exceeds the limit specified by MaxLines.  \\n  \\n This property applies only to visible lines, and does not constrain the actual number of lines. Depending on its configuration, a text box may contain additional non-visible lines that are accessible by scrolling.  \\n  \\n If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the MaxLines and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.  \\n  \\n<a name=\\\"dependencyPropertyInfo_MaxLines\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBox.MaxLinesProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|\"\n  example:\n  - \"The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a MaxLines value of 5.  \\n  \\n [!code-xml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/add/codesnippet/xaml/textmiscsnippets_snip/textboxexample.xaml#textboxexamplewholepage)]  \\n  \\n [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/add/codesnippet/visualbasic/TextBoxMiscSnippets_procedural_snip.textmiscsnippets_procedural/textboxexample.vb#textboxcodeexampleinline1)]\\n [!code-cs[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/add/codesnippet/csharp/TextBoxMiscSnippets_procedural_snip.TextMiscSnippets_procedural/TextBoxExample.cs#textboxcodeexampleinline1)]\"\n  syntax:\n    content: public int MaxLines { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of visible lines. The default is &lt;xref:System.Int32?displayProperty=fullName&gt;.\n  overload: System.Windows.Controls.TextBox.MaxLines*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: MaxLines is less than <xref:System.Windows.Controls.TextBox.MinLines*>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.MaxLinesProperty\n  id: MaxLinesProperty\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: MaxLinesProperty\n  nameWithType: TextBox.MaxLinesProperty\n  fullName: System.Windows.Controls.TextBox.MaxLinesProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBox.MaxLines*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty MaxLinesProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.MeasureOverride(System.Windows.Size)\n  id: MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: MeasureOverride(Size)\n  nameWithType: TextBox.MeasureOverride(Size)\n  fullName: System.Windows.Controls.TextBox.MeasureOverride(Size)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sizes the text box to its content.\n  remarks: Override this method to implement custom sizing behavior.\n  syntax:\n    content: protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);\n    parameters:\n    - id: constraint\n      type: System.Windows.Size\n      description: A <xref href=\"System.Windows.Size\"></xref> structure that specifies the constraints on the size of the text box.\n    return:\n      type: System.Windows.Size\n      description: A <xref href=\"System.Windows.Size\"></xref> structure indicating the new size of the text box.\n  overload: System.Windows.Controls.TextBox.MeasureOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.MinLines\n  id: MinLines\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: MinLines\n  nameWithType: TextBox.MinLines\n  fullName: System.Windows.Controls.TextBox.MinLines\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the minimum number of visible lines.\n  remarks: \"Getting this property returns the current value of MinLines. Setting this property causes the text box to resize if the number of visible lines is less than value specified by MinLines.  \\n  \\n If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and MinLines property values are ignored.  \\n  \\n<a name=\\\"dependencyPropertyInfo_MinLines\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBox.MinLinesProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|\"\n  example:\n  - \"The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a MinLines value of 1.  \\n  \\n [!code-xml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/add/codesnippet/xaml/textmiscsnippets_snip/textboxexample.xaml#textboxexamplewholepage)]  \\n  \\n [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/add/codesnippet/visualbasic/TextBoxMiscSnippets_procedural_snip.textmiscsnippets_procedural/textboxexample.vb#textboxcodeexampleinline1)]\\n [!code-cs[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/add/codesnippet/csharp/TextBoxMiscSnippets_procedural_snip.TextMiscSnippets_procedural/TextBoxExample.cs#textboxcodeexampleinline1)]\"\n  syntax:\n    content: public int MinLines { get; set; }\n    return:\n      type: System.Int32\n      description: The minimum number of visible lines. The default is 1.\n  overload: System.Windows.Controls.TextBox.MinLines*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: MinLines is greater than <xref:System.Windows.Controls.TextBox.MaxLines*>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.MinLinesProperty\n  id: MinLinesProperty\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: MinLinesProperty\n  nameWithType: TextBox.MinLinesProperty\n  fullName: System.Windows.Controls.TextBox.MinLinesProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBox.MinLines*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty MinLinesProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.OnCreateAutomationPeer\n  id: OnCreateAutomationPeer\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: OnCreateAutomationPeer()\n  nameWithType: TextBox.OnCreateAutomationPeer()\n  fullName: System.Windows.Controls.TextBox.OnCreateAutomationPeer()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Creates and returns an <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> object for the text box.\n  remarks: This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=fullName>.\n  syntax:\n    content: protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();\n    parameters: []\n    return:\n      type: System.Windows.Automation.Peers.AutomationPeer\n      description: An <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> object for the text box.\n  overload: System.Windows.Controls.TextBox.OnCreateAutomationPeer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  id: OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: TextBox.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.Controls.TextBox.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Called when one or more of the dependency properties that exist on the element have had their effective values changed.\n  remarks: This method overrides <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=fullName>.\n  syntax:\n    content: protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: Arguments for the associated event.\n  overload: System.Windows.Controls.TextBox.OnPropertyChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.ScrollToLine(System.Int32)\n  id: ScrollToLine(System.Int32)\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: ScrollToLine(Int32)\n  nameWithType: TextBox.ScrollToLine(Int32)\n  fullName: System.Windows.Controls.TextBox.ScrollToLine(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Scrolls the line at the specified line index into view.\n  remarks: This method causes the text box to scroll by the minimum amount necessary to bring the specified line into full view.\n  syntax:\n    content: public void ScrollToLine (int lineIndex);\n    parameters:\n    - id: lineIndex\n      type: System.Int32\n      description: The zero-based line index of the line to scroll into view.\n  overload: System.Windows.Controls.TextBox.ScrollToLine*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)\n  id: Select(System.Int32,System.Int32)\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: Select(Int32,Int32)\n  nameWithType: TextBox.Select(Int32,Int32)\n  fullName: System.Windows.Controls.TextBox.Select(Int32,Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Selects a range of text in the text box.\n  syntax:\n    content: public void Select (int start, int length);\n    parameters:\n    - id: start\n      type: System.Int32\n      description: The zero-based character index of the first character in the selection.\n    - id: length\n      type: System.Int32\n      description: The length of the selection, in characters.\n  overload: System.Windows.Controls.TextBox.Select*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>start</code> or <code>length</code> is negative.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.SelectedText\n  id: SelectedText\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: SelectedText\n  nameWithType: TextBox.SelectedText\n  fullName: System.Windows.Controls.TextBox.SelectedText\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the content of the current selection in the text box.\n  remarks: Getting this property returns a string copy of the currently selected text. Setting this property replaces the current selection with the specified string.\n  syntax:\n    content: public string SelectedText { get; set; }\n    return:\n      type: System.String\n      description: The currently selected text in the text box.\n  overload: System.Windows.Controls.TextBox.SelectedText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.SelectionLength\n  id: SelectionLength\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: SelectionLength\n  nameWithType: TextBox.SelectionLength\n  fullName: System.Windows.Controls.TextBox.SelectionLength\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value indicating the number of characters in the current selection in the text box.\n  remarks: \"Getting this property returns the number of characters in the current selection. Setting this property adjusts the length of the current selection to the specified value, keeping the beginning of the selection fixed.  \\n  \\n In general, when the specified selection length causes the selection to end in an invalid position (for example, between a carriage return and a new-line character, or inside a tag), the selection length automatically adjusts so that the resulting selection starts and ends in valid positions.\"\n  syntax:\n    content: public int SelectionLength { get; set; }\n    return:\n      type: System.Int32\n      description: The number of characters in the current selection in the text box. The default is 0.\n  overload: System.Windows.Controls.TextBox.SelectionLength*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: SelectionLength is set to a negative value.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.SelectionStart\n  id: SelectionStart\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: SelectionStart\n  nameWithType: TextBox.SelectionStart\n  fullName: System.Windows.Controls.TextBox.SelectionStart\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a character index for the beginning of the current selection.\n  remarks: In cases where the specified selection length would cause the selection to end between a carriage return and a new-line character, the selection length is automatically increased by 1 so that the resulting selection spans the entire end-of-line marker.\n  syntax:\n    content: public int SelectionStart { get; set; }\n    return:\n      type: System.Int32\n      description: The character index for the beginning of the current selection.\n  overload: System.Windows.Controls.TextBox.SelectionStart*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: SelectionStart is set to a negative value.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)\n  id: ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: ShouldSerializeText(XamlDesignerSerializationManager)\n  nameWithType: TextBox.ShouldSerializeText(XamlDesignerSerializationManager)\n  fullName: System.Windows.Controls.TextBox.ShouldSerializeText(XamlDesignerSerializationManager)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns a value that indicates whether the effective value of the <xref:System.Windows.Controls.TextBox.Text*> property should be serialized during serialization of the <xref href=\"System.Windows.Controls.TextBox\"></xref> object.\n  syntax:\n    content: public bool ShouldSerializeText (System.Windows.Markup.XamlDesignerSerializationManager manager);\n    parameters:\n    - id: manager\n      type: System.Windows.Markup.XamlDesignerSerializationManager\n      description: A serialization service manager object for this object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Controls.TextBox.Text*> property should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.TextBox.ShouldSerializeText*\n  exceptions:\n  - type: System.NullReferenceException\n    commentId: T:System.NullReferenceException\n    description: <code>manager</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  id: System#Windows#Markup#IAddChild#AddChild(System.Object)\n  isEii: true\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: System.Windows.Markup.IAddChild.AddChild(Object)\n  nameWithType: TextBox.System.Windows.Markup.IAddChild.AddChild(Object)\n  fullName: System.Windows.Controls.TextBox.System.Windows.Markup.IAddChild.AddChild(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Throws an exception in all cases.\n  remarks: <xref:System.Windows.Controls.TextBox> accepts only text through the <xref:System.Windows.Markup.IAddChild> interface.\n  syntax:\n    content: void IAddChild.AddChild (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: An object to add as a child.\n  overload: System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: In all other cases.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText(System.String)\n  id: System#Windows#Markup#IAddChild#AddText(System.String)\n  isEii: true\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: System.Windows.Markup.IAddChild.AddText(String)\n  nameWithType: TextBox.System.Windows.Markup.IAddChild.AddText(String)\n  fullName: System.Windows.Controls.TextBox.System.Windows.Markup.IAddChild.AddText(String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Adds the text content of a node to the object.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Controls.TextBox> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.\n  syntax:\n    content: void IAddChild.AddText (string text);\n    parameters:\n    - id: text\n      type: System.String\n      description: A string to add to the object.\n  overload: System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.Text\n  id: Text\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: Text\n  nameWithType: TextBox.Text\n  fullName: System.Windows.Controls.TextBox.Text\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the text contents of the text box.\n  remarks: \"Getting this property returns a string copy of the contents of the text box. Setting this property replaces the contents of the text box with the specified string.  \\n  \\n This property does not support animation.  \\n  \\n When used in data-binding scenarios, this property uses the default update behavior of <xref:System.Windows.Data.UpdateSourceTrigger?displayProperty=fullName>.  \\n  \\n<a name=\\\"xamlPropertyElementUsage_Text\\\"></a>   \\n## XAML Property Element Usage  \\n  \\n```  \\n<object>  \\n  String  \\n</object>  \\n```  \\n  \\n<a name=\\\"dependencyPropertyInfo_Text\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBox.TextProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A>|\"\n  syntax:\n    content: public string Text { get; set; }\n    return:\n      type: System.String\n      description: A string containing the text contents of the text box. The default is an empty string (\"\").\n  overload: System.Windows.Controls.TextBox.Text*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.TextAlignment\n  id: TextAlignment\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: TextAlignment\n  nameWithType: TextBox.TextAlignment\n  fullName: System.Windows.Controls.TextBox.TextAlignment\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the horizontal alignment of the contents of the text box.\n  remarks: \"Getting this property returns the current alignment. Setting this property adjusts the contents of the text box to reflect the specified alignment.  \\n  \\n This property has a higher precedence than the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> property.  \\n  \\n<a name=\\\"dependencyPropertyInfo_TextAlignment\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBox.TextAlignmentProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  example:\n  - \"The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a TextAlignment of <xref:System.Windows.TextAlignment?displayProperty=fullName>.  \\n  \\n [!code-xml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/add/codesnippet/xaml/textmiscsnippets_snip/textboxexample.xaml#textboxexamplewholepage)]  \\n  \\n [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/add/codesnippet/visualbasic/TextBoxMiscSnippets_procedural_snip.textmiscsnippets_procedural/textboxexample.vb#textboxcodeexampleinline1)]\\n [!code-cs[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/add/codesnippet/csharp/TextBoxMiscSnippets_procedural_snip.TextMiscSnippets_procedural/TextBoxExample.cs#textboxcodeexampleinline1)]\"\n  syntax:\n    content: public System.Windows.TextAlignment TextAlignment { get; set; }\n    return:\n      type: System.Windows.TextAlignment\n      description: One of the <xref href=\"System.Windows.TextAlignment\"></xref> values that specifies the horizontal alignment of the contents of the text box. The default is <xref href=\"System.Windows.TextAlignment\"></xref>.\n  overload: System.Windows.Controls.TextBox.TextAlignment*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.TextAlignmentProperty\n  id: TextAlignmentProperty\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: TextAlignmentProperty\n  nameWithType: TextBox.TextAlignmentProperty\n  fullName: System.Windows.Controls.TextBox.TextAlignmentProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBox.TextAlignment*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TextAlignmentProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.TextDecorations\n  id: TextDecorations\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: TextDecorations\n  nameWithType: TextBox.TextDecorations\n  fullName: System.Windows.Controls.TextBox.TextDecorations\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the text decorations to apply to the text box.\n  remarks: \"A <xref:System.Windows.TextDecoration> object is a visual ornamentation you can add to text. There are four types of text decorations: underline, baseline, strikethrough, and overline. For more information about text decorations, see [How to: Create a Text Decoration](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_TextDecorations\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBox.TextDecorationsProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|\"\n  example:\n  - \"The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> attribute, using <xref:System.Windows.Documents.Run> as the example element.  \\n  \\n [!code-xml[InlineSnippets#_Inline_TextDecXAML](~/add/codesnippet/xaml/InlineSnippets/Window1.xaml#_inline_textdecxaml)]  \\n  \\n The following figure shows how this example renders.  \\n  \\n ![Screenshot: Text with default strikethrough effect](~/add/media/inline-textdec-strike.png \\\"Screenshot: Text with default strikethrough effect\\\")  \\n  \\n The following figures show how the <xref:System.Windows.TextDecorations.OverLine%2A>, <xref:System.Windows.TextDecorations.Baseline%2A>, and <xref:System.Windows.TextDecorations.Underline%2A> decorations render, respectively.  \\n  \\n ![Screenshot: Overline TextDecorator](~/add/media/inline-textdec-over.png \\\"Screenshot: Overline TextDecorator\\\")  \\n  \\n ![Screenshot: Default baseline effect on text](~/add/media/inline-textdec-base.png \\\"Screenshot: Default baseline effect on text\\\")  \\n  \\n ![Screenshot: Text with default underline effect](~/add/media/inline-textdec-under.png \\\"Screenshot: Text with default underline effect\\\")  \\n  \\n The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> property programmatically.  \\n  \\n [!code-cs[InlineSnippets#_Inline_TextDec](~/add/codesnippet/csharp/InlineSnippets/Window1.xaml.cs#_inline_textdec)]\\n [!code-vb[InlineSnippets#_Inline_TextDec](~/add/codesnippet/visualbasic/inlinesnippets/window1.xaml.vb#_inline_textdec)]\"\n  syntax:\n    content: public System.Windows.TextDecorationCollection TextDecorations { get; set; }\n    return:\n      type: System.Windows.TextDecorationCollection\n      description: A <xref href=\"System.Windows.TextDecorationCollection\"></xref> collection that contains text decorations to apply to the text box. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> (no text decorations applied).\n  overload: System.Windows.Controls.TextBox.TextDecorations*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.TextDecorationsProperty\n  id: TextDecorationsProperty\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: TextDecorationsProperty\n  nameWithType: TextBox.TextDecorationsProperty\n  fullName: System.Windows.Controls.TextBox.TextDecorationsProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBox.TextDecorations*> dependency property.\n  remarks: The identifier for the <xref:System.Windows.Controls.TextBox.TextDecorations%2A> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TextDecorationsProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.TextProperty\n  id: TextProperty\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: TextProperty\n  nameWithType: TextBox.TextProperty\n  fullName: System.Windows.Controls.TextBox.TextProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBox.Text*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TextProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.TextWrapping\n  id: TextWrapping\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: TextWrapping\n  nameWithType: TextBox.TextWrapping\n  fullName: System.Windows.Controls.TextBox.TextWrapping\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets how the text box should wrap text.\n  remarks: \"Setting the TextWrapping attribute to <xref:System.Windows.TextWrapping> causes entered text to wrap to a new line when the edge of the <xref:System.Windows.Controls.TextBox> control is reached, automatically expanding the height of the <xref:System.Windows.Controls.TextBox> control to include room for a new line, if necessary.  \\n  \\n<a name=\\\"dependencyPropertyInfo_TextWrapping\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBox.TextWrappingProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|\"\n  example:\n  - \"The following example demonstrates how to set the value of this property.  \\n  \\n [!code-cs[TextBoxBase_Samp#TextBoxBase12](~/add/codesnippet/csharp/textboxbase_samp/Window1.xaml.cs#textboxbase12)]\\n [!code-vb[TextBoxBase_Samp#TextBoxBase12](~/add/codesnippet/visualbasic/TextBoxBase/Window1.xaml.vb#textboxbase12)]\"\n  syntax:\n    content: public System.Windows.TextWrapping TextWrapping { get; set; }\n    return:\n      type: System.Windows.TextWrapping\n      description: One of the <xref href=\"System.Windows.TextWrapping\"></xref> values that indicates how the text box should wrap text. The default is <xref href=\"System.Windows.TextWrapping\"></xref>.\n  overload: System.Windows.Controls.TextBox.TextWrapping*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.TextWrappingProperty\n  id: TextWrappingProperty\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: TextWrappingProperty\n  nameWithType: TextBox.TextWrappingProperty\n  fullName: System.Windows.Controls.TextBox.TextWrappingProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBox.TextWrapping*> dependency property.\n  remarks: The identifier for the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TextWrappingProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBox.Typography\n  id: Typography\n  parent: System.Windows.Controls.TextBox\n  langs:\n  - csharp\n  name: Typography\n  nameWithType: TextBox.Typography\n  fullName: System.Windows.Controls.TextBox.Typography\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the currently effective typography variations for the text contents of the text box.\n  remarks: The <xref:System.Windows.Documents.FlowDocument.Typography%2A> property is applicable only to [!INCLUDE[TLA#tla_opentype](~/add/includes/tlasharptla-opentype-md.md)] fonts. A typography variant has no effect on fonts that do not support the variant. For more information about this topic, see [Typography in WPF](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following example shows how to set the <xref:System.Windows.Documents.TextElement.Typography%2A> attribute, using <xref:System.Windows.Documents.Paragraph> as the example element.  \\n  \\n [!code-xml[TextElementSnippets#_TextElement_TypogXAML](~/add/codesnippet/xaml/TextElementSnippets/Window1.xaml#_textelement_typogxaml)]  \\n  \\n The following figure shows how this example renders.  \\n  \\n ![Screenshot: Text with altered typography](~/add/media/textelement-typog.png \\\"Screenshot: Text with altered typography\\\")  \\n  \\n In contrast, the following figure shows how a similar example with default typographic properties renders.  \\n  \\n ![Screenshot: Text with altered typography](~/add/media/textelement-typog-default.png \\\"Screenshot: Text with altered typography\\\")  \\n  \\n The following example shows how to set the Typography property programmatically.  \\n  \\n [!code-vb[TextElementSnippets#_TextElement_Typog](~/add/codesnippet/visualbasic/textelementsnippets/window1.xaml.vb#_textelement_typog)]\\n [!code-cs[TextElementSnippets#_TextElement_Typog](~/add/codesnippet/csharp/TextElementSnippets/Window1.xaml.cs#_textelement_typog)]\"\n  syntax:\n    content: public System.Windows.Documents.Typography Typography { get; }\n    return:\n      type: System.Windows.Documents.Typography\n      description: A <xref href=\"System.Windows.Documents.Typography\"></xref> object that specifies the currently effective typography variations. For a list of default typography values, see <xref href=\"System.Windows.Documents.Typography\"></xref>.\n  overload: System.Windows.Controls.TextBox.Typography*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Controls.Primitives.TextBoxBase\n  isExternal: false\n  name: System.Windows.Controls.Primitives.TextBoxBase\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Exception\n  isExternal: true\n  name: System.Exception\n- uid: System.NullReferenceException\n  isExternal: true\n  name: System.NullReferenceException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Windows.Controls.TextBox.#ctor\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: TextBox()\n  nameWithType: TextBox.TextBox()\n  fullName: System.Windows.Controls.TextBox.TextBox()\n- uid: System.Windows.Controls.TextBox.CaretIndex\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: CaretIndex\n  nameWithType: TextBox.CaretIndex\n  fullName: System.Windows.Controls.TextBox.CaretIndex\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Controls.TextBox.CharacterCasing\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: CharacterCasing\n  nameWithType: TextBox.CharacterCasing\n  fullName: System.Windows.Controls.TextBox.CharacterCasing\n- uid: System.Windows.Controls.CharacterCasing\n  parent: System.Windows.Controls\n  isExternal: false\n  name: CharacterCasing\n  nameWithType: CharacterCasing\n  fullName: System.Windows.Controls.CharacterCasing\n- uid: System.Windows.Controls.TextBox.CharacterCasingProperty\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: CharacterCasingProperty\n  nameWithType: TextBox.CharacterCasingProperty\n  fullName: System.Windows.Controls.TextBox.CharacterCasingProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Controls.TextBox.Clear\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: Clear()\n  nameWithType: TextBox.Clear()\n  fullName: System.Windows.Controls.TextBox.Clear()\n- uid: System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetCharacterIndexFromLineIndex(Int32)\n  nameWithType: TextBox.GetCharacterIndexFromLineIndex(Int32)\n  fullName: System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(Int32)\n- uid: System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetCharacterIndexFromPoint(Point,Boolean)\n  nameWithType: TextBox.GetCharacterIndexFromPoint(Point,Boolean)\n  fullName: System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(Point,Boolean)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Controls.TextBox.GetFirstVisibleLineIndex\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetFirstVisibleLineIndex()\n  nameWithType: TextBox.GetFirstVisibleLineIndex()\n  fullName: System.Windows.Controls.TextBox.GetFirstVisibleLineIndex()\n- uid: System.Windows.Controls.TextBox.GetLastVisibleLineIndex\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetLastVisibleLineIndex()\n  nameWithType: TextBox.GetLastVisibleLineIndex()\n  fullName: System.Windows.Controls.TextBox.GetLastVisibleLineIndex()\n- uid: System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetLineIndexFromCharacterIndex(Int32)\n  nameWithType: TextBox.GetLineIndexFromCharacterIndex(Int32)\n  fullName: System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(Int32)\n- uid: System.Windows.Controls.TextBox.GetLineLength(System.Int32)\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetLineLength(Int32)\n  nameWithType: TextBox.GetLineLength(Int32)\n  fullName: System.Windows.Controls.TextBox.GetLineLength(Int32)\n- uid: System.Windows.Controls.TextBox.GetLineText(System.Int32)\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetLineText(Int32)\n  nameWithType: TextBox.GetLineText(Int32)\n  fullName: System.Windows.Controls.TextBox.GetLineText(Int32)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetNextSpellingErrorCharacterIndex(Int32,LogicalDirection)\n  nameWithType: TextBox.GetNextSpellingErrorCharacterIndex(Int32,LogicalDirection)\n  fullName: System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(Int32,LogicalDirection)\n- uid: System.Windows.Documents.LogicalDirection\n  parent: System.Windows.Documents\n  isExternal: false\n  name: LogicalDirection\n  nameWithType: LogicalDirection\n  fullName: System.Windows.Documents.LogicalDirection\n- uid: System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetRectFromCharacterIndex(Int32)\n  nameWithType: TextBox.GetRectFromCharacterIndex(Int32)\n  fullName: System.Windows.Controls.TextBox.GetRectFromCharacterIndex(Int32)\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: false\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetRectFromCharacterIndex(Int32,Boolean)\n  nameWithType: TextBox.GetRectFromCharacterIndex(Int32,Boolean)\n  fullName: System.Windows.Controls.TextBox.GetRectFromCharacterIndex(Int32,Boolean)\n- uid: System.Windows.Controls.TextBox.GetSpellingError(System.Int32)\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetSpellingError(Int32)\n  nameWithType: TextBox.GetSpellingError(Int32)\n  fullName: System.Windows.Controls.TextBox.GetSpellingError(Int32)\n- uid: System.Windows.Controls.SpellingError\n  parent: System.Windows.Controls\n  isExternal: false\n  name: SpellingError\n  nameWithType: SpellingError\n  fullName: System.Windows.Controls.SpellingError\n- uid: System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetSpellingErrorLength(Int32)\n  nameWithType: TextBox.GetSpellingErrorLength(Int32)\n  fullName: System.Windows.Controls.TextBox.GetSpellingErrorLength(Int32)\n- uid: System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetSpellingErrorStart(Int32)\n  nameWithType: TextBox.GetSpellingErrorStart(Int32)\n  fullName: System.Windows.Controls.TextBox.GetSpellingErrorStart(Int32)\n- uid: System.Windows.Controls.TextBox.LineCount\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: LineCount\n  nameWithType: TextBox.LineCount\n  fullName: System.Windows.Controls.TextBox.LineCount\n- uid: System.Windows.Controls.TextBox.LogicalChildren\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: LogicalChildren\n  nameWithType: TextBox.LogicalChildren\n  fullName: System.Windows.Controls.TextBox.LogicalChildren\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Controls.TextBox.MaxLength\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: MaxLength\n  nameWithType: TextBox.MaxLength\n  fullName: System.Windows.Controls.TextBox.MaxLength\n- uid: System.Windows.Controls.TextBox.MaxLengthProperty\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: MaxLengthProperty\n  nameWithType: TextBox.MaxLengthProperty\n  fullName: System.Windows.Controls.TextBox.MaxLengthProperty\n- uid: System.Windows.Controls.TextBox.MaxLines\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: MaxLines\n  nameWithType: TextBox.MaxLines\n  fullName: System.Windows.Controls.TextBox.MaxLines\n- uid: System.Windows.Controls.TextBox.MaxLinesProperty\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: MaxLinesProperty\n  nameWithType: TextBox.MaxLinesProperty\n  fullName: System.Windows.Controls.TextBox.MaxLinesProperty\n- uid: System.Windows.Controls.TextBox.MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: MeasureOverride(Size)\n  nameWithType: TextBox.MeasureOverride(Size)\n  fullName: System.Windows.Controls.TextBox.MeasureOverride(Size)\n- uid: System.Windows.Size\n  parent: System.Windows\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n- uid: System.Windows.Controls.TextBox.MinLines\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: MinLines\n  nameWithType: TextBox.MinLines\n  fullName: System.Windows.Controls.TextBox.MinLines\n- uid: System.Windows.Controls.TextBox.MinLinesProperty\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: MinLinesProperty\n  nameWithType: TextBox.MinLinesProperty\n  fullName: System.Windows.Controls.TextBox.MinLinesProperty\n- uid: System.Windows.Controls.TextBox.OnCreateAutomationPeer\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: OnCreateAutomationPeer()\n  nameWithType: TextBox.OnCreateAutomationPeer()\n  fullName: System.Windows.Controls.TextBox.OnCreateAutomationPeer()\n- uid: System.Windows.Automation.Peers.AutomationPeer\n  parent: System.Windows.Automation.Peers\n  isExternal: false\n  name: AutomationPeer\n  nameWithType: AutomationPeer\n  fullName: System.Windows.Automation.Peers.AutomationPeer\n- uid: System.Windows.Controls.TextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: TextBox.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.Controls.TextBox.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyPropertyChangedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: DependencyPropertyChangedEventArgs\n  nameWithType: DependencyPropertyChangedEventArgs\n  fullName: System.Windows.DependencyPropertyChangedEventArgs\n- uid: System.Windows.Controls.TextBox.ScrollToLine(System.Int32)\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: ScrollToLine(Int32)\n  nameWithType: TextBox.ScrollToLine(Int32)\n  fullName: System.Windows.Controls.TextBox.ScrollToLine(Int32)\n- uid: System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: Select(Int32,Int32)\n  nameWithType: TextBox.Select(Int32,Int32)\n  fullName: System.Windows.Controls.TextBox.Select(Int32,Int32)\n- uid: System.Windows.Controls.TextBox.SelectedText\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: SelectedText\n  nameWithType: TextBox.SelectedText\n  fullName: System.Windows.Controls.TextBox.SelectedText\n- uid: System.Windows.Controls.TextBox.SelectionLength\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: SelectionLength\n  nameWithType: TextBox.SelectionLength\n  fullName: System.Windows.Controls.TextBox.SelectionLength\n- uid: System.Windows.Controls.TextBox.SelectionStart\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: SelectionStart\n  nameWithType: TextBox.SelectionStart\n  fullName: System.Windows.Controls.TextBox.SelectionStart\n- uid: System.Windows.Controls.TextBox.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: ShouldSerializeText(XamlDesignerSerializationManager)\n  nameWithType: TextBox.ShouldSerializeText(XamlDesignerSerializationManager)\n  fullName: System.Windows.Controls.TextBox.ShouldSerializeText(XamlDesignerSerializationManager)\n- uid: System.Windows.Markup.XamlDesignerSerializationManager\n  parent: System.Windows.Markup\n  isExternal: false\n  name: XamlDesignerSerializationManager\n  nameWithType: XamlDesignerSerializationManager\n  fullName: System.Windows.Markup.XamlDesignerSerializationManager\n- uid: System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddChild(Object)\n  nameWithType: TextBox.System.Windows.Markup.IAddChild.AddChild(Object)\n  fullName: System.Windows.Controls.TextBox.System.Windows.Markup.IAddChild.AddChild(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText(System.String)\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddText(String)\n  nameWithType: TextBox.System.Windows.Markup.IAddChild.AddText(String)\n  fullName: System.Windows.Controls.TextBox.System.Windows.Markup.IAddChild.AddText(String)\n- uid: System.Windows.Controls.TextBox.Text\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: Text\n  nameWithType: TextBox.Text\n  fullName: System.Windows.Controls.TextBox.Text\n- uid: System.Windows.Controls.TextBox.TextAlignment\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: TextAlignment\n  nameWithType: TextBox.TextAlignment\n  fullName: System.Windows.Controls.TextBox.TextAlignment\n- uid: System.Windows.TextAlignment\n  parent: System.Windows\n  isExternal: false\n  name: TextAlignment\n  nameWithType: TextAlignment\n  fullName: System.Windows.TextAlignment\n- uid: System.Windows.Controls.TextBox.TextAlignmentProperty\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: TextAlignmentProperty\n  nameWithType: TextBox.TextAlignmentProperty\n  fullName: System.Windows.Controls.TextBox.TextAlignmentProperty\n- uid: System.Windows.Controls.TextBox.TextDecorations\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: TextDecorations\n  nameWithType: TextBox.TextDecorations\n  fullName: System.Windows.Controls.TextBox.TextDecorations\n- uid: System.Windows.TextDecorationCollection\n  parent: System.Windows\n  isExternal: false\n  name: TextDecorationCollection\n  nameWithType: TextDecorationCollection\n  fullName: System.Windows.TextDecorationCollection\n- uid: System.Windows.Controls.TextBox.TextDecorationsProperty\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: TextDecorationsProperty\n  nameWithType: TextBox.TextDecorationsProperty\n  fullName: System.Windows.Controls.TextBox.TextDecorationsProperty\n- uid: System.Windows.Controls.TextBox.TextProperty\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: TextProperty\n  nameWithType: TextBox.TextProperty\n  fullName: System.Windows.Controls.TextBox.TextProperty\n- uid: System.Windows.Controls.TextBox.TextWrapping\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: TextWrapping\n  nameWithType: TextBox.TextWrapping\n  fullName: System.Windows.Controls.TextBox.TextWrapping\n- uid: System.Windows.TextWrapping\n  parent: System.Windows\n  isExternal: false\n  name: TextWrapping\n  nameWithType: TextWrapping\n  fullName: System.Windows.TextWrapping\n- uid: System.Windows.Controls.TextBox.TextWrappingProperty\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: TextWrappingProperty\n  nameWithType: TextBox.TextWrappingProperty\n  fullName: System.Windows.Controls.TextBox.TextWrappingProperty\n- uid: System.Windows.Controls.TextBox.Typography\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: Typography\n  nameWithType: TextBox.Typography\n  fullName: System.Windows.Controls.TextBox.Typography\n- uid: System.Windows.Documents.Typography\n  parent: System.Windows.Documents\n  isExternal: false\n  name: Typography\n  nameWithType: Typography\n  fullName: System.Windows.Documents.Typography\n- uid: System.Windows.Controls.TextBox.#ctor*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: TextBox\n  nameWithType: TextBox.TextBox\n- uid: System.Windows.Controls.TextBox.CaretIndex*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: CaretIndex\n  nameWithType: TextBox.CaretIndex\n- uid: System.Windows.Controls.TextBox.CharacterCasing*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: CharacterCasing\n  nameWithType: TextBox.CharacterCasing\n- uid: System.Windows.Controls.TextBox.Clear*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: Clear\n  nameWithType: TextBox.Clear\n- uid: System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetCharacterIndexFromLineIndex\n  nameWithType: TextBox.GetCharacterIndexFromLineIndex\n- uid: System.Windows.Controls.TextBox.GetCharacterIndexFromPoint*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetCharacterIndexFromPoint\n  nameWithType: TextBox.GetCharacterIndexFromPoint\n- uid: System.Windows.Controls.TextBox.GetFirstVisibleLineIndex*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetFirstVisibleLineIndex\n  nameWithType: TextBox.GetFirstVisibleLineIndex\n- uid: System.Windows.Controls.TextBox.GetLastVisibleLineIndex*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetLastVisibleLineIndex\n  nameWithType: TextBox.GetLastVisibleLineIndex\n- uid: System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetLineIndexFromCharacterIndex\n  nameWithType: TextBox.GetLineIndexFromCharacterIndex\n- uid: System.Windows.Controls.TextBox.GetLineLength*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetLineLength\n  nameWithType: TextBox.GetLineLength\n- uid: System.Windows.Controls.TextBox.GetLineText*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetLineText\n  nameWithType: TextBox.GetLineText\n- uid: System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetNextSpellingErrorCharacterIndex\n  nameWithType: TextBox.GetNextSpellingErrorCharacterIndex\n- uid: System.Windows.Controls.TextBox.GetRectFromCharacterIndex*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetRectFromCharacterIndex\n  nameWithType: TextBox.GetRectFromCharacterIndex\n- uid: System.Windows.Controls.TextBox.GetSpellingError*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetSpellingError\n  nameWithType: TextBox.GetSpellingError\n- uid: System.Windows.Controls.TextBox.GetSpellingErrorLength*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetSpellingErrorLength\n  nameWithType: TextBox.GetSpellingErrorLength\n- uid: System.Windows.Controls.TextBox.GetSpellingErrorStart*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: GetSpellingErrorStart\n  nameWithType: TextBox.GetSpellingErrorStart\n- uid: System.Windows.Controls.TextBox.LineCount*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: LineCount\n  nameWithType: TextBox.LineCount\n- uid: System.Windows.Controls.TextBox.LogicalChildren*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: LogicalChildren\n  nameWithType: TextBox.LogicalChildren\n- uid: System.Windows.Controls.TextBox.MaxLength*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: MaxLength\n  nameWithType: TextBox.MaxLength\n- uid: System.Windows.Controls.TextBox.MaxLines*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: MaxLines\n  nameWithType: TextBox.MaxLines\n- uid: System.Windows.Controls.TextBox.MeasureOverride*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: MeasureOverride\n  nameWithType: TextBox.MeasureOverride\n- uid: System.Windows.Controls.TextBox.MinLines*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: MinLines\n  nameWithType: TextBox.MinLines\n- uid: System.Windows.Controls.TextBox.OnCreateAutomationPeer*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: OnCreateAutomationPeer\n  nameWithType: TextBox.OnCreateAutomationPeer\n- uid: System.Windows.Controls.TextBox.OnPropertyChanged*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: OnPropertyChanged\n  nameWithType: TextBox.OnPropertyChanged\n- uid: System.Windows.Controls.TextBox.ScrollToLine*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: ScrollToLine\n  nameWithType: TextBox.ScrollToLine\n- uid: System.Windows.Controls.TextBox.Select*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: Select\n  nameWithType: TextBox.Select\n- uid: System.Windows.Controls.TextBox.SelectedText*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: SelectedText\n  nameWithType: TextBox.SelectedText\n- uid: System.Windows.Controls.TextBox.SelectionLength*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: SelectionLength\n  nameWithType: TextBox.SelectionLength\n- uid: System.Windows.Controls.TextBox.SelectionStart*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: SelectionStart\n  nameWithType: TextBox.SelectionStart\n- uid: System.Windows.Controls.TextBox.ShouldSerializeText*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: ShouldSerializeText\n  nameWithType: TextBox.ShouldSerializeText\n- uid: System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddChild\n  nameWithType: TextBox.System.Windows.Markup.IAddChild.AddChild\n- uid: System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddText\n  nameWithType: TextBox.System.Windows.Markup.IAddChild.AddText\n- uid: System.Windows.Controls.TextBox.Text*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: Text\n  nameWithType: TextBox.Text\n- uid: System.Windows.Controls.TextBox.TextAlignment*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: TextAlignment\n  nameWithType: TextBox.TextAlignment\n- uid: System.Windows.Controls.TextBox.TextDecorations*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: TextDecorations\n  nameWithType: TextBox.TextDecorations\n- uid: System.Windows.Controls.TextBox.TextWrapping*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: TextWrapping\n  nameWithType: TextBox.TextWrapping\n- uid: System.Windows.Controls.TextBox.Typography*\n  parent: System.Windows.Controls.TextBox\n  isExternal: false\n  name: Typography\n  nameWithType: TextBox.Typography\n"}