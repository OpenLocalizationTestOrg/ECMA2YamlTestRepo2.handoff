{"nodes":[{"pos":[1241,1253],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3591,3603],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4441,4453],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5352,5364],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5423,5435],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6323,6335],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6393,6405],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7205,7217],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7263,7275],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7930,7942],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8548,8560],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9097,9109],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Expressions.Literal`1\n  id: Literal`1\n  children:\n  - System.Activities.Expressions.Literal`1.#ctor\n  - System.Activities.Expressions.Literal`1.#ctor(`0)\n  - System.Activities.Expressions.Literal`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.Expressions.Literal`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  - System.Activities.Expressions.Literal`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  - System.Activities.Expressions.Literal`1.Execute(System.Activities.CodeActivityContext)\n  - System.Activities.Expressions.Literal`1.ShouldSerializeValue\n  - System.Activities.Expressions.Literal`1.ToString\n  - System.Activities.Expressions.Literal`1.Value\n  langs:\n  - csharp\n  name: Literal<T>\n  nameWithType: Literal<T>\n  fullName: System.Activities.Expressions.Literal<T>\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerStepThrough]\n\n      [System.Windows.Markup.ContentProperty(\"Value\")]\n\n      public sealed class Literal<T> : System.Activities.CodeActivity<T>, System.Activities.XamlIntegration.IValueSerializableExpression\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.CodeActivity`1\n  implements:\n  - System.Activities.XamlIntegration.IValueSerializableExpression\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(`0)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.CodeActivity`1.Implementation\n  - System.Activities.CodeActivity`1.ImplementationVersion\n  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  platform:\n  - net462\n- uid: System.Activities.Expressions.Literal`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: Literal()\n  nameWithType: Literal<T>.Literal()\n  fullName: System.Activities.Expressions.Literal<T>.Literal()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public Literal ();\n    parameters: []\n  overload: System.Activities.Expressions.Literal`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.Literal`1.#ctor(`0)\n  id: '#ctor(`0)'\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: Literal(T)\n  nameWithType: Literal<T>.Literal(T)\n  fullName: System.Activities.Expressions.Literal<T>.Literal(T)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public Literal (T value);\n    parameters:\n    - id: value\n      type: T\n      description: To be added.\n  overload: System.Activities.Expressions.Literal`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.Literal`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: Literal<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.Literal<T>.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Expressions.Literal`1.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.Literal`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  id: CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: CanConvertToString(IValueSerializerContext)\n  nameWithType: Literal<T>.CanConvertToString(IValueSerializerContext)\n  fullName: System.Activities.Expressions.Literal<T>.CanConvertToString(IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public bool CanConvertToString (System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Activities.Expressions.Literal`1.CanConvertToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.Literal`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  id: ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: ConvertToString(IValueSerializerContext)\n  nameWithType: Literal<T>.ConvertToString(IValueSerializerContext)\n  fullName: System.Activities.Expressions.Literal<T>.ConvertToString(IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public string ConvertToString (System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: To be added.\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Activities.Expressions.Literal`1.ConvertToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.Literal`1.Execute(System.Activities.CodeActivityContext)\n  id: Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: Execute(CodeActivityContext)\n  nameWithType: Literal<T>.Execute(CodeActivityContext)\n  fullName: System.Activities.Expressions.Literal<T>.Execute(CodeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override T Execute (System.Activities.CodeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.CodeActivityContext\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.Activities.Expressions.Literal`1.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.Literal`1.ShouldSerializeValue\n  id: ShouldSerializeValue\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: ShouldSerializeValue()\n  nameWithType: Literal<T>.ShouldSerializeValue()\n  fullName: System.Activities.Expressions.Literal<T>.ShouldSerializeValue()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public bool ShouldSerializeValue ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Activities.Expressions.Literal`1.ShouldSerializeValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.Literal`1.ToString\n  id: ToString\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Literal<T>.ToString()\n  fullName: System.Activities.Expressions.Literal<T>.ToString()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Activities.Expressions.Literal`1.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.Literal`1.Value\n  id: Value\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: Value\n  nameWithType: Literal<T>.Value\n  fullName: System.Activities.Expressions.Literal<T>.Value\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public T Value { get; set; }\n    return:\n      type: T\n      description: To be added.\n  overload: System.Activities.Expressions.Literal`1.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.CodeActivity`1\n  isExternal: false\n  name: System.Activities.CodeActivity<T>\n- uid: System.Activities.Expressions.Literal`1.#ctor\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: Literal()\n  nameWithType: Literal<T>.Literal()\n  fullName: System.Activities.Expressions.Literal<T>.Literal()\n- uid: System.Activities.Expressions.Literal`1.#ctor(`0)\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: Literal(T)\n  nameWithType: Literal<T>.Literal(T)\n  fullName: System.Activities.Expressions.Literal<T>.Literal(T)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Activities.Expressions.Literal`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: Literal<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.Literal<T>.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.Expressions.Literal`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: CanConvertToString(IValueSerializerContext)\n  nameWithType: Literal<T>.CanConvertToString(IValueSerializerContext)\n  fullName: System.Activities.Expressions.Literal<T>.CanConvertToString(IValueSerializerContext)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Markup.IValueSerializerContext\n  parent: System.Windows.Markup\n  isExternal: true\n  name: IValueSerializerContext\n  nameWithType: IValueSerializerContext\n  fullName: System.Windows.Markup.IValueSerializerContext\n- uid: System.Activities.Expressions.Literal`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: ConvertToString(IValueSerializerContext)\n  nameWithType: Literal<T>.ConvertToString(IValueSerializerContext)\n  fullName: System.Activities.Expressions.Literal<T>.ConvertToString(IValueSerializerContext)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Expressions.Literal`1.Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: Execute(CodeActivityContext)\n  nameWithType: Literal<T>.Execute(CodeActivityContext)\n  fullName: System.Activities.Expressions.Literal<T>.Execute(CodeActivityContext)\n- uid: System.Activities.CodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityContext\n  nameWithType: CodeActivityContext\n  fullName: System.Activities.CodeActivityContext\n- uid: System.Activities.Expressions.Literal`1.ShouldSerializeValue\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: ShouldSerializeValue()\n  nameWithType: Literal<T>.ShouldSerializeValue()\n  fullName: System.Activities.Expressions.Literal<T>.ShouldSerializeValue()\n- uid: System.Activities.Expressions.Literal`1.ToString\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: ToString()\n  nameWithType: Literal<T>.ToString()\n  fullName: System.Activities.Expressions.Literal<T>.ToString()\n- uid: System.Activities.Expressions.Literal`1.Value\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: Value\n  nameWithType: Literal<T>.Value\n  fullName: System.Activities.Expressions.Literal<T>.Value\n- uid: System.Activities.Expressions.Literal`1.#ctor*\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: Literal<T>\n  nameWithType: Literal<T>.Literal<T>\n- uid: System.Activities.Expressions.Literal`1.CacheMetadata*\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: Literal<T>.CacheMetadata\n- uid: System.Activities.Expressions.Literal`1.CanConvertToString*\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: CanConvertToString\n  nameWithType: Literal<T>.CanConvertToString\n- uid: System.Activities.Expressions.Literal`1.ConvertToString*\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: ConvertToString\n  nameWithType: Literal<T>.ConvertToString\n- uid: System.Activities.Expressions.Literal`1.Execute*\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: Execute\n  nameWithType: Literal<T>.Execute\n- uid: System.Activities.Expressions.Literal`1.ShouldSerializeValue*\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: ShouldSerializeValue\n  nameWithType: Literal<T>.ShouldSerializeValue\n- uid: System.Activities.Expressions.Literal`1.ToString*\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: ToString\n  nameWithType: Literal<T>.ToString\n- uid: System.Activities.Expressions.Literal`1.Value*\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: Value\n  nameWithType: Literal<T>.Value\n"}