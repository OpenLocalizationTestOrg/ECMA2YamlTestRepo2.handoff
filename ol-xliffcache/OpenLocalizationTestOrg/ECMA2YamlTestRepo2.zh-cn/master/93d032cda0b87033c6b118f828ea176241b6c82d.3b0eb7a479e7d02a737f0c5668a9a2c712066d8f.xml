{"nodes":[{"pos":[1157,1394],"content":"Provides a type converter for a property representing a data member in a data source. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a type converter for a property representing a data member in a data source.","pos":[0,85]},{"content":"For information about how to develop ASP.NET mobile applications, see the <bpt id=\"p1\">[</bpt>www.asp.net/mobile<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=182900)</ept> Web site.","pos":[86,237],"source":" For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."}]},{"pos":[15004,15292],"content":"> [!NOTE] >  You typically do not access a type converter directly. This implementation of <xref:System.ComponentModel.TypeConverter> is intended for use by a data-bound control at design time, and is instantiated with a <xref:System.ComponentModel.TypeConverterAttribute> on a property.","needQuote":true,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph> &gt;  You typically do not access a type converter directly.","pos":[0,67],"source":"> [!NOTE] >  You typically do not access a type converter directly."},{"content":"This implementation of &lt;xref:System.ComponentModel.TypeConverter&gt; is intended for use by a data-bound control at design time, and is instantiated with a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt; on a property.","pos":[68,287],"source":" This implementation of <xref:System.ComponentModel.TypeConverter> is intended for use by a data-bound control at design time, and is instantiated with a <xref:System.ComponentModel.TypeConverterAttribute> on a property."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  id: DataMemberConverter\n  children:\n  - System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.#ctor\n  - System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  langs:\n  - csharp\n  name: DataMemberConverter\n  nameWithType: DataMemberConverter\n  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  type: Class\n  summary: Provides a type converter for a property representing a data member in a data source. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.\n  remarks: >-\n    > [!NOTE]\n\n    >  You typically do not access a type converter directly. This implementation of <xref:System.ComponentModel.TypeConverter> is intended for use by a data-bound control at design time, and is instantiated with a <xref:System.ComponentModel.TypeConverterAttribute> on a property.\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Web.Mobile.dll assembly has been deprecated and should no longer be used. For information about how to develop ASP.NET mobile applications, see http://go.microsoft.com/fwlink/?LinkId=157231.\")]\n\n      public class DataMemberConverter : System.ComponentModel.TypeConverter\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  platform:\n  - net462\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  langs:\n  - csharp\n  name: DataMemberConverter()\n  nameWithType: DataMemberConverter.DataMemberConverter()\n  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.DataMemberConverter()\n  type: Constructor\n  assemblies:\n  - System.Web.Mobile\n  namespace: System.Web.UI.Design.MobileControls.Converters\n  summary: Instantiates a new instance of the <xref href=\"System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\"></xref> class. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.\n  remarks: >-\n    > [!NOTE]\n\n    >  You typically do not access a type converter directly. This implementation of <xref:System.ComponentModel.TypeConverter> is intended for use by a data-bound control at design time, and is instantiated with a <xref:System.ComponentModel.TypeConverterAttribute> on a property.\n  syntax:\n    content: public DataMemberConverter ();\n    parameters: []\n  overload: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: DataMemberConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System.Web.Mobile\n  namespace: System.Web.UI.Design.MobileControls.Converters\n  summary: Gets a value indicating whether the specified source type can be converted to the type of the associated control property using the specified context and type. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.\n  remarks: >-\n    > [!NOTE]\n\n    >  You typically do not access a type converter directly. This implementation of <xref:System.ComponentModel.TypeConverter> is intended for use by a data bound control at design time, and instantiated with a <xref:System.ComponentModel.TypeConverterAttribute> on a property.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that represents the data-bound component or the control that the property belongs to.\n    - id: sourceType\n      type: System.Type\n      description: The type to convert from.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>sourceType</code> is <xref:System.String>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.CanConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: DataMemberConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - System.Web.Mobile\n  namespace: System.Web.UI.Design.MobileControls.Converters\n  summary: Converts the specified object to the type of the associated control property using the specified context. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.\n  remarks: >-\n    > [!NOTE]\n\n    >  You typically do not access a type converter directly. This implementation of <xref:System.ComponentModel.TypeConverter> is intended for use by a data-bound control at design time, and is instantiated with a <xref:System.ComponentModel.TypeConverterAttribute> on a property.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that represents the data-bound component or the control that the property belongs to.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref:System.Globalization.CultureInfo> object that can be used to provide additional culture information.\n    - id: value\n      type: System.Object\n      description: The value to convert from.\n    return:\n      type: System.Object\n      description: A string containing the <code>value</code> if <code>value</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and contains a string; otherwise, an empty string (\"\").\n  overload: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.ConvertFrom*\n  exceptions:\n  - type: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n    commentId: M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n    description: <code>value</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and not a string.\n  platform:\n  - net462\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  langs:\n  - csharp\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: DataMemberConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValues(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Web.Mobile\n  namespace: System.Web.UI.Design.MobileControls.Converters\n  summary: Returns a list of values that can be assigned to a control property using the specified context. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.\n  remarks: >-\n    > [!NOTE]\n\n    >  You typically do not access a type converter directly. This implementation of <xref:System.ComponentModel.TypeConverter> is intended for use by a data-bound control at design time, and is instantiated with a <xref:System.ComponentModel.TypeConverterAttribute> on a property.\n  syntax:\n    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object that represents the data-bound component or the control that the property belongs to.\n    return:\n      type: System.ComponentModel.TypeConverter.StandardValuesCollection\n      description: A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> object containing the names of available data views in the data source.\n  overload: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  langs:\n  - csharp\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: DataMemberConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Web.Mobile\n  namespace: System.Web.UI.Design.MobileControls.Converters\n  summary: Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property using the specified context. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.\n  remarks: \"The GetStandardValuesExclusive method is called by the designer host before calling <xref:System.Web.UI.Design.MobileControls.Converters.DataFieldConverter.GetStandardValues%2A>.  \\n  \\n> [!NOTE]\\n>  You typically do not access a type converter directly. This implementation of <xref:System.ComponentModel.TypeConverter> is intended for use by a data-bound control at design time, and is instantiated with a <xref:System.ComponentModel.TypeConverterAttribute> on a property.\"\n  syntax:\n    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object that represents the data bound component or control the property belongs to.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesExclusive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  langs:\n  - csharp\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: DataMemberConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Web.Mobile\n  namespace: System.Web.UI.Design.MobileControls.Converters\n  summary: Gets a value indicating whether this object returns a standard set of values that can be picked from a list in the design host using the specified context. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site.\n  remarks: >-\n    > [!NOTE]\n\n    >  You typically do not access a type converter directly. This implementation of <xref:System.ComponentModel.TypeConverter> is intended for use by a data-bound control at design time, and is instantiated with a <xref:System.ComponentModel.TypeConverterAttribute> on a property.\n  syntax:\n    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object that represents the data-bound component or the control that the property belongs to.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the context is not null and can be cast to an <xref href=\"System.ComponentModel.IComponent\"></xref>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesSupported*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  isExternal: true\n  name: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.#ctor\n  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  isExternal: false\n  name: DataMemberConverter()\n  nameWithType: DataMemberConverter.DataMemberConverter()\n  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.DataMemberConverter()\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: DataMemberConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: DataMemberConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: DataMemberConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.StandardValuesCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter+StandardValuesCollection\n  nameWithType: TypeConverter+StandardValuesCollection\n  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: DataMemberConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: DataMemberConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.#ctor*\n  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  isExternal: false\n  name: DataMemberConverter\n  nameWithType: DataMemberConverter.DataMemberConverter\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.CanConvertFrom*\n  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: DataMemberConverter.CanConvertFrom\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.ConvertFrom*\n  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: DataMemberConverter.ConvertFrom\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValues*\n  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  isExternal: false\n  name: GetStandardValues\n  nameWithType: DataMemberConverter.GetStandardValues\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesExclusive*\n  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  isExternal: false\n  name: GetStandardValuesExclusive\n  nameWithType: DataMemberConverter.GetStandardValuesExclusive\n- uid: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter.GetStandardValuesSupported*\n  parent: System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  isExternal: false\n  name: GetStandardValuesSupported\n  nameWithType: DataMemberConverter.GetStandardValuesSupported\n"}