{"nodes":[{"pos":[576,676],"content":"Provides data related to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.FrameworkElement.SizeChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Provides data related to the <xref href=\"System.Windows.FrameworkElement.SizeChanged\"></xref> event."},{"pos":[1518,1635],"content":"Gets a value that indicates whether the <xref:System.Windows.FrameworkElement.Height*> component of the size changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the &lt;xref:System.Windows.FrameworkElement.Height*&gt; component of the size changed.","pos":[0,117],"source":"Gets a value that indicates whether the <xref:System.Windows.FrameworkElement.Height*> component of the size changed."}]},{"pos":[1648,2313],"content":"Because <xref:System.Double> precision numbers process imprecisely, this property might return a value of `false` even when <xref:System.Windows.SizeChangedEventArgs.PreviousSize%2A> and <xref:System.Windows.SizeChangedEventArgs.NewSize%2A> are not equal.       The layout system occasionally experiences this state due to minor fluctuations in the input parameters; however, the overall rendered scene is considered to be the same; therefore, no visible changes are detected. The handler for the <xref:System.Windows.FrameworkElement.SizeChanged> event should check for this state in order to avoid invalidation of layout if the dimension didn't actually change.","needQuote":false,"needEscape":true,"nodes":[{"content":"Because &lt;xref:System.Double&gt; precision numbers process imprecisely, this property might return a value of <ph id=\"ph1\">`false`</ph> even when &lt;xref:System.Windows.SizeChangedEventArgs.PreviousSize%2A&gt; and &lt;xref:System.Windows.SizeChangedEventArgs.NewSize%2A&gt; are not equal.","pos":[0,255],"source":"Because <xref:System.Double> precision numbers process imprecisely, this property might return a value of `false` even when <xref:System.Windows.SizeChangedEventArgs.PreviousSize%2A> and <xref:System.Windows.SizeChangedEventArgs.NewSize%2A> are not equal."},{"content":"The layout system occasionally experiences this state due to minor fluctuations in the input parameters; however, the overall rendered scene is considered to be the same; therefore, no visible changes are detected.","pos":[262,476]},{"content":"The handler for the &lt;xref:System.Windows.FrameworkElement.SizeChanged&gt; event should check for this state in order to avoid invalidation of layout if the dimension didn't actually change.","pos":[477,663],"source":" The handler for the <xref:System.Windows.FrameworkElement.SizeChanged> event should check for this state in order to avoid invalidation of layout if the dimension didn't actually change."}]},{"pos":[2431,2651],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.FrameworkElement.Height*&gt; component of the size changed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.FrameworkElement.Height*> component of the size changed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3265,3355],"content":"Invokes event handlers in a type-specific way, which can increase event system efficiency.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invokes event handlers in a type-specific way, which can increase event system efficiency.","pos":[0,90]}]},{"pos":[3367,3684],"content":"This implementation casts the generic handler as a <xref:System.Windows.SizeChangedEventHandler> and then invokes it. For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"This implementation casts the generic handler as a &lt;xref:System.Windows.SizeChangedEventHandler&gt; and then invokes it.","pos":[0,117],"source":"This implementation casts the generic handler as a <xref:System.Windows.SizeChangedEventHandler> and then invokes it."},{"content":"For details on this implementation pattern and the reasons for it, see &lt;xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A&gt; and <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[118,317],"source":" For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[3888,3939],"content":"The generic handler to call in a type-specific way.","needQuote":true,"needEscape":true,"nodes":[{"content":"The generic handler to call in a type-specific way.","pos":[0,51]}]},{"pos":[4009,4043],"content":"The target to call the handler on.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target to call the handler on.","pos":[0,34]}]},{"pos":[4496,4564],"content":"Gets the new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the object.","needQuote":true,"needEscape":true,"source":"Gets the new <xref href=\"System.Windows.Size\"></xref> of the object."},{"pos":[4695,4758],"content":"The new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the object.","needQuote":true,"needEscape":true,"source":"The new <xref href=\"System.Windows.Size\"></xref> of the object."},{"pos":[5225,5298],"content":"Gets the previous <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the object.","needQuote":true,"needEscape":true,"source":"Gets the previous <xref href=\"System.Windows.Size\"></xref> of the object."},{"pos":[5434,5502],"content":"The previous <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the object.","needQuote":true,"needEscape":true,"source":"The previous <xref href=\"System.Windows.Size\"></xref> of the object."},{"pos":[5974,6090],"content":"Gets a value that indicates whether the <xref:System.Windows.FrameworkElement.Width*> component of the size changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the &lt;xref:System.Windows.FrameworkElement.Width*&gt; component of the size changed.","pos":[0,116],"source":"Gets a value that indicates whether the <xref:System.Windows.FrameworkElement.Width*> component of the size changed."}]},{"pos":[6103,6768],"content":"Because <xref:System.Double> precision numbers process imprecisely, this property might return a value of `false` even when <xref:System.Windows.SizeChangedEventArgs.PreviousSize%2A> and <xref:System.Windows.SizeChangedEventArgs.NewSize%2A> are not equal.       The layout system occasionally experiences this state due to minor fluctuations in the input parameters; however, the overall rendered scene is considered to be the same; therefore, no visible changes are detected. The handler for the <xref:System.Windows.FrameworkElement.SizeChanged> event should check for this state in order to avoid invalidation of layout if the dimension didn't actually change.","needQuote":false,"needEscape":true,"nodes":[{"content":"Because &lt;xref:System.Double&gt; precision numbers process imprecisely, this property might return a value of <ph id=\"ph1\">`false`</ph> even when &lt;xref:System.Windows.SizeChangedEventArgs.PreviousSize%2A&gt; and &lt;xref:System.Windows.SizeChangedEventArgs.NewSize%2A&gt; are not equal.","pos":[0,255],"source":"Because <xref:System.Double> precision numbers process imprecisely, this property might return a value of `false` even when <xref:System.Windows.SizeChangedEventArgs.PreviousSize%2A> and <xref:System.Windows.SizeChangedEventArgs.NewSize%2A> are not equal."},{"content":"The layout system occasionally experiences this state due to minor fluctuations in the input parameters; however, the overall rendered scene is considered to be the same; therefore, no visible changes are detected.","pos":[262,476]},{"content":"The handler for the &lt;xref:System.Windows.FrameworkElement.SizeChanged&gt; event should check for this state in order to avoid invalidation of layout if the dimension didn't actually change.","pos":[477,663],"source":" The handler for the <xref:System.Windows.FrameworkElement.SizeChanged> event should check for this state in order to avoid invalidation of layout if the dimension didn't actually change."}]},{"pos":[6885,7104],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.FrameworkElement.Width*&gt; component of the size changed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.FrameworkElement.Width*> component of the size changed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.SizeChangedEventArgs\n  id: SizeChangedEventArgs\n  children:\n  - System.Windows.SizeChangedEventArgs.HeightChanged\n  - System.Windows.SizeChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  - System.Windows.SizeChangedEventArgs.NewSize\n  - System.Windows.SizeChangedEventArgs.PreviousSize\n  - System.Windows.SizeChangedEventArgs.WidthChanged\n  langs:\n  - csharp\n  name: SizeChangedEventArgs\n  nameWithType: SizeChangedEventArgs\n  fullName: System.Windows.SizeChangedEventArgs\n  type: Class\n  summary: Provides data related to the <xref href=\"System.Windows.FrameworkElement.SizeChanged\"></xref> event.\n  syntax:\n    content: 'public class SizeChangedEventArgs : System.Windows.RoutedEventArgs'\n  inheritance:\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  implements: []\n  inheritedMembers:\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  platform:\n  - net462\n- uid: System.Windows.SizeChangedEventArgs.HeightChanged\n  id: HeightChanged\n  parent: System.Windows.SizeChangedEventArgs\n  langs:\n  - csharp\n  name: HeightChanged\n  nameWithType: SizeChangedEventArgs.HeightChanged\n  fullName: System.Windows.SizeChangedEventArgs.HeightChanged\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a value that indicates whether the <xref:System.Windows.FrameworkElement.Height*> component of the size changed.\n  remarks: \"Because <xref:System.Double> precision numbers process imprecisely, this property might return a value of `false` even when <xref:System.Windows.SizeChangedEventArgs.PreviousSize%2A> and <xref:System.Windows.SizeChangedEventArgs.NewSize%2A> are not equal.  \\n  \\n The layout system occasionally experiences this state due to minor fluctuations in the input parameters; however, the overall rendered scene is considered to be the same; therefore, no visible changes are detected. The handler for the <xref:System.Windows.FrameworkElement.SizeChanged> event should check for this state in order to avoid invalidation of layout if the dimension didn't actually change.\"\n  syntax:\n    content: public bool HeightChanged { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.FrameworkElement.Height*> component of the size changed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.SizeChangedEventArgs.HeightChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.SizeChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.SizeChangedEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: SizeChangedEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.SizeChangedEventArgs.InvokeEventHandler(Delegate,Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Invokes event handlers in a type-specific way, which can increase event system efficiency.\n  remarks: This implementation casts the generic handler as a <xref:System.Windows.SizeChangedEventHandler> and then invokes it. For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: The generic handler to call in a type-specific way.\n    - id: genericTarget\n      type: System.Object\n      description: The target to call the handler on.\n  overload: System.Windows.SizeChangedEventArgs.InvokeEventHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.SizeChangedEventArgs.NewSize\n  id: NewSize\n  parent: System.Windows.SizeChangedEventArgs\n  langs:\n  - csharp\n  name: NewSize\n  nameWithType: SizeChangedEventArgs.NewSize\n  fullName: System.Windows.SizeChangedEventArgs.NewSize\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets the new <xref href=\"System.Windows.Size\"></xref> of the object.\n  syntax:\n    content: public System.Windows.Size NewSize { get; }\n    return:\n      type: System.Windows.Size\n      description: The new <xref href=\"System.Windows.Size\"></xref> of the object.\n  overload: System.Windows.SizeChangedEventArgs.NewSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.SizeChangedEventArgs.PreviousSize\n  id: PreviousSize\n  parent: System.Windows.SizeChangedEventArgs\n  langs:\n  - csharp\n  name: PreviousSize\n  nameWithType: SizeChangedEventArgs.PreviousSize\n  fullName: System.Windows.SizeChangedEventArgs.PreviousSize\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets the previous <xref href=\"System.Windows.Size\"></xref> of the object.\n  syntax:\n    content: public System.Windows.Size PreviousSize { get; }\n    return:\n      type: System.Windows.Size\n      description: The previous <xref href=\"System.Windows.Size\"></xref> of the object.\n  overload: System.Windows.SizeChangedEventArgs.PreviousSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.SizeChangedEventArgs.WidthChanged\n  id: WidthChanged\n  parent: System.Windows.SizeChangedEventArgs\n  langs:\n  - csharp\n  name: WidthChanged\n  nameWithType: SizeChangedEventArgs.WidthChanged\n  fullName: System.Windows.SizeChangedEventArgs.WidthChanged\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a value that indicates whether the <xref:System.Windows.FrameworkElement.Width*> component of the size changed.\n  remarks: \"Because <xref:System.Double> precision numbers process imprecisely, this property might return a value of `false` even when <xref:System.Windows.SizeChangedEventArgs.PreviousSize%2A> and <xref:System.Windows.SizeChangedEventArgs.NewSize%2A> are not equal.  \\n  \\n The layout system occasionally experiences this state due to minor fluctuations in the input parameters; however, the overall rendered scene is considered to be the same; therefore, no visible changes are detected. The handler for the <xref:System.Windows.FrameworkElement.SizeChanged> event should check for this state in order to avoid invalidation of layout if the dimension didn't actually change.\"\n  syntax:\n    content: public bool WidthChanged { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.FrameworkElement.Width*> component of the size changed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.SizeChangedEventArgs.WidthChanged*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: System.Windows.RoutedEventArgs\n- uid: System.Windows.SizeChangedEventArgs.HeightChanged\n  parent: System.Windows.SizeChangedEventArgs\n  isExternal: false\n  name: HeightChanged\n  nameWithType: SizeChangedEventArgs.HeightChanged\n  fullName: System.Windows.SizeChangedEventArgs.HeightChanged\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.SizeChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.SizeChangedEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: SizeChangedEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.SizeChangedEventArgs.InvokeEventHandler(Delegate,Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: true\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.SizeChangedEventArgs.NewSize\n  parent: System.Windows.SizeChangedEventArgs\n  isExternal: false\n  name: NewSize\n  nameWithType: SizeChangedEventArgs.NewSize\n  fullName: System.Windows.SizeChangedEventArgs.NewSize\n- uid: System.Windows.Size\n  parent: System.Windows\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n- uid: System.Windows.SizeChangedEventArgs.PreviousSize\n  parent: System.Windows.SizeChangedEventArgs\n  isExternal: false\n  name: PreviousSize\n  nameWithType: SizeChangedEventArgs.PreviousSize\n  fullName: System.Windows.SizeChangedEventArgs.PreviousSize\n- uid: System.Windows.SizeChangedEventArgs.WidthChanged\n  parent: System.Windows.SizeChangedEventArgs\n  isExternal: false\n  name: WidthChanged\n  nameWithType: SizeChangedEventArgs.WidthChanged\n  fullName: System.Windows.SizeChangedEventArgs.WidthChanged\n- uid: System.Windows.SizeChangedEventArgs.HeightChanged*\n  parent: System.Windows.SizeChangedEventArgs\n  isExternal: false\n  name: HeightChanged\n  nameWithType: SizeChangedEventArgs.HeightChanged\n- uid: System.Windows.SizeChangedEventArgs.InvokeEventHandler*\n  parent: System.Windows.SizeChangedEventArgs\n  isExternal: false\n  name: InvokeEventHandler\n  nameWithType: SizeChangedEventArgs.InvokeEventHandler\n- uid: System.Windows.SizeChangedEventArgs.NewSize*\n  parent: System.Windows.SizeChangedEventArgs\n  isExternal: false\n  name: NewSize\n  nameWithType: SizeChangedEventArgs.NewSize\n- uid: System.Windows.SizeChangedEventArgs.PreviousSize*\n  parent: System.Windows.SizeChangedEventArgs\n  isExternal: false\n  name: PreviousSize\n  nameWithType: SizeChangedEventArgs.PreviousSize\n- uid: System.Windows.SizeChangedEventArgs.WidthChanged*\n  parent: System.Windows.SizeChangedEventArgs\n  isExternal: false\n  name: WidthChanged\n  nameWithType: SizeChangedEventArgs.WidthChanged\n"}