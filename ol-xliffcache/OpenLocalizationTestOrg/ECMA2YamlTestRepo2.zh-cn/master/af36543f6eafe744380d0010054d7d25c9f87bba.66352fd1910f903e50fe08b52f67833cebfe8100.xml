{"nodes":[{"pos":[1581,1651],"content":"Represents an XML data store for writing and reading user annotations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an XML data store for writing and reading user annotations.","pos":[0,70]}]},{"pos":[3268,3424],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.Storage.XmlStreamStore\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a specified I/O &lt;xref:System.IO.Stream&gt;.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Annotations.Storage.XmlStreamStore\"></xref> class with a specified I/O <xref:System.IO.Stream>."},{"pos":[3437,3563],"content":"<ph id=\"ph1\">`stream`</ph> must be in valid XML format and comply with the <ph id=\"ph2\">[!INCLUDE[TLA#tla_caf](~/add/includes/tlasharptla-caf-md.md)]</ph> schema.","needQuote":false,"needEscape":true,"source":"`stream` must be in valid XML format and comply with the [!INCLUDE[TLA#tla_caf](~/add/includes/tlasharptla-caf-md.md)] schema."},{"pos":[3718,3774],"content":"The I/O stream for reading and writing user annotations.","needQuote":true,"needEscape":true,"nodes":[{"content":"The I/O stream for reading and writing user annotations.","pos":[0,56]}]},{"pos":[4642,4844],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.Storage.XmlStreamStore\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a specified I/O &lt;xref:System.IO.Stream&gt; and dictionary of known compatible namespaces.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Annotations.Storage.XmlStreamStore\"></xref> class with a specified I/O <xref:System.IO.Stream> and dictionary of known compatible namespaces."},{"pos":[4857,5522],"content":"This XmlStreamStore constructor enables the registration of application-specific known namespaces.       The `knownNamespace` dictionary defines application namespaces that are used when you store custom content as part of an annotation.  The dictionary key is the primary namespace known to the application program.  The namespace key is associated with a value list of older namespaces that are compatible with the \"key\" namespace.  When annotations are loaded all namespaces from this list will be replaced by the \"key\" namespace.       `stream` must be in valid XML format and comply with the [Annotations Schema](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This XmlStreamStore constructor enables the registration of application-specific known namespaces.","pos":[0,98]},{"content":"The <ph id=\"ph1\">`knownNamespace`</ph> dictionary defines application namespaces that are used when you store custom content as part of an annotation.","pos":[105,237],"source":"       The `knownNamespace` dictionary defines application namespaces that are used when you store custom content as part of an annotation."},{"content":"The dictionary key is the primary namespace known to the application program.","pos":[239,316]},{"content":"The namespace key is associated with a value list of older namespaces that are compatible with the \"key\" namespace.","pos":[318,433]},{"content":"When annotations are loaded all namespaces from this list will be replaced by the \"key\" namespace.","pos":[435,533]},{"content":"<ph id=\"ph1\">`stream`</ph> must be in valid XML format and comply with the <bpt id=\"p1\">[</bpt>Annotations Schema<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[540,657],"source":"`stream` must be in valid XML format and comply with the [Annotations Schema](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[5776,5832],"content":"The I/O stream for reading and writing user annotations.","needQuote":true,"needEscape":true,"nodes":[{"content":"The I/O stream for reading and writing user annotations.","pos":[0,56]}]},{"pos":[5986,6042],"content":"A dictionary with a list of known compatible namespaces.","needQuote":true,"needEscape":true,"nodes":[{"content":"A dictionary with a list of known compatible namespaces.","pos":[0,56]}]},{"pos":[6228,6312],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>stream</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6405,6446],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> contains invalid XML.","needQuote":true,"needEscape":true,"source":"<code>stream</code> contains invalid XML."},{"pos":[6542,6785],"content":"The <code>knownNamespaces</code> dictionary contains a duplicate namespace.       -or-       The <code>knownNamespaces</code> dictionary contains an element that has a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> key.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">knownNamespaces</ph><ept id=\"p1\">&lt;/code&gt;</ept> dictionary contains a duplicate namespace.","pos":[0,75],"source":"The <code>knownNamespaces</code> dictionary contains a duplicate namespace."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">knownNamespaces</ph><ept id=\"p1\">&lt;/code&gt;</ept> dictionary contains an element that has a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> key.","pos":[82,233],"source":"       -or-       The <code>knownNamespaces</code> dictionary contains an element that has a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> key."}]},{"pos":[7352,7435],"content":"Adds a new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.Annotation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the store.","needQuote":true,"needEscape":true,"source":"Adds a new <xref href=\"System.Windows.Annotations.Annotation\"></xref> to the store."},{"pos":[7447,7843],"content":"When AddAnnotation is called, the <xref:System.Windows.Annotations.Annotation.Id%2A> of the <xref:System.Windows.Annotations.Annotation> is checked to see whether the <xref:System.Windows.Annotations.Annotation> already has been added to the store.  If the <xref:System.Windows.Annotations.Annotation> already has been added and is in the store an <xref:System.ArgumentException> error is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"When AddAnnotation is called, the <xref:System.Windows.Annotations.Annotation.Id%2A> of the <xref:System.Windows.Annotations.Annotation> is checked to see whether the <xref:System.Windows.Annotations.Annotation> already has been added to the store.  If the <xref:System.Windows.Annotations.Annotation> already has been added and is in the store an <xref:System.ArgumentException> error is thrown.","pos":[0,396],"nodes":[{"content":"When AddAnnotation is called, the &lt;xref:System.Windows.Annotations.Annotation.Id%2A&gt; of the &lt;xref:System.Windows.Annotations.Annotation&gt; is checked to see whether the &lt;xref:System.Windows.Annotations.Annotation&gt; already has been added to the store.","pos":[0,248],"source":"When AddAnnotation is called, the <xref:System.Windows.Annotations.Annotation.Id%2A> of the <xref:System.Windows.Annotations.Annotation> is checked to see whether the <xref:System.Windows.Annotations.Annotation> already has been added to the store."},{"content":"If the &lt;xref:System.Windows.Annotations.Annotation&gt; already has been added and is in the store an &lt;xref:System.ArgumentException&gt; error is thrown.","pos":[250,396],"source":"  If the <xref:System.Windows.Annotations.Annotation> already has been added and is in the store an <xref:System.ArgumentException> error is thrown."}]}]},{"pos":[8066,8101],"content":"The annotation to add to the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"The annotation to add to the store.","pos":[0,35]}]},{"pos":[8295,8386],"content":"<ph id=\"ph1\">&lt;code&gt;newAnnotation&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>newAnnotation</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8481,8630],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.Annotation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the same &lt;xref:System.Windows.Annotations.Annotation.Id*&gt; already is in the store.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Annotations.Annotation\"></xref> with the same <xref:System.Windows.Annotations.Annotation.Id*> already is in the store."},{"pos":[8741,8803],"content":"An I/O <xref:System.IO.Stream> has not been set for the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"An I/O &lt;xref:System.IO.Stream&gt; has not been set for the store.","pos":[0,62],"source":"An I/O <xref:System.IO.Stream> has not been set for the store."}]},{"pos":[8910,9006],"content":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*&gt; has been called on the store.","pos":[0,96],"source":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store."}]},{"pos":[9440,9567],"content":"Gets or sets a value that indicates whether data in annotation buffers is to be written immediately to the physical data store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether data in annotation buffers is to be written immediately to the physical data store.","pos":[0,127]}]},{"pos":[9694,10088],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if data in annotation buffers is to be written immediately to the physical data store for each operation; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if data in the annotation buffers is to be written when the application explicitly calls &lt;xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush*&gt;.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if data in annotation buffers is to be written immediately to the physical data store for each operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if data in the annotation buffers is to be written when the application explicitly calls <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush*>."},{"pos":[10689,10795],"content":"Deletes the annotation with the specified <xref:System.Windows.Annotations.Annotation.Id*> from the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes the annotation with the specified &lt;xref:System.Windows.Annotations.Annotation.Id*&gt; from the store.","pos":[0,106],"source":"Deletes the annotation with the specified <xref:System.Windows.Annotations.Annotation.Id*> from the store."}]},{"pos":[11282,11440],"content":"The <ph id=\"ph1\">[!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)]</ph> &lt;xref:System.Windows.Annotations.Annotation.Id*&gt; property of the annotation to be deleted.","needQuote":true,"needEscape":true,"source":"The [!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Annotations.Annotation.Id*> property of the annotation to be deleted."},{"pos":[11522,11716],"content":"The annotation that was deleted; otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if an annotation with the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">annotationId</ph><ept id=\"p2\">&lt;/code&gt;</ept> was not found in the store.","needQuote":true,"needEscape":true,"source":"The annotation that was deleted; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if an annotation with the specified <code>annotationId</code> was not found in the store."},{"pos":[11917,12013],"content":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*&gt; has been called on the store.","pos":[0,96],"source":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store."}]},{"pos":[12124,12186],"content":"An I/O <xref:System.IO.Stream> has not been set for the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"An I/O &lt;xref:System.IO.Stream&gt; has not been set for the store.","pos":[0,62],"source":"An I/O <xref:System.IO.Stream> has not been set for the store."}]},{"pos":[12811,12823],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13329,13432],"content":"Forces any annotation data retained in internal buffers to be written to the underlying storage device.","needQuote":true,"needEscape":true,"nodes":[{"content":"Forces any annotation data retained in internal buffers to be written to the underlying storage device.","pos":[0,103]}]},{"pos":[14432,14528],"content":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*&gt; has been called on the store.","pos":[0,96],"source":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store."}]},{"pos":[14639,14701],"content":"An I/O <xref:System.IO.Stream> has not been set for the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"An I/O &lt;xref:System.IO.Stream&gt; has not been set for the store.","pos":[0,62],"source":"An I/O <xref:System.IO.Stream> has not been set for the store."}]},{"pos":[14816,14901],"content":"The store I/O <xref:System.IO.Stream> is read-only and cannot be accessed for output.","needQuote":true,"needEscape":true,"nodes":[{"content":"The store I/O &lt;xref:System.IO.Stream&gt; is read-only and cannot be accessed for output.","pos":[0,85],"source":"The store I/O <xref:System.IO.Stream> is read-only and cannot be accessed for output."}]},{"pos":[15397,15503],"content":"Returns the annotation with the specified <xref:System.Windows.Annotations.Annotation.Id*> from the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the annotation with the specified &lt;xref:System.Windows.Annotations.Annotation.Id*&gt; from the store.","pos":[0,106],"source":"Returns the annotation with the specified <xref:System.Windows.Annotations.Annotation.Id*> from the store."}]},{"pos":[15698,15857],"content":"The <ph id=\"ph1\">[!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)]</ph> &lt;xref:System.Windows.Annotations.Annotation.Id*&gt; property of the annotation to be returned.","needQuote":true,"needEscape":true,"source":"The [!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Annotations.Annotation.Id*> property of the annotation to be returned."},{"pos":[15939,16157],"content":"The annotation with the given <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">annotationId</ph><ept id=\"p1\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if an annotation with the specified <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">annotationId</ph><ept id=\"p3\">&lt;/code&gt;</ept> was not found in the store.","needQuote":true,"needEscape":true,"source":"The annotation with the given <code>annotationId</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if an annotation with the specified <code>annotationId</code> was not found in the store."},{"pos":[16355,16451],"content":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*&gt; has been called on the store.","pos":[0,96],"source":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store."}]},{"pos":[16914,16965],"content":"Returns a list of all the annotations in the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a list of all the annotations in the store.","pos":[0,51]}]},{"pos":[16977,17096],"content":"The GetAnnotations method will never return <ph id=\"ph1\">`null`</ph>; however the list may be empty if the store contains no annotations.","needQuote":true,"needEscape":true,"source":"The GetAnnotations method will never return `null`; however the list may be empty if the store contains no annotations."},{"pos":[17633,17693],"content":"The list of all annotations that are currently in the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of all annotations that are currently in the store.","pos":[0,60]}]},{"pos":[17892,17988],"content":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*&gt; has been called on the store.","pos":[0,96],"source":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store."}]},{"pos":[18579,18790],"content":"Returns a list of annotations that have &lt;xref:System.Windows.Annotations.Annotation.Anchors*&gt; with locators that begin with a matching <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.ContentLocatorPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> sequence.","needQuote":true,"needEscape":true,"source":"Returns a list of annotations that have <xref:System.Windows.Annotations.Annotation.Anchors*> with locators that begin with a matching <xref href=\"System.Windows.Annotations.ContentLocatorPart\"></xref> sequence."},{"pos":[18802,19031],"content":"This GetAnnotations method internally uses the <xref:System.Windows.Annotations.ContentLocator.StartsWith%2A> method of the <xref:System.Windows.Annotations.ContentLocator> class to search and match for the annotations to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"This GetAnnotations method internally uses the &lt;xref:System.Windows.Annotations.ContentLocator.StartsWith%2A&gt; method of the &lt;xref:System.Windows.Annotations.ContentLocator&gt; class to search and match for the annotations to return.","pos":[0,229],"source":"This GetAnnotations method internally uses the <xref:System.Windows.Annotations.ContentLocator.StartsWith%2A> method of the <xref:System.Windows.Annotations.ContentLocator> class to search and match for the annotations to return."}]},{"pos":[19662,19786],"content":"The starting <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.ContentLocatorPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> sequence to return matching annotations for.","needQuote":true,"needEscape":true,"source":"The starting <xref href=\"System.Windows.Annotations.ContentLocatorPart\"></xref> sequence to return matching annotations for."},{"pos":[19902,20173],"content":"The list of annotations that have &lt;xref:System.Windows.Annotations.Annotation.Anchors*&gt; with locators that start and match the given <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">anchorLocator</ph><ept id=\"p1\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if no matching annotations were found.","needQuote":true,"needEscape":true,"source":"The list of annotations that have <xref:System.Windows.Annotations.Annotation.Anchors*> with locators that start and match the given <code>anchorLocator</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no matching annotations were found."},{"pos":[20854,20925],"content":"Returns a list of namespaces that are compatible as an input namespace.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a list of namespaces that are compatible as an input namespace.","pos":[0,71]}]},{"pos":[20938,21670],"content":"The `name` parameter works only for predefined [!INCLUDE[TLA#tla_caf](~/add/includes/tlasharptla-caf-md.md)] namespaces.  For any other namespace given in the `name` parameter GetWellKnownCompatibleNamespaces will return `null`, even those namespaces registered through the `knownNamespaces` parameter of the <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> constructor.       The namespaces predefined by the [!INCLUDE[TLA2#tla_caf](~/add/includes/tla2sharptla-caf-md.md)] include the following:      -   http://schemas.microsoft.com/windows/annotations/2003/11/core      -   http://schemas.microsoft.com/windows/annotations/2003/11/base      -   http://schemas.microsoft.com/winfx/2006/xaml/presentation","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`name`</ph> parameter works only for predefined <ph id=\"ph2\">[!INCLUDE[TLA#tla_caf](~/add/includes/tlasharptla-caf-md.md)]</ph> namespaces.","pos":[0,120],"source":"The `name` parameter works only for predefined [!INCLUDE[TLA#tla_caf](~/add/includes/tlasharptla-caf-md.md)] namespaces."},{"content":"For any other namespace given in the <ph id=\"ph1\">`name`</ph> parameter GetWellKnownCompatibleNamespaces will return <ph id=\"ph2\">`null`</ph>, even those namespaces registered through the <ph id=\"ph3\">`knownNamespaces`</ph> parameter of the &lt;xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A&gt; constructor.","pos":[122,389],"source":"  For any other namespace given in the `name` parameter GetWellKnownCompatibleNamespaces will return `null`, even those namespaces registered through the `knownNamespaces` parameter of the <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> constructor."},{"content":"The namespaces predefined by the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_caf](~/add/includes/tla2sharptla-caf-md.md)]</ph> include the following:      -   http://schemas.microsoft.com/windows/annotations/2003/11/core      -   http://schemas.microsoft.com/windows/annotations/2003/11/base      -   http://schemas.microsoft.com/winfx/2006/xaml/presentation","pos":[396,724],"source":"       The namespaces predefined by the [!INCLUDE[TLA2#tla_caf](~/add/includes/tla2sharptla-caf-md.md)] include the following:      -   http://schemas.microsoft.com/windows/annotations/2003/11/core      -   http://schemas.microsoft.com/windows/annotations/2003/11/base      -   http://schemas.microsoft.com/winfx/2006/xaml/presentation"}]},{"pos":[21865,21928],"content":"The starting URI sequence to return the list of namespaces for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The starting URI sequence to return the list of namespaces for.","pos":[0,63]}]},{"pos":[22017,22195],"content":"A list of compatible namespaces that match <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if there are no compatible namespaces found.","needQuote":true,"needEscape":true,"source":"A list of compatible namespaces that match <code>name</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are no compatible namespaces found."},{"pos":[22782,22861],"content":"Gets a list of the namespaces that were ignored when the XML stream was loaded.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a list of the namespaces that were ignored when the XML stream was loaded.","pos":[0,79]}]},{"pos":[22874,23814],"content":"The IgnoredNamespaces property will never return `null`, however the returned list can be empty if no namespaces are ignored.       IgnoredNamespaces helps in XML markup compatibility when the program reads annotation content created by different versions of the [!INCLUDE[TLA#tla_caf](~/add/includes/tlasharptla-caf-md.md)].  When an older application is given annotation content created using a newer version of the [!INCLUDE[TLA2#tla_caf](~/add/includes/tla2sharptla-caf-md.md)], IgnoredNamespaces returns a list of the XML namespaces for elements and attributes not known to the older framework.  Unknown XML elements and attributes associated with newer namespaces are ignored when the annotation content is read and deserialized by the older application.  For more information see the *XML Markup Compatibility Specification* available at [http://go.microsoft.com/fwlink/?LinkId=73824](http://go.microsoft.com/fwlink/?LinkId=73824).","needQuote":false,"needEscape":true,"nodes":[{"content":"The IgnoredNamespaces property will never return <ph id=\"ph1\">`null`</ph>, however the returned list can be empty if no namespaces are ignored.","pos":[0,125],"source":"The IgnoredNamespaces property will never return `null`, however the returned list can be empty if no namespaces are ignored."},{"content":"IgnoredNamespaces helps in XML markup compatibility when the program reads annotation content created by different versions of the <ph id=\"ph1\">[!INCLUDE[TLA#tla_caf](~/add/includes/tlasharptla-caf-md.md)]</ph>.","pos":[132,325],"source":"       IgnoredNamespaces helps in XML markup compatibility when the program reads annotation content created by different versions of the [!INCLUDE[TLA#tla_caf](~/add/includes/tlasharptla-caf-md.md)]."},{"content":"When an older application is given annotation content created using a newer version of the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_caf](~/add/includes/tla2sharptla-caf-md.md)]</ph>, IgnoredNamespaces returns a list of the XML namespaces for elements and attributes not known to the older framework.","pos":[327,599],"source":"  When an older application is given annotation content created using a newer version of the [!INCLUDE[TLA2#tla_caf](~/add/includes/tla2sharptla-caf-md.md)], IgnoredNamespaces returns a list of the XML namespaces for elements and attributes not known to the older framework."},{"content":"Unknown XML elements and attributes associated with newer namespaces are ignored when the annotation content is read and deserialized by the older application.","pos":[601,760]},{"content":"For more information see the <bpt id=\"p1\">*</bpt>XML Markup Compatibility Specification<ept id=\"p1\">*</ept> available at <bpt id=\"p2\">[</bpt>http://go.microsoft.com/fwlink/?LinkId=73824<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkId=73824)</ept>.","pos":[762,938],"source":"  For more information see the *XML Markup Compatibility Specification* available at [http://go.microsoft.com/fwlink/?LinkId=73824](http://go.microsoft.com/fwlink/?LinkId=73824)."}]},{"pos":[23999,24075],"content":"The list of the namespaces that were ignored when the XML stream was loaded.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of the namespaces that were ignored when the XML stream was loaded.","pos":[0,76]}]},{"pos":[25135,25147],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25733,25854],"content":"Gets a list of all namespaces that are predefined by the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_caf](~/add/includes/tla2sharptla-caf-md.md)]</ph>.","needQuote":true,"needEscape":true,"source":"Gets a list of all namespaces that are predefined by the [!INCLUDE[TLA2#tla_caf](~/add/includes/tla2sharptla-caf-md.md)]."},{"pos":[25867,26201],"content":"The namespaces predefined by the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_caf](~/add/includes/tla2sharptla-caf-md.md)]</ph> include the following:      -   http://schemas.microsoft.com/windows/annotations/2003/11/core      -   http://schemas.microsoft.com/windows/annotations/2003/11/base      -   http://schemas.microsoft.com/winfx/2006/xaml/presentation","needQuote":false,"needEscape":true,"source":"The namespaces predefined by the [!INCLUDE[TLA2#tla_caf](~/add/includes/tla2sharptla-caf-md.md)] include the following:      -   http://schemas.microsoft.com/windows/annotations/2003/11/core      -   http://schemas.microsoft.com/windows/annotations/2003/11/base      -   http://schemas.microsoft.com/winfx/2006/xaml/presentation"},{"pos":[26395,26507],"content":"The list of namespaces that are predefined by the <ph id=\"ph1\">[!INCLUDE[TLA#tla_caf](~/add/includes/tlasharptla-caf-md.md)]</ph>.","needQuote":true,"needEscape":true,"source":"The list of namespaces that are predefined by the [!INCLUDE[TLA#tla_caf](~/add/includes/tlasharptla-caf-md.md)]."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Annotations.Storage.XmlStreamStore\n  id: XmlStreamStore\n  children:\n  - System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream)\n  - System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream,System.Collections.Generic.IDictionary{System.Uri,System.Collections.Generic.IList{System.Uri}})\n  - System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(System.Windows.Annotations.Annotation)\n  - System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush\n  - System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)\n  - System.Windows.Annotations.Storage.XmlStreamStore.Dispose(System.Boolean)\n  - System.Windows.Annotations.Storage.XmlStreamStore.Flush\n  - System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)\n  - System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations\n  - System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(System.Windows.Annotations.ContentLocator)\n  - System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)\n  - System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces\n  - System.Windows.Annotations.Storage.XmlStreamStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)\n  - System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces\n  langs:\n  - csharp\n  name: XmlStreamStore\n  nameWithType: XmlStreamStore\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore\n  type: Class\n  summary: Represents an XML data store for writing and reading user annotations.\n  syntax:\n    content: 'public sealed class XmlStreamStore : System.Windows.Annotations.Storage.AnnotationStore'\n  inheritance:\n  - System.Object\n  - System.Windows.Annotations.Storage.AnnotationStore\n  implements: []\n  inheritedMembers:\n  - System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged\n  - System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged\n  - System.Windows.Annotations.Storage.AnnotationStore.CargoChanged\n  - System.Windows.Annotations.Storage.AnnotationStore.Dispose\n  - System.Windows.Annotations.Storage.AnnotationStore.IsDisposed\n  - System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)\n  - System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)\n  - System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)\n  - System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged\n  - System.Windows.Annotations.Storage.AnnotationStore.SyncRoot\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  langs:\n  - csharp\n  name: XmlStreamStore(Stream)\n  nameWithType: XmlStreamStore.XmlStreamStore(Stream)\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.XmlStreamStore(Stream)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Annotations.Storage.XmlStreamStore\"></xref> class with a specified I/O <xref:System.IO.Stream>.\n  remarks: '`stream` must be in valid XML format and comply with the [!INCLUDE[TLA#tla_caf](~/add/includes/tlasharptla-caf-md.md)] schema.'\n  syntax:\n    content: public XmlStreamStore (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The I/O stream for reading and writing user annotations.\n  overload: System.Windows.Annotations.Storage.XmlStreamStore.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream,System.Collections.Generic.IDictionary{System.Uri,System.Collections.Generic.IList{System.Uri}})\n  id: '#ctor(System.IO.Stream,System.Collections.Generic.IDictionary{System.Uri,System.Collections.Generic.IList{System.Uri}})'\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  langs:\n  - csharp\n  name: XmlStreamStore(Stream,IDictionary<Uri,IList<Uri>>)\n  nameWithType: XmlStreamStore.XmlStreamStore(Stream,IDictionary<Uri,IList<Uri>>)\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.XmlStreamStore(Stream,IDictionary<Uri,IList<Uri>>)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Annotations.Storage.XmlStreamStore\"></xref> class with a specified I/O <xref:System.IO.Stream> and dictionary of known compatible namespaces.\n  remarks: \"This XmlStreamStore constructor enables the registration of application-specific known namespaces.  \\n  \\n The `knownNamespace` dictionary defines application namespaces that are used when you store custom content as part of an annotation.  The dictionary key is the primary namespace known to the application program.  The namespace key is associated with a value list of older namespaces that are compatible with the \\\"key\\\" namespace.  When annotations are loaded all namespaces from this list will be replaced by the \\\"key\\\" namespace.  \\n  \\n `stream` must be in valid XML format and comply with the [Annotations Schema](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public XmlStreamStore (System.IO.Stream stream, System.Collections.Generic.IDictionary<Uri,System.Collections.Generic.IList<Uri>> knownNamespaces);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The I/O stream for reading and writing user annotations.\n    - id: knownNamespaces\n      type: System.Collections.Generic.IDictionary{System.Uri,System.Collections.Generic.IList{System.Uri}}\n      description: A dictionary with a list of known compatible namespaces.\n  overload: System.Windows.Annotations.Storage.XmlStreamStore.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: <code>stream</code> contains invalid XML.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>knownNamespaces</code> dictionary contains a duplicate namespace.  \\n  \\n -or-  \\n  \\n The <code>knownNamespaces</code> dictionary contains an element that has a <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> key.\"\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(System.Windows.Annotations.Annotation)\n  id: AddAnnotation(System.Windows.Annotations.Annotation)\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  langs:\n  - csharp\n  name: AddAnnotation(Annotation)\n  nameWithType: XmlStreamStore.AddAnnotation(Annotation)\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(Annotation)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Adds a new <xref href=\"System.Windows.Annotations.Annotation\"></xref> to the store.\n  remarks: When AddAnnotation is called, the <xref:System.Windows.Annotations.Annotation.Id%2A> of the <xref:System.Windows.Annotations.Annotation> is checked to see whether the <xref:System.Windows.Annotations.Annotation> already has been added to the store.  If the <xref:System.Windows.Annotations.Annotation> already has been added and is in the store an <xref:System.ArgumentException> error is thrown.\n  syntax:\n    content: public override void AddAnnotation (System.Windows.Annotations.Annotation newAnnotation);\n    parameters:\n    - id: newAnnotation\n      type: System.Windows.Annotations.Annotation\n      description: The annotation to add to the store.\n  overload: System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>newAnnotation</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An <xref href=\"System.Windows.Annotations.Annotation\"></xref> with the same <xref:System.Windows.Annotations.Annotation.Id*> already is in the store.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An I/O <xref:System.IO.Stream> has not been set for the store.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush\n  id: AutoFlush\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  langs:\n  - csharp\n  name: AutoFlush\n  nameWithType: XmlStreamStore.AutoFlush\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Gets or sets a value that indicates whether data in annotation buffers is to be written immediately to the physical data store.\n  syntax:\n    content: public override bool AutoFlush { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if data in annotation buffers is to be written immediately to the physical data store for each operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if data in the annotation buffers is to be written when the application explicitly calls <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush*>.\n  overload: System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)\n  id: DeleteAnnotation(System.Guid)\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  langs:\n  - csharp\n  name: DeleteAnnotation(Guid)\n  nameWithType: XmlStreamStore.DeleteAnnotation(Guid)\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(Guid)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Deletes the annotation with the specified <xref:System.Windows.Annotations.Annotation.Id*> from the store.\n  remarks: ''\n  example:\n  - \"The following example shows use of the DeleteAnnotation and <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> methods.  \\n  \\n [!code-cs[DocumentSerialize#DocSerDelete](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserdelete)]\"\n  syntax:\n    content: public override System.Windows.Annotations.Annotation DeleteAnnotation (Guid annotationId);\n    parameters:\n    - id: annotationId\n      type: System.Guid\n      description: The [!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Annotations.Annotation.Id*> property of the annotation to be deleted.\n    return:\n      type: System.Windows.Annotations.Annotation\n      description: The annotation that was deleted; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if an annotation with the specified <code>annotationId</code> was not found in the store.\n  overload: System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An I/O <xref:System.IO.Stream> has not been set for the store.\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: XmlStreamStore.Dispose(Boolean)\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: To be added.\n  overload: System.Windows.Annotations.Storage.XmlStreamStore.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.Flush\n  id: Flush\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: XmlStreamStore.Flush()\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.Flush()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Forces any annotation data retained in internal buffers to be written to the underlying storage device.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the Flush method when the application closes the <xref:System.Windows.Annotations.AnnotationService>.  \\n  \\n [!code-cs[DocViewerAnnotationsXps#StopAnnotations](~/add/codesnippet/csharp/DocViewerAnnotationsXps/AnnotationsHelperXps.cs#stopannotations)]\\n [!code-vb[DocViewerAnnotationsXps#StopAnnotations](~/add/codesnippet/visualbasic/docviewerannotationsxps/annotationshelperxps.vb#stopannotations)]  \\n  \\n The following example shows use of the <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> and Flush methods.  \\n  \\n [!code-cs[DocumentSerialize#DocSerDelete](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserdelete)]\"\n  syntax:\n    content: public override void Flush ();\n    parameters: []\n  overload: System.Windows.Annotations.Storage.XmlStreamStore.Flush*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An I/O <xref:System.IO.Stream> has not been set for the store.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The store I/O <xref:System.IO.Stream> is read-only and cannot be accessed for output.\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)\n  id: GetAnnotation(System.Guid)\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  langs:\n  - csharp\n  name: GetAnnotation(Guid)\n  nameWithType: XmlStreamStore.GetAnnotation(Guid)\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(Guid)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Returns the annotation with the specified <xref:System.Windows.Annotations.Annotation.Id*> from the store.\n  syntax:\n    content: public override System.Windows.Annotations.Annotation GetAnnotation (Guid annotationId);\n    parameters:\n    - id: annotationId\n      type: System.Guid\n      description: The [!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Annotations.Annotation.Id*> property of the annotation to be returned.\n    return:\n      type: System.Windows.Annotations.Annotation\n      description: The annotation with the given <code>annotationId</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if an annotation with the specified <code>annotationId</code> was not found in the store.\n  overload: System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations\n  id: GetAnnotations\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  langs:\n  - csharp\n  name: GetAnnotations()\n  nameWithType: XmlStreamStore.GetAnnotations()\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Returns a list of all the annotations in the store.\n  remarks: The GetAnnotations method will never return `null`; however the list may be empty if the store contains no annotations.\n  example:\n  - \"The following example shows how to use the GetAnnotations method to determine whether there are any annotations in the store.  \\n  \\n [!code-cs[DocumentSerialize#DocSerCloseFile](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserclosefile)]\"\n  syntax:\n    content: public override System.Collections.Generic.IList<System.Windows.Annotations.Annotation> GetAnnotations ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.Windows.Annotations.Annotation}\n      description: The list of all annotations that are currently in the store.\n  overload: System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(System.Windows.Annotations.ContentLocator)\n  id: GetAnnotations(System.Windows.Annotations.ContentLocator)\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  langs:\n  - csharp\n  name: GetAnnotations(ContentLocator)\n  nameWithType: XmlStreamStore.GetAnnotations(ContentLocator)\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(ContentLocator)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Returns a list of annotations that have <xref:System.Windows.Annotations.Annotation.Anchors*> with locators that begin with a matching <xref href=\"System.Windows.Annotations.ContentLocatorPart\"></xref> sequence.\n  remarks: This GetAnnotations method internally uses the <xref:System.Windows.Annotations.ContentLocator.StartsWith%2A> method of the <xref:System.Windows.Annotations.ContentLocator> class to search and match for the annotations to return.\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method to determine whether there are any annotations in the store.  \\n  \\n [!code-cs[DocumentSerialize#DocSerCloseFile](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserclosefile)]\"\n  syntax:\n    content: public override System.Collections.Generic.IList<System.Windows.Annotations.Annotation> GetAnnotations (System.Windows.Annotations.ContentLocator anchorLocator);\n    parameters:\n    - id: anchorLocator\n      type: System.Windows.Annotations.ContentLocator\n      description: The starting <xref href=\"System.Windows.Annotations.ContentLocatorPart\"></xref> sequence to return matching annotations for.\n    return:\n      type: System.Collections.Generic.IList{System.Windows.Annotations.Annotation}\n      description: The list of annotations that have <xref:System.Windows.Annotations.Annotation.Anchors*> with locators that start and match the given <code>anchorLocator</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no matching annotations were found.\n  overload: System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)\n  id: GetWellKnownCompatibleNamespaces(System.Uri)\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  langs:\n  - csharp\n  name: GetWellKnownCompatibleNamespaces(Uri)\n  nameWithType: XmlStreamStore.GetWellKnownCompatibleNamespaces(Uri)\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(Uri)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Returns a list of namespaces that are compatible as an input namespace.\n  remarks: \"The `name` parameter works only for predefined [!INCLUDE[TLA#tla_caf](~/add/includes/tlasharptla-caf-md.md)] namespaces.  For any other namespace given in the `name` parameter GetWellKnownCompatibleNamespaces will return `null`, even those namespaces registered through the `knownNamespaces` parameter of the <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> constructor.  \\n  \\n The namespaces predefined by the [!INCLUDE[TLA2#tla_caf](~/add/includes/tla2sharptla-caf-md.md)] include the following:  \\n  \\n-   http://schemas.microsoft.com/windows/annotations/2003/11/core  \\n  \\n-   http://schemas.microsoft.com/windows/annotations/2003/11/base  \\n  \\n-   http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n  syntax:\n    content: public static System.Collections.Generic.IList<Uri> GetWellKnownCompatibleNamespaces (Uri name);\n    parameters:\n    - id: name\n      type: System.Uri\n      description: The starting URI sequence to return the list of namespaces for.\n    return:\n      type: System.Collections.Generic.IList{System.Uri}\n      description: A list of compatible namespaces that match <code>name</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there are no compatible namespaces found.\n  overload: System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces\n  id: IgnoredNamespaces\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  langs:\n  - csharp\n  name: IgnoredNamespaces\n  nameWithType: XmlStreamStore.IgnoredNamespaces\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Gets a list of the namespaces that were ignored when the XML stream was loaded.\n  remarks: \"The IgnoredNamespaces property will never return `null`, however the returned list can be empty if no namespaces are ignored.  \\n  \\n IgnoredNamespaces helps in XML markup compatibility when the program reads annotation content created by different versions of the [!INCLUDE[TLA#tla_caf](~/add/includes/tlasharptla-caf-md.md)].  When an older application is given annotation content created using a newer version of the [!INCLUDE[TLA2#tla_caf](~/add/includes/tla2sharptla-caf-md.md)], IgnoredNamespaces returns a list of the XML namespaces for elements and attributes not known to the older framework.  Unknown XML elements and attributes associated with newer namespaces are ignored when the annotation content is read and deserialized by the older application.  For more information see the *XML Markup Compatibility Specification* available at [http://go.microsoft.com/fwlink/?LinkId=73824](http://go.microsoft.com/fwlink/?LinkId=73824).\"\n  syntax:\n    content: public System.Collections.Generic.IList<Uri> IgnoredNamespaces { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Uri}\n      description: The list of the namespaces that were ignored when the XML stream was loaded.\n  overload: System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)\n  id: OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  langs:\n  - csharp\n  name: OnStoreContentChanged(StoreContentChangedEventArgs)\n  nameWithType: XmlStreamStore.OnStoreContentChanged(StoreContentChangedEventArgs)\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.OnStoreContentChanged(StoreContentChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  syntax:\n    content: protected override void OnStoreContentChanged (System.Windows.Annotations.Storage.StoreContentChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Annotations.Storage.StoreContentChangedEventArgs\n      description: To be added.\n  overload: System.Windows.Annotations.Storage.XmlStreamStore.OnStoreContentChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces\n  id: WellKnownNamespaces\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  langs:\n  - csharp\n  name: WellKnownNamespaces\n  nameWithType: XmlStreamStore.WellKnownNamespaces\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Gets a list of all namespaces that are predefined by the [!INCLUDE[TLA2#tla_caf](~/add/includes/tla2sharptla-caf-md.md)].\n  remarks: \"The namespaces predefined by the [!INCLUDE[TLA2#tla_caf](~/add/includes/tla2sharptla-caf-md.md)] include the following:  \\n  \\n-   http://schemas.microsoft.com/windows/annotations/2003/11/core  \\n  \\n-   http://schemas.microsoft.com/windows/annotations/2003/11/base  \\n  \\n-   http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n  syntax:\n    content: public static System.Collections.Generic.IList<Uri> WellKnownNamespaces { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Uri}\n      description: The list of namespaces that are predefined by the [!INCLUDE[TLA#tla_caf](~/add/includes/tlasharptla-caf-md.md)].\n  overload: System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: System.Windows.Annotations.Storage.AnnotationStore\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Xml.XmlException\n  isExternal: true\n  name: System.Xml.XmlException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.UnauthorizedAccessException\n  isExternal: true\n  name: System.UnauthorizedAccessException\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream)\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: XmlStreamStore(Stream)\n  nameWithType: XmlStreamStore.XmlStreamStore(Stream)\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.XmlStreamStore(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream,System.Collections.Generic.IDictionary{System.Uri,System.Collections.Generic.IList{System.Uri}})\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: XmlStreamStore(Stream,IDictionary<Uri,IList<Uri>>)\n  nameWithType: XmlStreamStore.XmlStreamStore(Stream,IDictionary<Uri,IList<Uri>>)\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.XmlStreamStore(Stream,IDictionary<Uri,IList<Uri>>)\n- uid: System.Collections.Generic.IDictionary{System.Uri,System.Collections.Generic.IList{System.Uri}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<Uri,IList<Uri>>\n  nameWithType: IDictionary<Uri,IList<Uri>>\n  fullName: System.Collections.Generic.IDictionary<System.Uri,System.Collections.Generic.IList<System.Uri>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.Uri,System.Collections.Generic.IList<System.Uri>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: Uri\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Uri>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: Uri\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(System.Windows.Annotations.Annotation)\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: AddAnnotation(Annotation)\n  nameWithType: XmlStreamStore.AddAnnotation(Annotation)\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(Annotation)\n- uid: System.Windows.Annotations.Annotation\n  parent: System.Windows.Annotations\n  isExternal: false\n  name: Annotation\n  nameWithType: Annotation\n  fullName: System.Windows.Annotations.Annotation\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: AutoFlush\n  nameWithType: XmlStreamStore.AutoFlush\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: DeleteAnnotation(Guid)\n  nameWithType: XmlStreamStore.DeleteAnnotation(Guid)\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(Guid)\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.Dispose(System.Boolean)\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: XmlStreamStore.Dispose(Boolean)\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.Dispose(Boolean)\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.Flush\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: Flush()\n  nameWithType: XmlStreamStore.Flush()\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.Flush()\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: GetAnnotation(Guid)\n  nameWithType: XmlStreamStore.GetAnnotation(Guid)\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(Guid)\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: GetAnnotations()\n  nameWithType: XmlStreamStore.GetAnnotations()\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations()\n- uid: System.Collections.Generic.IList{System.Windows.Annotations.Annotation}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<Annotation>\n  nameWithType: IList<Annotation>\n  fullName: System.Collections.Generic.IList<System.Windows.Annotations.Annotation>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Windows.Annotations.Annotation>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Annotations.Annotation\n    name: Annotation\n    nameWithType: Annotation\n    fullName: Annotation\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(System.Windows.Annotations.ContentLocator)\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: GetAnnotations(ContentLocator)\n  nameWithType: XmlStreamStore.GetAnnotations(ContentLocator)\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(ContentLocator)\n- uid: System.Windows.Annotations.ContentLocator\n  parent: System.Windows.Annotations\n  isExternal: false\n  name: ContentLocator\n  nameWithType: ContentLocator\n  fullName: System.Windows.Annotations.ContentLocator\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: GetWellKnownCompatibleNamespaces(Uri)\n  nameWithType: XmlStreamStore.GetWellKnownCompatibleNamespaces(Uri)\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(Uri)\n- uid: System.Collections.Generic.IList{System.Uri}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<Uri>\n  nameWithType: IList<Uri>\n  fullName: System.Collections.Generic.IList<System.Uri>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Uri>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: Uri\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: IgnoredNamespaces\n  nameWithType: XmlStreamStore.IgnoredNamespaces\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: OnStoreContentChanged(StoreContentChangedEventArgs)\n  nameWithType: XmlStreamStore.OnStoreContentChanged(StoreContentChangedEventArgs)\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.OnStoreContentChanged(StoreContentChangedEventArgs)\n- uid: System.Windows.Annotations.Storage.StoreContentChangedEventArgs\n  parent: System.Windows.Annotations.Storage\n  isExternal: false\n  name: StoreContentChangedEventArgs\n  nameWithType: StoreContentChangedEventArgs\n  fullName: System.Windows.Annotations.Storage.StoreContentChangedEventArgs\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: WellKnownNamespaces\n  nameWithType: XmlStreamStore.WellKnownNamespaces\n  fullName: System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.#ctor*\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: XmlStreamStore\n  nameWithType: XmlStreamStore.XmlStreamStore\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation*\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: AddAnnotation\n  nameWithType: XmlStreamStore.AddAnnotation\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush*\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: AutoFlush\n  nameWithType: XmlStreamStore.AutoFlush\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation*\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: DeleteAnnotation\n  nameWithType: XmlStreamStore.DeleteAnnotation\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.Dispose*\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: Dispose\n  nameWithType: XmlStreamStore.Dispose\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.Flush*\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: Flush\n  nameWithType: XmlStreamStore.Flush\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation*\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: GetAnnotation\n  nameWithType: XmlStreamStore.GetAnnotation\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations*\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: GetAnnotations\n  nameWithType: XmlStreamStore.GetAnnotations\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces*\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: GetWellKnownCompatibleNamespaces\n  nameWithType: XmlStreamStore.GetWellKnownCompatibleNamespaces\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces*\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: IgnoredNamespaces\n  nameWithType: XmlStreamStore.IgnoredNamespaces\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.OnStoreContentChanged*\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: OnStoreContentChanged\n  nameWithType: XmlStreamStore.OnStoreContentChanged\n- uid: System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces*\n  parent: System.Windows.Annotations.Storage.XmlStreamStore\n  isExternal: false\n  name: WellKnownNamespaces\n  nameWithType: XmlStreamStore.WellKnownNamespaces\n"}