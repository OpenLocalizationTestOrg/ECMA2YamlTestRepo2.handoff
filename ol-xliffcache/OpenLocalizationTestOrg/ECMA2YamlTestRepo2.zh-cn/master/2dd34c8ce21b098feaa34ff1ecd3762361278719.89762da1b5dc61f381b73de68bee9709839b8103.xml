{"nodes":[{"pos":[1089,1240],"content":"Represents an XML element that defines the settings for the message-logging capabilities of <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph>.","needQuote":true,"needEscape":true,"source":"Represents an XML element that defines the settings for the message-logging capabilities of [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]."},{"pos":[4658,4775],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.MessageLoggingElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.MessageLoggingElement\"></xref> class."},{"pos":[5388,5451],"content":"Gets the XPathFilter objects that are used for message logging.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the XPathFilter objects that are used for message logging.","pos":[0,63]}]},{"pos":[5464,5868],"content":"Message filters are applied at the service and transport level. When one or more filters are defined, only messages that match at least one of the filters are logged. If no filter is defined, all messages pass through.       Filters support the full XPath syntax, and are applied in the order they appear in the configuration file. A syntactically incorrect filter results in a configuration exception.","needQuote":false,"needEscape":true,"nodes":[{"content":"Message filters are applied at the service and transport level. When one or more filters are defined, only messages that match at least one of the filters are logged. If no filter is defined, all messages pass through.       Filters support the full XPath syntax, and are applied in the order they appear in the configuration file. A syntactically incorrect filter results in a configuration exception.","pos":[0,402],"nodes":[{"content":"Message filters are applied at the service and transport level.","pos":[0,63]},{"content":"When one or more filters are defined, only messages that match at least one of the filters are logged.","pos":[64,166]},{"content":"If no filter is defined, all messages pass through.","pos":[167,218]},{"content":"Filters support the full XPath syntax, and are applied in the order they appear in the configuration file.","pos":[225,331]},{"content":"A syntactically incorrect filter results in a configuration exception.","pos":[332,402]}]}]},{"pos":[6354,6424],"content":"A collection of XPathFilter objects that are used for message logging.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of XPathFilter objects that are used for message logging.","pos":[0,70]}]},{"pos":[7009,7108],"content":"Gets or sets a value that specifies whether the entire message (message header and body) is logged.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies whether the entire message (message header and body) is logged.","pos":[0,99]}]},{"pos":[7120,7204],"content":"This setting affects all message logging levels (service, transport, and malformed).","needQuote":true,"needEscape":true,"nodes":[{"content":"This setting affects all message logging levels (service, transport, and malformed).","pos":[0,84]}]},{"pos":[7329,7654],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the entire message (message header and body) is logged; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, which means that only the message header is logged.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the entire message (message header and body) is logged; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,194],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the entire message (message header and body) is logged; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which means that only the message header is logged.","pos":[195,325],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, which means that only the message header is logged."}]},{"pos":[8223,8302],"content":"Gets or sets a value that indicates whether the known Pii identifier is logged.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the known Pii identifier is logged.","pos":[0,79]}]},{"pos":[8422,8585],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the known Pii is logged; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the known Pii is logged; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9194,9268],"content":"Gets or sets a value that specifies whether malformed messages are logged.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies whether malformed messages are logged.","pos":[0,74]}]},{"pos":[9397,9645],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if malformed messages are logged; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if malformed messages are logged; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,169],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if malformed messages are logged; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[170,248],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[10288,10426],"content":"Gets or sets a value that specifies whether messages are traced at the service level (before encryption and transport-related transforms).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies whether messages are traced at the service level (before encryption and transport-related transforms).","pos":[0,138]}]},{"pos":[10560,10872],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if messages are traced at the service level (before encryption and transport-related transforms); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if messages are traced at the service level (before encryption and transport-related transforms); otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,233],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if messages are traced at the service level (before encryption and transport-related transforms); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[234,312],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[11530,11617],"content":"Gets or sets a value that specifies whether messages are traced at the transport level.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies whether messages are traced at the transport level.","pos":[0,87]}]},{"pos":[11629,11742],"content":"Any filters specified in the configuration file are applied, and only messages that match the filters are traced.","needQuote":true,"needEscape":true,"nodes":[{"content":"Any filters specified in the configuration file are applied, and only messages that match the filters are traced.","pos":[0,113]}]},{"pos":[11878,12139],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if messages are traced at the transport level; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if messages are traced at the transport level; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,182],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if messages are traced at the transport level; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[183,261],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[12744,12818],"content":"Gets or sets a value that specifies the maximum number of messages to log.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies the maximum number of messages to log.","pos":[0,74]}]},{"pos":[12940,12999],"content":"The maximum number of messages to log. The default is 1000.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of messages to log. The default is 1000.","pos":[0,59],"nodes":[{"content":"The maximum number of messages to log.","pos":[0,38]},{"content":"The default is 1000.","pos":[39,59]}]}]},{"pos":[13618,13702],"content":"Gets or sets a value that specifies the maximum size, in bytes, of a message to log.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies the maximum size, in bytes, of a message to log.","pos":[0,84]}]},{"pos":[13829,13994],"content":"The maximum size, in bytes, of a message to log. Messages larger than the limit are not logged. This setting affects all trace levels. The default is Int32.MaxValue.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, of a message to log. Messages larger than the limit are not logged. This setting affects all trace levels. The default is Int32.MaxValue.","pos":[0,165],"nodes":[{"content":"The maximum size, in bytes, of a message to log.","pos":[0,48]},{"content":"Messages larger than the limit are not logged.","pos":[49,95]},{"content":"This setting affects all trace levels.","pos":[96,134]},{"content":"The default is Int32.MaxValue.","pos":[135,165]}]}]},{"pos":[14763,14775],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.MessageLoggingElement\n  id: MessageLoggingElement\n  children:\n  - System.ServiceModel.Configuration.MessageLoggingElement.#ctor\n  - System.ServiceModel.Configuration.MessageLoggingElement.Filters\n  - System.ServiceModel.Configuration.MessageLoggingElement.LogEntireMessage\n  - System.ServiceModel.Configuration.MessageLoggingElement.LogKnownPii\n  - System.ServiceModel.Configuration.MessageLoggingElement.LogMalformedMessages\n  - System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtServiceLevel\n  - System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel\n  - System.ServiceModel.Configuration.MessageLoggingElement.MaxMessagesToLog\n  - System.ServiceModel.Configuration.MessageLoggingElement.MaxSizeOfMessageToLog\n  - System.ServiceModel.Configuration.MessageLoggingElement.Properties\n  langs:\n  - csharp\n  name: MessageLoggingElement\n  nameWithType: MessageLoggingElement\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement\n  type: Class\n  summary: Represents an XML element that defines the settings for the message-logging capabilities of [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)].\n  syntax:\n    content: 'public sealed class MessageLoggingElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: MessageLoggingElement()\n  nameWithType: MessageLoggingElement.MessageLoggingElement()\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.MessageLoggingElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.MessageLoggingElement\"></xref> class.\n  syntax:\n    content: public MessageLoggingElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.Filters\n  id: Filters\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: Filters\n  nameWithType: MessageLoggingElement.Filters\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.Filters\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the XPathFilter objects that are used for message logging.\n  remarks: \"Message filters are applied at the service and transport level. When one or more filters are defined, only messages that match at least one of the filters are logged. If no filter is defined, all messages pass through.  \\n  \\n Filters support the full XPath syntax, and are applied in the order they appear in the configuration file. A syntactically incorrect filter results in a configuration exception.\"\n  example:\n  - \"The following is an example in configuring a filter that records only messages that have a SOAP Header section.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public System.ServiceModel.Configuration.XPathMessageFilterElementCollection Filters { get; }\n    return:\n      type: System.ServiceModel.Configuration.XPathMessageFilterElementCollection\n      description: A collection of XPathFilter objects that are used for message logging.\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.Filters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogEntireMessage\n  id: LogEntireMessage\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: LogEntireMessage\n  nameWithType: MessageLoggingElement.LogEntireMessage\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.LogEntireMessage\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies whether the entire message (message header and body) is logged.\n  remarks: This setting affects all message logging levels (service, transport, and malformed).\n  syntax:\n    content: public bool LogEntireMessage { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the entire message (message header and body) is logged; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, which means that only the message header is logged.\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.LogEntireMessage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogKnownPii\n  id: LogKnownPii\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: LogKnownPii\n  nameWithType: MessageLoggingElement.LogKnownPii\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.LogKnownPii\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that indicates whether the known Pii identifier is logged.\n  syntax:\n    content: public bool LogKnownPii { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the known Pii is logged; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.LogKnownPii*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogMalformedMessages\n  id: LogMalformedMessages\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: LogMalformedMessages\n  nameWithType: MessageLoggingElement.LogMalformedMessages\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.LogMalformedMessages\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies whether malformed messages are logged.\n  syntax:\n    content: public bool LogMalformedMessages { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if malformed messages are logged; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.LogMalformedMessages*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtServiceLevel\n  id: LogMessagesAtServiceLevel\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: LogMessagesAtServiceLevel\n  nameWithType: MessageLoggingElement.LogMessagesAtServiceLevel\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtServiceLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies whether messages are traced at the service level (before encryption and transport-related transforms).\n  syntax:\n    content: public bool LogMessagesAtServiceLevel { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if messages are traced at the service level (before encryption and transport-related transforms); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtServiceLevel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel\n  id: LogMessagesAtTransportLevel\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: LogMessagesAtTransportLevel\n  nameWithType: MessageLoggingElement.LogMessagesAtTransportLevel\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies whether messages are traced at the transport level.\n  remarks: Any filters specified in the configuration file are applied, and only messages that match the filters are traced.\n  syntax:\n    content: public bool LogMessagesAtTransportLevel { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if messages are traced at the transport level; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.MaxMessagesToLog\n  id: MaxMessagesToLog\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: MaxMessagesToLog\n  nameWithType: MessageLoggingElement.MaxMessagesToLog\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.MaxMessagesToLog\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies the maximum number of messages to log.\n  syntax:\n    content: public int MaxMessagesToLog { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of messages to log. The default is 1000.\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.MaxMessagesToLog*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.MaxSizeOfMessageToLog\n  id: MaxSizeOfMessageToLog\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: MaxSizeOfMessageToLog\n  nameWithType: MessageLoggingElement.MaxSizeOfMessageToLog\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.MaxSizeOfMessageToLog\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies the maximum size, in bytes, of a message to log.\n  syntax:\n    content: public int MaxSizeOfMessageToLog { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum size, in bytes, of a message to log. Messages larger than the limit are not logged. This setting affects all trace levels. The default is Int32.MaxValue.\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.MaxSizeOfMessageToLog*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: MessageLoggingElement.Properties\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.ServiceModel.Configuration.MessageLoggingElement.Properties*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.#ctor\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: MessageLoggingElement()\n  nameWithType: MessageLoggingElement.MessageLoggingElement()\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.MessageLoggingElement()\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.Filters\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: Filters\n  nameWithType: MessageLoggingElement.Filters\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.Filters\n- uid: System.ServiceModel.Configuration.XPathMessageFilterElementCollection\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: XPathMessageFilterElementCollection\n  nameWithType: XPathMessageFilterElementCollection\n  fullName: System.ServiceModel.Configuration.XPathMessageFilterElementCollection\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogEntireMessage\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogEntireMessage\n  nameWithType: MessageLoggingElement.LogEntireMessage\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.LogEntireMessage\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogKnownPii\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogKnownPii\n  nameWithType: MessageLoggingElement.LogKnownPii\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.LogKnownPii\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogMalformedMessages\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogMalformedMessages\n  nameWithType: MessageLoggingElement.LogMalformedMessages\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.LogMalformedMessages\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtServiceLevel\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogMessagesAtServiceLevel\n  nameWithType: MessageLoggingElement.LogMessagesAtServiceLevel\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtServiceLevel\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogMessagesAtTransportLevel\n  nameWithType: MessageLoggingElement.LogMessagesAtTransportLevel\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.MaxMessagesToLog\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: MaxMessagesToLog\n  nameWithType: MessageLoggingElement.MaxMessagesToLog\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.MaxMessagesToLog\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.MaxSizeOfMessageToLog\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: MaxSizeOfMessageToLog\n  nameWithType: MessageLoggingElement.MaxSizeOfMessageToLog\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.MaxSizeOfMessageToLog\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.Properties\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: Properties\n  nameWithType: MessageLoggingElement.Properties\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.#ctor*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: MessageLoggingElement\n  nameWithType: MessageLoggingElement.MessageLoggingElement\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.Filters*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: Filters\n  nameWithType: MessageLoggingElement.Filters\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogEntireMessage*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogEntireMessage\n  nameWithType: MessageLoggingElement.LogEntireMessage\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogKnownPii*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogKnownPii\n  nameWithType: MessageLoggingElement.LogKnownPii\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogMalformedMessages*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogMalformedMessages\n  nameWithType: MessageLoggingElement.LogMalformedMessages\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtServiceLevel*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogMessagesAtServiceLevel\n  nameWithType: MessageLoggingElement.LogMessagesAtServiceLevel\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: LogMessagesAtTransportLevel\n  nameWithType: MessageLoggingElement.LogMessagesAtTransportLevel\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.MaxMessagesToLog*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: MaxMessagesToLog\n  nameWithType: MessageLoggingElement.MaxMessagesToLog\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.MaxSizeOfMessageToLog*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: MaxSizeOfMessageToLog\n  nameWithType: MessageLoggingElement.MaxSizeOfMessageToLog\n- uid: System.ServiceModel.Configuration.MessageLoggingElement.Properties*\n  parent: System.ServiceModel.Configuration.MessageLoggingElement\n  isExternal: false\n  name: Properties\n  nameWithType: MessageLoggingElement.Properties\n"}