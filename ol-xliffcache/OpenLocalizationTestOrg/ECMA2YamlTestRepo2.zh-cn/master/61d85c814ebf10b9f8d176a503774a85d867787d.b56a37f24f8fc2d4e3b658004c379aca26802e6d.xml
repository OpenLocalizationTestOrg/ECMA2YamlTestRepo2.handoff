{"nodes":[{"pos":[635,804],"content":"Throws <xref:System.Text.DecoderFallbackException> when an encoded input byte sequence cannot be converted to a decoded output character. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Throws <xref:System.Text.DecoderFallbackException> when an encoded input byte sequence cannot be converted to a decoded output character. This class cannot be inherited.","pos":[0,169],"nodes":[{"content":"Throws &lt;xref:System.Text.DecoderFallbackException&gt; when an encoded input byte sequence cannot be converted to a decoded output character.","pos":[0,137],"source":"Throws <xref:System.Text.DecoderFallbackException> when an encoded input byte sequence cannot be converted to a decoded output character."},{"content":"This class cannot be inherited.","pos":[138,169]}]}]},{"pos":[2475,2579],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Text.DecoderExceptionFallbackBuffer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Text.DecoderExceptionFallbackBuffer\"></xref> class."},{"pos":[3226,3362],"content":"Throws <xref:System.Text.DecoderFallbackException> when the input byte sequence cannot be decoded. The nominal return value is not used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Throws <xref:System.Text.DecoderFallbackException> when the input byte sequence cannot be decoded. The nominal return value is not used.","pos":[0,136],"nodes":[{"content":"Throws &lt;xref:System.Text.DecoderFallbackException&gt; when the input byte sequence cannot be decoded.","pos":[0,98],"source":"Throws <xref:System.Text.DecoderFallbackException> when the input byte sequence cannot be decoded."},{"content":"The nominal return value is not used.","pos":[99,136]}]}]},{"pos":[3374,3767],"content":"The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Decoder.Convert%2A> methods call Fallback if they encounter an unknown byte in their input. In response, the Fallback method always throws <xref:System.Text.DecoderFallbackException> and displays the input data. The Fallback method nominally indicates whether an exception is thrown if an input byte sequence cannot be decoded.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Decoder.Convert%2A> methods call Fallback if they encounter an unknown byte in their input. In response, the Fallback method always throws <xref:System.Text.DecoderFallbackException> and displays the input data. The Fallback method nominally indicates whether an exception is thrown if an input byte sequence cannot be decoded.","pos":[0,393],"nodes":[{"content":"The &lt;xref:System.Text.Encoding.GetBytes%2A&gt; and &lt;xref:System.Text.Decoder.Convert%2A&gt; methods call Fallback if they encounter an unknown byte in their input.","pos":[0,157],"source":"The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Decoder.Convert%2A> methods call Fallback if they encounter an unknown byte in their input."},{"content":"In response, the Fallback method always throws &lt;xref:System.Text.DecoderFallbackException&gt; and displays the input data.","pos":[158,277],"source":" In response, the Fallback method always throws <xref:System.Text.DecoderFallbackException> and displays the input data."},{"content":"The Fallback method nominally indicates whether an exception is thrown if an input byte sequence cannot be decoded.","pos":[278,393]}]}]},{"pos":[3939,3963],"content":"An input array of bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"An input array of bytes.","pos":[0,24]}]},{"pos":[4024,4066],"content":"The index position of a byte in the input.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index position of a byte in the input.","pos":[0,42]}]},{"pos":[4126,4417],"content":"None. No value is returned because the Fallback method always throws an exception.       The nominal return value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>. A return value is defined, although it is unchanging, because this method implements an abstract method.","needQuote":false,"needEscape":true,"nodes":[{"content":"None.","pos":[0,5]},{"content":"No value is returned because the Fallback method always throws an exception.","pos":[6,82]},{"content":"The nominal return value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[89,178],"source":"       The nominal return value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"content":"A return value is defined, although it is unchanging, because this method implements an abstract method.","pos":[179,283]}]},{"pos":[4616,4738],"content":"This method always throws an exception that reports the value and index position of the input byte that cannot be decoded.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method always throws an exception that reports the value and index position of the input byte that cannot be decoded.","pos":[0,122]}]},{"pos":[5145,5203],"content":"Retrieves the next character in the exception data buffer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the next character in the exception data buffer.","pos":[0,58]}]},{"pos":[5215,5375],"content":"Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the GetNextChar method always returns the Unicode NULL character.","needQuote":true,"needEscape":true,"nodes":[{"content":"Because &lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt; has no actual exception data buffer, the GetNextChar method always returns the Unicode NULL character.","pos":[0,160],"source":"Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the GetNextChar method always returns the Unicode NULL character."}]},{"pos":[5511,5687],"content":"The return value is always the Unicode character NULL (U+0000).       A return value is defined, although it is unchanging, because this method implements an abstract method.","needQuote":false,"needEscape":true,"nodes":[{"content":"The return value is always the Unicode character NULL (U+0000).       A return value is defined, although it is unchanging, because this method implements an abstract method.","pos":[0,174],"nodes":[{"content":"The return value is always the Unicode character NULL (U+0000).","pos":[0,63]},{"content":"A return value is defined, although it is unchanging, because this method implements an abstract method.","pos":[70,174]}]}]},{"pos":[6185,6365],"content":"Causes the next call to <xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar*> to access the exception data buffer character position that is prior to the current position.","needQuote":true,"needEscape":true,"nodes":[{"content":"Causes the next call to &lt;xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar*&gt; to access the exception data buffer character position that is prior to the current position.","pos":[0,180],"source":"Causes the next call to <xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar*> to access the exception data buffer character position that is prior to the current position."}]},{"pos":[6377,6519],"content":"Because &lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt; has no actual exception data buffer, the MovePrevious method always returns <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the MovePrevious method always returns `false`."},{"pos":[6659,6868],"content":"The return value is always <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.       A return value is defined, although it is unchanging, because this method implements an abstract method.","needQuote":false,"needEscape":true,"nodes":[{"content":"The return value is always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,90],"source":"The return value is always <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"A return value is defined, although it is unchanging, because this method implements an abstract method.","pos":[97,201]}]},{"pos":[7348,7492],"content":"Gets the number of characters in the current <bpt id=\"p1\">&lt;xref href=\"System.Text.DecoderExceptionFallbackBuffer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that remain to be processed.","needQuote":true,"needEscape":true,"source":"Gets the number of characters in the current <xref href=\"System.Text.DecoderExceptionFallbackBuffer\"></xref> object that remain to be processed."},{"pos":[7504,7642],"content":"Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the Remaining property always returns zero.","needQuote":true,"needEscape":true,"nodes":[{"content":"Because &lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt; has no actual exception data buffer, the Remaining property always returns zero.","pos":[0,138],"source":"Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the Remaining property always returns zero."}]},{"pos":[7762,7907],"content":"The return value is always zero.       A return value is defined, although it is unchanging, because this method implements an abstract method.","needQuote":false,"needEscape":true,"nodes":[{"content":"The return value is always zero.       A return value is defined, although it is unchanging, because this method implements an abstract method.","pos":[0,143],"nodes":[{"content":"The return value is always zero.","pos":[0,32]},{"content":"A return value is defined, although it is unchanging, because this method implements an abstract method.","pos":[39,143]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Text.DecoderExceptionFallbackBuffer\n  id: DecoderExceptionFallbackBuffer\n  children:\n  - System.Text.DecoderExceptionFallbackBuffer.#ctor\n  - System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)\n  - System.Text.DecoderExceptionFallbackBuffer.GetNextChar\n  - System.Text.DecoderExceptionFallbackBuffer.MovePrevious\n  - System.Text.DecoderExceptionFallbackBuffer.Remaining\n  langs:\n  - csharp\n  name: DecoderExceptionFallbackBuffer\n  nameWithType: DecoderExceptionFallbackBuffer\n  fullName: System.Text.DecoderExceptionFallbackBuffer\n  type: Class\n  summary: Throws <xref:System.Text.DecoderFallbackException> when an encoded input byte sequence cannot be converted to a decoded output character. This class cannot be inherited.\n  remarks: \"A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence. If the input byte sequence cannot be converted to an output character, the decoding operation calls the [Fallback(Byte\\\\[\\\\], Int32)](assetId:///M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)?qualifyHint=False&autoUpgrade=True) method, which throws <xref:System.Text.DecoderFallbackException>.  \\n  \\n The <xref:System.Text.DecoderFallbackBuffer?displayProperty=fullName> class, which represents a data buffer used in a decoding operation, is the base class for the DecoderExceptionFallbackBuffer class. However, instead of a data buffer, the DecoderExceptionFallbackBuffer class represents a standard behavior in which an exception is thrown if a decoding operation fails. No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work.\"\n  syntax:\n    content: 'public sealed class DecoderExceptionFallbackBuffer : System.Text.DecoderFallbackBuffer'\n  inheritance:\n  - System.Text.DecoderFallbackBuffer\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Text.DecoderExceptionFallbackBuffer.#ctor\n  id: '#ctor'\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  langs:\n  - csharp\n  name: DecoderExceptionFallbackBuffer()\n  nameWithType: DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()\n  fullName: System.Text.DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  summary: Initializes a new instance of the <xref href=\"System.Text.DecoderExceptionFallbackBuffer\"></xref> class.\n  syntax:\n    content: public DecoderExceptionFallbackBuffer ();\n    parameters: []\n  overload: System.Text.DecoderExceptionFallbackBuffer.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)\n  id: Fallback(System.Byte[],System.Int32)\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  langs:\n  - csharp\n  name: Fallback(Byte[],Int32)\n  nameWithType: DecoderExceptionFallbackBuffer.Fallback(Byte[],Int32)\n  fullName: System.Text.DecoderExceptionFallbackBuffer.Fallback(Byte[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  summary: Throws <xref:System.Text.DecoderFallbackException> when the input byte sequence cannot be decoded. The nominal return value is not used.\n  remarks: The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Decoder.Convert%2A> methods call Fallback if they encounter an unknown byte in their input. In response, the Fallback method always throws <xref:System.Text.DecoderFallbackException> and displays the input data. The Fallback method nominally indicates whether an exception is thrown if an input byte sequence cannot be decoded.\n  syntax:\n    content: public override bool Fallback (byte[] bytesUnknown, int index);\n    parameters:\n    - id: bytesUnknown\n      type: System.Byte[]\n      description: An input array of bytes.\n    - id: index\n      type: System.Int32\n      description: The index position of a byte in the input.\n    return:\n      type: System.Boolean\n      description: \"None. No value is returned because the Fallback method always throws an exception.  \\n  \\n The nominal return value is <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>. A return value is defined, although it is unchanging, because this method implements an abstract method.\"\n  overload: System.Text.DecoderExceptionFallbackBuffer.Fallback*\n  exceptions:\n  - type: System.Text.DecoderFallbackException\n    commentId: T:System.Text.DecoderFallbackException\n    description: This method always throws an exception that reports the value and index position of the input byte that cannot be decoded.\n  platform:\n  - net462\n- uid: System.Text.DecoderExceptionFallbackBuffer.GetNextChar\n  id: GetNextChar\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  langs:\n  - csharp\n  name: GetNextChar()\n  nameWithType: DecoderExceptionFallbackBuffer.GetNextChar()\n  fullName: System.Text.DecoderExceptionFallbackBuffer.GetNextChar()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  summary: Retrieves the next character in the exception data buffer.\n  remarks: Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the GetNextChar method always returns the Unicode NULL character.\n  syntax:\n    content: public override char GetNextChar ();\n    parameters: []\n    return:\n      type: System.Char\n      description: \"The return value is always the Unicode character NULL (U+0000).  \\n  \\n A return value is defined, although it is unchanging, because this method implements an abstract method.\"\n  overload: System.Text.DecoderExceptionFallbackBuffer.GetNextChar*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Text.DecoderExceptionFallbackBuffer.MovePrevious\n  id: MovePrevious\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  langs:\n  - csharp\n  name: MovePrevious()\n  nameWithType: DecoderExceptionFallbackBuffer.MovePrevious()\n  fullName: System.Text.DecoderExceptionFallbackBuffer.MovePrevious()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  summary: Causes the next call to <xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar*> to access the exception data buffer character position that is prior to the current position.\n  remarks: Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the MovePrevious method always returns `false`.\n  syntax:\n    content: public override bool MovePrevious ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"The return value is always <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>.  \\n  \\n A return value is defined, although it is unchanging, because this method implements an abstract method.\"\n  overload: System.Text.DecoderExceptionFallbackBuffer.MovePrevious*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Text.DecoderExceptionFallbackBuffer.Remaining\n  id: Remaining\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  langs:\n  - csharp\n  name: Remaining\n  nameWithType: DecoderExceptionFallbackBuffer.Remaining\n  fullName: System.Text.DecoderExceptionFallbackBuffer.Remaining\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  summary: Gets the number of characters in the current <xref href=\"System.Text.DecoderExceptionFallbackBuffer\"></xref> object that remain to be processed.\n  remarks: Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the Remaining property always returns zero.\n  syntax:\n    content: public override int Remaining { get; }\n    return:\n      type: System.Int32\n      description: \"The return value is always zero.  \\n  \\n A return value is defined, although it is unchanging, because this method implements an abstract method.\"\n  overload: System.Text.DecoderExceptionFallbackBuffer.Remaining*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Text.DecoderFallbackBuffer\n  isExternal: false\n  name: System.Text.DecoderFallbackBuffer\n- uid: System.Text.DecoderFallbackException\n  isExternal: true\n  name: System.Text.DecoderFallbackException\n- uid: System.Text.DecoderExceptionFallbackBuffer.#ctor\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: DecoderExceptionFallbackBuffer()\n  nameWithType: DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()\n  fullName: System.Text.DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()\n- uid: System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: Fallback(Byte[],Int32)\n  nameWithType: DecoderExceptionFallbackBuffer.Fallback(Byte[],Int32)\n  fullName: System.Text.DecoderExceptionFallbackBuffer.Fallback(Byte[],Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.DecoderExceptionFallbackBuffer.GetNextChar\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: GetNextChar()\n  nameWithType: DecoderExceptionFallbackBuffer.GetNextChar()\n  fullName: System.Text.DecoderExceptionFallbackBuffer.GetNextChar()\n- uid: System.Char\n  parent: System\n  isExternal: true\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Text.DecoderExceptionFallbackBuffer.MovePrevious\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: MovePrevious()\n  nameWithType: DecoderExceptionFallbackBuffer.MovePrevious()\n  fullName: System.Text.DecoderExceptionFallbackBuffer.MovePrevious()\n- uid: System.Text.DecoderExceptionFallbackBuffer.Remaining\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: Remaining\n  nameWithType: DecoderExceptionFallbackBuffer.Remaining\n  fullName: System.Text.DecoderExceptionFallbackBuffer.Remaining\n- uid: System.Text.DecoderExceptionFallbackBuffer.#ctor*\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: DecoderExceptionFallbackBuffer\n  nameWithType: DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer\n- uid: System.Text.DecoderExceptionFallbackBuffer.Fallback*\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: Fallback\n  nameWithType: DecoderExceptionFallbackBuffer.Fallback\n- uid: System.Text.DecoderExceptionFallbackBuffer.GetNextChar*\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: GetNextChar\n  nameWithType: DecoderExceptionFallbackBuffer.GetNextChar\n- uid: System.Text.DecoderExceptionFallbackBuffer.MovePrevious*\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: MovePrevious\n  nameWithType: DecoderExceptionFallbackBuffer.MovePrevious\n- uid: System.Text.DecoderExceptionFallbackBuffer.Remaining*\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: Remaining\n  nameWithType: DecoderExceptionFallbackBuffer.Remaining\n"}