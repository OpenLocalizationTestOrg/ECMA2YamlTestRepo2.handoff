{"nodes":[{"pos":[576,680],"content":"Controls how Unicode characters are interpreted by the <xref:System.Net.WebUtility.HtmlDecode*> methods.","needQuote":true,"needEscape":true,"nodes":[{"content":"Controls how Unicode characters are interpreted by the &lt;xref:System.Net.WebUtility.HtmlDecode*&gt; methods.","pos":[0,104],"source":"Controls how Unicode characters are interpreted by the <xref:System.Net.WebUtility.HtmlDecode*> methods."}]},{"pos":[692,870],"content":"For more information on how Unicode characters are supposed to be encoded in HTML, see <bpt id=\"p1\">[</bpt>Using character escapes in markup and CSS<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=256607)</ept>.","needQuote":true,"needEscape":true,"source":"For more information on how Unicode characters are supposed to be encoded in HTML, see [Using character escapes in markup and CSS](http://go.microsoft.com/fwlink/?LinkId=256607)."},{"pos":[1362,1579],"content":"Use automatic behavior. The decoding behavior is determined by current application's target Framework. For [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)] and later, the Unicode encoding decoding is strict.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use automatic behavior.","pos":[0,23]},{"content":"The decoding behavior is determined by current application's target Framework.","pos":[24,102]},{"content":"For <ph id=\"ph1\">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> and later, the Unicode encoding decoding is strict.","pos":[103,217],"source":" For [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)] and later, the Unicode encoding decoding is strict."}]},{"pos":[1703,1715],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2141,2561],"content":"Use compatible behavior. Specifies that incoming data is not checked for validity before being decoded. For example, an input string of \"&amp;amp;#xD84C;\" would decode as U+D84C, which is an unpaired surrogate. Additionally, the decoder does not understand code points in the SMP unless they're represented as HTML-encoded surrogates, so the inputstring \"&amp;#144308;\" would result in the output string \"&amp;#144308;\".","needQuote":true,"needEscape":true,"nodes":[{"content":"Use compatible behavior. Specifies that incoming data is not checked for validity before being decoded. For example, an input string of \"&amp;amp;#xD84C;\" would decode as U+D84C, which is an unpaired surrogate. Additionally, the decoder does not understand code points in the SMP unless they're represented as HTML-encoded surrogates, so the inputstring \"&amp;#144308;\" would result in the output string \"&amp;#144308;\".","pos":[0,420],"nodes":[{"content":"Use compatible behavior.","pos":[0,24]},{"content":"Specifies that incoming data is not checked for validity before being decoded.","pos":[25,103]},{"content":"For example, an input string of \"<ph id=\"ph1\">&amp;amp;</ph>amp;#xD84C;\" would decode as U+D84C, which is an unpaired surrogate.","pos":[104,210],"source":" For example, an input string of \"&amp;amp;#xD84C;\" would decode as U+D84C, which is an unpaired surrogate."},{"content":"Additionally, the decoder does not understand code points in the SMP unless they're represented as HTML-encoded surrogates, so the inputstring \"<ph id=\"ph1\">&amp;amp;</ph>#144308;\" would result in the output string \"<ph id=\"ph2\">&amp;amp;</ph>#144308;\".","pos":[211,420],"source":" Additionally, the decoder does not understand code points in the SMP unless they're represented as HTML-encoded surrogates, so the inputstring \"&amp;#144308;\" would result in the output string \"&amp;#144308;\"."}]}]},{"pos":[2687,2699],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3120,3479],"content":"Use loose behavior. Similar to Compat in that there are no validity checks, but the decoder also understands code points. The input string \"&amp;#144308;\" would decode into the character U+233B4 correctly. This switch is meant to provide maximum interoperability when the decoder doesn't know which format the provider is using to generate the encoded string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use loose behavior. Similar to Compat in that there are no validity checks, but the decoder also understands code points. The input string \"&amp;#144308;\" would decode into the character U+233B4 correctly. This switch is meant to provide maximum interoperability when the decoder doesn't know which format the provider is using to generate the encoded string.","pos":[0,359],"nodes":[{"content":"Use loose behavior.","pos":[0,19]},{"content":"Similar to Compat in that there are no validity checks, but the decoder also understands code points.","pos":[20,121]},{"content":"The input string \"<ph id=\"ph1\">&amp;amp;</ph>#144308;\" would decode into the character U+233B4 correctly.","pos":[122,205],"source":" The input string \"&amp;#144308;\" would decode into the character U+233B4 correctly."},{"content":"This switch is meant to provide maximum interoperability when the decoder doesn't know which format the provider is using to generate the encoded string.","pos":[206,359]}]}]},{"pos":[3604,3616],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4042,4542],"content":"Use strict behavior. Specifies that the incoming encoded data is checked for validity before being decoded. For example, an input string of \"&amp;#144308;\" would decode as U+233B4, but an input string of \"&amp;#xD84C;&amp;#xDFB4;\" would fail to decode properly. Already-decoded data in the string is not checked for validity. For example, an input string of \"\\ud800\" will result in an output string of \"\\ud800\", as the already-decoded surrogate is skipped during decoding, even though it is unpaired.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use strict behavior. Specifies that the incoming encoded data is checked for validity before being decoded. For example, an input string of \"&amp;#144308;\" would decode as U+233B4, but an input string of \"&amp;#xD84C;&amp;#xDFB4;\" would fail to decode properly. Already-decoded data in the string is not checked for validity. For example, an input string of \"\\ud800\" will result in an output string of \"\\ud800\", as the already-decoded surrogate is skipped during decoding, even though it is unpaired.","pos":[0,500],"nodes":[{"content":"Use strict behavior.","pos":[0,20]},{"content":"Specifies that the incoming encoded data is checked for validity before being decoded.","pos":[21,107]},{"content":"For example, an input string of \"<ph id=\"ph1\">&amp;amp;</ph>#144308;\" would decode as U+233B4, but an input string of \"<ph id=\"ph2\">&amp;amp;</ph>#xD84C;<ph id=\"ph3\">&amp;amp;</ph>#xDFB4;\" would fail to decode properly.","pos":[108,261],"source":" For example, an input string of \"&amp;#144308;\" would decode as U+233B4, but an input string of \"&amp;#xD84C;&amp;#xDFB4;\" would fail to decode properly."},{"content":"Already-decoded data in the string is not checked for validity.","pos":[262,325]},{"content":"For example, an input string of \"\\ud800\" will result in an output string of \"\\ud800\", as the already-decoded surrogate is skipped during decoding, even though it is unpaired.","pos":[326,500]}]}]},{"pos":[4668,4680],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Configuration.UnicodeDecodingConformance\n  id: UnicodeDecodingConformance\n  children:\n  - System.Net.Configuration.UnicodeDecodingConformance.Auto\n  - System.Net.Configuration.UnicodeDecodingConformance.Compat\n  - System.Net.Configuration.UnicodeDecodingConformance.Loose\n  - System.Net.Configuration.UnicodeDecodingConformance.Strict\n  langs:\n  - csharp\n  name: UnicodeDecodingConformance\n  nameWithType: UnicodeDecodingConformance\n  fullName: System.Net.Configuration.UnicodeDecodingConformance\n  type: Enum\n  summary: Controls how Unicode characters are interpreted by the <xref:System.Net.WebUtility.HtmlDecode*> methods.\n  remarks: For more information on how Unicode characters are supposed to be encoded in HTML, see [Using character escapes in markup and CSS](http://go.microsoft.com/fwlink/?LinkId=256607).\n  syntax:\n    content: public enum UnicodeDecodingConformance\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Net.Configuration.UnicodeDecodingConformance.Auto\n  id: Auto\n  parent: System.Net.Configuration.UnicodeDecodingConformance\n  langs:\n  - csharp\n  name: Auto\n  nameWithType: UnicodeDecodingConformance.Auto\n  fullName: System.Net.Configuration.UnicodeDecodingConformance.Auto\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Use automatic behavior. The decoding behavior is determined by current application's target Framework. For [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)] and later, the Unicode encoding decoding is strict.\n  syntax:\n    content: Auto\n    return:\n      type: System.Net.Configuration.UnicodeDecodingConformance\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.UnicodeDecodingConformance.Compat\n  id: Compat\n  parent: System.Net.Configuration.UnicodeDecodingConformance\n  langs:\n  - csharp\n  name: Compat\n  nameWithType: UnicodeDecodingConformance.Compat\n  fullName: System.Net.Configuration.UnicodeDecodingConformance.Compat\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Use compatible behavior. Specifies that incoming data is not checked for validity before being decoded. For example, an input string of \"&amp;amp;#xD84C;\" would decode as U+D84C, which is an unpaired surrogate. Additionally, the decoder does not understand code points in the SMP unless they're represented as HTML-encoded surrogates, so the inputstring \"&amp;#144308;\" would result in the output string \"&amp;#144308;\".\n  syntax:\n    content: Compat\n    return:\n      type: System.Net.Configuration.UnicodeDecodingConformance\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.UnicodeDecodingConformance.Loose\n  id: Loose\n  parent: System.Net.Configuration.UnicodeDecodingConformance\n  langs:\n  - csharp\n  name: Loose\n  nameWithType: UnicodeDecodingConformance.Loose\n  fullName: System.Net.Configuration.UnicodeDecodingConformance.Loose\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Use loose behavior. Similar to Compat in that there are no validity checks, but the decoder also understands code points. The input string \"&amp;#144308;\" would decode into the character U+233B4 correctly. This switch is meant to provide maximum interoperability when the decoder doesn't know which format the provider is using to generate the encoded string.\n  syntax:\n    content: Loose\n    return:\n      type: System.Net.Configuration.UnicodeDecodingConformance\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Configuration.UnicodeDecodingConformance.Strict\n  id: Strict\n  parent: System.Net.Configuration.UnicodeDecodingConformance\n  langs:\n  - csharp\n  name: Strict\n  nameWithType: UnicodeDecodingConformance.Strict\n  fullName: System.Net.Configuration.UnicodeDecodingConformance.Strict\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Use strict behavior. Specifies that the incoming encoded data is checked for validity before being decoded. For example, an input string of \"&amp;#144308;\" would decode as U+233B4, but an input string of \"&amp;#xD84C;&amp;#xDFB4;\" would fail to decode properly. Already-decoded data in the string is not checked for validity. For example, an input string of \"\\ud800\" will result in an output string of \"\\ud800\", as the already-decoded surrogate is skipped during decoding, even though it is unpaired.\n  syntax:\n    content: Strict\n    return:\n      type: System.Net.Configuration.UnicodeDecodingConformance\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Net.Configuration.UnicodeDecodingConformance.Auto\n  parent: System.Net.Configuration.UnicodeDecodingConformance\n  isExternal: false\n  name: Auto\n  nameWithType: UnicodeDecodingConformance.Auto\n  fullName: System.Net.Configuration.UnicodeDecodingConformance.Auto\n- uid: System.Net.Configuration.UnicodeDecodingConformance\n  parent: System.Net.Configuration\n  isExternal: false\n  name: UnicodeDecodingConformance\n  nameWithType: UnicodeDecodingConformance\n  fullName: System.Net.Configuration.UnicodeDecodingConformance\n- uid: System.Net.Configuration.UnicodeDecodingConformance.Compat\n  parent: System.Net.Configuration.UnicodeDecodingConformance\n  isExternal: false\n  name: Compat\n  nameWithType: UnicodeDecodingConformance.Compat\n  fullName: System.Net.Configuration.UnicodeDecodingConformance.Compat\n- uid: System.Net.Configuration.UnicodeDecodingConformance.Loose\n  parent: System.Net.Configuration.UnicodeDecodingConformance\n  isExternal: false\n  name: Loose\n  nameWithType: UnicodeDecodingConformance.Loose\n  fullName: System.Net.Configuration.UnicodeDecodingConformance.Loose\n- uid: System.Net.Configuration.UnicodeDecodingConformance.Strict\n  parent: System.Net.Configuration.UnicodeDecodingConformance\n  isExternal: false\n  name: Strict\n  nameWithType: UnicodeDecodingConformance.Strict\n  fullName: System.Net.Configuration.UnicodeDecodingConformance.Strict\n"}