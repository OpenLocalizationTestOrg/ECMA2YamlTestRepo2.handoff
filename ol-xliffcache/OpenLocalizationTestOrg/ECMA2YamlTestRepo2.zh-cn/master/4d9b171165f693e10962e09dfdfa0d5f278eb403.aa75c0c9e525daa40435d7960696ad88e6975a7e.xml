{"nodes":[{"pos":[3080,3199],"content":"Provides the ability to control access to directory objects without direct manipulation of Access Control Lists (ACLs).","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the ability to control access to directory objects without direct manipulation of Access Control Lists (ACLs).","pos":[0,119]}]},{"pos":[7893,8008],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> class."},{"pos":[8844,8998],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified security descriptor.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> class with the specified security descriptor."},{"pos":[9264,9399],"content":"The security descriptor to be associated with the new <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>object.","needQuote":true,"needEscape":true,"source":"The security descriptor to be associated with the new <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref>object."},{"pos":[10727,10855],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class with the specified values."},{"pos":[11398,11555],"content":"The identity to which the access rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity to which the access rule applies.","pos":[0,46]},{"content":"It must be an object that can be cast as a <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[48,157],"source":"  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}]},{"pos":[11621,11771],"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[0,150],"nodes":[{"content":"The access mask of this rule.","pos":[0,29]},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[30,150]}]}]},{"pos":[11840,11895],"content":"true if this rule is inherited from a parent container.","needQuote":true,"needEscape":true,"nodes":[{"content":"true if this rule is inherited from a parent container.","pos":[0,55]}]},{"pos":[12001,12057],"content":"Specifies the inheritance properties of the access rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the inheritance properties of the access rule.","pos":[0,56]}]},{"pos":[12163,12368],"content":"Specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if `inheritanceFlags` is set to <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether inherited access rules are automatically propagated.","pos":[0,70]},{"content":"The propagation flags are ignored if <ph id=\"ph1\">`inheritanceFlags`</ph> is set to <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[71,205],"source":" The propagation flags are ignored if `inheritanceFlags` is set to <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref>."}]},{"pos":[12463,12503],"content":"Specifies the valid access control type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the valid access control type.","pos":[0,40]}]},{"pos":[12568,12642],"content":"The identity of the class of objects to which the new access rule applies.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity of the class of objects to which the new access rule applies.","pos":[0,74]}]},{"pos":[12716,12797],"content":"The identity of the class of child objects which can inherit the new access rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity of the class of child objects which can inherit the new access rule.","pos":[0,81]}]},{"pos":[12882,12980],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that this method creates.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object that this method creates."},{"pos":[13687,13869],"content":"Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."},{"pos":[13881,13962],"content":"Adding an access rule might cause existing access rules in the DACL to be merged.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adding an access rule might cause existing access rules in the DACL to be merged.","pos":[0,81]}]},{"pos":[14179,14202],"content":"The access rule to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to add.","pos":[0,23]}]},{"pos":[14895,15069],"content":"Adds the specified audit rule to the System Access Control List (SACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Adds the specified audit rule to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."},{"pos":[15081,15160],"content":"Adding an audit rule might cause existing audit rules in the SACL to be merged.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adding an audit rule might cause existing audit rules in the SACL to be merged.","pos":[0,79]}]},{"pos":[15374,15396],"content":"The audit rule to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to add.","pos":[0,22]}]},{"pos":[16691,16818],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class with the specified values."},{"pos":[17353,17509],"content":"The identity to which the audit rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity to which the audit rule applies.","pos":[0,45]},{"content":"It must be an object that can be cast as a <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[47,156],"source":"  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}]},{"pos":[17575,17725],"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[0,150],"nodes":[{"content":"The access mask of this rule.","pos":[0,29]},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[30,150]}]}]},{"pos":[17794,17905],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this rule is inherited from a parent container.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this rule is inherited from a parent container."},{"pos":[18011,18066],"content":"Specifies the inheritance properties of the audit rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the inheritance properties of the audit rule.","pos":[0,55]}]},{"pos":[18172,18376],"content":"Specifies whether inherited audit rules are automatically propagated. The propagation flags are ignored if `inheritanceFlags` is set to <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether inherited audit rules are automatically propagated.","pos":[0,69]},{"content":"The propagation flags are ignored if <ph id=\"ph1\">`inheritanceFlags`</ph> is set to <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[70,204],"source":" The propagation flags are ignored if `inheritanceFlags` is set to <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref>."}]},{"pos":[18465,18520],"content":"Specifies the conditions for which the rule is audited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the conditions for which the rule is audited.","pos":[0,55]}]},{"pos":[18585,18658],"content":"The identity of the class of objects to which the new audit rule applies.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity of the class of objects to which the new audit rule applies.","pos":[0,73]}]},{"pos":[18732,18812],"content":"The identity of the class of child objects which can inherit the new audit rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity of the class of child objects which can inherit the new audit rule.","pos":[0,80]}]},{"pos":[18896,18993],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that this method creates.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object that this method creates."},{"pos":[19706,19794],"content":"Gets a collection of the access rules associated with the specified security identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of the access rules associated with the specified security identifier.","pos":[0,88]}]},{"pos":[20050,20165],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to include access rules explicitly set for the object.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include access rules explicitly set for the object."},{"pos":[20239,20334],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to include inherited access rules.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include inherited access rules."},{"pos":[20399,20577],"content":"The security identifier for which to retrieve access rules. This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security identifier for which to retrieve access rules.","pos":[0,59]},{"content":"This must be an object that can be cast as a <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[60,178],"source":" This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}]},{"pos":[20679,20813],"content":"The collection of access rules associated with the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The collection of access rules associated with the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"pos":[21519,21606],"content":"Gets a collection of the audit rules associated with the specified security identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of the audit rules associated with the specified security identifier.","pos":[0,87]}]},{"pos":[21861,21975],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to include audit rules explicitly set for the object.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include audit rules explicitly set for the object."},{"pos":[22049,22143],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to include inherited audit rules.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include inherited audit rules."},{"pos":[22208,22385],"content":"The security identifier for which to retrieve audit rules. This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security identifier for which to retrieve audit rules.","pos":[0,58]},{"content":"This must be an object that can be cast as a <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[59,177],"source":" This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}]},{"pos":[22487,22620],"content":"The collection of audit rules associated with the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The collection of audit rules associated with the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"pos":[23534,23720],"content":"Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."},{"pos":[24045,24083],"content":"The modification to apply to the DACL.","needQuote":true,"needEscape":true,"nodes":[{"content":"The modification to apply to the DACL.","pos":[0,38]}]},{"pos":[24171,24197],"content":"The access rule to modify.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to modify.","pos":[0,26]}]},{"pos":[24263,24436],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the DACL is successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24495,24668],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the DACL is successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25571,25750],"content":"Applies the specified modification to the System Access Control List (SACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."},{"pos":[26073,26111],"content":"The modification to apply to the SACL.","needQuote":true,"needEscape":true,"nodes":[{"content":"The modification to apply to the SACL.","pos":[0,38]}]},{"pos":[26198,26223],"content":"The audit rule to modify.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to modify.","pos":[0,25]}]},{"pos":[26289,26462],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the SACL is successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[26521,26694],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the SACL is successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[27410,27671],"content":"Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."},{"pos":[27684,27992],"content":"Access removal is accomplished by using a complex algorithm that might add access control rules in addition to removing them.       This method fails to remove the access rule and returns `false` if the inheritance rules associated with the access rule are too complex for the removal algorithm to succeed.","needQuote":false,"needEscape":true,"nodes":[{"content":"Access removal is accomplished by using a complex algorithm that might add access control rules in addition to removing them.","pos":[0,125]},{"content":"This method fails to remove the access rule and returns <ph id=\"ph1\">`false`</ph> if the inheritance rules associated with the access rule are too complex for the removal algorithm to succeed.","pos":[132,306],"source":"       This method fails to remove the access rule and returns `false` if the inheritance rules associated with the access rule are too complex for the removal algorithm to succeed."}]},{"pos":[28213,28239],"content":"The access rule to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to remove.","pos":[0,26]}]},{"pos":[28298,28478],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the access rule was successfully removed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the access rule was successfully removed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[29214,29460],"content":"Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."},{"pos":[29683,29709],"content":"The access rule to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to remove.","pos":[0,26]}]},{"pos":[30473,30696],"content":"Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."},{"pos":[30924,30950],"content":"The access rule to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to remove.","pos":[0,26]}]},{"pos":[31669,31918],"content":"Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object."},{"pos":[31931,32235],"content":"Audit removal is accomplished by using a complex algorithm that might add audit control rules in addition to removing them.       This method fails to remove the audit rule and returns `false` if the inheritance rules associated with the audit rule are too complex for the removal algorithm to succeed.","needQuote":false,"needEscape":true,"nodes":[{"content":"Audit removal is accomplished by using a complex algorithm that might add audit control rules in addition to removing them.","pos":[0,123]},{"content":"This method fails to remove the audit rule and returns <ph id=\"ph1\">`false`</ph> if the inheritance rules associated with the audit rule are too complex for the removal algorithm to succeed.","pos":[130,302],"source":"       This method fails to remove the audit rule and returns `false` if the inheritance rules associated with the audit rule are too complex for the removal algorithm to succeed."}]},{"pos":[32453,32478],"content":"The audit rule to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]},{"pos":[32537,32716],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the audit rule was successfully removed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the audit rule was successfully removed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[33441,33678],"content":"Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."},{"pos":[33898,33923],"content":"The audit rule to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]},{"pos":[34676,34890],"content":"Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."},{"pos":[35115,35140],"content":"The audit rule to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]},{"pos":[35863,36079],"content":"Removes all access rules in the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and then adds the specified access rule.","needQuote":true,"needEscape":true,"source":"Removes all access rules in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object and then adds the specified access rule."},{"pos":[36298,36323],"content":"The access rule to reset.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to reset.","pos":[0,25]}]},{"pos":[37028,37329],"content":"Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and then adds the specified access rule.","needQuote":true,"needEscape":true,"source":"Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object and then adds the specified access rule."},{"pos":[37546,37569],"content":"The access rule to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to set.","pos":[0,23]}]},{"pos":[38262,38553],"content":"Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and then adds the specified audit rule.","needQuote":true,"needEscape":true,"source":"Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object and then adds the specified audit rule."},{"pos":[38767,38789],"content":"The audit rule to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to set.","pos":[0,22]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.DirectoryObjectSecurity\n  id: DirectoryObjectSecurity\n  children:\n  - System.Security.AccessControl.DirectoryObjectSecurity.#ctor\n  - System.Security.AccessControl.DirectoryObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  - System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  - System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  - System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  langs:\n  - csharp\n  name: DirectoryObjectSecurity\n  nameWithType: DirectoryObjectSecurity\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity\n  type: Class\n  summary: Provides the ability to control access to directory objects without direct manipulation of Access Control Lists (ACLs).\n  syntax:\n    content: 'public abstract class DirectoryObjectSecurity : System.Security.AccessControl.ObjectSecurity'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.ObjectSecurity\n  implements: []\n  inheritedMembers:\n  - System.Security.AccessControl.ObjectSecurity.AccessRightType\n  - System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GroupModified\n  - System.Security.AccessControl.ObjectSecurity.IsContainer\n  - System.Security.AccessControl.ObjectSecurity.IsDS\n  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.OwnerModified\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.ReadLock\n  - System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.WriteLock\n  - System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor\n  id: '#ctor'\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: DirectoryObjectSecurity()\n  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity()\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.DirectoryObjectSecurity()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> class.\n  syntax:\n    content: protected DirectoryObjectSecurity ();\n    parameters: []\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  id: '#ctor(System.Security.AccessControl.CommonSecurityDescriptor)'\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: DirectoryObjectSecurity(CommonSecurityDescriptor)\n  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity(CommonSecurityDescriptor)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.DirectoryObjectSecurity(CommonSecurityDescriptor)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> class with the specified security descriptor.\n  syntax:\n    content: protected DirectoryObjectSecurity (System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);\n    parameters:\n    - id: securityDescriptor\n      type: System.Security.AccessControl.CommonSecurityDescriptor\n      description: The security descriptor to be associated with the new <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref>object.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)\n  nameWithType: DirectoryObjectSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class with the specified values.\n  syntax:\n    content: public virtual System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type, Guid objectType, Guid inheritedObjectType);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: The identity to which the access rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.\n    - id: isInherited\n      type: System.Boolean\n      description: true if this rule is inherited from a parent container.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Specifies the inheritance properties of the access rule.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if `inheritanceFlags` is set to <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref>.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Specifies the valid access control type.\n    - id: objectType\n      type: System.Guid\n      description: The identity of the class of objects to which the new access rule applies.\n    - id: inheritedObjectType\n      type: System.Guid\n      description: The identity of the class of child objects which can inherit the new access rule.\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object that this method creates.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  id: AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: AddAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.AddAccessRule(ObjectAccessRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(ObjectAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  remarks: Adding an access rule might cause existing access rules in the DACL to be merged.\n  syntax:\n    content: protected void AddAccessRule (System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The access rule to add.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  id: AddAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: AddAuditRule(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.AddAuditRule(ObjectAuditRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(ObjectAuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds the specified audit rule to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  remarks: Adding an audit rule might cause existing audit rules in the SACL to be merged.\n  syntax:\n    content: protected void AddAuditRule (System.Security.AccessControl.ObjectAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: The audit rule to add.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)\n  nameWithType: DirectoryObjectSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class with the specified values.\n  syntax:\n    content: public virtual System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags, Guid objectType, Guid inheritedObjectType);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: The identity to which the audit rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.\n    - id: isInherited\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this rule is inherited from a parent container.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Specifies the inheritance properties of the audit rule.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Specifies whether inherited audit rules are automatically propagated. The propagation flags are ignored if `inheritanceFlags` is set to <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref>.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: Specifies the conditions for which the rule is audited.\n    - id: objectType\n      type: System.Guid\n      description: The identity of the class of objects to which the new audit rule applies.\n    - id: inheritedObjectType\n      type: System.Guid\n      description: The identity of the class of child objects which can inherit the new audit rule.\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object that this method creates.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  id: GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: GetAccessRules(Boolean,Boolean,Type)\n  nameWithType: DirectoryObjectSecurity.GetAccessRules(Boolean,Boolean,Type)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(Boolean,Boolean,Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a collection of the access rules associated with the specified security identifier.\n  syntax:\n    content: public System.Security.AccessControl.AuthorizationRuleCollection GetAccessRules (bool includeExplicit, bool includeInherited, Type targetType);\n    parameters:\n    - id: includeExplicit\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include access rules explicitly set for the object.\n    - id: includeInherited\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include inherited access rules.\n    - id: targetType\n      type: System.Type\n      description: The security identifier for which to retrieve access rules. This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n    return:\n      type: System.Security.AccessControl.AuthorizationRuleCollection\n      description: The collection of access rules associated with the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  id: GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: GetAuditRules(Boolean,Boolean,Type)\n  nameWithType: DirectoryObjectSecurity.GetAuditRules(Boolean,Boolean,Type)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(Boolean,Boolean,Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a collection of the audit rules associated with the specified security identifier.\n  syntax:\n    content: public System.Security.AccessControl.AuthorizationRuleCollection GetAuditRules (bool includeExplicit, bool includeInherited, Type targetType);\n    parameters:\n    - id: includeExplicit\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include audit rules explicitly set for the object.\n    - id: includeInherited\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include inherited audit rules.\n    - id: targetType\n      type: System.Type\n      description: The security identifier for which to retrieve audit rules. This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n    return:\n      type: System.Security.AccessControl.AuthorizationRuleCollection\n      description: The collection of audit rules associated with the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  id: ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: ModifyAccess(AccessControlModification,AccessRule,Boolean)\n  nameWithType: DirectoryObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  syntax:\n    content: protected override bool ModifyAccess (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: The modification to apply to the DACL.\n    - id: rule\n      type: System.Security.AccessControl.AccessRule\n      description: The access rule to modify.\n    - id: modified\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  id: ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: ModifyAudit(AccessControlModification,AuditRule,Boolean)\n  nameWithType: DirectoryObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  syntax:\n    content: protected override bool ModifyAudit (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: The modification to apply to the SACL.\n    - id: rule\n      type: System.Security.AccessControl.AuditRule\n      description: The audit rule to modify.\n    - id: modified\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  id: RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: RemoveAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRule(ObjectAccessRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(ObjectAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  remarks: \"Access removal is accomplished by using a complex algorithm that might add access control rules in addition to removing them.  \\n  \\n This method fails to remove the access rule and returns `false` if the inheritance rules associated with the access rule are too complex for the removal algorithm to succeed.\"\n  syntax:\n    content: protected bool RemoveAccessRule (System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The access rule to remove.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the access rule was successfully removed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)\n  id: RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: RemoveAccessRuleAll(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleAll(ObjectAccessRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(ObjectAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  syntax:\n    content: protected void RemoveAccessRuleAll (System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The access rule to remove.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)\n  id: RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: RemoveAccessRuleSpecific(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleSpecific(ObjectAccessRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(ObjectAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  syntax:\n    content: protected void RemoveAccessRuleSpecific (System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The access rule to remove.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  id: RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: RemoveAuditRule(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRule(ObjectAuditRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(ObjectAuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object.\n  remarks: \"Audit removal is accomplished by using a complex algorithm that might add audit control rules in addition to removing them.  \\n  \\n This method fails to remove the audit rule and returns `false` if the inheritance rules associated with the audit rule are too complex for the removal algorithm to succeed.\"\n  syntax:\n    content: protected bool RemoveAuditRule (System.Security.AccessControl.ObjectAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: The audit rule to remove.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the audit rule was successfully removed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)\n  id: RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: RemoveAuditRuleAll(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleAll(ObjectAuditRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(ObjectAuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  syntax:\n    content: protected void RemoveAuditRuleAll (System.Security.AccessControl.ObjectAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: The audit rule to remove.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)\n  id: RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: RemoveAuditRuleSpecific(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleSpecific(ObjectAuditRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(ObjectAuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  syntax:\n    content: protected void RemoveAuditRuleSpecific (System.Security.AccessControl.ObjectAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: The audit rule to remove.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  id: ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: ResetAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.ResetAccessRule(ObjectAccessRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(ObjectAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object and then adds the specified access rule.\n  syntax:\n    content: protected void ResetAccessRule (System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The access rule to reset.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  id: SetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: SetAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.SetAccessRule(ObjectAccessRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(ObjectAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object and then adds the specified access rule.\n  syntax:\n    content: protected void SetAccessRule (System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The access rule to set.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  id: SetAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: SetAuditRule(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.SetAuditRule(ObjectAuditRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(ObjectAuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object and then adds the specified audit rule.\n  syntax:\n    content: protected void SetAuditRule (System.Security.AccessControl.ObjectAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: The audit rule to set.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: System.Security.AccessControl.ObjectSecurity\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: DirectoryObjectSecurity()\n  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity()\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.DirectoryObjectSecurity()\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: DirectoryObjectSecurity(CommonSecurityDescriptor)\n  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity(CommonSecurityDescriptor)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.DirectoryObjectSecurity(CommonSecurityDescriptor)\n- uid: System.Security.AccessControl.CommonSecurityDescriptor\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CommonSecurityDescriptor\n  nameWithType: CommonSecurityDescriptor\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)\n  nameWithType: DirectoryObjectSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  nameWithType: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: AddAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.AddAccessRule(ObjectAccessRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(ObjectAccessRule)\n- uid: System.Security.AccessControl.ObjectAccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectAccessRule\n  nameWithType: ObjectAccessRule\n  fullName: System.Security.AccessControl.ObjectAccessRule\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: AddAuditRule(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.AddAuditRule(ObjectAuditRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(ObjectAuditRule)\n- uid: System.Security.AccessControl.ObjectAuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectAuditRule\n  nameWithType: ObjectAuditRule\n  fullName: System.Security.AccessControl.ObjectAuditRule\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)\n  nameWithType: DirectoryObjectSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  nameWithType: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: GetAccessRules(Boolean,Boolean,Type)\n  nameWithType: DirectoryObjectSecurity.GetAccessRules(Boolean,Boolean,Type)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(Boolean,Boolean,Type)\n- uid: System.Security.AccessControl.AuthorizationRuleCollection\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuthorizationRuleCollection\n  nameWithType: AuthorizationRuleCollection\n  fullName: System.Security.AccessControl.AuthorizationRuleCollection\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: GetAuditRules(Boolean,Boolean,Type)\n  nameWithType: DirectoryObjectSecurity.GetAuditRules(Boolean,Boolean,Type)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(Boolean,Boolean,Type)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: ModifyAccess(AccessControlModification,AccessRule,Boolean)\n  nameWithType: DirectoryObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)\n- uid: System.Security.AccessControl.AccessControlModification\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlModification\n  nameWithType: AccessControlModification\n  fullName: System.Security.AccessControl.AccessControlModification\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: ModifyAudit(AccessControlModification,AuditRule,Boolean)\n  nameWithType: DirectoryObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRule(ObjectAccessRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleAll(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleAll(ObjectAccessRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleSpecific(ObjectAccessRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAuditRule(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRule(ObjectAuditRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(ObjectAuditRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleAll(ObjectAuditRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(ObjectAuditRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleSpecific(ObjectAuditRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(ObjectAuditRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: ResetAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.ResetAccessRule(ObjectAccessRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: SetAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.SetAccessRule(ObjectAccessRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: SetAuditRule(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.SetAuditRule(ObjectAuditRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(ObjectAuditRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: DirectoryObjectSecurity\n  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: AccessRuleFactory\n  nameWithType: DirectoryObjectSecurity.AccessRuleFactory\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: AddAccessRule\n  nameWithType: DirectoryObjectSecurity.AddAccessRule\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: AddAuditRule\n  nameWithType: DirectoryObjectSecurity.AddAuditRule\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: AuditRuleFactory\n  nameWithType: DirectoryObjectSecurity.AuditRuleFactory\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: GetAccessRules\n  nameWithType: DirectoryObjectSecurity.GetAccessRules\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: GetAuditRules\n  nameWithType: DirectoryObjectSecurity.GetAuditRules\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: ModifyAccess\n  nameWithType: DirectoryObjectSecurity.ModifyAccess\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: ModifyAudit\n  nameWithType: DirectoryObjectSecurity.ModifyAudit\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAccessRule\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRule\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleAll\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleAll\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleSpecific\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAuditRule\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRule\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleAll\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleSpecific\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: ResetAccessRule\n  nameWithType: DirectoryObjectSecurity.ResetAccessRule\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: SetAccessRule\n  nameWithType: DirectoryObjectSecurity.SetAccessRule\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: SetAuditRule\n  nameWithType: DirectoryObjectSecurity.SetAuditRule\n"}