{"nodes":[{"pos":[1238,1327],"content":"A service behavior that controls when idle workflow instances are unloaded and persisted.","needQuote":true,"needEscape":true,"nodes":[{"content":"A service behavior that controls when idle workflow instances are unloaded and persisted.","pos":[0,89]}]},{"pos":[1340,2067],"content":"> [!IMPORTANT] >  When <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A> is set to a value greater than the value of <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist%2A> and the workflow then goes idle (because of a Delay activity) if the workflow instance has not changed it will be removed from memory by calling Abort, rather than going through the normal unloading process.. This is a runtime optimization and no data is lost, but a developer looking at trace log may see an Abort trace when expecting an Unload trace.       For an example of how to use this behavior see [Workflow Service Host Extensibility](~/add/includes/ajax-current-ext-md.md)","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!IMPORTANT]</ph> &gt;  When &lt;xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A&gt; is set to a value greater than the value of &lt;xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist%2A&gt; and the workflow then goes idle (because of a Delay activity) if the workflow instance has not changed it will be removed from memory by calling Abort, rather than going through the normal unloading process..","pos":[0,450],"source":"> [!IMPORTANT] >  When <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A> is set to a value greater than the value of <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist%2A> and the workflow then goes idle (because of a Delay activity) if the workflow instance has not changed it will be removed from memory by calling Abort, rather than going through the normal unloading process.."},{"content":"This is a runtime optimization and no data is lost, but a developer looking at trace log may see an Abort trace when expecting an Unload trace.","pos":[451,594]},{"content":"For an example of how to use this behavior see <bpt id=\"p1\">[</bpt>Workflow Service Host Extensibility<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>","pos":[601,724],"source":"       For an example of how to use this behavior see [Workflow Service Host Extensibility](~/add/includes/ajax-current-ext-md.md)"}]},{"pos":[2836,2955],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Activities.Description.WorkflowIdleBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Activities.Description.WorkflowIdleBehavior\"></xref>."},{"pos":[4424,4557],"content":"Implements the &lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A?displayProperty=fullName&gt; method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the <ph id=\"ph1\">&amp;lt;</ph>xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method.","pos":[0,133],"source":"Implements the &lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A?displayProperty=fullName&gt; method."}]},{"pos":[5044,5068],"content":"The service description.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service description.","pos":[0,24]}]},{"pos":[5162,5179],"content":"The service host.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service host.","pos":[0,17]}]},{"pos":[5322,5359],"content":"The endpoints exposed by the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The endpoints exposed by the service.","pos":[0,37]}]},{"pos":[5475,5533],"content":"The binding parameters required to implement the behavior.","needQuote":true,"needEscape":true,"nodes":[{"content":"The binding parameters required to implement the behavior.","pos":[0,58]}]},{"pos":[6489,6623],"content":"Implements the &lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A?displayProperty=fullName&gt; method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the <ph id=\"ph1\">&amp;lt;</ph>xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method.","pos":[0,134],"source":"Implements the &lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A?displayProperty=fullName&gt; method."}]},{"pos":[6934,6958],"content":"The service description.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service description.","pos":[0,24]}]},{"pos":[7052,7069],"content":"The service host.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service host.","pos":[0,17]}]},{"pos":[7704,7839],"content":"Gets or sets a value that specifies the <xref:System.TimeSpan> that occurs between the time the workflow becomes idle and is persisted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies the &lt;xref:System.TimeSpan&gt; that occurs between the time the workflow becomes idle and is persisted.","pos":[0,135],"source":"Gets or sets a value that specifies the <xref:System.TimeSpan> that occurs between the time the workflow becomes idle and is persisted."}]},{"pos":[7851,8933],"content":"The <xref:System.TimeSpan> begins to elapse when the workflow instance becomes idle. This property is useful if you want to persist a workflow instance more aggressively while still keeping the instance in memory for as long as possible. The default value for this property is <xref:System.TimeSpan>. The TimeToPersist property is only valid if its value is less than <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A>. If it is greater, it is ignored. If the <xref:System.TimeSpan> specified by TimeToPersist elapses before the <xref:System.TimeSpan> specified by <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A>, persistence must complete before the workflow is unloaded. This implies that the unload operation may be delayed until the workflow is persisted. The persistence layer is responsible for handling any retries for transient errors and only throws exceptions on non-recoverable errors. Therefore, any exceptions thrown during persistence are treated as fatal and the workflow instance is aborted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.TimeSpan> begins to elapse when the workflow instance becomes idle. This property is useful if you want to persist a workflow instance more aggressively while still keeping the instance in memory for as long as possible. The default value for this property is <xref:System.TimeSpan>. The TimeToPersist property is only valid if its value is less than <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A>. If it is greater, it is ignored. If the <xref:System.TimeSpan> specified by TimeToPersist elapses before the <xref:System.TimeSpan> specified by <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A>, persistence must complete before the workflow is unloaded. This implies that the unload operation may be delayed until the workflow is persisted. The persistence layer is responsible for handling any retries for transient errors and only throws exceptions on non-recoverable errors. Therefore, any exceptions thrown during persistence are treated as fatal and the workflow instance is aborted.","pos":[0,1082],"nodes":[{"content":"The &lt;xref:System.TimeSpan&gt; begins to elapse when the workflow instance becomes idle.","pos":[0,84],"source":"The <xref:System.TimeSpan> begins to elapse when the workflow instance becomes idle."},{"content":"This property is useful if you want to persist a workflow instance more aggressively while still keeping the instance in memory for as long as possible.","pos":[85,237]},{"content":"The default value for this property is &lt;xref:System.TimeSpan&gt;.","pos":[238,300],"source":" The default value for this property is <xref:System.TimeSpan>."},{"content":"The TimeToPersist property is only valid if its value is less than &lt;xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A&gt;.","pos":[301,455],"source":" The TimeToPersist property is only valid if its value is less than <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A>."},{"content":"If it is greater, it is ignored.","pos":[456,488]},{"content":"If the &lt;xref:System.TimeSpan&gt; specified by TimeToPersist elapses before the &lt;xref:System.TimeSpan&gt; specified by &lt;xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A&gt;, persistence must complete before the workflow is unloaded.","pos":[489,747],"source":" If the <xref:System.TimeSpan> specified by TimeToPersist elapses before the <xref:System.TimeSpan> specified by <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A>, persistence must complete before the workflow is unloaded."},{"content":"This implies that the unload operation may be delayed until the workflow is persisted.","pos":[748,834]},{"content":"The persistence layer is responsible for handling any retries for transient errors and only throws exceptions on non-recoverable errors.","pos":[835,971]},{"content":"Therefore, any exceptions thrown during persistence are treated as fatal and the workflow instance is aborted.","pos":[972,1082]}]}]},{"pos":[9060,9121],"content":"The time span used to determine when a workflow is persisted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time span used to determine when a workflow is persisted.","pos":[0,61]}]},{"pos":[9743,9873],"content":"Gets or sets a value that specifies the <xref:System.TimeSpan> that occurs between the time workflow becomes idle and is unloaded.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies the &lt;xref:System.TimeSpan&gt; that occurs between the time workflow becomes idle and is unloaded.","pos":[0,130],"source":"Gets or sets a value that specifies the <xref:System.TimeSpan> that occurs between the time workflow becomes idle and is unloaded."}]},{"pos":[9885,10229],"content":"The default value is 1 minute. Unloading a workflow implies that it is also persisted. If TimeToUnload is set to zero the workflow instance is persisted and unloaded immediately after the workflow becomes idle. Setting TimeToUnload to <xref:System.TimeSpan> effectively disables the unload operation. Idle workflow instances are never unloaded.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default value is 1 minute. Unloading a workflow implies that it is also persisted. If TimeToUnload is set to zero the workflow instance is persisted and unloaded immediately after the workflow becomes idle. Setting TimeToUnload to <xref:System.TimeSpan> effectively disables the unload operation. Idle workflow instances are never unloaded.","pos":[0,344],"nodes":[{"content":"The default value is 1 minute.","pos":[0,30]},{"content":"Unloading a workflow implies that it is also persisted.","pos":[31,86]},{"content":"If TimeToUnload is set to zero the workflow instance is persisted and unloaded immediately after the workflow becomes idle.","pos":[87,210]},{"content":"Setting TimeToUnload to &lt;xref:System.TimeSpan&gt; effectively disables the unload operation.","pos":[211,300],"source":" Setting TimeToUnload to <xref:System.TimeSpan> effectively disables the unload operation."},{"content":"Idle workflow instances are never unloaded.","pos":[301,344]}]}]},{"pos":[10355,10415],"content":"The time span used to determine when a workflow is unloaded.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time span used to determine when a workflow is unloaded.","pos":[0,60]}]},{"pos":[11298,11419],"content":"Implements the &lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A?displayProperty=fullName&gt; method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the <ph id=\"ph1\">&amp;lt;</ph>xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> method.","pos":[0,121],"source":"Implements the &lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A?displayProperty=fullName&gt; method."}]},{"pos":[11717,11741],"content":"The service description.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service description.","pos":[0,24]}]},{"pos":[11835,11852],"content":"The service host.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service host.","pos":[0,17]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  id: WorkflowIdleBehavior\n  children:\n  - System.ServiceModel.Activities.Description.WorkflowIdleBehavior.#ctor\n  - System.ServiceModel.Activities.Description.WorkflowIdleBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Activities.Description.WorkflowIdleBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)\n  - System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist\n  - System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload\n  - System.ServiceModel.Activities.Description.WorkflowIdleBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)\n  langs:\n  - csharp\n  name: WorkflowIdleBehavior\n  nameWithType: WorkflowIdleBehavior\n  fullName: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  type: Class\n  summary: A service behavior that controls when idle workflow instances are unloaded and persisted.\n  remarks: \"> [!IMPORTANT]\\n>  When <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A> is set to a value greater than the value of <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist%2A> and the workflow then goes idle (because of a Delay activity) if the workflow instance has not changed it will be removed from memory by calling Abort, rather than going through the normal unloading process.. This is a runtime optimization and no data is lost, but a developer looking at trace log may see an Abort trace when expecting an Unload trace.  \\n  \\n For an example of how to use this behavior see [Workflow Service Host Extensibility](~/add/includes/ajax-current-ext-md.md)\"\n  syntax:\n    content: 'public class WorkflowIdleBehavior : System.ServiceModel.Description.IServiceBehavior'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ServiceModel.Description.IServiceBehavior\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  langs:\n  - csharp\n  name: WorkflowIdleBehavior()\n  nameWithType: WorkflowIdleBehavior.WorkflowIdleBehavior()\n  fullName: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.WorkflowIdleBehavior()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities.Description\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Activities.Description.WorkflowIdleBehavior\"></xref>.\n  syntax:\n    content: public WorkflowIdleBehavior ();\n    parameters: []\n  overload: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)\n  id: AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  langs:\n  - csharp\n  name: AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)\n  nameWithType: WorkflowIdleBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)\n  fullName: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities.Description\n  summary: Implements the &lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A?displayProperty=fullName&gt; method.\n  syntax:\n    content: public void AddBindingParameters (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint> endpoints, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);\n    parameters:\n    - id: serviceDescription\n      type: System.ServiceModel.Description.ServiceDescription\n      description: The service description.\n    - id: serviceHostBase\n      type: System.ServiceModel.ServiceHostBase\n      description: The service host.\n    - id: endpoints\n      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}\n      description: The endpoints exposed by the service.\n    - id: bindingParameters\n      type: System.ServiceModel.Channels.BindingParameterCollection\n      description: The binding parameters required to implement the behavior.\n  overload: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.AddBindingParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)\n  id: ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  langs:\n  - csharp\n  name: ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)\n  nameWithType: WorkflowIdleBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)\n  fullName: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities.Description\n  summary: Implements the &lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A?displayProperty=fullName&gt; method.\n  syntax:\n    content: public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);\n    parameters:\n    - id: serviceDescription\n      type: System.ServiceModel.Description.ServiceDescription\n      description: The service description.\n    - id: serviceHostBase\n      type: System.ServiceModel.ServiceHostBase\n      description: The service host.\n  overload: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.ApplyDispatchBehavior*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist\n  id: TimeToPersist\n  parent: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  langs:\n  - csharp\n  name: TimeToPersist\n  nameWithType: WorkflowIdleBehavior.TimeToPersist\n  fullName: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist\n  type: Property\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities.Description\n  summary: Gets or sets a value that specifies the <xref:System.TimeSpan> that occurs between the time the workflow becomes idle and is persisted.\n  remarks: The <xref:System.TimeSpan> begins to elapse when the workflow instance becomes idle. This property is useful if you want to persist a workflow instance more aggressively while still keeping the instance in memory for as long as possible. The default value for this property is <xref:System.TimeSpan>. The TimeToPersist property is only valid if its value is less than <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A>. If it is greater, it is ignored. If the <xref:System.TimeSpan> specified by TimeToPersist elapses before the <xref:System.TimeSpan> specified by <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A>, persistence must complete before the workflow is unloaded. This implies that the unload operation may be delayed until the workflow is persisted. The persistence layer is responsible for handling any retries for transient errors and only throws exceptions on non-recoverable errors. Therefore, any exceptions thrown during persistence are treated as fatal and the workflow instance is aborted.\n  syntax:\n    content: public TimeSpan TimeToPersist { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The time span used to determine when a workflow is persisted.\n  overload: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload\n  id: TimeToUnload\n  parent: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  langs:\n  - csharp\n  name: TimeToUnload\n  nameWithType: WorkflowIdleBehavior.TimeToUnload\n  fullName: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload\n  type: Property\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities.Description\n  summary: Gets or sets a value that specifies the <xref:System.TimeSpan> that occurs between the time workflow becomes idle and is unloaded.\n  remarks: The default value is 1 minute. Unloading a workflow implies that it is also persisted. If TimeToUnload is set to zero the workflow instance is persisted and unloaded immediately after the workflow becomes idle. Setting TimeToUnload to <xref:System.TimeSpan> effectively disables the unload operation. Idle workflow instances are never unloaded.\n  syntax:\n    content: public TimeSpan TimeToUnload { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The time span used to determine when a workflow is unloaded.\n  overload: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)\n  id: Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  langs:\n  - csharp\n  name: Validate(ServiceDescription,ServiceHostBase)\n  nameWithType: WorkflowIdleBehavior.Validate(ServiceDescription,ServiceHostBase)\n  fullName: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.Validate(ServiceDescription,ServiceHostBase)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities.Description\n  summary: Implements the &lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A?displayProperty=fullName&gt; method.\n  syntax:\n    content: public void Validate (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);\n    parameters:\n    - id: serviceDescription\n      type: System.ServiceModel.Description.ServiceDescription\n      description: The service description.\n    - id: serviceHostBase\n      type: System.ServiceModel.ServiceHostBase\n      description: The service host.\n  overload: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.Validate*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.#ctor\n  parent: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  isExternal: false\n  name: WorkflowIdleBehavior()\n  nameWithType: WorkflowIdleBehavior.WorkflowIdleBehavior()\n  fullName: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.WorkflowIdleBehavior()\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  isExternal: false\n  name: AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)\n  nameWithType: WorkflowIdleBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)\n  fullName: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)\n- uid: System.ServiceModel.Description.ServiceDescription\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: ServiceDescription\n  nameWithType: ServiceDescription\n  fullName: System.ServiceModel.Description.ServiceDescription\n- uid: System.ServiceModel.ServiceHostBase\n  parent: System.ServiceModel\n  isExternal: false\n  name: ServiceHostBase\n  nameWithType: ServiceHostBase\n  fullName: System.ServiceModel.ServiceHostBase\n- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<ServiceEndpoint>\n  nameWithType: Collection<ServiceEndpoint>\n  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.ServiceModel.Description.ServiceEndpoint>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Description.ServiceEndpoint\n    name: ServiceEndpoint\n    nameWithType: ServiceEndpoint\n    fullName: ServiceEndpoint\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Channels.BindingParameterCollection\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: BindingParameterCollection\n  nameWithType: BindingParameterCollection\n  fullName: System.ServiceModel.Channels.BindingParameterCollection\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  isExternal: false\n  name: ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)\n  nameWithType: WorkflowIdleBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)\n  fullName: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist\n  parent: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  isExternal: false\n  name: TimeToPersist\n  nameWithType: WorkflowIdleBehavior.TimeToPersist\n  fullName: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload\n  parent: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  isExternal: false\n  name: TimeToUnload\n  nameWithType: WorkflowIdleBehavior.TimeToUnload\n  fullName: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  isExternal: false\n  name: Validate(ServiceDescription,ServiceHostBase)\n  nameWithType: WorkflowIdleBehavior.Validate(ServiceDescription,ServiceHostBase)\n  fullName: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.Validate(ServiceDescription,ServiceHostBase)\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.#ctor*\n  parent: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  isExternal: false\n  name: WorkflowIdleBehavior\n  nameWithType: WorkflowIdleBehavior.WorkflowIdleBehavior\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.AddBindingParameters*\n  parent: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  isExternal: false\n  name: AddBindingParameters\n  nameWithType: WorkflowIdleBehavior.AddBindingParameters\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.ApplyDispatchBehavior*\n  parent: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  isExternal: false\n  name: ApplyDispatchBehavior\n  nameWithType: WorkflowIdleBehavior.ApplyDispatchBehavior\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist*\n  parent: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  isExternal: false\n  name: TimeToPersist\n  nameWithType: WorkflowIdleBehavior.TimeToPersist\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload*\n  parent: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  isExternal: false\n  name: TimeToUnload\n  nameWithType: WorkflowIdleBehavior.TimeToUnload\n- uid: System.ServiceModel.Activities.Description.WorkflowIdleBehavior.Validate*\n  parent: System.ServiceModel.Activities.Description.WorkflowIdleBehavior\n  isExternal: false\n  name: Validate\n  nameWithType: WorkflowIdleBehavior.Validate\n"}