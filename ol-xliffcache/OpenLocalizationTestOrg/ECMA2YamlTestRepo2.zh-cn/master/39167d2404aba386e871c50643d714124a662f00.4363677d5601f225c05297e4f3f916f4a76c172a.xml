{"nodes":[{"pos":[431,484],"content":"Represents a statement using a literal code fragment.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a statement using a literal code fragment.","pos":[0,53]}]},{"pos":[497,1122],"content":"CodeSnippetStatement can represent a statement using a literal code fragment that will be included directly in the source without modification.       A CodeSnippetStatement stores a section of code exactly in its original format as a string. The CodeDOM does not translate literal code fragments. Literal code fragments are stored and output in their original format. CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.       The <xref:System.CodeDom.CodeSnippetStatement.Value%2A> property contains the literal code for the snippet statement.","needQuote":false,"needEscape":true,"nodes":[{"content":"CodeSnippetStatement can represent a statement using a literal code fragment that will be included directly in the source without modification.       A CodeSnippetStatement stores a section of code exactly in its original format as a string. The CodeDOM does not translate literal code fragments. Literal code fragments are stored and output in their original format. CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.       The <xref:System.CodeDom.CodeSnippetStatement.Value%2A> property contains the literal code for the snippet statement.","pos":[0,621],"nodes":[{"content":"CodeSnippetStatement can represent a statement using a literal code fragment that will be included directly in the source without modification.","pos":[0,143]},{"content":"A CodeSnippetStatement stores a section of code exactly in its original format as a string.","pos":[150,241]},{"content":"The CodeDOM does not translate literal code fragments.","pos":[242,296]},{"content":"Literal code fragments are stored and output in their original format.","pos":[297,367]},{"content":"CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.","pos":[368,497]},{"content":"The &lt;xref:System.CodeDom.CodeSnippetStatement.Value%2A&gt; property contains the literal code for the snippet statement.","pos":[504,621],"source":"       The <xref:System.CodeDom.CodeSnippetStatement.Value%2A> property contains the literal code for the snippet statement."}]}]},{"pos":[2564,2661],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeSnippetStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeSnippetStatement\"></xref> class."},{"pos":[3254,3385],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeSnippetStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified code fragment.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeSnippetStatement\"></xref> class using the specified code fragment."},{"pos":[4023,4079],"content":"The literal code fragment of the statement to represent.","needQuote":true,"needEscape":true,"nodes":[{"content":"The literal code fragment of the statement to represent.","pos":[0,56]}]},{"pos":[4494,4543],"content":"Gets or sets the literal code fragment statement.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the literal code fragment statement.","pos":[0,49]}]},{"pos":[4658,4694],"content":"The literal code fragment statement.","needQuote":true,"needEscape":true,"nodes":[{"content":"The literal code fragment statement.","pos":[0,36]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeSnippetStatement\n  id: CodeSnippetStatement\n  children:\n  - System.CodeDom.CodeSnippetStatement.#ctor\n  - System.CodeDom.CodeSnippetStatement.#ctor(System.String)\n  - System.CodeDom.CodeSnippetStatement.Value\n  langs:\n  - csharp\n  name: CodeSnippetStatement\n  nameWithType: CodeSnippetStatement\n  fullName: System.CodeDom.CodeSnippetStatement\n  type: Class\n  summary: Represents a statement using a literal code fragment.\n  remarks: \"CodeSnippetStatement can represent a statement using a literal code fragment that will be included directly in the source without modification.  \\n  \\n A CodeSnippetStatement stores a section of code exactly in its original format as a string. The CodeDOM does not translate literal code fragments. Literal code fragments are stored and output in their original format. CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.  \\n  \\n The <xref:System.CodeDom.CodeSnippetStatement.Value%2A> property contains the literal code for the snippet statement.\"\n  example:\n  - \"The following example creates an instance of the CodeSnippetStatement class using a literal code fragment. This code example is part of a larger example provided for the <xref:System.CodeDom.CodeRegionDirective> class.  \\n  \\n [!code-vb[System.CodeDom.CodeDirectives#16](~/add/codesnippet/visualbasic/t-system.codedom.codesni_2_1.vb)]\\n [!code-cs[System.CodeDom.CodeDirectives#16](~/add/codesnippet/csharp/t-system.codedom.codesni_2_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeSnippetStatement : System.CodeDom.CodeStatement\n  inheritance:\n  - System.Object\n  - System.CodeDom.CodeObject\n  - System.CodeDom.CodeStatement\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.CodeObject.UserData\n  - System.CodeDom.CodeStatement.EndDirectives\n  - System.CodeDom.CodeStatement.LinePragma\n  - System.CodeDom.CodeStatement.StartDirectives\n  platform:\n  - net462\n- uid: System.CodeDom.CodeSnippetStatement.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeSnippetStatement\n  langs:\n  - csharp\n  name: CodeSnippetStatement()\n  nameWithType: CodeSnippetStatement.CodeSnippetStatement()\n  fullName: System.CodeDom.CodeSnippetStatement.CodeSnippetStatement()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeSnippetStatement\"></xref> class.\n  syntax:\n    content: public CodeSnippetStatement ();\n    parameters: []\n  overload: System.CodeDom.CodeSnippetStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeSnippetStatement.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.CodeDom.CodeSnippetStatement\n  langs:\n  - csharp\n  name: CodeSnippetStatement(String)\n  nameWithType: CodeSnippetStatement.CodeSnippetStatement(String)\n  fullName: System.CodeDom.CodeSnippetStatement.CodeSnippetStatement(String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeSnippetStatement\"></xref> class using the specified code fragment.\n  remarks: ''\n  example:\n  - \"The following example creates an instance of the <xref:System.CodeDom.CodeSnippetStatement> class using a literal code fragment. This code example is part of a larger example provided for the <xref:System.CodeDom.CodeRegionDirective> class.  \\n  \\n [!code-vb[System.CodeDom.CodeDirectives#16](~/add/codesnippet/visualbasic/m-system.codedom.codesni_3_1.vb)]\\n [!code-cs[System.CodeDom.CodeDirectives#16](~/add/codesnippet/csharp/m-system.codedom.codesni_3_1.cs)]\"\n  syntax:\n    content: public CodeSnippetStatement (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The literal code fragment of the statement to represent.\n  overload: System.CodeDom.CodeSnippetStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeSnippetStatement.Value\n  id: Value\n  parent: System.CodeDom.CodeSnippetStatement\n  langs:\n  - csharp\n  name: Value\n  nameWithType: CodeSnippetStatement.Value\n  fullName: System.CodeDom.CodeSnippetStatement.Value\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the literal code fragment statement.\n  syntax:\n    content: public string Value { get; set; }\n    return:\n      type: System.String\n      description: The literal code fragment statement.\n  overload: System.CodeDom.CodeSnippetStatement.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.CodeDom.CodeStatement\n  isExternal: false\n  name: System.CodeDom.CodeStatement\n- uid: System.CodeDom.CodeSnippetStatement.#ctor\n  parent: System.CodeDom.CodeSnippetStatement\n  isExternal: false\n  name: CodeSnippetStatement()\n  nameWithType: CodeSnippetStatement.CodeSnippetStatement()\n  fullName: System.CodeDom.CodeSnippetStatement.CodeSnippetStatement()\n- uid: System.CodeDom.CodeSnippetStatement.#ctor(System.String)\n  parent: System.CodeDom.CodeSnippetStatement\n  isExternal: false\n  name: CodeSnippetStatement(String)\n  nameWithType: CodeSnippetStatement.CodeSnippetStatement(String)\n  fullName: System.CodeDom.CodeSnippetStatement.CodeSnippetStatement(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.CodeDom.CodeSnippetStatement.Value\n  parent: System.CodeDom.CodeSnippetStatement\n  isExternal: false\n  name: Value\n  nameWithType: CodeSnippetStatement.Value\n  fullName: System.CodeDom.CodeSnippetStatement.Value\n- uid: System.CodeDom.CodeSnippetStatement.#ctor*\n  parent: System.CodeDom.CodeSnippetStatement\n  isExternal: false\n  name: CodeSnippetStatement\n  nameWithType: CodeSnippetStatement.CodeSnippetStatement\n- uid: System.CodeDom.CodeSnippetStatement.Value*\n  parent: System.CodeDom.CodeSnippetStatement\n  isExternal: false\n  name: Value\n  nameWithType: CodeSnippetStatement.Value\n"}