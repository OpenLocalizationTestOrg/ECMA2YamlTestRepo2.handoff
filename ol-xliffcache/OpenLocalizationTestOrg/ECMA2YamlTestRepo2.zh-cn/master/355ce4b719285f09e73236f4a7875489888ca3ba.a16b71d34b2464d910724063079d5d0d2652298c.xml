{"nodes":[{"pos":[474,567],"content":"Provides a mechanism for enumerating all available OLE DB providers within the local network.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a mechanism for enumerating all available OLE DB providers within the local network.","pos":[0,93]}]},{"pos":[1080,1168],"content":"Creates an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbEnumerator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates an instance of the <xref href=\"System.Data.OleDb.OleDbEnumerator\"></xref> class."},{"pos":[1681,1797],"content":"Retrieves a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains information about all visible OLE DB providers.","needQuote":true,"needEscape":true,"source":"Retrieves a <xref href=\"System.Data.DataTable\"></xref> that contains information about all visible OLE DB providers."},{"pos":[1810,3236],"content":"The table that is returned by this method contains the following columns, all of which contain strings:      |Column Ordinal|Column|Description|   |--------------------|------------|-----------------|   |0|SOURCES_NAME|The invariant name of the native OLEDB data source or enumerator.|   |1|SOURCES_PARSENAME|A human-readable name that can be converted to a moniker by using the native COM interface IParseDisplayName. Corresponds to the SOURCES_PARSENAME column returned by the native OLE DB sources rowset.|   |2|SOURCES_DESCRIPTION|Description of the native OLE DB data source. Corresponds to the SOURCES_DESCRIPTION column returned by the native OLE DB sources rowset.|   |3|SOURCES_TYPE|One of the following enumeration members: Binder (0), DataSource_MDP (1), DataSource_TDP (2), Enumerator (3). These correspond to the values returned in the SOURCES_TYPE column of the native OLE DB sources rowset.|   |4|SOURCES_ISPARENT|Applicable to enumerators only. If `true`, indicates that the entry applies to the same enumerator on which GetSourcesRowset was called, implying that it is also included in the sub-enumeration. Corresponds to the SOURCES_ISPARENT column of the native OLE DB sources rowset|   |5|SOURCES_CLSID|A human-readable name, that can be converted to a moniker using the native COM interface IParseDisplayName. Corresponds to the SOURCES_CLSID column returned by the native OLE DB sources rowset.|","needQuote":false,"needEscape":true,"nodes":[{"content":"The table that is returned by this method contains the following columns, all of which contain strings:      |Column Ordinal|Column|Description|   |--------------------|------------|-----------------|   |0|SOURCES_NAME|The invariant name of the native OLEDB data source or enumerator.|   |1|SOURCES_PARSENAME|A human-readable name that can be converted to a moniker by using the native COM interface IParseDisplayName.","pos":[0,418]},{"content":"Corresponds to the SOURCES_PARSENAME column returned by the native OLE DB sources rowset.|   |2|SOURCES_DESCRIPTION|Description of the native OLE DB data source.","pos":[419,580]},{"content":"Corresponds to the SOURCES_DESCRIPTION column returned by the native OLE DB sources rowset.|   |3|SOURCES_TYPE|One of the following enumeration members: Binder (0), DataSource_MDP (1), DataSource_TDP (2), Enumerator (3).","pos":[581,801]},{"content":"These correspond to the values returned in the SOURCES_TYPE column of the native OLE DB sources rowset.|   |4|SOURCES_ISPARENT|Applicable to enumerators only.","pos":[802,960]},{"content":"If <ph id=\"ph1\">`true`</ph>, indicates that the entry applies to the same enumerator on which GetSourcesRowset was called, implying that it is also included in the sub-enumeration.","pos":[961,1123],"source":" If `true`, indicates that the entry applies to the same enumerator on which GetSourcesRowset was called, implying that it is also included in the sub-enumeration."},{"content":"Corresponds to the SOURCES_ISPARENT column of the native OLE DB sources rowset|   |5|SOURCES_CLSID|A human-readable name, that can be converted to a moniker using the native COM interface IParseDisplayName.","pos":[1124,1330]},{"content":"Corresponds to the SOURCES_CLSID column returned by the native OLE DB sources rowset.|","pos":[1331,1417]}]},{"pos":[4943,5057],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains information about the visible OLE DB providers.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Data.DataTable\"></xref> that contains information about the visible OLE DB providers."},{"pos":[5231,5276],"content":"The provider does not support ISourcesRowset.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provider does not support ISourcesRowset.","pos":[0,45]}]},{"pos":[5387,5437],"content":"Exception has occurred in the underlying provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exception has occurred in the underlying provider.","pos":[0,50]}]},{"pos":[5859,6133],"content":"Uses a specific OLE DB enumerator to return an <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains information about the currently installed OLE DB providers, without requiring an instance of the <bpt id=\"p2\">&lt;xref href=\"System.Data.OleDb.OleDbEnumerator\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Uses a specific OLE DB enumerator to return an <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> that contains information about the currently installed OLE DB providers, without requiring an instance of the <xref href=\"System.Data.OleDb.OleDbEnumerator\"></xref> class."},{"pos":[6146,7676],"content":"The reader that is returned by this method contains the following columns, all of which contain strings:      |Column ordinal|Column|Description|   |--------------------|------------|-----------------|   |0|SOURCES_NAME|The invariant name of the native OLE DB data source or enumerator.|   |1|SOURCES_PARSENAME|A human-readable name that can be converted to a moniker by using the native COM interface **IParseDisplayName**. Corresponds to the SOURCES_PARSENAME column returned by the native OLE DB sources rowset.|   |2|SOURCES_DESCRIPTION|Description of the native OLE DB data source. Corresponds to the SOURCES_DESCRIPTION column returned by the native OLE DB sources rowset.|   |3|SOURCES_TYPE|One of the following enumeration members: Binder (0), DataSource_MDP (1), DataSource_TDP (2), Enumerator (3). These correspond to the values returned in the SOURCES_TYPE column of the native OLE DB sources rowset.|   |4|SOURCES_ISPARENT|Applicable to enumerators only. If `true`, indicates that the entry applies to the same enumerator on which **GetSourcesRowset** was called, implying that it is also included in the sub-enumeration. Corresponds to the SOURCES_ISPARENT column of the native OLE DB sources rowset|       OLE DB provides several enumerator components, including MSDAENUM, MSDASQL Enumerator, SQLNCLI Enumerator, SQLOLEDB Enumerator, and others. For more information about the enumerator components and how to use them, see the [OLE DB Programmer's Reference](http://go.microsoft.com/fwlink/?LinkId=45232).","needQuote":false,"needEscape":true,"nodes":[{"content":"The reader that is returned by this method contains the following columns, all of which contain strings:      |Column ordinal|Column|Description|   |--------------------|------------|-----------------|   |0|SOURCES_NAME|The invariant name of the native OLE DB data source or enumerator.|   |1|SOURCES_PARSENAME|A human-readable name that can be converted to a moniker by using the native COM interface <bpt id=\"p1\">**</bpt>IParseDisplayName<ept id=\"p1\">**</ept>.","pos":[0,424],"source":"The reader that is returned by this method contains the following columns, all of which contain strings:      |Column ordinal|Column|Description|   |--------------------|------------|-----------------|   |0|SOURCES_NAME|The invariant name of the native OLE DB data source or enumerator.|   |1|SOURCES_PARSENAME|A human-readable name that can be converted to a moniker by using the native COM interface **IParseDisplayName**."},{"content":"Corresponds to the SOURCES_PARSENAME column returned by the native OLE DB sources rowset.|   |2|SOURCES_DESCRIPTION|Description of the native OLE DB data source.","pos":[425,586]},{"content":"Corresponds to the SOURCES_DESCRIPTION column returned by the native OLE DB sources rowset.|   |3|SOURCES_TYPE|One of the following enumeration members: Binder (0), DataSource_MDP (1), DataSource_TDP (2), Enumerator (3).","pos":[587,807]},{"content":"These correspond to the values returned in the SOURCES_TYPE column of the native OLE DB sources rowset.|   |4|SOURCES_ISPARENT|Applicable to enumerators only.","pos":[808,966]},{"content":"If <ph id=\"ph1\">`true`</ph>, indicates that the entry applies to the same enumerator on which <bpt id=\"p1\">**</bpt>GetSourcesRowset<ept id=\"p1\">**</ept> was called, implying that it is also included in the sub-enumeration.","pos":[967,1133],"source":" If `true`, indicates that the entry applies to the same enumerator on which **GetSourcesRowset** was called, implying that it is also included in the sub-enumeration."},{"content":"Corresponds to the SOURCES_ISPARENT column of the native OLE DB sources rowset|       OLE DB provides several enumerator components, including MSDAENUM, MSDASQL Enumerator, SQLNCLI Enumerator, SQLOLEDB Enumerator, and others.","pos":[1134,1359]},{"content":"For more information about the enumerator components and how to use them, see the <bpt id=\"p1\">[</bpt>OLE DB Programmer's Reference<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=45232)</ept>.","pos":[1360,1520],"source":" For more information about the enumerator components and how to use them, see the [OLE DB Programmer's Reference](http://go.microsoft.com/fwlink/?LinkId=45232)."}]},{"pos":[9541,9562],"content":"A <xref:System.Type>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt;.","pos":[0,21],"source":"A <xref:System.Type>."}]},{"pos":[9640,9808],"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains information about the requested OLE DB providers, using the specified OLE DB enumerator.","needQuote":true,"needEscape":true,"source":"Returns an <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> that contains information about the requested OLE DB providers, using the specified OLE DB enumerator."},{"pos":[9984,10033],"content":"The provider does not support <bpt id=\"p1\">**</bpt>ISourcesRowset<ept id=\"p1\">**</ept>.","needQuote":true,"needEscape":true,"source":"The provider does not support **ISourcesRowset**."},{"pos":[10144,10197],"content":"An exception has occurred in the underlying provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"An exception has occurred in the underlying provider.","pos":[0,53]}]},{"pos":[10601,10839],"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains information about the currently installed OLE DB providers, without requiring an instance of the <bpt id=\"p2\">&lt;xref href=\"System.Data.OleDb.OleDbEnumerator\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Returns an <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> that contains information about the currently installed OLE DB providers, without requiring an instance of the <xref href=\"System.Data.OleDb.OleDbEnumerator\"></xref> class."},{"pos":[10852,12268],"content":"The reader returned by this method contains the following columns, all of which contain strings:      |Column Ordinal|Column|Description|   |--------------------|------------|-----------------|   |0|SOURCES_NAME|The invariant name of the native OLEDB data source or enumerator.|   |1|SOURCES_PARSENAME|A human-readable name that can be converted to a moniker using the native COM interface IParseDisplayName. Corresponds to the SOURCES_PARSENAME column returned by the native OLE DB sources rowset.|   |2|SOURCES_DESCRIPTION|Description of the native OLE DB data source. Corresponds to the SOURCES_DESCRIPTION column returned by the native OLE DB sources rowset.|   |3|SOURCES_TYPE|One of the following enumeration members: Binder (0), DataSource_MDP (1), DataSource_TDP (2), Enumerator (3). These correspond to the values returned in the SOURCES_TYPE column of the native OLE DB sources rowset.|   |4|SOURCES_ISPARENT|Applicable to enumerators only. If `true`, indicates that the entry applies to the same enumerator on which GetSourcesRowset was called, implying that it is also included in the sub-enumeration. Corresponds to the SOURCES_ISPARENT column of the native OLE DB sources rowset|   |5|SOURCES_CLSID|A human-readable name, that can be converted to a moniker using the native COM interface IParseDisplayName. Corresponds to the SOURCES_CLSID column returned by the native OLE DB sources rowset.|","needQuote":false,"needEscape":true,"nodes":[{"content":"The reader returned by this method contains the following columns, all of which contain strings:      |Column Ordinal|Column|Description|   |--------------------|------------|-----------------|   |0|SOURCES_NAME|The invariant name of the native OLEDB data source or enumerator.|   |1|SOURCES_PARSENAME|A human-readable name that can be converted to a moniker using the native COM interface IParseDisplayName.","pos":[0,408]},{"content":"Corresponds to the SOURCES_PARSENAME column returned by the native OLE DB sources rowset.|   |2|SOURCES_DESCRIPTION|Description of the native OLE DB data source.","pos":[409,570]},{"content":"Corresponds to the SOURCES_DESCRIPTION column returned by the native OLE DB sources rowset.|   |3|SOURCES_TYPE|One of the following enumeration members: Binder (0), DataSource_MDP (1), DataSource_TDP (2), Enumerator (3).","pos":[571,791]},{"content":"These correspond to the values returned in the SOURCES_TYPE column of the native OLE DB sources rowset.|   |4|SOURCES_ISPARENT|Applicable to enumerators only.","pos":[792,950]},{"content":"If <ph id=\"ph1\">`true`</ph>, indicates that the entry applies to the same enumerator on which GetSourcesRowset was called, implying that it is also included in the sub-enumeration.","pos":[951,1113],"source":" If `true`, indicates that the entry applies to the same enumerator on which GetSourcesRowset was called, implying that it is also included in the sub-enumeration."},{"content":"Corresponds to the SOURCES_ISPARENT column of the native OLE DB sources rowset|   |5|SOURCES_CLSID|A human-readable name, that can be converted to a moniker using the native COM interface IParseDisplayName.","pos":[1114,1320]},{"content":"Corresponds to the SOURCES_CLSID column returned by the native OLE DB sources rowset.|","pos":[1321,1407]}]},{"pos":[14045,14171],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains information about the visible OLE DB providers.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> that contains information about the visible OLE DB providers."},{"pos":[14351,14396],"content":"The provider does not support ISourcesRowset.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provider does not support ISourcesRowset.","pos":[0,45]}]},{"pos":[14507,14557],"content":"Exception has occurred in the underlying provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exception has occurred in the underlying provider.","pos":[0,50]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.OleDb.OleDbEnumerator\n  id: OleDbEnumerator\n  children:\n  - System.Data.OleDb.OleDbEnumerator.#ctor\n  - System.Data.OleDb.OleDbEnumerator.GetElements\n  - System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)\n  - System.Data.OleDb.OleDbEnumerator.GetRootEnumerator\n  langs:\n  - csharp\n  name: OleDbEnumerator\n  nameWithType: OleDbEnumerator\n  fullName: System.Data.OleDb.OleDbEnumerator\n  type: Class\n  summary: Provides a mechanism for enumerating all available OLE DB providers within the local network.\n  syntax:\n    content: public sealed class OleDbEnumerator\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbEnumerator.#ctor\n  id: '#ctor'\n  parent: System.Data.OleDb.OleDbEnumerator\n  langs:\n  - csharp\n  name: OleDbEnumerator()\n  nameWithType: OleDbEnumerator.OleDbEnumerator()\n  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Creates an instance of the <xref href=\"System.Data.OleDb.OleDbEnumerator\"></xref> class.\n  syntax:\n    content: public OleDbEnumerator ();\n    parameters: []\n  overload: System.Data.OleDb.OleDbEnumerator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbEnumerator.GetElements\n  id: GetElements\n  parent: System.Data.OleDb.OleDbEnumerator\n  langs:\n  - csharp\n  name: GetElements()\n  nameWithType: OleDbEnumerator.GetElements()\n  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Retrieves a <xref href=\"System.Data.DataTable\"></xref> that contains information about all visible OLE DB providers.\n  remarks: \"The table that is returned by this method contains the following columns, all of which contain strings:  \\n  \\n|Column Ordinal|Column|Description|  \\n|--------------------|------------|-----------------|  \\n|0|SOURCES_NAME|The invariant name of the native OLEDB data source or enumerator.|  \\n|1|SOURCES_PARSENAME|A human-readable name that can be converted to a moniker by using the native COM interface IParseDisplayName. Corresponds to the SOURCES_PARSENAME column returned by the native OLE DB sources rowset.|  \\n|2|SOURCES_DESCRIPTION|Description of the native OLE DB data source. Corresponds to the SOURCES_DESCRIPTION column returned by the native OLE DB sources rowset.|  \\n|3|SOURCES_TYPE|One of the following enumeration members: Binder (0), DataSource_MDP (1), DataSource_TDP (2), Enumerator (3). These correspond to the values returned in the SOURCES_TYPE column of the native OLE DB sources rowset.|  \\n|4|SOURCES_ISPARENT|Applicable to enumerators only. If `true`, indicates that the entry applies to the same enumerator on which GetSourcesRowset was called, implying that it is also included in the sub-enumeration. Corresponds to the SOURCES_ISPARENT column of the native OLE DB sources rowset|  \\n|5|SOURCES_CLSID|A human-readable name, that can be converted to a moniker using the native COM interface IParseDisplayName. Corresponds to the SOURCES_CLSID column returned by the native OLE DB sources rowset.|\"\n  example:\n  - \"The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \\n  \\n```vb#  \\nImports System.Data  \\nImports System.Data.OleDb  \\n  \\nModule Module1  \\n  \\nSub Main()  \\n  Dim enumerator As New OleDbEnumerator  \\n  Dim table As System.Data.DataTable = enumerator.GetElements()  \\n  \\n  DisplayData(table)  \\n  \\n   Console.WriteLine(\\\"Press any key to continue.\\\")  \\n   Console.ReadKey()  \\n End Sub  \\n  \\n Private Sub DisplayData(ByVal table As DataTable)  \\n   For Each row As DataRow In table.Rows  \\n     For Each col As DataColumn In table.Columns  \\n       Console.WriteLine(\\\"{0} = {1}\\\", col.ColumnName, row(col))  \\n     Next  \\n     Console.WriteLine(\\\"==================================\\\")  \\n   Next  \\n End Sub  \\nEnd Module  \\n```  \\n  \\n```c#  \\nusing System;  \\nusing System.Data;  \\nusing System.Data.OleDb;  \\n  \\nclass Program  \\n{  \\n static void Main()  \\n {  \\n   OleDbEnumerator enumerator = new OleDbEnumerator();  \\n   DataTable table = enumerator.GetElements();  \\n  \\n   DisplayData(table);  \\n  \\n   Console.WriteLine(\\\"Press any key to continue.\\\");  \\n   Console.ReadKey();  \\n }  \\n  \\n static void DisplayData(DataTable table)  \\n {  \\n   foreach (DataRow row in table.Rows)  \\n   {  \\n     foreach (DataColumn col in table.Columns)  \\n     {  \\n       Console.WriteLine(\\\"{0} = {1}\\\", col.ColumnName, row[col]);  \\n     }  \\n     Console.WriteLine(\\\"==================================\\\");  \\n   }  \\n }  \\n}  \\n```\"\n  syntax:\n    content: public System.Data.DataTable GetElements ();\n    parameters: []\n    return:\n      type: System.Data.DataTable\n      description: Returns a <xref href=\"System.Data.DataTable\"></xref> that contains information about the visible OLE DB providers.\n  overload: System.Data.OleDb.OleDbEnumerator.GetElements*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The provider does not support ISourcesRowset.\n  - type: System.Data.OleDb.OleDbException\n    commentId: T:System.Data.OleDb.OleDbException\n    description: Exception has occurred in the underlying provider.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)\n  id: GetEnumerator(System.Type)\n  parent: System.Data.OleDb.OleDbEnumerator\n  langs:\n  - csharp\n  name: GetEnumerator(Type)\n  nameWithType: OleDbEnumerator.GetEnumerator(Type)\n  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Uses a specific OLE DB enumerator to return an <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> that contains information about the currently installed OLE DB providers, without requiring an instance of the <xref href=\"System.Data.OleDb.OleDbEnumerator\"></xref> class.\n  remarks: \"The reader that is returned by this method contains the following columns, all of which contain strings:  \\n  \\n|Column ordinal|Column|Description|  \\n|--------------------|------------|-----------------|  \\n|0|SOURCES_NAME|The invariant name of the native OLE DB data source or enumerator.|  \\n|1|SOURCES_PARSENAME|A human-readable name that can be converted to a moniker by using the native COM interface **IParseDisplayName**. Corresponds to the SOURCES_PARSENAME column returned by the native OLE DB sources rowset.|  \\n|2|SOURCES_DESCRIPTION|Description of the native OLE DB data source. Corresponds to the SOURCES_DESCRIPTION column returned by the native OLE DB sources rowset.|  \\n|3|SOURCES_TYPE|One of the following enumeration members: Binder (0), DataSource_MDP (1), DataSource_TDP (2), Enumerator (3). These correspond to the values returned in the SOURCES_TYPE column of the native OLE DB sources rowset.|  \\n|4|SOURCES_ISPARENT|Applicable to enumerators only. If `true`, indicates that the entry applies to the same enumerator on which **GetSourcesRowset** was called, implying that it is also included in the sub-enumeration. Corresponds to the SOURCES_ISPARENT column of the native OLE DB sources rowset|  \\n  \\n OLE DB provides several enumerator components, including MSDAENUM, MSDASQL Enumerator, SQLNCLI Enumerator, SQLOLEDB Enumerator, and others. For more information about the enumerator components and how to use them, see the [OLE DB Programmer's Reference](http://go.microsoft.com/fwlink/?LinkId=45232).\"\n  example:\n  - \"The following console application uses the MSDAENUM component to retrieve information about all the OLE DB providers and displays the information in the console window.  \\n  \\n```vb#  \\nImports System.Data  \\nImports System.Data.OleDb  \\n  \\nModule Module1  \\n  \\n  Sub Main()  \\n    Dim enumerator As New OleDbEnumerator  \\n    Dim reader As OleDbDataReader = _  \\n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\\\"MSDAENUM\\\"))  \\n  \\n    DisplayData(reader)  \\n  \\n    Console.WriteLine(\\\"Press any key to continue.\\\")  \\n    Console.ReadKey()  \\n  End Sub  \\n  \\n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \\n    While reader.Read()  \\n      For i As Integer = 0 To reader.FieldCount - 1  \\n        Console.WriteLine(\\\"{0} = {1}\\\", _  \\n         reader.GetName(i), reader.GetValue(i))  \\n      Next  \\n      Console.WriteLine(\\\"==================================\\\")  \\n    End While  \\n  \\n  End Sub  \\nEnd Module  \\n```  \\n  \\n```c#  \\nusing System;  \\nusing System.Data;  \\nusing System.Data.OleDb;  \\n  \\nclass Program  \\n{  \\n static void Main()  \\n {  \\n   OleDbDataReader reader =   \\n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\\\"MSDAENUM\\\"));  \\n  \\n   DisplayData(reader);  \\n  \\n   Console.WriteLine(\\\"Press any key to continue.\\\");  \\n   Console.ReadKey();  \\n }  \\n  \\n static void DisplayData(OleDbDataReader reader)  \\n {  \\n   while (reader.Read())  \\n   {  \\n     for (int i = 0; i < reader.FieldCount; i++)  \\n     {  \\n       Console.WriteLine(\\\"{0} = {1}\\\",  \\n        reader.GetName(i), reader.GetValue(i));  \\n     }  \\n     Console.WriteLine(\\\"==================================\\\");  \\n   }  \\n }  \\n}  \\n```\"\n  syntax:\n    content: public static System.Data.OleDb.OleDbDataReader GetEnumerator (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: A <xref:System.Type>.\n    return:\n      type: System.Data.OleDb.OleDbDataReader\n      description: Returns an <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> that contains information about the requested OLE DB providers, using the specified OLE DB enumerator.\n  overload: System.Data.OleDb.OleDbEnumerator.GetEnumerator*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The provider does not support **ISourcesRowset**.\n  - type: System.Data.OleDb.OleDbException\n    commentId: T:System.Data.OleDb.OleDbException\n    description: An exception has occurred in the underlying provider.\n  platform:\n  - net462\n- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator\n  id: GetRootEnumerator\n  parent: System.Data.OleDb.OleDbEnumerator\n  langs:\n  - csharp\n  name: GetRootEnumerator()\n  nameWithType: OleDbEnumerator.GetRootEnumerator()\n  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Returns an <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> that contains information about the currently installed OLE DB providers, without requiring an instance of the <xref href=\"System.Data.OleDb.OleDbEnumerator\"></xref> class.\n  remarks: \"The reader returned by this method contains the following columns, all of which contain strings:  \\n  \\n|Column Ordinal|Column|Description|  \\n|--------------------|------------|-----------------|  \\n|0|SOURCES_NAME|The invariant name of the native OLEDB data source or enumerator.|  \\n|1|SOURCES_PARSENAME|A human-readable name that can be converted to a moniker using the native COM interface IParseDisplayName. Corresponds to the SOURCES_PARSENAME column returned by the native OLE DB sources rowset.|  \\n|2|SOURCES_DESCRIPTION|Description of the native OLE DB data source. Corresponds to the SOURCES_DESCRIPTION column returned by the native OLE DB sources rowset.|  \\n|3|SOURCES_TYPE|One of the following enumeration members: Binder (0), DataSource_MDP (1), DataSource_TDP (2), Enumerator (3). These correspond to the values returned in the SOURCES_TYPE column of the native OLE DB sources rowset.|  \\n|4|SOURCES_ISPARENT|Applicable to enumerators only. If `true`, indicates that the entry applies to the same enumerator on which GetSourcesRowset was called, implying that it is also included in the sub-enumeration. Corresponds to the SOURCES_ISPARENT column of the native OLE DB sources rowset|  \\n|5|SOURCES_CLSID|A human-readable name, that can be converted to a moniker using the native COM interface IParseDisplayName. Corresponds to the SOURCES_CLSID column returned by the native OLE DB sources rowset.|\"\n  example:\n  - \"The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \\n  \\n```vb#  \\nImports System.Data  \\nImports System.Data.OleDb  \\n  \\nModule Module1  \\n  \\n  Sub Main()  \\n    Dim enumerator As New OleDbEnumerator  \\n    Dim reader As OleDbDataReader = OleDbEnumerator.GetRootEnumerator()  \\n  \\n    DisplayData(reader)  \\n  \\n    Console.WriteLine(\\\"Press any key to continue.\\\")  \\n    Console.ReadKey()  \\n  End Sub  \\n  \\n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \\n    While reader.Read()  \\n      For i As Integer = 0 To reader.FieldCount - 1  \\n        Console.WriteLine(\\\"{0} = {1}\\\", _  \\n         reader.GetName(i), reader.GetValue(i))  \\n      Next  \\n      Console.WriteLine(\\\"==================================\\\")  \\n    End While  \\n  \\n  End Sub  \\nEnd Module  \\n```  \\n  \\n```c#  \\nusing System;  \\nusing System.Data;  \\nusing System.Data.OleDb;  \\n  \\nclass Program  \\n{  \\n static void Main()  \\n {  \\n   OleDbDataReader reader = OleDbEnumerator.GetRootEnumerator();  \\n  \\n   DisplayData(reader);  \\n  \\n   Console.WriteLine(\\\"Press any key to continue.\\\");  \\n   Console.ReadKey();  \\n }  \\n  \\n static void DisplayData(OleDbDataReader reader)  \\n {  \\n   while (reader.Read())  \\n   {  \\n     for (int i = 0; i < reader.FieldCount; i++)  \\n     {  \\n       Console.WriteLine(\\\"{0} = {1}\\\",  \\n        reader.GetName(i), reader.GetValue(i));  \\n     }  \\n     Console.WriteLine(\\\"==================================\\\");  \\n   }  \\n }  \\n}  \\n```\"\n  syntax:\n    content: public static System.Data.OleDb.OleDbDataReader GetRootEnumerator ();\n    parameters: []\n    return:\n      type: System.Data.OleDb.OleDbDataReader\n      description: Returns a <xref href=\"System.Data.OleDb.OleDbDataReader\"></xref> that contains information about the visible OLE DB providers.\n  overload: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The provider does not support ISourcesRowset.\n  - type: System.Data.OleDb.OleDbException\n    commentId: T:System.Data.OleDb.OleDbException\n    description: Exception has occurred in the underlying provider.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.InvalidCastException\n  isExternal: true\n  name: System.InvalidCastException\n- uid: System.Data.OleDb.OleDbException\n  parent: System.Data.OleDb\n  isExternal: false\n  name: OleDbException\n  nameWithType: OleDbException\n  fullName: System.Data.OleDb.OleDbException\n- uid: System.Data.OleDb.OleDbEnumerator.#ctor\n  parent: System.Data.OleDb.OleDbEnumerator\n  isExternal: false\n  name: OleDbEnumerator()\n  nameWithType: OleDbEnumerator.OleDbEnumerator()\n  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()\n- uid: System.Data.OleDb.OleDbEnumerator.GetElements\n  parent: System.Data.OleDb.OleDbEnumerator\n  isExternal: false\n  name: GetElements()\n  nameWithType: OleDbEnumerator.GetElements()\n  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()\n- uid: System.Data.DataTable\n  parent: System.Data\n  isExternal: false\n  name: DataTable\n  nameWithType: DataTable\n  fullName: System.Data.DataTable\n- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)\n  parent: System.Data.OleDb.OleDbEnumerator\n  isExternal: false\n  name: GetEnumerator(Type)\n  nameWithType: OleDbEnumerator.GetEnumerator(Type)\n  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)\n- uid: System.Data.OleDb.OleDbDataReader\n  parent: System.Data.OleDb\n  isExternal: false\n  name: OleDbDataReader\n  nameWithType: OleDbDataReader\n  fullName: System.Data.OleDb.OleDbDataReader\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator\n  parent: System.Data.OleDb.OleDbEnumerator\n  isExternal: false\n  name: GetRootEnumerator()\n  nameWithType: OleDbEnumerator.GetRootEnumerator()\n  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()\n- uid: System.Data.OleDb.OleDbEnumerator.#ctor*\n  parent: System.Data.OleDb.OleDbEnumerator\n  isExternal: false\n  name: OleDbEnumerator\n  nameWithType: OleDbEnumerator.OleDbEnumerator\n- uid: System.Data.OleDb.OleDbEnumerator.GetElements*\n  parent: System.Data.OleDb.OleDbEnumerator\n  isExternal: false\n  name: GetElements\n  nameWithType: OleDbEnumerator.GetElements\n- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator*\n  parent: System.Data.OleDb.OleDbEnumerator\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: OleDbEnumerator.GetEnumerator\n- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*\n  parent: System.Data.OleDb.OleDbEnumerator\n  isExternal: false\n  name: GetRootEnumerator\n  nameWithType: OleDbEnumerator.GetRootEnumerator\n"}