{"nodes":[{"pos":[1986,2084],"content":"Represents a collection of <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ListSortDescription\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Represents a collection of <xref href=\"System.ComponentModel.ListSortDescription\"></xref> objects."},{"pos":[2097,2281],"content":"The ListSortDescriptionCollection class is used by the <xref:System.ComponentModel.IBindingListView> interface.       The ListSortDescriptionCollection is read-only once constructed.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ListSortDescriptionCollection class is used by the <xref:System.ComponentModel.IBindingListView> interface.       The ListSortDescriptionCollection is read-only once constructed.","pos":[0,182],"nodes":[{"content":"The ListSortDescriptionCollection class is used by the &lt;xref:System.ComponentModel.IBindingListView&gt; interface.","pos":[0,111],"source":"The ListSortDescriptionCollection class is used by the <xref:System.ComponentModel.IBindingListView> interface."},{"content":"The ListSortDescriptionCollection is read-only once constructed.","pos":[118,182]}]}]},{"pos":[2966,3079],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ListSortDescriptionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.ListSortDescriptionCollection\"></xref> class."},{"pos":[3091,3184],"content":"The <xref:System.ComponentModel.ListSortDescriptionCollection> is read-only once constructed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ComponentModel.ListSortDescriptionCollection&gt; is read-only once constructed.","pos":[0,93],"source":"The <xref:System.ComponentModel.ListSortDescriptionCollection> is read-only once constructed."}]},{"pos":[3998,4210],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ListSortDescriptionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified array of <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.ListSortDescription\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.ListSortDescriptionCollection\"></xref> class with the specified array of <xref href=\"System.ComponentModel.ListSortDescription\"></xref> objects."},{"pos":[4223,4332],"content":"The <xref:System.ComponentModel.ListSortDescriptionCollection> is read-only once constructed.       Example","needQuote":false,"needEscape":true,"nodes":[{"content":"The <xref:System.ComponentModel.ListSortDescriptionCollection> is read-only once constructed.       Example","pos":[0,107],"nodes":[{"content":"The &lt;xref:System.ComponentModel.ListSortDescriptionCollection&gt; is read-only once constructed.","pos":[0,93],"source":"The <xref:System.ComponentModel.ListSortDescriptionCollection> is read-only once constructed."},{"content":"Example","pos":[100,107]}]}]},{"pos":[4554,4672],"content":"The array of <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ListSortDescription\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to be contained in the collection.","needQuote":true,"needEscape":true,"source":"The array of <xref href=\"System.ComponentModel.ListSortDescription\"></xref> objects to be contained in the collection."},{"pos":[5234,5351],"content":"Determines if the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ListSortDescriptionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contains a specific value.","needQuote":true,"needEscape":true,"source":"Determines if the <xref href=\"System.ComponentModel.ListSortDescriptionCollection\"></xref> contains a specific value."},{"pos":[5489,5542],"content":"The <xref:System.Object> to locate in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to locate in the collection.","pos":[0,53],"source":"The <xref:System.Object> to locate in the collection."}]},{"pos":[5601,5792],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Object&gt; is found in the collection; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Object> is found in the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6386,6498],"content":"Copies the contents of the collection to the specified array, starting at the specified destination array index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the contents of the collection to the specified array, starting at the specified destination array index.","pos":[0,112]}]},{"pos":[6643,6706],"content":"The destination array for the items copied from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The destination array for the items copied from the collection.","pos":[0,63]}]},{"pos":[6767,6826],"content":"The index of the destination array at which copying begins.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the destination array at which copying begins.","pos":[0,59]}]},{"pos":[7322,7365],"content":"Gets the number of items in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of items in the collection.","pos":[0,43]}]},{"pos":[7471,7509],"content":"The number of items in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of items in the collection.","pos":[0,38]}]},{"pos":[8066,8124],"content":"Returns the index of the specified item in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the index of the specified item in the collection.","pos":[0,58]}]},{"pos":[8260,8313],"content":"The <xref:System.Object> to locate in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to locate in the collection.","pos":[0,53],"source":"The <xref:System.Object> to locate in the collection."}]},{"pos":[8370,8438],"content":"The index of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> if found in the list; otherwise, -1.","needQuote":true,"needEscape":true,"source":"The index of <code>value</code> if found in the list; otherwise, -1."},{"pos":[8979,9069],"content":"Gets or sets the specified <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ListSortDescription\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the specified <xref href=\"System.ComponentModel.ListSortDescription\"></xref>."},{"pos":[9081,9262],"content":"The <xref:System.ComponentModel.ListSortDescriptionCollection> is read-only once constructed and will throw an <xref:System.InvalidOperationException> if you attempt to set an item.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ComponentModel.ListSortDescriptionCollection&gt; is read-only once constructed and will throw an &lt;xref:System.InvalidOperationException&gt; if you attempt to set an item.","pos":[0,181],"source":"The <xref:System.ComponentModel.ListSortDescriptionCollection> is read-only once constructed and will throw an <xref:System.InvalidOperationException> if you attempt to set an item."}]},{"pos":[9441,9564],"content":"The zero-based index of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ListSortDescription\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to get or set in the collection.","needQuote":true,"needEscape":true,"source":"The zero-based index of the <xref href=\"System.ComponentModel.ListSortDescription\"></xref> to get or set in the collection."},{"pos":[9650,9742],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ListSortDescription\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified index.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.ListSortDescription\"></xref> with the specified index."},{"pos":[9937,10052],"content":"An item is set in the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ListSortDescriptionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which is read-only.","needQuote":true,"needEscape":true,"source":"An item is set in the <xref href=\"System.ComponentModel.ListSortDescriptionCollection\"></xref>, which is read-only."},{"pos":[10673,10745],"content":"Gets a value indicating whether access to the collection is thread safe.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether access to the collection is thread safe.","pos":[0,72]}]},{"pos":[10757,11068],"content":"This property always returns `true`, because once constructed, the collection is read-only. This member is an explicit interface member implementation. It can be used only when the <xref:System.ComponentModel.ListSortDescriptionCollection> instance is cast to an <xref:System.Collections.ICollection> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property always returns <ph id=\"ph1\">`true`</ph>, because once constructed, the collection is read-only.","pos":[0,91],"source":"This property always returns `true`, because once constructed, the collection is read-only."},{"content":"This member is an explicit interface member implementation.","pos":[92,151]},{"content":"It can be used only when the &lt;xref:System.ComponentModel.ListSortDescriptionCollection&gt; instance is cast to an &lt;xref:System.Collections.ICollection&gt; interface.","pos":[152,311],"source":" It can be used only when the <xref:System.ComponentModel.ListSortDescriptionCollection> instance is cast to an <xref:System.Collections.ICollection> interface."}]},{"pos":[11210,11285],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true \" name=\"true \" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>in all cases.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true \" name=\"true \" href=\"\"></xref>in all cases."},{"pos":[12004,12087],"content":"Gets the current instance that can be used to synchronize access to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the current instance that can be used to synchronize access to the collection.","pos":[0,83]}]},{"pos":[12100,12469],"content":"This implementation returns the current instance of the <xref:System.ComponentModel.ListSortDescriptionCollection>, because this collection, once constructed, does not allow public access to the underlying list.       For more information on the ICollection.SyncRoot method, see the <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"This implementation returns the current instance of the <xref:System.ComponentModel.ListSortDescriptionCollection>, because this collection, once constructed, does not allow public access to the underlying list.       For more information on the ICollection.SyncRoot method, see the <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> property.","pos":[0,367],"nodes":[{"content":"This implementation returns the current instance of the &lt;xref:System.ComponentModel.ListSortDescriptionCollection&gt;, because this collection, once constructed, does not allow public access to the underlying list.","pos":[0,211],"source":"This implementation returns the current instance of the <xref:System.ComponentModel.ListSortDescriptionCollection>, because this collection, once constructed, does not allow public access to the underlying list."},{"content":"For more information on the ICollection.SyncRoot method, see the &lt;xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName&gt; property.","pos":[218,367],"source":"       For more information on the ICollection.SyncRoot method, see the <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> property."}]}]},{"pos":[12607,12708],"content":"The current instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ListSortDescriptionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The current instance of the <xref href=\"System.ComponentModel.ListSortDescriptionCollection\"></xref>."},{"pos":[13450,13577],"content":"Gets a &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; that can be used to iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.IEnumerator?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> that can be used to iterate through the collection.","pos":[0,127],"source":"Gets a &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; that can be used to iterate through the collection."}]},{"pos":[13755,13847],"content":"An <xref:System.Collections.IEnumerator> that can be used to iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerator&gt; that can be used to iterate through the collection.","pos":[0,92],"source":"An <xref:System.Collections.IEnumerator> that can be used to iterate through the collection."}]},{"pos":[14562,14593],"content":"Adds an item to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an item to the collection.","pos":[0,31]}]},{"pos":[14605,14975],"content":"Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have an IList.Add method. However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, adding items to the collection is an invalid operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have an IList.Add method. However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, adding items to the collection is an invalid operation.","pos":[0,370],"nodes":[{"content":"Because the &lt;xref:System.ComponentModel.ListSortDescriptionCollection&gt; class implements the &lt;xref:System.Collections.IList?displayProperty=fullName&gt; interface, it must have an IList.Add method.","pos":[0,193],"source":"Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have an IList.Add method."},{"content":"However, because the &lt;xref:System.ComponentModel.ListSortDescriptionCollection&gt; class represents a read-only collection, adding items to the collection is an invalid operation.","pos":[194,370],"source":" However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, adding items to the collection is an invalid operation."}]}]},{"pos":[15106,15140],"content":"The item to add to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item to add to the collection.","pos":[0,34]}]},{"pos":[15197,15250],"content":"The position into which the new element was inserted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position into which the new element was inserted.","pos":[0,53]}]},{"pos":[15469,15482],"content":"In all cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"In all cases.","pos":[0,13]}]},{"pos":[16032,16070],"content":"Removes all items from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all items from the collection.","pos":[0,38]}]},{"pos":[16082,16457],"content":"Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have a IList.Clear method. However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, clearing items from the collection is an invalid operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have a IList.Clear method. However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, clearing items from the collection is an invalid operation.","pos":[0,375],"nodes":[{"content":"Because the &lt;xref:System.ComponentModel.ListSortDescriptionCollection&gt; class implements the &lt;xref:System.Collections.IList?displayProperty=fullName&gt; interface, it must have a IList.Clear method.","pos":[0,194],"source":"Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have a IList.Clear method."},{"content":"However, because the &lt;xref:System.ComponentModel.ListSortDescriptionCollection&gt; class represents a read-only collection, clearing items from the collection is an invalid operation.","pos":[195,375],"source":" However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, clearing items from the collection is an invalid operation."}]}]},{"pos":[16741,16754],"content":"In all cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"In all cases.","pos":[0,13]}]},{"pos":[17401,17458],"content":"Inserts an item into the collection at a specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inserts an item into the collection at a specified index.","pos":[0,57]}]},{"pos":[17470,17847],"content":"Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have a IList.Insert method. However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, inserting items into the collection is an invalid operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have a IList.Insert method. However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, inserting items into the collection is an invalid operation.","pos":[0,377],"nodes":[{"content":"Because the &lt;xref:System.ComponentModel.ListSortDescriptionCollection&gt; class implements the &lt;xref:System.Collections.IList?displayProperty=fullName&gt; interface, it must have a IList.Insert method.","pos":[0,195],"source":"Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have a IList.Insert method."},{"content":"However, because the &lt;xref:System.ComponentModel.ListSortDescriptionCollection&gt; class represents a read-only collection, inserting items into the collection is an invalid operation.","pos":[196,377],"source":" However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, inserting items into the collection is an invalid operation."}]}]},{"pos":[17992,18114],"content":"The zero-based index of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ListSortDescription\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to get or set in the collection","needQuote":true,"needEscape":true,"source":"The zero-based index of the <xref href=\"System.ComponentModel.ListSortDescription\"></xref> to get or set in the collection"},{"pos":[18176,18215],"content":"The item to insert into the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item to insert into the collection.","pos":[0,39]}]},{"pos":[18437,18450],"content":"In all cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"In all cases.","pos":[0,13]}]},{"pos":[19026,19090],"content":"Gets a value indicating whether the collection has a fixed size.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the collection has a fixed size.","pos":[0,64]}]},{"pos":[19102,19193],"content":"The collection is read-only once constructed and will, therefore, always have a fixed size.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection is read-only once constructed and will, therefore, always have a fixed size.","pos":[0,91]}]},{"pos":[19326,19400],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in all cases.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> in all cases."},{"pos":[20090,20150],"content":"Gets a value indicating whether the collection is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the collection is read-only.","pos":[0,60]}]},{"pos":[20162,20385],"content":"The <xref:System.ComponentModel.ListSortDescriptionCollection> is read-only once constructed. A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <xref:System.ComponentModel.ListSortDescriptionCollection> is read-only once constructed. A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","pos":[0,223],"nodes":[{"content":"The &lt;xref:System.ComponentModel.ListSortDescriptionCollection&gt; is read-only once constructed.","pos":[0,93],"source":"The <xref:System.ComponentModel.ListSortDescriptionCollection> is read-only once constructed."},{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","pos":[94,223]}]}]},{"pos":[20517,20592],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true \" name=\"true \" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>in all cases.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true \" name=\"true \" href=\"\"></xref>in all cases."},{"pos":[21300,21382],"content":"Gets the specified <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ListSortDescription\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the specified <xref href=\"System.ComponentModel.ListSortDescription\"></xref>."},{"pos":[21544,21659],"content":"The zero-based index of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ListSortDescription\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to get in the collection","needQuote":true,"needEscape":true,"source":"The zero-based index of the <xref href=\"System.ComponentModel.ListSortDescription\"></xref> to get in the collection"},{"pos":[21717,21809],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ListSortDescription\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified index.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.ListSortDescription\"></xref> with the specified index."},{"pos":[22524,22584],"content":"Removes the first occurrence of an item from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the first occurrence of an item from the collection.","pos":[0,60]}]},{"pos":[22596,22972],"content":"Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have a IList.Remove method. However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, removing items from the collection is an invalid operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have a IList.Remove method. However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, removing items from the collection is an invalid operation.","pos":[0,376],"nodes":[{"content":"Because the &lt;xref:System.ComponentModel.ListSortDescriptionCollection&gt; class implements the &lt;xref:System.Collections.IList?displayProperty=fullName&gt; interface, it must have a IList.Remove method.","pos":[0,195],"source":"Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have a IList.Remove method."},{"content":"However, because the &lt;xref:System.ComponentModel.ListSortDescriptionCollection&gt; class represents a read-only collection, removing items from the collection is an invalid operation.","pos":[196,376],"source":" However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, removing items from the collection is an invalid operation."}]}]},{"pos":[23107,23146],"content":"The item to remove from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item to remove from the collection.","pos":[0,39]}]},{"pos":[23368,23381],"content":"In all cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"In all cases.","pos":[0,13]}]},{"pos":[23989,24046],"content":"Removes an item from the collection at a specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes an item from the collection at a specified index.","pos":[0,57]}]},{"pos":[24058,24436],"content":"Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have a IList.RemoveAt method. However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, removing items from the collection is an invalid operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have a IList.RemoveAt method. However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, removing items from the collection is an invalid operation.","pos":[0,378],"nodes":[{"content":"Because the &lt;xref:System.ComponentModel.ListSortDescriptionCollection&gt; class implements the &lt;xref:System.Collections.IList?displayProperty=fullName&gt; interface, it must have a IList.RemoveAt method.","pos":[0,197],"source":"Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have a IList.RemoveAt method."},{"content":"However, because the &lt;xref:System.ComponentModel.ListSortDescriptionCollection&gt; class represents a read-only collection, removing items from the collection is an invalid operation.","pos":[198,378],"source":" However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, removing items from the collection is an invalid operation."}]}]},{"pos":[24569,24689],"content":"The zero-based index of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ListSortDescription\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remove from the collection","needQuote":true,"needEscape":true,"source":"The zero-based index of the <xref href=\"System.ComponentModel.ListSortDescription\"></xref> to remove from the collection"},{"pos":[24913,24926],"content":"In all cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"In all cases.","pos":[0,13]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.ListSortDescriptionCollection\n  id: ListSortDescriptionCollection\n  children:\n  - System.ComponentModel.ListSortDescriptionCollection.#ctor\n  - System.ComponentModel.ListSortDescriptionCollection.#ctor(System.ComponentModel.ListSortDescription[])\n  - System.ComponentModel.ListSortDescriptionCollection.Contains(System.Object)\n  - System.ComponentModel.ListSortDescriptionCollection.CopyTo(System.Array,System.Int32)\n  - System.ComponentModel.ListSortDescriptionCollection.Count\n  - System.ComponentModel.ListSortDescriptionCollection.IndexOf(System.Object)\n  - System.ComponentModel.ListSortDescriptionCollection.Item(System.Int32)\n  - System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#IsSynchronized\n  - System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#SyncRoot\n  - System.ComponentModel.ListSortDescriptionCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Add(System.Object)\n  - System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Clear\n  - System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsFixedSize\n  - System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsReadOnly\n  - System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Item(System.Int32)\n  - System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Remove(System.Object)\n  - System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#RemoveAt(System.Int32)\n  langs:\n  - csharp\n  name: ListSortDescriptionCollection\n  nameWithType: ListSortDescriptionCollection\n  fullName: System.ComponentModel.ListSortDescriptionCollection\n  type: Class\n  summary: Represents a collection of <xref href=\"System.ComponentModel.ListSortDescription\"></xref> objects.\n  remarks: \"The ListSortDescriptionCollection class is used by the <xref:System.ComponentModel.IBindingListView> interface.  \\n  \\n The ListSortDescriptionCollection is read-only once constructed.\"\n  syntax:\n    content: 'public class ListSortDescriptionCollection : System.Collections.IList'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IList\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.ListSortDescriptionCollection.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  langs:\n  - csharp\n  name: ListSortDescriptionCollection()\n  nameWithType: ListSortDescriptionCollection.ListSortDescriptionCollection()\n  fullName: System.ComponentModel.ListSortDescriptionCollection.ListSortDescriptionCollection()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.ListSortDescriptionCollection\"></xref> class.\n  remarks: The <xref:System.ComponentModel.ListSortDescriptionCollection> is read-only once constructed.\n  syntax:\n    content: public ListSortDescriptionCollection ();\n    parameters: []\n  overload: System.ComponentModel.ListSortDescriptionCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.ListSortDescriptionCollection.#ctor(System.ComponentModel.ListSortDescription[])\n  id: '#ctor(System.ComponentModel.ListSortDescription[])'\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  langs:\n  - csharp\n  name: ListSortDescriptionCollection(ListSortDescription[])\n  nameWithType: ListSortDescriptionCollection.ListSortDescriptionCollection(ListSortDescription[])\n  fullName: System.ComponentModel.ListSortDescriptionCollection.ListSortDescriptionCollection(ListSortDescription[])\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.ListSortDescriptionCollection\"></xref> class with the specified array of <xref href=\"System.ComponentModel.ListSortDescription\"></xref> objects.\n  remarks: \"The <xref:System.ComponentModel.ListSortDescriptionCollection> is read-only once constructed.  \\n  \\n Example\"\n  syntax:\n    content: public ListSortDescriptionCollection (System.ComponentModel.ListSortDescription[] sorts);\n    parameters:\n    - id: sorts\n      type: System.ComponentModel.ListSortDescription[]\n      description: The array of <xref href=\"System.ComponentModel.ListSortDescription\"></xref> objects to be contained in the collection.\n  overload: System.ComponentModel.ListSortDescriptionCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.ListSortDescriptionCollection.Contains(System.Object)\n  id: Contains(System.Object)\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  langs:\n  - csharp\n  name: Contains(Object)\n  nameWithType: ListSortDescriptionCollection.Contains(Object)\n  fullName: System.ComponentModel.ListSortDescriptionCollection.Contains(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Determines if the <xref href=\"System.ComponentModel.ListSortDescriptionCollection\"></xref> contains a specific value.\n  syntax:\n    content: public bool Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to locate in the collection.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Object> is found in the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.ListSortDescriptionCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.ListSortDescriptionCollection.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  langs:\n  - csharp\n  name: CopyTo(Array,Int32)\n  nameWithType: ListSortDescriptionCollection.CopyTo(Array,Int32)\n  fullName: System.ComponentModel.ListSortDescriptionCollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Copies the contents of the collection to the specified array, starting at the specified destination array index.\n  syntax:\n    content: public void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The destination array for the items copied from the collection.\n    - id: index\n      type: System.Int32\n      description: The index of the destination array at which copying begins.\n  overload: System.ComponentModel.ListSortDescriptionCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.ListSortDescriptionCollection.Count\n  id: Count\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ListSortDescriptionCollection.Count\n  fullName: System.ComponentModel.ListSortDescriptionCollection.Count\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the number of items in the collection.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of items in the collection.\n  overload: System.ComponentModel.ListSortDescriptionCollection.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.ListSortDescriptionCollection.IndexOf(System.Object)\n  id: IndexOf(System.Object)\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  langs:\n  - csharp\n  name: IndexOf(Object)\n  nameWithType: ListSortDescriptionCollection.IndexOf(Object)\n  fullName: System.ComponentModel.ListSortDescriptionCollection.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the index of the specified item in the collection.\n  syntax:\n    content: public int IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to locate in the collection.\n    return:\n      type: System.Int32\n      description: The index of <code>value</code> if found in the list; otherwise, -1.\n  overload: System.ComponentModel.ListSortDescriptionCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.ListSortDescriptionCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ListSortDescriptionCollection.Item(Int32)\n  fullName: System.ComponentModel.ListSortDescriptionCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets or sets the specified <xref href=\"System.ComponentModel.ListSortDescription\"></xref>.\n  remarks: The <xref:System.ComponentModel.ListSortDescriptionCollection> is read-only once constructed and will throw an <xref:System.InvalidOperationException> if you attempt to set an item.\n  syntax:\n    content: public System.ComponentModel.ListSortDescription this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the <xref href=\"System.ComponentModel.ListSortDescription\"></xref> to get or set in the collection.\n    return:\n      type: System.ComponentModel.ListSortDescription\n      description: The <xref href=\"System.ComponentModel.ListSortDescription\"></xref> with the specified index.\n  overload: System.ComponentModel.ListSortDescriptionCollection.Item*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An item is set in the <xref href=\"System.ComponentModel.ListSortDescriptionCollection\"></xref>, which is read-only.\n  platform:\n  - net462\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ListSortDescriptionCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether access to the collection is thread safe.\n  remarks: This property always returns `true`, because once constructed, the collection is read-only. This member is an explicit interface member implementation. It can be used only when the <xref:System.ComponentModel.ListSortDescriptionCollection> instance is cast to an <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true \" name=\"true \" href=\"\"></xref>in all cases.\n  overload: System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ListSortDescriptionCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the current instance that can be used to synchronize access to the collection.\n  remarks: \"This implementation returns the current instance of the <xref:System.ComponentModel.ListSortDescriptionCollection>, because this collection, once constructed, does not allow public access to the underlying list.  \\n  \\n For more information on the ICollection.SyncRoot method, see the <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> property.\"\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: The current instance of the <xref href=\"System.ComponentModel.ListSortDescriptionCollection\"></xref>.\n  overload: System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ListSortDescriptionCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; that can be used to iterate through the collection.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> that can be used to iterate through the collection.\n  overload: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.Add(Object)\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Adds an item to the collection.\n  remarks: Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have an IList.Add method. However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, adding items to the collection is an invalid operation.\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The item to add to the collection.\n    return:\n      type: System.Int32\n      description: The position into which the new element was inserted.\n  overload: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Add*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: In all cases.\n  platform:\n  - net462\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Clear\n  id: System#Collections#IList#Clear\n  isEii: true\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Clear()\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.Clear()\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.Clear()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Removes all items from the collection.\n  remarks: Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have a IList.Clear method. However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, clearing items from the collection is an invalid operation.\n  syntax:\n    content: void IList.Clear ();\n    parameters: []\n  overload: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Clear*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: In all cases.\n  platform:\n  - net462\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Inserts an item into the collection at a specified index.\n  remarks: Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have a IList.Insert method. However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, inserting items into the collection is an invalid operation.\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the <xref href=\"System.ComponentModel.ListSortDescription\"></xref> to get or set in the collection\n    - id: value\n      type: System.Object\n      description: The item to insert into the collection.\n  overload: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Insert*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: In all cases.\n  platform:\n  - net462\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.IsFixedSize\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether the collection has a fixed size.\n  remarks: The collection is read-only once constructed and will, therefore, always have a fixed size.\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> in all cases.\n  overload: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsFixedSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.IsReadOnly\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether the collection is read-only.\n  remarks: The <xref:System.ComponentModel.ListSortDescriptionCollection> is read-only once constructed. A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true \" name=\"true \" href=\"\"></xref>in all cases.\n  overload: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.Item(Int32)\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the specified <xref href=\"System.ComponentModel.ListSortDescription\"></xref>.\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the <xref href=\"System.ComponentModel.ListSortDescription\"></xref> to get in the collection\n    return:\n      type: System.Object\n      description: The <xref href=\"System.ComponentModel.ListSortDescription\"></xref> with the specified index.\n  overload: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.Remove(Object)\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Removes the first occurrence of an item from the collection.\n  remarks: Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have a IList.Remove method. However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, removing items from the collection is an invalid operation.\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The item to remove from the collection.\n  overload: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Remove*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: In all cases.\n  platform:\n  - net462\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#RemoveAt(System.Int32)\n  id: System#Collections#IList#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.RemoveAt(Int32)\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.RemoveAt(Int32)\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Removes an item from the collection at a specified index.\n  remarks: Because the <xref:System.ComponentModel.ListSortDescriptionCollection> class implements the <xref:System.Collections.IList?displayProperty=fullName> interface, it must have a IList.RemoveAt method. However, because the <xref:System.ComponentModel.ListSortDescriptionCollection> class represents a read-only collection, removing items from the collection is an invalid operation.\n  syntax:\n    content: void IList.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the <xref href=\"System.ComponentModel.ListSortDescription\"></xref> to remove from the collection\n  overload: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#RemoveAt*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: In all cases.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ComponentModel.ListSortDescriptionCollection.#ctor\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: ListSortDescriptionCollection()\n  nameWithType: ListSortDescriptionCollection.ListSortDescriptionCollection()\n  fullName: System.ComponentModel.ListSortDescriptionCollection.ListSortDescriptionCollection()\n- uid: System.ComponentModel.ListSortDescriptionCollection.#ctor(System.ComponentModel.ListSortDescription[])\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: ListSortDescriptionCollection(ListSortDescription[])\n  nameWithType: ListSortDescriptionCollection.ListSortDescriptionCollection(ListSortDescription[])\n  fullName: System.ComponentModel.ListSortDescriptionCollection.ListSortDescriptionCollection(ListSortDescription[])\n- uid: System.ComponentModel.ListSortDescription[]\n  parent: System.ComponentModel\n  isExternal: false\n  name: ListSortDescription\n  nameWithType: ListSortDescription\n  fullName: System.ComponentModel.ListSortDescription[]\n  spec.csharp:\n  - uid: System.ComponentModel.ListSortDescription\n    name: ListSortDescription\n    nameWithType: ListSortDescription\n    fullName: ListSortDescription[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.ListSortDescriptionCollection.Contains(System.Object)\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: Contains(Object)\n  nameWithType: ListSortDescriptionCollection.Contains(Object)\n  fullName: System.ComponentModel.ListSortDescriptionCollection.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ListSortDescriptionCollection.CopyTo(System.Array,System.Int32)\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: CopyTo(Array,Int32)\n  nameWithType: ListSortDescriptionCollection.CopyTo(Array,Int32)\n  fullName: System.ComponentModel.ListSortDescriptionCollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.ListSortDescriptionCollection.Count\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: Count\n  nameWithType: ListSortDescriptionCollection.Count\n  fullName: System.ComponentModel.ListSortDescriptionCollection.Count\n- uid: System.ComponentModel.ListSortDescriptionCollection.IndexOf(System.Object)\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: IndexOf(Object)\n  nameWithType: ListSortDescriptionCollection.IndexOf(Object)\n  fullName: System.ComponentModel.ListSortDescriptionCollection.IndexOf(Object)\n- uid: System.ComponentModel.ListSortDescriptionCollection.Item(System.Int32)\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ListSortDescriptionCollection.Item(Int32)\n  fullName: System.ComponentModel.ListSortDescriptionCollection.Item(Int32)\n- uid: System.ComponentModel.ListSortDescription\n  parent: System.ComponentModel\n  isExternal: false\n  name: ListSortDescription\n  nameWithType: ListSortDescription\n  fullName: System.ComponentModel.ListSortDescription\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ListSortDescriptionCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#SyncRoot\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ListSortDescriptionCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.ICollection.SyncRoot\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ListSortDescriptionCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Add(System.Object)\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.Add(Object)\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.Add(Object)\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Clear\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.IList.Clear()\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.Clear()\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.Clear()\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.Insert(Int32,Object)\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsFixedSize\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.IsFixedSize\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.IsFixedSize\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsReadOnly\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.IsReadOnly\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.IsReadOnly\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.Item(Int32)\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.Item(Int32)\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.Remove(Object)\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.Remove(Object)\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#RemoveAt(System.Int32)\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.IList.RemoveAt(Int32)\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.RemoveAt(Int32)\n  fullName: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.RemoveAt(Int32)\n- uid: System.ComponentModel.ListSortDescriptionCollection.#ctor*\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: ListSortDescriptionCollection\n  nameWithType: ListSortDescriptionCollection.ListSortDescriptionCollection\n- uid: System.ComponentModel.ListSortDescriptionCollection.Contains*\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: Contains\n  nameWithType: ListSortDescriptionCollection.Contains\n- uid: System.ComponentModel.ListSortDescriptionCollection.CopyTo*\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: ListSortDescriptionCollection.CopyTo\n- uid: System.ComponentModel.ListSortDescriptionCollection.Count*\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: Count\n  nameWithType: ListSortDescriptionCollection.Count\n- uid: System.ComponentModel.ListSortDescriptionCollection.IndexOf*\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: ListSortDescriptionCollection.IndexOf\n- uid: System.ComponentModel.ListSortDescriptionCollection.Item*\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: Item\n  nameWithType: ListSortDescriptionCollection.Item\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#IsSynchronized*\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ListSortDescriptionCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#SyncRoot*\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ListSortDescriptionCollection.System.Collections.ICollection.SyncRoot\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: ListSortDescriptionCollection.System.Collections.IEnumerable.GetEnumerator\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Add*\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.IList.Add\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.Add\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Clear*\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.IList.Clear\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.Clear\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Insert*\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.IList.Insert\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.Insert\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsFixedSize*\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.IsFixedSize\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsReadOnly*\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.IsReadOnly\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Item*\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.IList.Item\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.Item\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Remove*\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.IList.Remove\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.Remove\n- uid: System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#RemoveAt*\n  parent: System.ComponentModel.ListSortDescriptionCollection\n  isExternal: false\n  name: System.Collections.IList.RemoveAt\n  nameWithType: ListSortDescriptionCollection.System.Collections.IList.RemoveAt\n"}