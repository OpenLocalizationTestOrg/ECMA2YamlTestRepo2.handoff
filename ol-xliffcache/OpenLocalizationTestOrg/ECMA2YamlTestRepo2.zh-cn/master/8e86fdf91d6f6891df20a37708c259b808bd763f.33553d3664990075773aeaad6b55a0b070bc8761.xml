{"nodes":[{"pos":[897,990],"content":"Specifies the allowed usage of a private virtual file system. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the allowed usage of a private virtual file system. This class cannot be inherited.","pos":[0,93],"nodes":[{"content":"Specifies the allowed usage of a private virtual file system.","pos":[0,61]},{"content":"This class cannot be inherited.","pos":[62,93]}]}]},{"pos":[1003,1916],"content":"The common language runtime (CLR) uses this class to control access to isolated storage.       Isolated storage creates a unique storage area for use by an application or component. It provides true isolation in that the identity of an application uniquely determines the root of a virtual file system, which only that application can access. Thus, each application has its own file area automatically assigned to it. This file area is fully isolated from other applications, making it private to that application.      > [!NOTE] >  There is no effect if you use <xref:System.Security.CodeAccessPermission.Assert%2A>, <xref:System.Security.CodeAccessPermission.PermitOnly%2A>, or <xref:System.Security.CodeAccessPermission.Deny%2A> to add stack modifiers for usage or quota.  Usage and quota are determined from evidence and a stack walk is not performed for demands, making the above operations ineffective.","needQuote":false,"needEscape":true,"nodes":[{"content":"The common language runtime (CLR) uses this class to control access to isolated storage.","pos":[0,88]},{"content":"Isolated storage creates a unique storage area for use by an application or component.","pos":[95,181]},{"content":"It provides true isolation in that the identity of an application uniquely determines the root of a virtual file system, which only that application can access.","pos":[182,342]},{"content":"Thus, each application has its own file area automatically assigned to it.","pos":[343,417]},{"content":"This file area is fully isolated from other applications, making it private to that application.","pos":[418,514]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  There is no effect if you use &lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;, &lt;xref:System.Security.CodeAccessPermission.PermitOnly%2A&gt;, or &lt;xref:System.Security.CodeAccessPermission.Deny%2A&gt; to add stack modifiers for usage or quota.","pos":[520,774],"source":"      > [!NOTE] >  There is no effect if you use <xref:System.Security.CodeAccessPermission.Assert%2A>, <xref:System.Security.CodeAccessPermission.PermitOnly%2A>, or <xref:System.Security.CodeAccessPermission.Deny%2A> to add stack modifiers for usage or quota."},{"content":"Usage and quota are determined from evidence and a stack walk is not performed for demands, making the above operations ineffective.","pos":[776,908]}]},{"pos":[3818,4006],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.IsolatedStorageFilePermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with either fully restricted or unrestricted permission as specified.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.IsolatedStorageFilePermission\"></xref> class with either fully restricted or unrestricted permission as specified."},{"pos":[4018,4113],"content":"Constructs either fully restricted (<ph id=\"ph1\">`None`</ph>) or <ph id=\"ph2\">`Unrestricted`</ph> access to isolated storage files.","needQuote":true,"needEscape":true,"source":"Constructs either fully restricted (`None`) or `Unrestricted` access to isolated storage files."},{"pos":[4334,4417],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."},{"pos":[4603,4725],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">state</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid value of <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>."},{"pos":[5157,5221],"content":"Creates and returns an identical copy of the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns an identical copy of the current permission.","pos":[0,64]}]},{"pos":[5233,5323],"content":"A copy of a permission represents the same access to resources as the original permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of a permission represents the same access to resources as the original permission.","pos":[0,90]}]},{"pos":[5490,5523],"content":"A copy of the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current permission.","pos":[0,33]}]},{"pos":[6164,6277],"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,113]}]},{"pos":[6289,6487],"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection.","pos":[0,198],"nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common.","pos":[0,118]},{"content":"Only a demand that passes both original permissions will pass the intersection.","pos":[119,198]}]}]},{"pos":[6695,6811],"content":"A permission to intersect with the current permission object. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to intersect with the current permission object. It must be of the same type as the current permission.","pos":[0,116],"nodes":[{"content":"A permission to intersect with the current permission object.","pos":[0,61]},{"content":"It must be of the same type as the current permission.","pos":[62,116]}]}]},{"pos":[6883,7102],"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the intersection of the current permission and the specified permission.","pos":[0,105]},{"content":"This new permission is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the intersection is empty.","pos":[106,219],"source":" This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty."}]},{"pos":[7292,7448],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and is not of the same type as the current permission.","needQuote":true,"needEscape":true,"source":"The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission."},{"pos":[8001,8083],"content":"Determines whether the current permission is a subset of the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the current permission is a subset of the specified permission.","pos":[0,82]}]},{"pos":[8095,8536],"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\. If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.","pos":[0,172]},{"content":"For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:<ph id=\"ph1\">\\\\</ph>.","pos":[173,299],"source":" For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\."},{"content":"If this method returns <ph id=\"ph1\">`true`</ph>, the current permission represents no more access to the protected resource than does the specified permission.","pos":[300,441],"source":" If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission."}]},{"pos":[8722,8852],"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","pos":[0,130],"nodes":[{"content":"A permission that is to be tested for the subset relationship.","pos":[0,62]},{"content":"This permission must be of the same type as the current permission.","pos":[63,130]}]}]},{"pos":[8911,9113],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission is a subset of the specified permission; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9304,9460],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and is not of the same type as the current permission.","needQuote":true,"needEscape":true,"source":"The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission."},{"pos":[9897,9961],"content":"Creates an XML encoding of the permission and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML encoding of the permission and its current state.","pos":[0,64]}]},{"pos":[9973,10107],"content":"The ToXml method enables the <xref:System.Security.Permissions.IsolatedStorageFilePermission> to be XML-encoded for security purposes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ToXml method enables the &lt;xref:System.Security.Permissions.IsolatedStorageFilePermission&gt; to be XML-encoded for security purposes.","pos":[0,134],"source":"The ToXml method enables the <xref:System.Security.Permissions.IsolatedStorageFilePermission> to be XML-encoded for security purposes."}]},{"pos":[10283,10350],"content":"An XML encoding of the permission, including any state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML encoding of the permission, including any state information.","pos":[0,67]}]},{"pos":[10972,11066],"content":"Creates a permission that is the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a permission that is the union of the current permission and the specified permission.","pos":[0,94]}]},{"pos":[11078,11292],"content":"The result of a call to Union is a permission that represents all the operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of a call to Union is a permission that represents all the operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","pos":[0,214],"nodes":[{"content":"The result of a call to Union is a permission that represents all the operations represented by both the current permission and the specified permission.","pos":[0,153]},{"content":"Any demand that passes either permission passes their union.","pos":[154,214]}]}]},{"pos":[11496,11603],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]},{"pos":[11675,11773],"content":"A new permission that represents the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]},{"pos":[11959,12115],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and is not of the same type as the current permission.","needQuote":true,"needEscape":true,"source":"The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.IsolatedStorageFilePermission\n  id: IsolatedStorageFilePermission\n  children:\n  - System.Security.Permissions.IsolatedStorageFilePermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.IsolatedStorageFilePermission.Copy\n  - System.Security.Permissions.IsolatedStorageFilePermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.IsolatedStorageFilePermission.ToXml\n  - System.Security.Permissions.IsolatedStorageFilePermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: IsolatedStorageFilePermission\n  nameWithType: IsolatedStorageFilePermission\n  fullName: System.Security.Permissions.IsolatedStorageFilePermission\n  type: Class\n  summary: Specifies the allowed usage of a private virtual file system. This class cannot be inherited.\n  remarks: \"The common language runtime (CLR) uses this class to control access to isolated storage.  \\n  \\n Isolated storage creates a unique storage area for use by an application or component. It provides true isolation in that the identity of an application uniquely determines the root of a virtual file system, which only that application can access. Thus, each application has its own file area automatically assigned to it. This file area is fully isolated from other applications, making it private to that application.  \\n  \\n> [!NOTE]\\n>  There is no effect if you use <xref:System.Security.CodeAccessPermission.Assert%2A>, <xref:System.Security.CodeAccessPermission.PermitOnly%2A>, or <xref:System.Security.CodeAccessPermission.Deny%2A> to add stack modifiers for usage or quota.  Usage and quota are determined from evidence and a stack walk is not performed for demands, making the above operations ineffective.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class IsolatedStorageFilePermission : System.Security.Permissions.IsolatedStoragePermission\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  - System.Security.Permissions.IsolatedStoragePermission\n  implements: []\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  - System.Security.Permissions.IsolatedStoragePermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.IsolatedStoragePermission.IsUnrestricted\n  - System.Security.Permissions.IsolatedStoragePermission.UsageAllowed\n  - System.Security.Permissions.IsolatedStoragePermission.UserQuota\n  platform:\n  - net462\n- uid: System.Security.Permissions.IsolatedStorageFilePermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.IsolatedStorageFilePermission\n  langs:\n  - csharp\n  name: IsolatedStorageFilePermission(PermissionState)\n  nameWithType: IsolatedStorageFilePermission.IsolatedStorageFilePermission(PermissionState)\n  fullName: System.Security.Permissions.IsolatedStorageFilePermission.IsolatedStorageFilePermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.IsolatedStorageFilePermission\"></xref> class with either fully restricted or unrestricted permission as specified.\n  remarks: Constructs either fully restricted (`None`) or `Unrestricted` access to isolated storage files.\n  syntax:\n    content: public IsolatedStorageFilePermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Security.Permissions.IsolatedStorageFilePermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Permissions.IsolatedStorageFilePermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.IsolatedStorageFilePermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: IsolatedStorageFilePermission.Copy()\n  fullName: System.Security.Permissions.IsolatedStorageFilePermission.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates and returns an identical copy of the current permission.\n  remarks: A copy of a permission represents the same access to resources as the original permission.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission.\n  overload: System.Security.Permissions.IsolatedStorageFilePermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.IsolatedStorageFilePermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.IsolatedStorageFilePermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: IsolatedStorageFilePermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.IsolatedStorageFilePermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.\n  remarks: The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission object. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.\n  overload: System.Security.Permissions.IsolatedStorageFilePermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission.\n  platform:\n  - net462\n- uid: System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.IsolatedStorageFilePermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: IsolatedStorageFilePermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Determines whether the current permission is a subset of the specified permission.\n  remarks: The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\. If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission.\n  platform:\n  - net462\n- uid: System.Security.Permissions.IsolatedStorageFilePermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.IsolatedStorageFilePermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: IsolatedStorageFilePermission.ToXml()\n  fullName: System.Security.Permissions.IsolatedStorageFilePermission.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates an XML encoding of the permission and its current state.\n  remarks: The ToXml method enables the <xref:System.Security.Permissions.IsolatedStorageFilePermission> to be XML-encoded for security purposes.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the permission, including any state information.\n  overload: System.Security.Permissions.IsolatedStorageFilePermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.IsolatedStorageFilePermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.IsolatedStorageFilePermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: IsolatedStorageFilePermission.Union(IPermission)\n  fullName: System.Security.Permissions.IsolatedStorageFilePermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates a permission that is the union of the current permission and the specified permission.\n  remarks: The result of a call to Union is a permission that represents all the operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Security.Permissions.IsolatedStorageFilePermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Permissions.IsolatedStoragePermission\n  isExternal: false\n  name: System.Security.Permissions.IsolatedStoragePermission\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.Permissions.IsolatedStorageFilePermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.IsolatedStorageFilePermission\n  isExternal: false\n  name: IsolatedStorageFilePermission(PermissionState)\n  nameWithType: IsolatedStorageFilePermission.IsolatedStorageFilePermission(PermissionState)\n  fullName: System.Security.Permissions.IsolatedStorageFilePermission.IsolatedStorageFilePermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.IsolatedStorageFilePermission.Copy\n  parent: System.Security.Permissions.IsolatedStorageFilePermission\n  isExternal: false\n  name: Copy()\n  nameWithType: IsolatedStorageFilePermission.Copy()\n  fullName: System.Security.Permissions.IsolatedStorageFilePermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.IsolatedStorageFilePermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.IsolatedStorageFilePermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: IsolatedStorageFilePermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.IsolatedStorageFilePermission.Intersect(IPermission)\n- uid: System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.IsolatedStorageFilePermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: IsolatedStorageFilePermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.IsolatedStorageFilePermission.ToXml\n  parent: System.Security.Permissions.IsolatedStorageFilePermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: IsolatedStorageFilePermission.ToXml()\n  fullName: System.Security.Permissions.IsolatedStorageFilePermission.ToXml()\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.IsolatedStorageFilePermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.IsolatedStorageFilePermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: IsolatedStorageFilePermission.Union(IPermission)\n  fullName: System.Security.Permissions.IsolatedStorageFilePermission.Union(IPermission)\n- uid: System.Security.Permissions.IsolatedStorageFilePermission.#ctor*\n  parent: System.Security.Permissions.IsolatedStorageFilePermission\n  isExternal: false\n  name: IsolatedStorageFilePermission\n  nameWithType: IsolatedStorageFilePermission.IsolatedStorageFilePermission\n- uid: System.Security.Permissions.IsolatedStorageFilePermission.Copy*\n  parent: System.Security.Permissions.IsolatedStorageFilePermission\n  isExternal: false\n  name: Copy\n  nameWithType: IsolatedStorageFilePermission.Copy\n- uid: System.Security.Permissions.IsolatedStorageFilePermission.Intersect*\n  parent: System.Security.Permissions.IsolatedStorageFilePermission\n  isExternal: false\n  name: Intersect\n  nameWithType: IsolatedStorageFilePermission.Intersect\n- uid: System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf*\n  parent: System.Security.Permissions.IsolatedStorageFilePermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: IsolatedStorageFilePermission.IsSubsetOf\n- uid: System.Security.Permissions.IsolatedStorageFilePermission.ToXml*\n  parent: System.Security.Permissions.IsolatedStorageFilePermission\n  isExternal: false\n  name: ToXml\n  nameWithType: IsolatedStorageFilePermission.ToXml\n- uid: System.Security.Permissions.IsolatedStorageFilePermission.Union*\n  parent: System.Security.Permissions.IsolatedStorageFilePermission\n  isExternal: false\n  name: Union\n  nameWithType: IsolatedStorageFilePermission.Union\n"}