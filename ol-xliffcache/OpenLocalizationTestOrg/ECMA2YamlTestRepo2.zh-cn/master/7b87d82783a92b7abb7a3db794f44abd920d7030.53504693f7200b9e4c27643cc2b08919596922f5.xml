{"nodes":[{"pos":[1504,1606],"content":"Represents the base class for all XML Web service client proxies that use the HTTP transport protocol.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the base class for all XML Web service client proxies that use the HTTP transport protocol.","pos":[0,102]}]},{"pos":[1619,2955],"content":"The properties on this class are used to control the behavior of the HTTP request object used to transmit the XML Web service request and response. The properties map to properties found on <xref:System.Net.HttpWebRequest>.       To communicate with an XML Web service using HTTP, you must create a proxy class deriving indirectly or directly from HttpWebClientProtocol for the XML Web service. Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description.       Since HttpWebClientProtocol is the base class for all proxy classes, its properties are on your proxy classes. These properties are useful for controlling the request behavior of the underlying transport. For example, use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> property for calling XML Web services through a firewall. Many of these properties are used to initialize the <xref:System.Net.HttpWebRequest> that makes the Web request.       <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive directly or indirectly from HttpWebClientProtocol to provide support for SOAP, HTTP-GET and HTTP-POST respectively.","needQuote":false,"needEscape":true,"nodes":[{"content":"The properties on this class are used to control the behavior of the HTTP request object used to transmit the XML Web service request and response. The properties map to properties found on <xref:System.Net.HttpWebRequest>.       To communicate with an XML Web service using HTTP, you must create a proxy class deriving indirectly or directly from HttpWebClientProtocol for the XML Web service. Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description.       Since HttpWebClientProtocol is the base class for all proxy classes, its properties are on your proxy classes. These properties are useful for controlling the request behavior of the underlying transport. For example, use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> property for calling XML Web services through a firewall. Many of these properties are used to initialize the <xref:System.Net.HttpWebRequest> that makes the Web request.       <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive directly or indirectly from HttpWebClientProtocol to provide support for SOAP, HTTP-GET and HTTP-POST respectively.","pos":[0,1330],"nodes":[{"content":"The properties on this class are used to control the behavior of the HTTP request object used to transmit the XML Web service request and response.","pos":[0,147]},{"content":"The properties map to properties found on &lt;xref:System.Net.HttpWebRequest&gt;.","pos":[148,223],"source":" The properties map to properties found on <xref:System.Net.HttpWebRequest>."},{"content":"To communicate with an XML Web service using HTTP, you must create a proxy class deriving indirectly or directly from HttpWebClientProtocol for the XML Web service.","pos":[230,394]},{"content":"Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description.","pos":[395,545]},{"content":"Since HttpWebClientProtocol is the base class for all proxy classes, its properties are on your proxy classes.","pos":[552,662]},{"content":"These properties are useful for controlling the request behavior of the underlying transport.","pos":[663,756]},{"content":"For example, use the &lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A&gt; property for calling XML Web services through a firewall.","pos":[757,903],"source":" For example, use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> property for calling XML Web services through a firewall."},{"content":"Many of these properties are used to initialize the &lt;xref:System.Net.HttpWebRequest&gt; that makes the Web request.","pos":[904,1016],"source":" Many of these properties are used to initialize the <xref:System.Net.HttpWebRequest> that makes the Web request."},{"content":"&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;, &lt;xref:System.Web.Services.Protocols.HttpGetClientProtocol&gt;, and &lt;xref:System.Web.Services.Protocols.HttpPostClientProtocol&gt; derive directly or indirectly from HttpWebClientProtocol to provide support for SOAP, HTTP-GET and HTTP-POST respectively.","pos":[1023,1330],"source":"       <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive directly or indirectly from HttpWebClientProtocol to provide support for SOAP, HTTP-GET and HTTP-POST respectively."}]}]},{"pos":[5829,5942],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"></xref> class."},{"pos":[6588,6659],"content":"Gets or sets whether the client automatically follows server redirects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets whether the client automatically follows server redirects.","pos":[0,71]}]},{"pos":[6672,7608],"content":"If a client sends authentication information, such as a user name and password, you do not want to enable the server to redirect, because this can compromise security.       A <xref:System.Net.WebException> is thrown if the AllowAutoRedirect property is `false` and the Web server attempts to redirect the request. The <xref:System.Net.WebException.Response%2A> property contains an <xref:System.Net.HttpWebResponse> object, where both the <xref:System.Net.HttpWebResponse.StatusCode%2A> and <xref:System.Net.HttpWebResponse.Headers%2A> properties reflect details regarding the attempted redirect. The <xref:System.Net.HttpWebResponse.StatusCode%2A> property contains an <xref:System.Net.HttpStatusCode> equivalent to one of the HTTP redirect status codes (301, 302, and 307) and the `Location` header within the <xref:System.Net.HttpWebResponse.Headers%2A> collection points to the URI that the request attempted to be redirected to.","needQuote":false,"needEscape":true,"nodes":[{"content":"If a client sends authentication information, such as a user name and password, you do not want to enable the server to redirect, because this can compromise security.","pos":[0,167]},{"content":"A &lt;xref:System.Net.WebException&gt; is thrown if the AllowAutoRedirect property is <ph id=\"ph1\">`false`</ph> and the Web server attempts to redirect the request.","pos":[174,314],"source":"       A <xref:System.Net.WebException> is thrown if the AllowAutoRedirect property is `false` and the Web server attempts to redirect the request."},{"content":"The &lt;xref:System.Net.WebException.Response%2A&gt; property contains an &lt;xref:System.Net.HttpWebResponse&gt; object, where both the &lt;xref:System.Net.HttpWebResponse.StatusCode%2A&gt; and &lt;xref:System.Net.HttpWebResponse.Headers%2A&gt; properties reflect details regarding the attempted redirect.","pos":[315,597],"source":" The <xref:System.Net.WebException.Response%2A> property contains an <xref:System.Net.HttpWebResponse> object, where both the <xref:System.Net.HttpWebResponse.StatusCode%2A> and <xref:System.Net.HttpWebResponse.Headers%2A> properties reflect details regarding the attempted redirect."},{"content":"The &lt;xref:System.Net.HttpWebResponse.StatusCode%2A&gt; property contains an &lt;xref:System.Net.HttpStatusCode&gt; equivalent to one of the HTTP redirect status codes (301, 302, and 307) and the <ph id=\"ph1\">`Location`</ph> header within the &lt;xref:System.Net.HttpWebResponse.Headers%2A&gt; collection points to the URI that the request attempted to be redirected to.","pos":[598,934],"source":" The <xref:System.Net.HttpWebResponse.StatusCode%2A> property contains an <xref:System.Net.HttpStatusCode> equivalent to one of the HTTP redirect status codes (301, 302, and 307) and the `Location` header within the <xref:System.Net.HttpWebResponse.Headers%2A> collection points to the URI that the request attempted to be redirected to."}]},{"pos":[7735,8014],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically redirect the client to follow server redirects; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to automatically redirect the client to follow server redirects; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,200],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically redirect the client to follow server redirects; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[201,279],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[8204,8353],"content":"The AllowAutoRedirect property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the Web server attempts to redirect the request.","needQuote":true,"needEscape":true,"source":"The AllowAutoRedirect property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and the Web server attempts to redirect the request."},{"pos":[8855,8952],"content":"Cancels an asynchronous call to an XML Web service method, unless the call has already completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Cancels an asynchronous call to an XML Web service method, unless the call has already completed.","pos":[0,97]}]},{"pos":[9104,9248],"content":"The object provided in the last parameter to the asynchronous call of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Begin\" name=\"Begin\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> method.","needQuote":true,"needEscape":true,"source":"The object provided in the last parameter to the asynchronous call of the <xref uid=\"langword_csharp_Begin\" name=\"Begin\" href=\"\"></xref> method."},{"pos":[9827,9870],"content":"Gets the collection of client certificates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of client certificates.","pos":[0,43]}]},{"pos":[9882,10306],"content":"This property allows a client to pass one or more client certificates, also known as Authenticode X.509 v.3 certificates, when calling an XML Web service method. If the XML Web service method has been configured to use client certificates, a client certificate can be used as one mechanism for authenticating a client. For details on setting up client certificates, see the Internet Information Services (IIS) documentation.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property allows a client to pass one or more client certificates, also known as Authenticode X.509 v.3 certificates, when calling an XML Web service method. If the XML Web service method has been configured to use client certificates, a client certificate can be used as one mechanism for authenticating a client. For details on setting up client certificates, see the Internet Information Services (IIS) documentation.","pos":[0,424],"nodes":[{"content":"This property allows a client to pass one or more client certificates, also known as Authenticode X.509 v.3 certificates, when calling an XML Web service method.","pos":[0,161]},{"content":"If the XML Web service method has been configured to use client certificates, a client certificate can be used as one mechanism for authenticating a client.","pos":[162,318]},{"content":"For details on setting up client certificates, see the Internet Information Services (IIS) documentation.","pos":[319,424]}]}]},{"pos":[11041,11177],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the client certificates.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> that represents the client certificates."},{"pos":[11748,11787],"content":"Gets or sets the collection of cookies.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the collection of cookies.","pos":[0,39]}]},{"pos":[11799,12849],"content":"If an XML Web service method uses session state, then a cookie is passed back in the response headers to the XML Web service client that uniquely identifies the session for that XML Web service client. In order for an XML Web service to maintain session state for a client, the client must store the cookie. Clients receive the HTTP cookie by creating a new instance of <xref:System.Net.CookieContainer> and assigning that to the CookieContainer property of the proxy class before calling the XML Web service method. If you need to maintain session state beyond when the proxy class instance goes out of scope, the client must store the HTTP cookie between calls to the XML Web service. For instance, a Web Forms client can store the HTTP cookie by saving the <xref:System.Net.CookieContainer> in its own session state. Because not all XML Web services use session state and thus clients are not always required to use the CookieContainer property of a client proxy, the documentation for the XML Web service must state whether session state is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"If an XML Web service method uses session state, then a cookie is passed back in the response headers to the XML Web service client that uniquely identifies the session for that XML Web service client. In order for an XML Web service to maintain session state for a client, the client must store the cookie. Clients receive the HTTP cookie by creating a new instance of <xref:System.Net.CookieContainer> and assigning that to the CookieContainer property of the proxy class before calling the XML Web service method. If you need to maintain session state beyond when the proxy class instance goes out of scope, the client must store the HTTP cookie between calls to the XML Web service. For instance, a Web Forms client can store the HTTP cookie by saving the <xref:System.Net.CookieContainer> in its own session state. Because not all XML Web services use session state and thus clients are not always required to use the CookieContainer property of a client proxy, the documentation for the XML Web service must state whether session state is used.","pos":[0,1050],"nodes":[{"content":"If an XML Web service method uses session state, then a cookie is passed back in the response headers to the XML Web service client that uniquely identifies the session for that XML Web service client.","pos":[0,201]},{"content":"In order for an XML Web service to maintain session state for a client, the client must store the cookie.","pos":[202,307]},{"content":"Clients receive the HTTP cookie by creating a new instance of &lt;xref:System.Net.CookieContainer&gt; and assigning that to the CookieContainer property of the proxy class before calling the XML Web service method.","pos":[308,516],"source":" Clients receive the HTTP cookie by creating a new instance of <xref:System.Net.CookieContainer> and assigning that to the CookieContainer property of the proxy class before calling the XML Web service method."},{"content":"If you need to maintain session state beyond when the proxy class instance goes out of scope, the client must store the HTTP cookie between calls to the XML Web service.","pos":[517,686]},{"content":"For instance, a Web Forms client can store the HTTP cookie by saving the &lt;xref:System.Net.CookieContainer&gt; in its own session state.","pos":[687,819],"source":" For instance, a Web Forms client can store the HTTP cookie by saving the <xref:System.Net.CookieContainer> in its own session state."},{"content":"Because not all XML Web services use session state and thus clients are not always required to use the CookieContainer property of a client proxy, the documentation for the XML Web service must state whether session state is used.","pos":[820,1050]}]}]},{"pos":[13477,13567],"content":"A <xref:System.Net.CookieContainer> that represents the cookies for a Web Services client.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Net.CookieContainer&gt; that represents the cookies for a Web Services client.","pos":[0,90],"source":"A <xref:System.Net.CookieContainer> that represents the cookies for a Web Services client."}]},{"pos":[14155,14306],"content":"Gets or sets a value that indicates whether decompression is enabled for this <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether decompression is enabled for this <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"></xref>."},{"pos":[14434,14759],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if decompression is enabled for this <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if decompression is enabled for this <bpt id=\"p2\">&lt;xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,246],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if decompression is enabled for this <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[247,325],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[15481,15708],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Serialization.XmlMembersMapping\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for each XML Web service method exposed by the specified type, and stores the mappings in the specified <bpt id=\"p2\">&lt;xref href=\"System.Collections.ArrayList\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Xml.Serialization.XmlMembersMapping\"></xref> for each XML Web service method exposed by the specified type, and stores the mappings in the specified <xref href=\"System.Collections.ArrayList\"></xref>."},{"pos":[15897,15961],"content":"The <xref:System.Type> that exposes the XML Web service methods.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; that exposes the XML Web service methods.","pos":[0,64],"source":"The <xref:System.Type> that exposes the XML Web service methods."}]},{"pos":[16041,16128],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Collections.ArrayList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is used to store the mappings.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Collections.ArrayList\"></xref> that is used to store the mappings."},{"pos":[16187,16439],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p2\">&lt;/code&gt;</ept> can be assigned to a <bpt id=\"p3\">&lt;xref href=\"System.Web.Services.Protocols.SoapHttpClientProtocol\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>type</code> can be assigned to a <xref href=\"System.Web.Services.Protocols.SoapHttpClientProtocol\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17171,17491],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Serialization.XmlMembersMapping\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for each XML Web service method exposed by the specified types, and stores the mappings in the specified <bpt id=\"p2\">&lt;xref href=\"System.Collections.ArrayList\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, as well as in a <bpt id=\"p3\">&lt;xref href=\"System.Collections.Hashtable\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> that this method returns.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Xml.Serialization.XmlMembersMapping\"></xref> for each XML Web service method exposed by the specified types, and stores the mappings in the specified <xref href=\"System.Collections.ArrayList\"></xref>, as well as in a <xref href=\"System.Collections.Hashtable\"></xref> that this method returns."},{"pos":[17710,17810],"content":"An array of type <xref:System.Type> that contains the types that expose the XML Web service methods.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.Type&gt; that contains the types that expose the XML Web service methods.","pos":[0,100],"source":"An array of type <xref:System.Type> that contains the types that expose the XML Web service methods."}]},{"pos":[17890,17977],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Collections.ArrayList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is used to store the mappings.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Collections.ArrayList\"></xref> that is used to store the mappings."},{"pos":[18050,18307],"content":"A <xref href=\"System.Collections.Hashtable\"></xref> that contains the <xref href=\"System.Xml.Serialization.XmlMembersMapping\"></xref> for each XML Web service method exposed by the specified types. The types contained in <code>types</code> are used as keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Collections.Hashtable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the <bpt id=\"p2\">&lt;xref href=\"System.Xml.Serialization.XmlMembersMapping\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> for each XML Web service method exposed by the specified types.","pos":[0,197],"source":"A <xref href=\"System.Collections.Hashtable\"></xref> that contains the <xref href=\"System.Xml.Serialization.XmlMembersMapping\"></xref> for each XML Web service method exposed by the specified types."},{"content":"The types contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">types</ph><ept id=\"p1\">&lt;/code&gt;</ept> are used as keys.","pos":[198,257],"source":" The types contained in <code>types</code> are used as keys."}]},{"pos":[18906,18967],"content":"Creates a <xref:System.Net.WebRequest> for the specified URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a &lt;xref:System.Net.WebRequest&gt; for the specified URI.","pos":[0,61],"source":"Creates a <xref:System.Net.WebRequest> for the specified URI."}]},{"pos":[19129,19197],"content":"The <xref:System.Uri> for creating the <xref:System.Net.WebRequest>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Uri&gt; for creating the &lt;xref:System.Net.WebRequest&gt;.","pos":[0,68],"source":"The <xref:System.Uri> for creating the <xref:System.Net.WebRequest>."}]},{"pos":[19263,19304],"content":"The created <xref:System.Net.WebRequest>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The created &lt;xref:System.Net.WebRequest&gt;.","pos":[0,41],"source":"The created <xref:System.Net.WebRequest>."}]},{"pos":[19508,19603],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">uri</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>uri</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[20148,20223],"content":"Returns a response from a synchronous request to an XML Web service method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a response from a synchronous request to an XML Web service method.","pos":[0,75]}]},{"pos":[20424,20488],"content":"The <xref:System.Net.WebRequest> from which to get the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Net.WebRequest&gt; from which to get the response.","pos":[0,64],"source":"The <xref:System.Net.WebRequest> from which to get the response."}]},{"pos":[20555,20622],"content":"A response from a synchronous request to an XML Web service method.","needQuote":true,"needEscape":true,"nodes":[{"content":"A response from a synchronous request to an XML Web service method.","pos":[0,67]}]},{"pos":[21343,21420],"content":"Returns a response from an asynchronous request to an XML Web service method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a response from an asynchronous request to an XML Web service method.","pos":[0,77]}]},{"pos":[21642,21706],"content":"The <xref:System.Net.WebRequest> from which to get the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Net.WebRequest&gt; from which to get the response.","pos":[0,64],"source":"The <xref:System.Net.WebRequest> from which to get the response."}]},{"pos":[21775,21898],"content":"The <xref:System.IAsyncResult> to pass to <xref:System.Net.HttpWebRequest.EndGetResponse*> when the response has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; to pass to &lt;xref:System.Net.HttpWebRequest.EndGetResponse*&gt; when the response has completed.","pos":[0,123],"source":"The <xref:System.IAsyncResult> to pass to <xref:System.Net.HttpWebRequest.EndGetResponse*> when the response has completed."}]},{"pos":[21965,22034],"content":"A response from an asynchronous request to an XML Web service method.","needQuote":true,"needEscape":true,"nodes":[{"content":"A response from an asynchronous request to an XML Web service method.","pos":[0,69]}]},{"pos":[22551,22639],"content":"Gets or sets proxy information for making an XML Web service request through a firewall.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets proxy information for making an XML Web service request through a firewall.","pos":[0,88]}]},{"pos":[22652,23038],"content":"Use the Proxy property if a client needs to use different proxy settings than those in the system settings. Use the <xref:System.Net.WebProxy> class to set the proxy settings, because it implements <xref:System.Net.IWebProxy>.       Default proxy settings can be set in a configuration file. For details, see [Configuring Internet Applications](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the Proxy property if a client needs to use different proxy settings than those in the system settings.","pos":[0,107]},{"content":"Use the &lt;xref:System.Net.WebProxy&gt; class to set the proxy settings, because it implements &lt;xref:System.Net.IWebProxy&gt;.","pos":[108,226],"source":" Use the <xref:System.Net.WebProxy> class to set the proxy settings, because it implements <xref:System.Net.IWebProxy>."},{"content":"Default proxy settings can be set in a configuration file.","pos":[233,291]},{"content":"For details, see <bpt id=\"p1\">[</bpt>Configuring Internet Applications<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[292,384],"source":" For details, see [Configuring Internet Applications](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[23778,23942],"content":"An <xref:System.Net.IWebProxy> that contains the proxy information for making requests through a firewall. The default value is the operating system proxy settings.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <xref:System.Net.IWebProxy> that contains the proxy information for making requests through a firewall. The default value is the operating system proxy settings.","pos":[0,164],"nodes":[{"content":"An &lt;xref:System.Net.IWebProxy&gt; that contains the proxy information for making requests through a firewall.","pos":[0,106],"source":"An <xref:System.Net.IWebProxy> that contains the proxy information for making requests through a firewall."},{"content":"The default value is the operating system proxy settings.","pos":[107,164]}]}]},{"pos":[24605,24780],"content":"Gets or sets a value that indicates whether connection sharing is enabled when the client uses NTLM authentication to connect to the Web server that hosts the XML Web service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether connection sharing is enabled when the client uses NTLM authentication to connect to the Web server that hosts the XML Web service.","pos":[0,175]}]},{"pos":[24792,24990],"content":"This property sets the value of the <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> property of the <xref:System.Net.HttpWebRequest> used to communicate with the Web server.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property sets the value of the &lt;xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A&gt; property of the &lt;xref:System.Net.HttpWebRequest&gt; used to communicate with the Web server.","pos":[0,198],"source":"This property sets the value of the <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> property of the <xref:System.Net.HttpWebRequest> used to communicate with the Web server."}]},{"pos":[25135,25383],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if connection sharing is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if connection sharing is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,169],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if connection sharing is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[170,248],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[25942,26022],"content":"Gets or sets the value for the user agent header that is sent with each request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the value for the user agent header that is sent with each request.","pos":[0,80]}]},{"pos":[26034,26099],"content":"The user agent string allows a Web server to identify the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user agent string allows a Web server to identify the client.","pos":[0,65]}]},{"pos":[26569,26788],"content":"The value of the HTTP protocol user agent header. The default is \"MS Web Services Client Protocol <code>number</code> \", where <code>number</code> is the version of the common language runtime (for example, 1.0.3705.0).","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the HTTP protocol user agent header.","pos":[0,49]},{"content":"The default is \"MS Web Services Client Protocol <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">number</ph><ept id=\"p1\">&lt;/code&gt;</ept> \", where <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">number</ph><ept id=\"p2\">&lt;/code&gt;</ept> is the version of the common language runtime (for example, 1.0.3705.0).","pos":[50,219],"source":" The default is \"MS Web Services Client Protocol <code>number</code> \", where <code>number</code> is the version of the common language runtime (for example, 1.0.3705.0)."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol\n  id: HttpWebClientProtocol\n  children:\n  - System.Web.Services.Protocols.HttpWebClientProtocol.#ctor\n  - System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect\n  - System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates\n  - System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer\n  - System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.Proxy\n  - System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  - System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent\n  langs:\n  - csharp\n  name: HttpWebClientProtocol\n  nameWithType: HttpWebClientProtocol\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol\n  type: Class\n  summary: Represents the base class for all XML Web service client proxies that use the HTTP transport protocol.\n  remarks: \"The properties on this class are used to control the behavior of the HTTP request object used to transmit the XML Web service request and response. The properties map to properties found on <xref:System.Net.HttpWebRequest>.  \\n  \\n To communicate with an XML Web service using HTTP, you must create a proxy class deriving indirectly or directly from HttpWebClientProtocol for the XML Web service. Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description.  \\n  \\n Since HttpWebClientProtocol is the base class for all proxy classes, its properties are on your proxy classes. These properties are useful for controlling the request behavior of the underlying transport. For example, use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> property for calling XML Web services through a firewall. Many of these properties are used to initialize the <xref:System.Net.HttpWebRequest> that makes the Web request.  \\n  \\n <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive directly or indirectly from HttpWebClientProtocol to provide support for SOAP, HTTP-GET and HTTP-POST respectively.\"\n  example:\n  - \"The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form allows the server to automatically redirect the client to other sites. It also sets client authentication credentials, proxy settings, the request encoding and the time out for the request before calling the XML Web service method.  \\n  \\n [!code-cs[Classic HttpWebClientProtocol Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_9_1.aspx)]\\n [!code-vb[Classic HttpWebClientProtocol Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_9_1.aspx)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class HttpWebClientProtocol : System.Web.Services.Protocols.WebClientProtocol\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Web.Services.Protocols.WebClientProtocol\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Web.Services.Protocols.WebClientProtocol.Abort\n  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)\n  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName\n  - System.Web.Services.Protocols.WebClientProtocol.Credentials\n  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)\n  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate\n  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding\n  - System.Web.Services.Protocols.WebClientProtocol.Timeout\n  - System.Web.Services.Protocols.WebClientProtocol.Url\n  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor\n  id: '#ctor'\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: HttpWebClientProtocol()\n  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol()\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.HttpWebClientProtocol()\n  type: Constructor\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"></xref> class.\n  syntax:\n    content: protected HttpWebClientProtocol ();\n    parameters: []\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect\n  id: AllowAutoRedirect\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: AllowAutoRedirect\n  nameWithType: HttpWebClientProtocol.AllowAutoRedirect\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets whether the client automatically follows server redirects.\n  remarks: \"If a client sends authentication information, such as a user name and password, you do not want to enable the server to redirect, because this can compromise security.  \\n  \\n A <xref:System.Net.WebException> is thrown if the AllowAutoRedirect property is `false` and the Web server attempts to redirect the request. The <xref:System.Net.WebException.Response%2A> property contains an <xref:System.Net.HttpWebResponse> object, where both the <xref:System.Net.HttpWebResponse.StatusCode%2A> and <xref:System.Net.HttpWebResponse.Headers%2A> properties reflect details regarding the attempted redirect. The <xref:System.Net.HttpWebResponse.StatusCode%2A> property contains an <xref:System.Net.HttpStatusCode> equivalent to one of the HTTP redirect status codes (301, 302, and 307) and the `Location` header within the <xref:System.Net.HttpWebResponse.Headers%2A> collection points to the URI that the request attempted to be redirected to.\"\n  syntax:\n    content: public bool AllowAutoRedirect { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically redirect the client to follow server redirects; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect*\n  exceptions:\n  - type: System.Net.WebException\n    commentId: T:System.Net.WebException\n    description: The AllowAutoRedirect property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and the Web server attempts to redirect the request.\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)\n  id: CancelAsync(System.Object)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: CancelAsync(Object)\n  nameWithType: HttpWebClientProtocol.CancelAsync(Object)\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(Object)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Cancels an asynchronous call to an XML Web service method, unless the call has already completed.\n  syntax:\n    content: protected void CancelAsync (object userState);\n    parameters:\n    - id: userState\n      type: System.Object\n      description: The object provided in the last parameter to the asynchronous call of the <xref uid=\"langword_csharp_Begin\" name=\"Begin\" href=\"\"></xref> method.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates\n  id: ClientCertificates\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: ClientCertificates\n  nameWithType: HttpWebClientProtocol.ClientCertificates\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets the collection of client certificates.\n  remarks: This property allows a client to pass one or more client certificates, also known as Authenticode X.509 v.3 certificates, when calling an XML Web service method. If the XML Web service method has been configured to use client certificates, a client certificate can be used as one mechanism for authenticating a client. For details on setting up client certificates, see the Internet Information Services (IIS) documentation.\n  example:\n  - \"The following code example demonstrates how to load in a client certificate from a file and then add it to the ClientCertificates property for calling an XML Web service method that uses client certificates for authentication.  \\n  \\n [!code-cs[HttpWebClientProtocol.ClientCertificates#1](~/add/codesnippet/csharp/p-system.web.services.pr_6_1.aspx)]\\n [!code-vb[HttpWebClientProtocol.ClientCertificates#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_6_1.aspx)]\"\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> that represents the client certificates.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer\n  id: CookieContainer\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: CookieContainer\n  nameWithType: HttpWebClientProtocol.CookieContainer\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets the collection of cookies.\n  remarks: If an XML Web service method uses session state, then a cookie is passed back in the response headers to the XML Web service client that uniquely identifies the session for that XML Web service client. In order for an XML Web service to maintain session state for a client, the client must store the cookie. Clients receive the HTTP cookie by creating a new instance of <xref:System.Net.CookieContainer> and assigning that to the CookieContainer property of the proxy class before calling the XML Web service method. If you need to maintain session state beyond when the proxy class instance goes out of scope, the client must store the HTTP cookie between calls to the XML Web service. For instance, a Web Forms client can store the HTTP cookie by saving the <xref:System.Net.CookieContainer> in its own session state. Because not all XML Web services use session state and thus clients are not always required to use the CookieContainer property of a client proxy, the documentation for the XML Web service must state whether session state is used.\n  example:\n  - \"The following code example is a Web Forms client of an XML Web service that uses session state. The client stores the HTTP cookie that uniquely identifies the session by storing it in the client's session state.  \\n  \\n [!code-vb[HttpWebClientProtocol.CookieContainer#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_14_1.aspx)]\\n [!code-cs[HttpWebClientProtocol.CookieContainer#1](~/add/codesnippet/csharp/p-system.web.services.pr_14_1.aspx)]\"\n  syntax:\n    content: public System.Net.CookieContainer CookieContainer { get; set; }\n    return:\n      type: System.Net.CookieContainer\n      description: A <xref:System.Net.CookieContainer> that represents the cookies for a Web Services client.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression\n  id: EnableDecompression\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: EnableDecompression\n  nameWithType: HttpWebClientProtocol.EnableDecompression\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets a value that indicates whether decompression is enabled for this <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"></xref>.\n  syntax:\n    content: public bool EnableDecompression { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if decompression is enabled for this <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)\n  id: GenerateXmlMappings(System.Type,System.Collections.ArrayList)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: GenerateXmlMappings(Type,ArrayList)\n  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets the <xref href=\"System.Xml.Serialization.XmlMembersMapping\"></xref> for each XML Web service method exposed by the specified type, and stores the mappings in the specified <xref href=\"System.Collections.ArrayList\"></xref>.\n  syntax:\n    content: public static bool GenerateXmlMappings (Type type, System.Collections.ArrayList mappings);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref:System.Type> that exposes the XML Web service methods.\n    - id: mappings\n      type: System.Collections.ArrayList\n      description: A <xref href=\"System.Collections.ArrayList\"></xref> that is used to store the mappings.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>type</code> can be assigned to a <xref href=\"System.Web.Services.Protocols.SoapHttpClientProtocol\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)\n  id: GenerateXmlMappings(System.Type[],System.Collections.ArrayList)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: GenerateXmlMappings(Type[],ArrayList)\n  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets the <xref href=\"System.Xml.Serialization.XmlMembersMapping\"></xref> for each XML Web service method exposed by the specified types, and stores the mappings in the specified <xref href=\"System.Collections.ArrayList\"></xref>, as well as in a <xref href=\"System.Collections.Hashtable\"></xref> that this method returns.\n  syntax:\n    content: public static System.Collections.Hashtable GenerateXmlMappings (Type[] types, System.Collections.ArrayList mappings);\n    parameters:\n    - id: types\n      type: System.Type[]\n      description: An array of type <xref:System.Type> that contains the types that expose the XML Web service methods.\n    - id: mappings\n      type: System.Collections.ArrayList\n      description: A <xref href=\"System.Collections.ArrayList\"></xref> that is used to store the mappings.\n    return:\n      type: System.Collections.Hashtable\n      description: A <xref href=\"System.Collections.Hashtable\"></xref> that contains the <xref href=\"System.Xml.Serialization.XmlMembersMapping\"></xref> for each XML Web service method exposed by the specified types. The types contained in <code>types</code> are used as keys.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)\n  id: GetWebRequest(System.Uri)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: GetWebRequest(Uri)\n  nameWithType: HttpWebClientProtocol.GetWebRequest(Uri)\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(Uri)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Creates a <xref:System.Net.WebRequest> for the specified URI.\n  syntax:\n    content: protected override System.Net.WebRequest GetWebRequest (Uri uri);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The <xref:System.Uri> for creating the <xref:System.Net.WebRequest>.\n    return:\n      type: System.Net.WebRequest\n      description: The created <xref:System.Net.WebRequest>.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <code>uri</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)\n  id: GetWebResponse(System.Net.WebRequest)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: GetWebResponse(WebRequest)\n  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest)\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Returns a response from a synchronous request to an XML Web service method.\n  syntax:\n    content: protected override System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);\n    parameters:\n    - id: request\n      type: System.Net.WebRequest\n      description: The <xref:System.Net.WebRequest> from which to get the response.\n    return:\n      type: System.Net.WebResponse\n      description: A response from a synchronous request to an XML Web service method.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  id: GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: GetWebResponse(WebRequest,IAsyncResult)\n  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Returns a response from an asynchronous request to an XML Web service method.\n  syntax:\n    content: protected override System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);\n    parameters:\n    - id: request\n      type: System.Net.WebRequest\n      description: The <xref:System.Net.WebRequest> from which to get the response.\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> to pass to <xref:System.Net.HttpWebRequest.EndGetResponse*> when the response has completed.\n    return:\n      type: System.Net.WebResponse\n      description: A response from an asynchronous request to an XML Web service method.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy\n  id: Proxy\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: Proxy\n  nameWithType: HttpWebClientProtocol.Proxy\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets proxy information for making an XML Web service request through a firewall.\n  remarks: \"Use the Proxy property if a client needs to use different proxy settings than those in the system settings. Use the <xref:System.Net.WebProxy> class to set the proxy settings, because it implements <xref:System.Net.IWebProxy>.  \\n  \\n Default proxy settings can be set in a configuration file. For details, see [Configuring Internet Applications](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example sets the following proxy settings prior to invoking the `Math` XML Web service: the proxy server to http://proxyserver, the proxy port to 80 and the bypass to the proxy server for local addresses.  \\n  \\n [!code-cpp[Classic HttpWebClientProtocol.Proxy Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_56_1.cpp)]\\n [!code-vb[Classic HttpWebClientProtocol.Proxy Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_56_1.vb)]\\n [!code-cs[Classic HttpWebClientProtocol.Proxy Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_56_1.cs)]\"\n  syntax:\n    content: public System.Net.IWebProxy Proxy { get; set; }\n    return:\n      type: System.Net.IWebProxy\n      description: An <xref:System.Net.IWebProxy> that contains the proxy information for making requests through a firewall. The default value is the operating system proxy settings.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  id: UnsafeAuthenticatedConnectionSharing\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: UnsafeAuthenticatedConnectionSharing\n  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets a value that indicates whether connection sharing is enabled when the client uses NTLM authentication to connect to the Web server that hosts the XML Web service.\n  remarks: This property sets the value of the <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> property of the <xref:System.Net.HttpWebRequest> used to communicate with the Web server.\n  syntax:\n    content: public bool UnsafeAuthenticatedConnectionSharing { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if connection sharing is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent\n  id: UserAgent\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: UserAgent\n  nameWithType: HttpWebClientProtocol.UserAgent\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets the value for the user agent header that is sent with each request.\n  remarks: The user agent string allows a Web server to identify the client.\n  example:\n  - >-\n    [!code-cs[HttpWebClientProtocol_UserAgent#1](~/add/codesnippet/csharp/p-system.web.services.pr_74_1.cs)]\n     [!code-vb[HttpWebClientProtocol_UserAgent#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_74_1.vb)]\n     [!code-cpp[HttpWebClientProtocol_UserAgent#1](~/add/codesnippet/cpp/p-system.web.services.pr_74_1.cpp)]\n  syntax:\n    content: public string UserAgent { get; set; }\n    return:\n      type: System.String\n      description: The value of the HTTP protocol user agent header. The default is \"MS Web Services Client Protocol <code>number</code> \", where <code>number</code> is the version of the common language runtime (for example, 1.0.3705.0).\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: System.Web.Services.Protocols.WebClientProtocol\n- uid: System.Net.WebException\n  isExternal: true\n  name: System.Net.WebException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: HttpWebClientProtocol()\n  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol()\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.HttpWebClientProtocol()\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: AllowAutoRedirect\n  nameWithType: HttpWebClientProtocol.AllowAutoRedirect\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: CancelAsync(Object)\n  nameWithType: HttpWebClientProtocol.CancelAsync(Object)\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: ClientCertificates\n  nameWithType: HttpWebClientProtocol.ClientCertificates\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509CertificateCollection\n  nameWithType: X509CertificateCollection\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: CookieContainer\n  nameWithType: HttpWebClientProtocol.CookieContainer\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer\n- uid: System.Net.CookieContainer\n  parent: System.Net\n  isExternal: true\n  name: CookieContainer\n  nameWithType: CookieContainer\n  fullName: System.Net.CookieContainer\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: EnableDecompression\n  nameWithType: HttpWebClientProtocol.EnableDecompression\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GenerateXmlMappings(Type,ArrayList)\n  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Collections.ArrayList\n  parent: System.Collections\n  isExternal: false\n  name: ArrayList\n  nameWithType: ArrayList\n  fullName: System.Collections.ArrayList\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GenerateXmlMappings(Type[],ArrayList)\n  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)\n- uid: System.Collections.Hashtable\n  parent: System.Collections\n  isExternal: false\n  name: Hashtable\n  nameWithType: Hashtable\n  fullName: System.Collections.Hashtable\n- uid: System.Type[]\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GetWebRequest(Uri)\n  nameWithType: HttpWebClientProtocol.GetWebRequest(Uri)\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(Uri)\n- uid: System.Net.WebRequest\n  parent: System.Net\n  isExternal: true\n  name: WebRequest\n  nameWithType: WebRequest\n  fullName: System.Net.WebRequest\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GetWebResponse(WebRequest)\n  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest)\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest)\n- uid: System.Net.WebResponse\n  parent: System.Net\n  isExternal: true\n  name: WebResponse\n  nameWithType: WebResponse\n  fullName: System.Net.WebResponse\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GetWebResponse(WebRequest,IAsyncResult)\n  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: Proxy\n  nameWithType: HttpWebClientProtocol.Proxy\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy\n- uid: System.Net.IWebProxy\n  parent: System.Net\n  isExternal: true\n  name: IWebProxy\n  nameWithType: IWebProxy\n  fullName: System.Net.IWebProxy\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: UnsafeAuthenticatedConnectionSharing\n  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: UserAgent\n  nameWithType: HttpWebClientProtocol.UserAgent\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: HttpWebClientProtocol\n  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: AllowAutoRedirect\n  nameWithType: HttpWebClientProtocol.AllowAutoRedirect\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: CancelAsync\n  nameWithType: HttpWebClientProtocol.CancelAsync\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: ClientCertificates\n  nameWithType: HttpWebClientProtocol.ClientCertificates\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: CookieContainer\n  nameWithType: HttpWebClientProtocol.CookieContainer\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: EnableDecompression\n  nameWithType: HttpWebClientProtocol.EnableDecompression\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GenerateXmlMappings\n  nameWithType: HttpWebClientProtocol.GenerateXmlMappings\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GetWebRequest\n  nameWithType: HttpWebClientProtocol.GetWebRequest\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GetWebResponse\n  nameWithType: HttpWebClientProtocol.GetWebResponse\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: Proxy\n  nameWithType: HttpWebClientProtocol.Proxy\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: UnsafeAuthenticatedConnectionSharing\n  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: UserAgent\n  nameWithType: HttpWebClientProtocol.UserAgent\n"}