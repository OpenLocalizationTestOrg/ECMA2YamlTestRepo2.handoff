{"nodes":[{"pos":[1206,1446],"content":"Animates the value of a <xref:System.Double> property between two or more target values using a <xref href=\"System.Windows.Media.PathGeometry\"></xref> to specify those values. This animation can be used to move a visual object along a path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Animates the value of a &lt;xref:System.Double&gt; property between two or more target values using a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.PathGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to specify those values.","pos":[0,175],"source":"Animates the value of a <xref:System.Double> property between two or more target values using a <xref href=\"System.Windows.Media.PathGeometry\"></xref> to specify those values."},{"content":"This animation can be used to move a visual object along a path.","pos":[176,240]}]},{"pos":[1459,2122],"content":"DoubleAnimationUsingPath uses      linear interpolation over a specified <xref:System.Windows.Media.Animation.Timeline.Duration%2A>.       DoubleAnimationUsingPath is similar to <xref:System.Windows.Media.Animation.DoubleAnimation> except that it uses a <xref:System.Windows.Media.PathGeometry> to interpolate over two or more values rather then between only two values like <xref:System.Windows.Media.Animation.DoubleAnimation>. Although <xref:System.Windows.Media.Animation.DoubleAnimation> is used for most simple animations involving a Double value, DoubleAnimationUsingPath is particularly well suited for animating the position of an object on the screen.","needQuote":false,"needEscape":true,"nodes":[{"content":"DoubleAnimationUsingPath uses      linear interpolation over a specified <xref:System.Windows.Media.Animation.Timeline.Duration%2A>.       DoubleAnimationUsingPath is similar to <xref:System.Windows.Media.Animation.DoubleAnimation> except that it uses a <xref:System.Windows.Media.PathGeometry> to interpolate over two or more values rather then between only two values like <xref:System.Windows.Media.Animation.DoubleAnimation>. Although <xref:System.Windows.Media.Animation.DoubleAnimation> is used for most simple animations involving a Double value, DoubleAnimationUsingPath is particularly well suited for animating the position of an object on the screen.","pos":[0,661],"nodes":[{"content":"DoubleAnimationUsingPath uses      linear interpolation over a specified &lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;.","pos":[0,132],"source":"DoubleAnimationUsingPath uses      linear interpolation over a specified <xref:System.Windows.Media.Animation.Timeline.Duration%2A>."},{"content":"DoubleAnimationUsingPath is similar to &lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt; except that it uses a &lt;xref:System.Windows.Media.PathGeometry&gt; to interpolate over two or more values rather then between only two values like &lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;.","pos":[139,429],"source":"       DoubleAnimationUsingPath is similar to <xref:System.Windows.Media.Animation.DoubleAnimation> except that it uses a <xref:System.Windows.Media.PathGeometry> to interpolate over two or more values rather then between only two values like <xref:System.Windows.Media.Animation.DoubleAnimation>."},{"content":"Although &lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt; is used for most simple animations involving a Double value, DoubleAnimationUsingPath is particularly well suited for animating the position of an object on the screen.","pos":[430,661],"source":" Although <xref:System.Windows.Media.Animation.DoubleAnimation> is used for most simple animations involving a Double value, DoubleAnimationUsingPath is particularly well suited for animating the position of an object on the screen."}]}]},{"pos":[9468,9585],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleAnimationUsingPath\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.DoubleAnimationUsingPath\"></xref> class."},{"pos":[9597,9687],"content":"There is no default <xref:System.Windows.Media.PathGeometry> so the user must specify one.","needQuote":true,"needEscape":true,"nodes":[{"content":"There is no default &lt;xref:System.Windows.Media.PathGeometry&gt; so the user must specify one.","pos":[0,90],"source":"There is no default <xref:System.Windows.Media.PathGeometry> so the user must specify one."}]},{"pos":[10294,10622],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.DoubleAnimationUsingPath\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a modifiable clone of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleAnimationUsingPath\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, making deep copies of this object's values.","pos":[0,156],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.DoubleAnimationUsingPath\"></xref>, making deep copies of this object's values."},{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[157,328]}]},{"pos":[10635,10980],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","pos":[0,343],"nodes":[{"content":"This method is used to produce modifiable copies of frozen &lt;xref:System.Windows.Freezable&gt; objects (or any &lt;xref:System.Windows.Freezable&gt; object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[148,244]},{"content":"For more information, see &lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName&gt;.","pos":[251,343],"source":"       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."}]}]},{"pos":[11196,11518],"content":"A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>","needQuote":true,"needEscape":true,"nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's &lt;xref:System.Windows.Freezable.IsFrozen<bpt id=\"p1\">*</bpt>&gt; property will be <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> even if the source's &lt;xref:System.Windows.Freezable.IsFrozen<ept id=\"p1\">*</ept>&gt; property was <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>","pos":[42,322],"source":" The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>"}]},{"pos":[12112,12182],"content":"Implementation of <xref:System.Windows.Freezable.CreateInstanceCore*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implementation of &lt;xref:System.Windows.Freezable.CreateInstanceCore*&gt;.","pos":[0,70],"source":"Implementation of <xref:System.Windows.Freezable.CreateInstanceCore*>."}]},{"pos":[12360,12422],"content":"The new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> created.","needQuote":true,"needEscape":true,"source":"The new <xref href=\"System.Windows.Freezable\"></xref> created."},{"pos":[13268,13451],"content":"Calculates a value that represents the current value of the property being animated, as determined by the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleAnimationUsingPath\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Calculates a value that represents the current value of the property being animated, as determined by the <xref href=\"System.Windows.Media.Animation.DoubleAnimationUsingPath\"></xref>."},{"pos":[13464,14078],"content":"If the `defaultOriginValue` is the first in the composition chain, this value will be the snapshot value (if one is available) or the base property value; otherwise this value will be the value returned by the previous animation in the chain with an <xref:System.Windows.Media.Animation.AnimationClock> that is not <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.       The `defaultDestinationValue` is the base value if the animation is in the first composition layer of animations on a property; otherwise the value is the output value from the previous composition layer of animations for the property.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the <ph id=\"ph1\">`defaultOriginValue`</ph> is the first in the composition chain, this value will be the snapshot value (if one is available) or the base property value; otherwise this value will be the value returned by the previous animation in the chain with an &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; that is not &lt;xref:System.Windows.Media.Animation.Clock.Stopped%2A&gt;.","pos":[0,370],"source":"If the `defaultOriginValue` is the first in the composition chain, this value will be the snapshot value (if one is available) or the base property value; otherwise this value will be the value returned by the previous animation in the chain with an <xref:System.Windows.Media.Animation.AnimationClock> that is not <xref:System.Windows.Media.Animation.Clock.Stopped%2A>."},{"content":"The <ph id=\"ph1\">`defaultDestinationValue`</ph> is the base value if the animation is in the first composition layer of animations on a property; otherwise the value is the output value from the previous composition layer of animations for the property.","pos":[377,612],"source":"       The `defaultDestinationValue` is the base value if the animation is in the first composition layer of animations on a property; otherwise the value is the output value from the previous composition layer of animations for the property."}]},{"pos":[14362,14461],"content":"The suggested origin value, used if the animation does not have its own explicitly set start value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The suggested origin value, used if the animation does not have its own explicitly set start value.","pos":[0,99]}]},{"pos":[14541,14643],"content":"The suggested destination value, used if the animation does not have its own explicitly set end value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The suggested destination value, used if the animation does not have its own explicitly set end value.","pos":[0,102]}]},{"pos":[14746,14978],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.AnimationClock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that generates the &lt;xref:System.Windows.Media.Animation.Clock.CurrentTime<bpt id=\"p2\">*</bpt>&gt; or &lt;xref:System.Windows.Media.Animation.Clock.CurrentProgress<ept id=\"p2\">*</ept>&gt; used by the animation.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> that generates the <xref:System.Windows.Media.Animation.Clock.CurrentTime*> or <xref:System.Windows.Media.Animation.Clock.CurrentProgress*> used by the animation."},{"pos":[15036,15113],"content":"The calculated value of the property, as determined by the current animation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The calculated value of the property, as determined by the current animation.","pos":[0,77]}]},{"pos":[15677,15808],"content":"Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.","pos":[0,131]}]},{"pos":[15821,16272],"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Additive\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|      &gt; <ph id=\"ph2\">[!NOTE]</ph> &gt;  This dependency property is unusual in that the identifier field for it comes from &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;, and is shared by various derived classes.","needQuote":false,"needEscape":true,"source":"<a name=\"dependencyPropertyInfo_Additive\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|   |Metadata properties set to `true`|None|      > [!NOTE] >  This dependency property is unusual in that the identifier field for it comes from <xref:System.Windows.Media.Animation.AnimationTimeline>, and is shared by various derived classes."},{"pos":[16392,16703],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the target property's current value should be added to this animation's starting value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the target property's current value should be added to this animation's starting value; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,226],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the target property's current value should be added to this animation's starting value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[227,311],"source":" The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[17268,17362],"content":"Gets or sets a value that specifies whether the animation's value accumulates when it repeats.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies whether the animation's value accumulates when it repeats.","pos":[0,94]}]},{"pos":[17375,18246],"content":"When this property is set to `true`, the animation's output values only accumulate when the animation's <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> property causes it to repeat its simple duration. It does not accumulate its values when it restarts because its parent repeated or because its clock was restarted from a <xref:System.Windows.Media.Animation.ClockController.Begin%2A> call.      <a name=\"dependencyPropertyInfo_Cumulative\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>|   |Metadata properties set to `true`|None|      > [!NOTE] >  This dependency property is unusual in that the identifier field for it comes from <xref:System.Windows.Media.Animation.AnimationTimeline>, and is shared by various derived classes.","needQuote":false,"needEscape":true,"nodes":[{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, the animation's output values only accumulate when the animation's &lt;xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A&gt; property causes it to repeat its simple duration.","pos":[0,218],"source":"When this property is set to `true`, the animation's output values only accumulate when the animation's <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> property causes it to repeat its simple duration."},{"content":"It does not accumulate its values when it restarts because its parent repeated or because its clock was restarted from a &lt;xref:System.Windows.Media.Animation.ClockController.Begin%2A&gt; call.","pos":[219,408],"source":" It does not accumulate its values when it restarts because its parent repeated or because its clock was restarted from a <xref:System.Windows.Media.Animation.ClockController.Begin%2A> call."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Cumulative\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|      &gt; <ph id=\"ph2\">[!NOTE]</ph> &gt;  This dependency property is unusual in that the identifier field for it comes from &lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;, and is shared by various derived classes.","pos":[414,858],"source":"<a name=\"dependencyPropertyInfo_Cumulative\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>|   |Metadata properties set to `true`|None|      > [!NOTE] >  This dependency property is unusual in that the identifier field for it comes from <xref:System.Windows.Media.Animation.AnimationTimeline>, and is shared by various derived classes."}]},{"pos":[18368,18750],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the animation accumulates its values when its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*> property causes it to repeat its simple duration. otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the animation accumulates its values when its &lt;xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*&gt; property causes it to repeat its simple duration.","pos":[0,222],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the animation accumulates its values when its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*> property causes it to repeat its simple duration."},{"content":"otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[223,297],"source":" otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[298,382],"source":" The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[19306,19412],"content":"Called when this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleAnimationUsingPath\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is modified.","needQuote":true,"needEscape":true,"source":"Called when this <xref href=\"System.Windows.Media.Animation.DoubleAnimationUsingPath\"></xref> is modified."},{"pos":[20056,20127],"content":"Specifies the geometry used to generate this animation's output values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the geometry used to generate this animation's output values.","pos":[0,71]}]},{"pos":[20140,21070],"content":"In [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], you can use a special abbreviated syntax to describe the path.       [!code-xml[PathAnimationGallery_snip#DoubleAnimationUsingPathAttributeSyntaxExample](~/add/codesnippet/xaml/p-system.windows.media.a_6_1.xaml)]  [!code-xml[PathAnimationGallery_snip#DoubleAnimationUsingPathAttributeSyntaxExample](~/add/codesnippet/xaml/p-system.windows.media.a_6_1.xaml)]       For more information about PathGeometry markup syntax, see [Path Markup Syntax](~/add/includes/ajax-current-ext-md.md). For more examples of creating a path using markup or code, see <xref:System.Windows.Media.PathGeometry>.      <a name=\"dependencyPropertyInfo_PathGeometry\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier Field|<xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"In <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph>, you can use a special abbreviated syntax to describe the path.","pos":[0,130],"source":"In [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], you can use a special abbreviated syntax to describe the path."},{"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>PathAnimationGallery_snip#DoubleAnimationUsingPathAttributeSyntaxExample<ept id=\"p2\">](~/add/codesnippet/xaml/p-system.windows.media.a_6_1.xaml)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-xml</bpt><bpt id=\"p4\">[</bpt>PathAnimationGallery_snip#DoubleAnimationUsingPathAttributeSyntaxExample<ept id=\"p4\">](~/add/codesnippet/xaml/p-system.windows.media.a_6_1.xaml)</ept><ept id=\"p3\">]</ept>       For more information about PathGeometry markup syntax, see <bpt id=\"p5\">[</bpt>Path Markup Syntax<ept id=\"p5\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[137,551],"source":"[!code-xml[PathAnimationGallery_snip#DoubleAnimationUsingPathAttributeSyntaxExample](~/add/codesnippet/xaml/p-system.windows.media.a_6_1.xaml)]  [!code-xml[PathAnimationGallery_snip#DoubleAnimationUsingPathAttributeSyntaxExample](~/add/codesnippet/xaml/p-system.windows.media.a_6_1.xaml)]       For more information about PathGeometry markup syntax, see [Path Markup Syntax](~/add/includes/ajax-current-ext-md.md)."},{"content":"For more examples of creating a path using markup or code, see &lt;xref:System.Windows.Media.PathGeometry&gt;.","pos":[552,656],"source":" For more examples of creating a path using markup or code, see <xref:System.Windows.Media.PathGeometry>."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_PathGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier Field|&lt;xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[662,915],"source":"<a name=\"dependencyPropertyInfo_PathGeometry\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier Field|<xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[21240,21380],"content":"The path used to generate this animation's output values. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path used to generate this animation's output values.","pos":[0,57]},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[58,140],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[21984,22096],"content":"Identifies the <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*&gt; dependency property.","pos":[0,112],"source":"Identifies the <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*> dependency property."}]},{"pos":[22276,22288],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22743,22897],"content":"Gets or sets the aspect of this animation's <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*> that determines its output value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the aspect of this animation's &lt;xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*&gt; that determines its output value.","pos":[0,154],"source":"Gets or sets the aspect of this animation's <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*> that determines its output value."}]},{"pos":[22910,23159],"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Source\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","needQuote":false,"needEscape":true,"source":"<a name=\"dependencyPropertyInfo_Source\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty>|   |Metadata properties set to `true`|None|"},{"pos":[23357,23592],"content":"The aspect of this animation's <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*> that determines its output value. The default value is <xref href=\"System.Windows.Media.Animation.PathAnimationSource\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The aspect of this animation's &lt;xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*&gt; that determines its output value.","pos":[0,141],"source":"The aspect of this animation's <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*> that determines its output value."},{"content":"The default value is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.PathAnimationSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[142,235],"source":" The default value is <xref href=\"System.Windows.Media.Animation.PathAnimationSource\"></xref>."}]},{"pos":[24160,24266],"content":"Identifies the <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.Source*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.Source*&gt; dependency property.","pos":[0,106],"source":"Identifies the <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.Source*> dependency property."}]},{"pos":[24440,24452],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  id: DoubleAnimationUsingPath\n  children:\n  - System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor\n  - System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone\n  - System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore\n  - System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive\n  - System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative\n  - System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged\n  - System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry\n  - System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty\n  - System.Windows.Media.Animation.DoubleAnimationUsingPath.Source\n  - System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty\n  langs:\n  - csharp\n  name: DoubleAnimationUsingPath\n  nameWithType: DoubleAnimationUsingPath\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  type: Class\n  summary: Animates the value of a <xref:System.Double> property between two or more target values using a <xref href=\"System.Windows.Media.PathGeometry\"></xref> to specify those values. This animation can be used to move a visual object along a path.\n  remarks: \"DoubleAnimationUsingPath uses      linear interpolation over a specified <xref:System.Windows.Media.Animation.Timeline.Duration%2A>.  \\n  \\n DoubleAnimationUsingPath is similar to <xref:System.Windows.Media.Animation.DoubleAnimation> except that it uses a <xref:System.Windows.Media.PathGeometry> to interpolate over two or more values rather then between only two values like <xref:System.Windows.Media.Animation.DoubleAnimation>. Although <xref:System.Windows.Media.Animation.DoubleAnimation> is used for most simple animations involving a Double value, DoubleAnimationUsingPath is particularly well suited for animating the position of an object on the screen.\"\n  syntax:\n    content: 'public class DoubleAnimationUsingPath : System.Windows.Media.Animation.DoubleAnimationBase'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  - System.Windows.Media.Animation.Timeline\n  - System.Windows.Media.Animation.AnimationTimeline\n  - System.Windows.Media.Animation.DoubleAnimationBase\n  implements: []\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Media.Animation.AnimationTimeline.AllocateClock\n  - System.Windows.Media.Animation.AnimationTimeline.CreateClock\n  - System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)\n  - System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty\n  - System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty\n  - System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault\n  - System.Windows.Media.Animation.DoubleAnimationBase.GetCurrentValue(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.DoubleAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.DoubleAnimationBase.TargetPropertyType\n  - System.Windows.Media.Animation.Timeline.AccelerationRatio\n  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty\n  - System.Windows.Media.Animation.Timeline.AutoReverse\n  - System.Windows.Media.Animation.Timeline.AutoReverseProperty\n  - System.Windows.Media.Animation.Timeline.BeginTime\n  - System.Windows.Media.Animation.Timeline.BeginTimeProperty\n  - System.Windows.Media.Animation.Timeline.CloneCurrentValue\n  - System.Windows.Media.Animation.Timeline.Completed\n  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)\n  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated\n  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated\n  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated\n  - System.Windows.Media.Animation.Timeline.DecelerationRatio\n  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty\n  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty\n  - System.Windows.Media.Animation.Timeline.Duration\n  - System.Windows.Media.Animation.Timeline.DurationProperty\n  - System.Windows.Media.Animation.Timeline.FillBehavior\n  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty\n  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)\n  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)\n  - System.Windows.Media.Animation.Timeline.Name\n  - System.Windows.Media.Animation.Timeline.NameProperty\n  - System.Windows.Media.Animation.Timeline.RemoveRequested\n  - System.Windows.Media.Animation.Timeline.RepeatBehavior\n  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty\n  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})\n  - System.Windows.Media.Animation.Timeline.SpeedRatio\n  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  langs:\n  - csharp\n  name: DoubleAnimationUsingPath()\n  nameWithType: DoubleAnimationUsingPath.DoubleAnimationUsingPath()\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.DoubleAnimationUsingPath()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.DoubleAnimationUsingPath\"></xref> class.\n  remarks: There is no default <xref:System.Windows.Media.PathGeometry> so the user must specify one.\n  syntax:\n    content: public DoubleAnimationUsingPath ();\n    parameters: []\n  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone\n  id: Clone\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: DoubleAnimationUsingPath.Clone()\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.DoubleAnimationUsingPath\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.Animation.DoubleAnimationUsingPath Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Animation.DoubleAnimationUsingPath\n      description: A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>\n  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: DoubleAnimationUsingPath.CreateInstanceCore()\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Implementation of <xref:System.Windows.Freezable.CreateInstanceCore*>.\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: The new <xref href=\"System.Windows.Freezable\"></xref> created.\n  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)\n  id: GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  langs:\n  - csharp\n  name: GetCurrentValueCore(Double,Double,AnimationClock)\n  nameWithType: DoubleAnimationUsingPath.GetCurrentValueCore(Double,Double,AnimationClock)\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(Double,Double,AnimationClock)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Calculates a value that represents the current value of the property being animated, as determined by the <xref href=\"System.Windows.Media.Animation.DoubleAnimationUsingPath\"></xref>.\n  remarks: \"If the `defaultOriginValue` is the first in the composition chain, this value will be the snapshot value (if one is available) or the base property value; otherwise this value will be the value returned by the previous animation in the chain with an <xref:System.Windows.Media.Animation.AnimationClock> that is not <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.  \\n  \\n The `defaultDestinationValue` is the base value if the animation is in the first composition layer of animations on a property; otherwise the value is the output value from the previous composition layer of animations for the property.\"\n  syntax:\n    content: protected override double GetCurrentValueCore (double defaultOriginValue, double defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);\n    parameters:\n    - id: defaultOriginValue\n      type: System.Double\n      description: The suggested origin value, used if the animation does not have its own explicitly set start value.\n    - id: defaultDestinationValue\n      type: System.Double\n      description: The suggested destination value, used if the animation does not have its own explicitly set end value.\n    - id: animationClock\n      type: System.Windows.Media.Animation.AnimationClock\n      description: An <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> that generates the <xref:System.Windows.Media.Animation.Clock.CurrentTime*> or <xref:System.Windows.Media.Animation.Clock.CurrentProgress*> used by the animation.\n    return:\n      type: System.Double\n      description: The calculated value of the property, as determined by the current animation.\n  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive\n  id: IsAdditive\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  langs:\n  - csharp\n  name: IsAdditive\n  nameWithType: DoubleAnimationUsingPath.IsAdditive\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_Additive\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|  \\n|Metadata properties set to `true`|None|  \\n  \\n> [!NOTE]\\n>  This dependency property is unusual in that the identifier field for it comes from <xref:System.Windows.Media.Animation.AnimationTimeline>, and is shared by various derived classes.\"\n  syntax:\n    content: public bool IsAdditive { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the target property's current value should be added to this animation's starting value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative\n  id: IsCumulative\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  langs:\n  - csharp\n  name: IsCumulative\n  nameWithType: DoubleAnimationUsingPath.IsCumulative\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets or sets a value that specifies whether the animation's value accumulates when it repeats.\n  remarks: \"When this property is set to `true`, the animation's output values only accumulate when the animation's <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> property causes it to repeat its simple duration. It does not accumulate its values when it restarts because its parent repeated or because its clock was restarted from a <xref:System.Windows.Media.Animation.ClockController.Begin%2A> call.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Cumulative\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>|  \\n|Metadata properties set to `true`|None|  \\n  \\n> [!NOTE]\\n>  This dependency property is unusual in that the identifier field for it comes from <xref:System.Windows.Media.Animation.AnimationTimeline>, and is shared by various derived classes.\"\n  syntax:\n    content: public bool IsCumulative { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the animation accumulates its values when its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*> property causes it to repeat its simple duration. otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged\n  id: OnChanged\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  langs:\n  - csharp\n  name: OnChanged()\n  nameWithType: DoubleAnimationUsingPath.OnChanged()\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Called when this <xref href=\"System.Windows.Media.Animation.DoubleAnimationUsingPath\"></xref> is modified.\n  syntax:\n    content: protected override void OnChanged ();\n    parameters: []\n  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry\n  id: PathGeometry\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  langs:\n  - csharp\n  name: PathGeometry\n  nameWithType: DoubleAnimationUsingPath.PathGeometry\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Specifies the geometry used to generate this animation's output values.\n  remarks: \"In [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], you can use a special abbreviated syntax to describe the path.  \\n  \\n [!code-xml[PathAnimationGallery_snip#DoubleAnimationUsingPathAttributeSyntaxExample](~/add/codesnippet/xaml/p-system.windows.media.a_6_1.xaml)]\\n [!code-xml[PathAnimationGallery_snip#DoubleAnimationUsingPathAttributeSyntaxExample](~/add/codesnippet/xaml/p-system.windows.media.a_6_1.xaml)]  \\n  \\n For more information about PathGeometry markup syntax, see [Path Markup Syntax](~/add/includes/ajax-current-ext-md.md). For more examples of creating a path using markup or code, see <xref:System.Windows.Media.PathGeometry>.  \\n  \\n<a name=\\\"dependencyPropertyInfo_PathGeometry\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier Field|<xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public System.Windows.Media.PathGeometry PathGeometry { get; set; }\n    return:\n      type: System.Windows.Media.PathGeometry\n      description: The path used to generate this animation's output values. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty\n  id: PathGeometryProperty\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  langs:\n  - csharp\n  name: PathGeometryProperty\n  nameWithType: DoubleAnimationUsingPath.PathGeometryProperty\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Identifies the <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty PathGeometryProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source\n  id: Source\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  langs:\n  - csharp\n  name: Source\n  nameWithType: DoubleAnimationUsingPath.Source\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets or sets the aspect of this animation's <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*> that determines its output value.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_Source\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public System.Windows.Media.Animation.PathAnimationSource Source { get; set; }\n    return:\n      type: System.Windows.Media.Animation.PathAnimationSource\n      description: The aspect of this animation's <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*> that determines its output value. The default value is <xref href=\"System.Windows.Media.Animation.PathAnimationSource\"></xref>.\n  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty\n  id: SourceProperty\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  langs:\n  - csharp\n  name: SourceProperty\n  nameWithType: DoubleAnimationUsingPath.SourceProperty\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Identifies the <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.Source*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty SourceProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Media.Animation.DoubleAnimationBase\n  isExternal: false\n  name: System.Windows.Media.Animation.DoubleAnimationBase\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: DoubleAnimationUsingPath()\n  nameWithType: DoubleAnimationUsingPath.DoubleAnimationUsingPath()\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.DoubleAnimationUsingPath()\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: Clone()\n  nameWithType: DoubleAnimationUsingPath.Clone()\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone()\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: DoubleAnimationUsingPath\n  nameWithType: DoubleAnimationUsingPath\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: DoubleAnimationUsingPath.CreateInstanceCore()\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: GetCurrentValueCore(Double,Double,AnimationClock)\n  nameWithType: DoubleAnimationUsingPath.GetCurrentValueCore(Double,Double,AnimationClock)\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(Double,Double,AnimationClock)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Animation.AnimationClock\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: AnimationClock\n  nameWithType: AnimationClock\n  fullName: System.Windows.Media.Animation.AnimationClock\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: IsAdditive\n  nameWithType: DoubleAnimationUsingPath.IsAdditive\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: IsCumulative\n  nameWithType: DoubleAnimationUsingPath.IsCumulative\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: OnChanged()\n  nameWithType: DoubleAnimationUsingPath.OnChanged()\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged()\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: PathGeometry\n  nameWithType: DoubleAnimationUsingPath.PathGeometry\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry\n- uid: System.Windows.Media.PathGeometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathGeometry\n  nameWithType: PathGeometry\n  fullName: System.Windows.Media.PathGeometry\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: PathGeometryProperty\n  nameWithType: DoubleAnimationUsingPath.PathGeometryProperty\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: Source\n  nameWithType: DoubleAnimationUsingPath.Source\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source\n- uid: System.Windows.Media.Animation.PathAnimationSource\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: PathAnimationSource\n  nameWithType: PathAnimationSource\n  fullName: System.Windows.Media.Animation.PathAnimationSource\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: SourceProperty\n  nameWithType: DoubleAnimationUsingPath.SourceProperty\n  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor*\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: DoubleAnimationUsingPath\n  nameWithType: DoubleAnimationUsingPath.DoubleAnimationUsingPath\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone*\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: Clone\n  nameWithType: DoubleAnimationUsingPath.Clone\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore*\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: DoubleAnimationUsingPath.CreateInstanceCore\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore*\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: GetCurrentValueCore\n  nameWithType: DoubleAnimationUsingPath.GetCurrentValueCore\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive*\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: IsAdditive\n  nameWithType: DoubleAnimationUsingPath.IsAdditive\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative*\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: IsCumulative\n  nameWithType: DoubleAnimationUsingPath.IsCumulative\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged*\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: OnChanged\n  nameWithType: DoubleAnimationUsingPath.OnChanged\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: PathGeometry\n  nameWithType: DoubleAnimationUsingPath.PathGeometry\n- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source*\n  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath\n  isExternal: false\n  name: Source\n  nameWithType: DoubleAnimationUsingPath.Source\n"}