{"nodes":[{"pos":[464,672],"content":"Specifies whether the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security token's <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> should be validated.","needQuote":true,"needEscape":true,"source":"Specifies whether the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token's <xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"></xref> should be validated."},{"pos":[685,1875],"content":"Use the AudienceUriMode property in a federated application that utilizes a security token service (STS) that issues <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens. When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> to the security token. That allows the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:      -   Set the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> property to Always or BearerKeyOnly.      -   Specify the set of valid URIs, by adding the URIs to the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A> collection.       Optionally, override the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> method to specify the validation algorithm to use for the allowed URI.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the AudienceUriMode property in a federated application that utilizes a security token service (STS) that issues <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens. When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> to the security token. That allows the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:      -   Set the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> property to Always or BearerKeyOnly.      -   Specify the set of valid URIs, by adding the URIs to the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A> collection.       Optionally, override the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> method to specify the validation algorithm to use for the allowed URI.","pos":[0,1184],"nodes":[{"content":"Use the AudienceUriMode property in a federated application that utilizes a security token service (STS) that issues &lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt; security tokens.","pos":[0,186],"source":"Use the AudienceUriMode property in a federated application that utilizes a security token service (STS) that issues <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens."},{"content":"When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a &lt;xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&gt; to the security token.","pos":[187,413],"source":" When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> to the security token."},{"content":"That allows the &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt; for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:      -   Set the &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A&gt; property to Always or BearerKeyOnly.","pos":[414,812],"source":" That allows the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:      -   Set the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> property to Always or BearerKeyOnly."},{"content":"-   Specify the set of valid URIs, by adding the URIs to the &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A&gt; collection.","pos":[818,982],"source":"      -   Specify the set of valid URIs, by adding the URIs to the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A> collection."},{"content":"Optionally, override the &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A&gt; method to specify the validation algorithm to use for the allowed URI.","pos":[989,1184],"source":"       Optionally, override the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> method to specify the validation algorithm to use for the allowed URI."}]}]},{"pos":[2361,2368],"content":"Always.","needQuote":true,"needEscape":true,"nodes":[{"content":"Always.","pos":[0,7]}]},{"pos":[2489,2501],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2956,3076],"content":"Only when the security token's key is of type BearerKey and there are no proof of possession keys in the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Only when the security token's key is of type BearerKey and there are no proof of possession keys in the security token.","pos":[0,120]}]},{"pos":[3204,3216],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3631,3637],"content":"Never.","needQuote":true,"needEscape":true,"nodes":[{"content":"Never.","pos":[0,6]}]},{"pos":[3757,3769],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Selectors.AudienceUriMode\n  id: AudienceUriMode\n  children:\n  - System.IdentityModel.Selectors.AudienceUriMode.Always\n  - System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly\n  - System.IdentityModel.Selectors.AudienceUriMode.Never\n  langs:\n  - csharp\n  name: AudienceUriMode\n  nameWithType: AudienceUriMode\n  fullName: System.IdentityModel.Selectors.AudienceUriMode\n  type: Enum\n  summary: Specifies whether the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token's <xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"></xref> should be validated.\n  remarks: \"Use the AudienceUriMode property in a federated application that utilizes a security token service (STS) that issues <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens. When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> to the security token. That allows the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:  \\n  \\n-   Set the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> property to Always or BearerKeyOnly.  \\n  \\n-   Specify the set of valid URIs, by adding the URIs to the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A> collection.  \\n  \\n Optionally, override the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> method to specify the validation algorithm to use for the allowed URI.\"\n  syntax:\n    content: public enum AudienceUriMode\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.AudienceUriMode.Always\n  id: Always\n  parent: System.IdentityModel.Selectors.AudienceUriMode\n  langs:\n  - csharp\n  name: Always\n  nameWithType: AudienceUriMode.Always\n  fullName: System.IdentityModel.Selectors.AudienceUriMode.Always\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Always.\n  syntax:\n    content: Always\n    return:\n      type: System.IdentityModel.Selectors.AudienceUriMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly\n  id: BearerKeyOnly\n  parent: System.IdentityModel.Selectors.AudienceUriMode\n  langs:\n  - csharp\n  name: BearerKeyOnly\n  nameWithType: AudienceUriMode.BearerKeyOnly\n  fullName: System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Only when the security token's key is of type BearerKey and there are no proof of possession keys in the security token.\n  syntax:\n    content: BearerKeyOnly\n    return:\n      type: System.IdentityModel.Selectors.AudienceUriMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.AudienceUriMode.Never\n  id: Never\n  parent: System.IdentityModel.Selectors.AudienceUriMode\n  langs:\n  - csharp\n  name: Never\n  nameWithType: AudienceUriMode.Never\n  fullName: System.IdentityModel.Selectors.AudienceUriMode.Never\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Never.\n  syntax:\n    content: Never\n    return:\n      type: System.IdentityModel.Selectors.AudienceUriMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.IdentityModel.Selectors.AudienceUriMode.Always\n  parent: System.IdentityModel.Selectors.AudienceUriMode\n  isExternal: false\n  name: Always\n  nameWithType: AudienceUriMode.Always\n  fullName: System.IdentityModel.Selectors.AudienceUriMode.Always\n- uid: System.IdentityModel.Selectors.AudienceUriMode\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: AudienceUriMode\n  nameWithType: AudienceUriMode\n  fullName: System.IdentityModel.Selectors.AudienceUriMode\n- uid: System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly\n  parent: System.IdentityModel.Selectors.AudienceUriMode\n  isExternal: false\n  name: BearerKeyOnly\n  nameWithType: AudienceUriMode.BearerKeyOnly\n  fullName: System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly\n- uid: System.IdentityModel.Selectors.AudienceUriMode.Never\n  parent: System.IdentityModel.Selectors.AudienceUriMode\n  isExternal: false\n  name: Never\n  nameWithType: AudienceUriMode.Never\n  fullName: System.IdentityModel.Selectors.AudienceUriMode.Never\n"}