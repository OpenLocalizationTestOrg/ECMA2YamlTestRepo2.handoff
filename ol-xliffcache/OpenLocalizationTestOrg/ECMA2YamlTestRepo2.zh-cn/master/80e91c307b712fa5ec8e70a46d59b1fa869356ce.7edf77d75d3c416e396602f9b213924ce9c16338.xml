{"nodes":[{"pos":[687,758],"content":"Represents an easing function that creates an animated bouncing effect.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an easing function that creates an animated bouncing effect.","pos":[0,71]}]},{"pos":[771,2213],"content":"The following graph demonstrates BounceEase using different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time.       ![BounceEase EasingMode graphs.](~/add/media/bounceease-graph.png \"BounceEase EasingMode graphs.\")       You can specify how many bounces occur using the <xref:System.Windows.Media.Animation.BounceEase.Bounces%2A> property and specify how bouncy (how elastic the bounces are) using the <xref:System.Windows.Media.Animation.BounceEase.Bounciness%2A> property. The <xref:System.Windows.Media.Animation.BounceEase.Bounciness%2A> property specifies the amplitude scaling of the next bounce. For example, a bounciness value of 2 doubles the amplitude of the next bounce during an ease in, and it halves the amplitude of the next bounce during an ease out.       There are several other easing functions besides BounceEase which you can explore using the following Silverlight sample.       [Run this sample](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)       In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.      <a name=\"xamlObjectElementUsage_BounceEase\"></a>    ## XAML Object Element Usage      ```   <BounceEase .../>   ```","needQuote":false,"needEscape":true,"nodes":[{"content":"The following graph demonstrates BounceEase using different values of &lt;xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A&gt;, where <bpt id=\"p1\">*</bpt>f<ept id=\"p1\">*</ept>(<bpt id=\"p2\">*</bpt>t<ept id=\"p2\">*</ept>) represents the animation progress and <bpt id=\"p3\">*</bpt>t<ept id=\"p3\">*</ept> represents time.","pos":[0,215],"source":"The following graph demonstrates BounceEase using different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time."},{"content":"<bpt id=\"p1\">![</bpt>BounceEase EasingMode graphs.<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/bounceease-graph.png \"</bpt>BounceEase EasingMode graphs.<ept id=\"p2\">\")</ept>","pos":[222,320],"source":"![BounceEase EasingMode graphs.](~/add/media/bounceease-graph.png \"BounceEase EasingMode graphs.\")"},{"content":"You can specify how many bounces occur using the &lt;xref:System.Windows.Media.Animation.BounceEase.Bounces%2A&gt; property and specify how bouncy (how elastic the bounces are) using the &lt;xref:System.Windows.Media.Animation.BounceEase.Bounciness%2A&gt; property.","pos":[327,580],"source":"       You can specify how many bounces occur using the <xref:System.Windows.Media.Animation.BounceEase.Bounces%2A> property and specify how bouncy (how elastic the bounces are) using the <xref:System.Windows.Media.Animation.BounceEase.Bounciness%2A> property."},{"content":"The &lt;xref:System.Windows.Media.Animation.BounceEase.Bounciness%2A&gt; property specifies the amplitude scaling of the next bounce.","pos":[581,708],"source":" The <xref:System.Windows.Media.Animation.BounceEase.Bounciness%2A> property specifies the amplitude scaling of the next bounce."},{"content":"For example, a bounciness value of 2 doubles the amplitude of the next bounce during an ease in, and it halves the amplitude of the next bounce during an ease out.","pos":[709,872]},{"content":"There are several other easing functions besides BounceEase which you can explore using the following Silverlight sample.","pos":[879,1000]},{"content":"<bpt id=\"p1\">[</bpt>Run this sample<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=139798&amp;sref=easing_functions_gallery)</ept>       In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from &lt;xref:System.Windows.Media.Animation.EasingFunctionBase&gt;.","pos":[1007,1300],"source":"[Run this sample](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)       In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlObjectElementUsage_BounceEase\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Object Element Usage      <ph id=\"ph1\">```   &lt;BounceEase .../&gt;   ```</ph>","pos":[1306,1421],"source":"<a name=\"xamlObjectElementUsage_BounceEase\"></a>    ## XAML Object Element Usage      ```   <BounceEase .../>   ```"}]},{"pos":[6131,6234],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.BounceEase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.BounceEase\"></xref> class."},{"pos":[6763,6798],"content":"Gets or sets the number of bounces.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the number of bounces.","pos":[0,35]}]},{"pos":[6811,7137],"content":"This property does not include the final half-bounce.       [!INCLUDE[DP_ID_field_label](~/add/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.BounceEase.BouncesProperty>      <a name=\"xamlAttributeUsage_Bounces\"></a>    ## XAML Attribute Usage      ```   <object Bounces=\"int\" .../>   ```","needQuote":false,"needEscape":true,"nodes":[{"content":"This property does not include the final half-bounce.","pos":[0,53]},{"content":"<ph id=\"ph1\">[!INCLUDE[DP_ID_field_label](~/add/includes/dp-id-field-label-md.md)]</ph> &lt;xref:System.Windows.Media.Animation.BounceEase.BouncesProperty&gt;      <bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_Bounces\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph2\">```   &lt;object Bounces=\"int\" .../&gt;   ```</ph>","pos":[60,313],"source":"[!INCLUDE[DP_ID_field_label](~/add/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.BounceEase.BouncesProperty>      <a name=\"xamlAttributeUsage_Bounces\"></a>    ## XAML Attribute Usage      ```   <object Bounces=\"int\" .../>   ```"}]},{"pos":[7251,7373],"content":"The number of bounces. The value must be greater than or equal to zero. Negative values resolve to zero. The default is 3.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bounces. The value must be greater than or equal to zero. Negative values resolve to zero. The default is 3.","pos":[0,122],"nodes":[{"content":"The number of bounces.","pos":[0,22]},{"content":"The value must be greater than or equal to zero.","pos":[23,71]},{"content":"Negative values resolve to zero.","pos":[72,104]},{"content":"The default is 3.","pos":[105,122]}]}]},{"pos":[7877,7970],"content":"Identifies the <xref:System.Windows.Media.Animation.BounceEase.Bounces*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Media.Animation.BounceEase.Bounces*&gt; dependency property.","pos":[0,93],"source":"Identifies the <xref:System.Windows.Media.Animation.BounceEase.Bounces*> dependency property."}]},{"pos":[8145,8157],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8576,8810],"content":"Gets or sets a value that specifies how bouncy the bounce animation is. Low values of this property result in bounces with little lose of height between bounces (more bouncy) while high values result in dampened bounces (less bouncy).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies how bouncy the bounce animation is. Low values of this property result in bounces with little lose of height between bounces (more bouncy) while high values result in dampened bounces (less bouncy).","pos":[0,234],"nodes":[{"content":"Gets or sets a value that specifies how bouncy the bounce animation is.","pos":[0,71]},{"content":"Low values of this property result in bounces with little lose of height between bounces (more bouncy) while high values result in dampened bounces (less bouncy).","pos":[72,234]}]}]},{"pos":[8823,9099],"content":"<ph id=\"ph1\">[!INCLUDE[DP_ID_field_label](~/add/includes/dp-id-field-label-md.md)]</ph> &lt;xref:System.Windows.Media.Animation.BounceEase.BouncinessProperty&gt;      <bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_Bounciness\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph2\">```   &lt;object Bounciness=\"double\" .../&gt;   ```</ph>","needQuote":false,"needEscape":true,"source":"[!INCLUDE[DP_ID_field_label](~/add/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.BounceEase.BouncinessProperty>      <a name=\"xamlAttributeUsage_Bounciness\"></a>    ## XAML Attribute Usage      ```   <object Bounciness=\"double\" .../>   ```"},{"pos":[9220,9335],"content":"The value that specifies how bouncy the bounce animation is. This value must be positive. The default value is `2`.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value that specifies how bouncy the bounce animation is.","pos":[0,60]},{"content":"This value must be positive.","pos":[61,89]},{"content":"The default value is <ph id=\"ph1\">`2`</ph>.","pos":[90,115],"source":" The default value is `2`."}]},{"pos":[9857,9953],"content":"Identifies the <xref:System.Windows.Media.Animation.BounceEase.Bounciness*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Media.Animation.BounceEase.Bounciness*&gt; dependency property.","pos":[0,96],"source":"Identifies the <xref:System.Windows.Media.Animation.BounceEase.Bounciness*> dependency property."}]},{"pos":[10131,10143],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10606,10758],"content":"Creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class. When creating a derived class, you must override this method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Freezable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> derived class.","pos":[0,90],"source":"Creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class."},{"content":"When creating a derived class, you must override this method.","pos":[91,152]}]},{"pos":[10770,11002],"content":"Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.","pos":[0,232],"nodes":[{"content":"Animation classes inherit indirectly from &lt;xref:System.Windows.Freezable&gt;.","pos":[0,74],"source":"Animation classes inherit indirectly from <xref:System.Windows.Freezable>."},{"content":"Because of this, you need to override the &lt;xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A&gt; method to construct a custom animation object.","pos":[75,232],"source":" Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object."}]}]},{"pos":[11646,11663],"content":"The new instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new instance.","pos":[0,17]}]},{"pos":[12208,12393],"content":"Provides the logic portion of the easing function that you can override to produce the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.EasingMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> mode of the custom easing function.","needQuote":true,"needEscape":true,"source":"Provides the logic portion of the easing function that you can override to produce the <xref href=\"System.Windows.Media.Animation.EasingMode\"></xref> mode of the custom easing function."},{"pos":[12406,12984],"content":"This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.       You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode> and <xref:System.Windows.Media.Animation.EasingMode> cases.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method transforms normalized time to control the pace of an animation for the &lt;xref:System.Windows.Media.Animation.EasingMode&gt; case of &lt;xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A&gt;.","pos":[0,211],"source":"This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>."},{"content":"You only have to specify your easing function for the &lt;xref:System.Windows.Media.Animation.EasingMode&gt; case because the implementation of the &lt;xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A&gt; method transforms <ph id=\"ph1\">`normalizedTime`</ph> for the &lt;xref:System.Windows.Media.Animation.EasingMode&gt; and &lt;xref:System.Windows.Media.Animation.EasingMode&gt; cases.","pos":[218,576],"source":"       You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode> and <xref:System.Windows.Media.Animation.EasingMode> cases."}]},{"pos":[13157,13201],"content":"Normalized time (progress) of the animation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Normalized time (progress) of the animation.","pos":[0,44]}]},{"pos":[13259,13309],"content":"A double that represents the transformed progress.","needQuote":true,"needEscape":true,"nodes":[{"content":"A double that represents the transformed progress.","pos":[0,50]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Animation.BounceEase\n  id: BounceEase\n  children:\n  - System.Windows.Media.Animation.BounceEase.#ctor\n  - System.Windows.Media.Animation.BounceEase.Bounces\n  - System.Windows.Media.Animation.BounceEase.BouncesProperty\n  - System.Windows.Media.Animation.BounceEase.Bounciness\n  - System.Windows.Media.Animation.BounceEase.BouncinessProperty\n  - System.Windows.Media.Animation.BounceEase.CreateInstanceCore\n  - System.Windows.Media.Animation.BounceEase.EaseInCore(System.Double)\n  langs:\n  - csharp\n  name: BounceEase\n  nameWithType: BounceEase\n  fullName: System.Windows.Media.Animation.BounceEase\n  type: Class\n  summary: Represents an easing function that creates an animated bouncing effect.\n  remarks: \"The following graph demonstrates BounceEase using different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time.  \\n  \\n ![BounceEase EasingMode graphs.](~/add/media/bounceease-graph.png \\\"BounceEase EasingMode graphs.\\\")  \\n  \\n You can specify how many bounces occur using the <xref:System.Windows.Media.Animation.BounceEase.Bounces%2A> property and specify how bouncy (how elastic the bounces are) using the <xref:System.Windows.Media.Animation.BounceEase.Bounciness%2A> property. The <xref:System.Windows.Media.Animation.BounceEase.Bounciness%2A> property specifies the amplitude scaling of the next bounce. For example, a bounciness value of 2 doubles the amplitude of the next bounce during an ease in, and it halves the amplitude of the next bounce during an ease out.  \\n  \\n There are several other easing functions besides BounceEase which you can explore using the following Silverlight sample.  \\n  \\n [Run this sample](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)  \\n  \\n In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.  \\n  \\n<a name=\\\"xamlObjectElementUsage_BounceEase\\\"></a>   \\n## XAML Object Element Usage  \\n  \\n```  \\n<BounceEase .../>  \\n```\"\n  example:\n  - \"The following example applies a BounceEase easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a bouncing effect.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: 'public class BounceEase : System.Windows.Media.Animation.EasingFunctionBase'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.EasingFunctionBase\n  implements: []\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.Clone\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValue\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.FreezeCore(System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)\n  - System.Windows.Media.Animation.EasingFunctionBase.EasingMode\n  - System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.BounceEase.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Animation.BounceEase\n  langs:\n  - csharp\n  name: BounceEase()\n  nameWithType: BounceEase.BounceEase()\n  fullName: System.Windows.Media.Animation.BounceEase.BounceEase()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.BounceEase\"></xref> class.\n  syntax:\n    content: public BounceEase ();\n    parameters: []\n  overload: System.Windows.Media.Animation.BounceEase.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.BounceEase.Bounces\n  id: Bounces\n  parent: System.Windows.Media.Animation.BounceEase\n  langs:\n  - csharp\n  name: Bounces\n  nameWithType: BounceEase.Bounces\n  fullName: System.Windows.Media.Animation.BounceEase.Bounces\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets or sets the number of bounces.\n  remarks: \"This property does not include the final half-bounce.  \\n  \\n [!INCLUDE[DP_ID_field_label](~/add/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.BounceEase.BouncesProperty>  \\n  \\n<a name=\\\"xamlAttributeUsage_Bounces\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object Bounces=\\\"int\\\" .../>  \\n```\"\n  syntax:\n    content: public int Bounces { get; set; }\n    return:\n      type: System.Int32\n      description: The number of bounces. The value must be greater than or equal to zero. Negative values resolve to zero. The default is 3.\n  overload: System.Windows.Media.Animation.BounceEase.Bounces*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.BounceEase.BouncesProperty\n  id: BouncesProperty\n  parent: System.Windows.Media.Animation.BounceEase\n  langs:\n  - csharp\n  name: BouncesProperty\n  nameWithType: BounceEase.BouncesProperty\n  fullName: System.Windows.Media.Animation.BounceEase.BouncesProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Identifies the <xref:System.Windows.Media.Animation.BounceEase.Bounces*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty BouncesProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.BounceEase.Bounciness\n  id: Bounciness\n  parent: System.Windows.Media.Animation.BounceEase\n  langs:\n  - csharp\n  name: Bounciness\n  nameWithType: BounceEase.Bounciness\n  fullName: System.Windows.Media.Animation.BounceEase.Bounciness\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets or sets a value that specifies how bouncy the bounce animation is. Low values of this property result in bounces with little lose of height between bounces (more bouncy) while high values result in dampened bounces (less bouncy).\n  remarks: \"[!INCLUDE[DP_ID_field_label](~/add/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.BounceEase.BouncinessProperty>  \\n  \\n<a name=\\\"xamlAttributeUsage_Bounciness\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object Bounciness=\\\"double\\\" .../>  \\n```\"\n  syntax:\n    content: public double Bounciness { get; set; }\n    return:\n      type: System.Double\n      description: The value that specifies how bouncy the bounce animation is. This value must be positive. The default value is `2`.\n  overload: System.Windows.Media.Animation.BounceEase.Bounciness*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.BounceEase.BouncinessProperty\n  id: BouncinessProperty\n  parent: System.Windows.Media.Animation.BounceEase\n  langs:\n  - csharp\n  name: BouncinessProperty\n  nameWithType: BounceEase.BouncinessProperty\n  fullName: System.Windows.Media.Animation.BounceEase.BouncinessProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Identifies the <xref:System.Windows.Media.Animation.BounceEase.Bounciness*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty BouncinessProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.BounceEase.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.Animation.BounceEase\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: BounceEase.CreateInstanceCore()\n  fullName: System.Windows.Media.Animation.BounceEase.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class. When creating a derived class, you must override this method.\n  remarks: Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.\n  example:\n  - \"The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  \\n  \\n [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/visualbasic/freezablesample_visualbasic/freezablesample.vb#createinstancecoreexample)]\\n [!code-cs[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/csharp/freezablesample_csharp/freezablesample.cs#createinstancecoreexample)]\"\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: The new instance.\n  overload: System.Windows.Media.Animation.BounceEase.CreateInstanceCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.BounceEase.EaseInCore(System.Double)\n  id: EaseInCore(System.Double)\n  parent: System.Windows.Media.Animation.BounceEase\n  langs:\n  - csharp\n  name: EaseInCore(Double)\n  nameWithType: BounceEase.EaseInCore(Double)\n  fullName: System.Windows.Media.Animation.BounceEase.EaseInCore(Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Provides the logic portion of the easing function that you can override to produce the <xref href=\"System.Windows.Media.Animation.EasingMode\"></xref> mode of the custom easing function.\n  remarks: \"This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.  \\n  \\n You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode> and <xref:System.Windows.Media.Animation.EasingMode> cases.\"\n  syntax:\n    content: protected override double EaseInCore (double normalizedTime);\n    parameters:\n    - id: normalizedTime\n      type: System.Double\n      description: Normalized time (progress) of the animation.\n    return:\n      type: System.Double\n      description: A double that represents the transformed progress.\n  overload: System.Windows.Media.Animation.BounceEase.EaseInCore*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Media.Animation.EasingFunctionBase\n  isExternal: false\n  name: System.Windows.Media.Animation.EasingFunctionBase\n- uid: System.Windows.Media.Animation.BounceEase.#ctor\n  parent: System.Windows.Media.Animation.BounceEase\n  isExternal: false\n  name: BounceEase()\n  nameWithType: BounceEase.BounceEase()\n  fullName: System.Windows.Media.Animation.BounceEase.BounceEase()\n- uid: System.Windows.Media.Animation.BounceEase.Bounces\n  parent: System.Windows.Media.Animation.BounceEase\n  isExternal: false\n  name: Bounces\n  nameWithType: BounceEase.Bounces\n  fullName: System.Windows.Media.Animation.BounceEase.Bounces\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Animation.BounceEase.BouncesProperty\n  parent: System.Windows.Media.Animation.BounceEase\n  isExternal: false\n  name: BouncesProperty\n  nameWithType: BounceEase.BouncesProperty\n  fullName: System.Windows.Media.Animation.BounceEase.BouncesProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.Animation.BounceEase.Bounciness\n  parent: System.Windows.Media.Animation.BounceEase\n  isExternal: false\n  name: Bounciness\n  nameWithType: BounceEase.Bounciness\n  fullName: System.Windows.Media.Animation.BounceEase.Bounciness\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Animation.BounceEase.BouncinessProperty\n  parent: System.Windows.Media.Animation.BounceEase\n  isExternal: false\n  name: BouncinessProperty\n  nameWithType: BounceEase.BouncinessProperty\n  fullName: System.Windows.Media.Animation.BounceEase.BouncinessProperty\n- uid: System.Windows.Media.Animation.BounceEase.CreateInstanceCore\n  parent: System.Windows.Media.Animation.BounceEase\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: BounceEase.CreateInstanceCore()\n  fullName: System.Windows.Media.Animation.BounceEase.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Animation.BounceEase.EaseInCore(System.Double)\n  parent: System.Windows.Media.Animation.BounceEase\n  isExternal: false\n  name: EaseInCore(Double)\n  nameWithType: BounceEase.EaseInCore(Double)\n  fullName: System.Windows.Media.Animation.BounceEase.EaseInCore(Double)\n- uid: System.Windows.Media.Animation.BounceEase.#ctor*\n  parent: System.Windows.Media.Animation.BounceEase\n  isExternal: false\n  name: BounceEase\n  nameWithType: BounceEase.BounceEase\n- uid: System.Windows.Media.Animation.BounceEase.Bounces*\n  parent: System.Windows.Media.Animation.BounceEase\n  isExternal: false\n  name: Bounces\n  nameWithType: BounceEase.Bounces\n- uid: System.Windows.Media.Animation.BounceEase.Bounciness*\n  parent: System.Windows.Media.Animation.BounceEase\n  isExternal: false\n  name: Bounciness\n  nameWithType: BounceEase.Bounciness\n- uid: System.Windows.Media.Animation.BounceEase.CreateInstanceCore*\n  parent: System.Windows.Media.Animation.BounceEase\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: BounceEase.CreateInstanceCore\n- uid: System.Windows.Media.Animation.BounceEase.EaseInCore*\n  parent: System.Windows.Media.Animation.BounceEase\n  isExternal: false\n  name: EaseInCore\n  nameWithType: BounceEase.EaseInCore\n"}