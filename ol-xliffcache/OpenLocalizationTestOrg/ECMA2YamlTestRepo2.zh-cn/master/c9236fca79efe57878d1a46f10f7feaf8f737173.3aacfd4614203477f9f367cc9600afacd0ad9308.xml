{"nodes":[{"pos":[1001,1289],"content":"Provides a <bpt id=\"p1\">&lt;xref href=\"System.Windows.WeakEventManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation so that you can use the \"weak event listener\" pattern to attach listeners for the <bpt id=\"p2\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or <bpt id=\"p3\">&lt;xref href=\"System.Windows.ContentElement.LostFocus\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> events.","needQuote":true,"needEscape":true,"source":"Provides a <xref href=\"System.Windows.WeakEventManager\"></xref> implementation so that you can use the \"weak event listener\" pattern to attach listeners for the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> events."},{"pos":[1302,2116],"content":"In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>. You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events.       [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] data binding uses this <xref:System.Windows.WeakEventManager> so that internal classes that update bindings can attach listeners for a <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event on an object that is the target of a binding. This supports notification for the <xref:System.Windows.Data.UpdateSourceTrigger> mode of data binding, without creating strong references to data binding targets.","needQuote":false,"needEscape":true,"nodes":[{"content":"In order to be listeners in this pattern, your listener objects must implement &lt;xref:System.Windows.IWeakEventListener&gt;.","pos":[0,120],"source":"In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>."},{"content":"You do not need to implement &lt;xref:System.Windows.IWeakEventListener&gt; on the class that is the source of the events.","pos":[121,237],"source":" You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events."},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> data binding uses this &lt;xref:System.Windows.WeakEventManager&gt; so that internal classes that update bindings can attach listeners for a &lt;xref:System.Windows.UIElement.LostFocus?displayProperty=fullName&gt; or &lt;xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName&gt; event on an object that is the target of a binding.","pos":[244,648],"source":"[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] data binding uses this <xref:System.Windows.WeakEventManager> so that internal classes that update bindings can attach listeners for a <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event on an object that is the target of a binding."},{"content":"This supports notification for the &lt;xref:System.Windows.Data.UpdateSourceTrigger&gt; mode of data binding, without creating strong references to data binding targets.","pos":[649,812],"source":" This supports notification for the <xref:System.Windows.Data.UpdateSourceTrigger> mode of data binding, without creating strong references to data binding targets."}]},{"pos":[4350,4559],"content":"Adds the specified event handler, which is called when specified source raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.ContentElement.LostFocus\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Adds the specified event handler, which is called when specified source raises the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event."},{"pos":[4571,4932],"content":"Use this method to specify the event handler you want to use to subscribe to the <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event..  When you use this method, your listener object does not need to implement the <xref:System.Windows.IWeakEventListener> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this method to specify the event handler you want to use to subscribe to the <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event..  When you use this method, your listener object does not need to implement the <xref:System.Windows.IWeakEventListener> interface.","pos":[0,361],"nodes":[{"content":"Use this method to specify the event handler you want to use to subscribe to the &lt;xref:System.Windows.UIElement.LostFocus?displayProperty=fullName&gt; or &lt;xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName&gt; event..","pos":[0,230],"source":"Use this method to specify the event handler you want to use to subscribe to the <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event.."},{"content":"When you use this method, your listener object does not need to implement the &lt;xref:System.Windows.IWeakEventListener&gt; interface.","pos":[232,361],"source":"  When you use this method, your listener object does not need to implement the <xref:System.Windows.IWeakEventListener> interface."}]}]},{"pos":[5178,5342],"content":"The source object that the raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.ContentElement.LostFocus\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"The source object that the raises the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event."},{"pos":[5444,5600],"content":"The delegate that handles the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.ContentElement.LostFocus\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"The delegate that handles the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event."},{"pos":[5778,5863],"content":"<ph id=\"ph1\">&lt;code&gt;handler&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>handler</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6498,6573],"content":"Adds the provided listener to the list of listeners on the provided source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the provided listener to the list of listeners on the provided source.","pos":[0,75]}]},{"pos":[6810,6836],"content":"The object with the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object with the event.","pos":[0,26]}]},{"pos":[6921,6953],"content":"The object to add as a listener.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to add as a listener.","pos":[0,32]}]},{"pos":[7448,7623],"content":"Returns a new object to contain listeners to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.ContentElement.LostFocus\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Returns a new object to contain listeners to the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event."},{"pos":[7838,8005],"content":"A new object to contain listeners to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.ContentElement.LostFocus\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"A new object to contain listeners to the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event."},{"pos":[8802,8864],"content":"Removes the specified event handler from the specified source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified event handler from the specified source.","pos":[0,62]}]},{"pos":[9113,9277],"content":"The source object that the raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.ContentElement.LostFocus\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"The source object that the raises the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event."},{"pos":[9379,9535],"content":"The delegate that handles the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.ContentElement.LostFocus\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"The delegate that handles the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event."},{"pos":[9716,9801],"content":"<ph id=\"ph1\">&lt;code&gt;handler&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>handler</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10451,10532],"content":"Removes the specified listener from the list of listeners on the provided source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified listener from the list of listeners on the provided source.","pos":[0,81]}]},{"pos":[10772,10811],"content":"The object to remove the listener from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to remove the listener from.","pos":[0,39]}]},{"pos":[10896,10919],"content":"The listener to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The listener to remove.","pos":[0,23]}]},{"pos":[11460,11619],"content":"Begins listening for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event on the given source, attaching an internal class handler to that source.","needQuote":true,"needEscape":true,"source":"Begins listening for the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> event on the given source, attaching an internal class handler to that source."},{"pos":[11631,11834],"content":"The provided source is checked for type to see if it is <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> , and then adds the class handler for the appropriate event to that source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provided source is checked for type to see if it is &lt;xref:System.Windows.UIElement&gt; or &lt;xref:System.Windows.ContentElement&gt; , and then adds the class handler for the appropriate event to that source.","pos":[0,203],"source":"The provided source is checked for type to see if it is <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> , and then adds the class handler for the appropriate event to that source."}]},{"pos":[11992,12111],"content":"The object on which to start listening for the pertinent <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"The object on which to start listening for the pertinent <xref href=\"System.Windows.UIElement.LostFocus\"></xref> event."},{"pos":[12647,12753],"content":"Stops listening for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event on the given source.","needQuote":true,"needEscape":true,"source":"Stops listening for the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> event on the given source."},{"pos":[12910,13015],"content":"The source object on which to stop listening for <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The source object on which to stop listening for <xref href=\"System.Windows.UIElement.LostFocus\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.LostFocusEventManager\n  id: LostFocusEventManager\n  children:\n  - System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})\n  - System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)\n  - System.Windows.LostFocusEventManager.NewListenerList\n  - System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})\n  - System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)\n  - System.Windows.LostFocusEventManager.StartListening(System.Object)\n  - System.Windows.LostFocusEventManager.StopListening(System.Object)\n  langs:\n  - csharp\n  name: LostFocusEventManager\n  nameWithType: LostFocusEventManager\n  fullName: System.Windows.LostFocusEventManager\n  type: Class\n  summary: Provides a <xref href=\"System.Windows.WeakEventManager\"></xref> implementation so that you can use the \"weak event listener\" pattern to attach listeners for the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> events.\n  remarks: \"In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>. You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events.  \\n  \\n [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] data binding uses this <xref:System.Windows.WeakEventManager> so that internal classes that update bindings can attach listeners for a <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event on an object that is the target of a binding. This supports notification for the <xref:System.Windows.Data.UpdateSourceTrigger> mode of data binding, without creating strong references to data binding targets.\"\n  syntax:\n    content: 'public class LostFocusEventManager : System.Windows.WeakEventManager'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.WeakEventManager\n  implements: []\n  inheritedMembers:\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  - System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)\n  - System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)\n  - System.Windows.WeakEventManager.GetCurrentManager(System.Type)\n  - System.Windows.WeakEventManager.Item(System.Object)\n  - System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)\n  - System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)\n  - System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)\n  - System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)\n  - System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)\n  - System.Windows.WeakEventManager.ReadLock\n  - System.Windows.WeakEventManager.Remove(System.Object)\n  - System.Windows.WeakEventManager.ScheduleCleanup\n  - System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)\n  - System.Windows.WeakEventManager.WriteLock\n  platform:\n  - net462\n- uid: System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})\n  id: AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})\n  parent: System.Windows.LostFocusEventManager\n  langs:\n  - csharp\n  name: AddHandler(DependencyObject,EventHandler<RoutedEventArgs>)\n  nameWithType: LostFocusEventManager.AddHandler(DependencyObject,EventHandler<RoutedEventArgs>)\n  fullName: System.Windows.LostFocusEventManager.AddHandler(DependencyObject,EventHandler<RoutedEventArgs>)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Adds the specified event handler, which is called when specified source raises the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.\n  remarks: Use this method to specify the event handler you want to use to subscribe to the <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event..  When you use this method, your listener object does not need to implement the <xref:System.Windows.IWeakEventListener> interface.\n  syntax:\n    content: public static void AddHandler (System.Windows.DependencyObject source, EventHandler<System.Windows.RoutedEventArgs> handler);\n    parameters:\n    - id: source\n      type: System.Windows.DependencyObject\n      description: The source object that the raises the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.\n    - id: handler\n      type: System.EventHandler{System.Windows.RoutedEventArgs}\n      description: The delegate that handles the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.\n  overload: System.Windows.LostFocusEventManager.AddHandler*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>handler</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)\n  id: AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)\n  parent: System.Windows.LostFocusEventManager\n  langs:\n  - csharp\n  name: AddListener(DependencyObject,IWeakEventListener)\n  nameWithType: LostFocusEventManager.AddListener(DependencyObject,IWeakEventListener)\n  fullName: System.Windows.LostFocusEventManager.AddListener(DependencyObject,IWeakEventListener)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Adds the provided listener to the list of listeners on the provided source.\n  syntax:\n    content: public static void AddListener (System.Windows.DependencyObject source, System.Windows.IWeakEventListener listener);\n    parameters:\n    - id: source\n      type: System.Windows.DependencyObject\n      description: The object with the event.\n    - id: listener\n      type: System.Windows.IWeakEventListener\n      description: The object to add as a listener.\n  overload: System.Windows.LostFocusEventManager.AddListener*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.LostFocusEventManager.NewListenerList\n  id: NewListenerList\n  parent: System.Windows.LostFocusEventManager\n  langs:\n  - csharp\n  name: NewListenerList()\n  nameWithType: LostFocusEventManager.NewListenerList()\n  fullName: System.Windows.LostFocusEventManager.NewListenerList()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns a new object to contain listeners to the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.\n  syntax:\n    content: protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();\n    parameters: []\n    return:\n      type: System.Windows.WeakEventManager.ListenerList\n      description: A new object to contain listeners to the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.\n  overload: System.Windows.LostFocusEventManager.NewListenerList*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})\n  id: RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})\n  parent: System.Windows.LostFocusEventManager\n  langs:\n  - csharp\n  name: RemoveHandler(DependencyObject,EventHandler<RoutedEventArgs>)\n  nameWithType: LostFocusEventManager.RemoveHandler(DependencyObject,EventHandler<RoutedEventArgs>)\n  fullName: System.Windows.LostFocusEventManager.RemoveHandler(DependencyObject,EventHandler<RoutedEventArgs>)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Removes the specified event handler from the specified source.\n  syntax:\n    content: public static void RemoveHandler (System.Windows.DependencyObject source, EventHandler<System.Windows.RoutedEventArgs> handler);\n    parameters:\n    - id: source\n      type: System.Windows.DependencyObject\n      description: The source object that the raises the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.\n    - id: handler\n      type: System.EventHandler{System.Windows.RoutedEventArgs}\n      description: The delegate that handles the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.\n  overload: System.Windows.LostFocusEventManager.RemoveHandler*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>handler</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)\n  id: RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)\n  parent: System.Windows.LostFocusEventManager\n  langs:\n  - csharp\n  name: RemoveListener(DependencyObject,IWeakEventListener)\n  nameWithType: LostFocusEventManager.RemoveListener(DependencyObject,IWeakEventListener)\n  fullName: System.Windows.LostFocusEventManager.RemoveListener(DependencyObject,IWeakEventListener)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Removes the specified listener from the list of listeners on the provided source.\n  syntax:\n    content: public static void RemoveListener (System.Windows.DependencyObject source, System.Windows.IWeakEventListener listener);\n    parameters:\n    - id: source\n      type: System.Windows.DependencyObject\n      description: The object to remove the listener from.\n    - id: listener\n      type: System.Windows.IWeakEventListener\n      description: The listener to remove.\n  overload: System.Windows.LostFocusEventManager.RemoveListener*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.LostFocusEventManager.StartListening(System.Object)\n  id: StartListening(System.Object)\n  parent: System.Windows.LostFocusEventManager\n  langs:\n  - csharp\n  name: StartListening(Object)\n  nameWithType: LostFocusEventManager.StartListening(Object)\n  fullName: System.Windows.LostFocusEventManager.StartListening(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Begins listening for the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> event on the given source, attaching an internal class handler to that source.\n  remarks: The provided source is checked for type to see if it is <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> , and then adds the class handler for the appropriate event to that source.\n  syntax:\n    content: protected override void StartListening (object source);\n    parameters:\n    - id: source\n      type: System.Object\n      description: The object on which to start listening for the pertinent <xref href=\"System.Windows.UIElement.LostFocus\"></xref> event.\n  overload: System.Windows.LostFocusEventManager.StartListening*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.LostFocusEventManager.StopListening(System.Object)\n  id: StopListening(System.Object)\n  parent: System.Windows.LostFocusEventManager\n  langs:\n  - csharp\n  name: StopListening(Object)\n  nameWithType: LostFocusEventManager.StopListening(Object)\n  fullName: System.Windows.LostFocusEventManager.StopListening(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Stops listening for the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> event on the given source.\n  syntax:\n    content: protected override void StopListening (object source);\n    parameters:\n    - id: source\n      type: System.Object\n      description: The source object on which to stop listening for <xref href=\"System.Windows.UIElement.LostFocus\"></xref>.\n  overload: System.Windows.LostFocusEventManager.StopListening*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.WeakEventManager\n  isExternal: false\n  name: System.Windows.WeakEventManager\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: AddHandler(DependencyObject,EventHandler<RoutedEventArgs>)\n  nameWithType: LostFocusEventManager.AddHandler(DependencyObject,EventHandler<RoutedEventArgs>)\n  fullName: System.Windows.LostFocusEventManager.AddHandler(DependencyObject,EventHandler<RoutedEventArgs>)\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.EventHandler{System.Windows.RoutedEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<RoutedEventArgs>\n  nameWithType: EventHandler<RoutedEventArgs>\n  fullName: System.EventHandler<System.Windows.RoutedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.Windows.RoutedEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.RoutedEventArgs\n    name: RoutedEventArgs\n    nameWithType: RoutedEventArgs\n    fullName: RoutedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: AddListener(DependencyObject,IWeakEventListener)\n  nameWithType: LostFocusEventManager.AddListener(DependencyObject,IWeakEventListener)\n  fullName: System.Windows.LostFocusEventManager.AddListener(DependencyObject,IWeakEventListener)\n- uid: System.Windows.IWeakEventListener\n  parent: System.Windows\n  isExternal: false\n  name: IWeakEventListener\n  nameWithType: IWeakEventListener\n  fullName: System.Windows.IWeakEventListener\n- uid: System.Windows.LostFocusEventManager.NewListenerList\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: NewListenerList()\n  nameWithType: LostFocusEventManager.NewListenerList()\n  fullName: System.Windows.LostFocusEventManager.NewListenerList()\n- uid: System.Windows.WeakEventManager.ListenerList\n  parent: System.Windows\n  isExternal: false\n  name: WeakEventManager+ListenerList\n  nameWithType: WeakEventManager+ListenerList\n  fullName: System.Windows.WeakEventManager+ListenerList\n- uid: System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: RemoveHandler(DependencyObject,EventHandler<RoutedEventArgs>)\n  nameWithType: LostFocusEventManager.RemoveHandler(DependencyObject,EventHandler<RoutedEventArgs>)\n  fullName: System.Windows.LostFocusEventManager.RemoveHandler(DependencyObject,EventHandler<RoutedEventArgs>)\n- uid: System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: RemoveListener(DependencyObject,IWeakEventListener)\n  nameWithType: LostFocusEventManager.RemoveListener(DependencyObject,IWeakEventListener)\n  fullName: System.Windows.LostFocusEventManager.RemoveListener(DependencyObject,IWeakEventListener)\n- uid: System.Windows.LostFocusEventManager.StartListening(System.Object)\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: StartListening(Object)\n  nameWithType: LostFocusEventManager.StartListening(Object)\n  fullName: System.Windows.LostFocusEventManager.StartListening(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.LostFocusEventManager.StopListening(System.Object)\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: StopListening(Object)\n  nameWithType: LostFocusEventManager.StopListening(Object)\n  fullName: System.Windows.LostFocusEventManager.StopListening(Object)\n- uid: System.Windows.LostFocusEventManager.AddHandler*\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: AddHandler\n  nameWithType: LostFocusEventManager.AddHandler\n- uid: System.Windows.LostFocusEventManager.AddListener*\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: AddListener\n  nameWithType: LostFocusEventManager.AddListener\n- uid: System.Windows.LostFocusEventManager.NewListenerList*\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: NewListenerList\n  nameWithType: LostFocusEventManager.NewListenerList\n- uid: System.Windows.LostFocusEventManager.RemoveHandler*\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: RemoveHandler\n  nameWithType: LostFocusEventManager.RemoveHandler\n- uid: System.Windows.LostFocusEventManager.RemoveListener*\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: RemoveListener\n  nameWithType: LostFocusEventManager.RemoveListener\n- uid: System.Windows.LostFocusEventManager.StartListening*\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: StartListening\n  nameWithType: LostFocusEventManager.StartListening\n- uid: System.Windows.LostFocusEventManager.StopListening*\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: StopListening\n  nameWithType: LostFocusEventManager.StopListening\n"}