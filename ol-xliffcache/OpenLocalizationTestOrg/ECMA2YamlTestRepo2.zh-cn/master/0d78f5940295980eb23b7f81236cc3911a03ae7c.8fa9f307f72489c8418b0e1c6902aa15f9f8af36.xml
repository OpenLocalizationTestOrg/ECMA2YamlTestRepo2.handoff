{"nodes":[{"pos":[2225,2436],"content":"Controls access to objects without direct manipulation of access control lists (ACLs). This class is the abstract base class for the <xref href=\"System.Security.AccessControl.NativeObjectSecurity\"></xref> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Controls access to objects without direct manipulation of access control lists (ACLs).","pos":[0,86]},{"content":"This class is the abstract base class for the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.NativeObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[87,211],"source":" This class is the abstract base class for the <xref href=\"System.Security.AccessControl.NativeObjectSecurity\"></xref> class."}]},{"pos":[7159,7271],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> class."},{"pos":[7430,7531],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the new object is a container object.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new object is a container object."},{"pos":[8181,8360],"content":"Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object."},{"pos":[8373,8668],"content":"Adding an access rule might cause existing access rules in the DACL to be merged.       To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","needQuote":false,"needEscape":true,"nodes":[{"content":"Adding an access rule might cause existing access rules in the DACL to be merged.       To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","pos":[0,293],"nodes":[{"content":"Adding an access rule might cause existing access rules in the DACL to be merged.","pos":[0,81]},{"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","pos":[88,293]}]}]},{"pos":[8874,8897],"content":"The access rule to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to add.","pos":[0,23]}]},{"pos":[9545,9716],"content":"Adds the specified audit rule to the System Access Control List (SACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Adds the specified audit rule to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object."},{"pos":[9728,9808],"content":"Adding an audit rule might cause existing access rules in the SACL to be merged.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adding an audit rule might cause existing access rules in the SACL to be merged.","pos":[0,80]}]},{"pos":[10010,10032],"content":"The audit rule to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to add.","pos":[0,22]}]},{"pos":[10726,10814],"content":"Gets a collection of the access rules associated with the specified security identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of the access rules associated with the specified security identifier.","pos":[0,88]}]},{"pos":[11070,11185],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to include access rules explicitly set for the object.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include access rules explicitly set for the object."},{"pos":[11259,11354],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to include inherited access rules.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include inherited access rules."},{"pos":[11419,11746],"content":"Specifies whether the security identifier for which to retrieve access rules is of type T:System.Security.Principal.SecurityIdentifier or type T:System.Security.Principal.NTAccount. The value of this parameter must be a type that can be translated to  the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether the security identifier for which to retrieve access rules is of type T:System.Security.Principal.SecurityIdentifier or type T:System.Security.Principal.NTAccount.","pos":[0,181]},{"content":"The value of this parameter must be a type that can be translated to  the <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> type.","pos":[182,327],"source":" The value of this parameter must be a type that can be translated to  the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> type."}]},{"pos":[11848,11982],"content":"The collection of access rules associated with the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The collection of access rules associated with the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"pos":[12673,12760],"content":"Gets a collection of the audit rules associated with the specified security identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of the audit rules associated with the specified security identifier.","pos":[0,87]}]},{"pos":[13015,13129],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to include audit rules explicitly set for the object.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include audit rules explicitly set for the object."},{"pos":[13203,13297],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to include inherited audit rules.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include inherited audit rules."},{"pos":[13362,13539],"content":"The security identifier for which to retrieve audit rules. This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security identifier for which to retrieve audit rules.","pos":[0,58]},{"content":"This must be an object that can be cast as a <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[59,177],"source":" This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}]},{"pos":[13641,13774],"content":"The collection of audit rules associated with the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The collection of audit rules associated with the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."},{"pos":[14673,14856],"content":"Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object."},{"pos":[14868,15073],"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","needQuote":true,"needEscape":true,"nodes":[{"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","pos":[0,205]}]},{"pos":[15398,15436],"content":"The modification to apply to the DACL.","needQuote":true,"needEscape":true,"nodes":[{"content":"The modification to apply to the DACL.","pos":[0,38]}]},{"pos":[15524,15550],"content":"The access rule to modify.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to modify.","pos":[0,26]}]},{"pos":[15616,15789],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the DACL is successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15848,16021],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the DACL is successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16909,17085],"content":"Applies the specified modification to the System Access Control List (SACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object."},{"pos":[17408,17446],"content":"The modification to apply to the SACL.","needQuote":true,"needEscape":true,"nodes":[{"content":"The modification to apply to the SACL.","pos":[0,38]}]},{"pos":[17533,17558],"content":"The audit rule to modify.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to modify.","pos":[0,25]}]},{"pos":[17624,17797],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the SACL is successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17856,18029],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the SACL is successfully modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18700,18958],"content":"Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object."},{"pos":[18971,19493],"content":"Access removal is accomplished by using a complex algorithm that might add access control rules in addition to removing them.       This method fails to remove the access rule and returns `false` if the inheritance rules associated with the access rule are too complex for the removal algorithm to succeed.       To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","needQuote":false,"needEscape":true,"nodes":[{"content":"Access removal is accomplished by using a complex algorithm that might add access control rules in addition to removing them.","pos":[0,125]},{"content":"This method fails to remove the access rule and returns <ph id=\"ph1\">`false`</ph> if the inheritance rules associated with the access rule are too complex for the removal algorithm to succeed.","pos":[132,306],"source":"       This method fails to remove the access rule and returns `false` if the inheritance rules associated with the access rule are too complex for the removal algorithm to succeed."},{"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","pos":[313,518]}]},{"pos":[19702,19728],"content":"The access rule to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to remove.","pos":[0,26]}]},{"pos":[19787,19967],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the access rule was successfully removed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the access rule was successfully removed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20658,20901],"content":"Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object."},{"pos":[20913,21118],"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","needQuote":true,"needEscape":true,"nodes":[{"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","pos":[0,205]}]},{"pos":[21329,21355],"content":"The access rule to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to remove.","pos":[0,26]}]},{"pos":[22074,22294],"content":"Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object."},{"pos":[22306,22511],"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","needQuote":true,"needEscape":true,"nodes":[{"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","pos":[0,205]}]},{"pos":[22727,22753],"content":"The access rule to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to remove.","pos":[0,26]}]},{"pos":[23427,23676],"content":"Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object."},{"pos":[23689,23993],"content":"Audit removal is accomplished by using a complex algorithm that might add audit control rules in addition to removing them.       This method fails to remove the audit rule and returns `false` if the inheritance rules associated with the audit rule are too complex for the removal algorithm to succeed.","needQuote":false,"needEscape":true,"nodes":[{"content":"Audit removal is accomplished by using a complex algorithm that might add audit control rules in addition to removing them.","pos":[0,123]},{"content":"This method fails to remove the audit rule and returns <ph id=\"ph1\">`false`</ph> if the inheritance rules associated with the audit rule are too complex for the removal algorithm to succeed.","pos":[130,302],"source":"       This method fails to remove the audit rule and returns `false` if the inheritance rules associated with the audit rule are too complex for the removal algorithm to succeed."}]},{"pos":[24199,24224],"content":"The audit rule to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]},{"pos":[24283,24462],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the audit rule was successfully removed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the audit rule was successfully removed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25142,25376],"content":"Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object."},{"pos":[25584,25609],"content":"The audit rule to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]},{"pos":[26317,26528],"content":"Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object."},{"pos":[26741,26766],"content":"The audit rule to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]},{"pos":[27444,27657],"content":"Removes all access rules in the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and then adds the specified access rule.","needQuote":true,"needEscape":true,"source":"Removes all access rules in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object and then adds the specified access rule."},{"pos":[27669,27874],"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","needQuote":true,"needEscape":true,"nodes":[{"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","pos":[0,205]}]},{"pos":[28081,28106],"content":"The access rule to reset.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to reset.","pos":[0,25]}]},{"pos":[28766,29064],"content":"Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and then adds the specified access rule.","needQuote":true,"needEscape":true,"source":"Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object and then adds the specified access rule."},{"pos":[29076,29281],"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","needQuote":true,"needEscape":true,"nodes":[{"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","pos":[0,205]}]},{"pos":[29486,29509],"content":"The access rule to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access rule to set.","pos":[0,23]}]},{"pos":[30157,30445],"content":"Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and then adds the specified audit rule.","needQuote":true,"needEscape":true,"source":"Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object and then adds the specified audit rule."},{"pos":[30647,30669],"content":"The audit rule to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The audit rule to set.","pos":[0,22]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.CommonObjectSecurity\n  id: CommonObjectSecurity\n  children:\n  - System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)\n  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  langs:\n  - csharp\n  name: CommonObjectSecurity\n  nameWithType: CommonObjectSecurity\n  fullName: System.Security.AccessControl.CommonObjectSecurity\n  type: Class\n  summary: Controls access to objects without direct manipulation of access control lists (ACLs). This class is the abstract base class for the <xref href=\"System.Security.AccessControl.NativeObjectSecurity\"></xref> class.\n  syntax:\n    content: 'public abstract class CommonObjectSecurity : System.Security.AccessControl.ObjectSecurity'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.ObjectSecurity\n  implements: []\n  inheritedMembers:\n  - System.Security.AccessControl.ObjectSecurity.AccessRightType\n  - System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GroupModified\n  - System.Security.AccessControl.ObjectSecurity.IsContainer\n  - System.Security.AccessControl.ObjectSecurity.IsDS\n  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.OwnerModified\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.ReadLock\n  - System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.WriteLock\n  - System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  langs:\n  - csharp\n  name: CommonObjectSecurity(Boolean)\n  nameWithType: CommonObjectSecurity.CommonObjectSecurity(Boolean)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.CommonObjectSecurity(Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> class.\n  syntax:\n    content: protected CommonObjectSecurity (bool isContainer);\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the new object is a container object.\n  overload: System.Security.AccessControl.CommonObjectSecurity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  id: AddAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  langs:\n  - csharp\n  name: AddAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.AddAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(AccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object.\n  remarks: \"Adding an access rule might cause existing access rules in the DACL to be merged.  \\n  \\n To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.\"\n  syntax:\n    content: protected void AddAccessRule (System.Security.AccessControl.AccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AccessRule\n      description: The access rule to add.\n  overload: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  id: AddAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  langs:\n  - csharp\n  name: AddAuditRule(AuditRule)\n  nameWithType: CommonObjectSecurity.AddAuditRule(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(AuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds the specified audit rule to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object.\n  remarks: Adding an audit rule might cause existing access rules in the SACL to be merged.\n  syntax:\n    content: protected void AddAuditRule (System.Security.AccessControl.AuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AuditRule\n      description: The audit rule to add.\n  overload: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  id: GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  langs:\n  - csharp\n  name: GetAccessRules(Boolean,Boolean,Type)\n  nameWithType: CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a collection of the access rules associated with the specified security identifier.\n  syntax:\n    content: public System.Security.AccessControl.AuthorizationRuleCollection GetAccessRules (bool includeExplicit, bool includeInherited, Type targetType);\n    parameters:\n    - id: includeExplicit\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include access rules explicitly set for the object.\n    - id: includeInherited\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include inherited access rules.\n    - id: targetType\n      type: System.Type\n      description: Specifies whether the security identifier for which to retrieve access rules is of type T:System.Security.Principal.SecurityIdentifier or type T:System.Security.Principal.NTAccount. The value of this parameter must be a type that can be translated to  the <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> type.\n    return:\n      type: System.Security.AccessControl.AuthorizationRuleCollection\n      description: The collection of access rules associated with the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  overload: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  id: GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  langs:\n  - csharp\n  name: GetAuditRules(Boolean,Boolean,Type)\n  nameWithType: CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a collection of the audit rules associated with the specified security identifier.\n  syntax:\n    content: public System.Security.AccessControl.AuthorizationRuleCollection GetAuditRules (bool includeExplicit, bool includeInherited, Type targetType);\n    parameters:\n    - id: includeExplicit\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include audit rules explicitly set for the object.\n    - id: includeInherited\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include inherited audit rules.\n    - id: targetType\n      type: System.Type\n      description: The security identifier for which to retrieve audit rules. This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n    return:\n      type: System.Security.AccessControl.AuthorizationRuleCollection\n      description: The collection of audit rules associated with the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  overload: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  id: ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  langs:\n  - csharp\n  name: ModifyAccess(AccessControlModification,AccessRule,Boolean)\n  nameWithType: CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object.\n  remarks: To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.\n  syntax:\n    content: protected override bool ModifyAccess (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: The modification to apply to the DACL.\n    - id: rule\n      type: System.Security.AccessControl.AccessRule\n      description: The access rule to modify.\n    - id: modified\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the DACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  id: ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  langs:\n  - csharp\n  name: ModifyAudit(AccessControlModification,AuditRule,Boolean)\n  nameWithType: CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object.\n  syntax:\n    content: protected override bool ModifyAudit (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: The modification to apply to the SACL.\n    - id: rule\n      type: System.Security.AccessControl.AuditRule\n      description: The audit rule to modify.\n    - id: modified\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SACL is successfully modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  id: RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  langs:\n  - csharp\n  name: RemoveAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(AccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object.\n  remarks: \"Access removal is accomplished by using a complex algorithm that might add access control rules in addition to removing them.  \\n  \\n This method fails to remove the access rule and returns `false` if the inheritance rules associated with the access rule are too complex for the removal algorithm to succeed.  \\n  \\n To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.\"\n  syntax:\n    content: protected bool RemoveAccessRule (System.Security.AccessControl.AccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AccessRule\n      description: The access rule to remove.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the access rule was successfully removed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  id: RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  langs:\n  - csharp\n  name: RemoveAccessRuleAll(AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object.\n  remarks: To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.\n  syntax:\n    content: protected void RemoveAccessRuleAll (System.Security.AccessControl.AccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AccessRule\n      description: The access rule to remove.\n  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  id: RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  langs:\n  - csharp\n  name: RemoveAccessRuleSpecific(AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object.\n  remarks: To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.\n  syntax:\n    content: protected void RemoveAccessRuleSpecific (System.Security.AccessControl.AccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AccessRule\n      description: The access rule to remove.\n  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  id: RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  langs:\n  - csharp\n  name: RemoveAuditRule(AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRule(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(AuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object.\n  remarks: \"Audit removal is accomplished by using a complex algorithm that might add audit control rules in addition to removing them.  \\n  \\n This method fails to remove the audit rule and returns `false` if the inheritance rules associated with the audit rule are too complex for the removal algorithm to succeed.\"\n  syntax:\n    content: protected bool RemoveAuditRule (System.Security.AccessControl.AuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AuditRule\n      description: The audit rule to remove.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the audit rule was successfully removed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  id: RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  langs:\n  - csharp\n  name: RemoveAuditRuleAll(AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object.\n  syntax:\n    content: protected void RemoveAuditRuleAll (System.Security.AccessControl.AuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AuditRule\n      description: The audit rule to remove.\n  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  id: RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  langs:\n  - csharp\n  name: RemoveAuditRuleSpecific(AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object.\n  syntax:\n    content: protected void RemoveAuditRuleSpecific (System.Security.AccessControl.AuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AuditRule\n      description: The audit rule to remove.\n  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  id: ResetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  langs:\n  - csharp\n  name: ResetAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.ResetAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(AccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object and then adds the specified access rule.\n  remarks: To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.\n  syntax:\n    content: protected void ResetAccessRule (System.Security.AccessControl.AccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AccessRule\n      description: The access rule to reset.\n  overload: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  id: SetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  langs:\n  - csharp\n  name: SetAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.SetAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(AccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object and then adds the specified access rule.\n  remarks: To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.\n  syntax:\n    content: protected void SetAccessRule (System.Security.AccessControl.AccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AccessRule\n      description: The access rule to set.\n  overload: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  id: SetAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  langs:\n  - csharp\n  name: SetAuditRule(AuditRule)\n  nameWithType: CommonObjectSecurity.SetAuditRule(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(AuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object and then adds the specified audit rule.\n  syntax:\n    content: protected void SetAuditRule (System.Security.AccessControl.AuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AuditRule\n      description: The audit rule to set.\n  overload: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: System.Security.AccessControl.ObjectSecurity\n- uid: System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: CommonObjectSecurity(Boolean)\n  nameWithType: CommonObjectSecurity.CommonObjectSecurity(Boolean)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.CommonObjectSecurity(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.AddAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(AccessRule)\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  nameWithType: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAuditRule(AuditRule)\n  nameWithType: CommonObjectSecurity.AddAuditRule(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(AuditRule)\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  nameWithType: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: GetAccessRules(Boolean,Boolean,Type)\n  nameWithType: CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)\n- uid: System.Security.AccessControl.AuthorizationRuleCollection\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuthorizationRuleCollection\n  nameWithType: AuthorizationRuleCollection\n  fullName: System.Security.AccessControl.AuthorizationRuleCollection\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: GetAuditRules(Boolean,Boolean,Type)\n  nameWithType: CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ModifyAccess(AccessControlModification,AccessRule,Boolean)\n  nameWithType: CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)\n- uid: System.Security.AccessControl.AccessControlModification\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlModification\n  nameWithType: AccessControlModification\n  fullName: System.Security.AccessControl.AccessControlModification\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ModifyAudit(AccessControlModification,AuditRule,Boolean)\n  nameWithType: CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleAll(AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRule(AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRule(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll(AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ResetAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.ResetAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.SetAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAuditRule(AuditRule)\n  nameWithType: CommonObjectSecurity.SetAuditRule(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.#ctor*\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: CommonObjectSecurity\n  nameWithType: CommonObjectSecurity.CommonObjectSecurity\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule*\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAccessRule\n  nameWithType: CommonObjectSecurity.AddAccessRule\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule*\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAuditRule\n  nameWithType: CommonObjectSecurity.AddAuditRule\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules*\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: GetAccessRules\n  nameWithType: CommonObjectSecurity.GetAccessRules\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules*\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: GetAuditRules\n  nameWithType: CommonObjectSecurity.GetAuditRules\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess*\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ModifyAccess\n  nameWithType: CommonObjectSecurity.ModifyAccess\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit*\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ModifyAudit\n  nameWithType: CommonObjectSecurity.ModifyAudit\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule*\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRule\n  nameWithType: CommonObjectSecurity.RemoveAccessRule\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll*\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleAll\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific*\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule*\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRule\n  nameWithType: CommonObjectSecurity.RemoveAuditRule\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll*\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific*\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific\n- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule*\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ResetAccessRule\n  nameWithType: CommonObjectSecurity.ResetAccessRule\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule*\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAccessRule\n  nameWithType: CommonObjectSecurity.SetAccessRule\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule*\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAuditRule\n  nameWithType: CommonObjectSecurity.SetAuditRule\n"}