{"nodes":[{"pos":[1153,1353],"content":"Represents an unsigned rights managed <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.PublishLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an unsigned <bpt id=\"p2\">&lt;xref href=\"System.Security.RightsManagement.PublishLicense\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> template.","needQuote":true,"needEscape":true,"source":"Represents an unsigned rights managed <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> or an unsigned <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> template."},{"pos":[1366,2964],"content":"<xref:System.Security.RightsManagement.PublishLicense> defines security data about rights, users, and other security-related information.  The license defines how a specific user on a specific computer can use specified rights-managed content.       The publishing process begins with the document author, who defines rights information in an UnsignedPublishLicense.  Next, the authoring application calls the UnsignedPublishLicense.<xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> method to create a signed <xref:System.Security.RightsManagement.PublishLicense>.  The signed <xref:System.Security.RightsManagement.PublishLicense> can then be provided to the end-user client application which can call <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> to request an end-user <xref:System.Security.RightsManagement.UseLicense>.  The returned <xref:System.Security.RightsManagement.UseLicense> then allows the client application to exercise the rights that are granted to the user.       The document author can use the UnsignedPublishLicense class either to create a signed <xref:System.Security.RightsManagement.PublishLicense>, or to build and serialize a <xref:System.Security.RightsManagement.PublishLicense> template.       As with other <xref:System.Security.RightsManagement> types, UnsignedPublishLicense is only usable in full trust applications.      <a name=\"xamlTextUsage_UnsignedPublishLicense\"></a>    ## XAML Text Usage    This type is not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].","needQuote":false,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Security.RightsManagement.PublishLicense&gt; defines security data about rights, users, and other security-related information.","pos":[0,137],"source":"<xref:System.Security.RightsManagement.PublishLicense> defines security data about rights, users, and other security-related information."},{"content":"The license defines how a specific user on a specific computer can use specified rights-managed content.","pos":[139,243]},{"content":"The publishing process begins with the document author, who defines rights information in an UnsignedPublishLicense.","pos":[250,366]},{"content":"Next, the authoring application calls the UnsignedPublishLicense.&lt;xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A&gt; method to create a signed &lt;xref:System.Security.RightsManagement.PublishLicense&gt;.","pos":[368,585],"source":"  Next, the authoring application calls the UnsignedPublishLicense.<xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> method to create a signed <xref:System.Security.RightsManagement.PublishLicense>."},{"content":"The signed &lt;xref:System.Security.RightsManagement.PublishLicense&gt; can then be provided to the end-user client application which can call &lt;xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A&gt; to request an end-user &lt;xref:System.Security.RightsManagement.UseLicense&gt;.","pos":[587,874],"source":"  The signed <xref:System.Security.RightsManagement.PublishLicense> can then be provided to the end-user client application which can call <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> to request an end-user <xref:System.Security.RightsManagement.UseLicense>."},{"content":"The returned &lt;xref:System.Security.RightsManagement.UseLicense&gt; then allows the client application to exercise the rights that are granted to the user.","pos":[876,1027],"source":"  The returned <xref:System.Security.RightsManagement.UseLicense> then allows the client application to exercise the rights that are granted to the user."},{"content":"The document author can use the UnsignedPublishLicense class either to create a signed &lt;xref:System.Security.RightsManagement.PublishLicense&gt;, or to build and serialize a &lt;xref:System.Security.RightsManagement.PublishLicense&gt; template.","pos":[1034,1269],"source":"       The document author can use the UnsignedPublishLicense class either to create a signed <xref:System.Security.RightsManagement.PublishLicense>, or to build and serialize a <xref:System.Security.RightsManagement.PublishLicense> template."},{"content":"As with other &lt;xref:System.Security.RightsManagement&gt; types, UnsignedPublishLicense is only usable in full trust applications.","pos":[1276,1402],"source":"       As with other <xref:System.Security.RightsManagement> types, UnsignedPublishLicense is only usable in full trust applications."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_UnsignedPublishLicense\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    This type is not typically used in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.","pos":[1408,1586],"source":"<a name=\"xamlTextUsage_UnsignedPublishLicense\"></a>    ## XAML Text Usage    This type is not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."}]},{"pos":[3688,3805],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"></xref> class."},{"pos":[3817,3926],"content":"<xref:System.Security.RightsManagement.UnsignedPublishLicense> creates an empty and unsigned publish-license.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Security.RightsManagement.UnsignedPublishLicense&gt; creates an empty and unsigned publish-license.","pos":[0,109],"source":"<xref:System.Security.RightsManagement.UnsignedPublishLicense> creates an empty and unsigned publish-license."}]},{"pos":[4632,4857],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class from a specified <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)]</ph> publish-license template.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"></xref> class from a specified [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] publish-license template."},{"pos":[4870,5909],"content":"The `publishLicenseTemplate` [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] `<RANGETIME>` or `<INTERVALTIME>` elements are ignored when the <xref:System.Security.RightsManagement.UnsignedPublishLicense> is created by the UnsignedPublishLicense(String) constructor.  To specify these values for the publish license, the <xref:System.Security.RightsManagement.ContentGrant> properties for <xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A> and <xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A> must be explicitly set.  The following example shows how to explicitly set the <xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A> and <xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A> properties.       [!code-vb[UnsignedPubLicense_snip#RmPkgPubGrants](~/add/codesnippet/visualbasic/unsignedpublicense/window1.xaml.vb#rmpkgpubgrants)]  [!code-cs[UnsignedPubLicense_snip#RmPkgPubGrants](~/add/codesnippet/csharp/UnsignedPubLicense/Window1.xaml.cs#rmpkgpubgrants)]","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`publishLicenseTemplate`</ph> <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)]</ph> <ph id=\"ph3\">`&lt;RANGETIME&gt;`</ph> or <ph id=\"ph4\">`&lt;INTERVALTIME&gt;`</ph> elements are ignored when the &lt;xref:System.Security.RightsManagement.UnsignedPublishLicense&gt; is created by the UnsignedPublishLicense(String) constructor.","pos":[0,283],"source":"The `publishLicenseTemplate` [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] `<RANGETIME>` or `<INTERVALTIME>` elements are ignored when the <xref:System.Security.RightsManagement.UnsignedPublishLicense> is created by the UnsignedPublishLicense(String) constructor."},{"content":"To specify these values for the publish license, the &lt;xref:System.Security.RightsManagement.ContentGrant&gt; properties for &lt;xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A&gt; and &lt;xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A&gt; must be explicitly set.","pos":[285,566],"source":"  To specify these values for the publish license, the <xref:System.Security.RightsManagement.ContentGrant> properties for <xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A> and <xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A> must be explicitly set."},{"content":"The following example shows how to explicitly set the &lt;xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A&gt; and &lt;xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A&gt; properties.","pos":[568,770],"source":"  The following example shows how to explicitly set the <xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A> and <xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A> properties."},{"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>UnsignedPubLicense_snip#RmPkgPubGrants<ept id=\"p2\">](~/add/codesnippet/visualbasic/unsignedpublicense/window1.xaml.vb#rmpkgpubgrants)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-cs</bpt><bpt id=\"p4\">[</bpt>UnsignedPubLicense_snip#RmPkgPubGrants<ept id=\"p4\">](~/add/codesnippet/csharp/UnsignedPubLicense/Window1.xaml.cs#rmpkgpubgrants)</ept><ept id=\"p3\">]</ept>","pos":[777,1036],"source":"[!code-vb[UnsignedPubLicense_snip#RmPkgPubGrants](~/add/codesnippet/visualbasic/unsignedpublicense/window1.xaml.vb#rmpkgpubgrants)]  [!code-cs[UnsignedPubLicense_snip#RmPkgPubGrants](~/add/codesnippet/csharp/UnsignedPubLicense/Window1.xaml.cs#rmpkgpubgrants)]"}]},{"pos":[6446,6569],"content":"The <ph id=\"ph1\">[!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)]</ph> publish-license template to use to create this license.","needQuote":true,"needEscape":true,"source":"The [!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)] publish-license template to use to create this license."},{"pos":[7109,7163],"content":"Gets or sets the publisher-created content identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the publisher-created content identifier.","pos":[0,54]}]},{"pos":[7175,7361],"content":"The publisher creates a ContentId to identify rights-managed content in a <xref:System.Security.RightsManagement.UseLicense> and a <xref:System.Security.RightsManagement.PublishLicense>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The publisher creates a ContentId to identify rights-managed content in a &lt;xref:System.Security.RightsManagement.UseLicense&gt; and a &lt;xref:System.Security.RightsManagement.PublishLicense&gt;.","pos":[0,186],"source":"The publisher creates a ContentId to identify rights-managed content in a <xref:System.Security.RightsManagement.UseLicense> and a <xref:System.Security.RightsManagement.PublishLicense>."}]},{"pos":[7476,7532],"content":"The publisher-created rights-managed content identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The publisher-created rights-managed content identifier.","pos":[0,56]}]},{"pos":[8061,8103],"content":"Gets a collection of assigned user rights.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of assigned user rights.","pos":[0,42]}]},{"pos":[8365,8440],"content":"A collection of the assigned user rights that are provided in this license.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of the assigned user rights that are provided in this license.","pos":[0,75]}]},{"pos":[9106,9154],"content":"Gets a collection of name and description pairs.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of name and description pairs.","pos":[0,48]}]},{"pos":[9493,9536],"content":"A collection of name and description pairs.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of name and description pairs.","pos":[0,43]}]},{"pos":[10085,10116],"content":"Gets or sets the content owner.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the content owner.","pos":[0,31]}]},{"pos":[10129,10364],"content":"Owner specifies the user who owns the <xref:System.Security.RightsManagement.PublishLicense>.       Owner is also associated with the Owner node in the issuance license [!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)].","needQuote":false,"needEscape":true,"nodes":[{"content":"Owner specifies the user who owns the &lt;xref:System.Security.RightsManagement.PublishLicense&gt;.","pos":[0,93],"source":"Owner specifies the user who owns the <xref:System.Security.RightsManagement.PublishLicense>."},{"content":"Owner is also associated with the Owner node in the issuance license <ph id=\"ph1\">[!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)]</ph>.","pos":[100,233],"source":"       Owner is also associated with the Owner node in the issuance license [!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)]."}]},{"pos":[10965,11005],"content":"The user who owns the published content.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user who owns the published content.","pos":[0,40]}]},{"pos":[11580,11653],"content":"Gets or sets the contact name for the author or publisher of the content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the contact name for the author or publisher of the content.","pos":[0,73]}]},{"pos":[11666,11854],"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_ReferralInfoName\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    Members of this type are not typically used in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.","needQuote":false,"needEscape":true,"source":"<a name=\"xamlTextUsage_ReferralInfoName\"></a>    ## XAML Text Usage    Members of this type are not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."},{"pos":[11981,12041],"content":"The contact name for the author or publisher of the content.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contact name for the author or publisher of the content.","pos":[0,60]}]},{"pos":[12622,12754],"content":"Gets or sets the contact <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph> for the author or publisher of the content.","needQuote":true,"needEscape":true,"source":"Gets or sets the contact [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] for the author or publisher of the content."},{"pos":[12767,12954],"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_ReferralInfoUri\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    Members of this type are not typically used in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.","needQuote":false,"needEscape":true,"source":"<a name=\"xamlTextUsage_ReferralInfoUri\"></a>    ## XAML Text Usage    Members of this type are not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."},{"pos":[13074,13191],"content":"The contact <ph id=\"ph1\">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph> for the author or publisher of the content.","needQuote":true,"needEscape":true,"source":"The contact [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] for the author or publisher of the content."},{"pos":[13998,14187],"content":"Creates a signed <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.PublishLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and returns a <bpt id=\"p2\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> for the document author.","needQuote":true,"needEscape":true,"source":"Creates a signed <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> and returns a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for the document author."},{"pos":[14965,15023],"content":"The secure environment for license activation and binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secure environment for license activation and binding.","pos":[0,58]}]},{"pos":[15126,15226],"content":"A returned <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the document author.","needQuote":true,"needEscape":true,"source":"A returned <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for the document author."},{"pos":[15318,15507],"content":"The signed <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.PublishLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is created by signing this <bpt id=\"p2\">&lt;xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The signed <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> that is created by signing this <xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"></xref>."},{"pos":[16045,16242],"content":"Returns a serialized template created from the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)]</ph> of the <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a serialized template created from the [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] of the <xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"></xref>."},{"pos":[16378,16567],"content":"A serialized template created from the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)]</ph> of the <bpt id=\"p1\">&lt;xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A serialized template created from the [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] of the <xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.RightsManagement.UnsignedPublishLicense\n  id: UnsignedPublishLicense\n  children:\n  - System.Security.RightsManagement.UnsignedPublishLicense.#ctor\n  - System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)\n  - System.Security.RightsManagement.UnsignedPublishLicense.ContentId\n  - System.Security.RightsManagement.UnsignedPublishLicense.Grants\n  - System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary\n  - System.Security.RightsManagement.UnsignedPublishLicense.Owner\n  - System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName\n  - System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri\n  - System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)\n  - System.Security.RightsManagement.UnsignedPublishLicense.ToString\n  langs:\n  - csharp\n  name: UnsignedPublishLicense\n  nameWithType: UnsignedPublishLicense\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense\n  type: Class\n  summary: Represents an unsigned rights managed <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> or an unsigned <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> template.\n  remarks: \"<xref:System.Security.RightsManagement.PublishLicense> defines security data about rights, users, and other security-related information.  The license defines how a specific user on a specific computer can use specified rights-managed content.  \\n  \\n The publishing process begins with the document author, who defines rights information in an UnsignedPublishLicense.  Next, the authoring application calls the UnsignedPublishLicense.<xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> method to create a signed <xref:System.Security.RightsManagement.PublishLicense>.  The signed <xref:System.Security.RightsManagement.PublishLicense> can then be provided to the end-user client application which can call <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> to request an end-user <xref:System.Security.RightsManagement.UseLicense>.  The returned <xref:System.Security.RightsManagement.UseLicense> then allows the client application to exercise the rights that are granted to the user.  \\n  \\n The document author can use the UnsignedPublishLicense class either to create a signed <xref:System.Security.RightsManagement.PublishLicense>, or to build and serialize a <xref:System.Security.RightsManagement.PublishLicense> template.  \\n  \\n As with other <xref:System.Security.RightsManagement> types, UnsignedPublishLicense is only usable in full trust applications.  \\n  \\n<a name=\\\"xamlTextUsage_UnsignedPublishLicense\\\"></a>   \\n## XAML Text Usage  \\n This type is not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]\n\n      public class UnsignedPublishLicense\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor\n  id: '#ctor'\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  langs:\n  - csharp\n  name: UnsignedPublishLicense()\n  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense()\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense()\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Initializes a new instance of the <xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"></xref> class.\n  remarks: <xref:System.Security.RightsManagement.UnsignedPublishLicense> creates an empty and unsigned publish-license.\n  syntax:\n    content: public UnsignedPublishLicense ();\n    parameters: []\n  overload: System.Security.RightsManagement.UnsignedPublishLicense.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  langs:\n  - csharp\n  name: UnsignedPublishLicense(String)\n  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense(String)\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense(String)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Initializes a new instance of the <xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"></xref> class from a specified [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] publish-license template.\n  remarks: \"The `publishLicenseTemplate` [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] `<RANGETIME>` or `<INTERVALTIME>` elements are ignored when the <xref:System.Security.RightsManagement.UnsignedPublishLicense> is created by the UnsignedPublishLicense(String) constructor.  To specify these values for the publish license, the <xref:System.Security.RightsManagement.ContentGrant> properties for <xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A> and <xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A> must be explicitly set.  The following example shows how to explicitly set the <xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A> and <xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A> properties.  \\n  \\n [!code-vb[UnsignedPubLicense_snip#RmPkgPubGrants](~/add/codesnippet/visualbasic/unsignedpublicense/window1.xaml.vb#rmpkgpubgrants)]\\n [!code-cs[UnsignedPubLicense_snip#RmPkgPubGrants](~/add/codesnippet/csharp/UnsignedPubLicense/Window1.xaml.cs#rmpkgpubgrants)]\"\n  example:\n  - \"The following example shows how to use this constructor.  \\n  \\n [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubunpublic)]\\n [!code-cs[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubunpublic)]\"\n  syntax:\n    content: public UnsignedPublishLicense (string publishLicenseTemplate);\n    parameters:\n    - id: publishLicenseTemplate\n      type: System.String\n      description: The [!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)] publish-license template to use to create this license.\n  overload: System.Security.RightsManagement.UnsignedPublishLicense.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.ContentId\n  id: ContentId\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  langs:\n  - csharp\n  name: ContentId\n  nameWithType: UnsignedPublishLicense.ContentId\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ContentId\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets or sets the publisher-created content identifier.\n  remarks: The publisher creates a ContentId to identify rights-managed content in a <xref:System.Security.RightsManagement.UseLicense> and a <xref:System.Security.RightsManagement.PublishLicense>.\n  syntax:\n    content: public Guid ContentId { get; set; }\n    return:\n      type: System.Guid\n      description: The publisher-created rights-managed content identifier.\n  overload: System.Security.RightsManagement.UnsignedPublishLicense.ContentId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.Grants\n  id: Grants\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  langs:\n  - csharp\n  name: Grants\n  nameWithType: UnsignedPublishLicense.Grants\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Grants\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets a collection of assigned user rights.\n  syntax:\n    content: public System.Collections.Generic.ICollection<System.Security.RightsManagement.ContentGrant> Grants { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.Security.RightsManagement.ContentGrant}\n      description: A collection of the assigned user rights that are provided in this license.\n  overload: System.Security.RightsManagement.UnsignedPublishLicense.Grants*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary\n  id: LocalizedNameDescriptionDictionary\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  langs:\n  - csharp\n  name: LocalizedNameDescriptionDictionary\n  nameWithType: UnsignedPublishLicense.LocalizedNameDescriptionDictionary\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets a collection of name and description pairs.\n  syntax:\n    content: public System.Collections.Generic.IDictionary<int,System.Security.RightsManagement.LocalizedNameDescriptionPair> LocalizedNameDescriptionDictionary { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair}\n      description: A collection of name and description pairs.\n  overload: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.Owner\n  id: Owner\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  langs:\n  - csharp\n  name: Owner\n  nameWithType: UnsignedPublishLicense.Owner\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Owner\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets or sets the content owner.\n  remarks: \"Owner specifies the user who owns the <xref:System.Security.RightsManagement.PublishLicense>.  \\n  \\n Owner is also associated with the Owner node in the issuance license [!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)].\"\n  example:\n  - \"The following example shows how to use this property to assign a <xref:System.Security.RightsManagement.ContentUser>.  \\n  \\n [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubunpublic)]\\n [!code-cs[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubunpublic)]\"\n  syntax:\n    content: public System.Security.RightsManagement.ContentUser Owner { get; set; }\n    return:\n      type: System.Security.RightsManagement.ContentUser\n      description: The user who owns the published content.\n  overload: System.Security.RightsManagement.UnsignedPublishLicense.Owner*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName\n  id: ReferralInfoName\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  langs:\n  - csharp\n  name: ReferralInfoName\n  nameWithType: UnsignedPublishLicense.ReferralInfoName\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets or sets the contact name for the author or publisher of the content.\n  remarks: \"<a name=\\\"xamlTextUsage_ReferralInfoName\\\"></a>   \\n## XAML Text Usage  \\n Members of this type are not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].\"\n  syntax:\n    content: public string ReferralInfoName { get; set; }\n    return:\n      type: System.String\n      description: The contact name for the author or publisher of the content.\n  overload: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri\n  id: ReferralInfoUri\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  langs:\n  - csharp\n  name: ReferralInfoUri\n  nameWithType: UnsignedPublishLicense.ReferralInfoUri\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets or sets the contact [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] for the author or publisher of the content.\n  remarks: \"<a name=\\\"xamlTextUsage_ReferralInfoUri\\\"></a>   \\n## XAML Text Usage  \\n Members of this type are not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].\"\n  syntax:\n    content: public Uri ReferralInfoUri { get; set; }\n    return:\n      type: System.Uri\n      description: The contact [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] for the author or publisher of the content.\n  overload: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)\n  id: Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  langs:\n  - csharp\n  name: Sign(SecureEnvironment,UseLicense)\n  nameWithType: UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Creates a signed <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> and returns a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for the document author.\n  remarks: ''\n  example:\n  - \"The following example shows how to use this class to initialize a <xref:System.Security.RightsManagement.PublishLicense>.  \\n  \\n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]\"\n  syntax:\n    content: public System.Security.RightsManagement.PublishLicense Sign (System.Security.RightsManagement.SecureEnvironment secureEnvironment, out System.Security.RightsManagement.UseLicense authorUseLicense);\n    parameters:\n    - id: secureEnvironment\n      type: System.Security.RightsManagement.SecureEnvironment\n      description: The secure environment for license activation and binding.\n    - id: authorUseLicense\n      type: System.Security.RightsManagement.UseLicense\n      description: A returned <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for the document author.\n    return:\n      type: System.Security.RightsManagement.PublishLicense\n      description: The signed <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> that is created by signing this <xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"></xref>.\n  overload: System.Security.RightsManagement.UnsignedPublishLicense.Sign*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.ToString\n  id: ToString\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: UnsignedPublishLicense.ToString()\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ToString()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Returns a serialized template created from the [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] of the <xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"></xref>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A serialized template created from the [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] of the <xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"></xref>.\n  overload: System.Security.RightsManagement.UnsignedPublishLicense.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: UnsignedPublishLicense()\n  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense()\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense()\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: UnsignedPublishLicense(String)\n  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense(String)\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.ContentId\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: ContentId\n  nameWithType: UnsignedPublishLicense.ContentId\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ContentId\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.Grants\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: Grants\n  nameWithType: UnsignedPublishLicense.Grants\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Grants\n- uid: System.Collections.Generic.ICollection{System.Security.RightsManagement.ContentGrant}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<ContentGrant>\n  nameWithType: ICollection<ContentGrant>\n  fullName: System.Collections.Generic.ICollection<System.Security.RightsManagement.ContentGrant>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<System.Security.RightsManagement.ContentGrant>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.RightsManagement.ContentGrant\n    name: ContentGrant\n    nameWithType: ContentGrant\n    fullName: ContentGrant\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: LocalizedNameDescriptionDictionary\n  nameWithType: UnsignedPublishLicense.LocalizedNameDescriptionDictionary\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary\n- uid: System.Collections.Generic.IDictionary{System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<Int32,LocalizedNameDescriptionPair>\n  nameWithType: IDictionary<Int32,LocalizedNameDescriptionPair>\n  fullName: System.Collections.Generic.IDictionary<System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: Int32\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Security.RightsManagement.LocalizedNameDescriptionPair\n    name: LocalizedNameDescriptionPair\n    nameWithType: LocalizedNameDescriptionPair\n    fullName: LocalizedNameDescriptionPair\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.Owner\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: Owner\n  nameWithType: UnsignedPublishLicense.Owner\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Owner\n- uid: System.Security.RightsManagement.ContentUser\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: ContentUser\n  nameWithType: ContentUser\n  fullName: System.Security.RightsManagement.ContentUser\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: ReferralInfoName\n  nameWithType: UnsignedPublishLicense.ReferralInfoName\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: ReferralInfoUri\n  nameWithType: UnsignedPublishLicense.ReferralInfoUri\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: Sign(SecureEnvironment,UseLicense)\n  nameWithType: UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)\n- uid: System.Security.RightsManagement.PublishLicense\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: PublishLicense\n  nameWithType: PublishLicense\n  fullName: System.Security.RightsManagement.PublishLicense\n- uid: System.Security.RightsManagement.SecureEnvironment\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: SecureEnvironment\n  nameWithType: SecureEnvironment\n  fullName: System.Security.RightsManagement.SecureEnvironment\n- uid: System.Security.RightsManagement.UseLicense\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: UseLicense\n  nameWithType: UseLicense\n  fullName: System.Security.RightsManagement.UseLicense\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.ToString\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: ToString()\n  nameWithType: UnsignedPublishLicense.ToString()\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ToString()\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor*\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: UnsignedPublishLicense\n  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.ContentId*\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: ContentId\n  nameWithType: UnsignedPublishLicense.ContentId\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.Grants*\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: Grants\n  nameWithType: UnsignedPublishLicense.Grants\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary*\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: LocalizedNameDescriptionDictionary\n  nameWithType: UnsignedPublishLicense.LocalizedNameDescriptionDictionary\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.Owner*\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: Owner\n  nameWithType: UnsignedPublishLicense.Owner\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName*\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: ReferralInfoName\n  nameWithType: UnsignedPublishLicense.ReferralInfoName\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri*\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: ReferralInfoUri\n  nameWithType: UnsignedPublishLicense.ReferralInfoUri\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.Sign*\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: Sign\n  nameWithType: UnsignedPublishLicense.Sign\n- uid: System.Security.RightsManagement.UnsignedPublishLicense.ToString*\n  parent: System.Security.RightsManagement.UnsignedPublishLicense\n  isExternal: false\n  name: ToString\n  nameWithType: UnsignedPublishLicense.ToString\n"}