{"nodes":[{"pos":[913,1061],"content":"Provides enumeration support for the local values of any dependency properties that exist on a <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Provides enumeration support for the local values of any dependency properties that exist on a <xref href=\"System.Windows.DependencyObject\"></xref>."},{"pos":[1074,3049],"content":"A *local value* is a value for a dependency property that was set directly on a dependency property, by calling <xref:System.Windows.DependencyObject.SetValue%2A>, or more typically by using the set accessor of a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] property wrapper that calls <xref:System.Windows.DependencyObject.SetValue%2A> internally. Examples of other property system determinants that are not local values are values set through styles, or dependency property default values. For details, see [Dependency Property Value Precedence](~/add/includes/ajax-current-ext-md.md).       A LocalValueEnumerator is returned by the <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> method and implements the <xref:System.Collections.IEnumerator> interface. A public LocalValueEnumerator constructor does not exist; therefore, you must call <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> to obtain an instance of this class.       Do not modify local values (by calling <xref:System.Windows.DependencyObject.SetValue%2A> or <xref:System.Windows.DependencyObject.ClearValue%2A>) while enumerating local values. If you change or clear the property values based on properties that are returned by the enumerator, the change or clear operations do not invalidate the enumerator collection, as is the case for many <xref:System.Collections.IEnumerator> implementations. Also, the enumerator view is a snapshot. A change to the collection is not guaranteed to be thread safe, and no lock is enforced. Other threads still have free access to the local values from a context other than the enumerator.       Use this type if you have operations in your class where it is important to know whether a property's value came from a local value. For example, use this type in an <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementation, or where you want to query the metadata on all locally set properties.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A <bpt id=\"p1\">*</bpt>local value<ept id=\"p1\">*</ept> is a value for a dependency property that was set directly on a dependency property, by calling &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;, or more typically by using the set accessor of a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> property wrapper that calls &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt; internally.","pos":[0,367],"source":"A *local value* is a value for a dependency property that was set directly on a dependency property, by calling <xref:System.Windows.DependencyObject.SetValue%2A>, or more typically by using the set accessor of a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] property wrapper that calls <xref:System.Windows.DependencyObject.SetValue%2A> internally."},{"content":"Examples of other property system determinants that are not local values are values set through styles, or dependency property default values.","pos":[368,510]},{"content":"For details, see <bpt id=\"p1\">[</bpt>Dependency Property Value Precedence<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[511,606],"source":" For details, see [Dependency Property Value Precedence](~/add/includes/ajax-current-ext-md.md)."},{"content":"A LocalValueEnumerator is returned by the &lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt; method and implements the &lt;xref:System.Collections.IEnumerator&gt; interface.","pos":[613,795],"source":"       A LocalValueEnumerator is returned by the <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> method and implements the <xref:System.Collections.IEnumerator> interface."},{"content":"A public LocalValueEnumerator constructor does not exist; therefore, you must call &lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt; to obtain an instance of this class.","pos":[796,981],"source":" A public LocalValueEnumerator constructor does not exist; therefore, you must call <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> to obtain an instance of this class."},{"content":"Do not modify local values (by calling &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt; or &lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;) while enumerating local values.","pos":[988,1166],"source":"       Do not modify local values (by calling <xref:System.Windows.DependencyObject.SetValue%2A> or <xref:System.Windows.DependencyObject.ClearValue%2A>) while enumerating local values."},{"content":"If you change or clear the property values based on properties that are returned by the enumerator, the change or clear operations do not invalidate the enumerator collection, as is the case for many &lt;xref:System.Collections.IEnumerator&gt; implementations.","pos":[1167,1421],"source":" If you change or clear the property values based on properties that are returned by the enumerator, the change or clear operations do not invalidate the enumerator collection, as is the case for many <xref:System.Collections.IEnumerator> implementations."},{"content":"Also, the enumerator view is a snapshot.","pos":[1422,1462]},{"content":"A change to the collection is not guaranteed to be thread safe, and no lock is enforced.","pos":[1463,1551]},{"content":"Other threads still have free access to the local values from a context other than the enumerator.","pos":[1552,1650]},{"content":"Use this type if you have operations in your class where it is important to know whether a property's value came from a local value.","pos":[1657,1789]},{"content":"For example, use this type in an &lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt; implementation, or where you want to query the metadata on all locally set properties.","pos":[1790,1969],"source":" For example, use this type in an <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementation, or where you want to query the metadata on all locally set properties."}]},{"pos":[3576,3640],"content":"Gets the number of items that are represented in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of items that are represented in the collection.","pos":[0,64]}]},{"pos":[3652,3764],"content":"This property is not a defined member of <xref:System.Collections.IEnumerator> but is provided as a convenience.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is not a defined member of &lt;xref:System.Collections.IEnumerator&gt; but is provided as a convenience.","pos":[0,112],"source":"This property is not a defined member of <xref:System.Collections.IEnumerator> but is provided as a convenience."}]},{"pos":[3870,3908],"content":"The number of items in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of items in the collection.","pos":[0,38]}]},{"pos":[4338,4381],"content":"Gets the current element in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the current element in the collection.","pos":[0,43]}]},{"pos":[4393,4508],"content":"This generally accessible version of the property relies on a snapshot of the collection that is taken at creation.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This generally accessible version of the property relies on a snapshot of the collection that is taken at creation.","pos":[0,115]}]},{"pos":[4661,4743],"content":"The current <bpt id=\"p1\">&lt;xref href=\"System.Windows.LocalValueEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the collection.","needQuote":true,"needEscape":true,"source":"The current <xref href=\"System.Windows.LocalValueEntry\"></xref> in the collection."},{"pos":[5222,5390],"content":"Determines whether the provided <bpt id=\"p1\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is equivalent to this <bpt id=\"p2\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines whether the provided <xref href=\"System.Windows.LocalValueEnumerator\"></xref> is equivalent to this <xref href=\"System.Windows.LocalValueEnumerator\"></xref>."},{"pos":[5402,5455],"content":"This implementation supports reference equality only.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This implementation supports reference equality only.","pos":[0,53]}]},{"pos":[5596,5742],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare with the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.LocalValueEnumerator\"></xref> to compare with the current <xref href=\"System.Windows.LocalValueEnumerator\"></xref>."},{"pos":[5801,6092],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is equal to the current <bpt id=\"p3\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Windows.LocalValueEnumerator\"></xref> is equal to the current <xref href=\"System.Windows.LocalValueEnumerator\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6547,6640],"content":"Returns a hash code for the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a hash code for the current <xref href=\"System.Windows.LocalValueEnumerator\"></xref>."},{"pos":[6775,6802],"content":"A 32-bit integer hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A 32-bit integer hash code.","pos":[0,27]}]},{"pos":[7247,7309],"content":"Advances the enumerator to the next element of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Advances the enumerator to the next element of the collection.","pos":[0,62]}]},{"pos":[7435,7679],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the enumerator was successfully advanced to the next element; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the enumerator has passed the end of the collection.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the enumerator was successfully advanced to the next element; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the enumerator has passed the end of the collection."},{"pos":[8407,8516],"content":"Compares whether two specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects are the same.","needQuote":true,"needEscape":true,"source":"Compares whether two specified <xref href=\"System.Windows.LocalValueEnumerator\"></xref> objects are the same."},{"pos":[8528,8581],"content":"This implementation supports reference equality only.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This implementation supports reference equality only.","pos":[0,53]}]},{"pos":[8820,8848],"content":"The first object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first object to compare.","pos":[0,28]}]},{"pos":[8931,8960],"content":"The second object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second object to compare.","pos":[0,29]}]},{"pos":[9019,9326],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj1</ph><ept id=\"p2\">&lt;/code&gt;</ept><bpt id=\"p3\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> is equal to the <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph2\">obj2</ph><ept id=\"p4\">&lt;/code&gt;</ept><bpt id=\"p5\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p6\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>obj1</code><xref href=\"System.Windows.LocalValueEnumerator\"></xref> is equal to the <code>obj2</code><xref href=\"System.Windows.LocalValueEnumerator\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10067,10198],"content":"Compares two specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to determine whether they are not the same.","needQuote":true,"needEscape":true,"source":"Compares two specified <xref href=\"System.Windows.LocalValueEnumerator\"></xref> objects to determine whether they are not the same."},{"pos":[10210,10263],"content":"This implementation supports reference equality only.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This implementation supports reference equality only.","pos":[0,53]}]},{"pos":[10504,10532],"content":"The first object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first object to compare.","pos":[0,28]}]},{"pos":[10615,10644],"content":"The second object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second object to compare.","pos":[0,29]}]},{"pos":[10703,10870],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the instances are not equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the instances are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11302,11399],"content":"Sets the enumerator to its initial position, which is before the first element in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the enumerator to its initial position, which is before the first element in the collection.","pos":[0,97]}]},{"pos":[12062,12148],"content":"For a description of this members, see <xref:System.Collections.IEnumerator.Current*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"For a description of this members, see &lt;xref:System.Collections.IEnumerator.Current*&gt;.","pos":[0,86],"source":"For a description of this members, see <xref:System.Collections.IEnumerator.Current*>."}]},{"pos":[12160,12363],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.LocalValueEnumerator> instance is cast to an <xref:System.Collections.IEnumerator> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.LocalValueEnumerator> instance is cast to an <xref:System.Collections.IEnumerator> interface.","pos":[0,203],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Windows.LocalValueEnumerator&gt; instance is cast to an &lt;xref:System.Collections.IEnumerator&gt; interface.","pos":[60,203],"source":" It can be used only when the <xref:System.Windows.LocalValueEnumerator> instance is cast to an <xref:System.Collections.IEnumerator> interface."}]}]},{"pos":[12499,12537],"content":"The current element in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current element in the collection.","pos":[0,38]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.LocalValueEnumerator\n  id: LocalValueEnumerator\n  children:\n  - System.Windows.LocalValueEnumerator.Count\n  - System.Windows.LocalValueEnumerator.Current\n  - System.Windows.LocalValueEnumerator.Equals(System.Object)\n  - System.Windows.LocalValueEnumerator.GetHashCode\n  - System.Windows.LocalValueEnumerator.MoveNext\n  - System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)\n  - System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)\n  - System.Windows.LocalValueEnumerator.Reset\n  - System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current\n  langs:\n  - csharp\n  name: LocalValueEnumerator\n  nameWithType: LocalValueEnumerator\n  fullName: System.Windows.LocalValueEnumerator\n  type: Struct\n  summary: Provides enumeration support for the local values of any dependency properties that exist on a <xref href=\"System.Windows.DependencyObject\"></xref>.\n  remarks: \"A *local value* is a value for a dependency property that was set directly on a dependency property, by calling <xref:System.Windows.DependencyObject.SetValue%2A>, or more typically by using the set accessor of a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] property wrapper that calls <xref:System.Windows.DependencyObject.SetValue%2A> internally. Examples of other property system determinants that are not local values are values set through styles, or dependency property default values. For details, see [Dependency Property Value Precedence](~/add/includes/ajax-current-ext-md.md).  \\n  \\n A LocalValueEnumerator is returned by the <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> method and implements the <xref:System.Collections.IEnumerator> interface. A public LocalValueEnumerator constructor does not exist; therefore, you must call <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> to obtain an instance of this class.  \\n  \\n Do not modify local values (by calling <xref:System.Windows.DependencyObject.SetValue%2A> or <xref:System.Windows.DependencyObject.ClearValue%2A>) while enumerating local values. If you change or clear the property values based on properties that are returned by the enumerator, the change or clear operations do not invalidate the enumerator collection, as is the case for many <xref:System.Collections.IEnumerator> implementations. Also, the enumerator view is a snapshot. A change to the collection is not guaranteed to be thread safe, and no lock is enforced. Other threads still have free access to the local values from a context other than the enumerator.  \\n  \\n Use this type if you have operations in your class where it is important to know whether a property's value came from a local value. For example, use this type in an <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementation, or where you want to query the metadata on all locally set properties.\"\n  syntax:\n    content: 'public struct LocalValueEnumerator : System.Collections.IEnumerator'\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.Collections.IEnumerator\n  platform:\n  - net462\n- uid: System.Windows.LocalValueEnumerator.Count\n  id: Count\n  parent: System.Windows.LocalValueEnumerator\n  langs:\n  - csharp\n  name: Count\n  nameWithType: LocalValueEnumerator.Count\n  fullName: System.Windows.LocalValueEnumerator.Count\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the number of items that are represented in the collection.\n  remarks: This property is not a defined member of <xref:System.Collections.IEnumerator> but is provided as a convenience.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of items in the collection.\n  overload: System.Windows.LocalValueEnumerator.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.LocalValueEnumerator.Current\n  id: Current\n  parent: System.Windows.LocalValueEnumerator\n  langs:\n  - csharp\n  name: Current\n  nameWithType: LocalValueEnumerator.Current\n  fullName: System.Windows.LocalValueEnumerator.Current\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the current element in the collection.\n  remarks: This generally accessible version of the property relies on a snapshot of the collection that is taken at creation.\n  syntax:\n    content: public System.Windows.LocalValueEntry Current { get; }\n    return:\n      type: System.Windows.LocalValueEntry\n      description: The current <xref href=\"System.Windows.LocalValueEntry\"></xref> in the collection.\n  overload: System.Windows.LocalValueEnumerator.Current*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.LocalValueEnumerator.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.LocalValueEnumerator\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: LocalValueEnumerator.Equals(Object)\n  fullName: System.Windows.LocalValueEnumerator.Equals(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Determines whether the provided <xref href=\"System.Windows.LocalValueEnumerator\"></xref> is equivalent to this <xref href=\"System.Windows.LocalValueEnumerator\"></xref>.\n  remarks: This implementation supports reference equality only.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The <xref href=\"System.Windows.LocalValueEnumerator\"></xref> to compare with the current <xref href=\"System.Windows.LocalValueEnumerator\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Windows.LocalValueEnumerator\"></xref> is equal to the current <xref href=\"System.Windows.LocalValueEnumerator\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.LocalValueEnumerator.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.LocalValueEnumerator.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.LocalValueEnumerator\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: LocalValueEnumerator.GetHashCode()\n  fullName: System.Windows.LocalValueEnumerator.GetHashCode()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Returns a hash code for the current <xref href=\"System.Windows.LocalValueEnumerator\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit integer hash code.\n  overload: System.Windows.LocalValueEnumerator.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.LocalValueEnumerator.MoveNext\n  id: MoveNext\n  parent: System.Windows.LocalValueEnumerator\n  langs:\n  - csharp\n  name: MoveNext()\n  nameWithType: LocalValueEnumerator.MoveNext()\n  fullName: System.Windows.LocalValueEnumerator.MoveNext()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Advances the enumerator to the next element of the collection.\n  syntax:\n    content: public bool MoveNext ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the enumerator was successfully advanced to the next element; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the enumerator has passed the end of the collection.\n  overload: System.Windows.LocalValueEnumerator.MoveNext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)\n  id: op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)\n  parent: System.Windows.LocalValueEnumerator\n  langs:\n  - csharp\n  name: op_Equality(LocalValueEnumerator,LocalValueEnumerator)\n  nameWithType: LocalValueEnumerator.op_Equality(LocalValueEnumerator,LocalValueEnumerator)\n  fullName: System.Windows.LocalValueEnumerator.op_Equality(LocalValueEnumerator,LocalValueEnumerator)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Compares whether two specified <xref href=\"System.Windows.LocalValueEnumerator\"></xref> objects are the same.\n  remarks: This implementation supports reference equality only.\n  syntax:\n    content: public static bool op_Equality (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);\n    parameters:\n    - id: obj1\n      type: System.Windows.LocalValueEnumerator\n      description: The first object to compare.\n    - id: obj2\n      type: System.Windows.LocalValueEnumerator\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>obj1</code><xref href=\"System.Windows.LocalValueEnumerator\"></xref> is equal to the <code>obj2</code><xref href=\"System.Windows.LocalValueEnumerator\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.LocalValueEnumerator.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)\n  id: op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)\n  parent: System.Windows.LocalValueEnumerator\n  langs:\n  - csharp\n  name: op_Inequality(LocalValueEnumerator,LocalValueEnumerator)\n  nameWithType: LocalValueEnumerator.op_Inequality(LocalValueEnumerator,LocalValueEnumerator)\n  fullName: System.Windows.LocalValueEnumerator.op_Inequality(LocalValueEnumerator,LocalValueEnumerator)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Compares two specified <xref href=\"System.Windows.LocalValueEnumerator\"></xref> objects to determine whether they are not the same.\n  remarks: This implementation supports reference equality only.\n  syntax:\n    content: public static bool op_Inequality (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);\n    parameters:\n    - id: obj1\n      type: System.Windows.LocalValueEnumerator\n      description: The first object to compare.\n    - id: obj2\n      type: System.Windows.LocalValueEnumerator\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the instances are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.LocalValueEnumerator.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.LocalValueEnumerator.Reset\n  id: Reset\n  parent: System.Windows.LocalValueEnumerator\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: LocalValueEnumerator.Reset()\n  fullName: System.Windows.LocalValueEnumerator.Reset()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Sets the enumerator to its initial position, which is before the first element in the collection.\n  syntax:\n    content: public void Reset ();\n    parameters: []\n  overload: System.Windows.LocalValueEnumerator.Reset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current\n  id: System#Collections#IEnumerator#Current\n  isEii: true\n  parent: System.Windows.LocalValueEnumerator\n  langs:\n  - csharp\n  name: System.Collections.IEnumerator.Current\n  nameWithType: LocalValueEnumerator.System.Collections.IEnumerator.Current\n  fullName: System.Windows.LocalValueEnumerator.System.Collections.IEnumerator.Current\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: For a description of this members, see <xref:System.Collections.IEnumerator.Current*>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.LocalValueEnumerator> instance is cast to an <xref:System.Collections.IEnumerator> interface.\n  syntax:\n    content: object System.Collections.IEnumerator.Current { get; }\n    return:\n      type: System.Object\n      description: The current element in the collection.\n  overload: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.LocalValueEnumerator.Count\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: Count\n  nameWithType: LocalValueEnumerator.Count\n  fullName: System.Windows.LocalValueEnumerator.Count\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.LocalValueEnumerator.Current\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: Current\n  nameWithType: LocalValueEnumerator.Current\n  fullName: System.Windows.LocalValueEnumerator.Current\n- uid: System.Windows.LocalValueEntry\n  parent: System.Windows\n  isExternal: false\n  name: LocalValueEntry\n  nameWithType: LocalValueEntry\n  fullName: System.Windows.LocalValueEntry\n- uid: System.Windows.LocalValueEnumerator.Equals(System.Object)\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: LocalValueEnumerator.Equals(Object)\n  fullName: System.Windows.LocalValueEnumerator.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.LocalValueEnumerator.GetHashCode\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: LocalValueEnumerator.GetHashCode()\n  fullName: System.Windows.LocalValueEnumerator.GetHashCode()\n- uid: System.Windows.LocalValueEnumerator.MoveNext\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: MoveNext()\n  nameWithType: LocalValueEnumerator.MoveNext()\n  fullName: System.Windows.LocalValueEnumerator.MoveNext()\n- uid: System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: op_Equality(LocalValueEnumerator,LocalValueEnumerator)\n  nameWithType: LocalValueEnumerator.op_Equality(LocalValueEnumerator,LocalValueEnumerator)\n  fullName: System.Windows.LocalValueEnumerator.op_Equality(LocalValueEnumerator,LocalValueEnumerator)\n- uid: System.Windows.LocalValueEnumerator\n  parent: System.Windows\n  isExternal: false\n  name: LocalValueEnumerator\n  nameWithType: LocalValueEnumerator\n  fullName: System.Windows.LocalValueEnumerator\n- uid: System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: op_Inequality(LocalValueEnumerator,LocalValueEnumerator)\n  nameWithType: LocalValueEnumerator.op_Inequality(LocalValueEnumerator,LocalValueEnumerator)\n  fullName: System.Windows.LocalValueEnumerator.op_Inequality(LocalValueEnumerator,LocalValueEnumerator)\n- uid: System.Windows.LocalValueEnumerator.Reset\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: Reset()\n  nameWithType: LocalValueEnumerator.Reset()\n  fullName: System.Windows.LocalValueEnumerator.Reset()\n- uid: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: System.Collections.IEnumerator.Current\n  nameWithType: LocalValueEnumerator.System.Collections.IEnumerator.Current\n  fullName: System.Windows.LocalValueEnumerator.System.Collections.IEnumerator.Current\n- uid: System.Windows.LocalValueEnumerator.Count*\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: Count\n  nameWithType: LocalValueEnumerator.Count\n- uid: System.Windows.LocalValueEnumerator.Current*\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: Current\n  nameWithType: LocalValueEnumerator.Current\n- uid: System.Windows.LocalValueEnumerator.Equals*\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: Equals\n  nameWithType: LocalValueEnumerator.Equals\n- uid: System.Windows.LocalValueEnumerator.GetHashCode*\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: GetHashCode\n  nameWithType: LocalValueEnumerator.GetHashCode\n- uid: System.Windows.LocalValueEnumerator.MoveNext*\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: MoveNext\n  nameWithType: LocalValueEnumerator.MoveNext\n- uid: System.Windows.LocalValueEnumerator.op_Equality*\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: op_Equality\n  nameWithType: LocalValueEnumerator.op_Equality\n- uid: System.Windows.LocalValueEnumerator.op_Inequality*\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: op_Inequality\n  nameWithType: LocalValueEnumerator.op_Inequality\n- uid: System.Windows.LocalValueEnumerator.Reset*\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: Reset\n  nameWithType: LocalValueEnumerator.Reset\n- uid: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current*\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: System.Collections.IEnumerator.Current\n  nameWithType: LocalValueEnumerator.System.Collections.IEnumerator.Current\n"}