{"nodes":[{"pos":[565,640],"content":"Represents a type that has its lifetime controlled by the workflow runtime.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a type that has its lifetime controlled by the workflow runtime.","pos":[0,75]}]},{"pos":[652,1103],"content":"Types derived from Handle have their lifetimes controlled by the workflow runtime. For workflow variables of handle types, the runtime uses the required default constructor to create an instance of the type, assigns it to the <xref:System.Activities.Variable>, and calls <xref:System.Activities.Handle.OnInitialize%2A> when initializing the environment. When the variable goes out of scope, <xref:System.Activities.Handle.OnUninitialize%2A> is called.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Types derived from Handle have their lifetimes controlled by the workflow runtime. For workflow variables of handle types, the runtime uses the required default constructor to create an instance of the type, assigns it to the <xref:System.Activities.Variable>, and calls <xref:System.Activities.Handle.OnInitialize%2A> when initializing the environment. When the variable goes out of scope, <xref:System.Activities.Handle.OnUninitialize%2A> is called.","pos":[0,451],"nodes":[{"content":"Types derived from Handle have their lifetimes controlled by the workflow runtime.","pos":[0,82]},{"content":"For workflow variables of handle types, the runtime uses the required default constructor to create an instance of the type, assigns it to the &lt;xref:System.Activities.Variable&gt;, and calls &lt;xref:System.Activities.Handle.OnInitialize%2A&gt; when initializing the environment.","pos":[83,353],"source":" For workflow variables of handle types, the runtime uses the required default constructor to create an instance of the type, assigns it to the <xref:System.Activities.Variable>, and calls <xref:System.Activities.Handle.OnInitialize%2A> when initializing the environment."},{"content":"When the variable goes out of scope, &lt;xref:System.Activities.Handle.OnUninitialize%2A&gt; is called.","pos":[354,451],"source":" When the variable goes out of scope, <xref:System.Activities.Handle.OnUninitialize%2A> is called."}]}]},{"pos":[1612,1698],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Handle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Activities.Handle\"></xref> class."},{"pos":[1710,1802],"content":"Classes that derive from <xref:System.Activities.Handle> must provide a default constructor.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Classes that derive from &lt;xref:System.Activities.Handle&gt; must provide a default constructor.","pos":[0,92],"source":"Classes that derive from <xref:System.Activities.Handle> must provide a default constructor."}]},{"pos":[2316,2444],"content":"Gets the name to be used by this <bpt id=\"p1\">&lt;xref href=\"System.Activities.Handle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when added to an activity’s execution properties.","needQuote":true,"needEscape":true,"source":"Gets the name to be used by this <xref href=\"System.Activities.Handle\"></xref> when added to an activity’s execution properties."},{"pos":[2570,2639],"content":"The name of derived type as provided by <xref:System.Type.FullName*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of derived type as provided by &lt;xref:System.Type.FullName*&gt;.","pos":[0,69],"source":"The name of derived type as provided by <xref:System.Type.FullName*>."}]},{"pos":[3240,3371],"content":"Called by the workflow runtime when the environment that contains the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Handle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is initialized.","needQuote":true,"needEscape":true,"source":"Called by the workflow runtime when the environment that contains the <xref href=\"System.Activities.Handle\"></xref> is initialized."},{"pos":[3599,3652],"content":"The environment in which the handle is being created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The environment in which the handle is being created.","pos":[0,53]}]},{"pos":[4254,4414],"content":"Called by the workflow runtime when the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Variable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the <bpt id=\"p2\">&lt;xref href=\"System.Activities.Handle\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> goes out of scope.","needQuote":true,"needEscape":true,"source":"Called by the workflow runtime when the <xref href=\"System.Activities.Variable\"></xref> for the <xref href=\"System.Activities.Handle\"></xref> goes out of scope."},{"pos":[4644,4692],"content":"The environment in which the handle was created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The environment in which the handle was created.","pos":[0,48]}]},{"pos":[5072,5267],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Activities.ActivityInstance\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the <bpt id=\"p2\">&lt;xref href=\"System.Activities.Variable\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that contains the <bpt id=\"p3\">&lt;xref href=\"System.Activities.Handle\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Activities.ActivityInstance\"></xref> that contains the <xref href=\"System.Activities.Variable\"></xref> that contains the <xref href=\"System.Activities.Handle\"></xref>."},{"pos":[5426,5578],"content":"The activity instance that contains the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Variable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the <bpt id=\"p2\">&lt;xref href=\"System.Activities.Handle\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The activity instance that contains the <xref href=\"System.Activities.Variable\"></xref> that contains the <xref href=\"System.Activities.Handle\"></xref>."},{"pos":[6028,6156],"content":"Throws an &lt;xref:System.InvalidOperationException&gt; if the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Handle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has not been initialized.","needQuote":true,"needEscape":true,"source":"Throws an <xref:System.InvalidOperationException> if the <xref href=\"System.Activities.Handle\"></xref> has not been initialized."},{"pos":[6168,6386],"content":"ThrowIfUninitialized gives custom handle derived class authors a convenient method to call from any methods or properties of the derived class that are not valid if the <xref:System.Activities.Handle> is uninitialized.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"ThrowIfUninitialized gives custom handle derived class authors a convenient method to call from any methods or properties of the derived class that are not valid if the &lt;xref:System.Activities.Handle&gt; is uninitialized.","pos":[0,218],"source":"ThrowIfUninitialized gives custom handle derived class authors a convenient method to call from any methods or properties of the derived class that are not valid if the <xref:System.Activities.Handle> is uninitialized."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Handle\n  id: Handle\n  children:\n  - System.Activities.Handle.#ctor\n  - System.Activities.Handle.ExecutionPropertyName\n  - System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)\n  - System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)\n  - System.Activities.Handle.Owner\n  - System.Activities.Handle.ThrowIfUninitialized\n  langs:\n  - csharp\n  name: Handle\n  nameWithType: Handle\n  fullName: System.Activities.Handle\n  type: Class\n  summary: Represents a type that has its lifetime controlled by the workflow runtime.\n  remarks: Types derived from Handle have their lifetimes controlled by the workflow runtime. For workflow variables of handle types, the runtime uses the required default constructor to create an instance of the type, assigns it to the <xref:System.Activities.Variable>, and calls <xref:System.Activities.Handle.OnInitialize%2A> when initializing the environment. When the variable goes out of scope, <xref:System.Activities.Handle.OnUninitialize%2A> is called.\n  syntax:\n    content: >-\n      [System.Runtime.Serialization.DataContract]\n\n      public abstract class Handle\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.Handle.#ctor\n  id: '#ctor'\n  parent: System.Activities.Handle\n  langs:\n  - csharp\n  name: Handle()\n  nameWithType: Handle.Handle()\n  fullName: System.Activities.Handle.Handle()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Handle\"></xref> class.\n  remarks: Classes that derive from <xref:System.Activities.Handle> must provide a default constructor.\n  syntax:\n    content: protected Handle ();\n    parameters: []\n  overload: System.Activities.Handle.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Handle.ExecutionPropertyName\n  id: ExecutionPropertyName\n  parent: System.Activities.Handle\n  langs:\n  - csharp\n  name: ExecutionPropertyName\n  nameWithType: Handle.ExecutionPropertyName\n  fullName: System.Activities.Handle.ExecutionPropertyName\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets the name to be used by this <xref href=\"System.Activities.Handle\"></xref> when added to an activity’s execution properties.\n  syntax:\n    content: public string ExecutionPropertyName { get; }\n    return:\n      type: System.String\n      description: The name of derived type as provided by <xref:System.Type.FullName*>.\n  overload: System.Activities.Handle.ExecutionPropertyName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)\n  id: OnInitialize(System.Activities.HandleInitializationContext)\n  parent: System.Activities.Handle\n  langs:\n  - csharp\n  name: OnInitialize(HandleInitializationContext)\n  nameWithType: Handle.OnInitialize(HandleInitializationContext)\n  fullName: System.Activities.Handle.OnInitialize(HandleInitializationContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Called by the workflow runtime when the environment that contains the <xref href=\"System.Activities.Handle\"></xref> is initialized.\n  syntax:\n    content: protected virtual void OnInitialize (System.Activities.HandleInitializationContext context);\n    parameters:\n    - id: context\n      type: System.Activities.HandleInitializationContext\n      description: The environment in which the handle is being created.\n  overload: System.Activities.Handle.OnInitialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)\n  id: OnUninitialize(System.Activities.HandleInitializationContext)\n  parent: System.Activities.Handle\n  langs:\n  - csharp\n  name: OnUninitialize(HandleInitializationContext)\n  nameWithType: Handle.OnUninitialize(HandleInitializationContext)\n  fullName: System.Activities.Handle.OnUninitialize(HandleInitializationContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Called by the workflow runtime when the <xref href=\"System.Activities.Variable\"></xref> for the <xref href=\"System.Activities.Handle\"></xref> goes out of scope.\n  syntax:\n    content: protected virtual void OnUninitialize (System.Activities.HandleInitializationContext context);\n    parameters:\n    - id: context\n      type: System.Activities.HandleInitializationContext\n      description: The environment in which the handle was created.\n  overload: System.Activities.Handle.OnUninitialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Handle.Owner\n  id: Owner\n  parent: System.Activities.Handle\n  langs:\n  - csharp\n  name: Owner\n  nameWithType: Handle.Owner\n  fullName: System.Activities.Handle.Owner\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets the <xref href=\"System.Activities.ActivityInstance\"></xref> that contains the <xref href=\"System.Activities.Variable\"></xref> that contains the <xref href=\"System.Activities.Handle\"></xref>.\n  syntax:\n    content: public System.Activities.ActivityInstance Owner { get; }\n    return:\n      type: System.Activities.ActivityInstance\n      description: The activity instance that contains the <xref href=\"System.Activities.Variable\"></xref> that contains the <xref href=\"System.Activities.Handle\"></xref>.\n  overload: System.Activities.Handle.Owner*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Handle.ThrowIfUninitialized\n  id: ThrowIfUninitialized\n  parent: System.Activities.Handle\n  langs:\n  - csharp\n  name: ThrowIfUninitialized()\n  nameWithType: Handle.ThrowIfUninitialized()\n  fullName: System.Activities.Handle.ThrowIfUninitialized()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Throws an <xref:System.InvalidOperationException> if the <xref href=\"System.Activities.Handle\"></xref> has not been initialized.\n  remarks: ThrowIfUninitialized gives custom handle derived class authors a convenient method to call from any methods or properties of the derived class that are not valid if the <xref:System.Activities.Handle> is uninitialized.\n  syntax:\n    content: protected void ThrowIfUninitialized ();\n    parameters: []\n  overload: System.Activities.Handle.ThrowIfUninitialized*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.Handle.#ctor\n  parent: System.Activities.Handle\n  isExternal: false\n  name: Handle()\n  nameWithType: Handle.Handle()\n  fullName: System.Activities.Handle.Handle()\n- uid: System.Activities.Handle.ExecutionPropertyName\n  parent: System.Activities.Handle\n  isExternal: false\n  name: ExecutionPropertyName\n  nameWithType: Handle.ExecutionPropertyName\n  fullName: System.Activities.Handle.ExecutionPropertyName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)\n  parent: System.Activities.Handle\n  isExternal: false\n  name: OnInitialize(HandleInitializationContext)\n  nameWithType: Handle.OnInitialize(HandleInitializationContext)\n  fullName: System.Activities.Handle.OnInitialize(HandleInitializationContext)\n- uid: System.Activities.HandleInitializationContext\n  parent: System.Activities\n  isExternal: false\n  name: HandleInitializationContext\n  nameWithType: HandleInitializationContext\n  fullName: System.Activities.HandleInitializationContext\n- uid: System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)\n  parent: System.Activities.Handle\n  isExternal: false\n  name: OnUninitialize(HandleInitializationContext)\n  nameWithType: Handle.OnUninitialize(HandleInitializationContext)\n  fullName: System.Activities.Handle.OnUninitialize(HandleInitializationContext)\n- uid: System.Activities.Handle.Owner\n  parent: System.Activities.Handle\n  isExternal: false\n  name: Owner\n  nameWithType: Handle.Owner\n  fullName: System.Activities.Handle.Owner\n- uid: System.Activities.ActivityInstance\n  parent: System.Activities\n  isExternal: false\n  name: ActivityInstance\n  nameWithType: ActivityInstance\n  fullName: System.Activities.ActivityInstance\n- uid: System.Activities.Handle.ThrowIfUninitialized\n  parent: System.Activities.Handle\n  isExternal: false\n  name: ThrowIfUninitialized()\n  nameWithType: Handle.ThrowIfUninitialized()\n  fullName: System.Activities.Handle.ThrowIfUninitialized()\n- uid: System.Activities.Handle.#ctor*\n  parent: System.Activities.Handle\n  isExternal: false\n  name: Handle\n  nameWithType: Handle.Handle\n- uid: System.Activities.Handle.ExecutionPropertyName*\n  parent: System.Activities.Handle\n  isExternal: false\n  name: ExecutionPropertyName\n  nameWithType: Handle.ExecutionPropertyName\n- uid: System.Activities.Handle.OnInitialize*\n  parent: System.Activities.Handle\n  isExternal: false\n  name: OnInitialize\n  nameWithType: Handle.OnInitialize\n- uid: System.Activities.Handle.OnUninitialize*\n  parent: System.Activities.Handle\n  isExternal: false\n  name: OnUninitialize\n  nameWithType: Handle.OnUninitialize\n- uid: System.Activities.Handle.Owner*\n  parent: System.Activities.Handle\n  isExternal: false\n  name: Owner\n  nameWithType: Handle.Owner\n- uid: System.Activities.Handle.ThrowIfUninitialized*\n  parent: System.Activities.Handle\n  isExternal: false\n  name: ThrowIfUninitialized\n  nameWithType: Handle.ThrowIfUninitialized\n"}