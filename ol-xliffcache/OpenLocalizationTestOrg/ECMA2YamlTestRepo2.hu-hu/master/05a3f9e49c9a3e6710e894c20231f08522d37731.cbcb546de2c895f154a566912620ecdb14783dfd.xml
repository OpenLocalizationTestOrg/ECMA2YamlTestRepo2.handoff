{"nodes":[{"pos":[4235,4337],"content":"Represents the fundamental building block of workflows. Activity is the base class for all activities.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the fundamental building block of workflows. Activity is the base class for all activities.","pos":[0,102],"nodes":[{"content":"Represents the fundamental building block of workflows.","pos":[0,55]},{"content":"Activity is the base class for all activities.","pos":[56,102]}]}]},{"pos":[4350,5687],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       An Activity is the fundamental building block of workflows. An Activity defines a set of properties and events, such as any class, along with execution logic that defines the activity's run-time behavior. A set of additional components can be associated with an Activity. These include, but are not limited to a validator, a code generator, custom serializers, and a designer.       All activities share a common set of properties defined on the Activity base class.  Each Activity can declare its own additional properties according to its requirements by extending this class.  Because Activity derives from <xref:System.Workflow.ComponentModel.DependencyObject>, properties can be defined as standard CLR properties and as dependency properties.       The execution logic of an Activity fulfills a contract that exists between any Activity and the workflow runtime. You must document the execution logic of any Activity in a functional sense, so that a workflow developer who uses the Activity knows how it behaves. The execution logic itself is hidden from the workflow developer who includes the activity in a workflow, because the execution logic is part of a contract that exists strictly between the workflow runtime and the Activity.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       An Activity is the fundamental building block of workflows.","pos":[0,147],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       An Activity is the fundamental building block of workflows."},{"content":"An Activity defines a set of properties and events, such as any class, along with execution logic that defines the activity's run-time behavior.","pos":[148,292]},{"content":"A set of additional components can be associated with an Activity.","pos":[293,359]},{"content":"These include, but are not limited to a validator, a code generator, custom serializers, and a designer.","pos":[360,464]},{"content":"All activities share a common set of properties defined on the Activity base class.","pos":[471,554]},{"content":"Each Activity can declare its own additional properties according to its requirements by extending this class.","pos":[556,666]},{"content":"Because Activity derives from &lt;xref:System.Workflow.ComponentModel.DependencyObject&gt;, properties can be defined as standard CLR properties and as dependency properties.","pos":[668,836],"source":"  Because Activity derives from <xref:System.Workflow.ComponentModel.DependencyObject>, properties can be defined as standard CLR properties and as dependency properties."},{"content":"The execution logic of an Activity fulfills a contract that exists between any Activity and the workflow runtime.","pos":[843,956]},{"content":"You must document the execution logic of any Activity in a functional sense, so that a workflow developer who uses the Activity knows how it behaves.","pos":[957,1106]},{"content":"The execution logic itself is hidden from the workflow developer who includes the activity in a workflow, because the execution logic is part of a contract that exists strictly between the workflow runtime and the Activity.","pos":[1107,1330]}]},{"pos":[11826,11927],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> class."},{"pos":[13071,13249],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, while initializing the &lt;xref:System.Workflow.ComponentModel.Activity.Name*&gt;.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> class, while initializing the <xref:System.Workflow.ComponentModel.Activity.Name*>."},{"pos":[13380,13587],"content":"The name to associate with this instance. The name must conform to the variable naming conventions for the programming language that is being used in the Workflow project, and must be unique in the workflow.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name to associate with this instance. The name must conform to the variable naming conventions for the programming language that is being used in the Workflow project, and must be unique in the workflow.","pos":[0,207],"nodes":[{"content":"The name to associate with this instance.","pos":[0,41]},{"content":"The name must conform to the variable naming conventions for the programming language that is being used in the Workflow project, and must be unique in the workflow.","pos":[42,207]}]}]},{"pos":[13763,13886],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>name</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[14376,14663],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the &lt;xref:System.Guid&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that is associated with the <bpt id=\"p3\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that represents the <xref:System.Guid> of the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that is associated with the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."},{"pos":[14979,14991],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15586,15680],"content":"Called by the workflow runtime to cancel execution of an activity that is currently executing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called by the workflow runtime to cancel execution of an activity that is currently executing.","pos":[0,94]}]},{"pos":[15990,16108],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the instance to cancel.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that contains the instance to cancel."},{"pos":[16207,16349],"content":"The status at the end of the operation that determines whether the activity remains in the canceling state or transitions to the closed state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The status at the end of the operation that determines whether the activity remains in the canceling state or transitions to the closed state.","pos":[0,142]}]},{"pos":[16826,16873],"content":"Occurs when the activity execution is canceled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the activity execution is canceled.","pos":[0,47]}]},{"pos":[16886,17508],"content":"Raising an event invokes the event handler through a delegate. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The <xref:System.Workflow.ComponentModel.Activity.Cancel%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,217],"source":"[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The &lt;xref:System.Workflow.ComponentModel.Activity.Cancel%2A&gt; method also allows derived classes to handle the event without attaching a delegate.","pos":[224,369],"source":"       The <xref:System.Workflow.ComponentModel.Activity.Cancel%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[370,444]},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[446,620],"source":"[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[17777,17789],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18231,18411],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity.Canceling\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.ComponentModel.Activity.Canceling\"></xref> event."},{"pos":[18424,18761],"content":"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.","pos":[0,123]},{"content":"This dependency property is the public static field named <ph id=\"ph1\">`XProperty`</ph> or <ph id=\"ph2\">`XEvent`</ph>, where X is the corresponding property.","pos":[124,245],"source":" This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property."}]},{"pos":[18968,18980],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19384,19472],"content":"Creates a deep copy of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates a deep copy of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."},{"pos":[19484,19637],"content":"Uses a <xref:System.IO.MemoryStream> to copy the activity and creates a new activity by deserializing from that particular <xref:System.IO.MemoryStream>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Uses a &lt;xref:System.IO.MemoryStream&gt; to copy the activity and creates a new activity by deserializing from that particular &lt;xref:System.IO.MemoryStream&gt;.","pos":[0,153],"source":"Uses a <xref:System.IO.MemoryStream> to copy the activity and creates a new activity by deserializing from that particular <xref:System.IO.MemoryStream>."}]},{"pos":[19820,19900],"content":"A deep copy of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A deep copy of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."},{"pos":[20361,20461],"content":"Occurs when an <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has completed execution.","needQuote":true,"needEscape":true,"source":"Occurs when an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> has completed execution."},{"pos":[20474,20870],"content":"Raising an event invokes the event handler through a delegate. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The Closed method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,217],"source":"[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The Closed method also allows derived classes to handle the event without attaching a delegate.","pos":[224,319]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[320,394]}]},{"pos":[21136,21148],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21575,21752],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity.Closed\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.ComponentModel.Activity.Closed\"></xref> event."},{"pos":[21765,22102],"content":"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.","pos":[0,123]},{"content":"This dependency property is the public static field named <ph id=\"ph1\">`XProperty`</ph> or <ph id=\"ph2\">`XEvent`</ph>, where X is the corresponding property.","pos":[124,245],"source":" This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property."}]},{"pos":[22306,22318],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22750,22860],"content":"Occurs when running a compensation method on the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when running a compensation method on the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."},{"pos":[22873,23275],"content":"Raising an event invokes the event handler through a delegate. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The Compensating method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,217],"source":"[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The Compensating method also allows derived classes to handle the event without attaching a delegate.","pos":[224,325]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[326,400]}]},{"pos":[23547,23559],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24016,24199],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity.Compensating\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.ComponentModel.Activity.Compensating\"></xref> event."},{"pos":[24212,24549],"content":"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.","pos":[0,123]},{"content":"This dependency property is the public static field named <ph id=\"ph1\">`XProperty`</ph> or <ph id=\"ph2\">`XEvent`</ph>, where X is the corresponding property.","pos":[124,245],"source":" This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property."}]},{"pos":[24759,24771],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25201,25311],"content":"Gets or sets the user-defined description of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the user-defined description of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."},{"pos":[25323,25543],"content":"This property is a meta property, which means it cannot be changed at runtime. Meta properties do not change after a property instance is created at runtime, so the property must be set to a literal value at design time.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is a meta property, which means it cannot be changed at runtime. Meta properties do not change after a property instance is created at runtime, so the property must be set to a literal value at design time.","pos":[0,220],"nodes":[{"content":"This property is a meta property, which means it cannot be changed at runtime.","pos":[0,78]},{"content":"Meta properties do not change after a property instance is created at runtime, so the property must be set to a literal value at design time.","pos":[79,220]}]}]},{"pos":[25664,25753],"content":"The text description of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The text description of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."},{"pos":[26228,26326],"content":"Gets or sets a value that indicates whether this instance is enabled for execution and validation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether this instance is enabled for execution and validation.","pos":[0,98]}]},{"pos":[26339,26655],"content":"If `false`, all child activities are treated as if this value is `false` for them also.       This property is a meta property, which means it cannot be changed at runtime. Meta properties do not change after a property instance is created at runtime, so the property must be set to a literal value at design time.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If <ph id=\"ph1\">`false`</ph>, all child activities are treated as if this value is <ph id=\"ph2\">`false`</ph> for them also.","pos":[0,87],"source":"If `false`, all child activities are treated as if this value is `false` for them also."},{"content":"This property is a meta property, which means it cannot be changed at runtime.","pos":[94,172]},{"content":"Meta properties do not change after a property instance is created at runtime, so the property must be set to a literal value at design time.","pos":[173,314]}]},{"pos":[26772,26947],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if enabled for execution and validation; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> otherwise.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if enabled for execution and validation; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise."},{"pos":[27608,27662],"content":"Called by the workflow runtime to execute an activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called by the workflow runtime to execute an activity.","pos":[0,54]}]},{"pos":[27675,28024],"content":"The <xref:System.Workflow.ComponentModel.ActivityExecutionContext> is used to get information about the currently running activity and workflow, and is also used to obtain services from the runtime environment.       The running occurs synchronously, returning control to the caller when the activity is completed or reaches an intermediate state.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Workflow.ComponentModel.ActivityExecutionContext> is used to get information about the currently running activity and workflow, and is also used to obtain services from the runtime environment.       The running occurs synchronously, returning control to the caller when the activity is completed or reaches an intermediate state.","pos":[0,347],"nodes":[{"content":"The &lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext&gt; is used to get information about the currently running activity and workflow, and is also used to obtain services from the runtime environment.","pos":[0,210],"source":"The <xref:System.Workflow.ComponentModel.ActivityExecutionContext> is used to get information about the currently running activity and workflow, and is also used to obtain services from the runtime environment."},{"content":"The running occurs synchronously, returning control to the caller when the activity is completed or reaches an intermediate state.","pos":[217,347]}]}]},{"pos":[28897,29076],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to associate with this <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and execution.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> to associate with this <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> and execution."},{"pos":[29175,29377],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the run task, which determines whether the activity remains in the executing state, or transitions to the closed state.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> of the run task, which determines whether the activity remains in the executing state, or transitions to the closed state."},{"pos":[29855,29939],"content":"Occurs when the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is run.","needQuote":true,"needEscape":true,"source":"Occurs when the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> is run."},{"pos":[29952,30351],"content":"Raising an event invokes the event handler through a delegate. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The Executing method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,217],"source":"[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The Executing method also allows derived classes to handle the event without attaching a delegate.","pos":[224,322]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[323,397]}]},{"pos":[30620,30632],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31074,31298],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity.Executing\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event, which occurs when the activity is executed.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.ComponentModel.Activity.Executing\"></xref> event, which occurs when the activity is executed."},{"pos":[31311,31648],"content":"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.","pos":[0,123]},{"content":"This dependency property is the public static field named <ph id=\"ph1\">`XProperty`</ph> or <ph id=\"ph2\">`XEvent`</ph>, where X is the corresponding property.","pos":[124,245],"source":" This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property."}]},{"pos":[31855,31867],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32317,32443],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the last attempt to run this instance.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionResult\"></xref> of the last attempt to run this instance."},{"pos":[32455,32520],"content":"This property is only useful when a workflow instance is running.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is only useful when a workflow instance is running.","pos":[0,65]}]},{"pos":[32729,32850],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the last attempt to run this instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionResult\"></xref> of the last attempt to run this instance."},{"pos":[33369,33479],"content":"Gets the current <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of this instance.","needQuote":true,"needEscape":true,"source":"Gets the current <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> of this instance."},{"pos":[33491,33556],"content":"This property is only useful when a workflow instance is running.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is only useful when a workflow instance is running.","pos":[0,65]}]},{"pos":[33765,33870],"content":"The current <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of this instance.","needQuote":true,"needEscape":true,"source":"The current <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> of this instance."},{"pos":[34351,34421],"content":"Occurs when an exception is raised during the running of the instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when an exception is raised during the running of the instance.","pos":[0,70]}]},{"pos":[34434,34608],"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","needQuote":false,"needEscape":true,"extradata":"MT","source":"[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"pos":[34876,34888],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35325,35496],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity.Faulting\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that represents the <xref href=\"System.Workflow.ComponentModel.Activity.Faulting\"></xref> event."},{"pos":[35509,35846],"content":"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.","pos":[0,123]},{"content":"This dependency property is the public static field named <ph id=\"ph1\">`XProperty`</ph> or <ph id=\"ph2\">`XEvent`</ph>, where X is the corresponding property.","pos":[124,245],"source":" This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property."}]},{"pos":[36052,36064],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36576,36799],"content":"Returns the instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose name is requested from the set of all activities running under the root activity of this instance, which is within the workflow.","needQuote":true,"needEscape":true,"source":"Returns the instance of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> whose name is requested from the set of all activities running under the root activity of this instance, which is within the workflow."},{"pos":[36811,36937],"content":"Calling <ph id=\"ph1\">`GetActivityByName`</ph> from within the constructor of a custom activity is not supported and can have unexpected results.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Calling `GetActivityByName` from within the constructor of a custom activity is not supported and can have unexpected results."},{"pos":[37151,37242],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to search for.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to search for."},{"pos":[37326,37511],"content":"The instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose name is requested from the set of all activities running under the root activity of this instance.","needQuote":true,"needEscape":true,"source":"The instance of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> whose name is requested from the set of all activities running under the root activity of this instance."},{"pos":[37699,37837],"content":"<ph id=\"ph1\">&lt;code&gt;activityQualifiedID&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>activityQualifiedID</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[38386,38888],"content":"Returns the instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose name is requested from the set of all activities under the root the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> of this instance if the second parameter is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and under the current <bpt id=\"p4\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> if the second parameter is <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the instance of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> whose name is requested from the set of all activities under the root the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> of this instance if the second parameter is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and under the current <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> if the second parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[38901,39387],"content":"Returns the instance of the <xref:System.Workflow.ComponentModel.Activity> whose name is requested from the set of all activities under the root the <xref:System.Workflow.ComponentModel.Activity> of this instance if the second parameter is `false` and under the current <xref:System.Workflow.ComponentModel.Activity> if the second parameter is `true`.       Calling `GetActivityByName` from within the constructor of a custom activity is not supported and can have unexpected results.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Returns the instance of the &lt;xref:System.Workflow.ComponentModel.Activity&gt; whose name is requested from the set of all activities under the root the &lt;xref:System.Workflow.ComponentModel.Activity&gt; of this instance if the second parameter is <ph id=\"ph1\">`false`</ph> and under the current &lt;xref:System.Workflow.ComponentModel.Activity&gt; if the second parameter is <ph id=\"ph2\">`true`</ph>.","pos":[0,351],"source":"Returns the instance of the <xref:System.Workflow.ComponentModel.Activity> whose name is requested from the set of all activities under the root the <xref:System.Workflow.ComponentModel.Activity> of this instance if the second parameter is `false` and under the current <xref:System.Workflow.ComponentModel.Activity> if the second parameter is `true`."},{"content":"Calling <ph id=\"ph1\">`GetActivityByName`</ph> from within the constructor of a custom activity is not supported and can have unexpected results.","pos":[358,484],"source":"       Calling `GetActivityByName` from within the constructor of a custom activity is not supported and can have unexpected results."}]},{"pos":[39631,39722],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to search for.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to search for."},{"pos":[39802,39900],"content":"The value that indicates whether to limit the search to activities contained within this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value that indicates whether to limit the search to activities contained within this instance.","pos":[0,98]}]},{"pos":[39984,40478],"content":"The instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose name is requested from the set of all activities under the root the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> of this instance if the second parameter is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and under the current <bpt id=\"p4\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> if the second parameter is <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The instance of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> whose name is requested from the set of all activities under the root the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> of this instance if the second parameter is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and under the current <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> if the second parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[40666,40804],"content":"<ph id=\"ph1\">&lt;code&gt;activityQualifiedID&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>activityQualifiedID</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[41471,41559],"content":"Called when an exception is raised within the context of the execution of this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when an exception is raised within the context of the execution of this instance.","pos":[0,88]}]},{"pos":[41571,41711],"content":"The default method tries to call the <xref:System.Workflow.ComponentModel.Activity.Cancel%2A> method and returns the result of this attempt.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default method tries to call the &lt;xref:System.Workflow.ComponentModel.Activity.Cancel%2A&gt; method and returns the result of this attempt.","pos":[0,140],"source":"The default method tries to call the <xref:System.Workflow.ComponentModel.Activity.Cancel%2A> method and returns the result of this attempt."}]},{"pos":[42047,42146],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for this instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this instance."},{"pos":[42215,42266],"content":"The <xref:System.Exception> that caused this fault.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Exception&gt; that caused this fault.","pos":[0,51],"source":"The <xref:System.Exception> that caused this fault."}]},{"pos":[42365,42498],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that results from an attempt to cancel this instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> that results from an attempt to cancel this instance."},{"pos":[42680,42808],"content":"<ph id=\"ph1\">&lt;code&gt;exception&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>exception</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[43318,43563],"content":"Called by the workflow runtime to initialize an activity during the construction of a new workflow instance. This method is called during the construction of a dynamic <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called by the workflow runtime to initialize an activity during the construction of a new workflow instance.","pos":[0,108]},{"content":"This method is called during the construction of a dynamic <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[109,245],"source":" This method is called during the construction of a dynamic <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>."}]},{"pos":[43740,43816],"content":"The <xref:System.IServiceProvider> that provides the initialization service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IServiceProvider&gt; that provides the initialization service.","pos":[0,76],"source":"The <xref:System.IServiceProvider> that provides the initialization service."}]},{"pos":[43997,44125],"content":"<ph id=\"ph1\">&lt;code&gt;provider&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing \" name=\"Nothing \" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>provider</code> is a null reference (<xref uid=\"langword_csharp_Nothing \" name=\"Nothing \" href=\"\"></xref>in Visual Basic)."},{"pos":[44813,44825],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44871,44883],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45829,45841],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45887,45899],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46422,46600],"content":"Gets information about whether the activity is executing within the default <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the workflow instance.","needQuote":true,"needEscape":true,"source":"Gets information about whether the activity is executing within the default <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> of the workflow instance."},{"pos":[46721,47022],"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the activity is executing within the default <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> of the workflow instance, otherwise returns <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the activity is executing within the default <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> of the workflow instance, otherwise returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[47653,47769],"content":"Loads an instance of an <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from a &lt;xref:System.IO.Stream&gt;.","needQuote":true,"needEscape":true,"source":"Loads an instance of an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> from a <xref:System.IO.Stream>."},{"pos":[48263,48310],"content":"The <xref:System.IO.Stream> from which to load.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IO.Stream&gt; from which to load.","pos":[0,47],"source":"The <xref:System.IO.Stream> from which to load."}]},{"pos":[48406,48575],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that owns the context for the deserialized <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that owns the context for the deserialized <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."},{"pos":[48659,48769],"content":"An instance of an <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from a &lt;xref:System.IO.Stream&gt;.","needQuote":true,"needEscape":true,"source":"An instance of an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> from a <xref:System.IO.Stream>."},{"pos":[48944,49069],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>stream</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[49725,49939],"content":"Loads an instance of an <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from a &lt;xref:System.IO.Stream&gt; using the custom <bpt id=\"p2\">&lt;xref href=\"System.Runtime.Serialization.IFormatter\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> for deserialization.","needQuote":true,"needEscape":true,"source":"Loads an instance of an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> from a <xref:System.IO.Stream> using the custom <xref href=\"System.Runtime.Serialization.IFormatter\"></xref> for deserialization."},{"pos":[50484,50541],"content":"The target <xref:System.IO.Stream> of the load operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target &lt;xref:System.IO.Stream&gt; of the load operation.","pos":[0,57],"source":"The target <xref:System.IO.Stream> of the load operation."}]},{"pos":[50637,50806],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that owns the context for the deserialized <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that owns the context for the deserialized <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."},{"pos":[50898,51009],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.IFormatter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to read from the &lt;xref:System.IO.Stream&gt;.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Serialization.IFormatter\"></xref> used to read from the <xref:System.IO.Stream>."},{"pos":[51093,51203],"content":"An instance of an <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from a &lt;xref:System.IO.Stream&gt;.","needQuote":true,"needEscape":true,"source":"An instance of an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> from a <xref:System.IO.Stream>."},{"pos":[51378,51490],"content":"<ph id=\"ph1\">&lt;code&gt;formatter&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>).","needQuote":true,"needEscape":true,"source":"<code>formatter</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>)."},{"pos":[51868,52036],"content":"Gets or sets the name of this instance. This name must conform to the variable naming convention of the programming language that is being used in the Workflow project.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of this instance. This name must conform to the variable naming convention of the programming language that is being used in the Workflow project.","pos":[0,168],"nodes":[{"content":"Gets or sets the name of this instance.","pos":[0,39]},{"content":"This name must conform to the variable naming convention of the programming language that is being used in the Workflow project.","pos":[40,168]}]}]},{"pos":[52049,52321],"content":"Default value for this is the empty string.       This property is a meta property, which means it cannot be changed at runtime. Meta properties do not change after a property instance is created at runtime, so the property must be set to a literal value at design time.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Default value for this is the empty string.       This property is a meta property, which means it cannot be changed at runtime. Meta properties do not change after a property instance is created at runtime, so the property must be set to a literal value at design time.","pos":[0,270],"nodes":[{"content":"Default value for this is the empty string.","pos":[0,43]},{"content":"This property is a meta property, which means it cannot be changed at runtime.","pos":[50,128]},{"content":"Meta properties do not change after a property instance is created at runtime, so the property must be set to a literal value at design time.","pos":[129,270]}]}]},{"pos":[53004,53030],"content":"The name of this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of this instance.","pos":[0,26]}]},{"pos":[53715,54162],"content":"Called by the workflow runtime whenever an <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> is loaded. For example, this method is called during the creation of an <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> as well as every time the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> is reincarnated when a workflow instance is loaded from persistent storage.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called by the workflow runtime whenever an <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is loaded.","pos":[0,130],"source":"Called by the workflow runtime whenever an <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> is loaded."},{"content":"For example, this method is called during the creation of an <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> as well as every time the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is reincarnated when a workflow instance is loaded from persistent storage.","pos":[131,447],"source":" For example, this method is called during the creation of an <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> as well as every time the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> is reincarnated when a workflow instance is loaded from persistent storage."}]},{"pos":[54359,54420],"content":"The <xref:System.IServiceProvider> that provides the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IServiceProvider&gt; that provides the service.","pos":[0,61],"source":"The <xref:System.IServiceProvider> that provides the service."}]},{"pos":[55141,55563],"content":"Called by the workflow runtime whenever an <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> is unloaded. For example, this method is called during completion of an <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> as well as every time the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> is unloaded when a workflow instance is persisted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called by the workflow runtime whenever an <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is unloaded.","pos":[0,132],"source":"Called by the workflow runtime whenever an <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> is unloaded."},{"content":"For example, this method is called during completion of an <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> as well as every time the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is unloaded when a workflow instance is persisted.","pos":[133,422],"source":" For example, this method is called during completion of an <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> as well as every time the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> is unloaded when a workflow instance is persisted."}]},{"pos":[55762,55823],"content":"The <xref:System.IServiceProvider> that provides the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IServiceProvider&gt; that provides the service.","pos":[0,61],"source":"The <xref:System.IServiceProvider> that provides the service."}]},{"pos":[56426,56514],"content":"Called by the workflow runtime as part of the activity's transition to the closed state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called by the workflow runtime as part of the activity's transition to the closed state.","pos":[0,88]}]},{"pos":[56526,56632],"content":"This method provides the activity with an opportunity to clean up resources utilized during its execution.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method provides the activity with an opportunity to clean up resources utilized during its execution.","pos":[0,106]}]},{"pos":[56807,56868],"content":"The <xref:System.IServiceProvider> that provides the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IServiceProvider&gt; that provides the service.","pos":[0,61],"source":"The <xref:System.IServiceProvider> that provides the service."}]},{"pos":[57335,57494],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.CompositeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains this <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> that contains this <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."},{"pos":[57506,57678],"content":"Returnsa null reference(<ph id=\"ph1\">`Nothing`</ph> in Visual Basic) if &lt;xref:System.Workflow.ComponentModel.Activity&gt; is a workflow or a root &lt;xref:System.Workflow.ComponentModel.Activity&gt;.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Returnsa null reference(`Nothing` in Visual Basic) if <xref:System.Workflow.ComponentModel.Activity> is a workflow or a root <xref:System.Workflow.ComponentModel.Activity>."},{"pos":[57866,58017],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is a parent to this <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that is a parent to this <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."},{"pos":[58517,58624],"content":"Gets the qualified name of the activity. Qualified activity names are always unique in a workflow instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the qualified name of the activity. Qualified activity names are always unique in a workflow instance.","pos":[0,107],"nodes":[{"content":"Gets the qualified name of the activity.","pos":[0,40]},{"content":"Qualified activity names are always unique in a workflow instance.","pos":[41,107]}]}]},{"pos":[58636,58771],"content":"The qualified name is the name of this instance with the name of the custom activity that contains this instance appended to the front.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The qualified name is the name of this instance with the name of the custom activity that contains this instance appended to the front.","pos":[0,135]}]},{"pos":[58889,58924],"content":"The qualified name of the instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The qualified name of the instance.","pos":[0,35]}]},{"pos":[59689,59800],"content":"Raises an <bpt id=\"p1\">&lt;xref href=\"System.Reflection.MemberTypes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with the specified dependency property.","needQuote":true,"needEscape":true,"source":"Raises an <xref href=\"System.Reflection.MemberTypes\"></xref> associated with the specified dependency property."},{"pos":[60690,60837],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with this <bpt id=\"p2\">&lt;xref href=\"System.Reflection.MemberTypes\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> associated with this <xref href=\"System.Reflection.MemberTypes\"></xref>."},{"pos":[60900,60990],"content":"The &lt;xref:System.Object&gt; source of the <bpt id=\"p1\">&lt;xref href=\"System.Reflection.MemberTypes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Object> source of the <xref href=\"System.Reflection.MemberTypes\"></xref>."},{"pos":[61051,61150],"content":"The &lt;xref:System.EventArgs&gt; associated with the <bpt id=\"p1\">&lt;xref href=\"System.Reflection.MemberTypes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.EventArgs> associated with the <xref href=\"System.Reflection.MemberTypes\"></xref>."},{"pos":[62185,62197],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[62260,62272],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[62318,62330],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[63498,63621],"content":"Registers the specified <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the status change event.","needQuote":true,"needEscape":true,"source":"Registers the specified <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> for the status change event."},{"pos":[64027,64114],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to register.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> to register."},{"pos":[64311,64389],"content":"The object that implements the Event Listener interface for this registration.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that implements the Event Listener interface for this registration.","pos":[0,78]}]},{"pos":[64576,65169],"content":"<ph id=\"ph1\">&lt;code&gt;dependencyProp&lt;/code&gt;</ph> is not one of the following:      -   <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity.ExecutingEvent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept><bpt id=\"p2\">      -   &lt;xref href=\"System.Workflow.ComponentModel.Activity.CancelingEvent\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept><bpt id=\"p3\">      -   &lt;xref href=\"System.Workflow.ComponentModel.Activity.ClosedEvent\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept><bpt id=\"p4\">      -   &lt;xref href=\"System.Workflow.ComponentModel.Activity.CompensatingEvent\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept><bpt id=\"p5\">      -   &lt;xref href=\"System.Workflow.ComponentModel.Activity.FaultingEvent\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept><bpt id=\"p6\">      -   &lt;xref href=\"System.Workflow.ComponentModel.Activity.StatusChangedEvent\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept>","needQuote":false,"needEscape":true,"source":"<code>dependencyProp</code> is not one of the following:      -   <xref href=\"System.Workflow.ComponentModel.Activity.ExecutingEvent\"></xref>      -   <xref href=\"System.Workflow.ComponentModel.Activity.CancelingEvent\"></xref>      -   <xref href=\"System.Workflow.ComponentModel.Activity.ClosedEvent\"></xref>      -   <xref href=\"System.Workflow.ComponentModel.Activity.CompensatingEvent\"></xref>      -   <xref href=\"System.Workflow.ComponentModel.Activity.FaultingEvent\"></xref>      -   <xref href=\"System.Workflow.ComponentModel.Activity.StatusChangedEvent\"></xref>"},{"pos":[65606,65723],"content":"Writes the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to a &lt;xref:System.IO.Stream&gt; for persistence.","needQuote":true,"needEscape":true,"source":"Writes the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to a <xref:System.IO.Stream> for persistence."},{"pos":[65872,65982],"content":"The &lt;xref:System.IO.Stream&gt; to which to save the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.IO.Stream> to which to save the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."},{"pos":[66157,66282],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>stream</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[66831,67053],"content":"Writes the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to a &lt;xref:System.IO.Stream&gt; for persistence using the custom <bpt id=\"p2\">&lt;xref href=\"System.Runtime.Serialization.IFormatter\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> provided for serialization.","needQuote":true,"needEscape":true,"source":"Writes the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to a <xref:System.IO.Stream> for persistence using the custom <xref href=\"System.Runtime.Serialization.IFormatter\"></xref> provided for serialization."},{"pos":[67065,67130],"content":"Soap formatters are not supported by Windows Workflow Foundation.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Soap formatters are not supported by Windows Workflow Foundation.","pos":[0,65]}]},{"pos":[67330,67387],"content":"The target <xref:System.IO.Stream> of the save operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target &lt;xref:System.IO.Stream&gt; of the save operation.","pos":[0,57],"source":"The target <xref:System.IO.Stream> of the save operation."}]},{"pos":[67479,67583],"content":"The binary or custom <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.IFormatter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the serialization.","needQuote":true,"needEscape":true,"source":"The binary or custom <xref href=\"System.Runtime.Serialization.IFormatter\"></xref> for the serialization."},{"pos":[67758,67870],"content":"<ph id=\"ph1\">&lt;code&gt;formatter&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>).","needQuote":true,"needEscape":true,"source":"<code>formatter</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>)."},{"pos":[67981,68013],"content":"This instance is in design mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"This instance is in design mode.","pos":[0,32]}]},{"pos":[68433,68607],"content":"Occurs when the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of a running <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> changes.","needQuote":true,"needEscape":true,"source":"Occurs when the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> of a running <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> changes."},{"pos":[68620,69427],"content":"Raising an event invokes the event handler through a delegate. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The StatusChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.      > [!NOTE] >  When an activity (Activity A) subscribes to a different activity's (Activity B) `StatusChanged` event, the `Activity` property of the associated <xref:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> refers to the activity subscribed to (Activity B), and the associated `Sender` object refers to the execution context of the subscribing activity (Activity A).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,217],"source":"[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The StatusChanged method also allows derived classes to handle the event without attaching a delegate.","pos":[224,326]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[327,401]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When an activity (Activity A) subscribes to a different activity's (Activity B) <ph id=\"ph2\">`StatusChanged`</ph> event, the <ph id=\"ph3\">`Activity`</ph> property of the associated &lt;xref:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; refers to the activity subscribed to (Activity B), and the associated <ph id=\"ph4\">`Sender`</ph> object refers to the execution context of the subscribing activity (Activity A).","pos":[407,802],"source":"      > [!NOTE] >  When an activity (Activity A) subscribes to a different activity's (Activity B) `StatusChanged` event, the `Activity` property of the associated <xref:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> refers to the activity subscribed to (Activity B), and the associated `Sender` object refers to the execution context of the subscribing activity (Activity A)."}]},{"pos":[69700,69712],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[70174,70358],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity.StatusChanged\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.ComponentModel.Activity.StatusChanged\"></xref> event."},{"pos":[70371,70708],"content":"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.","pos":[0,123]},{"content":"This dependency property is the public static field named <ph id=\"ph1\">`XProperty`</ph> or <ph id=\"ph2\">`XEvent`</ph>, where X is the corresponding property.","pos":[124,245],"source":" This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property."}]},{"pos":[70919,70931],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[71350,71398],"content":"Provides a string that represents this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a string that represents this instance.","pos":[0,48]}]},{"pos":[71410,71586],"content":"The string returned is a combination of the <xref:System.Workflow.ComponentModel.Activity.QualifiedName%2A> and the <xref:System.Type.FullName%2A> of the type of this instance.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The string returned is a combination of the &lt;xref:System.Workflow.ComponentModel.Activity.QualifiedName%2A&gt; and the &lt;xref:System.Type.FullName%2A&gt; of the type of this instance.","pos":[0,176],"source":"The string returned is a combination of the <xref:System.Workflow.ComponentModel.Activity.QualifiedName%2A> and the <xref:System.Type.FullName%2A> of the type of this instance."}]},{"pos":[71722,71736],"content":"This instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"This instance.","pos":[0,14]}]},{"pos":[72270,72347],"content":"Informs the run-time tracking infrastructure of pending tracking information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Informs the run-time tracking infrastructure of pending tracking information.","pos":[0,77]}]},{"pos":[73002,73062],"content":"<xref:System.Object> that contains the tracking information.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Object&gt; that contains the tracking information.","pos":[0,60],"source":"<xref:System.Object> that contains the tracking information."}]},{"pos":[73242,73369],"content":"<ph id=\"ph1\">&lt;code&gt;userData&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>userData</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[73873,73950],"content":"Informs the run-time tracking infrastructure of pending tracking information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Informs the run-time tracking infrastructure of pending tracking information.","pos":[0,77]}]},{"pos":[74121,74163],"content":"The key to the user data that has changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key to the user data that has changed.","pos":[0,42]}]},{"pos":[74228,74288],"content":"<xref:System.Object> that contains the tracking information.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Object&gt; that contains the tracking information.","pos":[0,60],"source":"<xref:System.Object> that contains the tracking information."}]},{"pos":[74468,74595],"content":"<ph id=\"ph1\">&lt;code&gt;userData&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>userData</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[75115,75217],"content":"When overridden in a derived class, provides un-initialization by a service provider for the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, provides un-initialization by a service provider for the activity.","pos":[0,102]}]},{"pos":[75230,75796],"content":"This method provides the activity with an opportunity to clean up resources allocated during initialization.       Uninitialize is called when an activity instance is guaranteed not to perform any more execution. For activities that do not implement <xref:System.Workflow.ComponentModel.ICompensatableActivity>, this occurs immediately after the activity closes, or, if the activity never executed, at workflow completion. For <xref:System.Workflow.ComponentModel.ICompensatableActivity> activities, this occurs either after compensation or at workflow completion.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method provides the activity with an opportunity to clean up resources allocated during initialization.       Uninitialize is called when an activity instance is guaranteed not to perform any more execution. For activities that do not implement <xref:System.Workflow.ComponentModel.ICompensatableActivity>, this occurs immediately after the activity closes, or, if the activity never executed, at workflow completion. For <xref:System.Workflow.ComponentModel.ICompensatableActivity> activities, this occurs either after compensation or at workflow completion.","pos":[0,564],"nodes":[{"content":"This method provides the activity with an opportunity to clean up resources allocated during initialization.","pos":[0,108]},{"content":"Uninitialize is called when an activity instance is guaranteed not to perform any more execution.","pos":[115,212]},{"content":"For activities that do not implement &lt;xref:System.Workflow.ComponentModel.ICompensatableActivity&gt;, this occurs immediately after the activity closes, or, if the activity never executed, at workflow completion.","pos":[213,422],"source":" For activities that do not implement <xref:System.Workflow.ComponentModel.ICompensatableActivity>, this occurs immediately after the activity closes, or, if the activity never executed, at workflow completion."},{"content":"For &lt;xref:System.Workflow.ComponentModel.ICompensatableActivity&gt; activities, this occurs either after compensation or at workflow completion.","pos":[423,564],"source":" For <xref:System.Workflow.ComponentModel.ICompensatableActivity> activities, this occurs either after compensation or at workflow completion."}]}]},{"pos":[75976,76037],"content":"The <xref:System.IServiceProvider> that provides the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IServiceProvider&gt; that provides the service.","pos":[0,61],"source":"The <xref:System.IServiceProvider> that provides the service."}]},{"pos":[77207,77333],"content":"Un-registers the specified <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the status change event.","needQuote":true,"needEscape":true,"source":"Un-registers the specified <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> for the status change event."},{"pos":[77741,77831],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to un-register.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> to un-register."},{"pos":[78028,78106],"content":"The object that implements the Event Listener interface for this registration.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that implements the Event Listener interface for this registration.","pos":[0,78]}]},{"pos":[78295,78888],"content":"<ph id=\"ph1\">&lt;code&gt;dependencyProp&lt;/code&gt;</ph> is not one of the following:      -   <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity.ExecutingEvent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept><bpt id=\"p2\">      -   &lt;xref href=\"System.Workflow.ComponentModel.Activity.CancelingEvent\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept><bpt id=\"p3\">      -   &lt;xref href=\"System.Workflow.ComponentModel.Activity.ClosedEvent\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept><bpt id=\"p4\">      -   &lt;xref href=\"System.Workflow.ComponentModel.Activity.CompensatingEvent\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept><bpt id=\"p5\">      -   &lt;xref href=\"System.Workflow.ComponentModel.Activity.FaultingEvent\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept><bpt id=\"p6\">      -   &lt;xref href=\"System.Workflow.ComponentModel.Activity.StatusChangedEvent\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept>","needQuote":false,"needEscape":true,"source":"<code>dependencyProp</code> is not one of the following:      -   <xref href=\"System.Workflow.ComponentModel.Activity.ExecutingEvent\"></xref>      -   <xref href=\"System.Workflow.ComponentModel.Activity.CancelingEvent\"></xref>      -   <xref href=\"System.Workflow.ComponentModel.Activity.ClosedEvent\"></xref>      -   <xref href=\"System.Workflow.ComponentModel.Activity.CompensatingEvent\"></xref>      -   <xref href=\"System.Workflow.ComponentModel.Activity.FaultingEvent\"></xref>      -   <xref href=\"System.Workflow.ComponentModel.Activity.StatusChangedEvent\"></xref>"},{"pos":[79337,79394],"content":"Gets the <xref:System.Guid> associated with the instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Guid&gt; associated with the instance.","pos":[0,57],"source":"Gets the <xref:System.Guid> associated with the instance."}]},{"pos":[79516,79568],"content":"The <xref:System.Guid> associated with the instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Guid&gt; associated with the instance.","pos":[0,52],"source":"The <xref:System.Guid> associated with the instance."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.ComponentModel.Activity\n  id: Activity\n  children:\n  - System.Workflow.ComponentModel.Activity.#ctor\n  - System.Workflow.ComponentModel.Activity.#ctor(System.String)\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  langs:\n  - csharp\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Workflow.ComponentModel.Activity\n  type: Class\n  summary: Represents the fundamental building block of workflows. Activity is the base class for all activities.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n An Activity is the fundamental building block of workflows. An Activity defines a set of properties and events, such as any class, along with execution logic that defines the activity's run-time behavior. A set of additional components can be associated with an Activity. These include, but are not limited to a validator, a code generator, custom serializers, and a designer.  \\n  \\n All activities share a common set of properties defined on the Activity base class.  Each Activity can declare its own additional properties according to its requirements by extending this class.  Because Activity derives from <xref:System.Workflow.ComponentModel.DependencyObject>, properties can be defined as standard CLR properties and as dependency properties.  \\n  \\n The execution logic of an Activity fulfills a contract that exists between any Activity and the workflow runtime. You must document the execution logic of any Activity in a functional sense, so that a workflow developer who uses the Activity knows how it behaves. The execution logic itself is hidden from the workflow developer who includes the activity in a workflow, because the execution logic is part of a contract that exists strictly between the workflow runtime and the Activity.\"\n  example:\n  - \"This example defines an activity whose purpose is to send an email. The activity defines one property, `Subject`, that uses a dependency property in its implementation. Other properties can be defined in a similar way. The `Execute` method is overridden to provide the logic for sending the email. For a complete example, see the [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \\n  \\n```c#  \\npublic class SendEmail : Activity  \\n{  \\n    public static readonly DependencyProperty SubjectProperty =  \\n        DependencyProperty.Register(\\\"Subject\\\", typeof(string), typeof(SendEmail));  \\n  \\n    public string Subject  \\n    {  \\n        get { return base.GetValue(SubjectProperty) as string; }  \\n        set { base.SetValue(SubjectProperty, value); }  \\n    }  \\n  \\n    // Define other properties...  \\n  \\n    protected override ActivityExecutionStatus Execute(ActivityExecutionContext executionContext)  \\n    {  \\n        // Logic to send the e-mail goes here...  \\n        return ActivityExecutionStatus.Closed;  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))]\n\n      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.CodeDomSerializer))]\n\n      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.TypeCodeDomSerializer))]\n\n      [System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.ActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]\n\n      [System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.ActivityDesigner), typeof(System.ComponentModel.Design.IRootDesigner))]\n\n      [System.ComponentModel.DesignerCategory(\"Component\")]\n\n      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]\n\n      [System.ComponentModel.ToolboxItemFilter(\"Microsoft.Workflow.VSDesigner\", System.ComponentModel.ToolboxItemFilterType.Require)]\n\n      [System.ComponentModel.ToolboxItemFilter(\"System.Workflow.ComponentModel.Design.ActivitySet\", System.ComponentModel.ToolboxItemFilterType.Allow)]\n\n      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.ComponentModel.Activity), \"Design.Resources.Activity.png\")]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator(typeof(System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator))]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.ComponentModel.Compiler.ActivityValidator))]\n\n      [System.Workflow.ComponentModel.Serialization.RuntimeNameProperty(\"Name\")]\n\n      public class Activity : System.Workflow.ComponentModel.DependencyObject\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  implements: []\n  inheritedMembers:\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Activity()\n  nameWithType: Activity.Activity()\n  fullName: System.Workflow.ComponentModel.Activity.Activity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code shows how to create activities and add them as children to a composite activity.  \\n  \\n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Throw Sample](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \\n  \\n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]\"\n  syntax:\n    content: public Activity ();\n    parameters: []\n  overload: System.Workflow.ComponentModel.Activity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Activity(String)\n  nameWithType: Activity.Activity(String)\n  fullName: System.Workflow.ComponentModel.Activity.Activity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> class, while initializing the <xref:System.Workflow.ComponentModel.Activity.Name*>.\n  syntax:\n    content: public Activity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name to associate with this instance. The name must conform to the variable naming conventions for the programming language that is being used in the Workflow project, and must be unique in the workflow.\n  overload: System.Workflow.ComponentModel.Activity.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  id: ActivityContextGuidProperty\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: ActivityContextGuidProperty\n  nameWithType: Activity.ActivityContextGuidProperty\n  fullName: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  type: Field\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: The <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that represents the <xref:System.Guid> of the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that is associated with the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ActivityContextGuidProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: Activity.Cancel(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.Activity.Cancel(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called by the workflow runtime to cancel execution of an activity that is currently executing.\n  syntax:\n    content: protected virtual System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> that contains the instance to cancel.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: The status at the end of the operation that determines whether the activity remains in the canceling state or transitions to the closed state.\n  overload: System.Workflow.ComponentModel.Activity.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Canceling\n  id: Canceling\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Canceling\n  nameWithType: Activity.Canceling\n  fullName: System.Workflow.ComponentModel.Activity.Canceling\n  type: Event\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Occurs when the activity execution is canceled.\n  remarks: \"Raising an event invokes the event handler through a delegate. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The <xref:System.Workflow.ComponentModel.Activity.Cancel%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Canceling;\n    return:\n      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.CancelingEvent\n  id: CancelingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: CancelingEvent\n  nameWithType: Activity.CancelingEvent\n  fullName: System.Workflow.ComponentModel.Activity.CancelingEvent\n  type: Field\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.ComponentModel.Activity.Canceling\"></xref> event.\n  remarks: \"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.  \\n  \\n [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]\"\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CancelingEvent;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Clone\n  id: Clone\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Activity.Clone()\n  fullName: System.Workflow.ComponentModel.Activity.Clone()\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Creates a deep copy of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  remarks: Uses a <xref:System.IO.MemoryStream> to copy the activity and creates a new activity by deserializing from that particular <xref:System.IO.MemoryStream>.\n  syntax:\n    content: public System.Workflow.ComponentModel.Activity Clone ();\n    parameters: []\n    return:\n      type: System.Workflow.ComponentModel.Activity\n      description: A deep copy of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  overload: System.Workflow.ComponentModel.Activity.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Closed\n  id: Closed\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Closed\n  nameWithType: Activity.Closed\n  fullName: System.Workflow.ComponentModel.Activity.Closed\n  type: Event\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Occurs when an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> has completed execution.\n  remarks: \"Raising an event invokes the event handler through a delegate. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The Closed method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Closed;\n    return:\n      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.ClosedEvent\n  id: ClosedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: ClosedEvent\n  nameWithType: Activity.ClosedEvent\n  fullName: System.Workflow.ComponentModel.Activity.ClosedEvent\n  type: Field\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.ComponentModel.Activity.Closed\"></xref> event.\n  remarks: \"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.  \\n  \\n [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]\"\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ClosedEvent;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Compensating\n  id: Compensating\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Compensating\n  nameWithType: Activity.Compensating\n  fullName: System.Workflow.ComponentModel.Activity.Compensating\n  type: Event\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Occurs when running a compensation method on the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  remarks: \"Raising an event invokes the event handler through a delegate. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The Compensating method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Compensating;\n    return:\n      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.CompensatingEvent\n  id: CompensatingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: CompensatingEvent\n  nameWithType: Activity.CompensatingEvent\n  fullName: System.Workflow.ComponentModel.Activity.CompensatingEvent\n  type: Field\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.ComponentModel.Activity.Compensating\"></xref> event.\n  remarks: \"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.  \\n  \\n [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]\"\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CompensatingEvent;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Description\n  id: Description\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Description\n  nameWithType: Activity.Description\n  fullName: System.Workflow.ComponentModel.Activity.Description\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets or sets the user-defined description of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  remarks: This property is a meta property, which means it cannot be changed at runtime. Meta properties do not change after a property instance is created at runtime, so the property must be set to a literal value at design time.\n  syntax:\n    content: public string Description { get; set; }\n    return:\n      type: System.String\n      description: The text description of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  overload: System.Workflow.ComponentModel.Activity.Description*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Enabled\n  id: Enabled\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: Activity.Enabled\n  fullName: System.Workflow.ComponentModel.Activity.Enabled\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets or sets a value that indicates whether this instance is enabled for execution and validation.\n  remarks: \"If `false`, all child activities are treated as if this value is `false` for them also.  \\n  \\n This property is a meta property, which means it cannot be changed at runtime. Meta properties do not change after a property instance is created at runtime, so the property must be set to a literal value at design time.\"\n  syntax:\n    content: public bool Enabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if enabled for execution and validation; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> otherwise.\n  overload: System.Workflow.ComponentModel.Activity.Enabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Execute(ActivityExecutionContext)\n  nameWithType: Activity.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.Activity.Execute(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called by the workflow runtime to execute an activity.\n  remarks: \"The <xref:System.Workflow.ComponentModel.ActivityExecutionContext> is used to get information about the currently running activity and workflow, and is also used to obtain services from the runtime environment.  \\n  \\n The running occurs synchronously, returning control to the caller when the activity is completed or reaches an intermediate state.\"\n  example:\n  - \"The following code example shows an implementation of the `Execute` method. In this example, an Outlook e-mail message is constructed and sent. This example is from the Outlook Workflow Wizard SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Outlook Workflow Wizard Sample](http://msdn.microsoft.com/en-us/7b2ba92b-8456-43f3-87fc-184ffdec4408).  \\n  \\n [!code-cs[WF_Samples#98](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#98)]\\n [!code-vb[WF_Samples#98](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#98)]\"\n  syntax:\n    content: protected virtual System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> to associate with this <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> and execution.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> of the run task, which determines whether the activity remains in the executing state, or transitions to the closed state.\n  overload: System.Workflow.ComponentModel.Activity.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Executing\n  id: Executing\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Executing\n  nameWithType: Activity.Executing\n  fullName: System.Workflow.ComponentModel.Activity.Executing\n  type: Event\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Occurs when the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> is run.\n  remarks: \"Raising an event invokes the event handler through a delegate. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The Executing method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Executing;\n    return:\n      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.ExecutingEvent\n  id: ExecutingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: ExecutingEvent\n  nameWithType: Activity.ExecutingEvent\n  fullName: System.Workflow.ComponentModel.Activity.ExecutingEvent\n  type: Field\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.ComponentModel.Activity.Executing\"></xref> event, which occurs when the activity is executed.\n  remarks: \"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.  \\n  \\n [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]\"\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ExecutingEvent;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.ExecutionResult\n  id: ExecutionResult\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: ExecutionResult\n  nameWithType: Activity.ExecutionResult\n  fullName: System.Workflow.ComponentModel.Activity.ExecutionResult\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionResult\"></xref> of the last attempt to run this instance.\n  remarks: This property is only useful when a workflow instance is running.\n  syntax:\n    content: public System.Workflow.ComponentModel.ActivityExecutionResult ExecutionResult { get; }\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionResult\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionResult\"></xref> of the last attempt to run this instance.\n  overload: System.Workflow.ComponentModel.Activity.ExecutionResult*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus\n  id: ExecutionStatus\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: ExecutionStatus\n  nameWithType: Activity.ExecutionStatus\n  fullName: System.Workflow.ComponentModel.Activity.ExecutionStatus\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets the current <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> of this instance.\n  remarks: This property is only useful when a workflow instance is running.\n  syntax:\n    content: public System.Workflow.ComponentModel.ActivityExecutionStatus ExecutionStatus { get; }\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: The current <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> of this instance.\n  overload: System.Workflow.ComponentModel.Activity.ExecutionStatus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Faulting\n  id: Faulting\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Faulting\n  nameWithType: Activity.Faulting\n  fullName: System.Workflow.ComponentModel.Activity.Faulting\n  type: Event\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Occurs when an exception is raised during the running of the instance.\n  remarks: '[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  syntax:\n    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Faulting;\n    return:\n      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.FaultingEvent\n  id: FaultingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: FaultingEvent\n  nameWithType: Activity.FaultingEvent\n  fullName: System.Workflow.ComponentModel.Activity.FaultingEvent\n  type: Field\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: The <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that represents the <xref href=\"System.Workflow.ComponentModel.Activity.Faulting\"></xref> event.\n  remarks: \"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.  \\n  \\n [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]\"\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty FaultingEvent;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  id: GetActivityByName(System.String)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: GetActivityByName(String)\n  nameWithType: Activity.GetActivityByName(String)\n  fullName: System.Workflow.ComponentModel.Activity.GetActivityByName(String)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Returns the instance of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> whose name is requested from the set of all activities running under the root activity of this instance, which is within the workflow.\n  remarks: Calling `GetActivityByName` from within the constructor of a custom activity is not supported and can have unexpected results.\n  syntax:\n    content: public System.Workflow.ComponentModel.Activity GetActivityByName (string activityQualifiedName);\n    parameters:\n    - id: activityQualifiedName\n      type: System.String\n      description: The name of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to search for.\n    return:\n      type: System.Workflow.ComponentModel.Activity\n      description: The instance of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> whose name is requested from the set of all activities running under the root activity of this instance.\n  overload: System.Workflow.ComponentModel.Activity.GetActivityByName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>activityQualifiedID</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  id: GetActivityByName(System.String,System.Boolean)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: GetActivityByName(String,Boolean)\n  nameWithType: Activity.GetActivityByName(String,Boolean)\n  fullName: System.Workflow.ComponentModel.Activity.GetActivityByName(String,Boolean)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Returns the instance of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> whose name is requested from the set of all activities under the root the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> of this instance if the second parameter is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and under the current <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> if the second parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  remarks: \"Returns the instance of the <xref:System.Workflow.ComponentModel.Activity> whose name is requested from the set of all activities under the root the <xref:System.Workflow.ComponentModel.Activity> of this instance if the second parameter is `false` and under the current <xref:System.Workflow.ComponentModel.Activity> if the second parameter is `true`.  \\n  \\n Calling `GetActivityByName` from within the constructor of a custom activity is not supported and can have unexpected results.\"\n  syntax:\n    content: public System.Workflow.ComponentModel.Activity GetActivityByName (string activityQualifiedName, bool withinThisActivityOnly);\n    parameters:\n    - id: activityQualifiedName\n      type: System.String\n      description: The name of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to search for.\n    - id: withinThisActivityOnly\n      type: System.Boolean\n      description: The value that indicates whether to limit the search to activities contained within this instance.\n    return:\n      type: System.Workflow.ComponentModel.Activity\n      description: The instance of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> whose name is requested from the set of all activities under the root the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> of this instance if the second parameter is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and under the current <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> if the second parameter is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Workflow.ComponentModel.Activity.GetActivityByName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>activityQualifiedID</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  id: HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: HandleFault(ActivityExecutionContext,Exception)\n  nameWithType: Activity.HandleFault(ActivityExecutionContext,Exception)\n  fullName: System.Workflow.ComponentModel.Activity.HandleFault(ActivityExecutionContext,Exception)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called when an exception is raised within the context of the execution of this instance.\n  remarks: The default method tries to call the <xref:System.Workflow.ComponentModel.Activity.Cancel%2A> method and returns the result of this attempt.\n  syntax:\n    content: protected virtual System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> for this instance.\n    - id: exception\n      type: System.Exception\n      description: The <xref:System.Exception> that caused this fault.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> that results from an attempt to cancel this instance.\n  overload: System.Workflow.ComponentModel.Activity.HandleFault*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>exception</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)\n  id: Initialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Initialize(IServiceProvider)\n  nameWithType: Activity.Initialize(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.Activity.Initialize(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called by the workflow runtime to initialize an activity during the construction of a new workflow instance. This method is called during the construction of a dynamic <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref>.\n  syntax:\n    content: protected virtual void Initialize (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: The <xref:System.IServiceProvider> that provides the initialization service.\n  overload: System.Workflow.ComponentModel.Activity.Initialize*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>provider</code> is a null reference (<xref uid=\"langword_csharp_Nothing \" name=\"Nothing \" href=\"\"></xref>in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  id: Invoke``1(System.EventHandler{``0},``0)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Invoke(EventHandler<T>,T)\n  nameWithType: Activity.Invoke(EventHandler<T>,T)\n  fullName: System.Workflow.ComponentModel.Activity.Invoke(EventHandler<T>,T)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  syntax:\n    content: 'protected void Invoke<T> (EventHandler<T> handler, T e) where T : EventArgs;'\n    parameters:\n    - id: handler\n      type: System.EventHandler{T}\n      description: To be added.\n    - id: e\n      type: T\n      description: To be added.\n  overload: System.Workflow.ComponentModel.Activity.Invoke<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)\n  id: Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Invoke(IActivityEventListener<T>,T)\n  nameWithType: Activity.Invoke(IActivityEventListener<T>,T)\n  fullName: System.Workflow.ComponentModel.Activity.Invoke(IActivityEventListener<T>,T)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  syntax:\n    content: 'protected void Invoke<T> (System.Workflow.ComponentModel.IActivityEventListener<T> eventListener, T e) where T : EventArgs;'\n    parameters:\n    - id: eventListener\n      type: System.Workflow.ComponentModel.IActivityEventListener`1\n      description: To be added.\n    - id: e\n      type: T\n      description: To be added.\n  overload: System.Workflow.ComponentModel.Activity.Invoke<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  id: IsDynamicActivity\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: IsDynamicActivity\n  nameWithType: Activity.IsDynamicActivity\n  fullName: System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets information about whether the activity is executing within the default <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> of the workflow instance.\n  syntax:\n    content: public bool IsDynamicActivity { get; }\n    return:\n      type: System.Boolean\n      description: Returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the activity is executing within the default <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> of the workflow instance, otherwise returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Workflow.ComponentModel.Activity.IsDynamicActivity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  id: Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Load(Stream,Activity)\n  nameWithType: Activity.Load(Stream,Activity)\n  fullName: System.Workflow.ComponentModel.Activity.Load(Stream,Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Loads an instance of an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> from a <xref:System.IO.Stream>.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).\n  syntax:\n    content: public static System.Workflow.ComponentModel.Activity Load (System.IO.Stream stream, System.Workflow.ComponentModel.Activity outerActivity);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The <xref:System.IO.Stream> from which to load.\n    - id: outerActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that owns the context for the deserialized <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n    return:\n      type: System.Workflow.ComponentModel.Activity\n      description: An instance of an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> from a <xref:System.IO.Stream>.\n  overload: System.Workflow.ComponentModel.Activity.Load*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  id: Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Load(Stream,Activity,IFormatter)\n  nameWithType: Activity.Load(Stream,Activity,IFormatter)\n  fullName: System.Workflow.ComponentModel.Activity.Load(Stream,Activity,IFormatter)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Loads an instance of an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> from a <xref:System.IO.Stream> using the custom <xref href=\"System.Runtime.Serialization.IFormatter\"></xref> for deserialization.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).\n  syntax:\n    content: public static System.Workflow.ComponentModel.Activity Load (System.IO.Stream stream, System.Workflow.ComponentModel.Activity outerActivity, System.Runtime.Serialization.IFormatter formatter);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The target <xref:System.IO.Stream> of the load operation.\n    - id: outerActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that owns the context for the deserialized <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n    - id: formatter\n      type: System.Runtime.Serialization.IFormatter\n      description: The <xref href=\"System.Runtime.Serialization.IFormatter\"></xref> used to read from the <xref:System.IO.Stream>.\n    return:\n      type: System.Workflow.ComponentModel.Activity\n      description: An instance of an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> from a <xref:System.IO.Stream>.\n  overload: System.Workflow.ComponentModel.Activity.Load*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>formatter</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>).\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Name\n  id: Name\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Name\n  nameWithType: Activity.Name\n  fullName: System.Workflow.ComponentModel.Activity.Name\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets or sets the name of this instance. This name must conform to the variable naming convention of the programming language that is being used in the Workflow project.\n  remarks: \"Default value for this is the empty string.  \\n  \\n This property is a meta property, which means it cannot be changed at runtime. Meta properties do not change after a property instance is created at runtime, so the property must be set to a literal value at design time.\"\n  example:\n  - \"The following code shows how to create activities and add them as children to a composite activity and set the value for Name.  \\n  \\n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Throw Sample](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \\n  \\n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]\"\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of this instance.\n  overload: System.Workflow.ComponentModel.Activity.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  id: OnActivityExecutionContextLoad(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: OnActivityExecutionContextLoad(IServiceProvider)\n  nameWithType: Activity.OnActivityExecutionContextLoad(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called by the workflow runtime whenever an <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> is loaded. For example, this method is called during the creation of an <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> as well as every time the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> is reincarnated when a workflow instance is loaded from persistent storage.\n  syntax:\n    content: protected virtual void OnActivityExecutionContextLoad (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: The <xref:System.IServiceProvider> that provides the service.\n  overload: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  id: OnActivityExecutionContextUnload(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: OnActivityExecutionContextUnload(IServiceProvider)\n  nameWithType: Activity.OnActivityExecutionContextUnload(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called by the workflow runtime whenever an <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> is unloaded. For example, this method is called during completion of an <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> as well as every time the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> is unloaded when a workflow instance is persisted.\n  syntax:\n    content: protected virtual void OnActivityExecutionContextUnload (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: The <xref:System.IServiceProvider> that provides the service.\n  overload: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  id: OnClosed(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: OnClosed(IServiceProvider)\n  nameWithType: Activity.OnClosed(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.Activity.OnClosed(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Called by the workflow runtime as part of the activity's transition to the closed state.\n  remarks: This method provides the activity with an opportunity to clean up resources utilized during its execution.\n  syntax:\n    content: protected virtual void OnClosed (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: The <xref:System.IServiceProvider> that provides the service.\n  overload: System.Workflow.ComponentModel.Activity.OnClosed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Parent\n  id: Parent\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Parent\n  nameWithType: Activity.Parent\n  fullName: System.Workflow.ComponentModel.Activity.Parent\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets the <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> that contains this <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  remarks: Returnsa null reference(`Nothing` in Visual Basic) if <xref:System.Workflow.ComponentModel.Activity> is a workflow or a root <xref:System.Workflow.ComponentModel.Activity>.\n  syntax:\n    content: public System.Workflow.ComponentModel.CompositeActivity Parent { get; }\n    return:\n      type: System.Workflow.ComponentModel.CompositeActivity\n      description: The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> that is a parent to this <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  overload: System.Workflow.ComponentModel.Activity.Parent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.QualifiedName\n  id: QualifiedName\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: QualifiedName\n  nameWithType: Activity.QualifiedName\n  fullName: System.Workflow.ComponentModel.Activity.QualifiedName\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets the qualified name of the activity. Qualified activity names are always unique in a workflow instance.\n  remarks: The qualified name is the name of this instance with the name of the custom activity that contains this instance appended to the front.\n  syntax:\n    content: public string QualifiedName { get; }\n    return:\n      type: System.String\n      description: The qualified name of the instance.\n  overload: System.Workflow.ComponentModel.Activity.QualifiedName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  id: RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: RaiseEvent(DependencyProperty,Object,EventArgs)\n  nameWithType: Activity.RaiseEvent(DependencyProperty,Object,EventArgs)\n  fullName: System.Workflow.ComponentModel.Activity.RaiseEvent(DependencyProperty,Object,EventArgs)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Raises an <xref href=\"System.Reflection.MemberTypes\"></xref> associated with the specified dependency property.\n  remarks: ''\n  example:\n  - \"The following code invokes this method to raise an event that is defined as a <xref:System.Workflow.ComponentModel.DependencyProperty>.  \\n  \\n This code example is part of the Send E-mail Activity sample and is from the SendEmailActivity.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669)  \\n  \\n [!code-cs[WF_Samples#233](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#233)]\\n [!code-vb[WF_Samples#233](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#233)]\"\n  syntax:\n    content: protected void RaiseEvent (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object sender, EventArgs e);\n    parameters:\n    - id: dependencyEvent\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: The <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> associated with this <xref href=\"System.Reflection.MemberTypes\"></xref>.\n    - id: sender\n      type: System.Object\n      description: The <xref:System.Object> source of the <xref href=\"System.Reflection.MemberTypes\"></xref>.\n    - id: e\n      type: System.EventArgs\n      description: The <xref:System.EventArgs> associated with the <xref href=\"System.Reflection.MemberTypes\"></xref>.\n  overload: System.Workflow.ComponentModel.Activity.RaiseEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  id: RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: RaiseGenericEvent(DependencyProperty,Object,T)\n  nameWithType: Activity.RaiseGenericEvent(DependencyProperty,Object,T)\n  fullName: System.Workflow.ComponentModel.Activity.RaiseGenericEvent(DependencyProperty,Object,T)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  syntax:\n    content: 'protected void RaiseGenericEvent<T> (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object sender, T e) where T : EventArgs;'\n    parameters:\n    - id: dependencyEvent\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n    - id: sender\n      type: System.Object\n      description: To be added.\n    - id: e\n      type: T\n      description: To be added.\n  overload: System.Workflow.ComponentModel.Activity.RaiseGenericEvent<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  id: RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Registers the specified <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> for the status change event.\n  syntax:\n    content: public void RegisterForStatusChange (System.Workflow.ComponentModel.DependencyProperty dependencyProp, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> activityStatusChangeListener);\n    parameters:\n    - id: dependencyProp\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: The <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> to register.\n    - id: activityStatusChangeListener\n      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}\n      description: The object that implements the Event Listener interface for this registration.\n  overload: System.Workflow.ComponentModel.Activity.RegisterForStatusChange*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>dependencyProp</code> is not one of the following:  \\n  \\n-   <xref href=\\\"System.Workflow.ComponentModel.Activity.ExecutingEvent\\\"></xref>  \\n  \\n-   <xref href=\\\"System.Workflow.ComponentModel.Activity.CancelingEvent\\\"></xref>  \\n  \\n-   <xref href=\\\"System.Workflow.ComponentModel.Activity.ClosedEvent\\\"></xref>  \\n  \\n-   <xref href=\\\"System.Workflow.ComponentModel.Activity.CompensatingEvent\\\"></xref>  \\n  \\n-   <xref href=\\\"System.Workflow.ComponentModel.Activity.FaultingEvent\\\"></xref>  \\n  \\n-   <xref href=\\\"System.Workflow.ComponentModel.Activity.StatusChangedEvent\\\"></xref>\"\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  id: Save(System.IO.Stream)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Save(Stream)\n  nameWithType: Activity.Save(Stream)\n  fullName: System.Workflow.ComponentModel.Activity.Save(Stream)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Writes the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to a <xref:System.IO.Stream> for persistence.\n  syntax:\n    content: public void Save (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The <xref:System.IO.Stream> to which to save the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  overload: System.Workflow.ComponentModel.Activity.Save*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  id: Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Save(Stream,IFormatter)\n  nameWithType: Activity.Save(Stream,IFormatter)\n  fullName: System.Workflow.ComponentModel.Activity.Save(Stream,IFormatter)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Writes the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to a <xref:System.IO.Stream> for persistence using the custom <xref href=\"System.Runtime.Serialization.IFormatter\"></xref> provided for serialization.\n  remarks: Soap formatters are not supported by Windows Workflow Foundation.\n  syntax:\n    content: public void Save (System.IO.Stream stream, System.Runtime.Serialization.IFormatter formatter);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The target <xref:System.IO.Stream> of the save operation.\n    - id: formatter\n      type: System.Runtime.Serialization.IFormatter\n      description: The binary or custom <xref href=\"System.Runtime.Serialization.IFormatter\"></xref> for the serialization.\n  overload: System.Workflow.ComponentModel.Activity.Save*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>formatter</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>).\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This instance is in design mode.\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.StatusChanged\n  id: StatusChanged\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: StatusChanged\n  nameWithType: Activity.StatusChanged\n  fullName: System.Workflow.ComponentModel.Activity.StatusChanged\n  type: Event\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Occurs when the <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> of a running <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> changes.\n  remarks: \"Raising an event invokes the event handler through a delegate. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The StatusChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  \\n  \\n> [!NOTE]\\n>  When an activity (Activity A) subscribes to a different activity's (Activity B) `StatusChanged` event, the `Activity` property of the associated <xref:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> refers to the activity subscribed to (Activity B), and the associated `Sender` object refers to the execution context of the subscribing activity (Activity A).\"\n  syntax:\n    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> StatusChanged;\n    return:\n      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  id: StatusChangedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: StatusChangedEvent\n  nameWithType: Activity.StatusChangedEvent\n  fullName: System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  type: Field\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.ComponentModel.Activity.StatusChanged\"></xref> event.\n  remarks: \"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.  \\n  \\n [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]\"\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty StatusChangedEvent;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.ToString\n  id: ToString\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: System.Workflow.ComponentModel.Activity.ToString()\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Provides a string that represents this instance.\n  remarks: The string returned is a combination of the <xref:System.Workflow.ComponentModel.Activity.QualifiedName%2A> and the <xref:System.Type.FullName%2A> of the type of this instance.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: This instance.\n  overload: System.Workflow.ComponentModel.Activity.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  id: TrackData(System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: TrackData(Object)\n  nameWithType: Activity.TrackData(Object)\n  fullName: System.Workflow.ComponentModel.Activity.TrackData(Object)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Informs the run-time tracking infrastructure of pending tracking information.\n  remarks: ''\n  example:\n  - \"The following example shows a call to the `TrackData` method. This example is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \\n  \\n [!code-cs[WF_Samples#118](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#118)]\\n [!code-vb[WF_Samples#118](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#118)]\"\n  syntax:\n    content: protected void TrackData (object userData);\n    parameters:\n    - id: userData\n      type: System.Object\n      description: <xref:System.Object> that contains the tracking information.\n  overload: System.Workflow.ComponentModel.Activity.TrackData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>userData</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  id: TrackData(System.String,System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: TrackData(String,Object)\n  nameWithType: Activity.TrackData(String,Object)\n  fullName: System.Workflow.ComponentModel.Activity.TrackData(String,Object)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Informs the run-time tracking infrastructure of pending tracking information.\n  syntax:\n    content: protected void TrackData (string userDataKey, object userData);\n    parameters:\n    - id: userDataKey\n      type: System.String\n      description: The key to the user data that has changed.\n    - id: userData\n      type: System.Object\n      description: <xref:System.Object> that contains the tracking information.\n  overload: System.Workflow.ComponentModel.Activity.TrackData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>userData</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)\n  id: Uninitialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: Uninitialize(IServiceProvider)\n  nameWithType: Activity.Uninitialize(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.Activity.Uninitialize(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: When overridden in a derived class, provides un-initialization by a service provider for the activity.\n  remarks: \"This method provides the activity with an opportunity to clean up resources allocated during initialization.  \\n  \\n Uninitialize is called when an activity instance is guaranteed not to perform any more execution. For activities that do not implement <xref:System.Workflow.ComponentModel.ICompensatableActivity>, this occurs immediately after the activity closes, or, if the activity never executed, at workflow completion. For <xref:System.Workflow.ComponentModel.ICompensatableActivity> activities, this occurs either after compensation or at workflow completion.\"\n  syntax:\n    content: protected virtual void Uninitialize (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: The <xref:System.IServiceProvider> that provides the service.\n  overload: System.Workflow.ComponentModel.Activity.Uninitialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  id: UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Un-registers the specified <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> for the status change event.\n  syntax:\n    content: public void UnregisterForStatusChange (System.Workflow.ComponentModel.DependencyProperty dependencyProp, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> activityStatusChangeListener);\n    parameters:\n    - id: dependencyProp\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: The <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> to un-register.\n    - id: activityStatusChangeListener\n      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}\n      description: The object that implements the Event Listener interface for this registration.\n  overload: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>dependencyProp</code> is not one of the following:  \\n  \\n-   <xref href=\\\"System.Workflow.ComponentModel.Activity.ExecutingEvent\\\"></xref>  \\n  \\n-   <xref href=\\\"System.Workflow.ComponentModel.Activity.CancelingEvent\\\"></xref>  \\n  \\n-   <xref href=\\\"System.Workflow.ComponentModel.Activity.ClosedEvent\\\"></xref>  \\n  \\n-   <xref href=\\\"System.Workflow.ComponentModel.Activity.CompensatingEvent\\\"></xref>  \\n  \\n-   <xref href=\\\"System.Workflow.ComponentModel.Activity.FaultingEvent\\\"></xref>  \\n  \\n-   <xref href=\\\"System.Workflow.ComponentModel.Activity.StatusChangedEvent\\\"></xref>\"\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  id: WorkflowInstanceId\n  parent: System.Workflow.ComponentModel.Activity\n  langs:\n  - csharp\n  name: WorkflowInstanceId\n  nameWithType: Activity.WorkflowInstanceId\n  fullName: System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets the <xref:System.Guid> associated with the instance.\n  syntax:\n    content: protected Guid WorkflowInstanceId { get; }\n    return:\n      type: System.Guid\n      description: The <xref:System.Guid> associated with the instance.\n  overload: System.Workflow.ComponentModel.Activity.WorkflowInstanceId*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: System.Workflow.ComponentModel.DependencyObject\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Workflow.ComponentModel.Activity.#ctor\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Activity()\n  nameWithType: Activity.Activity()\n  fullName: System.Workflow.ComponentModel.Activity.Activity()\n- uid: System.Workflow.ComponentModel.Activity.#ctor(System.String)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Activity(String)\n  nameWithType: Activity.Activity(String)\n  fullName: System.Workflow.ComponentModel.Activity.Activity(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ActivityContextGuidProperty\n  nameWithType: Activity.ActivityContextGuidProperty\n  fullName: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n- uid: System.Workflow.ComponentModel.DependencyProperty\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Workflow.ComponentModel.DependencyProperty\n- uid: System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: Activity.Cancel(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.Activity.Cancel(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatus\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatus\n  nameWithType: ActivityExecutionStatus\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus\n- uid: System.Workflow.ComponentModel.ActivityExecutionContext\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionContext\n  nameWithType: ActivityExecutionContext\n  fullName: System.Workflow.ComponentModel.ActivityExecutionContext\n- uid: System.Workflow.ComponentModel.Activity.Canceling\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Canceling\n  nameWithType: Activity.Canceling\n  fullName: System.Workflow.ComponentModel.Activity.Canceling\n- uid: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<ActivityExecutionStatusChangedEventArgs>\n  nameWithType: EventHandler<ActivityExecutionStatusChangedEventArgs>\n  fullName: System.EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n    name: ActivityExecutionStatusChangedEventArgs\n    nameWithType: ActivityExecutionStatusChangedEventArgs\n    fullName: ActivityExecutionStatusChangedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.ComponentModel.Activity.CancelingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: CancelingEvent\n  nameWithType: Activity.CancelingEvent\n  fullName: System.Workflow.ComponentModel.Activity.CancelingEvent\n- uid: System.Workflow.ComponentModel.Activity.Clone\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Clone()\n  nameWithType: Activity.Clone()\n  fullName: System.Workflow.ComponentModel.Activity.Clone()\n- uid: System.Workflow.ComponentModel.Activity\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Workflow.ComponentModel.Activity\n- uid: System.Workflow.ComponentModel.Activity.Closed\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Closed\n  nameWithType: Activity.Closed\n  fullName: System.Workflow.ComponentModel.Activity.Closed\n- uid: System.Workflow.ComponentModel.Activity.ClosedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ClosedEvent\n  nameWithType: Activity.ClosedEvent\n  fullName: System.Workflow.ComponentModel.Activity.ClosedEvent\n- uid: System.Workflow.ComponentModel.Activity.Compensating\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Compensating\n  nameWithType: Activity.Compensating\n  fullName: System.Workflow.ComponentModel.Activity.Compensating\n- uid: System.Workflow.ComponentModel.Activity.CompensatingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: CompensatingEvent\n  nameWithType: Activity.CompensatingEvent\n  fullName: System.Workflow.ComponentModel.Activity.CompensatingEvent\n- uid: System.Workflow.ComponentModel.Activity.Description\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Description\n  nameWithType: Activity.Description\n  fullName: System.Workflow.ComponentModel.Activity.Description\n- uid: System.Workflow.ComponentModel.Activity.Enabled\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Enabled\n  nameWithType: Activity.Enabled\n  fullName: System.Workflow.ComponentModel.Activity.Enabled\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Execute(ActivityExecutionContext)\n  nameWithType: Activity.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.ComponentModel.Activity.Execute(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.Activity.Executing\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Executing\n  nameWithType: Activity.Executing\n  fullName: System.Workflow.ComponentModel.Activity.Executing\n- uid: System.Workflow.ComponentModel.Activity.ExecutingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutingEvent\n  nameWithType: Activity.ExecutingEvent\n  fullName: System.Workflow.ComponentModel.Activity.ExecutingEvent\n- uid: System.Workflow.ComponentModel.Activity.ExecutionResult\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionResult\n  nameWithType: Activity.ExecutionResult\n  fullName: System.Workflow.ComponentModel.Activity.ExecutionResult\n- uid: System.Workflow.ComponentModel.ActivityExecutionResult\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionResult\n  nameWithType: ActivityExecutionResult\n  fullName: System.Workflow.ComponentModel.ActivityExecutionResult\n- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionStatus\n  nameWithType: Activity.ExecutionStatus\n  fullName: System.Workflow.ComponentModel.Activity.ExecutionStatus\n- uid: System.Workflow.ComponentModel.Activity.Faulting\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Faulting\n  nameWithType: Activity.Faulting\n  fullName: System.Workflow.ComponentModel.Activity.Faulting\n- uid: System.Workflow.ComponentModel.Activity.FaultingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: FaultingEvent\n  nameWithType: Activity.FaultingEvent\n  fullName: System.Workflow.ComponentModel.Activity.FaultingEvent\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName(String)\n  nameWithType: Activity.GetActivityByName(String)\n  fullName: System.Workflow.ComponentModel.Activity.GetActivityByName(String)\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName(String,Boolean)\n  nameWithType: Activity.GetActivityByName(String,Boolean)\n  fullName: System.Workflow.ComponentModel.Activity.GetActivityByName(String,Boolean)\n- uid: System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: HandleFault(ActivityExecutionContext,Exception)\n  nameWithType: Activity.HandleFault(ActivityExecutionContext,Exception)\n  fullName: System.Workflow.ComponentModel.Activity.HandleFault(ActivityExecutionContext,Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Initialize(IServiceProvider)\n  nameWithType: Activity.Initialize(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.Activity.Initialize(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: true\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke(EventHandler<T>,T)\n  nameWithType: Activity.Invoke(EventHandler<T>,T)\n  fullName: System.Workflow.ComponentModel.Activity.Invoke(EventHandler<T>,T)\n- uid: System.EventHandler{T}\n  parent: System\n  isExternal: true\n  name: EventHandler<T>\n  nameWithType: EventHandler<T>\n  fullName: System.EventHandler<T>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke(IActivityEventListener<T>,T)\n  nameWithType: Activity.Invoke(IActivityEventListener<T>,T)\n  fullName: System.Workflow.ComponentModel.Activity.Invoke(IActivityEventListener<T>,T)\n- uid: System.Workflow.ComponentModel.IActivityEventListener`1\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: IActivityEventListener<T>\n  nameWithType: IActivityEventListener<T>\n  fullName: System.Workflow.ComponentModel.IActivityEventListener<T>\n- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: IsDynamicActivity\n  nameWithType: Activity.IsDynamicActivity\n  fullName: System.Workflow.ComponentModel.Activity.IsDynamicActivity\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load(Stream,Activity)\n  nameWithType: Activity.Load(Stream,Activity)\n  fullName: System.Workflow.ComponentModel.Activity.Load(Stream,Activity)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load(Stream,Activity,IFormatter)\n  nameWithType: Activity.Load(Stream,Activity,IFormatter)\n  fullName: System.Workflow.ComponentModel.Activity.Load(Stream,Activity,IFormatter)\n- uid: System.Runtime.Serialization.IFormatter\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: IFormatter\n  nameWithType: IFormatter\n  fullName: System.Runtime.Serialization.IFormatter\n- uid: System.Workflow.ComponentModel.Activity.Name\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Name\n  nameWithType: Activity.Name\n  fullName: System.Workflow.ComponentModel.Activity.Name\n- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: OnActivityExecutionContextLoad(IServiceProvider)\n  nameWithType: Activity.OnActivityExecutionContextLoad(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: OnActivityExecutionContextUnload(IServiceProvider)\n  nameWithType: Activity.OnActivityExecutionContextUnload(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: OnClosed(IServiceProvider)\n  nameWithType: Activity.OnClosed(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.Activity.OnClosed(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.Parent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Parent\n  nameWithType: Activity.Parent\n  fullName: System.Workflow.ComponentModel.Activity.Parent\n- uid: System.Workflow.ComponentModel.CompositeActivity\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: CompositeActivity\n  nameWithType: CompositeActivity\n  fullName: System.Workflow.ComponentModel.CompositeActivity\n- uid: System.Workflow.ComponentModel.Activity.QualifiedName\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: QualifiedName\n  nameWithType: Activity.QualifiedName\n  fullName: System.Workflow.ComponentModel.Activity.QualifiedName\n- uid: System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseEvent(DependencyProperty,Object,EventArgs)\n  nameWithType: Activity.RaiseEvent(DependencyProperty,Object,EventArgs)\n  fullName: System.Workflow.ComponentModel.Activity.RaiseEvent(DependencyProperty,Object,EventArgs)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseGenericEvent(DependencyProperty,Object,T)\n  nameWithType: Activity.RaiseGenericEvent(DependencyProperty,Object,T)\n  fullName: System.Workflow.ComponentModel.Activity.RaiseGenericEvent(DependencyProperty,Object,T)\n- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n- uid: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: IActivityEventListener<ActivityExecutionStatusChangedEventArgs>\n  nameWithType: IActivityEventListener<ActivityExecutionStatusChangedEventArgs>\n  fullName: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>\n  spec.csharp:\n  - uid: System.Workflow.ComponentModel.IActivityEventListener`1\n    name: IActivityEventListener\n    nameWithType: IActivityEventListener\n    fullName: IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n    name: ActivityExecutionStatusChangedEventArgs\n    nameWithType: ActivityExecutionStatusChangedEventArgs\n    fullName: ActivityExecutionStatusChangedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save(Stream)\n  nameWithType: Activity.Save(Stream)\n  fullName: System.Workflow.ComponentModel.Activity.Save(Stream)\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save(Stream,IFormatter)\n  nameWithType: Activity.Save(Stream,IFormatter)\n  fullName: System.Workflow.ComponentModel.Activity.Save(Stream,IFormatter)\n- uid: System.Workflow.ComponentModel.Activity.StatusChanged\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: StatusChanged\n  nameWithType: Activity.StatusChanged\n  fullName: System.Workflow.ComponentModel.Activity.StatusChanged\n- uid: System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: StatusChangedEvent\n  nameWithType: Activity.StatusChangedEvent\n  fullName: System.Workflow.ComponentModel.Activity.StatusChangedEvent\n- uid: System.Workflow.ComponentModel.Activity.ToString\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: System.Workflow.ComponentModel.Activity.ToString()\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData(Object)\n  nameWithType: Activity.TrackData(Object)\n  fullName: System.Workflow.ComponentModel.Activity.TrackData(Object)\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData(String,Object)\n  nameWithType: Activity.TrackData(String,Object)\n  fullName: System.Workflow.ComponentModel.Activity.TrackData(String,Object)\n- uid: System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Uninitialize(IServiceProvider)\n  nameWithType: Activity.Uninitialize(IServiceProvider)\n  fullName: System.Workflow.ComponentModel.Activity.Uninitialize(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: WorkflowInstanceId\n  nameWithType: Activity.WorkflowInstanceId\n  fullName: System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Workflow.ComponentModel.Activity.#ctor*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Activity\n  nameWithType: Activity.Activity\n- uid: System.Workflow.ComponentModel.Activity.Cancel*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Cancel\n  nameWithType: Activity.Cancel\n- uid: System.Workflow.ComponentModel.Activity.Clone*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Clone\n  nameWithType: Activity.Clone\n- uid: System.Workflow.ComponentModel.Activity.Description*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Description\n  nameWithType: Activity.Description\n- uid: System.Workflow.ComponentModel.Activity.Enabled*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Enabled\n  nameWithType: Activity.Enabled\n- uid: System.Workflow.ComponentModel.Activity.Execute*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Execute\n  nameWithType: Activity.Execute\n- uid: System.Workflow.ComponentModel.Activity.ExecutionResult*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionResult\n  nameWithType: Activity.ExecutionResult\n- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionStatus\n  nameWithType: Activity.ExecutionStatus\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName\n  nameWithType: Activity.GetActivityByName\n- uid: System.Workflow.ComponentModel.Activity.HandleFault*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: HandleFault\n  nameWithType: Activity.HandleFault\n- uid: System.Workflow.ComponentModel.Activity.Initialize*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Initialize\n  nameWithType: Activity.Initialize\n- uid: System.Workflow.ComponentModel.Activity.Invoke<T>*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke<T>\n  nameWithType: Activity.Invoke<T>\n- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: IsDynamicActivity\n  nameWithType: Activity.IsDynamicActivity\n- uid: System.Workflow.ComponentModel.Activity.Load*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load\n  nameWithType: Activity.Load\n- uid: System.Workflow.ComponentModel.Activity.Name*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Name\n  nameWithType: Activity.Name\n- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: OnActivityExecutionContextLoad\n  nameWithType: Activity.OnActivityExecutionContextLoad\n- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: OnActivityExecutionContextUnload\n  nameWithType: Activity.OnActivityExecutionContextUnload\n- uid: System.Workflow.ComponentModel.Activity.OnClosed*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: OnClosed\n  nameWithType: Activity.OnClosed\n- uid: System.Workflow.ComponentModel.Activity.Parent*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Parent\n  nameWithType: Activity.Parent\n- uid: System.Workflow.ComponentModel.Activity.QualifiedName*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: QualifiedName\n  nameWithType: Activity.QualifiedName\n- uid: System.Workflow.ComponentModel.Activity.RaiseEvent*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseEvent\n  nameWithType: Activity.RaiseEvent\n- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent<T>*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseGenericEvent<T>\n  nameWithType: Activity.RaiseGenericEvent<T>\n- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RegisterForStatusChange\n  nameWithType: Activity.RegisterForStatusChange\n- uid: System.Workflow.ComponentModel.Activity.Save*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save\n  nameWithType: Activity.Save\n- uid: System.Workflow.ComponentModel.Activity.ToString*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ToString\n  nameWithType: Activity.ToString\n- uid: System.Workflow.ComponentModel.Activity.TrackData*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData\n  nameWithType: Activity.TrackData\n- uid: System.Workflow.ComponentModel.Activity.Uninitialize*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Uninitialize\n  nameWithType: Activity.Uninitialize\n- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: UnregisterForStatusChange\n  nameWithType: Activity.UnregisterForStatusChange\n- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId*\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: WorkflowInstanceId\n  nameWithType: Activity.WorkflowInstanceId\n"}