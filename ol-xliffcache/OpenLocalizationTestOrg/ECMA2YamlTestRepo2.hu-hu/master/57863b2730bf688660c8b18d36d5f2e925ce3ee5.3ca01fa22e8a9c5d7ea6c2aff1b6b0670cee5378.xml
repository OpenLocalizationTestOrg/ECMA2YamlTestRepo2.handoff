{"nodes":[{"pos":[781,949],"content":"Defines an element that is used to configure a cache that is based on the <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> class. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines an element that is used to configure a cache that is based on the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Caching.MemoryCache\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[0,136],"source":"Defines an element that is used to configure a cache that is based on the <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> class."},{"content":"This class cannot be inherited.","pos":[137,168]}]},{"pos":[5141,5258],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Caching.Configuration.MemoryCacheElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Runtime.Caching.Configuration.MemoryCacheElement\"></xref> class."},{"pos":[5399,5450],"content":"The unique name for a specific cache configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique name for a specific cache configuration.","pos":[0,51]}]},{"pos":[6081,6230],"content":"Gets or sets the maximum memory size, in megabytes, that an instance of a <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Caching.MemoryCache\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object can grow to.","needQuote":true,"needEscape":true,"source":"Gets or sets the maximum memory size, in megabytes, that an instance of a <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> object can grow to."},{"pos":[7292,7537],"content":"The amount of maximum memory size, in megabytes. The default is zero, which indicates that <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> instances manage their own memory based on the amount of memory that is installed on the computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount of maximum memory size, in megabytes.","pos":[0,48]},{"content":"The default is zero, which indicates that <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Caching.MemoryCache\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances manage their own memory based on the amount of memory that is installed on the computer.","pos":[49,245],"source":" The default is zero, which indicates that <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> instances manage their own memory based on the amount of memory that is installed on the computer."}]},{"pos":[8083,8141],"content":"Gets or sets the name of a particular cache configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of a particular cache configuration.","pos":[0,58]}]},{"pos":[8862,8896],"content":"The name of a cache configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of a cache configuration.","pos":[0,34]}]},{"pos":[9546,9621],"content":"Gets or sets the percentage of server memory that can be used by the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the percentage of server memory that can be used by the cache.","pos":[0,75]}]},{"pos":[10382,10681],"content":"The percentage of physical memory that the cache can use, expressed as an integer value from 1 to 100. The default is zero, which indicates that <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> instances manage their own memory based on the amount of memory that is installed on the computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The percentage of physical memory that the cache can use, expressed as an integer value from 1 to 100.","pos":[0,102]},{"content":"The default is zero, which indicates that <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Caching.MemoryCache\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances manage their own memory based on the amount of memory that is installed on the computer.","pos":[103,299],"source":" The default is zero, which indicates that <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> instances manage their own memory based on the amount of memory that is installed on the computer."}]},{"pos":[11286,11502],"content":"Gets or sets a value that indicates the time interval after which the cache implementation compares the current memory load against the absolute and percentage-based memory limits that are set for the cache instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates the time interval after which the cache implementation compares the current memory load against the absolute and percentage-based memory limits that are set for the cache instance.","pos":[0,216]}]},{"pos":[12247,12455],"content":"The time interval after which the cache implementation compares the current memory load against the absolute and percentage-based memory limits that are set for the cache instance. The default is two minutes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time interval after which the cache implementation compares the current memory load against the absolute and percentage-based memory limits that are set for the cache instance. The default is two minutes.","pos":[0,208],"nodes":[{"content":"The time interval after which the cache implementation compares the current memory load against the absolute and percentage-based memory limits that are set for the cache instance.","pos":[0,180]},{"content":"The default is two minutes.","pos":[181,208]}]}]},{"pos":[13221,13233],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement\n  id: MemoryCacheElement\n  children:\n  - System.Runtime.Caching.Configuration.MemoryCacheElement.#ctor(System.String)\n  - System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes\n  - System.Runtime.Caching.Configuration.MemoryCacheElement.Name\n  - System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage\n  - System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval\n  - System.Runtime.Caching.Configuration.MemoryCacheElement.Properties\n  langs:\n  - csharp\n  name: MemoryCacheElement\n  nameWithType: MemoryCacheElement\n  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement\n  type: Class\n  summary: Defines an element that is used to configure a cache that is based on the <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> class. This class cannot be inherited.\n  remarks: \"The MemoryCacheElement class defines a  element that you can use to configure the cache. Multiple instances of the <xref:System.Runtime.Caching.MemoryCache> class can be used in a single application. Each `memoryCache` element in the configuration file can contain settings for a named <xref:System.Runtime.Caching.MemoryCache> instance.  \\n  \\n The `memoryCache` element requires a `namedCaches` child element. To define named configurations of the cache in addition to the default configuration, you can add `namedCaches` elements. For more information about how to add named cache configurations, see [\\\\&lt;namedCaches\\\\&gt; Element (Cache Settings)](../Topic/%3CnamedCaches%3E%20Element%20\\\\(Cache%20Settings\\\\).md).\"\n  syntax:\n    content: 'public sealed class MemoryCacheElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  langs:\n  - csharp\n  name: MemoryCacheElement(String)\n  nameWithType: MemoryCacheElement.MemoryCacheElement(String)\n  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.MemoryCacheElement(String)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Caching.Configuration.MemoryCacheElement\"></xref> class.\n  syntax:\n    content: public MemoryCacheElement (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The unique name for a specific cache configuration.\n  overload: System.Runtime.Caching.Configuration.MemoryCacheElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes\n  id: CacheMemoryLimitMegabytes\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  langs:\n  - csharp\n  name: CacheMemoryLimitMegabytes\n  nameWithType: MemoryCacheElement.CacheMemoryLimitMegabytes\n  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes\n  type: Property\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Configuration\n  summary: Gets or sets the maximum memory size, in megabytes, that an instance of a <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> object can grow to.\n  remarks: \"The CacheMemoryLimitMegabytes property value represents the `cacheMemoryLimitMegabytes` configuration attribute in the `namedCaches` configuration element.  \\n  \\n If the cache size exceeds the specified limit, the memory cache implementation removes cache entries.  \\n  \\n This property can be set individually in `namedCaches` elements, with each `namedCaches` element corresponding to a unique cache configuration.  \\n  \\n The settings for the <xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A> property can be read from the `cacheMemoryLimitMegabytes` configuration attribute in the configuration file. Alternatively, the settings can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized.  \\n  \\n For more information about how to configure the cache, see [\\\\&lt;namedCaches\\\\&gt; Element (Cache Settings)](../Topic/%3CnamedCaches%3E%20Element%20\\\\(Cache%20Settings\\\\).md).\"\n  syntax:\n    content: public int CacheMemoryLimitMegabytes { get; set; }\n    return:\n      type: System.Int32\n      description: The amount of maximum memory size, in megabytes. The default is zero, which indicates that <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> instances manage their own memory based on the amount of memory that is installed on the computer.\n  overload: System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.Name\n  id: Name\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  langs:\n  - csharp\n  name: Name\n  nameWithType: MemoryCacheElement.Name\n  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.Name\n  type: Property\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Configuration\n  summary: Gets or sets the name of a particular cache configuration.\n  remarks: \"The Name property value is the unique identifier for a particular named cache configuration. Each cache configuration must have a unique ID.  \\n  \\n In the `memoryCache` section of a configuration file, a unique cache configuration is defined by a `namedCaches` configuration collection. Each named cache entry requires a unique name in the configuration file. This value must be at least one character long.  \\n  \\n For more information about how to configure the cache, see [\\\\&lt;namedCaches\\\\&gt; Element (Cache Settings)](../Topic/%3CnamedCaches%3E%20Element%20\\\\(Cache%20Settings\\\\).md).\"\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of a cache configuration.\n  overload: System.Runtime.Caching.Configuration.MemoryCacheElement.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage\n  id: PhysicalMemoryLimitPercentage\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  langs:\n  - csharp\n  name: PhysicalMemoryLimitPercentage\n  nameWithType: MemoryCacheElement.PhysicalMemoryLimitPercentage\n  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage\n  type: Property\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Configuration\n  summary: Gets or sets the percentage of server memory that can be used by the cache.\n  remarks: \"If the cache size exceeds the specified limit, the memory cache implementation removes cache entries.  \\n  \\n The setting for the <xref:System.Runtime.Caching.MemoryCache.PhysicalMemoryLimit%2A> property can be read from `physicalMemoryLimitPercentage` configuration attribute in the application configuration file. Alternatively, the value can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized.  \\n  \\n For more information about how to configure the cache, see [\\\\&lt;namedCaches\\\\&gt; Element (Cache Settings)](../Topic/%3CnamedCaches%3E%20Element%20\\\\(Cache%20Settings\\\\).md).\"\n  syntax:\n    content: public int PhysicalMemoryLimitPercentage { get; set; }\n    return:\n      type: System.Int32\n      description: The percentage of physical memory that the cache can use, expressed as an integer value from 1 to 100. The default is zero, which indicates that <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> instances manage their own memory based on the amount of memory that is installed on the computer.\n  overload: System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval\n  id: PollingInterval\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  langs:\n  - csharp\n  name: PollingInterval\n  nameWithType: MemoryCacheElement.PollingInterval\n  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval\n  type: Property\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Configuration\n  summary: Gets or sets a value that indicates the time interval after which the cache implementation compares the current memory load against the absolute and percentage-based memory limits that are set for the cache instance.\n  remarks: \"The PollingInterval property corresponds to the `pollingInterval` configuration attribute of the `namedCaches` element. The settings for this configuration attribute are specified in the format `HH:MM:SS` and can be read from the `pollingInterval` configuration attribute in the application configuration. Alternatively, the value can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized.  \\n  \\n For more information about how to configure the cache, see [\\\\&lt;namedCaches\\\\&gt; Element (Cache Settings)](../Topic/%3CnamedCaches%3E%20Element%20\\\\(Cache%20Settings\\\\).md).\"\n  syntax:\n    content: public TimeSpan PollingInterval { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The time interval after which the cache implementation compares the current memory load against the absolute and percentage-based memory limits that are set for the cache instance. The default is two minutes.\n  overload: System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.Properties\n  id: Properties\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: MemoryCacheElement.Properties\n  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.Properties\n  type: Property\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.Runtime.Caching.Configuration.MemoryCacheElement.Properties*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.#ctor(System.String)\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: MemoryCacheElement(String)\n  nameWithType: MemoryCacheElement.MemoryCacheElement(String)\n  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.MemoryCacheElement(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: CacheMemoryLimitMegabytes\n  nameWithType: MemoryCacheElement.CacheMemoryLimitMegabytes\n  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.Name\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: Name\n  nameWithType: MemoryCacheElement.Name\n  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.Name\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: PhysicalMemoryLimitPercentage\n  nameWithType: MemoryCacheElement.PhysicalMemoryLimitPercentage\n  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: PollingInterval\n  nameWithType: MemoryCacheElement.PollingInterval\n  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.Properties\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: Properties\n  nameWithType: MemoryCacheElement.Properties\n  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.#ctor*\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: MemoryCacheElement\n  nameWithType: MemoryCacheElement.MemoryCacheElement\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes*\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: CacheMemoryLimitMegabytes\n  nameWithType: MemoryCacheElement.CacheMemoryLimitMegabytes\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.Name*\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: Name\n  nameWithType: MemoryCacheElement.Name\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage*\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: PhysicalMemoryLimitPercentage\n  nameWithType: MemoryCacheElement.PhysicalMemoryLimitPercentage\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval*\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: PollingInterval\n  nameWithType: MemoryCacheElement.PollingInterval\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.Properties*\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: Properties\n  nameWithType: MemoryCacheElement.Properties\n"}