{"nodes":[{"pos":[867,977],"content":"Provides a type converter to convert <xref:System.DateTime> objects to and from various other representations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a type converter to convert &lt;xref:System.DateTime&gt; objects to and from various other representations.","pos":[0,110],"source":"Provides a type converter to convert <xref:System.DateTime> objects to and from various other representations."}]},{"pos":[990,2535],"content":"This converter can only convert a <xref:System.DateTime> object to and from a string.       The <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> method uses the <xref:System.DateTime.Parse%2A> method of the <xref:System.DateTime> class to convert from a string.       The <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> method uses the current culture, if a <xref:System.Globalization.CultureInfo> is not supplied. Generally, <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> uses the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> property to format a date and <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> with the <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> property to format a date and time. If the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property is passed, <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> uses yyyy-mm-dd to format a date and <xref:System.Object.ToString%2A> to format a date and time.       For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  You should never create an instance of DateTimeConverter. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This converter can only convert a &lt;xref:System.DateTime&gt; object to and from a string.","pos":[0,85],"source":"This converter can only convert a <xref:System.DateTime> object to and from a string."},{"content":"The &lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt; method uses the &lt;xref:System.DateTime.Parse%2A&gt; method of the &lt;xref:System.DateTime&gt; class to convert from a string.","pos":[92,270],"source":"       The <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> method uses the <xref:System.DateTime.Parse%2A> method of the <xref:System.DateTime> class to convert from a string."},{"content":"The &lt;xref:System.ComponentModel.TypeConverter.ConvertTo%2A&gt; method uses the current culture, if a &lt;xref:System.Globalization.CultureInfo&gt; is not supplied.","pos":[277,431],"source":"       The <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> method uses the current culture, if a <xref:System.Globalization.CultureInfo> is not supplied."},{"content":"Generally, &lt;xref:System.ComponentModel.TypeConverter.ConvertTo%2A&gt; uses the &lt;xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A&gt; property to format a date and &lt;xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A&gt; with the &lt;xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A&gt; property to format a date and time.","pos":[432,783],"source":" Generally, <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> uses the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> property to format a date and <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> with the <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> property to format a date and time."},{"content":"If the &lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt; property is passed, &lt;xref:System.ComponentModel.TypeConverter.ConvertTo%2A&gt; uses yyyy-mm-dd to format a date and &lt;xref:System.Object.ToString%2A&gt; to format a date and time.","pos":[784,1023],"source":" If the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property is passed, <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> uses yyyy-mm-dd to format a date and <xref:System.Object.ToString%2A> to format a date and time."},{"content":"For more information about type converters, see the &lt;xref:System.ComponentModel.TypeConverter&gt; base class and <bpt id=\"p1\">[</bpt>How to: Implement a Type Converter<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1030,1216],"source":"       For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You should never create an instance of DateTimeConverter.","pos":[1222,1292],"source":"      > [!NOTE] >  You should never create an instance of DateTimeConverter."},{"content":"Instead, call the &lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt; method of the &lt;xref:System.ComponentModel.TypeDescriptor&gt; class.","pos":[1293,1435],"source":" Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class."},{"content":"For more information, see the examples in the &lt;xref:System.ComponentModel.TypeConverter&gt; base class.","pos":[1436,1536],"source":" For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class."}]},{"pos":[6782,6883],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DateTimeConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.DateTimeConverter\"></xref> class."},{"pos":[7635,7785],"content":"Gets a value indicating whether this converter can convert an object in the given source type to a <xref:System.DateTime> using the specified context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this converter can convert an object in the given source type to a &lt;xref:System.DateTime&gt; using the specified context.","pos":[0,150],"source":"Gets a value indicating whether this converter can convert an object in the given source type to a <xref:System.DateTime> using the specified context."}]},{"pos":[7798,8109],"content":"This converter can only convert a <xref:System.DateTime> to and from a string.       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This converter can only convert a &lt;xref:System.DateTime&gt; to and from a string.","pos":[0,78],"source":"This converter can only convert a <xref:System.DateTime> to and from a string."},{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[85,214],"source":"       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[215,251],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[252,309],"source":" Also, properties on the context object can return `null`."}]},{"pos":[8353,8453],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[8518,8589],"content":"A <xref:System.Type> that represents the type you wish to convert from.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type you wish to convert from.","pos":[0,71],"source":"A <xref:System.Type> that represents the type you wish to convert from."}]},{"pos":[8648,8826],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this object can perform the conversion; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this object can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9506,9623],"content":"Gets a value indicating whether this converter can convert an object to the given destination type using the context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this converter can convert an object to the given destination type using the context.","pos":[0,117]}]},{"pos":[9635,9859],"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,129],"source":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[130,166],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[167,224],"source":" Also, properties on the context object can return `null`."}]},{"pos":[10105,10205],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[10275,10344],"content":"A <xref:System.Type> that represents the type you wish to convert to.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type you wish to convert to.","pos":[0,69],"source":"A <xref:System.Type> that represents the type you wish to convert to."}]},{"pos":[10403,10584],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this converter can perform the conversion; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11369,11429],"content":"Converts the given value object to a <xref:System.DateTime>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the given value object to a &lt;xref:System.DateTime&gt;.","pos":[0,60],"source":"Converts the given value object to a <xref:System.DateTime>."}]},{"pos":[11442,11753],"content":"This converter can only convert a <xref:System.DateTime> to and from a string.       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This converter can only convert a &lt;xref:System.DateTime&gt; to and from a string.","pos":[0,78],"source":"This converter can only convert a <xref:System.DateTime> to and from a string."},{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[85,214],"source":"       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[215,251],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[252,309],"source":" Also, properties on the context object can return `null`."}]},{"pos":[12035,12135],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[12218,12319],"content":"An optional <xref:System.Globalization.CultureInfo>. If not supplied, the current culture is assumed.","needQuote":true,"needEscape":true,"nodes":[{"content":"An optional <xref:System.Globalization.CultureInfo>. If not supplied, the current culture is assumed.","pos":[0,101],"nodes":[{"content":"An optional &lt;xref:System.Globalization.CultureInfo&gt;.","pos":[0,52],"source":"An optional <xref:System.Globalization.CultureInfo>."},{"content":"If not supplied, the current culture is assumed.","pos":[53,101]}]}]},{"pos":[12381,12417],"content":"The <xref:System.Object> to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to convert.","pos":[0,36],"source":"The <xref:System.Object> to convert."}]},{"pos":[12475,12548],"content":"An &lt;xref:System.Object&gt; that represents the converted <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Object> that represents the converted <code>value</code>."},{"pos":[12718,12778],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not a valid value for the target type.","needQuote":true,"needEscape":true,"source":"<code>value</code> is not a valid value for the target type."},{"pos":[12881,12916],"content":"The conversion cannot be performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]},{"pos":[13647,13727],"content":"Converts the given value object to a <xref:System.DateTime> using the arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the given value object to a &lt;xref:System.DateTime&gt; using the arguments.","pos":[0,80],"source":"Converts the given value object to a <xref:System.DateTime> using the arguments."}]},{"pos":[13740,14051],"content":"This converter can only convert a <xref:System.DateTime> to and from a string.       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This converter can only convert a &lt;xref:System.DateTime&gt; to and from a string.","pos":[0,78],"source":"This converter can only convert a <xref:System.DateTime> to and from a string."},{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[85,214],"source":"       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[215,251],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[252,309],"source":" Also, properties on the context object can return `null`."}]},{"pos":[14353,14453],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[14536,14637],"content":"An optional <xref:System.Globalization.CultureInfo>. If not supplied, the current culture is assumed.","needQuote":true,"needEscape":true,"nodes":[{"content":"An optional <xref:System.Globalization.CultureInfo>. If not supplied, the current culture is assumed.","pos":[0,101],"nodes":[{"content":"An optional &lt;xref:System.Globalization.CultureInfo&gt;.","pos":[0,52],"source":"An optional <xref:System.Globalization.CultureInfo>."},{"content":"If not supplied, the current culture is assumed.","pos":[53,101]}]}]},{"pos":[14699,14735],"content":"The <xref:System.Object> to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to convert.","pos":[0,36],"source":"The <xref:System.Object> to convert."}]},{"pos":[14805,14852],"content":"The <xref:System.Type> to convert the value to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; to convert the value to.","pos":[0,47],"source":"The <xref:System.Type> to convert the value to."}]},{"pos":[14910,14983],"content":"An &lt;xref:System.Object&gt; that represents the converted <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Object> that represents the converted <code>value</code>."},{"pos":[15163,15198],"content":"The conversion cannot be performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.DateTimeConverter\n  id: DateTimeConverter\n  children:\n  - System.ComponentModel.DateTimeConverter.#ctor\n  - System.ComponentModel.DateTimeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.DateTimeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.DateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.DateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: DateTimeConverter\n  nameWithType: DateTimeConverter\n  fullName: System.ComponentModel.DateTimeConverter\n  type: Class\n  summary: Provides a type converter to convert <xref:System.DateTime> objects to and from various other representations.\n  remarks: \"This converter can only convert a <xref:System.DateTime> object to and from a string.  \\n  \\n The <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> method uses the <xref:System.DateTime.Parse%2A> method of the <xref:System.DateTime> class to convert from a string.  \\n  \\n The <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> method uses the current culture, if a <xref:System.Globalization.CultureInfo> is not supplied. Generally, <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> uses the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> property to format a date and <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> with the <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> property to format a date and time. If the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property is passed, <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> uses yyyy-mm-dd to format a date and <xref:System.Object.ToString%2A> to format a date and time.  \\n  \\n For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  You should never create an instance of DateTimeConverter. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.\"\n  example:\n  - \"The following code example converts a variable of type <xref:System.DateTime> to a string, and vice versa.  \\n  \\n [!code-cs[Converters#9](~/add/codesnippet/csharp/t-system.componentmodel._111_1.cs)]\\n [!code-vb[Converters#9](~/add/codesnippet/visualbasic/t-system.componentmodel._111_1.vb)]\\n [!code-cpp[Converters#9](~/add/codesnippet/cpp/t-system.componentmodel._111_1.cpp)]\"\n  syntax:\n    content: 'public class DateTimeConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  platform:\n  - net462\n- uid: System.ComponentModel.DateTimeConverter.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.DateTimeConverter\n  langs:\n  - csharp\n  name: DateTimeConverter()\n  nameWithType: DateTimeConverter.DateTimeConverter()\n  fullName: System.ComponentModel.DateTimeConverter.DateTimeConverter()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.DateTimeConverter\"></xref> class.\n  syntax:\n    content: public DateTimeConverter ();\n    parameters: []\n  overload: System.ComponentModel.DateTimeConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DateTimeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.DateTimeConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: DateTimeConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.ComponentModel.DateTimeConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this converter can convert an object in the given source type to a <xref:System.DateTime> using the specified context.\n  remarks: \"This converter can only convert a <xref:System.DateTime> to and from a string.  \\n  \\n The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\"\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: sourceType\n      type: System.Type\n      description: A <xref:System.Type> that represents the type you wish to convert from.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this object can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.DateTimeConverter.CanConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DateTimeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.DateTimeConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: DateTimeConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.ComponentModel.DateTimeConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this converter can convert an object to the given destination type using the context.\n  remarks: The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: destinationType\n      type: System.Type\n      description: A <xref:System.Type> that represents the type you wish to convert to.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.DateTimeConverter.CanConvertTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.DateTimeConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: DateTimeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.ComponentModel.DateTimeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Converts the given value object to a <xref:System.DateTime>.\n  remarks: \"This converter can only convert a <xref:System.DateTime> to and from a string.  \\n  \\n The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\"\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: An optional <xref:System.Globalization.CultureInfo>. If not supplied, the current culture is assumed.\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to convert.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that represents the converted <code>value</code>.\n  overload: System.ComponentModel.DateTimeConverter.ConvertFrom*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>value</code> is not a valid value for the target type.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  platform:\n  - net462\n- uid: System.ComponentModel.DateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.DateTimeConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: DateTimeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.ComponentModel.DateTimeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Converts the given value object to a <xref:System.DateTime> using the arguments.\n  remarks: \"This converter can only convert a <xref:System.DateTime> to and from a string.  \\n  \\n The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\"\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: An optional <xref:System.Globalization.CultureInfo>. If not supplied, the current culture is assumed.\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to convert.\n    - id: destinationType\n      type: System.Type\n      description: The <xref:System.Type> to convert the value to.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that represents the converted <code>value</code>.\n  overload: System.ComponentModel.DateTimeConverter.ConvertTo*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.FormatException\n  isExternal: true\n  name: System.FormatException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ComponentModel.DateTimeConverter.#ctor\n  parent: System.ComponentModel.DateTimeConverter\n  isExternal: false\n  name: DateTimeConverter()\n  nameWithType: DateTimeConverter.DateTimeConverter()\n  fullName: System.ComponentModel.DateTimeConverter.DateTimeConverter()\n- uid: System.ComponentModel.DateTimeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.DateTimeConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: DateTimeConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.ComponentModel.DateTimeConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.DateTimeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.DateTimeConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: DateTimeConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.ComponentModel.DateTimeConverter.CanConvertTo(ITypeDescriptorContext,Type)\n- uid: System.ComponentModel.DateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.DateTimeConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: DateTimeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.ComponentModel.DateTimeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.ComponentModel.DateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.DateTimeConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: DateTimeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.ComponentModel.DateTimeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n- uid: System.ComponentModel.DateTimeConverter.#ctor*\n  parent: System.ComponentModel.DateTimeConverter\n  isExternal: false\n  name: DateTimeConverter\n  nameWithType: DateTimeConverter.DateTimeConverter\n- uid: System.ComponentModel.DateTimeConverter.CanConvertFrom*\n  parent: System.ComponentModel.DateTimeConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: DateTimeConverter.CanConvertFrom\n- uid: System.ComponentModel.DateTimeConverter.CanConvertTo*\n  parent: System.ComponentModel.DateTimeConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: DateTimeConverter.CanConvertTo\n- uid: System.ComponentModel.DateTimeConverter.ConvertFrom*\n  parent: System.ComponentModel.DateTimeConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: DateTimeConverter.ConvertFrom\n- uid: System.ComponentModel.DateTimeConverter.ConvertTo*\n  parent: System.ComponentModel.DateTimeConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: DateTimeConverter.ConvertTo\n"}