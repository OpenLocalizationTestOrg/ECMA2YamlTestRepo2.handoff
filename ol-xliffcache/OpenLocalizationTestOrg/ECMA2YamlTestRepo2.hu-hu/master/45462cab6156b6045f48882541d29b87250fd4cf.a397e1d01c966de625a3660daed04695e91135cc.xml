{"nodes":[{"pos":[935,1010],"content":"Specifies the class used to implement design-time services for a component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the class used to implement design-time services for a component.","pos":[0,75]}]},{"pos":[1023,1515],"content":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.       Use the <xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A> property to find the designer's base type. Use the <xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A> property to get the name of the type of designer associated with this member.       For more information, see [Attributes](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The class you use for the design-time services must implement the &lt;xref:System.ComponentModel.Design.IDesigner&gt; interface.","pos":[0,122],"source":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface."},{"content":"Use the &lt;xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A&gt; property to find the designer's base type.","pos":[129,250],"source":"       Use the <xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A> property to find the designer's base type."},{"content":"Use the &lt;xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A&gt; property to get the name of the type of designer associated with this member.","pos":[251,403],"source":" Use the <xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A> property to get the name of the type of designer associated with this member."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[410,488],"source":"       For more information, see [Attributes](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[3471,3634],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DesignerAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the name of the type that provides design-time services.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the name of the type that provides design-time services."},{"pos":[3646,3768],"content":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The class you use for the design-time services must implement the &lt;xref:System.ComponentModel.Design.IDesigner&gt; interface.","pos":[0,122],"source":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface."}]},{"pos":[3932,4121],"content":"The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.","needQuote":true,"needEscape":true,"nodes":[{"content":"The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.","pos":[0,189]}]},{"pos":[4641,4792],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DesignerAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the type that provides design-time services.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the type that provides design-time services."},{"pos":[4804,4926],"content":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The class you use for the design-time services must implement the &lt;xref:System.ComponentModel.Design.IDesigner&gt; interface.","pos":[0,122],"source":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface."}]},{"pos":[5078,5205],"content":"A <xref:System.Type> that represents the class that provides design-time services for the component this attribute is bound to.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the class that provides design-time services for the component this attribute is bound to.","pos":[0,127],"source":"A <xref:System.Type> that represents the class that provides design-time services for the component this attribute is bound to."}]},{"pos":[5784,5945],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DesignerAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the designer type and the base class for the designer.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the designer type and the base class for the designer."},{"pos":[5958,6196],"content":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.       The `designerBaseTypeName` parameter allows you to attach more than one type of designer for a given class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The class you use for the design-time services must implement the &lt;xref:System.ComponentModel.Design.IDesigner&gt; interface.","pos":[0,122],"source":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface."},{"content":"The <ph id=\"ph1\">`designerBaseTypeName`</ph> parameter allows you to attach more than one type of designer for a given class.","pos":[129,236],"source":"       The `designerBaseTypeName` parameter allows you to attach more than one type of designer for a given class."}]},{"pos":[6390,6579],"content":"The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.","needQuote":true,"needEscape":true,"nodes":[{"content":"The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.","pos":[0,189]}]},{"pos":[6656,6736],"content":"The fully qualified name of the base class to associate with the designer class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The fully qualified name of the base class to associate with the designer class.","pos":[0,80]}]},{"pos":[7305,7480],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DesignerAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, using the name of the designer class and the base class for the designer.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class, using the name of the designer class and the base class for the designer."},{"pos":[7493,7727],"content":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.       The `designerBaseType` parameter allows you to attach more than one type of designer for a given class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The class you use for the design-time services must implement the &lt;xref:System.ComponentModel.Design.IDesigner&gt; interface.","pos":[0,122],"source":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface."},{"content":"The <ph id=\"ph1\">`designerBaseType`</ph> parameter allows you to attach more than one type of designer for a given class.","pos":[129,232],"source":"       The `designerBaseType` parameter allows you to attach more than one type of designer for a given class."}]},{"pos":[7915,8104],"content":"The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.","needQuote":true,"needEscape":true,"nodes":[{"content":"The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.","pos":[0,189]}]},{"pos":[8175,8268],"content":"A &lt;xref:System.Type&gt; that represents the base class to associate with the <ph id=\"ph1\">`designerTypeName`</ph>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Type> that represents the base class to associate with the `designerTypeName`."},{"pos":[8827,8984],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DesignerAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the types of the designer and designer base class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the types of the designer and designer base class."},{"pos":[8997,9231],"content":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.       The `designerBaseType` parameter allows you to attach more than one type of designer for a given class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The class you use for the design-time services must implement the &lt;xref:System.ComponentModel.Design.IDesigner&gt; interface.","pos":[0,122],"source":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface."},{"content":"The <ph id=\"ph1\">`designerBaseType`</ph> parameter allows you to attach more than one type of designer for a given class.","pos":[129,232],"source":"       The `designerBaseType` parameter allows you to attach more than one type of designer for a given class."}]},{"pos":[9407,9534],"content":"A <xref:System.Type> that represents the class that provides design-time services for the component this attribute is bound to.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the class that provides design-time services for the component this attribute is bound to.","pos":[0,127],"source":"A <xref:System.Type> that represents the class that provides design-time services for the component this attribute is bound to."}]},{"pos":[9605,9694],"content":"A &lt;xref:System.Type&gt; that represents the base class to associate with the <ph id=\"ph1\">`designerType`</ph>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Type> that represents the base class to associate with the `designerType`."},{"pos":[10204,10252],"content":"Gets the name of the base type of this designer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the base type of this designer.","pos":[0,48]}]},{"pos":[10377,10420],"content":"The name of the base type of this designer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the base type of this designer.","pos":[0,43]}]},{"pos":[10925,11000],"content":"Gets the name of the designer type associated with this designer attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the designer type associated with this designer attribute.","pos":[0,75]}]},{"pos":[11121,11191],"content":"The name of the designer type associated with this designer attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the designer type associated with this designer attribute.","pos":[0,70]}]},{"pos":[11694,11825],"content":"Returns whether the value of the given object is equal to the current <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DesignerAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.DesignerAttribute\"></xref>."},{"pos":[11966,12007],"content":"The object to test the value equality of.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to test the value equality of.","pos":[0,41]}]},{"pos":[12066,12267],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value of the given object is equal to that of the current; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of the given object is equal to that of the current; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12737,12777],"content":"Returns the hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]},{"pos":[12912,12946],"content":"A 32-bit signed integer hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]},{"pos":[13392,13433],"content":"Gets a unique ID for this attribute type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a unique ID for this attribute type.","pos":[0,41]}]},{"pos":[13445,13729],"content":"It is used by filtering algorithms to identify two attributes that are the same type. For most attributes, this just returns the <xref:System.Type> instance for the attribute. <xref:System.ComponentModel.DesignerAttribute> overrides this to include the type of the designer base type.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"It is used by filtering algorithms to identify two attributes that are the same type. For most attributes, this just returns the <xref:System.Type> instance for the attribute. <xref:System.ComponentModel.DesignerAttribute> overrides this to include the type of the designer base type.","pos":[0,284],"nodes":[{"content":"It is used by filtering algorithms to identify two attributes that are the same type.","pos":[0,85]},{"content":"For most attributes, this just returns the &lt;xref:System.Type&gt; instance for the attribute.","pos":[86,175],"source":" For most attributes, this just returns the <xref:System.Type> instance for the attribute."},{"content":"&lt;xref:System.ComponentModel.DesignerAttribute&gt; overrides this to include the type of the designer base type.","pos":[176,284],"source":" <xref:System.ComponentModel.DesignerAttribute> overrides this to include the type of the designer base type."}]}]},{"pos":[13849,13885],"content":"A unique ID for this attribute type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique ID for this attribute type.","pos":[0,36]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.DesignerAttribute\n  id: DesignerAttribute\n  children:\n  - System.ComponentModel.DesignerAttribute.#ctor(System.String)\n  - System.ComponentModel.DesignerAttribute.#ctor(System.Type)\n  - System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)\n  - System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)\n  - System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)\n  - System.ComponentModel.DesignerAttribute.DesignerBaseTypeName\n  - System.ComponentModel.DesignerAttribute.DesignerTypeName\n  - System.ComponentModel.DesignerAttribute.Equals(System.Object)\n  - System.ComponentModel.DesignerAttribute.GetHashCode\n  - System.ComponentModel.DesignerAttribute.TypeId\n  langs:\n  - csharp\n  name: DesignerAttribute\n  nameWithType: DesignerAttribute\n  fullName: System.ComponentModel.DesignerAttribute\n  type: Class\n  summary: Specifies the class used to implement design-time services for a component.\n  remarks: \"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.  \\n  \\n Use the <xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A> property to find the designer's base type. Use the <xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A> property to get the name of the type of designer associated with this member.  \\n  \\n For more information, see [Attributes](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example creates a class called `MyForm`. `MyForm` has two attributes, a DesignerAttribute that specifies this class uses the <xref:System.Windows.Forms.Design.DocumentDesigner>, and a <xref:System.ComponentModel.DesignerCategoryAttribute> that specifies the <xref:System.ComponentModel.DesignerCategoryAttribute.Form> category.  \\n  \\n [!code-cpp[Classic DesignerAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._157_1.cpp)]\\n [!code-vb[Classic DesignerAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._157_1.vb)]\\n [!code-cs[Classic DesignerAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._157_1.cs)]  \\n  \\n The next example creates an instance of `MyForm`. Then it gets the attributes for the class, extracts the DesignerAttribute, and prints the name of the designer.  \\n  \\n [!code-cpp[Classic DesignerAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._157_2.cpp)]\\n [!code-vb[Classic DesignerAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._157_2.vb)]\\n [!code-cs[Classic DesignerAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._157_2.cs)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)]\n\n      public sealed class DesignerAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: DesignerAttribute(String)\n  nameWithType: DesignerAttribute.DesignerAttribute(String)\n  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the name of the type that provides design-time services.\n  remarks: The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.\n  syntax:\n    content: public DesignerAttribute (string designerTypeName);\n    parameters:\n    - id: designerTypeName\n      type: System.String\n      description: The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.\n  overload: System.ComponentModel.DesignerAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: DesignerAttribute(Type)\n  nameWithType: DesignerAttribute.DesignerAttribute(Type)\n  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(Type)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the type that provides design-time services.\n  remarks: The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.\n  syntax:\n    content: public DesignerAttribute (Type designerType);\n    parameters:\n    - id: designerType\n      type: System.Type\n      description: A <xref:System.Type> that represents the class that provides design-time services for the component this attribute is bound to.\n  overload: System.ComponentModel.DesignerAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: DesignerAttribute(String,String)\n  nameWithType: DesignerAttribute.DesignerAttribute(String,String)\n  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String,String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the designer type and the base class for the designer.\n  remarks: \"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.  \\n  \\n The `designerBaseTypeName` parameter allows you to attach more than one type of designer for a given class.\"\n  syntax:\n    content: public DesignerAttribute (string designerTypeName, string designerBaseTypeName);\n    parameters:\n    - id: designerTypeName\n      type: System.String\n      description: The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.\n    - id: designerBaseTypeName\n      type: System.String\n      description: The fully qualified name of the base class to associate with the designer class.\n  overload: System.ComponentModel.DesignerAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)\n  id: '#ctor(System.String,System.Type)'\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: DesignerAttribute(String,Type)\n  nameWithType: DesignerAttribute.DesignerAttribute(String,Type)\n  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String,Type)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class, using the name of the designer class and the base class for the designer.\n  remarks: \"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.  \\n  \\n The `designerBaseType` parameter allows you to attach more than one type of designer for a given class.\"\n  syntax:\n    content: public DesignerAttribute (string designerTypeName, Type designerBaseType);\n    parameters:\n    - id: designerTypeName\n      type: System.String\n      description: The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.\n    - id: designerBaseType\n      type: System.Type\n      description: A <xref:System.Type> that represents the base class to associate with the `designerTypeName`.\n  overload: System.ComponentModel.DesignerAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)\n  id: '#ctor(System.Type,System.Type)'\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: DesignerAttribute(Type,Type)\n  nameWithType: DesignerAttribute.DesignerAttribute(Type,Type)\n  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(Type,Type)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the types of the designer and designer base class.\n  remarks: \"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.  \\n  \\n The `designerBaseType` parameter allows you to attach more than one type of designer for a given class.\"\n  syntax:\n    content: public DesignerAttribute (Type designerType, Type designerBaseType);\n    parameters:\n    - id: designerType\n      type: System.Type\n      description: A <xref:System.Type> that represents the class that provides design-time services for the component this attribute is bound to.\n    - id: designerBaseType\n      type: System.Type\n      description: A <xref:System.Type> that represents the base class to associate with the `designerType`.\n  overload: System.ComponentModel.DesignerAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName\n  id: DesignerBaseTypeName\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: DesignerBaseTypeName\n  nameWithType: DesignerAttribute.DesignerBaseTypeName\n  fullName: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the name of the base type of this designer.\n  syntax:\n    content: public string DesignerBaseTypeName { get; }\n    return:\n      type: System.String\n      description: The name of the base type of this designer.\n  overload: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DesignerAttribute.DesignerTypeName\n  id: DesignerTypeName\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: DesignerTypeName\n  nameWithType: DesignerAttribute.DesignerTypeName\n  fullName: System.ComponentModel.DesignerAttribute.DesignerTypeName\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets the name of the designer type associated with this designer attribute.\n  syntax:\n    content: public string DesignerTypeName { get; }\n    return:\n      type: System.String\n      description: The name of the designer type associated with this designer attribute.\n  overload: System.ComponentModel.DesignerAttribute.DesignerTypeName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DesignerAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: DesignerAttribute.Equals(Object)\n  fullName: System.ComponentModel.DesignerAttribute.Equals(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.DesignerAttribute\"></xref>.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to test the value equality of.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of the given object is equal to that of the current; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.DesignerAttribute.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DesignerAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: DesignerAttribute.GetHashCode()\n  fullName: System.ComponentModel.DesignerAttribute.GetHashCode()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.ComponentModel.DesignerAttribute.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DesignerAttribute.TypeId\n  id: TypeId\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: TypeId\n  nameWithType: DesignerAttribute.TypeId\n  fullName: System.ComponentModel.DesignerAttribute.TypeId\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a unique ID for this attribute type.\n  remarks: It is used by filtering algorithms to identify two attributes that are the same type. For most attributes, this just returns the <xref:System.Type> instance for the attribute. <xref:System.ComponentModel.DesignerAttribute> overrides this to include the type of the designer base type.\n  syntax:\n    content: public override object TypeId { get; }\n    return:\n      type: System.Object\n      description: A unique ID for this attribute type.\n  overload: System.ComponentModel.DesignerAttribute.TypeId*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String)\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerAttribute(String)\n  nameWithType: DesignerAttribute.DesignerAttribute(String)\n  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type)\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerAttribute(Type)\n  nameWithType: DesignerAttribute.DesignerAttribute(Type)\n  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerAttribute(String,String)\n  nameWithType: DesignerAttribute.DesignerAttribute(String,String)\n  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String,String)\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerAttribute(String,Type)\n  nameWithType: DesignerAttribute.DesignerAttribute(String,Type)\n  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String,Type)\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerAttribute(Type,Type)\n  nameWithType: DesignerAttribute.DesignerAttribute(Type,Type)\n  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(Type,Type)\n- uid: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerBaseTypeName\n  nameWithType: DesignerAttribute.DesignerBaseTypeName\n  fullName: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName\n- uid: System.ComponentModel.DesignerAttribute.DesignerTypeName\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerTypeName\n  nameWithType: DesignerAttribute.DesignerTypeName\n  fullName: System.ComponentModel.DesignerAttribute.DesignerTypeName\n- uid: System.ComponentModel.DesignerAttribute.Equals(System.Object)\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DesignerAttribute.Equals(Object)\n  fullName: System.ComponentModel.DesignerAttribute.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.DesignerAttribute.GetHashCode\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DesignerAttribute.GetHashCode()\n  fullName: System.ComponentModel.DesignerAttribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.DesignerAttribute.TypeId\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: DesignerAttribute.TypeId\n  fullName: System.ComponentModel.DesignerAttribute.TypeId\n- uid: System.ComponentModel.DesignerAttribute.#ctor*\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerAttribute\n  nameWithType: DesignerAttribute.DesignerAttribute\n- uid: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName*\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerBaseTypeName\n  nameWithType: DesignerAttribute.DesignerBaseTypeName\n- uid: System.ComponentModel.DesignerAttribute.DesignerTypeName*\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerTypeName\n  nameWithType: DesignerAttribute.DesignerTypeName\n- uid: System.ComponentModel.DesignerAttribute.Equals*\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: Equals\n  nameWithType: DesignerAttribute.Equals\n- uid: System.ComponentModel.DesignerAttribute.GetHashCode*\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: GetHashCode\n  nameWithType: DesignerAttribute.GetHashCode\n- uid: System.ComponentModel.DesignerAttribute.TypeId*\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: DesignerAttribute.TypeId\n"}