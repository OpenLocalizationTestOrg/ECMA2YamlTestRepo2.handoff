{"nodes":[{"pos":[1245,1465],"content":"Provides the methods needed to substitute one type for another by the <xref:System.Runtime.Serialization.DataContractSerializer> during serialization, deserialization, and export and import of XML schema documents (XSD).","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the methods needed to substitute one type for another by the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt; during serialization, deserialization, and export and import of XML schema documents (XSD).","pos":[0,220],"source":"Provides the methods needed to substitute one type for another by the <xref:System.Runtime.Serialization.DataContractSerializer> during serialization, deserialization, and export and import of XML schema documents (XSD)."}]},{"pos":[1478,3091],"content":"Use the IDataContractSurrogate when using the <xref:System.Runtime.Serialization.DataContractSerializer> if you need to do one of the following: substitute one type or object for another, or to dynamically generate schema variations. For a sample application, see [DataContract Surrogate](~/add/includes/ajax-current-ext-md.md). For more information about data contracts, see [Using Data Contracts](~/add/includes/ajax-current-ext-md.md).       At run time, you can find the specific <xref:System.Runtime.Serialization.DataContractSerializer> for any operation in a service by using the <xref:System.ServiceModel.Description.OperationDescription> to find the <xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior> instance. For more information about implementing the interface to create a surrogate, see [Data Contract Surrogates](~/add/includes/ajax-current-ext-md.md).       You can also use the IDataContractSurrogate to affect the import and export of XML schemas when you are using the <xref:System.Runtime.Serialization.XsdDataContractExporter> and <xref:System.Runtime.Serialization.XsdDataContractImporter> classes. You can do so by assigning the IDataContractSurrogate to the <xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A> property of the <xref:System.Runtime.Serialization.ExportOptions> class, or to the <xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A> property of the <xref:System.Runtime.Serialization.ImportOptions> class.  For more information, see [Schema Import and Export](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the IDataContractSurrogate when using the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt; if you need to do one of the following: substitute one type or object for another, or to dynamically generate schema variations.","pos":[0,233],"source":"Use the IDataContractSurrogate when using the <xref:System.Runtime.Serialization.DataContractSerializer> if you need to do one of the following: substitute one type or object for another, or to dynamically generate schema variations."},{"content":"For a sample application, see <bpt id=\"p1\">[</bpt>DataContract Surrogate<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[234,328],"source":" For a sample application, see [DataContract Surrogate](~/add/includes/ajax-current-ext-md.md)."},{"content":"For more information about data contracts, see <bpt id=\"p1\">[</bpt>Using Data Contracts<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[329,438],"source":" For more information about data contracts, see [Using Data Contracts](~/add/includes/ajax-current-ext-md.md)."},{"content":"At run time, you can find the specific &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt; for any operation in a service by using the &lt;xref:System.ServiceModel.Description.OperationDescription&gt; to find the &lt;xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior&gt; instance.","pos":[445,747],"source":"       At run time, you can find the specific <xref:System.Runtime.Serialization.DataContractSerializer> for any operation in a service by using the <xref:System.ServiceModel.Description.OperationDescription> to find the <xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior> instance."},{"content":"For more information about implementing the interface to create a surrogate, see <bpt id=\"p1\">[</bpt>Data Contract Surrogates<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[748,895],"source":" For more information about implementing the interface to create a surrogate, see [Data Contract Surrogates](~/add/includes/ajax-current-ext-md.md)."},{"content":"You can also use the IDataContractSurrogate to affect the import and export of XML schemas when you are using the &lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt; and &lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt; classes.","pos":[902,1148],"source":"       You can also use the IDataContractSurrogate to affect the import and export of XML schemas when you are using the <xref:System.Runtime.Serialization.XsdDataContractExporter> and <xref:System.Runtime.Serialization.XsdDataContractImporter> classes."},{"content":"You can do so by assigning the IDataContractSurrogate to the &lt;xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A&gt; property of the &lt;xref:System.Runtime.Serialization.ExportOptions&gt; class, or to the &lt;xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A&gt; property of the &lt;xref:System.Runtime.Serialization.ImportOptions&gt; class.","pos":[1149,1515],"source":" You can do so by assigning the IDataContractSurrogate to the <xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A> property of the <xref:System.Runtime.Serialization.ExportOptions> class, or to the <xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A> property of the <xref:System.Runtime.Serialization.ImportOptions> class."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Schema Import and Export<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1517,1609],"source":"  For more information, see [Schema Import and Export](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[4215,4311],"content":"During schema export operations, inserts annotations into the schema for non-null return values.","needQuote":true,"needEscape":true,"nodes":[{"content":"During schema export operations, inserts annotations into the schema for non-null return values.","pos":[0,96]}]},{"pos":[4534,4598],"content":"A <xref:System.Reflection.MemberInfo> that describes the member.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Reflection.MemberInfo&gt; that describes the member.","pos":[0,64],"source":"A <xref:System.Reflection.MemberInfo> that describes the member."}]},{"pos":[4669,4690],"content":"A <xref:System.Type>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt;.","pos":[0,21],"source":"A <xref:System.Type>."}]},{"pos":[4748,4835],"content":"An object that represents the annotation to be inserted into the XML schema definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that represents the annotation to be inserted into the XML schema definition.","pos":[0,87]}]},{"pos":[5529,5625],"content":"During schema export operations, inserts annotations into the schema for non-null return values.","needQuote":true,"needEscape":true,"nodes":[{"content":"During schema export operations, inserts annotations into the schema for non-null return values.","pos":[0,96]}]},{"pos":[5801,5829],"content":"The CLR type to be replaced.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CLR type to be replaced.","pos":[0,28]}]},{"pos":[5900,5939],"content":"The data contract type to be annotated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data contract type to be annotated.","pos":[0,39]}]},{"pos":[5997,6084],"content":"An object that represents the annotation to be inserted into the XML schema definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that represents the annotation to be inserted into the XML schema definition.","pos":[0,87]}]},{"pos":[6729,6863],"content":"During serialization, deserialization, and schema import and export, returns a data contract type that substitutes the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"During serialization, deserialization, and schema import and export, returns a data contract type that substitutes the specified type.","pos":[0,134]}]},{"pos":[7319,7365],"content":"The CLR type <xref:System.Type> to substitute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CLR type &lt;xref:System.Type&gt; to substitute.","pos":[0,46],"source":"The CLR type <xref:System.Type> to substitute."}]},{"pos":[7421,7748],"content":"The <xref:System.Type> to substitute for the <code>type</code> value. This type must be serializable by the <xref:System.Runtime.Serialization.DataContractSerializer>. For example, it must be marked with the <xref:System.Runtime.Serialization.DataContractAttribute> attribute or other mechanisms that the serializer recognizes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; to substitute for the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> value.","pos":[0,69],"source":"The <xref:System.Type> to substitute for the <code>type</code> value."},{"content":"This type must be serializable by the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;.","pos":[70,167],"source":" This type must be serializable by the <xref:System.Runtime.Serialization.DataContractSerializer>."},{"content":"For example, it must be marked with the &lt;xref:System.Runtime.Serialization.DataContractAttribute&gt; attribute or other mechanisms that the serializer recognizes.","pos":[168,327],"source":" For example, it must be marked with the <xref:System.Runtime.Serialization.DataContractAttribute> attribute or other mechanisms that the serializer recognizes."}]},{"pos":[8450,8538],"content":"During deserialization, returns an object that is a substitute for the specified object.","needQuote":true,"needEscape":true,"nodes":[{"content":"During deserialization, returns an object that is a substitute for the specified object.","pos":[0,88]}]},{"pos":[8550,8815],"content":"In a simple implementation, use an if…then…else control structure to test whether the `obj` value is of the surrogated type. If so, transform it as necessary and return the substituted object. The substituted object can be a new instance or the same `obj` instance.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"In a simple implementation, use an if…then…else control structure to test whether the <ph id=\"ph1\">`obj`</ph> value is of the surrogated type.","pos":[0,124],"source":"In a simple implementation, use an if…then…else control structure to test whether the `obj` value is of the surrogated type."},{"content":"If so, transform it as necessary and return the substituted object.","pos":[125,192]},{"content":"The substituted object can be a new instance or the same <ph id=\"ph1\">`obj`</ph> instance.","pos":[193,265],"source":" The substituted object can be a new instance or the same `obj` instance."}]},{"pos":[9282,9324],"content":"The deserialized object to be substituted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The deserialized object to be substituted.","pos":[0,42]}]},{"pos":[9389,9462],"content":"The <xref:System.Type> that the substituted object should be assigned to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; that the substituted object should be assigned to.","pos":[0,73],"source":"The <xref:System.Type> that the substituted object should be assigned to."}]},{"pos":[9520,9834],"content":"The substituted deserialized object. This object must be of a type that is serializable by the <xref:System.Runtime.Serialization.DataContractSerializer>. For example, it must be marked with the <xref:System.Runtime.Serialization.DataContractAttribute> attribute or other mechanisms that the serializer recognizes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The substituted deserialized object. This object must be of a type that is serializable by the <xref:System.Runtime.Serialization.DataContractSerializer>. For example, it must be marked with the <xref:System.Runtime.Serialization.DataContractAttribute> attribute or other mechanisms that the serializer recognizes.","pos":[0,314],"nodes":[{"content":"The substituted deserialized object.","pos":[0,36]},{"content":"This object must be of a type that is serializable by the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;.","pos":[37,154],"source":" This object must be of a type that is serializable by the <xref:System.Runtime.Serialization.DataContractSerializer>."},{"content":"For example, it must be marked with the &lt;xref:System.Runtime.Serialization.DataContractAttribute&gt; attribute or other mechanisms that the serializer recognizes.","pos":[155,314],"source":" For example, it must be marked with the <xref:System.Runtime.Serialization.DataContractAttribute> attribute or other mechanisms that the serializer recognizes."}]}]},{"pos":[10621,10728],"content":"Sets the collection of known types to use for serialization and deserialization of the custom data objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the collection of known types to use for serialization and deserialization of the custom data objects.","pos":[0,107]}]},{"pos":[10740,10952],"content":"This method is required during schema export or schema import only if annotations are inserted into the schema using the <xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is required during schema export or schema import only if annotations are inserted into the schema using the &lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A&gt; method.","pos":[0,212],"source":"This method is required during schema export or schema import only if annotations are inserted into the schema using the <xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A> method."}]},{"pos":[11207,11312],"content":"A &lt;xref:System.Collections.ObjectModel.Collection%601&gt; of <xref:System.Type> to add known types to.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id=\"ph2\">&amp;gt;</ph> of &lt;xref:System.Type&gt; to add known types to.","pos":[0,105],"source":"A &lt;xref:System.Collections.ObjectModel.Collection%601&gt; of <xref:System.Type> to add known types to."}]},{"pos":[12013,12091],"content":"During serialization, returns an object that substitutes the specified object.","needQuote":true,"needEscape":true,"nodes":[{"content":"During serialization, returns an object that substitutes the specified object.","pos":[0,78]}]},{"pos":[12103,12268],"content":"This method must not return <ph id=\"ph1\">`null`</ph> because on deserialization the data will be cast to type &lt;xref:System.Object&gt; and an &lt;xref:System.InvalidCastException&gt; is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This method must not return `null` because on deserialization the data will be cast to type <xref:System.Object> and an <xref:System.InvalidCastException> is thrown."},{"pos":[12733,12758],"content":"The object to substitute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to substitute.","pos":[0,25]}]},{"pos":[12823,12896],"content":"The <xref:System.Type> that the substituted object should be assigned to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; that the substituted object should be assigned to.","pos":[0,73],"source":"The <xref:System.Type> that the substituted object should be assigned to."}]},{"pos":[12954,13260],"content":"The substituted object that will be serialized. The object must be serializable by the <xref:System.Runtime.Serialization.DataContractSerializer>. For example, it must be marked with the <xref:System.Runtime.Serialization.DataContractAttribute> attribute or other mechanisms that the serializer recognizes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The substituted object that will be serialized. The object must be serializable by the <xref:System.Runtime.Serialization.DataContractSerializer>. For example, it must be marked with the <xref:System.Runtime.Serialization.DataContractAttribute> attribute or other mechanisms that the serializer recognizes.","pos":[0,306],"nodes":[{"content":"The substituted object that will be serialized.","pos":[0,47]},{"content":"The object must be serializable by the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;.","pos":[48,146],"source":" The object must be serializable by the <xref:System.Runtime.Serialization.DataContractSerializer>."},{"content":"For example, it must be marked with the &lt;xref:System.Runtime.Serialization.DataContractAttribute&gt; attribute or other mechanisms that the serializer recognizes.","pos":[147,306],"source":" For example, it must be marked with the <xref:System.Runtime.Serialization.DataContractAttribute> attribute or other mechanisms that the serializer recognizes."}]}]},{"pos":[14042,14106],"content":"During schema import, returns the type referenced by the schema.","needQuote":true,"needEscape":true,"nodes":[{"content":"During schema import, returns the type referenced by the schema.","pos":[0,64]}]},{"pos":[14119,14272],"content":"`Null` should be returned if a CLR type does not exist for representing the schema type. This will cause a new type to be generated during schema import.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">`Null`</ph> should be returned if a CLR type does not exist for representing the schema type.","pos":[0,88],"source":"`Null` should be returned if a CLR type does not exist for representing the schema type."},{"content":"This will cause a new type to be generated during schema import.","pos":[89,153]}]},{"pos":[14780,14811],"content":"The name of the type in schema.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type in schema.","pos":[0,31]}]},{"pos":[14881,14917],"content":"The namespace of the type in schema.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace of the type in schema.","pos":[0,36]}]},{"pos":[14984,15130],"content":"The object that represents the annotation inserted into the XML schema definition, which is data that can be used for finding the referenced type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that represents the annotation inserted into the XML schema definition, which is data that can be used for finding the referenced type.","pos":[0,146]}]},{"pos":[15186,15240],"content":"The <xref:System.Type> to use for the referenced type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; to use for the referenced type.","pos":[0,54],"source":"The <xref:System.Type> to use for the referenced type."}]},{"pos":[16090,16158],"content":"Processes the type that has been generated from the imported schema.","needQuote":true,"needEscape":true,"nodes":[{"content":"Processes the type that has been generated from the imported schema.","pos":[0,68]}]},{"pos":[16170,16507],"content":"The input <xref:System.CodeDom.CodeTypeDeclaration> or other information in the <xref:System.CodeDom.CodeCompileUnit> can be modified by the user in this method. If `null` is returned, it will cause the type to not be generated. If a new <xref:System.CodeDom.CodeTypeDeclaration> is returned, it will replace the original type generated.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The input &lt;xref:System.CodeDom.CodeTypeDeclaration&gt; or other information in the &lt;xref:System.CodeDom.CodeCompileUnit&gt; can be modified by the user in this method.","pos":[0,161],"source":"The input <xref:System.CodeDom.CodeTypeDeclaration> or other information in the <xref:System.CodeDom.CodeCompileUnit> can be modified by the user in this method."},{"content":"If <ph id=\"ph1\">`null`</ph> is returned, it will cause the type to not be generated.","pos":[162,228],"source":" If `null` is returned, it will cause the type to not be generated."},{"content":"If a new &lt;xref:System.CodeDom.CodeTypeDeclaration&gt; is returned, it will replace the original type generated.","pos":[229,337],"source":" If a new <xref:System.CodeDom.CodeTypeDeclaration> is returned, it will replace the original type generated."}]},{"pos":[16799,16936],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeTypeDeclaration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to process that represents the type declaration generated during schema import.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeTypeDeclaration\"></xref> to process that represents the type declaration generated during schema import."},{"pos":[17021,17137],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeCompileUnit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the other code generated during schema import.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> that contains the other code generated during schema import."},{"pos":[17216,17307],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeTypeDeclaration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the processed type.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeTypeDeclaration\"></xref> that contains the processed type."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Serialization.IDataContractSurrogate\n  id: IDataContractSurrogate\n  children:\n  - System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)\n  - System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)\n  - System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)\n  - System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)\n  - System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})\n  - System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)\n  - System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)\n  - System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)\n  langs:\n  - csharp\n  name: IDataContractSurrogate\n  nameWithType: IDataContractSurrogate\n  fullName: System.Runtime.Serialization.IDataContractSurrogate\n  type: Interface\n  summary: Provides the methods needed to substitute one type for another by the <xref:System.Runtime.Serialization.DataContractSerializer> during serialization, deserialization, and export and import of XML schema documents (XSD).\n  remarks: \"Use the IDataContractSurrogate when using the <xref:System.Runtime.Serialization.DataContractSerializer> if you need to do one of the following: substitute one type or object for another, or to dynamically generate schema variations. For a sample application, see [DataContract Surrogate](~/add/includes/ajax-current-ext-md.md). For more information about data contracts, see [Using Data Contracts](~/add/includes/ajax-current-ext-md.md).  \\n  \\n At run time, you can find the specific <xref:System.Runtime.Serialization.DataContractSerializer> for any operation in a service by using the <xref:System.ServiceModel.Description.OperationDescription> to find the <xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior> instance. For more information about implementing the interface to create a surrogate, see [Data Contract Surrogates](~/add/includes/ajax-current-ext-md.md).  \\n  \\n You can also use the IDataContractSurrogate to affect the import and export of XML schemas when you are using the <xref:System.Runtime.Serialization.XsdDataContractExporter> and <xref:System.Runtime.Serialization.XsdDataContractImporter> classes. You can do so by assigning the IDataContractSurrogate to the <xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A> property of the <xref:System.Runtime.Serialization.ExportOptions> class, or to the <xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A> property of the <xref:System.Runtime.Serialization.ImportOptions> class.  For more information, see [Schema Import and Export](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example shows an implementation of the IDataContractSurrogate interface. The code substitutes the serialization of the `Person` type for a `PersonSurrogated` class.  \\n  \\n [!code-vb[IDataContractSurrogate#0](~/add/codesnippet/visualbasic/t-system.runtime.seriali_6_1.vb)]\\n [!code-cs[IDataContractSurrogate#0](~/add/codesnippet/csharp/t-system.runtime.seriali_6_1.cs)]\"\n  syntax:\n    content: public interface IDataContractSurrogate\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)\n  id: GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  langs:\n  - csharp\n  name: GetCustomDataToExport(MemberInfo,Type)\n  nameWithType: IDataContractSurrogate.GetCustomDataToExport(MemberInfo,Type)\n  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(MemberInfo,Type)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: During schema export operations, inserts annotations into the schema for non-null return values.\n  syntax:\n    content: public object GetCustomDataToExport (System.Reflection.MemberInfo memberInfo, Type dataContractType);\n    parameters:\n    - id: memberInfo\n      type: System.Reflection.MemberInfo\n      description: A <xref:System.Reflection.MemberInfo> that describes the member.\n    - id: dataContractType\n      type: System.Type\n      description: A <xref:System.Type>.\n    return:\n      type: System.Object\n      description: An object that represents the annotation to be inserted into the XML schema definition.\n  overload: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)\n  id: GetCustomDataToExport(System.Type,System.Type)\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  langs:\n  - csharp\n  name: GetCustomDataToExport(Type,Type)\n  nameWithType: IDataContractSurrogate.GetCustomDataToExport(Type,Type)\n  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(Type,Type)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: During schema export operations, inserts annotations into the schema for non-null return values.\n  syntax:\n    content: public object GetCustomDataToExport (Type clrType, Type dataContractType);\n    parameters:\n    - id: clrType\n      type: System.Type\n      description: The CLR type to be replaced.\n    - id: dataContractType\n      type: System.Type\n      description: The data contract type to be annotated.\n    return:\n      type: System.Object\n      description: An object that represents the annotation to be inserted into the XML schema definition.\n  overload: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)\n  id: GetDataContractType(System.Type)\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  langs:\n  - csharp\n  name: GetDataContractType(Type)\n  nameWithType: IDataContractSurrogate.GetDataContractType(Type)\n  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(Type)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: During serialization, deserialization, and schema import and export, returns a data contract type that substitutes the specified type.\n  remarks: ''\n  example:\n  - \"The following example shows an implementation of the GetDataContractType method.  \\n  \\n [!code-vb[IDataContractSurrogate#1](~/add/codesnippet/visualbasic/90968a41-34e3-48fc-8e53-_1.vb)]\\n [!code-cs[IDataContractSurrogate#1](~/add/codesnippet/csharp/90968a41-34e3-48fc-8e53-_1.cs)]\"\n  syntax:\n    content: public Type GetDataContractType (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The CLR type <xref:System.Type> to substitute.\n    return:\n      type: System.Type\n      description: The <xref:System.Type> to substitute for the <code>type</code> value. This type must be serializable by the <xref:System.Runtime.Serialization.DataContractSerializer>. For example, it must be marked with the <xref:System.Runtime.Serialization.DataContractAttribute> attribute or other mechanisms that the serializer recognizes.\n  overload: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)\n  id: GetDeserializedObject(System.Object,System.Type)\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  langs:\n  - csharp\n  name: GetDeserializedObject(Object,Type)\n  nameWithType: IDataContractSurrogate.GetDeserializedObject(Object,Type)\n  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(Object,Type)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: During deserialization, returns an object that is a substitute for the specified object.\n  remarks: In a simple implementation, use an if…then…else control structure to test whether the `obj` value is of the surrogated type. If so, transform it as necessary and return the substituted object. The substituted object can be a new instance or the same `obj` instance.\n  example:\n  - \"The following example shows an implementation of the GetDeserializedObject method.  \\n  \\n [!code-vb[IDataContractSurrogate#3](~/add/codesnippet/visualbasic/98dab246-6ee5-4fc3-8a64-_1.vb)]\\n [!code-cs[IDataContractSurrogate#3](~/add/codesnippet/csharp/98dab246-6ee5-4fc3-8a64-_1.cs)]\"\n  syntax:\n    content: public object GetDeserializedObject (object obj, Type targetType);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The deserialized object to be substituted.\n    - id: targetType\n      type: System.Type\n      description: The <xref:System.Type> that the substituted object should be assigned to.\n    return:\n      type: System.Object\n      description: The substituted deserialized object. This object must be of a type that is serializable by the <xref:System.Runtime.Serialization.DataContractSerializer>. For example, it must be marked with the <xref:System.Runtime.Serialization.DataContractAttribute> attribute or other mechanisms that the serializer recognizes.\n  overload: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})\n  id: GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  langs:\n  - csharp\n  name: GetKnownCustomDataTypes(Collection<Type>)\n  nameWithType: IDataContractSurrogate.GetKnownCustomDataTypes(Collection<Type>)\n  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(Collection<Type>)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: Sets the collection of known types to use for serialization and deserialization of the custom data objects.\n  remarks: This method is required during schema export or schema import only if annotations are inserted into the schema using the <xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A> method.\n  syntax:\n    content: public void GetKnownCustomDataTypes (System.Collections.ObjectModel.Collection<Type> customDataTypes);\n    parameters:\n    - id: customDataTypes\n      type: System.Collections.ObjectModel.Collection{System.Type}\n      description: A &lt;xref:System.Collections.ObjectModel.Collection%601&gt; of <xref:System.Type> to add known types to.\n  overload: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)\n  id: GetObjectToSerialize(System.Object,System.Type)\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  langs:\n  - csharp\n  name: GetObjectToSerialize(Object,Type)\n  nameWithType: IDataContractSurrogate.GetObjectToSerialize(Object,Type)\n  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(Object,Type)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: During serialization, returns an object that substitutes the specified object.\n  remarks: This method must not return `null` because on deserialization the data will be cast to type <xref:System.Object> and an <xref:System.InvalidCastException> is thrown.\n  example:\n  - \"The following example shows an implementation of the GetObjectToSerialize method.  \\n  \\n [!code-vb[IDataContractSurrogate#2](~/add/codesnippet/visualbasic/5c78fc6a-caaf-4bc0-ab0d-_1.vb)]\\n [!code-cs[IDataContractSurrogate#2](~/add/codesnippet/csharp/5c78fc6a-caaf-4bc0-ab0d-_1.cs)]\"\n  syntax:\n    content: public object GetObjectToSerialize (object obj, Type targetType);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to substitute.\n    - id: targetType\n      type: System.Type\n      description: The <xref:System.Type> that the substituted object should be assigned to.\n    return:\n      type: System.Object\n      description: The substituted object that will be serialized. The object must be serializable by the <xref:System.Runtime.Serialization.DataContractSerializer>. For example, it must be marked with the <xref:System.Runtime.Serialization.DataContractAttribute> attribute or other mechanisms that the serializer recognizes.\n  overload: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)\n  id: GetReferencedTypeOnImport(System.String,System.String,System.Object)\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  langs:\n  - csharp\n  name: GetReferencedTypeOnImport(String,String,Object)\n  nameWithType: IDataContractSurrogate.GetReferencedTypeOnImport(String,String,Object)\n  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(String,String,Object)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: During schema import, returns the type referenced by the schema.\n  remarks: '`Null` should be returned if a CLR type does not exist for representing the schema type. This will cause a new type to be generated during schema import.'\n  example:\n  - \"The following example shows an implementation of the GetReferencedTypeOnImport method.  \\n  \\n [!code-vb[IDataContractSurrogate#4](~/add/codesnippet/visualbasic/9ffa3127-8c36-42f6-862b-_1.vb)]\\n [!code-cs[IDataContractSurrogate#4](~/add/codesnippet/csharp/9ffa3127-8c36-42f6-862b-_1.cs)]\"\n  syntax:\n    content: public Type GetReferencedTypeOnImport (string typeName, string typeNamespace, object customData);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The name of the type in schema.\n    - id: typeNamespace\n      type: System.String\n      description: The namespace of the type in schema.\n    - id: customData\n      type: System.Object\n      description: The object that represents the annotation inserted into the XML schema definition, which is data that can be used for finding the referenced type.\n    return:\n      type: System.Type\n      description: The <xref:System.Type> to use for the referenced type.\n  overload: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)\n  id: ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  langs:\n  - csharp\n  name: ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)\n  nameWithType: IDataContractSurrogate.ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)\n  fullName: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: Processes the type that has been generated from the imported schema.\n  remarks: The input <xref:System.CodeDom.CodeTypeDeclaration> or other information in the <xref:System.CodeDom.CodeCompileUnit> can be modified by the user in this method. If `null` is returned, it will cause the type to not be generated. If a new <xref:System.CodeDom.CodeTypeDeclaration> is returned, it will replace the original type generated.\n  syntax:\n    content: public System.CodeDom.CodeTypeDeclaration ProcessImportedType (System.CodeDom.CodeTypeDeclaration typeDeclaration, System.CodeDom.CodeCompileUnit compileUnit);\n    parameters:\n    - id: typeDeclaration\n      type: System.CodeDom.CodeTypeDeclaration\n      description: A <xref href=\"System.CodeDom.CodeTypeDeclaration\"></xref> to process that represents the type declaration generated during schema import.\n    - id: compileUnit\n      type: System.CodeDom.CodeCompileUnit\n      description: The <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> that contains the other code generated during schema import.\n    return:\n      type: System.CodeDom.CodeTypeDeclaration\n      description: A <xref href=\"System.CodeDom.CodeTypeDeclaration\"></xref> that contains the processed type.\n  overload: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  isExternal: false\n  name: GetCustomDataToExport(MemberInfo,Type)\n  nameWithType: IDataContractSurrogate.GetCustomDataToExport(MemberInfo,Type)\n  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(MemberInfo,Type)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: true\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  isExternal: false\n  name: GetCustomDataToExport(Type,Type)\n  nameWithType: IDataContractSurrogate.GetCustomDataToExport(Type,Type)\n  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(Type,Type)\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  isExternal: false\n  name: GetDataContractType(Type)\n  nameWithType: IDataContractSurrogate.GetDataContractType(Type)\n  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(Type)\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  isExternal: false\n  name: GetDeserializedObject(Object,Type)\n  nameWithType: IDataContractSurrogate.GetDeserializedObject(Object,Type)\n  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(Object,Type)\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  isExternal: false\n  name: GetKnownCustomDataTypes(Collection<Type>)\n  nameWithType: IDataContractSurrogate.GetKnownCustomDataTypes(Collection<Type>)\n  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(Collection<Type>)\n- uid: System.Collections.ObjectModel.Collection{System.Type}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<Type>\n  nameWithType: Collection<Type>\n  fullName: System.Collections.ObjectModel.Collection<System.Type>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Type>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  isExternal: false\n  name: GetObjectToSerialize(Object,Type)\n  nameWithType: IDataContractSurrogate.GetObjectToSerialize(Object,Type)\n  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(Object,Type)\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  isExternal: false\n  name: GetReferencedTypeOnImport(String,String,Object)\n  nameWithType: IDataContractSurrogate.GetReferencedTypeOnImport(String,String,Object)\n  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(String,String,Object)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  isExternal: false\n  name: ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)\n  nameWithType: IDataContractSurrogate.ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)\n  fullName: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)\n- uid: System.CodeDom.CodeTypeDeclaration\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeDeclaration\n  nameWithType: CodeTypeDeclaration\n  fullName: System.CodeDom.CodeTypeDeclaration\n- uid: System.CodeDom.CodeCompileUnit\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeCompileUnit\n  nameWithType: CodeCompileUnit\n  fullName: System.CodeDom.CodeCompileUnit\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport*\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  isExternal: false\n  name: GetCustomDataToExport\n  nameWithType: IDataContractSurrogate.GetCustomDataToExport\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType*\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  isExternal: false\n  name: GetDataContractType\n  nameWithType: IDataContractSurrogate.GetDataContractType\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject*\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  isExternal: false\n  name: GetDeserializedObject\n  nameWithType: IDataContractSurrogate.GetDeserializedObject\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes*\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  isExternal: false\n  name: GetKnownCustomDataTypes\n  nameWithType: IDataContractSurrogate.GetKnownCustomDataTypes\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize*\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  isExternal: false\n  name: GetObjectToSerialize\n  nameWithType: IDataContractSurrogate.GetObjectToSerialize\n- uid: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport*\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  isExternal: false\n  name: GetReferencedTypeOnImport\n  nameWithType: IDataContractSurrogate.GetReferencedTypeOnImport\n- uid: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType*\n  parent: System.Runtime.Serialization.IDataContractSurrogate\n  isExternal: false\n  name: ProcessImportedType\n  nameWithType: IDataContractSurrogate.ProcessImportedType\n"}