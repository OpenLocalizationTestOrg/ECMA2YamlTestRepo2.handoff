{"nodes":[{"pos":[872,1023],"content":"Provides a collection of <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.HttpContent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that get serialized using the multipart/* content type specification.","needQuote":true,"needEscape":true,"source":"Provides a collection of <xref href=\"System.Net.Http.HttpContent\"></xref> objects that get serialized using the multipart/* content type specification."},{"pos":[2296,2386],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.MultipartContent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Net.Http.MultipartContent\"></xref> class."},{"pos":[2957,3047],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.MultipartContent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Net.Http.MultipartContent\"></xref> class."},{"pos":[3192,3229],"content":"The subtype of the multipart content.","needQuote":true,"needEscape":true,"nodes":[{"content":"The subtype of the multipart content.","pos":[0,37]}]},{"pos":[3390,3520],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">subtype</ph><ept id=\"p1\">&lt;/code&gt;</ept> was <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or contains only white space characters.","needQuote":true,"needEscape":true,"source":"The <code>subtype</code> was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or contains only white space characters."},{"pos":[4001,4091],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.MultipartContent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Net.Http.MultipartContent\"></xref> class."},{"pos":[4253,4290],"content":"The subtype of the multipart content.","needQuote":true,"needEscape":true,"nodes":[{"content":"The subtype of the multipart content.","pos":[0,37]}]},{"pos":[4355,4401],"content":"The boundary string for the multipart content.","needQuote":true,"needEscape":true,"nodes":[{"content":"The boundary string for the multipart content.","pos":[0,46]}]},{"pos":[4563,4900],"content":"The <code>subtype</code> was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string.       The <code>boundary</code> was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or contains only white space characters.       -or-       The <code>boundary</code> ends with a space character.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">subtype</ph><ept id=\"p1\">&lt;/code&gt;</ept> was <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or an empty string.","pos":[0,109],"source":"The <code>subtype</code> was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string."},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">boundary</ph><ept id=\"p1\">&lt;/code&gt;</ept> was <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or contains only white space characters.","pos":[116,247],"source":"       The <code>boundary</code> was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or contains only white space characters."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">boundary</ph><ept id=\"p1\">&lt;/code&gt;</ept> ends with a space character.","pos":[254,319],"source":"       -or-       The <code>boundary</code> ends with a space character."}]},{"pos":[5016,5076],"content":"The length of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">boundary</ph><ept id=\"p1\">&lt;/code&gt;</ept> was greater than 70.","needQuote":true,"needEscape":true,"source":"The length of the <code>boundary</code> was greater than 70."},{"pos":[5501,5673],"content":"Add multipart HTTP content to a collection of <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.HttpContent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that get serialized using the multipart/* content type specification.","needQuote":true,"needEscape":true,"source":"Add multipart HTTP content to a collection of <xref href=\"System.Net.Http.HttpContent\"></xref> objects that get serialized using the multipart/* content type specification."},{"pos":[5853,5895],"content":"The HTTP content to add to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP content to add to the collection.","pos":[0,42]}]},{"pos":[6062,6152],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">content</ph><ept id=\"p1\">&lt;/code&gt;</ept> was <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>content</code> was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6559,6707],"content":"Releases the unmanaged resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.MultipartContent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally disposes of the managed resources.","needQuote":true,"needEscape":true,"source":"Releases the unmanaged resources used by the <xref href=\"System.Net.Http.MultipartContent\"></xref> and optionally disposes of the managed resources."},{"pos":[6719,7248],"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.MultipartContent> references. This method invokes the `Dispose()` method of each referenced object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the &lt;xref:System.Object.Finalize%2A&gt; method.","pos":[0,103],"source":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[104,209],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id=\"ph1\">`Dispose`</ph> with <ph id=\"ph2\">`disposing`</ph> set to <ph id=\"ph3\">`false`</ph>.When the <ph id=\"ph4\">`disposing`</ph> parameter is <ph id=\"ph5\">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Net.Http.MultipartContent&gt; references.","pos":[210,459],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.MultipartContent> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[460,529],"source":" This method invokes the `Dispose()` method of each referenced object."}]},{"pos":[7404,7614],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to releases only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to releases only unmanaged resources."},{"pos":[8069,8258],"content":"Returns an enumerator that iterates through the collection of <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.HttpContent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that get serialized using the multipart/* content type specification..","needQuote":true,"needEscape":true,"source":"Returns an enumerator that iterates through the collection of <xref href=\"System.Net.Http.HttpContent\"></xref> objects that get serialized using the multipart/* content type specification.."},{"pos":[8271,8690],"content":"The foreach statement of the C# language (For Each in Visual Basic) hides the complexity of the enumerators. Therefore, using foreach is recommended, instead of directly manipulating the enumerator.       Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.       Initially, the enumerator is positioned before the first element in the collection.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The foreach statement of the C# language (For Each in Visual Basic) hides the complexity of the enumerators. Therefore, using foreach is recommended, instead of directly manipulating the enumerator.       Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.       Initially, the enumerator is positioned before the first element in the collection.","pos":[0,415],"nodes":[{"content":"The foreach statement of the C# language (For Each in Visual Basic) hides the complexity of the enumerators.","pos":[0,108]},{"content":"Therefore, using foreach is recommended, instead of directly manipulating the enumerator.","pos":[109,198]},{"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","pos":[205,325]},{"content":"Initially, the enumerator is positioned before the first element in the collection.","pos":[332,415]}]}]},{"pos":[8938,8999],"content":"An object that can be used to iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that can be used to iterate through the collection.","pos":[0,61]}]},{"pos":[9666,9744],"content":"Serialize the multipart HTTP content to a stream as an asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serialize the multipart HTTP content to a stream as an asynchronous operation.","pos":[0,78]}]},{"pos":[9756,9926],"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been serialized to the target stream.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been serialized to the target stream.","pos":[0,170],"nodes":[{"content":"This operation will not block.","pos":[0,30]},{"content":"The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after all of the content has been serialized to the target stream.","pos":[31,170],"source":" The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been serialized to the target stream."}]}]},{"pos":[10165,10183],"content":"The target stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target stream.","pos":[0,18]}]},{"pos":[10261,10414],"content":"Information about the transport (channel binding token, for example). This parameter may be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Information about the transport (channel binding token, for example).","pos":[0,69]},{"content":"This parameter may be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[70,153],"source":" This parameter may be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[10486,10542],"content":"The task object representing the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]},{"pos":[11181,11278],"content":"The explicit implementation of the <xref:System.Net.Http.MultipartContent.GetEnumerator*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The explicit implementation of the &lt;xref:System.Net.Http.MultipartContent.GetEnumerator*&gt; method.","pos":[0,97],"source":"The explicit implementation of the <xref:System.Net.Http.MultipartContent.GetEnumerator*> method."}]},{"pos":[11456,11517],"content":"An object that can be used to iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that can be used to iterate through the collection.","pos":[0,61]}]},{"pos":[12069,12143],"content":"Determines whether the HTTP multipart content has a valid length in bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the HTTP multipart content has a valid length in bytes.","pos":[0,74]}]},{"pos":[12155,12736],"content":"The TryComputeLength method gives HTTP multipart content the ability to calculate the content length. This is useful for content types which are able to easily calculate the content length. If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`. If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TryComputeLength method gives HTTP multipart content the ability to calculate the content length.","pos":[0,101]},{"content":"This is useful for content types which are able to easily calculate the content length.","pos":[102,189]},{"content":"If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return <ph id=\"ph1\">`false`</ph>.","pos":[190,431],"source":" If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`."},{"content":"If this method returns <ph id=\"ph1\">`false`</ph>, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.","pos":[432,581],"source":" If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server."}]},{"pos":[12897,12937],"content":"The length in bytes of the HHTP content.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length in bytes of the HHTP content.","pos":[0,40]}]},{"pos":[12996,13173],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">length</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a valid length; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>length</code> is a valid length; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Http.MultipartContent\n  id: MultipartContent\n  children:\n  - System.Net.Http.MultipartContent.#ctor\n  - System.Net.Http.MultipartContent.#ctor(System.String)\n  - System.Net.Http.MultipartContent.#ctor(System.String,System.String)\n  - System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)\n  - System.Net.Http.MultipartContent.Dispose(System.Boolean)\n  - System.Net.Http.MultipartContent.GetEnumerator\n  - System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  - System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator\n  - System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)\n  langs:\n  - csharp\n  name: MultipartContent\n  nameWithType: MultipartContent\n  fullName: System.Net.Http.MultipartContent\n  type: Class\n  summary: Provides a collection of <xref href=\"System.Net.Http.HttpContent\"></xref> objects that get serialized using the multipart/* content type specification.\n  syntax:\n    content: 'public class MultipartContent : System.Net.Http.HttpContent, System.Collections.Generic.IEnumerable<System.Net.Http.HttpContent>'\n  inheritance:\n  - System.Object\n  - System.Net.Http.HttpContent\n  implements:\n  - System.Collections.Generic.IEnumerable<System.Net.Http.HttpContent>\n  inheritedMembers:\n  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)\n  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)\n  - System.Net.Http.HttpContent.CreateContentReadStreamAsync\n  - System.Net.Http.HttpContent.Dispose\n  - System.Net.Http.HttpContent.Headers\n  - System.Net.Http.HttpContent.LoadIntoBufferAsync\n  - System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)\n  - System.Net.Http.HttpContent.ReadAsByteArrayAsync\n  - System.Net.Http.HttpContent.ReadAsStreamAsync\n  - System.Net.Http.HttpContent.ReadAsStringAsync\n  platform:\n  - net462\n- uid: System.Net.Http.MultipartContent.#ctor\n  id: '#ctor'\n  parent: System.Net.Http.MultipartContent\n  langs:\n  - csharp\n  name: MultipartContent()\n  nameWithType: MultipartContent.MultipartContent()\n  fullName: System.Net.Http.MultipartContent.MultipartContent()\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Creates a new instance of the <xref href=\"System.Net.Http.MultipartContent\"></xref> class.\n  syntax:\n    content: public MultipartContent ();\n    parameters: []\n  overload: System.Net.Http.MultipartContent.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.MultipartContent.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Net.Http.MultipartContent\n  langs:\n  - csharp\n  name: MultipartContent(String)\n  nameWithType: MultipartContent.MultipartContent(String)\n  fullName: System.Net.Http.MultipartContent.MultipartContent(String)\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Creates a new instance of the <xref href=\"System.Net.Http.MultipartContent\"></xref> class.\n  syntax:\n    content: public MultipartContent (string subtype);\n    parameters:\n    - id: subtype\n      type: System.String\n      description: The subtype of the multipart content.\n  overload: System.Net.Http.MultipartContent.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>subtype</code> was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or contains only white space characters.\n  platform:\n  - net462\n- uid: System.Net.Http.MultipartContent.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Net.Http.MultipartContent\n  langs:\n  - csharp\n  name: MultipartContent(String,String)\n  nameWithType: MultipartContent.MultipartContent(String,String)\n  fullName: System.Net.Http.MultipartContent.MultipartContent(String,String)\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Creates a new instance of the <xref href=\"System.Net.Http.MultipartContent\"></xref> class.\n  syntax:\n    content: public MultipartContent (string subtype, string boundary);\n    parameters:\n    - id: subtype\n      type: System.String\n      description: The subtype of the multipart content.\n    - id: boundary\n      type: System.String\n      description: The boundary string for the multipart content.\n  overload: System.Net.Http.MultipartContent.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>subtype</code> was <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> or an empty string.  \\n  \\n The <code>boundary</code> was <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> or contains only white space characters.  \\n  \\n -or-  \\n  \\n The <code>boundary</code> ends with a space character.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The length of the <code>boundary</code> was greater than 70.\n  platform:\n  - net462\n- uid: System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)\n  id: Add(System.Net.Http.HttpContent)\n  parent: System.Net.Http.MultipartContent\n  langs:\n  - csharp\n  name: Add(HttpContent)\n  nameWithType: MultipartContent.Add(HttpContent)\n  fullName: System.Net.Http.MultipartContent.Add(HttpContent)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Add multipart HTTP content to a collection of <xref href=\"System.Net.Http.HttpContent\"></xref> objects that get serialized using the multipart/* content type specification.\n  syntax:\n    content: public virtual void Add (System.Net.Http.HttpContent content);\n    parameters:\n    - id: content\n      type: System.Net.Http.HttpContent\n      description: The HTTP content to add to the collection.\n  overload: System.Net.Http.MultipartContent.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>content</code> was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Net.Http.MultipartContent.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Net.Http.MultipartContent\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: MultipartContent.Dispose(Boolean)\n  fullName: System.Net.Http.MultipartContent.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Net.Http.MultipartContent\"></xref> and optionally disposes of the managed resources.\n  remarks: This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.MultipartContent> references. This method invokes the `Dispose()` method of each referenced object.\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to releases only unmanaged resources.\n  overload: System.Net.Http.MultipartContent.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.MultipartContent.GetEnumerator\n  id: GetEnumerator\n  parent: System.Net.Http.MultipartContent\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: MultipartContent.GetEnumerator()\n  fullName: System.Net.Http.MultipartContent.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Returns an enumerator that iterates through the collection of <xref href=\"System.Net.Http.HttpContent\"></xref> objects that get serialized using the multipart/* content type specification..\n  remarks: \"The foreach statement of the C# language (For Each in Visual Basic) hides the complexity of the enumerators. Therefore, using foreach is recommended, instead of directly manipulating the enumerator.  \\n  \\n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \\n  \\n Initially, the enumerator is positioned before the first element in the collection.\"\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.Net.Http.HttpContent> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Net.Http.HttpContent}\n      description: An object that can be used to iterate through the collection.\n  overload: System.Net.Http.MultipartContent.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  id: SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  parent: System.Net.Http.MultipartContent\n  langs:\n  - csharp\n  name: SerializeToStreamAsync(Stream,TransportContext)\n  nameWithType: MultipartContent.SerializeToStreamAsync(Stream,TransportContext)\n  fullName: System.Net.Http.MultipartContent.SerializeToStreamAsync(Stream,TransportContext)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Serialize the multipart HTTP content to a stream as an asynchronous operation.\n  remarks: This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been serialized to the target stream.\n  syntax:\n    content: protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The target stream.\n    - id: context\n      type: System.Net.TransportContext\n      description: Information about the transport (channel binding token, for example). This parameter may be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Threading.Tasks.Task\n      description: The task object representing the asynchronous operation.\n  overload: System.Net.Http.MultipartContent.SerializeToStreamAsync*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Net.Http.MultipartContent\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: MultipartContent.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Net.Http.MultipartContent.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: The explicit implementation of the <xref:System.Net.Http.MultipartContent.GetEnumerator*> method.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An object that can be used to iterate through the collection.\n  overload: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)\n  id: TryComputeLength(System.Int64@)\n  parent: System.Net.Http.MultipartContent\n  langs:\n  - csharp\n  name: TryComputeLength(Int64)\n  nameWithType: MultipartContent.TryComputeLength(Int64)\n  fullName: System.Net.Http.MultipartContent.TryComputeLength(Int64)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Determines whether the HTTP multipart content has a valid length in bytes.\n  remarks: The TryComputeLength method gives HTTP multipart content the ability to calculate the content length. This is useful for content types which are able to easily calculate the content length. If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`. If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.\n  syntax:\n    content: protected override bool TryComputeLength (out long length);\n    parameters:\n    - id: length\n      type: System.Int64\n      description: The length in bytes of the HHTP content.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>length</code> is a valid length; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.MultipartContent.TryComputeLength*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Net.Http.HttpContent\n  isExternal: false\n  name: System.Net.Http.HttpContent\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Net.Http.MultipartContent.#ctor\n  parent: System.Net.Http.MultipartContent\n  isExternal: false\n  name: MultipartContent()\n  nameWithType: MultipartContent.MultipartContent()\n  fullName: System.Net.Http.MultipartContent.MultipartContent()\n- uid: System.Net.Http.MultipartContent.#ctor(System.String)\n  parent: System.Net.Http.MultipartContent\n  isExternal: false\n  name: MultipartContent(String)\n  nameWithType: MultipartContent.MultipartContent(String)\n  fullName: System.Net.Http.MultipartContent.MultipartContent(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.Http.MultipartContent.#ctor(System.String,System.String)\n  parent: System.Net.Http.MultipartContent\n  isExternal: false\n  name: MultipartContent(String,String)\n  nameWithType: MultipartContent.MultipartContent(String,String)\n  fullName: System.Net.Http.MultipartContent.MultipartContent(String,String)\n- uid: System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)\n  parent: System.Net.Http.MultipartContent\n  isExternal: false\n  name: Add(HttpContent)\n  nameWithType: MultipartContent.Add(HttpContent)\n  fullName: System.Net.Http.MultipartContent.Add(HttpContent)\n- uid: System.Net.Http.MultipartContent.Dispose(System.Boolean)\n  parent: System.Net.Http.MultipartContent\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: MultipartContent.Dispose(Boolean)\n  fullName: System.Net.Http.MultipartContent.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Http.MultipartContent.GetEnumerator\n  parent: System.Net.Http.MultipartContent\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: MultipartContent.GetEnumerator()\n  fullName: System.Net.Http.MultipartContent.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Net.Http.HttpContent}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<HttpContent>\n  nameWithType: IEnumerator<HttpContent>\n  fullName: System.Collections.Generic.IEnumerator<System.Net.Http.HttpContent>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<System.Net.Http.HttpContent>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.Http.HttpContent\n    name: HttpContent\n    nameWithType: HttpContent\n    fullName: HttpContent\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  parent: System.Net.Http.MultipartContent\n  isExternal: false\n  name: SerializeToStreamAsync(Stream,TransportContext)\n  nameWithType: MultipartContent.SerializeToStreamAsync(Stream,TransportContext)\n  fullName: System.Net.Http.MultipartContent.SerializeToStreamAsync(Stream,TransportContext)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: true\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Net.TransportContext\n  parent: System.Net\n  isExternal: true\n  name: TransportContext\n  nameWithType: TransportContext\n  fullName: System.Net.TransportContext\n- uid: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Net.Http.MultipartContent\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: MultipartContent.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Net.Http.MultipartContent.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)\n  parent: System.Net.Http.MultipartContent\n  isExternal: false\n  name: TryComputeLength(Int64)\n  nameWithType: MultipartContent.TryComputeLength(Int64)\n  fullName: System.Net.Http.MultipartContent.TryComputeLength(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Net.Http.MultipartContent.#ctor*\n  parent: System.Net.Http.MultipartContent\n  isExternal: false\n  name: MultipartContent\n  nameWithType: MultipartContent.MultipartContent\n- uid: System.Net.Http.MultipartContent.Add*\n  parent: System.Net.Http.MultipartContent\n  isExternal: false\n  name: Add\n  nameWithType: MultipartContent.Add\n- uid: System.Net.Http.MultipartContent.Dispose*\n  parent: System.Net.Http.MultipartContent\n  isExternal: false\n  name: Dispose\n  nameWithType: MultipartContent.Dispose\n- uid: System.Net.Http.MultipartContent.GetEnumerator*\n  parent: System.Net.Http.MultipartContent\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: MultipartContent.GetEnumerator\n- uid: System.Net.Http.MultipartContent.SerializeToStreamAsync*\n  parent: System.Net.Http.MultipartContent\n  isExternal: false\n  name: SerializeToStreamAsync\n  nameWithType: MultipartContent.SerializeToStreamAsync\n- uid: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Net.Http.MultipartContent\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: MultipartContent.System.Collections.IEnumerable.GetEnumerator\n- uid: System.Net.Http.MultipartContent.TryComputeLength*\n  parent: System.Net.Http.MultipartContent\n  isExternal: false\n  name: TryComputeLength\n  nameWithType: MultipartContent.TryComputeLength\n"}