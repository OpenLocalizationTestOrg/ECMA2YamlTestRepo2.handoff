{"nodes":[{"pos":[634,706],"content":"Provides the base class for the activation of manifest-based assemblies.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the base class for the activation of manifest-based assemblies.","pos":[0,72]}]},{"pos":[719,4354],"content":"There is a single designated instance of the ApplicationActivator class in each <xref:System.AppDomain> to which all activation calls are routed. The <xref:System.AppDomainManager> for the current <xref:System.AppDomain> can provide its own custom ApplicationActivator for this purpose. If a custom ApplicationActivator is not provided, an instance of the default ApplicationActivator is created.       The following steps describe the behavior of the default <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method implementation:      1.  Checks if the <xref:System.ActivationContext> of the add-in to be activated matches the <xref:System.ActivationContext> of the current domain; if not, proceeds to step 2. Otherwise, executes the assembly and returns the result wrapped in an object handle.      2.  Activates the add-in in a new <xref:System.AppDomain>. The following steps are taken to initialize a new <xref:System.AppDomain> using the <xref:System.Runtime.Hosting.ActivationArguments> for the add-in.          1.  Creates a new <xref:System.AppDomainSetup> object using an <xref:System.Runtime.Hosting.ActivationArguments> object containing the activation context for the add-in.          2.  Calls the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> method to create a new domain using the <xref:System.AppDomainSetup> object.          3.  The <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> method calls the <xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=fullName> method to acquire an <xref:System.Security.Policy.ApplicationTrust> object for the add-in. If the <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> property returns `true`, the add-in is executed. If not, <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> throws a <xref:System.Security.Policy.PolicyException> indicating that execution permission could not be acquired.          4.  If the add-in is trusted to run, then a new <xref:System.AppDomain> is created and configured for the <xref:System.ActivationContext> of the add-in, and the add-in is loaded and executed.          5.  The result of the activation of the add-in is returned, wrapped in an object handle.       A custom activator can tailor the activation of an add-in to a particular set of circumstances. For example, a custom activator could find an existing <xref:System.AppDomain> to activate this add-in instead of creating a new domain every time.       The following steps describe the behavior of a custom ApplicationActivator that activates an add-in in an existing <xref:System.AppDomain>:      1.  The custom activator finds a domain that has the same <xref:System.ActivationContext> as the add-in that is being activated.      2.  If the <xref:System.ActivationContext> has never been seen before in the process, the custom activator creates a new <xref:System.AppDomain> for this <xref:System.ActivationContext> by calling the <xref:System.AppDomain.CreateDomain%2A> method directly, or delegating this activity to the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> in the base class.      3.  If there is an existing domain with the same <xref:System.ActivationContext>, then the activator can delegate the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method call to the ApplicationActivator in the target domain. Note that this would be a cross-domain call to an ApplicationActivator that resides in the target <xref:System.AppDomain>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"There is a single designated instance of the ApplicationActivator class in each &lt;xref:System.AppDomain&gt; to which all activation calls are routed.","pos":[0,145],"source":"There is a single designated instance of the ApplicationActivator class in each <xref:System.AppDomain> to which all activation calls are routed."},{"content":"The &lt;xref:System.AppDomainManager&gt; for the current &lt;xref:System.AppDomain&gt; can provide its own custom ApplicationActivator for this purpose.","pos":[146,286],"source":" The <xref:System.AppDomainManager> for the current <xref:System.AppDomain> can provide its own custom ApplicationActivator for this purpose."},{"content":"If a custom ApplicationActivator is not provided, an instance of the default ApplicationActivator is created.","pos":[287,396]},{"content":"The following steps describe the behavior of the default &lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A&gt; method implementation:      1.","pos":[403,559],"source":"       The following steps describe the behavior of the default <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method implementation:      1."},{"content":"Checks if the &lt;xref:System.ActivationContext&gt; of the add-in to be activated matches the &lt;xref:System.ActivationContext&gt; of the current domain; if not, proceeds to step 2.","pos":[561,731],"source":"  Checks if the <xref:System.ActivationContext> of the add-in to be activated matches the <xref:System.ActivationContext> of the current domain; if not, proceeds to step 2."},{"content":"Otherwise, executes the assembly and returns the result wrapped in an object handle.","pos":[732,816]},{"content":"2.","pos":[822,824]},{"content":"Activates the add-in in a new &lt;xref:System.AppDomain&gt;.","pos":[826,880],"source":"  Activates the add-in in a new <xref:System.AppDomain>."},{"content":"The following steps are taken to initialize a new &lt;xref:System.AppDomain&gt; using the &lt;xref:System.Runtime.Hosting.ActivationArguments&gt; for the add-in.","pos":[881,1030],"source":" The following steps are taken to initialize a new <xref:System.AppDomain> using the <xref:System.Runtime.Hosting.ActivationArguments> for the add-in."},{"content":"1.","pos":[1040,1042]},{"content":"Creates a new &lt;xref:System.AppDomainSetup&gt; object using an &lt;xref:System.Runtime.Hosting.ActivationArguments&gt; object containing the activation context for the add-in.","pos":[1044,1209],"source":"  Creates a new <xref:System.AppDomainSetup> object using an <xref:System.Runtime.Hosting.ActivationArguments> object containing the activation context for the add-in."},{"content":"2.","pos":[1219,1221]},{"content":"Calls the &lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt; method to create a new domain using the &lt;xref:System.AppDomainSetup&gt; object.","pos":[1223,1384],"source":"  Calls the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> method to create a new domain using the <xref:System.AppDomainSetup> object."},{"content":"3.","pos":[1394,1396]},{"content":"The &lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt; method calls the &lt;xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=fullName&gt; method to acquire an &lt;xref:System.Security.Policy.ApplicationTrust&gt; object for the add-in.","pos":[1398,1681],"source":"  The <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> method calls the <xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=fullName> method to acquire an <xref:System.Security.Policy.ApplicationTrust> object for the add-in."},{"content":"If the &lt;xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A&gt; property returns <ph id=\"ph1\">`true`</ph>, the add-in is executed.","pos":[1682,1813],"source":" If the <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> property returns `true`, the add-in is executed."},{"content":"If not, &lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt; throws a &lt;xref:System.Security.Policy.PolicyException&gt; indicating that execution permission could not be acquired.","pos":[1814,2011],"source":" If not, <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> throws a <xref:System.Security.Policy.PolicyException> indicating that execution permission could not be acquired."},{"content":"4.","pos":[2021,2023]},{"content":"If the add-in is trusted to run, then a new &lt;xref:System.AppDomain&gt; is created and configured for the &lt;xref:System.ActivationContext&gt; of the add-in, and the add-in is loaded and executed.","pos":[2025,2212],"source":"  If the add-in is trusted to run, then a new <xref:System.AppDomain> is created and configured for the <xref:System.ActivationContext> of the add-in, and the add-in is loaded and executed."},{"content":"5.","pos":[2222,2224]},{"content":"The result of the activation of the add-in is returned, wrapped in an object handle.","pos":[2226,2310]},{"content":"A custom activator can tailor the activation of an add-in to a particular set of circumstances.","pos":[2317,2412]},{"content":"For example, a custom activator could find an existing &lt;xref:System.AppDomain&gt; to activate this add-in instead of creating a new domain every time.","pos":[2413,2560],"source":" For example, a custom activator could find an existing <xref:System.AppDomain> to activate this add-in instead of creating a new domain every time."},{"content":"The following steps describe the behavior of a custom ApplicationActivator that activates an add-in in an existing &lt;xref:System.AppDomain&gt;:      1.","pos":[2567,2714],"source":"       The following steps describe the behavior of a custom ApplicationActivator that activates an add-in in an existing <xref:System.AppDomain>:      1."},{"content":"The custom activator finds a domain that has the same &lt;xref:System.ActivationContext&gt; as the add-in that is being activated.","pos":[2716,2840],"source":"  The custom activator finds a domain that has the same <xref:System.ActivationContext> as the add-in that is being activated."},{"content":"2.","pos":[2846,2848]},{"content":"If the &lt;xref:System.ActivationContext&gt; has never been seen before in the process, the custom activator creates a new &lt;xref:System.AppDomain&gt; for this &lt;xref:System.ActivationContext&gt; by calling the &lt;xref:System.AppDomain.CreateDomain%2A&gt; method directly, or delegating this activity to the &lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt; in the base class.","pos":[2850,3232],"source":"  If the <xref:System.ActivationContext> has never been seen before in the process, the custom activator creates a new <xref:System.AppDomain> for this <xref:System.ActivationContext> by calling the <xref:System.AppDomain.CreateDomain%2A> method directly, or delegating this activity to the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> in the base class."},{"content":"3.","pos":[3238,3240]},{"content":"If there is an existing domain with the same &lt;xref:System.ActivationContext&gt;, then the activator can delegate the &lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A&gt; method call to the ApplicationActivator in the target domain.","pos":[3242,3486],"source":"  If there is an existing domain with the same <xref:System.ActivationContext>, then the activator can delegate the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method call to the ApplicationActivator in the target domain."},{"content":"Note that this would be a cross-domain call to an ApplicationActivator that resides in the target &lt;xref:System.AppDomain&gt;.","pos":[3487,3609],"source":" Note that this would be a cross-domain call to an ApplicationActivator that resides in the target <xref:System.AppDomain>."}]},{"pos":[5418,5523],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Hosting.ApplicationActivator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Runtime.Hosting.ApplicationActivator\"></xref> class."},{"pos":[6206,6301],"content":"Creates an instance of the application to be activated, using the specified activation context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an instance of the application to be activated, using the specified activation context.","pos":[0,95]}]},{"pos":[6313,6387],"content":"This method is intended for the manifest-based activation of applications.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is intended for the manifest-based activation of applications.","pos":[0,74]}]},{"pos":[6617,6710],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ActivationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that identifies the application to activate.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ActivationContext\"></xref> that identifies the application to activate."},{"pos":[6791,6982],"content":"An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution. The return value must be unwrapped to access the real object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjectHandle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is a wrapper for the return value of the application execution.","pos":[0,129],"source":"An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution."},{"content":"The return value must be unwrapped to access the real object.","pos":[130,191]}]},{"pos":[7171,7266],"content":"<ph id=\"ph1\">&lt;code&gt;activationContext&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>activationContext</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7854,7977],"content":"Creates an instance of the application to be activated, using the specified activation context  and custom activation data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an instance of the application to be activated, using the specified activation context  and custom activation data.","pos":[0,123]}]},{"pos":[7989,8150],"content":"This method is intended for the manifest-based activation of applications. The activation data consists of information such as the query string portion of a URL.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is intended for the manifest-based activation of applications. The activation data consists of information such as the query string portion of a URL.","pos":[0,161],"nodes":[{"content":"This method is intended for the manifest-based activation of applications.","pos":[0,74]},{"content":"The activation data consists of information such as the query string portion of a URL.","pos":[75,161]}]}]},{"pos":[8411,8504],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ActivationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that identifies the application to activate.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ActivationContext\"></xref> that identifies the application to activate."},{"pos":[8583,8606],"content":"Custom activation data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Custom activation data.","pos":[0,23]}]},{"pos":[8687,8878],"content":"An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution. The return value must be unwrapped to access the real object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjectHandle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is a wrapper for the return value of the application execution.","pos":[0,129],"source":"An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution."},{"content":"The return value must be unwrapped to access the real object.","pos":[130,191]}]},{"pos":[9067,9162],"content":"<ph id=\"ph1\">&lt;code&gt;activationContext&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>activationContext</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9706,9814],"content":"Creates an instance of an application using the specified <bpt id=\"p1\">&lt;xref href=\"System.AppDomainSetup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Creates an instance of an application using the specified <xref href=\"System.AppDomainSetup\"></xref> object."},{"pos":[9826,9900],"content":"This method is intended for the manifest-based activation of applications.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is intended for the manifest-based activation of applications.","pos":[0,74]}]},{"pos":[10112,10269],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.AppDomainSetup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object whose &lt;xref:System.AppDomainSetup.ActivationArguments*&gt; property identifies the application to activate.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.AppDomainSetup\"></xref> object whose <xref:System.AppDomainSetup.ActivationArguments*> property identifies the application to activate."},{"pos":[10350,10541],"content":"An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution. The return value must be unwrapped to access the real object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.ObjectHandle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is a wrapper for the return value of the application execution.","pos":[0,129],"source":"An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution."},{"content":"The return value must be unwrapped to access the real object.","pos":[130,191]}]},{"pos":[10728,10879],"content":"The &lt;xref:System.AppDomainSetup.ActivationArguments*&gt; property of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">adSetup</ph><ept id=\"p1\"> &lt;/code&gt;</ept>is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.AppDomainSetup.ActivationArguments*> property of <code>adSetup </code>is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11002,11161],"content":"The application instance failed to execute because the policy settings on the current application domain do not provide permission for this application to run.","needQuote":true,"needEscape":true,"nodes":[{"content":"The application instance failed to execute because the policy settings on the current application domain do not provide permission for this application to run.","pos":[0,159]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Hosting.ApplicationActivator\n  id: ApplicationActivator\n  children:\n  - System.Runtime.Hosting.ApplicationActivator.#ctor\n  - System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)\n  - System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])\n  - System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)\n  langs:\n  - csharp\n  name: ApplicationActivator\n  nameWithType: ApplicationActivator\n  fullName: System.Runtime.Hosting.ApplicationActivator\n  type: Class\n  summary: Provides the base class for the activation of manifest-based assemblies.\n  remarks: \"There is a single designated instance of the ApplicationActivator class in each <xref:System.AppDomain> to which all activation calls are routed. The <xref:System.AppDomainManager> for the current <xref:System.AppDomain> can provide its own custom ApplicationActivator for this purpose. If a custom ApplicationActivator is not provided, an instance of the default ApplicationActivator is created.  \\n  \\n The following steps describe the behavior of the default <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method implementation:  \\n  \\n1.  Checks if the <xref:System.ActivationContext> of the add-in to be activated matches the <xref:System.ActivationContext> of the current domain; if not, proceeds to step 2. Otherwise, executes the assembly and returns the result wrapped in an object handle.  \\n  \\n2.  Activates the add-in in a new <xref:System.AppDomain>. The following steps are taken to initialize a new <xref:System.AppDomain> using the <xref:System.Runtime.Hosting.ActivationArguments> for the add-in.  \\n  \\n    1.  Creates a new <xref:System.AppDomainSetup> object using an <xref:System.Runtime.Hosting.ActivationArguments> object containing the activation context for the add-in.  \\n  \\n    2.  Calls the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> method to create a new domain using the <xref:System.AppDomainSetup> object.  \\n  \\n    3.  The <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> method calls the <xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=fullName> method to acquire an <xref:System.Security.Policy.ApplicationTrust> object for the add-in. If the <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> property returns `true`, the add-in is executed. If not, <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> throws a <xref:System.Security.Policy.PolicyException> indicating that execution permission could not be acquired.  \\n  \\n    4.  If the add-in is trusted to run, then a new <xref:System.AppDomain> is created and configured for the <xref:System.ActivationContext> of the add-in, and the add-in is loaded and executed.  \\n  \\n    5.  The result of the activation of the add-in is returned, wrapped in an object handle.  \\n  \\n A custom activator can tailor the activation of an add-in to a particular set of circumstances. For example, a custom activator could find an existing <xref:System.AppDomain> to activate this add-in instead of creating a new domain every time.  \\n  \\n The following steps describe the behavior of a custom ApplicationActivator that activates an add-in in an existing <xref:System.AppDomain>:  \\n  \\n1.  The custom activator finds a domain that has the same <xref:System.ActivationContext> as the add-in that is being activated.  \\n  \\n2.  If the <xref:System.ActivationContext> has never been seen before in the process, the custom activator creates a new <xref:System.AppDomain> for this <xref:System.ActivationContext> by calling the <xref:System.AppDomain.CreateDomain%2A> method directly, or delegating this activity to the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> in the base class.  \\n  \\n3.  If there is an existing domain with the same <xref:System.ActivationContext>, then the activator can delegate the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method call to the ApplicationActivator in the target domain. Note that this would be a cross-domain call to an ApplicationActivator that resides in the target <xref:System.AppDomain>.\"\n  example:\n  - \"The following code example shows how to obtain an ApplicationActivator object from the current <xref:System.AppDomain.DomainManager%2A> for a manifest-based application.  \\n  \\n [!code-vb[System.Runtime.Hosting.ApplicationActivator#1](~/add/codesnippet/visualbasic/t-system.runtime.hosting_0_1.vb)]\\n [!code-cs[System.Runtime.Hosting.ApplicationActivator#1](~/add/codesnippet/csharp/t-system.runtime.hosting_0_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class ApplicationActivator\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Runtime.Hosting.ApplicationActivator.#ctor\n  id: '#ctor'\n  parent: System.Runtime.Hosting.ApplicationActivator\n  langs:\n  - csharp\n  name: ApplicationActivator()\n  nameWithType: ApplicationActivator.ApplicationActivator()\n  fullName: System.Runtime.Hosting.ApplicationActivator.ApplicationActivator()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Hosting.ApplicationActivator\"></xref> class.\n  syntax:\n    content: public ApplicationActivator ();\n    parameters: []\n  overload: System.Runtime.Hosting.ApplicationActivator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)\n  id: CreateInstance(System.ActivationContext)\n  parent: System.Runtime.Hosting.ApplicationActivator\n  langs:\n  - csharp\n  name: CreateInstance(ActivationContext)\n  nameWithType: ApplicationActivator.CreateInstance(ActivationContext)\n  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstance(ActivationContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Hosting\n  summary: Creates an instance of the application to be activated, using the specified activation context.\n  remarks: This method is intended for the manifest-based activation of applications.\n  syntax:\n    content: public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);\n    parameters:\n    - id: activationContext\n      type: System.ActivationContext\n      description: An <xref href=\"System.ActivationContext\"></xref> that identifies the application to activate.\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution. The return value must be unwrapped to access the real object.\n  overload: System.Runtime.Hosting.ApplicationActivator.CreateInstance*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>activationContext</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])\n  id: CreateInstance(System.ActivationContext,System.String[])\n  parent: System.Runtime.Hosting.ApplicationActivator\n  langs:\n  - csharp\n  name: CreateInstance(ActivationContext,String[])\n  nameWithType: ApplicationActivator.CreateInstance(ActivationContext,String[])\n  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstance(ActivationContext,String[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Hosting\n  summary: Creates an instance of the application to be activated, using the specified activation context  and custom activation data.\n  remarks: This method is intended for the manifest-based activation of applications. The activation data consists of information such as the query string portion of a URL.\n  syntax:\n    content: public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);\n    parameters:\n    - id: activationContext\n      type: System.ActivationContext\n      description: An <xref href=\"System.ActivationContext\"></xref> that identifies the application to activate.\n    - id: activationCustomData\n      type: System.String[]\n      description: Custom activation data.\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution. The return value must be unwrapped to access the real object.\n  overload: System.Runtime.Hosting.ApplicationActivator.CreateInstance*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>activationContext</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)\n  id: CreateInstanceHelper(System.AppDomainSetup)\n  parent: System.Runtime.Hosting.ApplicationActivator\n  langs:\n  - csharp\n  name: CreateInstanceHelper(AppDomainSetup)\n  nameWithType: ApplicationActivator.CreateInstanceHelper(AppDomainSetup)\n  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(AppDomainSetup)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Hosting\n  summary: Creates an instance of an application using the specified <xref href=\"System.AppDomainSetup\"></xref> object.\n  remarks: This method is intended for the manifest-based activation of applications.\n  syntax:\n    content: protected static System.Runtime.Remoting.ObjectHandle CreateInstanceHelper (AppDomainSetup adSetup);\n    parameters:\n    - id: adSetup\n      type: System.AppDomainSetup\n      description: An <xref href=\"System.AppDomainSetup\"></xref> object whose <xref:System.AppDomainSetup.ActivationArguments*> property identifies the application to activate.\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution. The return value must be unwrapped to access the real object.\n  overload: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref:System.AppDomainSetup.ActivationArguments*> property of <code>adSetup </code>is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.Policy.PolicyException\n    commentId: T:System.Security.Policy.PolicyException\n    description: The application instance failed to execute because the policy settings on the current application domain do not provide permission for this application to run.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.Policy.PolicyException\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyException\n  nameWithType: PolicyException\n  fullName: System.Security.Policy.PolicyException\n- uid: System.Runtime.Hosting.ApplicationActivator.#ctor\n  parent: System.Runtime.Hosting.ApplicationActivator\n  isExternal: false\n  name: ApplicationActivator()\n  nameWithType: ApplicationActivator.ApplicationActivator()\n  fullName: System.Runtime.Hosting.ApplicationActivator.ApplicationActivator()\n- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)\n  parent: System.Runtime.Hosting.ApplicationActivator\n  isExternal: false\n  name: CreateInstance(ActivationContext)\n  nameWithType: ApplicationActivator.CreateInstance(ActivationContext)\n  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstance(ActivationContext)\n- uid: System.Runtime.Remoting.ObjectHandle\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: ObjectHandle\n  nameWithType: ObjectHandle\n  fullName: System.Runtime.Remoting.ObjectHandle\n- uid: System.ActivationContext\n  parent: System\n  isExternal: false\n  name: ActivationContext\n  nameWithType: ActivationContext\n  fullName: System.ActivationContext\n- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])\n  parent: System.Runtime.Hosting.ApplicationActivator\n  isExternal: false\n  name: CreateInstance(ActivationContext,String[])\n  nameWithType: ApplicationActivator.CreateInstance(ActivationContext,String[])\n  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstance(ActivationContext,String[])\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)\n  parent: System.Runtime.Hosting.ApplicationActivator\n  isExternal: false\n  name: CreateInstanceHelper(AppDomainSetup)\n  nameWithType: ApplicationActivator.CreateInstanceHelper(AppDomainSetup)\n  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(AppDomainSetup)\n- uid: System.AppDomainSetup\n  parent: System\n  isExternal: false\n  name: AppDomainSetup\n  nameWithType: AppDomainSetup\n  fullName: System.AppDomainSetup\n- uid: System.Runtime.Hosting.ApplicationActivator.#ctor*\n  parent: System.Runtime.Hosting.ApplicationActivator\n  isExternal: false\n  name: ApplicationActivator\n  nameWithType: ApplicationActivator.ApplicationActivator\n- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance*\n  parent: System.Runtime.Hosting.ApplicationActivator\n  isExternal: false\n  name: CreateInstance\n  nameWithType: ApplicationActivator.CreateInstance\n- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper*\n  parent: System.Runtime.Hosting.ApplicationActivator\n  isExternal: false\n  name: CreateInstanceHelper\n  nameWithType: ApplicationActivator.CreateInstanceHelper\n"}