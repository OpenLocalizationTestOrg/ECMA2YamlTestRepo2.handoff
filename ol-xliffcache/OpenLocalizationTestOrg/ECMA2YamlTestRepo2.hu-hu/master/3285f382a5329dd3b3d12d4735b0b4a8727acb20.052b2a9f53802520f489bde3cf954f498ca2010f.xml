{"nodes":[{"pos":[615,715],"content":"Marks each type of member that is defined as a derived class of <xref:System.Reflection.MemberInfo>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Marks each type of member that is defined as a derived class of &lt;xref:System.Reflection.MemberInfo&gt;.","pos":[0,100],"source":"Marks each type of member that is defined as a derived class of <xref:System.Reflection.MemberInfo>."}]},{"pos":[728,2219],"content":"These enumeration values are returned by the following properties:      -   <xref:System.Type.MemberType%2A?displayProperty=fullName>.      -   <xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=fullName>.      -   <xref:System.Reflection.ConstructorInfo?displayProperty=fullName>.      -   <xref:System.Reflection.EventInfo?displayProperty=fullName>.      -   <xref:System.Reflection.FieldInfo?displayProperty=fullName>.      -   <xref:System.Reflection.MethodInfo?displayProperty=fullName>.      -   <xref:System.Reflection.PropertyInfo?displayProperty=fullName>.       To obtain the MemberTypes value for a type:      1.  Get a <xref:System.Type> object that represents that type.      2.  Retrieve the value of the <xref:System.Type.MemberType%2A?displayProperty=fullName> property.       To get the MemberTypes values for the members of a type.:      1.  Get a <xref:System.Type> object that represents that type.      2.  Retrieve the <xref:System.Reflection.MemberInfo> array that represents the members of that type by calling the <xref:System.Type.GetMembers%2A?displayProperty=fullName> method.      3.  Retrieve the value of the From the <xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=fullName> property for each member in the array.  A `switch` statement in C# or `Select Case` statement in Visual Basic is typically used to process member types.       MemberTypes matches CorTypeAttr as defined in the corhdr.h file.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"These enumeration values are returned by the following properties:      -   &lt;xref:System.Type.MemberType%2A?displayProperty=fullName&gt;.","pos":[0,134],"source":"These enumeration values are returned by the following properties:      -   <xref:System.Type.MemberType%2A?displayProperty=fullName>."},{"content":"-   &lt;xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=fullName&gt;.","pos":[140,219],"source":"      -   <xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=fullName>."},{"content":"-   &lt;xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt;.","pos":[225,295],"source":"      -   <xref:System.Reflection.ConstructorInfo?displayProperty=fullName>."},{"content":"-   &lt;xref:System.Reflection.EventInfo?displayProperty=fullName&gt;.","pos":[301,365],"source":"      -   <xref:System.Reflection.EventInfo?displayProperty=fullName>."},{"content":"-   &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt;.","pos":[371,435],"source":"      -   <xref:System.Reflection.FieldInfo?displayProperty=fullName>."},{"content":"-   &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt;.","pos":[441,506],"source":"      -   <xref:System.Reflection.MethodInfo?displayProperty=fullName>."},{"content":"-   &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt;.","pos":[512,579],"source":"      -   <xref:System.Reflection.PropertyInfo?displayProperty=fullName>."},{"content":"To obtain the MemberTypes value for a type:      1.","pos":[586,637]},{"content":"Get a &lt;xref:System.Type&gt; object that represents that type.","pos":[639,697],"source":"  Get a <xref:System.Type> object that represents that type."},{"content":"2.","pos":[703,705]},{"content":"Retrieve the value of the &lt;xref:System.Type.MemberType%2A?displayProperty=fullName&gt; property.","pos":[707,800],"source":"  Retrieve the value of the <xref:System.Type.MemberType%2A?displayProperty=fullName> property."},{"content":"To get the MemberTypes values for the members of a type.:      1.","pos":[807,872]},{"content":"Get a &lt;xref:System.Type&gt; object that represents that type.","pos":[874,932],"source":"  Get a <xref:System.Type> object that represents that type."},{"content":"2.","pos":[938,940]},{"content":"Retrieve the &lt;xref:System.Reflection.MemberInfo&gt; array that represents the members of that type by calling the &lt;xref:System.Type.GetMembers%2A?displayProperty=fullName&gt; method.","pos":[942,1118],"source":"  Retrieve the <xref:System.Reflection.MemberInfo> array that represents the members of that type by calling the <xref:System.Type.GetMembers%2A?displayProperty=fullName> method."},{"content":"3.","pos":[1124,1126]},{"content":"Retrieve the value of the From the &lt;xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=fullName&gt; property for each member in the array.","pos":[1128,1276],"source":"  Retrieve the value of the From the <xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=fullName> property for each member in the array."},{"content":"A <ph id=\"ph1\">`switch`</ph> statement in C# or <ph id=\"ph2\">`Select Case`</ph> statement in Visual Basic is typically used to process member types.","pos":[1278,1390],"source":"  A `switch` statement in C# or `Select Case` statement in Visual Basic is typically used to process member types."},{"content":"MemberTypes matches CorTypeAttr as defined in the corhdr.h file.","pos":[1397,1461]}]},{"pos":[3184,3211],"content":"Specifies all member types.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies all member types.","pos":[0,27]}]},{"pos":[3312,3324],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3689,3731],"content":"Specifies that the member is a constructor","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the member is a constructor","pos":[0,42]}]},{"pos":[3840,3852],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4192,4242],"content":"Specifies that the member is a custom member type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the member is a custom member type.","pos":[0,50]}]},{"pos":[4346,4358],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4693,4731],"content":"Specifies that the member is an event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the member is an event.","pos":[0,38]}]},{"pos":[4834,4846],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5181,5218],"content":"Specifies that the member is a field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the member is a field.","pos":[0,37]}]},{"pos":[5321,5333],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5673,5711],"content":"Specifies that the member is a method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the member is a method.","pos":[0,38]}]},{"pos":[5815,5827],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6187,6230],"content":"Specifies that the member is a nested type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the member is a nested type.","pos":[0,43]}]},{"pos":[6338,6350],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6700,6740],"content":"Specifies that the member is a property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the member is a property.","pos":[0,40]}]},{"pos":[6846,6858],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7208,7244],"content":"Specifies that the member is a type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the member is a type.","pos":[0,36]}]},{"pos":[7350,7362],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.MemberTypes\n  id: MemberTypes\n  children:\n  - System.Reflection.MemberTypes.All\n  - System.Reflection.MemberTypes.Constructor\n  - System.Reflection.MemberTypes.Custom\n  - System.Reflection.MemberTypes.Event\n  - System.Reflection.MemberTypes.Field\n  - System.Reflection.MemberTypes.Method\n  - System.Reflection.MemberTypes.NestedType\n  - System.Reflection.MemberTypes.Property\n  - System.Reflection.MemberTypes.TypeInfo\n  langs:\n  - csharp\n  name: MemberTypes\n  nameWithType: MemberTypes\n  fullName: System.Reflection.MemberTypes\n  type: Enum\n  summary: Marks each type of member that is defined as a derived class of <xref:System.Reflection.MemberInfo>.\n  remarks: \"These enumeration values are returned by the following properties:  \\n  \\n-   <xref:System.Type.MemberType%2A?displayProperty=fullName>.  \\n  \\n-   <xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=fullName>.  \\n  \\n-   <xref:System.Reflection.ConstructorInfo?displayProperty=fullName>.  \\n  \\n-   <xref:System.Reflection.EventInfo?displayProperty=fullName>.  \\n  \\n-   <xref:System.Reflection.FieldInfo?displayProperty=fullName>.  \\n  \\n-   <xref:System.Reflection.MethodInfo?displayProperty=fullName>.  \\n  \\n-   <xref:System.Reflection.PropertyInfo?displayProperty=fullName>.  \\n  \\n To obtain the MemberTypes value for a type:  \\n  \\n1.  Get a <xref:System.Type> object that represents that type.  \\n  \\n2.  Retrieve the value of the <xref:System.Type.MemberType%2A?displayProperty=fullName> property.  \\n  \\n To get the MemberTypes values for the members of a type.:  \\n  \\n1.  Get a <xref:System.Type> object that represents that type.  \\n  \\n2.  Retrieve the <xref:System.Reflection.MemberInfo> array that represents the members of that type by calling the <xref:System.Type.GetMembers%2A?displayProperty=fullName> method.  \\n  \\n3.  Retrieve the value of the From the <xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=fullName> property for each member in the array.  A `switch` statement in C# or `Select Case` statement in Visual Basic is typically used to process member types.  \\n  \\n MemberTypes matches CorTypeAttr as defined in the corhdr.h file.\"\n  example:\n  - \"The following example displays the names of the members of the <xref:System.Reflection.ReflectionTypeLoadException> class and their associated member types.  \\n  \\n [!code-vb[System.Reflection.MemberTypes#1](~/add/codesnippet/visualbasic/t-system.reflection.memb_1.vb)]\\n [!code-cs[System.Reflection.MemberTypes#1](~/add/codesnippet/csharp/t-system.reflection.memb_1.cs)]\\n [!code-cpp[System.Reflection.MemberTypes#1](~/add/codesnippet/cpp/t-system.reflection.memb_1.cpp)]\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum MemberTypes\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Reflection.MemberTypes.All\n  id: All\n  parent: System.Reflection.MemberTypes\n  langs:\n  - csharp\n  name: All\n  nameWithType: MemberTypes.All\n  fullName: System.Reflection.MemberTypes.All\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Specifies all member types.\n  syntax:\n    content: All\n    return:\n      type: System.Reflection.MemberTypes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.MemberTypes.Constructor\n  id: Constructor\n  parent: System.Reflection.MemberTypes\n  langs:\n  - csharp\n  name: Constructor\n  nameWithType: MemberTypes.Constructor\n  fullName: System.Reflection.MemberTypes.Constructor\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Specifies that the member is a constructor\n  syntax:\n    content: Constructor\n    return:\n      type: System.Reflection.MemberTypes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.MemberTypes.Custom\n  id: Custom\n  parent: System.Reflection.MemberTypes\n  langs:\n  - csharp\n  name: Custom\n  nameWithType: MemberTypes.Custom\n  fullName: System.Reflection.MemberTypes.Custom\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Specifies that the member is a custom member type.\n  syntax:\n    content: Custom\n    return:\n      type: System.Reflection.MemberTypes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.MemberTypes.Event\n  id: Event\n  parent: System.Reflection.MemberTypes\n  langs:\n  - csharp\n  name: Event\n  nameWithType: MemberTypes.Event\n  fullName: System.Reflection.MemberTypes.Event\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Specifies that the member is an event.\n  syntax:\n    content: Event\n    return:\n      type: System.Reflection.MemberTypes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.MemberTypes.Field\n  id: Field\n  parent: System.Reflection.MemberTypes\n  langs:\n  - csharp\n  name: Field\n  nameWithType: MemberTypes.Field\n  fullName: System.Reflection.MemberTypes.Field\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Specifies that the member is a field.\n  syntax:\n    content: Field\n    return:\n      type: System.Reflection.MemberTypes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.MemberTypes.Method\n  id: Method\n  parent: System.Reflection.MemberTypes\n  langs:\n  - csharp\n  name: Method\n  nameWithType: MemberTypes.Method\n  fullName: System.Reflection.MemberTypes.Method\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Specifies that the member is a method.\n  syntax:\n    content: Method\n    return:\n      type: System.Reflection.MemberTypes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.MemberTypes.NestedType\n  id: NestedType\n  parent: System.Reflection.MemberTypes\n  langs:\n  - csharp\n  name: NestedType\n  nameWithType: MemberTypes.NestedType\n  fullName: System.Reflection.MemberTypes.NestedType\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Specifies that the member is a nested type.\n  syntax:\n    content: NestedType\n    return:\n      type: System.Reflection.MemberTypes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.MemberTypes.Property\n  id: Property\n  parent: System.Reflection.MemberTypes\n  langs:\n  - csharp\n  name: Property\n  nameWithType: MemberTypes.Property\n  fullName: System.Reflection.MemberTypes.Property\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Specifies that the member is a property.\n  syntax:\n    content: Property\n    return:\n      type: System.Reflection.MemberTypes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.MemberTypes.TypeInfo\n  id: TypeInfo\n  parent: System.Reflection.MemberTypes\n  langs:\n  - csharp\n  name: TypeInfo\n  nameWithType: MemberTypes.TypeInfo\n  fullName: System.Reflection.MemberTypes.TypeInfo\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Specifies that the member is a type.\n  syntax:\n    content: TypeInfo\n    return:\n      type: System.Reflection.MemberTypes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Reflection.MemberTypes.All\n  parent: System.Reflection.MemberTypes\n  isExternal: false\n  name: All\n  nameWithType: MemberTypes.All\n  fullName: System.Reflection.MemberTypes.All\n- uid: System.Reflection.MemberTypes\n  parent: System.Reflection\n  isExternal: false\n  name: MemberTypes\n  nameWithType: MemberTypes\n  fullName: System.Reflection.MemberTypes\n- uid: System.Reflection.MemberTypes.Constructor\n  parent: System.Reflection.MemberTypes\n  isExternal: false\n  name: Constructor\n  nameWithType: MemberTypes.Constructor\n  fullName: System.Reflection.MemberTypes.Constructor\n- uid: System.Reflection.MemberTypes.Custom\n  parent: System.Reflection.MemberTypes\n  isExternal: false\n  name: Custom\n  nameWithType: MemberTypes.Custom\n  fullName: System.Reflection.MemberTypes.Custom\n- uid: System.Reflection.MemberTypes.Event\n  parent: System.Reflection.MemberTypes\n  isExternal: false\n  name: Event\n  nameWithType: MemberTypes.Event\n  fullName: System.Reflection.MemberTypes.Event\n- uid: System.Reflection.MemberTypes.Field\n  parent: System.Reflection.MemberTypes\n  isExternal: false\n  name: Field\n  nameWithType: MemberTypes.Field\n  fullName: System.Reflection.MemberTypes.Field\n- uid: System.Reflection.MemberTypes.Method\n  parent: System.Reflection.MemberTypes\n  isExternal: false\n  name: Method\n  nameWithType: MemberTypes.Method\n  fullName: System.Reflection.MemberTypes.Method\n- uid: System.Reflection.MemberTypes.NestedType\n  parent: System.Reflection.MemberTypes\n  isExternal: false\n  name: NestedType\n  nameWithType: MemberTypes.NestedType\n  fullName: System.Reflection.MemberTypes.NestedType\n- uid: System.Reflection.MemberTypes.Property\n  parent: System.Reflection.MemberTypes\n  isExternal: false\n  name: Property\n  nameWithType: MemberTypes.Property\n  fullName: System.Reflection.MemberTypes.Property\n- uid: System.Reflection.MemberTypes.TypeInfo\n  parent: System.Reflection.MemberTypes\n  isExternal: false\n  name: TypeInfo\n  nameWithType: MemberTypes.TypeInfo\n  fullName: System.Reflection.MemberTypes.TypeInfo\n"}