{"nodes":[{"pos":[594,700],"content":"The exception that is thrown for internal inconsistencies that occur during XAML reading and XAML writing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception that is thrown for internal inconsistencies that occur during XAML reading and XAML writing.","pos":[0,106]}]},{"pos":[713,1938],"content":"This exception is usually thrown only when some aspect of the XAML reader or XAML writer system was extended by your code, and inconsistencies or implementation problems occurred that were passed on to the .NET Framework XAML Services system code. Exceptions that might originate from third parties, such as parsing XAML and encountering errors in the XAML, should not throw XamlInternalException, and should instead throw other exceptions such as <xref:System.Xaml.XamlParseException> or <xref:System.Xaml.XamlObjectWriterException>.       If you are writing code that extends .NET Framework XAML Services, in particular, if you are writing code for a XAML reader or XAML writer implementation, you should maintain this distinction between XamlInternalException and the other XAML-related exceptions. Your code should only throw XamlInternalException in cases where further extension of your class violates some design principle or implementation pattern that your callable code defines. Your code should throw other XAML-specific exceptions for exception cases where your XAML reader or XAML writer implementation is used without extension and is used to load third-party XAML, third-party XAML schema context, and so on.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This exception is usually thrown only when some aspect of the XAML reader or XAML writer system was extended by your code, and inconsistencies or implementation problems occurred that were passed on to the .NET Framework XAML Services system code. Exceptions that might originate from third parties, such as parsing XAML and encountering errors in the XAML, should not throw XamlInternalException, and should instead throw other exceptions such as <xref:System.Xaml.XamlParseException> or <xref:System.Xaml.XamlObjectWriterException>.       If you are writing code that extends .NET Framework XAML Services, in particular, if you are writing code for a XAML reader or XAML writer implementation, you should maintain this distinction between XamlInternalException and the other XAML-related exceptions. Your code should only throw XamlInternalException in cases where further extension of your class violates some design principle or implementation pattern that your callable code defines. Your code should throw other XAML-specific exceptions for exception cases where your XAML reader or XAML writer implementation is used without extension and is used to load third-party XAML, third-party XAML schema context, and so on.","pos":[0,1223],"nodes":[{"content":"This exception is usually thrown only when some aspect of the XAML reader or XAML writer system was extended by your code, and inconsistencies or implementation problems occurred that were passed on to the .NET Framework XAML Services system code.","pos":[0,247]},{"content":"Exceptions that might originate from third parties, such as parsing XAML and encountering errors in the XAML, should not throw XamlInternalException, and should instead throw other exceptions such as &lt;xref:System.Xaml.XamlParseException&gt; or &lt;xref:System.Xaml.XamlObjectWriterException&gt;.","pos":[248,534],"source":" Exceptions that might originate from third parties, such as parsing XAML and encountering errors in the XAML, should not throw XamlInternalException, and should instead throw other exceptions such as <xref:System.Xaml.XamlParseException> or <xref:System.Xaml.XamlObjectWriterException>."},{"content":"If you are writing code that extends .NET Framework XAML Services, in particular, if you are writing code for a XAML reader or XAML writer implementation, you should maintain this distinction between XamlInternalException and the other XAML-related exceptions.","pos":[541,801]},{"content":"Your code should only throw XamlInternalException in cases where further extension of your class violates some design principle or implementation pattern that your callable code defines.","pos":[802,988]},{"content":"Your code should throw other XAML-specific exceptions for exception cases where your XAML reader or XAML writer implementation is used without extension and is used to load third-party XAML, third-party XAML schema context, and so on.","pos":[989,1223]}]}]},{"pos":[2789,2940],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlInternalException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a system-supplied message that describes the error.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlInternalException\"></xref> class with a system-supplied message that describes the error."},{"pos":[3532,3677],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlInternalException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a specified message that describes the error.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlInternalException\"></xref> class with a specified message that describes the error."},{"pos":[3827,3868],"content":"The message that describes the exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message that describes the exception.","pos":[0,41]}]},{"pos":[4627,4743],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlInternalException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with serialized data.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlInternalException\"></xref> class with serialized data."},{"pos":[5018,5067],"content":"The object that holds the serialized object data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that holds the serialized object data.","pos":[0,49]}]},{"pos":[5163,5222],"content":"The contextual information about the source or destination.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contextual information about the source or destination.","pos":[0,59]}]},{"pos":[5803,6004],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlInternalException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a specified error message and a reference to the inner exception that is the cause of this exception.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlInternalException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception."},{"pos":[6180,6221],"content":"The message that describes the exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message that describes the exception.","pos":[0,41]}]},{"pos":[6295,6595],"content":"The exception that is the cause of the current exception. If the `innerException` parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the current exception is raised in a <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> block that handles the inner exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If the <ph id=\"ph1\">`innerException`</ph> parameter is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the current exception is raised in a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> block that handles the inner exception.","pos":[58,300],"source":" If the `innerException` parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the current exception is raised in a <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> block that handles the inner exception."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xaml.XamlInternalException\n  id: XamlInternalException\n  children:\n  - System.Xaml.XamlInternalException.#ctor\n  - System.Xaml.XamlInternalException.#ctor(System.String)\n  - System.Xaml.XamlInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Xaml.XamlInternalException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  name: XamlInternalException\n  nameWithType: XamlInternalException\n  fullName: System.Xaml.XamlInternalException\n  type: Class\n  summary: The exception that is thrown for internal inconsistencies that occur during XAML reading and XAML writing.\n  remarks: \"This exception is usually thrown only when some aspect of the XAML reader or XAML writer system was extended by your code, and inconsistencies or implementation problems occurred that were passed on to the .NET Framework XAML Services system code. Exceptions that might originate from third parties, such as parsing XAML and encountering errors in the XAML, should not throw XamlInternalException, and should instead throw other exceptions such as <xref:System.Xaml.XamlParseException> or <xref:System.Xaml.XamlObjectWriterException>.  \\n  \\n If you are writing code that extends .NET Framework XAML Services, in particular, if you are writing code for a XAML reader or XAML writer implementation, you should maintain this distinction between XamlInternalException and the other XAML-related exceptions. Your code should only throw XamlInternalException in cases where further extension of your class violates some design principle or implementation pattern that your callable code defines. Your code should throw other XAML-specific exceptions for exception cases where your XAML reader or XAML writer implementation is used without extension and is used to load third-party XAML, third-party XAML schema context, and so on.\"\n  syntax:\n    content: 'public class XamlInternalException : System.Xaml.XamlException'\n  inheritance:\n  - System.Exception\n  - System.Xaml.XamlException\n  implements: []\n  inheritedMembers:\n  - System.Xaml.XamlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Xaml.XamlException.LineNumber\n  - System.Xaml.XamlException.LinePosition\n  - System.Xaml.XamlException.Message\n  platform:\n  - net462\n- uid: System.Xaml.XamlInternalException.#ctor\n  id: '#ctor'\n  parent: System.Xaml.XamlInternalException\n  langs:\n  - csharp\n  name: XamlInternalException()\n  nameWithType: XamlInternalException.XamlInternalException()\n  fullName: System.Xaml.XamlInternalException.XamlInternalException()\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlInternalException\"></xref> class with a system-supplied message that describes the error.\n  syntax:\n    content: public XamlInternalException ();\n    parameters: []\n  overload: System.Xaml.XamlInternalException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlInternalException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Xaml.XamlInternalException\n  langs:\n  - csharp\n  name: XamlInternalException(String)\n  nameWithType: XamlInternalException.XamlInternalException(String)\n  fullName: System.Xaml.XamlInternalException.XamlInternalException(String)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlInternalException\"></xref> class with a specified message that describes the error.\n  syntax:\n    content: public XamlInternalException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that describes the exception.\n  overload: System.Xaml.XamlInternalException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Xaml.XamlInternalException\n  langs:\n  - csharp\n  name: XamlInternalException(SerializationInfo,StreamingContext)\n  nameWithType: XamlInternalException.XamlInternalException(SerializationInfo,StreamingContext)\n  fullName: System.Xaml.XamlInternalException.XamlInternalException(SerializationInfo,StreamingContext)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlInternalException\"></xref> class with serialized data.\n  syntax:\n    content: protected XamlInternalException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object that holds the serialized object data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The contextual information about the source or destination.\n  overload: System.Xaml.XamlInternalException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlInternalException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Xaml.XamlInternalException\n  langs:\n  - csharp\n  name: XamlInternalException(String,Exception)\n  nameWithType: XamlInternalException.XamlInternalException(String,Exception)\n  fullName: System.Xaml.XamlInternalException.XamlInternalException(String,Exception)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlInternalException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.\n  syntax:\n    content: public XamlInternalException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that describes the exception.\n    - id: innerException\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If the `innerException` parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, the current exception is raised in a <xref uid=\"langword_csharp_catch\" name=\"catch\" href=\"\"></xref> block that handles the inner exception.\n  overload: System.Xaml.XamlInternalException.#ctor*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Xaml.XamlException\n  isExternal: false\n  name: System.Xaml.XamlException\n- uid: System.Xaml.XamlInternalException.#ctor\n  parent: System.Xaml.XamlInternalException\n  isExternal: false\n  name: XamlInternalException()\n  nameWithType: XamlInternalException.XamlInternalException()\n  fullName: System.Xaml.XamlInternalException.XamlInternalException()\n- uid: System.Xaml.XamlInternalException.#ctor(System.String)\n  parent: System.Xaml.XamlInternalException\n  isExternal: false\n  name: XamlInternalException(String)\n  nameWithType: XamlInternalException.XamlInternalException(String)\n  fullName: System.Xaml.XamlInternalException.XamlInternalException(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xaml.XamlInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Xaml.XamlInternalException\n  isExternal: false\n  name: XamlInternalException(SerializationInfo,StreamingContext)\n  nameWithType: XamlInternalException.XamlInternalException(SerializationInfo,StreamingContext)\n  fullName: System.Xaml.XamlInternalException.XamlInternalException(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Xaml.XamlInternalException.#ctor(System.String,System.Exception)\n  parent: System.Xaml.XamlInternalException\n  isExternal: false\n  name: XamlInternalException(String,Exception)\n  nameWithType: XamlInternalException.XamlInternalException(String,Exception)\n  fullName: System.Xaml.XamlInternalException.XamlInternalException(String,Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Xaml.XamlInternalException.#ctor*\n  parent: System.Xaml.XamlInternalException\n  isExternal: false\n  name: XamlInternalException\n  nameWithType: XamlInternalException.XamlInternalException\n"}