{"nodes":[{"pos":[1069,1081],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[1118,1130],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[1825,1837],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3230,3242],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4142,4154],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n  id: Dictionary`2.ValueCollection.Enumerator\n  children:\n  - System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Current\n  - System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Dispose\n  - System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.MoveNext\n  - System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current\n  - System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset\n  langs:\n  - csharp\n  name: Dictionary<TKey,TValue>+ValueCollection+Enumerator\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection+Enumerator\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection+Enumerator\n  type: Struct\n  syntax:\n    content: 'public struct Dictionary<TKey,TValue>.ValueCollection.Enumerator : System.Collections.Generic.IEnumerator<TValue>'\n    typeParameters:\n    - id: TKey\n      description: To be added.\n    - id: TValue\n      description: To be added.\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.Collections.Generic.IEnumerator<TValue>\n  platform:\n  - net462\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Current\n  id: Current\n  parent: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n  langs:\n  - csharp\n  name: Current\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection+Enumerator.Current\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection+Enumerator.Current\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public TValue Current { get; }\n    return:\n      type: TValue\n      description: To be added.\n  overload: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Current*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Dispose\n  id: Dispose\n  parent: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection+Enumerator.Dispose()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection+Enumerator.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.MoveNext\n  id: MoveNext\n  parent: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n  langs:\n  - csharp\n  name: MoveNext()\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection+Enumerator.MoveNext()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection+Enumerator.MoveNext()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool MoveNext ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.MoveNext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current\n  id: System#Collections#IEnumerator#Current\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n  langs:\n  - csharp\n  name: System.Collections.IEnumerator.Current\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection+Enumerator.System.Collections.IEnumerator.Current\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection+Enumerator.System.Collections.IEnumerator.Current\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: object System.Collections.IEnumerator.Current { get; }\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset\n  id: System#Collections#IEnumerator#Reset\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n  langs:\n  - csharp\n  name: System.Collections.IEnumerator.Reset()\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection+Enumerator.System.Collections.IEnumerator.Reset()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection+Enumerator.System.Collections.IEnumerator.Reset()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: void IEnumerator.Reset ();\n    parameters: []\n  overload: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Current\n  parent: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n  isExternal: false\n  name: Current\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection+Enumerator.Current\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection+Enumerator.Current\n- uid: TValue\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Dispose\n  parent: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n  isExternal: false\n  name: Dispose()\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection+Enumerator.Dispose()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection+Enumerator.Dispose()\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.MoveNext\n  parent: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n  isExternal: false\n  name: MoveNext()\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection+Enumerator.MoveNext()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection+Enumerator.MoveNext()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current\n  parent: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n  isExternal: false\n  name: System.Collections.IEnumerator.Current\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection+Enumerator.System.Collections.IEnumerator.Current\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection+Enumerator.System.Collections.IEnumerator.Current\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset\n  parent: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n  isExternal: false\n  name: System.Collections.IEnumerator.Reset()\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection+Enumerator.System.Collections.IEnumerator.Reset()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection+Enumerator.System.Collections.IEnumerator.Reset()\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Current*\n  parent: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n  isExternal: false\n  name: Current\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection+Enumerator.Current\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Dispose*\n  parent: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n  isExternal: false\n  name: Dispose\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection+Enumerator.Dispose\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.MoveNext*\n  parent: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n  isExternal: false\n  name: MoveNext\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection+Enumerator.MoveNext\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current*\n  parent: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n  isExternal: false\n  name: System.Collections.IEnumerator.Current\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection+Enumerator.System.Collections.IEnumerator.Current\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset*\n  parent: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator\n  isExternal: false\n  name: System.Collections.IEnumerator.Reset\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection+Enumerator.System.Collections.IEnumerator.Reset\n"}