{"nodes":[{"pos":[1301,1426],"content":"Stores an ordered pair of integers, which specify a &lt;xref:System.Drawing.Size.Height<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Drawing.Size.Width<ept id=\"p1\">*</ept>&gt;.","needQuote":true,"needEscape":true,"source":"Stores an ordered pair of integers, which specify a <xref:System.Drawing.Size.Height*> and <xref:System.Drawing.Size.Width*>."},{"pos":[1438,2220],"content":"The Size class is used to specify a height and width through the <xref:System.Drawing.Rectangle.Size%2A> property for  <xref:System.Drawing.Rectangle>, <xref:System.Drawing.RectangleF>, <xref:System.Drawing.Image>, <xref:System.Drawing.Icon> and other graphics classes. You can perform operations on a Size by using the overloaded operators such as <xref:System.Drawing.Size.op_Addition%2A>, <xref:System.Drawing.Size.op_Subtraction%2A>, and <xref:System.Drawing.Size.op_Equality%2A>. The unit for the <xref:System.Drawing.Size.Height%2A> and <xref:System.Drawing.Size.Width%2A> of the Size structure depend on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object that is used to draw.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Size class is used to specify a height and width through the <xref:System.Drawing.Rectangle.Size%2A> property for  <xref:System.Drawing.Rectangle>, <xref:System.Drawing.RectangleF>, <xref:System.Drawing.Image>, <xref:System.Drawing.Icon> and other graphics classes. You can perform operations on a Size by using the overloaded operators such as <xref:System.Drawing.Size.op_Addition%2A>, <xref:System.Drawing.Size.op_Subtraction%2A>, and <xref:System.Drawing.Size.op_Equality%2A>. The unit for the <xref:System.Drawing.Size.Height%2A> and <xref:System.Drawing.Size.Width%2A> of the Size structure depend on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object that is used to draw.","pos":[0,782],"nodes":[{"content":"The Size class is used to specify a height and width through the &lt;xref:System.Drawing.Rectangle.Size%2A&gt; property for  &lt;xref:System.Drawing.Rectangle&gt;, &lt;xref:System.Drawing.RectangleF&gt;, &lt;xref:System.Drawing.Image&gt;, &lt;xref:System.Drawing.Icon&gt; and other graphics classes.","pos":[0,269],"source":"The Size class is used to specify a height and width through the <xref:System.Drawing.Rectangle.Size%2A> property for  <xref:System.Drawing.Rectangle>, <xref:System.Drawing.RectangleF>, <xref:System.Drawing.Image>, <xref:System.Drawing.Icon> and other graphics classes."},{"content":"You can perform operations on a Size by using the overloaded operators such as &lt;xref:System.Drawing.Size.op_Addition%2A&gt;, &lt;xref:System.Drawing.Size.op_Subtraction%2A&gt;, and &lt;xref:System.Drawing.Size.op_Equality%2A&gt;.","pos":[270,484],"source":" You can perform operations on a Size by using the overloaded operators such as <xref:System.Drawing.Size.op_Addition%2A>, <xref:System.Drawing.Size.op_Subtraction%2A>, and <xref:System.Drawing.Size.op_Equality%2A>."},{"content":"The unit for the &lt;xref:System.Drawing.Size.Height%2A&gt; and &lt;xref:System.Drawing.Size.Width%2A&gt; of the Size structure depend on the &lt;xref:System.Drawing.Graphics.PageUnit%2A&gt; and &lt;xref:System.Drawing.Graphics.PageScale%2A&gt; settings for the &lt;xref:System.Drawing.Graphics&gt; object that is used to draw.","pos":[485,782],"source":" The unit for the <xref:System.Drawing.Size.Height%2A> and <xref:System.Drawing.Size.Width%2A> of the Size structure depend on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object that is used to draw."}]}]},{"pos":[2818,2974],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure from the specified <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.Size\"></xref> structure from the specified <xref href=\"System.Drawing.Point\"></xref> structure."},{"pos":[3118,3255],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure from which to initialize this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Point\"></xref> structure from which to initialize this <xref href=\"System.Drawing.Size\"></xref> structure."},{"pos":[3693,3808],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure from the specified dimensions.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.Size\"></xref> structure from the specified dimensions."},{"pos":[4677,4749],"content":"The width component of the new <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The width component of the new <xref href=\"System.Drawing.Size\"></xref>."},{"pos":[4811,4884],"content":"The height component of the new <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The height component of the new <xref href=\"System.Drawing.Size\"></xref>."},{"pos":[5330,5500],"content":"Adds the width and height of one <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to the width and height of another <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Adds the width and height of one <xref href=\"System.Drawing.Size\"></xref> structure to the width and height of another <xref href=\"System.Drawing.Size\"></xref> structure."},{"pos":[6301,6369],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to add.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.Drawing.Size\"></xref> structure to add."},{"pos":[6435,6504],"content":"The second <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to add.","needQuote":true,"needEscape":true,"source":"The second <xref href=\"System.Drawing.Size\"></xref> structure to add."},{"pos":[6568,6666],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that is the result of the addition operation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Size\"></xref> structure that is the result of the addition operation."},{"pos":[7080,7326],"content":"Converts the specified <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to a <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure by rounding the values of the <bpt id=\"p3\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure to the next higher integer values.","needQuote":true,"needEscape":true,"source":"Converts the specified <xref href=\"System.Drawing.SizeF\"></xref> structure to a <xref href=\"System.Drawing.Size\"></xref> structure by rounding the values of the <xref href=\"System.Drawing.Size\"></xref> structure to the next higher integer values."},{"pos":[7506,7573],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to convert.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.SizeF\"></xref> structure to convert."},{"pos":[7637,7716],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure this method converts to.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Size\"></xref> structure this method converts to."},{"pos":[8058,8211],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that has a &lt;xref:System.Drawing.Size.Height<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.Drawing.Size.Width<ept id=\"p2\">*</ept>&gt; value of 0.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Drawing.Size\"></xref> structure that has a <xref:System.Drawing.Size.Height*> and <xref:System.Drawing.Size.Width*> value of 0."},{"pos":[8348,8360],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8721,8903],"content":"Tests to see whether the specified object is a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure with the same dimensions as this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Tests to see whether the specified object is a <xref href=\"System.Drawing.Size\"></xref> structure with the same dimensions as this <xref href=\"System.Drawing.Size\"></xref> structure."},{"pos":[9044,9077],"content":"The <xref:System.Object> to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to test.","pos":[0,33],"source":"The <xref:System.Object> to test."}]},{"pos":[9136,9421],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a <bpt id=\"p3\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and has the same width and height as this <bpt id=\"p4\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is a <xref href=\"System.Drawing.Size\"></xref> and has the same width and height as this <xref href=\"System.Drawing.Size\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9799,9879],"content":"Returns a hash code for this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Returns a hash code for this <xref href=\"System.Drawing.Size\"></xref> structure."},{"pos":[9891,10191],"content":"You should avoid depending on GetHashCode for unique values, as two <xref:System.Drawing.Size> objects with the same values for their <xref:System.Drawing.Size.Width%2A> and <xref:System.Drawing.Size.Height%2A> properties may return the same hash code. This behavior could change in a future release.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You should avoid depending on GetHashCode for unique values, as two <xref:System.Drawing.Size> objects with the same values for their <xref:System.Drawing.Size.Width%2A> and <xref:System.Drawing.Size.Height%2A> properties may return the same hash code. This behavior could change in a future release.","pos":[0,300],"nodes":[{"content":"You should avoid depending on GetHashCode for unique values, as two &lt;xref:System.Drawing.Size&gt; objects with the same values for their &lt;xref:System.Drawing.Size.Width%2A&gt; and &lt;xref:System.Drawing.Size.Height%2A&gt; properties may return the same hash code.","pos":[0,252],"source":"You should avoid depending on GetHashCode for unique values, as two <xref:System.Drawing.Size> objects with the same values for their <xref:System.Drawing.Size.Width%2A> and <xref:System.Drawing.Size.Height%2A> properties may return the same hash code."},{"content":"This behavior could change in a future release.","pos":[253,300]}]}]},{"pos":[10326,10431],"content":"An integer value that specifies a hash value for this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"An integer value that specifies a hash value for this <xref href=\"System.Drawing.Size\"></xref> structure."},{"pos":[10785,10880],"content":"Gets or sets the vertical component of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Gets or sets the vertical component of this <xref href=\"System.Drawing.Size\"></xref> structure."},{"pos":[10892,11181],"content":"The unit for the Height and <xref:System.Drawing.Size.Width%2A> of the <xref:System.Drawing.Size> structure depend on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object that is used to draw.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The unit for the Height and &lt;xref:System.Drawing.Size.Width%2A&gt; of the &lt;xref:System.Drawing.Size&gt; structure depend on the &lt;xref:System.Drawing.Graphics.PageUnit%2A&gt; and &lt;xref:System.Drawing.Graphics.PageScale%2A&gt; settings for the &lt;xref:System.Drawing.Graphics&gt; object that is used to draw.","pos":[0,289],"source":"The unit for the Height and <xref:System.Drawing.Size.Width%2A> of the <xref:System.Drawing.Size> structure depend on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object that is used to draw."}]},{"pos":[11293,11405],"content":"The vertical component of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure, typically measured in pixels.","needQuote":true,"needEscape":true,"source":"The vertical component of this <xref href=\"System.Drawing.Size\"></xref> structure, typically measured in pixels."},{"pos":[11759,11855],"content":"Tests whether this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure has width and height of 0.","needQuote":true,"needEscape":true,"source":"Tests whether this <xref href=\"System.Drawing.Size\"></xref> structure has width and height of 0."},{"pos":[11966,12218],"content":"This property returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure has both a width and height of 0; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This property returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when this <xref href=\"System.Drawing.Size\"></xref> structure has both a width and height of 0; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12708,12878],"content":"Adds the width and height of one <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to the width and height of another <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Adds the width and height of one <xref href=\"System.Drawing.Size\"></xref> structure to the width and height of another <xref href=\"System.Drawing.Size\"></xref> structure."},{"pos":[13745,13803],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.Drawing.Size\"></xref> to add."},{"pos":[13869,13928],"content":"The second <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The second <xref href=\"System.Drawing.Size\"></xref> to add."},{"pos":[13992,14090],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that is the result of the addition operation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Size\"></xref> structure that is the result of the addition operation."},{"pos":[14584,14664],"content":"Tests whether two <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures are equal.","needQuote":true,"needEscape":true,"source":"Tests whether two <xref href=\"System.Drawing.Size\"></xref> structures are equal."},{"pos":[15768,15865],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure on the left side of the equality operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Size\"></xref> structure on the left side of the equality operator."},{"pos":[15931,16024],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure on the right of the equality operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Size\"></xref> structure on the right of the equality operator."},{"pos":[16083,16288],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">sz1</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">sz2</ph><ept id=\"p3\">&lt;/code&gt;</ept> have equal width and height; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>sz1</code> and <code>sz2</code> have equal width and height; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16944,16956],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17021,17033],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17635,17647],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17712,17724],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18228,18312],"content":"Tests whether two <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures are different.","needQuote":true,"needEscape":true,"source":"Tests whether two <xref href=\"System.Drawing.Size\"></xref> structures are different."},{"pos":[18502,18596],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure on the left of the inequality operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Size\"></xref> structure on the left of the inequality operator."},{"pos":[18662,18757],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure on the right of the inequality operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Size\"></xref> structure on the right of the inequality operator."},{"pos":[18816,19066],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">sz1</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">sz2</ph><ept id=\"p3\">&lt;/code&gt;</ept> differ either in width or height; <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> if <bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph3\">sz1</ph><ept id=\"p5\">&lt;/code&gt;</ept> and <bpt id=\"p6\">&lt;code&gt;</bpt><ph id=\"ph4\">sz2</ph><ept id=\"p6\">&lt;/code&gt;</ept> are equal.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>sz1</code> and <code>sz2</code> differ either in width or height; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if <code>sz1</code> and <code>sz2</code> are equal."},{"pos":[19577,19754],"content":"Subtracts the width and height of one <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure from the width and height of another <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Subtracts the width and height of one <xref href=\"System.Drawing.Size\"></xref> structure from the width and height of another <xref href=\"System.Drawing.Size\"></xref> structure."},{"pos":[20639,20739],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure on the left side of the subtraction operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Size\"></xref> structure on the left side of the subtraction operator."},{"pos":[20805,20906],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure on the right side of the subtraction operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Size\"></xref> structure on the right side of the subtraction operator."},{"pos":[20970,21071],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that is the result of the subtraction operation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Size\"></xref> structure that is the result of the subtraction operation."},{"pos":[21486,21729],"content":"Converts the specified <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to a <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure by rounding the values of the <bpt id=\"p3\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure to the nearest integer values.","needQuote":true,"needEscape":true,"source":"Converts the specified <xref href=\"System.Drawing.SizeF\"></xref> structure to a <xref href=\"System.Drawing.Size\"></xref> structure by rounding the values of the <xref href=\"System.Drawing.SizeF\"></xref> structure to the nearest integer values."},{"pos":[22685,22752],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to convert.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.SizeF\"></xref> structure to convert."},{"pos":[22816,22895],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure this method converts to.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Size\"></xref> structure this method converts to."},{"pos":[23366,23543],"content":"Subtracts the width and height of one <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure from the width and height of another <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Subtracts the width and height of one <xref href=\"System.Drawing.Size\"></xref> structure from the width and height of another <xref href=\"System.Drawing.Size\"></xref> structure."},{"pos":[24359,24459],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure on the left side of the subtraction operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Size\"></xref> structure on the left side of the subtraction operator."},{"pos":[24525,24626],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure on the right side of the subtraction operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Size\"></xref> structure on the right side of the subtraction operator."},{"pos":[24690,24789],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that is a result of the subtraction operation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Size\"></xref> structure that is a result of the subtraction operation."},{"pos":[25154,25258],"content":"Creates a human-readable string that represents this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Creates a human-readable string that represents this <xref href=\"System.Drawing.Size\"></xref> structure."},{"pos":[25394,25465],"content":"A string that represents this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A string that represents this <xref href=\"System.Drawing.Size\"></xref>."},{"pos":[25889,26137],"content":"Converts the specified <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to a <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure by truncating the values of the <bpt id=\"p3\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure to the next lower integer values.","needQuote":true,"needEscape":true,"source":"Converts the specified <xref href=\"System.Drawing.SizeF\"></xref> structure to a <xref href=\"System.Drawing.Size\"></xref> structure by truncating the values of the <xref href=\"System.Drawing.SizeF\"></xref> structure to the next lower integer values."},{"pos":[27096,27163],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to convert.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.SizeF\"></xref> structure to convert."},{"pos":[27227,27306],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure this method converts to.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Size\"></xref> structure this method converts to."},{"pos":[27652,27749],"content":"Gets or sets the horizontal component of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Gets or sets the horizontal component of this <xref href=\"System.Drawing.Size\"></xref> structure."},{"pos":[27761,28042],"content":"The unit for the <xref:System.Drawing.Size.Height%2A> and Width of the <xref:System.Drawing.Size> structure depend on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object used to draw.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The unit for the &lt;xref:System.Drawing.Size.Height%2A&gt; and Width of the &lt;xref:System.Drawing.Size&gt; structure depend on the &lt;xref:System.Drawing.Graphics.PageUnit%2A&gt; and &lt;xref:System.Drawing.Graphics.PageScale%2A&gt; settings for the &lt;xref:System.Drawing.Graphics&gt; object used to draw.","pos":[0,281],"source":"The unit for the <xref:System.Drawing.Size.Height%2A> and Width of the <xref:System.Drawing.Size> structure depend on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object used to draw."}]},{"pos":[28153,28267],"content":"The horizontal component of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure, typically measured in pixels.","needQuote":true,"needEscape":true,"source":"The horizontal component of this <xref href=\"System.Drawing.Size\"></xref> structure, typically measured in pixels."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.Size\n  id: Size\n  children:\n  - System.Drawing.Size.#ctor(System.Drawing.Point)\n  - System.Drawing.Size.#ctor(System.Int32,System.Int32)\n  - System.Drawing.Size.Add(System.Drawing.Size,System.Drawing.Size)\n  - System.Drawing.Size.Ceiling(System.Drawing.SizeF)\n  - System.Drawing.Size.Empty\n  - System.Drawing.Size.Equals(System.Object)\n  - System.Drawing.Size.GetHashCode\n  - System.Drawing.Size.Height\n  - System.Drawing.Size.IsEmpty\n  - System.Drawing.Size.op_Addition(System.Drawing.Size,System.Drawing.Size)\n  - System.Drawing.Size.op_Equality(System.Drawing.Size,System.Drawing.Size)\n  - System.Drawing.Size.op_Explicit(System.Drawing.Size to System.Drawing.Point)\n  - System.Drawing.Size.op_Implicit(System.Drawing.Size)\n  - System.Drawing.Size.op_Inequality(System.Drawing.Size,System.Drawing.Size)\n  - System.Drawing.Size.op_Subtraction(System.Drawing.Size,System.Drawing.Size)\n  - System.Drawing.Size.Round(System.Drawing.SizeF)\n  - System.Drawing.Size.Subtract(System.Drawing.Size,System.Drawing.Size)\n  - System.Drawing.Size.ToString\n  - System.Drawing.Size.Truncate(System.Drawing.SizeF)\n  - System.Drawing.Size.Width\n  langs:\n  - csharp\n  name: Size\n  nameWithType: Size\n  fullName: System.Drawing.Size\n  type: Struct\n  summary: Stores an ordered pair of integers, which specify a <xref:System.Drawing.Size.Height*> and <xref:System.Drawing.Size.Width*>.\n  remarks: The Size class is used to specify a height and width through the <xref:System.Drawing.Rectangle.Size%2A> property for  <xref:System.Drawing.Rectangle>, <xref:System.Drawing.RectangleF>, <xref:System.Drawing.Image>, <xref:System.Drawing.Icon> and other graphics classes. You can perform operations on a Size by using the overloaded operators such as <xref:System.Drawing.Size.op_Addition%2A>, <xref:System.Drawing.Size.op_Subtraction%2A>, and <xref:System.Drawing.Size.op_Equality%2A>. The unit for the <xref:System.Drawing.Size.Height%2A> and <xref:System.Drawing.Size.Width%2A> of the Size structure depend on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object that is used to draw.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Drawing.SizeConverter))]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct Size\n  inheritance:\n  - System.ValueType\n  implements: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.#ctor(System.Drawing.Point)\n  id: '#ctor(System.Drawing.Point)'\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: Size(Point)\n  nameWithType: Size.Size(Point)\n  fullName: System.Drawing.Size.Size(Point)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Size\"></xref> structure from the specified <xref href=\"System.Drawing.Point\"></xref> structure.\n  syntax:\n    content: public Size (System.Drawing.Point pt);\n    parameters:\n    - id: pt\n      type: System.Drawing.Point\n      description: The <xref href=\"System.Drawing.Point\"></xref> structure from which to initialize this <xref href=\"System.Drawing.Size\"></xref> structure.\n  overload: System.Drawing.Size.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.#ctor(System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32)'\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: Size(Int32,Int32)\n  nameWithType: Size.Size(Int32,Int32)\n  fullName: System.Drawing.Size.Size(Int32,Int32)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Size\"></xref> structure from the specified dimensions.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Drawing.Point.%23ctor%2A?displayProperty=fullName> and Size constructors and the <xref:System.Drawing.ContentAlignment?displayProperty=fullName> enumeration. To run this example, paste this code into a Windows Form that contains a label named `Label1` and call the `IntializeLabel1` method in the form's constructor.  \\n  \\n [!code-cs[System.Drawing.PointsAndSizes#7](~/add/codesnippet/csharp/m-system.drawing.size.sh_1.cs)]\\n [!code-cpp[System.Drawing.PointsAndSizes#7](~/add/codesnippet/cpp/m-system.drawing.size.sh_1.cpp)]\\n [!code-vb[System.Drawing.PointsAndSizes#7](~/add/codesnippet/visualbasic/m-system.drawing.size.sh_1.vb)]\"\n  syntax:\n    content: public Size (int width, int height);\n    parameters:\n    - id: width\n      type: System.Int32\n      description: The width component of the new <xref href=\"System.Drawing.Size\"></xref>.\n    - id: height\n      type: System.Int32\n      description: The height component of the new <xref href=\"System.Drawing.Size\"></xref>.\n  overload: System.Drawing.Size.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.Add(System.Drawing.Size,System.Drawing.Size)\n  id: Add(System.Drawing.Size,System.Drawing.Size)\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: Add(Size,Size)\n  nameWithType: Size.Add(Size,Size)\n  fullName: System.Drawing.Size.Add(Size,Size)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Adds the width and height of one <xref href=\"System.Drawing.Size\"></xref> structure to the width and height of another <xref href=\"System.Drawing.Size\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the Add method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `AddSizes` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-vb[System.Drawing.MiscWhidbeySnippets#11](~/add/codesnippet/visualbasic/m-system.drawing.size.ad_1.vb)]\\n [!code-cs[System.Drawing.MiscWhidbeySnippets#11](~/add/codesnippet/csharp/m-system.drawing.size.ad_1.cs)]\"\n  syntax:\n    content: public static System.Drawing.Size Add (System.Drawing.Size sz1, System.Drawing.Size sz2);\n    parameters:\n    - id: sz1\n      type: System.Drawing.Size\n      description: The first <xref href=\"System.Drawing.Size\"></xref> structure to add.\n    - id: sz2\n      type: System.Drawing.Size\n      description: The second <xref href=\"System.Drawing.Size\"></xref> structure to add.\n    return:\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> structure that is the result of the addition operation.\n  overload: System.Drawing.Size.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.Ceiling(System.Drawing.SizeF)\n  id: Ceiling(System.Drawing.SizeF)\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: Ceiling(SizeF)\n  nameWithType: Size.Ceiling(SizeF)\n  fullName: System.Drawing.Size.Ceiling(SizeF)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts the specified <xref href=\"System.Drawing.SizeF\"></xref> structure to a <xref href=\"System.Drawing.Size\"></xref> structure by rounding the values of the <xref href=\"System.Drawing.Size\"></xref> structure to the next higher integer values.\n  syntax:\n    content: public static System.Drawing.Size Ceiling (System.Drawing.SizeF value);\n    parameters:\n    - id: value\n      type: System.Drawing.SizeF\n      description: The <xref href=\"System.Drawing.SizeF\"></xref> structure to convert.\n    return:\n      type: System.Drawing.Size\n      description: The <xref href=\"System.Drawing.Size\"></xref> structure this method converts to.\n  overload: System.Drawing.Size.Ceiling*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.Empty\n  id: Empty\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: Size.Empty\n  fullName: System.Drawing.Size.Empty\n  type: Field\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets a <xref href=\"System.Drawing.Size\"></xref> structure that has a <xref:System.Drawing.Size.Height*> and <xref:System.Drawing.Size.Width*> value of 0.\n  syntax:\n    content: public static readonly System.Drawing.Size Empty;\n    return:\n      type: System.Drawing.Size\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Size.Equals(Object)\n  fullName: System.Drawing.Size.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Tests to see whether the specified object is a <xref href=\"System.Drawing.Size\"></xref> structure with the same dimensions as this <xref href=\"System.Drawing.Size\"></xref> structure.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The <xref:System.Object> to test.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is a <xref href=\"System.Drawing.Size\"></xref> and has the same width and height as this <xref href=\"System.Drawing.Size\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.Size.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.GetHashCode\n  id: GetHashCode\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Size.GetHashCode()\n  fullName: System.Drawing.Size.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns a hash code for this <xref href=\"System.Drawing.Size\"></xref> structure.\n  remarks: You should avoid depending on GetHashCode for unique values, as two <xref:System.Drawing.Size> objects with the same values for their <xref:System.Drawing.Size.Width%2A> and <xref:System.Drawing.Size.Height%2A> properties may return the same hash code. This behavior could change in a future release.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An integer value that specifies a hash value for this <xref href=\"System.Drawing.Size\"></xref> structure.\n  overload: System.Drawing.Size.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.Height\n  id: Height\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: Height\n  nameWithType: Size.Height\n  fullName: System.Drawing.Size.Height\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets or sets the vertical component of this <xref href=\"System.Drawing.Size\"></xref> structure.\n  remarks: The unit for the Height and <xref:System.Drawing.Size.Width%2A> of the <xref:System.Drawing.Size> structure depend on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object that is used to draw.\n  syntax:\n    content: public int Height { get; set; }\n    return:\n      type: System.Int32\n      description: The vertical component of this <xref href=\"System.Drawing.Size\"></xref> structure, typically measured in pixels.\n  overload: System.Drawing.Size.Height*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.IsEmpty\n  id: IsEmpty\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: IsEmpty\n  nameWithType: Size.IsEmpty\n  fullName: System.Drawing.Size.IsEmpty\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Tests whether this <xref href=\"System.Drawing.Size\"></xref> structure has width and height of 0.\n  syntax:\n    content: public bool IsEmpty { get; }\n    return:\n      type: System.Boolean\n      description: This property returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when this <xref href=\"System.Drawing.Size\"></xref> structure has both a width and height of 0; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.Size.IsEmpty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.op_Addition(System.Drawing.Size,System.Drawing.Size)\n  id: op_Addition(System.Drawing.Size,System.Drawing.Size)\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: op_Addition(Size,Size)\n  nameWithType: Size.op_Addition(Size,Size)\n  fullName: System.Drawing.Size.op_Addition(Size,Size)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Adds the width and height of one <xref href=\"System.Drawing.Size\"></xref> structure to the width and height of another <xref href=\"System.Drawing.Size\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the Addition operator. The example is designed to be used with Windows Forms. To run this example, paste it into a form that contains a button named `addButton` and associate the `addButton_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \\n  \\n [!code-cs[System.Drawing.PointsAndSizes#4](~/add/codesnippet/csharp/m-system.drawing.size.op_2_1.cs)]\\n [!code-cpp[System.Drawing.PointsAndSizes#4](~/add/codesnippet/cpp/m-system.drawing.size.op_2_1.cpp)]\\n [!code-vb[System.Drawing.PointsAndSizes#4](~/add/codesnippet/visualbasic/m-system.drawing.size.op_2_1.vb)]\"\n  syntax:\n    content: public static System.Drawing.Size op_Addition (System.Drawing.Size sz1, System.Drawing.Size sz2);\n    parameters:\n    - id: sz1\n      type: System.Drawing.Size\n      description: The first <xref href=\"System.Drawing.Size\"></xref> to add.\n    - id: sz2\n      type: System.Drawing.Size\n      description: The second <xref href=\"System.Drawing.Size\"></xref> to add.\n    return:\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> structure that is the result of the addition operation.\n  overload: System.Drawing.Size.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.op_Equality(System.Drawing.Size,System.Drawing.Size)\n  id: op_Equality(System.Drawing.Size,System.Drawing.Size)\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: op_Equality(Size,Size)\n  nameWithType: Size.op_Equality(Size,Size)\n  fullName: System.Drawing.Size.op_Equality(Size,Size)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Tests whether two <xref href=\"System.Drawing.Size\"></xref> structures are equal.\n  remarks: ''\n  example:\n  - \"The following code example creates points and sizes by using several of the overloaded operators defined for these types. It also demonstrates how to use the <xref:System.Drawing.SystemPens> class.  \\n  \\n This example is designed to be used with Windows Forms. Create a form that contains a <xref:System.Windows.Forms.Button> named `subtractButton`. Paste the code into the form and call the `CreatePointsAndSizes` method from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-cs[System.Drawing.PointsAndSizes#1](~/add/codesnippet/csharp/m-system.drawing.size.op_0_1.cs)]\\n [!code-cpp[System.Drawing.PointsAndSizes#1](~/add/codesnippet/cpp/m-system.drawing.size.op_0_1.cpp)]\\n [!code-vb[System.Drawing.PointsAndSizes#1](~/add/codesnippet/visualbasic/m-system.drawing.size.op_0_1.vb)]\"\n  syntax:\n    content: public static bool op_Equality (System.Drawing.Size sz1, System.Drawing.Size sz2);\n    parameters:\n    - id: sz1\n      type: System.Drawing.Size\n      description: The <xref href=\"System.Drawing.Size\"></xref> structure on the left side of the equality operator.\n    - id: sz2\n      type: System.Drawing.Size\n      description: The <xref href=\"System.Drawing.Size\"></xref> structure on the right of the equality operator.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>sz1</code> and <code>sz2</code> have equal width and height; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.Size.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.op_Explicit(System.Drawing.Size to System.Drawing.Point)\n  id: op_Explicit(System.Drawing.Size to System.Drawing.Point)\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: op_Explicit(Size)\n  nameWithType: Size.op_Explicit(Size)\n  fullName: System.Drawing.Size.op_Explicit(Size)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  syntax:\n    content: public static System.Drawing.Point op_Explicit (System.Drawing.Size size);\n    parameters:\n    - id: size\n      type: System.Drawing.Size\n      description: To be added.\n    return:\n      type: System.Drawing.Point\n      description: To be added.\n  overload: System.Drawing.Size.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.op_Implicit(System.Drawing.Size)\n  id: op_Implicit(System.Drawing.Size)\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: op_Implicit(Size)\n  nameWithType: Size.op_Implicit(Size)\n  fullName: System.Drawing.Size.op_Implicit(Size)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  syntax:\n    content: public static System.Drawing.SizeF op_Implicit (System.Drawing.Size p);\n    parameters:\n    - id: p\n      type: System.Drawing.Size\n      description: To be added.\n    return:\n      type: System.Drawing.SizeF\n      description: To be added.\n  overload: System.Drawing.Size.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.op_Inequality(System.Drawing.Size,System.Drawing.Size)\n  id: op_Inequality(System.Drawing.Size,System.Drawing.Size)\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: op_Inequality(Size,Size)\n  nameWithType: Size.op_Inequality(Size,Size)\n  fullName: System.Drawing.Size.op_Inequality(Size,Size)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Tests whether two <xref href=\"System.Drawing.Size\"></xref> structures are different.\n  syntax:\n    content: public static bool op_Inequality (System.Drawing.Size sz1, System.Drawing.Size sz2);\n    parameters:\n    - id: sz1\n      type: System.Drawing.Size\n      description: The <xref href=\"System.Drawing.Size\"></xref> structure on the left of the inequality operator.\n    - id: sz2\n      type: System.Drawing.Size\n      description: The <xref href=\"System.Drawing.Size\"></xref> structure on the right of the inequality operator.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>sz1</code> and <code>sz2</code> differ either in width or height; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if <code>sz1</code> and <code>sz2</code> are equal.\n  overload: System.Drawing.Size.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.op_Subtraction(System.Drawing.Size,System.Drawing.Size)\n  id: op_Subtraction(System.Drawing.Size,System.Drawing.Size)\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: op_Subtraction(Size,Size)\n  nameWithType: Size.op_Subtraction(Size,Size)\n  fullName: System.Drawing.Size.op_Subtraction(Size,Size)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Subtracts the width and height of one <xref href=\"System.Drawing.Size\"></xref> structure from the width and height of another <xref href=\"System.Drawing.Size\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the Subtraction operator. The example is designed to be used with Windows Forms. To run the example, paste it into a form that contains a button named `subtractionButton` and associate the `subtractButton_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \\n  \\n [!code-cs[System.Drawing.PointsAndSizes#2](~/add/codesnippet/csharp/m-system.drawing.size.op_1_1.cs)]\\n [!code-cpp[System.Drawing.PointsAndSizes#2](~/add/codesnippet/cpp/m-system.drawing.size.op_1_1.cpp)]\\n [!code-vb[System.Drawing.PointsAndSizes#2](~/add/codesnippet/visualbasic/m-system.drawing.size.op_1_1.vb)]\"\n  syntax:\n    content: public static System.Drawing.Size op_Subtraction (System.Drawing.Size sz1, System.Drawing.Size sz2);\n    parameters:\n    - id: sz1\n      type: System.Drawing.Size\n      description: The <xref href=\"System.Drawing.Size\"></xref> structure on the left side of the subtraction operator.\n    - id: sz2\n      type: System.Drawing.Size\n      description: The <xref href=\"System.Drawing.Size\"></xref> structure on the right side of the subtraction operator.\n    return:\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> structure that is the result of the subtraction operation.\n  overload: System.Drawing.Size.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.Round(System.Drawing.SizeF)\n  id: Round(System.Drawing.SizeF)\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: Round(SizeF)\n  nameWithType: Size.Round(SizeF)\n  fullName: System.Drawing.Size.Round(SizeF)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts the specified <xref href=\"System.Drawing.SizeF\"></xref> structure to a <xref href=\"System.Drawing.Size\"></xref> structure by rounding the values of the <xref href=\"System.Drawing.SizeF\"></xref> structure to the nearest integer values.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use static Round and <xref:System.Drawing.Size.Truncate%2A> methods to convert a <xref:System.Drawing.SizeF> to a <xref:System.Drawing.Size>. This example is designed to be used with Windows Forms. To run this example, paste it into a form that contains two <xref:System.Windows.Forms.Label> objects named `Label1` and `Label2`, and then call this method from the form's constructor.  \\n  \\n [!code-cs[System.Drawing.PointsAndSizes#5](~/add/codesnippet/csharp/m-system.drawing.size.ro_1.cs)]\\n [!code-cpp[System.Drawing.PointsAndSizes#5](~/add/codesnippet/cpp/m-system.drawing.size.ro_1.cpp)]\\n [!code-vb[System.Drawing.PointsAndSizes#5](~/add/codesnippet/visualbasic/m-system.drawing.size.ro_1.vb)]\"\n  syntax:\n    content: public static System.Drawing.Size Round (System.Drawing.SizeF value);\n    parameters:\n    - id: value\n      type: System.Drawing.SizeF\n      description: The <xref href=\"System.Drawing.SizeF\"></xref> structure to convert.\n    return:\n      type: System.Drawing.Size\n      description: The <xref href=\"System.Drawing.Size\"></xref> structure this method converts to.\n  overload: System.Drawing.Size.Round*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.Subtract(System.Drawing.Size,System.Drawing.Size)\n  id: Subtract(System.Drawing.Size,System.Drawing.Size)\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: Subtract(Size,Size)\n  nameWithType: Size.Subtract(Size,Size)\n  fullName: System.Drawing.Size.Subtract(Size,Size)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Subtracts the width and height of one <xref href=\"System.Drawing.Size\"></xref> structure from the width and height of another <xref href=\"System.Drawing.Size\"></xref> structure.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the Subtract method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `SubtractSizes` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-vb[System.Drawing.MiscWhidbeySnippets#12](~/add/codesnippet/visualbasic/m-system.drawing.size.su_1.vb)]\\n [!code-cs[System.Drawing.MiscWhidbeySnippets#12](~/add/codesnippet/csharp/m-system.drawing.size.su_1.cs)]\"\n  syntax:\n    content: public static System.Drawing.Size Subtract (System.Drawing.Size sz1, System.Drawing.Size sz2);\n    parameters:\n    - id: sz1\n      type: System.Drawing.Size\n      description: The <xref href=\"System.Drawing.Size\"></xref> structure on the left side of the subtraction operator.\n    - id: sz2\n      type: System.Drawing.Size\n      description: The <xref href=\"System.Drawing.Size\"></xref> structure on the right side of the subtraction operator.\n    return:\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> structure that is a result of the subtraction operation.\n  overload: System.Drawing.Size.Subtract*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.ToString\n  id: ToString\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Size.ToString()\n  fullName: System.Drawing.Size.ToString()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates a human-readable string that represents this <xref href=\"System.Drawing.Size\"></xref> structure.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents this <xref href=\"System.Drawing.Size\"></xref>.\n  overload: System.Drawing.Size.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.Truncate(System.Drawing.SizeF)\n  id: Truncate(System.Drawing.SizeF)\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: Truncate(SizeF)\n  nameWithType: Size.Truncate(SizeF)\n  fullName: System.Drawing.Size.Truncate(SizeF)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts the specified <xref href=\"System.Drawing.SizeF\"></xref> structure to a <xref href=\"System.Drawing.Size\"></xref> structure by truncating the values of the <xref href=\"System.Drawing.SizeF\"></xref> structure to the next lower integer values.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use static <xref:System.Drawing.Size.Round%2A> and Truncate methods to convert a <xref:System.Drawing.SizeF> to a <xref:System.Drawing.Size>. This example is designed to be used with Windows Forms. To run this example, paste it into a form that contains two <xref:System.Windows.Forms.Label> objects named `Label1` and `Label2`, and then call this method from the form's constructor.  \\n  \\n [!code-cs[System.Drawing.PointsAndSizes#5](~/add/codesnippet/csharp/m-system.drawing.size.tr_1.cs)]\\n [!code-cpp[System.Drawing.PointsAndSizes#5](~/add/codesnippet/cpp/m-system.drawing.size.tr_1.cpp)]\\n [!code-vb[System.Drawing.PointsAndSizes#5](~/add/codesnippet/visualbasic/m-system.drawing.size.tr_1.vb)]\"\n  syntax:\n    content: public static System.Drawing.Size Truncate (System.Drawing.SizeF value);\n    parameters:\n    - id: value\n      type: System.Drawing.SizeF\n      description: The <xref href=\"System.Drawing.SizeF\"></xref> structure to convert.\n    return:\n      type: System.Drawing.Size\n      description: The <xref href=\"System.Drawing.Size\"></xref> structure this method converts to.\n  overload: System.Drawing.Size.Truncate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Size.Width\n  id: Width\n  parent: System.Drawing.Size\n  langs:\n  - csharp\n  name: Width\n  nameWithType: Size.Width\n  fullName: System.Drawing.Size.Width\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets or sets the horizontal component of this <xref href=\"System.Drawing.Size\"></xref> structure.\n  remarks: The unit for the <xref:System.Drawing.Size.Height%2A> and Width of the <xref:System.Drawing.Size> structure depend on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object used to draw.\n  syntax:\n    content: public int Width { get; set; }\n    return:\n      type: System.Int32\n      description: The horizontal component of this <xref href=\"System.Drawing.Size\"></xref> structure, typically measured in pixels.\n  overload: System.Drawing.Size.Width*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Drawing.Size.#ctor(System.Drawing.Point)\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Size(Point)\n  nameWithType: Size.Size(Point)\n  fullName: System.Drawing.Size.Size(Point)\n- uid: System.Drawing.Point\n  parent: System.Drawing\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Drawing.Point\n- uid: System.Drawing.Size.#ctor(System.Int32,System.Int32)\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Size(Int32,Int32)\n  nameWithType: Size.Size(Int32,Int32)\n  fullName: System.Drawing.Size.Size(Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Drawing.Size.Add(System.Drawing.Size,System.Drawing.Size)\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Add(Size,Size)\n  nameWithType: Size.Add(Size,Size)\n  fullName: System.Drawing.Size.Add(Size,Size)\n- uid: System.Drawing.Size\n  parent: System.Drawing\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Drawing.Size\n- uid: System.Drawing.Size.Ceiling(System.Drawing.SizeF)\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Ceiling(SizeF)\n  nameWithType: Size.Ceiling(SizeF)\n  fullName: System.Drawing.Size.Ceiling(SizeF)\n- uid: System.Drawing.SizeF\n  parent: System.Drawing\n  isExternal: false\n  name: SizeF\n  nameWithType: SizeF\n  fullName: System.Drawing.SizeF\n- uid: System.Drawing.Size.Empty\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Empty\n  nameWithType: Size.Empty\n  fullName: System.Drawing.Size.Empty\n- uid: System.Drawing.Size.Equals(System.Object)\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Size.Equals(Object)\n  fullName: System.Drawing.Size.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Drawing.Size.GetHashCode\n  parent: System.Drawing.Size\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Size.GetHashCode()\n  fullName: System.Drawing.Size.GetHashCode()\n- uid: System.Drawing.Size.Height\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Height\n  nameWithType: Size.Height\n  fullName: System.Drawing.Size.Height\n- uid: System.Drawing.Size.IsEmpty\n  parent: System.Drawing.Size\n  isExternal: false\n  name: IsEmpty\n  nameWithType: Size.IsEmpty\n  fullName: System.Drawing.Size.IsEmpty\n- uid: System.Drawing.Size.op_Addition(System.Drawing.Size,System.Drawing.Size)\n  parent: System.Drawing.Size\n  isExternal: false\n  name: op_Addition(Size,Size)\n  nameWithType: Size.op_Addition(Size,Size)\n  fullName: System.Drawing.Size.op_Addition(Size,Size)\n- uid: System.Drawing.Size.op_Equality(System.Drawing.Size,System.Drawing.Size)\n  parent: System.Drawing.Size\n  isExternal: false\n  name: op_Equality(Size,Size)\n  nameWithType: Size.op_Equality(Size,Size)\n  fullName: System.Drawing.Size.op_Equality(Size,Size)\n- uid: System.Drawing.Size.op_Explicit(System.Drawing.Size to System.Drawing.Point)\n  parent: System.Drawing.Size\n  isExternal: false\n  name: op_Explicit(Size)\n  nameWithType: Size.op_Explicit(Size)\n  fullName: System.Drawing.Size.op_Explicit(Size)\n- uid: System.Drawing.Size.op_Implicit(System.Drawing.Size)\n  parent: System.Drawing.Size\n  isExternal: false\n  name: op_Implicit(Size)\n  nameWithType: Size.op_Implicit(Size)\n  fullName: System.Drawing.Size.op_Implicit(Size)\n- uid: System.Drawing.Size.op_Inequality(System.Drawing.Size,System.Drawing.Size)\n  parent: System.Drawing.Size\n  isExternal: false\n  name: op_Inequality(Size,Size)\n  nameWithType: Size.op_Inequality(Size,Size)\n  fullName: System.Drawing.Size.op_Inequality(Size,Size)\n- uid: System.Drawing.Size.op_Subtraction(System.Drawing.Size,System.Drawing.Size)\n  parent: System.Drawing.Size\n  isExternal: false\n  name: op_Subtraction(Size,Size)\n  nameWithType: Size.op_Subtraction(Size,Size)\n  fullName: System.Drawing.Size.op_Subtraction(Size,Size)\n- uid: System.Drawing.Size.Round(System.Drawing.SizeF)\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Round(SizeF)\n  nameWithType: Size.Round(SizeF)\n  fullName: System.Drawing.Size.Round(SizeF)\n- uid: System.Drawing.Size.Subtract(System.Drawing.Size,System.Drawing.Size)\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Subtract(Size,Size)\n  nameWithType: Size.Subtract(Size,Size)\n  fullName: System.Drawing.Size.Subtract(Size,Size)\n- uid: System.Drawing.Size.ToString\n  parent: System.Drawing.Size\n  isExternal: false\n  name: ToString()\n  nameWithType: Size.ToString()\n  fullName: System.Drawing.Size.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Drawing.Size.Truncate(System.Drawing.SizeF)\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Truncate(SizeF)\n  nameWithType: Size.Truncate(SizeF)\n  fullName: System.Drawing.Size.Truncate(SizeF)\n- uid: System.Drawing.Size.Width\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Width\n  nameWithType: Size.Width\n  fullName: System.Drawing.Size.Width\n- uid: System.Drawing.Size.#ctor*\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Size\n  nameWithType: Size.Size\n- uid: System.Drawing.Size.Add*\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Add\n  nameWithType: Size.Add\n- uid: System.Drawing.Size.Ceiling*\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Ceiling\n  nameWithType: Size.Ceiling\n- uid: System.Drawing.Size.Equals*\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Equals\n  nameWithType: Size.Equals\n- uid: System.Drawing.Size.GetHashCode*\n  parent: System.Drawing.Size\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Size.GetHashCode\n- uid: System.Drawing.Size.Height*\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Height\n  nameWithType: Size.Height\n- uid: System.Drawing.Size.IsEmpty*\n  parent: System.Drawing.Size\n  isExternal: false\n  name: IsEmpty\n  nameWithType: Size.IsEmpty\n- uid: System.Drawing.Size.op_Addition*\n  parent: System.Drawing.Size\n  isExternal: false\n  name: op_Addition\n  nameWithType: Size.op_Addition\n- uid: System.Drawing.Size.op_Equality*\n  parent: System.Drawing.Size\n  isExternal: false\n  name: op_Equality\n  nameWithType: Size.op_Equality\n- uid: System.Drawing.Size.op_Explicit*\n  parent: System.Drawing.Size\n  isExternal: false\n  name: op_Explicit\n  nameWithType: Size.op_Explicit\n- uid: System.Drawing.Size.op_Implicit*\n  parent: System.Drawing.Size\n  isExternal: false\n  name: op_Implicit\n  nameWithType: Size.op_Implicit\n- uid: System.Drawing.Size.op_Inequality*\n  parent: System.Drawing.Size\n  isExternal: false\n  name: op_Inequality\n  nameWithType: Size.op_Inequality\n- uid: System.Drawing.Size.op_Subtraction*\n  parent: System.Drawing.Size\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: Size.op_Subtraction\n- uid: System.Drawing.Size.Round*\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Round\n  nameWithType: Size.Round\n- uid: System.Drawing.Size.Subtract*\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Subtract\n  nameWithType: Size.Subtract\n- uid: System.Drawing.Size.ToString*\n  parent: System.Drawing.Size\n  isExternal: false\n  name: ToString\n  nameWithType: Size.ToString\n- uid: System.Drawing.Size.Truncate*\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Truncate\n  nameWithType: Size.Truncate\n- uid: System.Drawing.Size.Width*\n  parent: System.Drawing.Size\n  isExternal: false\n  name: Width\n  nameWithType: Size.Width\n"}