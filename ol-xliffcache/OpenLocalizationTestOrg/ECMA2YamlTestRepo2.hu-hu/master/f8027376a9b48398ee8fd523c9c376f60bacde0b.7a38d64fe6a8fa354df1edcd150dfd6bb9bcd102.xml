{"nodes":[{"pos":[950,1046],"content":"Represents a configuration element that contains sub-elements that specify the routing behavior.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a configuration element that contains sub-elements that specify the routing behavior.","pos":[0,96]}]},{"pos":[5217,5340],"content":"Initializes a new instance of <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Routing.Configuration.RoutingExtensionElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of <xref href=\"System.ServiceModel.Routing.Configuration.RoutingExtensionElement\"></xref> class."},{"pos":[6038,6064],"content":"Gets the type of behavior.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of behavior.","pos":[0,26]}]},{"pos":[6186,6204],"content":"The behavior type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The behavior type.","pos":[0,18]}]},{"pos":[6979,6991],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7666,7768],"content":"Gets or sets a value that indicates whether messages are to be dispatched in the order they were sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether messages are to be dispatched in the order they were sent.","pos":[0,102]}]},{"pos":[7898,8095],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if messages are to be dispatched in the order they were sent; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if messages are to be dispatched in the order they were sent; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8747,8839],"content":"Gets or sets the name of the filter table used by this routing service for routing messages.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the filter table used by this routing service for routing messages.","pos":[0,92]}]},{"pos":[8964,8993],"content":"The name of the filter table.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the filter table.","pos":[0,29]}]},{"pos":[9654,9795],"content":"Gets or sets a value that indicates whether the filter is allowed to access only the message headers or the message headers and message body.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the filter is allowed to access only the message headers or the message headers and message body.","pos":[0,141]}]},{"pos":[9923,10023],"content":"**true** if the filter can only access header values; otherwise, **false**. The default is **true**.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the filter can only access header values; otherwise, <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","pos":[0,75],"source":"**true** if the filter can only access header values; otherwise, **false**."},{"content":"The default is <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>.","pos":[76,100],"source":" The default is **true**."}]},{"pos":[10703,10776],"content":"Gets or sets a value that indicates whether SOAP processing should occur.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether SOAP processing should occur.","pos":[0,73]}]},{"pos":[10789,10927],"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> SOAP processing, see &lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt;.","needQuote":false,"needEscape":true,"extradata":"MT","source":"[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] SOAP processing, see <xref:System.ServiceModel.Routing.SoapProcessingBehavior>."},{"pos":[11059,11147],"content":"**true** if messages should be marshaled; otherwise, **false**. The default is **true**.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if messages should be marshaled; otherwise, <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","pos":[0,63],"source":"**true** if messages should be marshaled; otherwise, **false**."},{"content":"The default is <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>.","pos":[64,88],"source":" The default is **true**."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  id: RoutingExtensionElement\n  children:\n  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor\n  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType\n  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior\n  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch\n  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName\n  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly\n  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled\n  langs:\n  - csharp\n  name: RoutingExtensionElement\n  nameWithType: RoutingExtensionElement\n  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  type: Class\n  summary: Represents a configuration element that contains sub-elements that specify the routing behavior.\n  syntax:\n    content: 'public sealed class RoutingExtensionElement : System.ServiceModel.Configuration.BehaviorExtensionElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement\n  - System.ServiceModel.Configuration.BehaviorExtensionElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Properties\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  langs:\n  - csharp\n  name: RoutingExtensionElement()\n  nameWithType: RoutingExtensionElement.RoutingExtensionElement()\n  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RoutingExtensionElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Initializes a new instance of <xref href=\"System.ServiceModel.Routing.Configuration.RoutingExtensionElement\"></xref> class.\n  syntax:\n    content: public RoutingExtensionElement ();\n    parameters: []\n  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType\n  id: BehaviorType\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  langs:\n  - csharp\n  name: BehaviorType\n  nameWithType: RoutingExtensionElement.BehaviorType\n  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets the type of behavior.\n  syntax:\n    content: public override Type BehaviorType { get; }\n    return:\n      type: System.Type\n      description: The behavior type.\n  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior\n  id: CreateBehavior\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  langs:\n  - csharp\n  name: CreateBehavior()\n  nameWithType: RoutingExtensionElement.CreateBehavior()\n  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior()\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  syntax:\n    content: protected override object CreateBehavior ();\n    parameters: []\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch\n  id: EnsureOrderedDispatch\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  langs:\n  - csharp\n  name: EnsureOrderedDispatch\n  nameWithType: RoutingExtensionElement.EnsureOrderedDispatch\n  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets a value that indicates whether messages are to be dispatched in the order they were sent.\n  syntax:\n    content: public bool EnsureOrderedDispatch { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if messages are to be dispatched in the order they were sent; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName\n  id: FilterTableName\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  langs:\n  - csharp\n  name: FilterTableName\n  nameWithType: RoutingExtensionElement.FilterTableName\n  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets the name of the filter table used by this routing service for routing messages.\n  syntax:\n    content: public string FilterTableName { get; set; }\n    return:\n      type: System.String\n      description: The name of the filter table.\n  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly\n  id: RouteOnHeadersOnly\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  langs:\n  - csharp\n  name: RouteOnHeadersOnly\n  nameWithType: RoutingExtensionElement.RouteOnHeadersOnly\n  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets a value that indicates whether the filter is allowed to access only the message headers or the message headers and message body.\n  syntax:\n    content: public bool RouteOnHeadersOnly { get; set; }\n    return:\n      type: System.Boolean\n      description: '**true** if the filter can only access header values; otherwise, **false**. The default is **true**.'\n  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled\n  id: SoapProcessingEnabled\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  langs:\n  - csharp\n  name: SoapProcessingEnabled\n  nameWithType: RoutingExtensionElement.SoapProcessingEnabled\n  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets a value that indicates whether SOAP processing should occur.\n  remarks: '[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] SOAP processing, see <xref:System.ServiceModel.Routing.SoapProcessingBehavior>.'\n  syntax:\n    content: public bool SoapProcessingEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '**true** if messages should be marshaled; otherwise, **false**. The default is **true**.'\n  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Configuration.BehaviorExtensionElement\n  isExternal: false\n  name: System.ServiceModel.Configuration.BehaviorExtensionElement\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: RoutingExtensionElement()\n  nameWithType: RoutingExtensionElement.RoutingExtensionElement()\n  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RoutingExtensionElement()\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: BehaviorType\n  nameWithType: RoutingExtensionElement.BehaviorType\n  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: CreateBehavior()\n  nameWithType: RoutingExtensionElement.CreateBehavior()\n  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: EnsureOrderedDispatch\n  nameWithType: RoutingExtensionElement.EnsureOrderedDispatch\n  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: FilterTableName\n  nameWithType: RoutingExtensionElement.FilterTableName\n  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: RouteOnHeadersOnly\n  nameWithType: RoutingExtensionElement.RouteOnHeadersOnly\n  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: SoapProcessingEnabled\n  nameWithType: RoutingExtensionElement.SoapProcessingEnabled\n  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor*\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: RoutingExtensionElement\n  nameWithType: RoutingExtensionElement.RoutingExtensionElement\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType*\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: BehaviorType\n  nameWithType: RoutingExtensionElement.BehaviorType\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior*\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: CreateBehavior\n  nameWithType: RoutingExtensionElement.CreateBehavior\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch*\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: EnsureOrderedDispatch\n  nameWithType: RoutingExtensionElement.EnsureOrderedDispatch\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName*\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: FilterTableName\n  nameWithType: RoutingExtensionElement.FilterTableName\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly*\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: RouteOnHeadersOnly\n  nameWithType: RoutingExtensionElement.RouteOnHeadersOnly\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled*\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: SoapProcessingEnabled\n  nameWithType: RoutingExtensionElement.SoapProcessingEnabled\n"}