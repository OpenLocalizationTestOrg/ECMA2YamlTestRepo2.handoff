{"nodes":[{"pos":[627,711],"content":"Provides functionality for resolving a coordinate-based location to a civic address.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides functionality for resolving a coordinate-based location to a civic address.","pos":[0,84]}]},{"pos":[723,971],"content":"The CivicAddressResolver class provides an implementation of <xref:System.Device.Location.ICivicAddressResolver> that resolves a coordinate-based location to a civic address if the location provider provides both coordinates and civic address data.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CivicAddressResolver class provides an implementation of &lt;xref:System.Device.Location.ICivicAddressResolver&gt; that resolves a coordinate-based location to a civic address if the location provider provides both coordinates and civic address data.","pos":[0,248],"source":"The CivicAddressResolver class provides an implementation of <xref:System.Device.Location.ICivicAddressResolver> that resolves a coordinate-based location to a civic address if the location provider provides both coordinates and civic address data."}]},{"pos":[2554,2659],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.CivicAddressResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Device.Location.CivicAddressResolver\"></xref> class."},{"pos":[3603,3780],"content":"Synchronously resolves a civic address from a location based on latitude and longitude. This call will block execution of the calling thread while the address is being resolved.","needQuote":true,"needEscape":true,"nodes":[{"content":"Synchronously resolves a civic address from a location based on latitude and longitude. This call will block execution of the calling thread while the address is being resolved.","pos":[0,177],"nodes":[{"content":"Synchronously resolves a civic address from a location based on latitude and longitude.","pos":[0,87]},{"content":"This call will block execution of the calling thread while the address is being resolved.","pos":[88,177]}]}]},{"pos":[3792,4214],"content":"The <xref:System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted> event is raised when the address resolve operation completes. The civic address that is resolved from the `coordinate` parameter is returned by the <xref:System.Device.Location.ResolveAddressCompletedEventArgs.Address%2A> member of the <xref:System.Device.Location.ResolveAddressCompletedEventArgs> object that is passed to the event handler.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted&gt; event is raised when the address resolve operation completes.","pos":[0,141],"source":"The <xref:System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted> event is raised when the address resolve operation completes."},{"content":"The civic address that is resolved from the <ph id=\"ph1\">`coordinate`</ph> parameter is returned by the &lt;xref:System.Device.Location.ResolveAddressCompletedEventArgs.Address%2A&gt; member of the &lt;xref:System.Device.Location.ResolveAddressCompletedEventArgs&gt; object that is passed to the event handler.","pos":[142,422],"source":" The civic address that is resolved from the `coordinate` parameter is returned by the <xref:System.Device.Location.ResolveAddressCompletedEventArgs.Address%2A> member of the <xref:System.Device.Location.ResolveAddressCompletedEventArgs> object that is passed to the event handler."}]},{"pos":[4863,4979],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the location to resolve to a civic address.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Device.Location.GeoCoordinate\"></xref> containing the location to resolve to a civic address."},{"pos":[5059,5241],"content":"The civic address that is resolved from the <code>coordinate</code> parameter. <xref href=\"System.Device.Location.CivicAddress\"></xref> is returned if the address cannot be resolved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The civic address that is resolved from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">coordinate</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[0,78],"source":"The civic address that is resolved from the <code>coordinate</code> parameter."},{"content":"<bpt id=\"p1\">&lt;xref href=\"System.Device.Location.CivicAddress\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is returned if the address cannot be resolved.","pos":[79,182],"source":"<xref href=\"System.Device.Location.CivicAddress\"></xref> is returned if the address cannot be resolved."}]},{"pos":[5430,5518],"content":"<ph id=\"ph1\">&lt;code&gt;coordinate&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>coordinate</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5613,5685],"content":"<ph id=\"ph1\">&lt;code&gt;coordinate&lt;/code&gt;</ph> does not contain a valid latitude and longitude.","needQuote":true,"needEscape":true,"source":"<code>coordinate</code> does not contain a valid latitude and longitude."},{"pos":[6256,6440],"content":"Resolves an address asynchronously from a location that is based on latitude and longitude. The call does not block execution of the calling thread while the address is being resolved.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resolves an address asynchronously from a location that is based on latitude and longitude. The call does not block execution of the calling thread while the address is being resolved.","pos":[0,184],"nodes":[{"content":"Resolves an address asynchronously from a location that is based on latitude and longitude.","pos":[0,91]},{"content":"The call does not block execution of the calling thread while the address is being resolved.","pos":[92,184]}]}]},{"pos":[7082,7198],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Device.Location.GeoCoordinate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the location to resolve to a civic address.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Device.Location.GeoCoordinate\"></xref> containing the location to resolve to a civic address."},{"pos":[7392,7480],"content":"<ph id=\"ph1\">&lt;code&gt;coordinate&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>coordinate</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7575,7647],"content":"<ph id=\"ph1\">&lt;code&gt;coordinate&lt;/code&gt;</ph> does not contain a valid latitude and longitude.","needQuote":true,"needEscape":true,"source":"<code>coordinate</code> does not contain a valid latitude and longitude."},{"pos":[8116,8265],"content":"Occurs when the address resolution that was initiated by a call to <xref:System.Device.Location.CivicAddressResolver.ResolveAddressAsync*> completes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the address resolution that was initiated by a call to &lt;xref:System.Device.Location.CivicAddressResolver.ResolveAddressAsync*&gt; completes.","pos":[0,149],"source":"Occurs when the address resolution that was initiated by a call to <xref:System.Device.Location.CivicAddressResolver.ResolveAddressAsync*> completes."}]},{"pos":[9001,9013],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Device.Location.CivicAddressResolver\n  id: CivicAddressResolver\n  children:\n  - System.Device.Location.CivicAddressResolver.#ctor\n  - System.Device.Location.CivicAddressResolver.ResolveAddress(System.Device.Location.GeoCoordinate)\n  - System.Device.Location.CivicAddressResolver.ResolveAddressAsync(System.Device.Location.GeoCoordinate)\n  - System.Device.Location.CivicAddressResolver.ResolveAddressCompleted\n  langs:\n  - csharp\n  name: CivicAddressResolver\n  nameWithType: CivicAddressResolver\n  fullName: System.Device.Location.CivicAddressResolver\n  type: Class\n  summary: Provides functionality for resolving a coordinate-based location to a civic address.\n  remarks: The CivicAddressResolver class provides an implementation of <xref:System.Device.Location.ICivicAddressResolver> that resolves a coordinate-based location to a civic address if the location provider provides both coordinates and civic address data.\n  example:\n  - \"The following program shows how to call <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> to resolve a civic address synchronously.  \\n  \\n [!code-cs[System.Device.Location.ResolveCivicAddressSync#1](~/add/codesnippet/csharp/resolveaddresssync/resolvecivicaddresssync.cs#1)]\\n [!code-vb[System.Device.Location.ResolveCivicAddressSync#1](~/add/codesnippet/visualbasic/resolvecivicaddresssync/resolvecivicaddresssync.vb#1)]  \\n  \\n The following program shows how to call <xref:System.Device.Location.CivicAddressResolver.ResolveAddressAsync%2A> to resolve a civic address asynchronously.  \\n  \\n [!code-cs[System.Device.Location.ResolveCivicAddressSync#1](~/add/codesnippet/csharp/resolveaddresssync/resolvecivicaddresssync.cs#1)]\\n [!code-vb[System.Device.Location.ResolveCivicAddressSync#1](~/add/codesnippet/visualbasic/resolvecivicaddresssync/resolvecivicaddresssync.vb#1)]\"\n  syntax:\n    content: 'public sealed class CivicAddressResolver : System.Device.Location.ICivicAddressResolver'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Device.Location.ICivicAddressResolver\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Device.Location.CivicAddressResolver.#ctor\n  id: '#ctor'\n  parent: System.Device.Location.CivicAddressResolver\n  langs:\n  - csharp\n  name: CivicAddressResolver()\n  nameWithType: CivicAddressResolver.CivicAddressResolver()\n  fullName: System.Device.Location.CivicAddressResolver.CivicAddressResolver()\n  type: Constructor\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Initializes a new instance of the <xref href=\"System.Device.Location.CivicAddressResolver\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example shows how to initialize a new instance of the <xref:System.Device.Location.CivicAddressResolver> class.  \\n  \\n```c#  \\nCivicAddressResolver resolver = new CivicAddressResolver();  \\n  \\n```\"\n  syntax:\n    content: public CivicAddressResolver ();\n    parameters: []\n  overload: System.Device.Location.CivicAddressResolver.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Device.Location.CivicAddressResolver.ResolveAddress(System.Device.Location.GeoCoordinate)\n  id: ResolveAddress(System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.CivicAddressResolver\n  langs:\n  - csharp\n  name: ResolveAddress(GeoCoordinate)\n  nameWithType: CivicAddressResolver.ResolveAddress(GeoCoordinate)\n  fullName: System.Device.Location.CivicAddressResolver.ResolveAddress(GeoCoordinate)\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Synchronously resolves a civic address from a location based on latitude and longitude. This call will block execution of the calling thread while the address is being resolved.\n  remarks: The <xref:System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted> event is raised when the address resolve operation completes. The civic address that is resolved from the `coordinate` parameter is returned by the <xref:System.Device.Location.ResolveAddressCompletedEventArgs.Address%2A> member of the <xref:System.Device.Location.ResolveAddressCompletedEventArgs> object that is passed to the event handler.\n  example:\n  - \"The following program demonstrates how to call ResolveAddress to resolve a civic address synchronously.  \\n  \\n [!code-cs[System.Device.Location.ResolveCivicAddressSync#1](~/add/codesnippet/csharp/resolveaddresssync/resolvecivicaddresssync.cs#1)]\\n [!code-vb[System.Device.Location.ResolveCivicAddressSync#1](~/add/codesnippet/visualbasic/resolvecivicaddresssync/resolvecivicaddresssync.vb#1)]\"\n  syntax:\n    content: public System.Device.Location.CivicAddress ResolveAddress (System.Device.Location.GeoCoordinate coordinate);\n    parameters:\n    - id: coordinate\n      type: System.Device.Location.GeoCoordinate\n      description: The <xref href=\"System.Device.Location.GeoCoordinate\"></xref> containing the location to resolve to a civic address.\n    return:\n      type: System.Device.Location.CivicAddress\n      description: The civic address that is resolved from the <code>coordinate</code> parameter. <xref href=\"System.Device.Location.CivicAddress\"></xref> is returned if the address cannot be resolved.\n  overload: System.Device.Location.CivicAddressResolver.ResolveAddress*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>coordinate</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinate</code> does not contain a valid latitude and longitude.\n  platform:\n  - net462\n- uid: System.Device.Location.CivicAddressResolver.ResolveAddressAsync(System.Device.Location.GeoCoordinate)\n  id: ResolveAddressAsync(System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.CivicAddressResolver\n  langs:\n  - csharp\n  name: ResolveAddressAsync(GeoCoordinate)\n  nameWithType: CivicAddressResolver.ResolveAddressAsync(GeoCoordinate)\n  fullName: System.Device.Location.CivicAddressResolver.ResolveAddressAsync(GeoCoordinate)\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Resolves an address asynchronously from a location that is based on latitude and longitude. The call does not block execution of the calling thread while the address is being resolved.\n  remarks: ''\n  example:\n  - \"The following program shows how to call ResolveAddressAsync to resolve a civic address asynchronously.  \\n  \\n [!code-cs[System.Device.Location.ResolveCivicAddressAsync#1](~/add/codesnippet/csharp/resolveaddressasync/resolvecivicaddressasync.cs#1)]\\n [!code-vb[System.Device.Location.ResolveCivicAddressAsync#1](~/add/codesnippet/visualbasic/resolvecivicaddressasync/resolvecivicaddressasync.vb#1)]\"\n  syntax:\n    content: public void ResolveAddressAsync (System.Device.Location.GeoCoordinate coordinate);\n    parameters:\n    - id: coordinate\n      type: System.Device.Location.GeoCoordinate\n      description: The <xref href=\"System.Device.Location.GeoCoordinate\"></xref> containing the location to resolve to a civic address.\n  overload: System.Device.Location.CivicAddressResolver.ResolveAddressAsync*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>coordinate</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinate</code> does not contain a valid latitude and longitude.\n  platform:\n  - net462\n- uid: System.Device.Location.CivicAddressResolver.ResolveAddressCompleted\n  id: ResolveAddressCompleted\n  parent: System.Device.Location.CivicAddressResolver\n  langs:\n  - csharp\n  name: ResolveAddressCompleted\n  nameWithType: CivicAddressResolver.ResolveAddressCompleted\n  fullName: System.Device.Location.CivicAddressResolver.ResolveAddressCompleted\n  type: Event\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Occurs when the address resolution that was initiated by a call to <xref:System.Device.Location.CivicAddressResolver.ResolveAddressAsync*> completes.\n  remarks: ''\n  example:\n  - \"The following program shows how to call <xref:System.Device.Location.CivicAddressResolver.ResolveAddressAsync%2A> to resolve a civic address asynchronously.  \\n  \\n [!code-cs[System.Device.Location.ResolveCivicAddressAsync#1](~/add/codesnippet/csharp/resolveaddressasync/resolvecivicaddressasync.cs#1)]\\n [!code-vb[System.Device.Location.ResolveCivicAddressAsync#1](~/add/codesnippet/visualbasic/resolvecivicaddressasync/resolvecivicaddressasync.vb#1)]\"\n  syntax:\n    content: public event EventHandler<System.Device.Location.ResolveAddressCompletedEventArgs> ResolveAddressCompleted;\n    return:\n      type: System.EventHandler{System.Device.Location.ResolveAddressCompletedEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Device.Location.CivicAddressResolver.#ctor\n  parent: System.Device.Location.CivicAddressResolver\n  isExternal: false\n  name: CivicAddressResolver()\n  nameWithType: CivicAddressResolver.CivicAddressResolver()\n  fullName: System.Device.Location.CivicAddressResolver.CivicAddressResolver()\n- uid: System.Device.Location.CivicAddressResolver.ResolveAddress(System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.CivicAddressResolver\n  isExternal: false\n  name: ResolveAddress(GeoCoordinate)\n  nameWithType: CivicAddressResolver.ResolveAddress(GeoCoordinate)\n  fullName: System.Device.Location.CivicAddressResolver.ResolveAddress(GeoCoordinate)\n- uid: System.Device.Location.CivicAddress\n  parent: System.Device.Location\n  isExternal: false\n  name: CivicAddress\n  nameWithType: CivicAddress\n  fullName: System.Device.Location.CivicAddress\n- uid: System.Device.Location.GeoCoordinate\n  parent: System.Device.Location\n  isExternal: false\n  name: GeoCoordinate\n  nameWithType: GeoCoordinate\n  fullName: System.Device.Location.GeoCoordinate\n- uid: System.Device.Location.CivicAddressResolver.ResolveAddressAsync(System.Device.Location.GeoCoordinate)\n  parent: System.Device.Location.CivicAddressResolver\n  isExternal: false\n  name: ResolveAddressAsync(GeoCoordinate)\n  nameWithType: CivicAddressResolver.ResolveAddressAsync(GeoCoordinate)\n  fullName: System.Device.Location.CivicAddressResolver.ResolveAddressAsync(GeoCoordinate)\n- uid: System.Device.Location.CivicAddressResolver.ResolveAddressCompleted\n  parent: System.Device.Location.CivicAddressResolver\n  isExternal: false\n  name: ResolveAddressCompleted\n  nameWithType: CivicAddressResolver.ResolveAddressCompleted\n  fullName: System.Device.Location.CivicAddressResolver.ResolveAddressCompleted\n- uid: System.EventHandler{System.Device.Location.ResolveAddressCompletedEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<ResolveAddressCompletedEventArgs>\n  nameWithType: EventHandler<ResolveAddressCompletedEventArgs>\n  fullName: System.EventHandler<System.Device.Location.ResolveAddressCompletedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.Device.Location.ResolveAddressCompletedEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Device.Location.ResolveAddressCompletedEventArgs\n    name: ResolveAddressCompletedEventArgs\n    nameWithType: ResolveAddressCompletedEventArgs\n    fullName: ResolveAddressCompletedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Device.Location.CivicAddressResolver.#ctor*\n  parent: System.Device.Location.CivicAddressResolver\n  isExternal: false\n  name: CivicAddressResolver\n  nameWithType: CivicAddressResolver.CivicAddressResolver\n- uid: System.Device.Location.CivicAddressResolver.ResolveAddress*\n  parent: System.Device.Location.CivicAddressResolver\n  isExternal: false\n  name: ResolveAddress\n  nameWithType: CivicAddressResolver.ResolveAddress\n- uid: System.Device.Location.CivicAddressResolver.ResolveAddressAsync*\n  parent: System.Device.Location.CivicAddressResolver\n  isExternal: false\n  name: ResolveAddressAsync\n  nameWithType: CivicAddressResolver.ResolveAddressAsync\n"}