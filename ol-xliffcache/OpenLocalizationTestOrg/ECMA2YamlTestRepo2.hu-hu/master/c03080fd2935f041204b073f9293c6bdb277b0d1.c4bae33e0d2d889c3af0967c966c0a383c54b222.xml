{"nodes":[{"pos":[637,649],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[1875,1887],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1\n  id: ContextValue`1\n  children:\n  - Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.#ctor\n  - Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.Value\n  langs:\n  - csharp\n  name: ContextValue<T>\n  nameWithType: ContextValue<T>\n  fullName: Microsoft.VisualBasic.MyServices.Internal.ContextValue<T>\n  type: Class\n  syntax:\n    content: >-\n      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]\n\n      public class ContextValue<T>\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1\n  langs:\n  - csharp\n  name: ContextValue()\n  nameWithType: ContextValue<T>.ContextValue()\n  fullName: Microsoft.VisualBasic.MyServices.Internal.ContextValue<T>.ContextValue()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.MyServices.Internal\n  syntax:\n    content: public ContextValue ();\n    parameters: []\n  overload: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.Value\n  id: Value\n  parent: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1\n  langs:\n  - csharp\n  name: Value\n  nameWithType: ContextValue<T>.Value\n  fullName: Microsoft.VisualBasic.MyServices.Internal.ContextValue<T>.Value\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.MyServices.Internal\n  syntax:\n    content: public T Value { get; set; }\n    return:\n      type: T\n      description: To be added.\n  overload: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.#ctor\n  parent: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1\n  isExternal: false\n  name: ContextValue()\n  nameWithType: ContextValue<T>.ContextValue()\n  fullName: Microsoft.VisualBasic.MyServices.Internal.ContextValue<T>.ContextValue()\n- uid: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.Value\n  parent: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1\n  isExternal: false\n  name: Value\n  nameWithType: ContextValue<T>.Value\n  fullName: Microsoft.VisualBasic.MyServices.Internal.ContextValue<T>.Value\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.#ctor*\n  parent: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1\n  isExternal: false\n  name: ContextValue<T>\n  nameWithType: ContextValue<T>.ContextValue<T>\n- uid: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.Value*\n  parent: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1\n  isExternal: false\n  name: Value\n  nameWithType: ContextValue<T>.Value\n"}