{"nodes":[{"pos":[623,683],"content":"Represents a randomly accessed view of a memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a randomly accessed view of a memory-mapped file.","pos":[0,60]}]},{"pos":[695,865],"content":"Use the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor%2A> method of a <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> object to get this view.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the &lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor%2A&gt; method of a &lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile&gt; object to get this view.","pos":[0,170],"source":"Use the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor%2A> method of a <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> object to get this view."}]},{"pos":[4653,4665],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5176,5275],"content":"Clears all buffers for this view and causes any buffered data to be written to the underlying file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears all buffers for this view and causes any buffered data to be written to the underlying file.","pos":[0,99]}]},{"pos":[5288,5610],"content":"If you are using views that are adjacent to each other, this method will also clear the following data, provided its size is equal to a multiple of the system page size:      -   Any data that precedes the view up until the latest file offset.      -   Any data that follows the view up until the earliest file offset.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you are using views that are adjacent to each other, this method will also clear the following data, provided its size is equal to a multiple of the system page size:      -   Any data that precedes the view up until the latest file offset.      -   Any data that follows the view up until the earliest file offset.","pos":[0,318],"nodes":[{"content":"If you are using views that are adjacent to each other, this method will also clear the following data, provided its size is equal to a multiple of the system page size:      -   Any data that precedes the view up until the latest file offset.","pos":[0,243]},{"content":"-   Any data that follows the view up until the earliest file offset.","pos":[249,318]}]}]},{"pos":[5868,5918],"content":"Methods were called after the accessor was closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Methods were called after the accessor was closed.","pos":[0,50]}]},{"pos":[6375,6566],"content":"[Supported in the .NET Framework 4.5.1 and later versions]       Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.","needQuote":false,"needEscape":true,"nodes":[{"content":"[Supported in the .NET Framework 4.5.1 and later versions]       Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.","pos":[0,189]}]},{"pos":[6682,6789],"content":"The number of bytes between the starting position of this view and the beginning of the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes between the starting position of this view and the beginning of the memory-mapped file.","pos":[0,107]}]},{"pos":[6994,7106],"content":"The object from which this instance was created is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object from which this instance was created is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7627,7677],"content":"Gets a handle to the view of a memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a handle to the view of a memory-mapped file.","pos":[0,50]}]},{"pos":[7897,7965],"content":"A wrapper for the operating system's handle to the view of the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A wrapper for the operating system's handle to the view of the file.","pos":[0,68]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n  id: MemoryMappedViewAccessor\n  children:\n  - System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose(System.Boolean)\n  - System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush\n  - System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset\n  - System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle\n  langs:\n  - csharp\n  name: MemoryMappedViewAccessor\n  nameWithType: MemoryMappedViewAccessor\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n  type: Class\n  summary: Represents a randomly accessed view of a memory-mapped file.\n  remarks: Use the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor%2A> method of a <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> object to get this view.\n  example:\n  - \"The following example obtains a MemoryMappedViewAccessor from a large memory-mapped file for editing.  \\n  \\n This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> class.  \\n  \\n [!code-vb[memorymappedfiles.memorymappedfile.createfromfile#2](~/add/codesnippet/visualbasic/t-system.io.memorymapped_1_1.vb)]\\n [!code-cs[memorymappedfiles.memorymappedfile.createfromfile#2](~/add/codesnippet/csharp/t-system.io.memorymapped_1_1.cs)]\"\n  syntax:\n    content: 'public sealed class MemoryMappedViewAccessor : System.IO.UnmanagedMemoryAccessor'\n  inheritance:\n  - System.Object\n  - System.IO.UnmanagedMemoryAccessor\n  implements: []\n  inheritedMembers:\n  - System.IO.UnmanagedMemoryAccessor.CanRead\n  - System.IO.UnmanagedMemoryAccessor.CanWrite\n  - System.IO.UnmanagedMemoryAccessor.Capacity\n  - System.IO.UnmanagedMemoryAccessor.Dispose\n  - System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  - System.IO.UnmanagedMemoryAccessor.IsOpen\n  - System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)\n  - System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)\n  - System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)\n  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)\n  - System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)\n  - System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: MemoryMappedViewAccessor.Dispose(Boolean)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: To be added.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush\n  id: Flush\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: MemoryMappedViewAccessor.Flush()\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Clears all buffers for this view and causes any buffered data to be written to the underlying file.\n  remarks: \"If you are using views that are adjacent to each other, this method will also clear the following data, provided its size is equal to a multiple of the system page size:  \\n  \\n-   Any data that precedes the view up until the latest file offset.  \\n  \\n-   Any data that follows the view up until the earliest file offset.\"\n  syntax:\n    content: public void Flush ();\n    parameters: []\n  overload: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: Methods were called after the accessor was closed.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset\n  id: PointerOffset\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n  langs:\n  - csharp\n  name: PointerOffset\n  nameWithType: MemoryMappedViewAccessor.PointerOffset\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: \"[Supported in the .NET Framework 4.5.1 and later versions]  \\n  \\n Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.\"\n  syntax:\n    content: public long PointerOffset { get; }\n    return:\n      type: System.Int64\n      description: The number of bytes between the starting position of this view and the beginning of the memory-mapped file.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The object from which this instance was created is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle\n  id: SafeMemoryMappedViewHandle\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n  langs:\n  - csharp\n  name: SafeMemoryMappedViewHandle\n  nameWithType: MemoryMappedViewAccessor.SafeMemoryMappedViewHandle\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Gets a handle to the view of a memory-mapped file.\n  syntax:\n    content: public Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle SafeMemoryMappedViewHandle { get; }\n    return:\n      type: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle\n      description: A wrapper for the operating system's handle to the view of the file.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.IO.UnmanagedMemoryAccessor\n  isExternal: false\n  name: System.IO.UnmanagedMemoryAccessor\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose(System.Boolean)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: MemoryMappedViewAccessor.Dispose(Boolean)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n  isExternal: false\n  name: Flush()\n  nameWithType: MemoryMappedViewAccessor.Flush()\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush()\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n  isExternal: false\n  name: PointerOffset\n  nameWithType: MemoryMappedViewAccessor.PointerOffset\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n  isExternal: false\n  name: SafeMemoryMappedViewHandle\n  nameWithType: MemoryMappedViewAccessor.SafeMemoryMappedViewHandle\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle\n- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle\n  parent: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: SafeMemoryMappedViewHandle\n  nameWithType: SafeMemoryMappedViewHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n  isExternal: false\n  name: Dispose\n  nameWithType: MemoryMappedViewAccessor.Dispose\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n  isExternal: false\n  name: Flush\n  nameWithType: MemoryMappedViewAccessor.Flush\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n  isExternal: false\n  name: PointerOffset\n  nameWithType: MemoryMappedViewAccessor.PointerOffset\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor\n  isExternal: false\n  name: SafeMemoryMappedViewHandle\n  nameWithType: MemoryMappedViewAccessor.SafeMemoryMappedViewHandle\n"}