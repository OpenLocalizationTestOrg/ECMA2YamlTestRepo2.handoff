{"nodes":[{"pos":[2629,2836],"content":"Encapsulates a <xref href=\"System.Drawing.Brush\"></xref> object that fills the interior of a <xref href=\"System.Drawing.Drawing2D.GraphicsPath\"></xref> object with a gradient. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Encapsulates a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Brush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that fills the interior of a <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Drawing2D.GraphicsPath\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object with a gradient.","pos":[0,175],"source":"Encapsulates a <xref href=\"System.Drawing.Brush\"></xref> object that fills the interior of a <xref href=\"System.Drawing.Drawing2D.GraphicsPath\"></xref> object with a gradient."},{"content":"This class cannot be inherited.","pos":[176,207]}]},{"pos":[2849,3371],"content":"The color gradient is a smooth shading of colors from the center point of the path to the outside boundary edge of the path. Blend factors, positions, and style affect where the gradient starts and ends, and how fast it changes shade.       Path gradient brushes do not obey the <xref:System.Drawing.Graphics.SmoothingMode%2A> property of the <xref:System.Drawing.Graphics> object used to do the drawing. Areas filled using a PathGradientBrush object are rendered the same way (aliased) regardless of the smoothing mode.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The color gradient is a smooth shading of colors from the center point of the path to the outside boundary edge of the path. Blend factors, positions, and style affect where the gradient starts and ends, and how fast it changes shade.       Path gradient brushes do not obey the <xref:System.Drawing.Graphics.SmoothingMode%2A> property of the <xref:System.Drawing.Graphics> object used to do the drawing. Areas filled using a PathGradientBrush object are rendered the same way (aliased) regardless of the smoothing mode.","pos":[0,520],"nodes":[{"content":"The color gradient is a smooth shading of colors from the center point of the path to the outside boundary edge of the path.","pos":[0,124]},{"content":"Blend factors, positions, and style affect where the gradient starts and ends, and how fast it changes shade.","pos":[125,234]},{"content":"Path gradient brushes do not obey the &lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt; property of the &lt;xref:System.Drawing.Graphics&gt; object used to do the drawing.","pos":[241,404],"source":"       Path gradient brushes do not obey the <xref:System.Drawing.Graphics.SmoothingMode%2A> property of the <xref:System.Drawing.Graphics> object used to do the drawing."},{"content":"Areas filled using a PathGradientBrush object are rendered the same way (aliased) regardless of the smoothing mode.","pos":[405,520]}]}]},{"pos":[4990,5118],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified path.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> class with the specified path."},{"pos":[5313,5477],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.GraphicsPath\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that defines the area filled by this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Drawing2D.GraphicsPath\"></xref> that defines the area filled by this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref>."},{"pos":[6051,6181],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified points.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> class with the specified points."},{"pos":[6350,6480],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures that represents the points that make up the vertices of the path.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Drawing.Point\"></xref> structures that represents the points that make up the vertices of the path."},{"pos":[7059,7189],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified points.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> class with the specified points."},{"pos":[7360,7491],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures that represents the points that make up the vertices of the path.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Drawing.PointF\"></xref> structures that represents the points that make up the vertices of the path."},{"pos":[8160,8304],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified points and wrap mode.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> class with the specified points and wrap mode."},{"pos":[8517,8647],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures that represents the points that make up the vertices of the path.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Drawing.Point\"></xref> structures that represents the points that make up the vertices of the path."},{"pos":[8732,8904],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.WrapMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies how fills drawn with this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> are tiled.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> that specifies how fills drawn with this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> are tiled."},{"pos":[9578,9722],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified points and wrap mode.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> class with the specified points and wrap mode."},{"pos":[9937,10068],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures that represents the points that make up the vertices of the path.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Drawing.PointF\"></xref> structures that represents the points that make up the vertices of the path."},{"pos":[10153,10325],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.WrapMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies how fills drawn with this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> are tiled.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> that specifies how fills drawn with this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> are tiled."},{"pos":[10783,10933],"content":"Gets or sets a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.Blend\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies positions and factors that define a custom falloff for the gradient.","needQuote":true,"needEscape":true,"source":"Gets or sets a <xref href=\"System.Drawing.Drawing2D.Blend\"></xref> that specifies positions and factors that define a custom falloff for the gradient."},{"pos":[10945,11242],"content":"A <xref:System.Drawing.Drawing2D.Blend> contains corresponding arrays of blend factors and positions. The blend factors specify the percentages of the starting color and ending color to use at the corresponding position. The positions are given as a percentage of distance along the gradient path.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A <xref:System.Drawing.Drawing2D.Blend> contains corresponding arrays of blend factors and positions. The blend factors specify the percentages of the starting color and ending color to use at the corresponding position. The positions are given as a percentage of distance along the gradient path.","pos":[0,297],"nodes":[{"content":"A &lt;xref:System.Drawing.Drawing2D.Blend&gt; contains corresponding arrays of blend factors and positions.","pos":[0,101],"source":"A <xref:System.Drawing.Drawing2D.Blend> contains corresponding arrays of blend factors and positions."},{"content":"The blend factors specify the percentages of the starting color and ending color to use at the corresponding position.","pos":[102,220]},{"content":"The positions are given as a percentage of distance along the gradient path.","pos":[221,297]}]}]},{"pos":[11398,11502],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.Blend\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents a custom falloff for the gradient.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Drawing2D.Blend\"></xref> that represents a custom falloff for the gradient."},{"pos":[11990,12048],"content":"Gets or sets the color at the center of the path gradient.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the color at the center of the path gradient.","pos":[0,58]}]},{"pos":[12190,12295],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the color at the center of the path gradient.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Color\"></xref> that represents the color at the center of the path gradient."},{"pos":[12789,12840],"content":"Gets or sets the center point of the path gradient.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the center point of the path gradient.","pos":[0,51]}]},{"pos":[12984,13083],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the center point of the path gradient.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.PointF\"></xref> that represents the center point of the path gradient."},{"pos":[13551,13645],"content":"Creates an exact copy of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates an exact copy of this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref>."},{"pos":[13778,13885],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> this method creates, cast as an object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> this method creates, cast as an object."},{"pos":[14373,14427],"content":"Gets or sets the focus point for the gradient falloff.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the focus point for the gradient falloff.","pos":[0,54]}]},{"pos":[14571,14673],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the focus point for the gradient falloff.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.PointF\"></xref> that represents the focus point for the gradient falloff."},{"pos":[15207,15321],"content":"Gets or sets a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.ColorBlend\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that defines a multicolor linear gradient.","needQuote":true,"needEscape":true,"source":"Gets or sets a <xref href=\"System.Drawing.Drawing2D.ColorBlend\"></xref> that defines a multicolor linear gradient."},{"pos":[15333,15584],"content":"A <xref:System.Drawing.Drawing2D.ColorBlend> contains corresponding arrays of colors and positions. The positions are values from 0 through 1 that specify the percentage of the distance along the gradient path where the corresponding color is located.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A <xref:System.Drawing.Drawing2D.ColorBlend> contains corresponding arrays of colors and positions. The positions are values from 0 through 1 that specify the percentage of the distance along the gradient path where the corresponding color is located.","pos":[0,251],"nodes":[{"content":"A &lt;xref:System.Drawing.Drawing2D.ColorBlend&gt; contains corresponding arrays of colors and positions.","pos":[0,99],"source":"A <xref:System.Drawing.Drawing2D.ColorBlend> contains corresponding arrays of colors and positions."},{"content":"The positions are values from 0 through 1 that specify the percentage of the distance along the gradient path where the corresponding color is located.","pos":[100,251]}]}]},{"pos":[15764,15865],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.ColorBlend\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that defines a multicolor linear gradient.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Drawing2D.ColorBlend\"></xref> that defines a multicolor linear gradient."},{"pos":[16485,16606],"content":"Updates the brush's transformation matrix with the product of brush's transformation matrix multiplied by another matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates the brush's transformation matrix with the product of brush's transformation matrix multiplied by another matrix.","pos":[0,121]}]},{"pos":[16919,17045],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.Matrix\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that will be multiplied by the brush's current transformation matrix.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that will be multiplied by the brush's current transformation matrix."},{"pos":[17773,17898],"content":"Updates the brush's transformation matrix with the product of the brush's transformation matrix multiplied by another matrix.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates the brush's transformation matrix with the product of the brush's transformation matrix multiplied by another matrix.","pos":[0,125]}]},{"pos":[19489,19615],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.Matrix\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that will be multiplied by the brush's current transformation matrix.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that will be multiplied by the brush's current transformation matrix."},{"pos":[19700,19819],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.MatrixOrder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies in which order to multiply the two matrices.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Drawing2D.MatrixOrder\"></xref> that specifies in which order to multiply the two matrices."},{"pos":[20309,20408],"content":"Gets a bounding rectangle for this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a bounding rectangle for this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref>."},{"pos":[20553,20735],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents a rectangular region that bounds the path this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> fills.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.RectangleF\"></xref> that represents a rectangular region that bounds the path this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> fills."},{"pos":[21246,21339],"content":"Resets the <xref:System.Drawing.Drawing2D.PathGradientBrush.Transform*> property to identity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resets the &lt;xref:System.Drawing.Drawing2D.PathGradientBrush.Transform*&gt; property to identity.","pos":[0,93],"source":"Resets the <xref:System.Drawing.Drawing2D.PathGradientBrush.Transform*> property to identity."}]},{"pos":[22297,22411],"content":"Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.","needQuote":true,"needEscape":true,"nodes":[{"content":"Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.","pos":[0,114],"nodes":[{"content":"Rotates the local geometric transform by the specified amount.","pos":[0,62]},{"content":"This method prepends the rotation to the transform.","pos":[63,114]}]}]},{"pos":[22674,22705],"content":"The angle (extent) of rotation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The angle (extent) of rotation.","pos":[0,31]}]},{"pos":[23385,23470],"content":"Rotates the local geometric transform by the specified amount in the specified order.","needQuote":true,"needEscape":true,"nodes":[{"content":"Rotates the local geometric transform by the specified amount in the specified order.","pos":[0,85]}]},{"pos":[25055,25086],"content":"The angle (extent) of rotation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The angle (extent) of rotation.","pos":[0,31]}]},{"pos":[25171,25295],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.MatrixOrder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies whether to append or prepend the rotation matrix.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Drawing2D.MatrixOrder\"></xref> that specifies whether to append or prepend the rotation matrix."},{"pos":[25909,26029],"content":"Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.","pos":[0,120],"nodes":[{"content":"Scales the local geometric transform by the specified amounts.","pos":[0,62]},{"content":"This method prepends the scaling matrix to the transform.","pos":[63,120]}]}]},{"pos":[26294,26345],"content":"The transform scale factor in the x-axis direction.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transform scale factor in the x-axis direction.","pos":[0,51]}]},{"pos":[26404,26455],"content":"The transform scale factor in the y-axis direction.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transform scale factor in the y-axis direction.","pos":[0,51]}]},{"pos":[27178,27263],"content":"Scales the local geometric transform by the specified amounts in the specified order.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scales the local geometric transform by the specified amounts in the specified order.","pos":[0,85]}]},{"pos":[29012,29063],"content":"The transform scale factor in the x-axis direction.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transform scale factor in the x-axis direction.","pos":[0,51]}]},{"pos":[29122,29173],"content":"The transform scale factor in the y-axis direction.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transform scale factor in the y-axis direction.","pos":[0,51]}]},{"pos":[29258,29381],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.MatrixOrder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies whether to append or prepend the scaling matrix.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Drawing2D.MatrixOrder\"></xref> that specifies whether to append or prepend the scaling matrix."},{"pos":[29990,30075],"content":"Creates a gradient with a center color and a linear falloff to one surrounding color.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a gradient with a center color and a linear falloff to one surrounding color.","pos":[0,85]}]},{"pos":[30087,30353],"content":"If there is more than one color in the <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> array, the first color in the array is used for the ending color. The colors specified in this array are used for discrete points on the brush's boundary path.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If there is more than one color in the <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> array, the first color in the array is used for the ending color. The colors specified in this array are used for discrete points on the brush's boundary path.","pos":[0,266],"nodes":[{"content":"If there is more than one color in the &lt;xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A&gt; array, the first color in the array is used for the ending color.","pos":[0,172],"source":"If there is more than one color in the <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> array, the first color in the array is used for the ending color."},{"content":"The colors specified in this array are used for discrete points on the brush's boundary path.","pos":[173,266]}]}]},{"pos":[30620,30869],"content":"A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.","pos":[0,249],"nodes":[{"content":"A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity.","pos":[0,166]},{"content":"A value of 1 (the default) places the highest intensity at the center of the path.","pos":[167,249]}]}]},{"pos":[31536,31622],"content":"Creates a gradient with a center color and a linear falloff to each surrounding color.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a gradient with a center color and a linear falloff to each surrounding color.","pos":[0,86]}]},{"pos":[31635,32176],"content":"If there is more than one color in the <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> array, the first color in the array is used for the ending color. The colors specified in this array are colors used for discrete points on the brush's boundary path.       By default, as you move from the boundary of a path gradient to the center point, the color changes gradually from the boundary color to the center color. You can customize the positioning and blending of the boundary and center colors by calling this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If there is more than one color in the <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> array, the first color in the array is used for the ending color. The colors specified in this array are colors used for discrete points on the brush's boundary path.       By default, as you move from the boundary of a path gradient to the center point, the color changes gradually from the boundary color to the center color. You can customize the positioning and blending of the boundary and center colors by calling this method.","pos":[0,539],"nodes":[{"content":"If there is more than one color in the &lt;xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A&gt; array, the first color in the array is used for the ending color.","pos":[0,172],"source":"If there is more than one color in the <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> array, the first color in the array is used for the ending color."},{"content":"The colors specified in this array are colors used for discrete points on the brush's boundary path.","pos":[173,273]},{"content":"By default, as you move from the boundary of a path gradient to the center point, the color changes gradually from the boundary color to the center color.","pos":[280,434]},{"content":"You can customize the positioning and blending of the boundary and center colors by calling this method.","pos":[435,539]}]}]},{"pos":[33940,34189],"content":"A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.","pos":[0,249],"nodes":[{"content":"A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity.","pos":[0,166]},{"content":"A value of 1 (the default) places the highest intensity at the center of the path.","pos":[167,249]}]}]},{"pos":[34251,34476],"content":"A value from 0 through 1 that specifies the maximum intensity of the center color that gets blended with the boundary color. A value of 1 causes the highest possible intensity of the center color, and it is the default value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value from 0 through 1 that specifies the maximum intensity of the center color that gets blended with the boundary color. A value of 1 causes the highest possible intensity of the center color, and it is the default value.","pos":[0,225],"nodes":[{"content":"A value from 0 through 1 that specifies the maximum intensity of the center color that gets blended with the boundary color.","pos":[0,124]},{"content":"A value of 1 causes the highest possible intensity of the center color, and it is the default value.","pos":[125,225]}]}]},{"pos":[35064,35250],"content":"Creates a gradient brush that changes color starting from the center of the path outward to the path's boundary. The transition from one color to another is based on a bell-shaped curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a gradient brush that changes color starting from the center of the path outward to the path's boundary. The transition from one color to another is based on a bell-shaped curve.","pos":[0,186],"nodes":[{"content":"Creates a gradient brush that changes color starting from the center of the path outward to the path's boundary.","pos":[0,112]},{"content":"The transition from one color to another is based on a bell-shaped curve.","pos":[113,186]}]}]},{"pos":[35263,35804],"content":"If there is more than one color in the <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> array, the first color in the array is used for the ending color. The colors specified in this array are colors used for discrete points on the brush's boundary path.       By default, as you move from the boundary of a path gradient to the center point, the color changes gradually from the boundary color to the center color. You can customize the positioning and blending of the boundary and center colors by calling this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If there is more than one color in the <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> array, the first color in the array is used for the ending color. The colors specified in this array are colors used for discrete points on the brush's boundary path.       By default, as you move from the boundary of a path gradient to the center point, the color changes gradually from the boundary color to the center color. You can customize the positioning and blending of the boundary and center colors by calling this method.","pos":[0,539],"nodes":[{"content":"If there is more than one color in the &lt;xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A&gt; array, the first color in the array is used for the ending color.","pos":[0,172],"source":"If there is more than one color in the <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> array, the first color in the array is used for the ending color."},{"content":"The colors specified in this array are colors used for discrete points on the brush's boundary path.","pos":[173,273]},{"content":"By default, as you move from the boundary of a path gradient to the center point, the color changes gradually from the boundary color to the center color.","pos":[280,434]},{"content":"You can customize the positioning and blending of the boundary and center colors by calling this method.","pos":[435,539]}]}]},{"pos":[36058,36307],"content":"A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.","pos":[0,249],"nodes":[{"content":"A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity.","pos":[0,166]},{"content":"A value of 1 (the default) places the highest intensity at the center of the path.","pos":[167,249]}]}]},{"pos":[36938,37124],"content":"Creates a gradient brush that changes color starting from the center of the path outward to the path's boundary. The transition from one color to another is based on a bell-shaped curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a gradient brush that changes color starting from the center of the path outward to the path's boundary. The transition from one color to another is based on a bell-shaped curve.","pos":[0,186],"nodes":[{"content":"Creates a gradient brush that changes color starting from the center of the path outward to the path's boundary.","pos":[0,112]},{"content":"The transition from one color to another is based on a bell-shaped curve.","pos":[113,186]}]}]},{"pos":[37137,37678],"content":"If there is more than one color in the <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> array, the first color in the array is used for the ending color. The colors specified in this array are colors used for discrete points on the brush's boundary path.       By default, as you move from the boundary of a path gradient to the center point, the color changes gradually from the boundary color to the center color. You can customize the positioning and blending of the boundary and center colors by calling this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If there is more than one color in the <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> array, the first color in the array is used for the ending color. The colors specified in this array are colors used for discrete points on the brush's boundary path.       By default, as you move from the boundary of a path gradient to the center point, the color changes gradually from the boundary color to the center color. You can customize the positioning and blending of the boundary and center colors by calling this method.","pos":[0,539],"nodes":[{"content":"If there is more than one color in the &lt;xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A&gt; array, the first color in the array is used for the ending color.","pos":[0,172],"source":"If there is more than one color in the <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> array, the first color in the array is used for the ending color."},{"content":"The colors specified in this array are colors used for discrete points on the brush's boundary path.","pos":[173,273]},{"content":"By default, as you move from the boundary of a path gradient to the center point, the color changes gradually from the boundary color to the center color.","pos":[280,434]},{"content":"You can customize the positioning and blending of the boundary and center colors by calling this method.","pos":[435,539]}]}]},{"pos":[39421,39670],"content":"A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.","pos":[0,249],"nodes":[{"content":"A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity.","pos":[0,166]},{"content":"A value of 1 (the default) places the highest intensity at the center of the path.","pos":[167,249]}]}]},{"pos":[39732,39957],"content":"A value from 0 through 1 that specifies the maximum intensity of the center color that gets blended with the boundary color. A value of 1 causes the highest possible intensity of the center color, and it is the default value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value from 0 through 1 that specifies the maximum intensity of the center color that gets blended with the boundary color. A value of 1 causes the highest possible intensity of the center color, and it is the default value.","pos":[0,225],"nodes":[{"content":"A value from 0 through 1 that specifies the maximum intensity of the center color that gets blended with the boundary color.","pos":[0,124]},{"content":"A value of 1 causes the highest possible intensity of the center color, and it is the default value.","pos":[125,225]}]}]},{"pos":[40472,40621],"content":"Gets or sets an array of colors that correspond to the points in the path this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> fills.","needQuote":true,"needEscape":true,"source":"Gets or sets an array of colors that correspond to the points in the path this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> fills."},{"pos":[40633,40729],"content":"Each <xref:System.Drawing.Color> in the SurroundColors array corresponds to a point in the path.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Each &lt;xref:System.Drawing.Color&gt; in the SurroundColors array corresponds to a point in the path.","pos":[0,96],"source":"Each <xref:System.Drawing.Color> in the SurroundColors array corresponds to a point in the path."}]},{"pos":[40878,41084],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Color\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures that represents the colors associated with each point in the path this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> fills.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Drawing.Color\"></xref> structures that represents the colors associated with each point in the path this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> fills."},{"pos":[41571,41765],"content":"Gets or sets a copy of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.Matrix\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that defines a local geometric transform for this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets a copy of the <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that defines a local geometric transform for this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref>."},{"pos":[41777,42031],"content":"A geometric transform can be used to translate, scale, rotate, or skew the gradient fill. Because the matrix returned and by the Transform property is a copy of the brush's geometric transform, you should dispose of the matrix when you no longer need it.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A geometric transform can be used to translate, scale, rotate, or skew the gradient fill. Because the matrix returned and by the Transform property is a copy of the brush's geometric transform, you should dispose of the matrix when you no longer need it.","pos":[0,254],"nodes":[{"content":"A geometric transform can be used to translate, scale, rotate, or skew the gradient fill.","pos":[0,89]},{"content":"Because the matrix returned and by the Transform property is a copy of the brush's geometric transform, you should dispose of the matrix when you no longer need it.","pos":[90,254]}]}]},{"pos":[42193,42402],"content":"A copy of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.Matrix\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that defines a geometric transform that applies only to fills drawn with this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A copy of the <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that defines a geometric transform that applies only to fills drawn with this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref>."},{"pos":[43030,43152],"content":"Applies the specified translation to the local geometric transform. This method prepends the translation to the transform.","needQuote":true,"needEscape":true,"nodes":[{"content":"Applies the specified translation to the local geometric transform. This method prepends the translation to the transform.","pos":[0,122],"nodes":[{"content":"Applies the specified translation to the local geometric transform.","pos":[0,67]},{"content":"This method prepends the translation to the transform.","pos":[68,122]}]}]},{"pos":[43430,43464],"content":"The value of the translation in x.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the translation in x.","pos":[0,34]}]},{"pos":[43523,43557],"content":"The value of the translation in y.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the translation in y.","pos":[0,34]}]},{"pos":[44304,44394],"content":"Applies the specified translation to the local geometric transform in the specified order.","needQuote":true,"needEscape":true,"nodes":[{"content":"Applies the specified translation to the local geometric transform in the specified order.","pos":[0,90]}]},{"pos":[44716,44750],"content":"The value of the translation in x.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the translation in x.","pos":[0,34]}]},{"pos":[44809,44843],"content":"The value of the translation in y.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the translation in y.","pos":[0,34]}]},{"pos":[44928,44992],"content":"The order (prepend or append) in which to apply the translation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The order (prepend or append) in which to apply the translation.","pos":[0,64]}]},{"pos":[45478,45650],"content":"Gets or sets a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.WrapMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the wrap mode for this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets a <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> that indicates the wrap mode for this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref>."},{"pos":[45815,45987],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.WrapMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies how fills drawn with this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> are tiled.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> that specifies how fills drawn with this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> are tiled."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.Drawing2D.PathGradientBrush\n  id: PathGradientBrush\n  children:\n  - System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Drawing2D.GraphicsPath)\n  - System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[])\n  - System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[])\n  - System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)\n  - System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)\n  - System.Drawing.Drawing2D.PathGradientBrush.Blend\n  - System.Drawing.Drawing2D.PathGradientBrush.CenterColor\n  - System.Drawing.Drawing2D.PathGradientBrush.CenterPoint\n  - System.Drawing.Drawing2D.PathGradientBrush.Clone\n  - System.Drawing.Drawing2D.PathGradientBrush.FocusScales\n  - System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors\n  - System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)\n  - System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)\n  - System.Drawing.Drawing2D.PathGradientBrush.Rectangle\n  - System.Drawing.Drawing2D.PathGradientBrush.ResetTransform\n  - System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single)\n  - System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  - System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single)\n  - System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  - System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single)\n  - System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)\n  - System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single)\n  - System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single,System.Single)\n  - System.Drawing.Drawing2D.PathGradientBrush.SurroundColors\n  - System.Drawing.Drawing2D.PathGradientBrush.Transform\n  - System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single)\n  - System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  - System.Drawing.Drawing2D.PathGradientBrush.WrapMode\n  langs:\n  - csharp\n  name: PathGradientBrush\n  nameWithType: PathGradientBrush\n  fullName: System.Drawing.Drawing2D.PathGradientBrush\n  type: Class\n  summary: Encapsulates a <xref href=\"System.Drawing.Brush\"></xref> object that fills the interior of a <xref href=\"System.Drawing.Drawing2D.GraphicsPath\"></xref> object with a gradient. This class cannot be inherited.\n  remarks: \"The color gradient is a smooth shading of colors from the center point of the path to the outside boundary edge of the path. Blend factors, positions, and style affect where the gradient starts and ends, and how fast it changes shade.  \\n  \\n Path gradient brushes do not obey the <xref:System.Drawing.Graphics.SmoothingMode%2A> property of the <xref:System.Drawing.Graphics> object used to do the drawing. Areas filled using a PathGradientBrush object are rendered the same way (aliased) regardless of the smoothing mode.\"\n  example:\n  - \"The following code example shows how to create a PathGradientBrush. This example  is designed for use with Windows Forms, and it requires the <xref:System.Windows.Forms.PaintEventArgs> e, which is a parameter of <xref:System.Windows.Forms.PaintEventHandler>.  \\n  \\n [!code-vb[System.Drawing.UsingaGradientBrush#11](~/add/codesnippet/visualbasic/t-system.drawing.drawing_8_1.vb)]\\n [!code-cs[System.Drawing.UsingaGradientBrush#11](~/add/codesnippet/csharp/t-system.drawing.drawing_8_1.cs)]\"\n  syntax:\n    content: 'public sealed class PathGradientBrush : System.Drawing.Brush'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.Drawing.Brush\n  implements: []\n  inheritedMembers:\n  - System.Drawing.Brush.Dispose\n  - System.Drawing.Brush.Dispose(System.Boolean)\n  - System.Drawing.Brush.SetNativeBrush(System.IntPtr)\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Drawing2D.GraphicsPath)\n  id: '#ctor(System.Drawing.Drawing2D.GraphicsPath)'\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: PathGradientBrush(GraphicsPath)\n  nameWithType: PathGradientBrush.PathGradientBrush(GraphicsPath)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(GraphicsPath)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> class with the specified path.\n  syntax:\n    content: public PathGradientBrush (System.Drawing.Drawing2D.GraphicsPath path);\n    parameters:\n    - id: path\n      type: System.Drawing.Drawing2D.GraphicsPath\n      description: The <xref href=\"System.Drawing.Drawing2D.GraphicsPath\"></xref> that defines the area filled by this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref>.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[])\n  id: '#ctor(System.Drawing.Point[])'\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: PathGradientBrush(Point[])\n  nameWithType: PathGradientBrush.PathGradientBrush(Point[])\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(Point[])\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> class with the specified points.\n  syntax:\n    content: public PathGradientBrush (System.Drawing.Point[] points);\n    parameters:\n    - id: points\n      type: System.Drawing.Point[]\n      description: An array of <xref href=\"System.Drawing.Point\"></xref> structures that represents the points that make up the vertices of the path.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[])\n  id: '#ctor(System.Drawing.PointF[])'\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: PathGradientBrush(PointF[])\n  nameWithType: PathGradientBrush.PathGradientBrush(PointF[])\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(PointF[])\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> class with the specified points.\n  syntax:\n    content: public PathGradientBrush (System.Drawing.PointF[] points);\n    parameters:\n    - id: points\n      type: System.Drawing.PointF[]\n      description: An array of <xref href=\"System.Drawing.PointF\"></xref> structures that represents the points that make up the vertices of the path.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)\n  id: '#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)'\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: PathGradientBrush(Point[],WrapMode)\n  nameWithType: PathGradientBrush.PathGradientBrush(Point[],WrapMode)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(Point[],WrapMode)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> class with the specified points and wrap mode.\n  syntax:\n    content: public PathGradientBrush (System.Drawing.Point[] points, System.Drawing.Drawing2D.WrapMode wrapMode);\n    parameters:\n    - id: points\n      type: System.Drawing.Point[]\n      description: An array of <xref href=\"System.Drawing.Point\"></xref> structures that represents the points that make up the vertices of the path.\n    - id: wrapMode\n      type: System.Drawing.Drawing2D.WrapMode\n      description: A <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> that specifies how fills drawn with this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> are tiled.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)\n  id: '#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)'\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: PathGradientBrush(PointF[],WrapMode)\n  nameWithType: PathGradientBrush.PathGradientBrush(PointF[],WrapMode)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(PointF[],WrapMode)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> class with the specified points and wrap mode.\n  syntax:\n    content: public PathGradientBrush (System.Drawing.PointF[] points, System.Drawing.Drawing2D.WrapMode wrapMode);\n    parameters:\n    - id: points\n      type: System.Drawing.PointF[]\n      description: An array of <xref href=\"System.Drawing.PointF\"></xref> structures that represents the points that make up the vertices of the path.\n    - id: wrapMode\n      type: System.Drawing.Drawing2D.WrapMode\n      description: A <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> that specifies how fills drawn with this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> are tiled.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.Blend\n  id: Blend\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: Blend\n  nameWithType: PathGradientBrush.Blend\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.Blend\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets a <xref href=\"System.Drawing.Drawing2D.Blend\"></xref> that specifies positions and factors that define a custom falloff for the gradient.\n  remarks: A <xref:System.Drawing.Drawing2D.Blend> contains corresponding arrays of blend factors and positions. The blend factors specify the percentages of the starting color and ending color to use at the corresponding position. The positions are given as a percentage of distance along the gradient path.\n  syntax:\n    content: public System.Drawing.Drawing2D.Blend Blend { get; set; }\n    return:\n      type: System.Drawing.Drawing2D.Blend\n      description: A <xref href=\"System.Drawing.Drawing2D.Blend\"></xref> that represents a custom falloff for the gradient.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.Blend*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.CenterColor\n  id: CenterColor\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: CenterColor\n  nameWithType: PathGradientBrush.CenterColor\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.CenterColor\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets the color at the center of the path gradient.\n  syntax:\n    content: public System.Drawing.Color CenterColor { get; set; }\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> that represents the color at the center of the path gradient.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.CenterColor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.CenterPoint\n  id: CenterPoint\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: CenterPoint\n  nameWithType: PathGradientBrush.CenterPoint\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.CenterPoint\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets the center point of the path gradient.\n  syntax:\n    content: public System.Drawing.PointF CenterPoint { get; set; }\n    return:\n      type: System.Drawing.PointF\n      description: A <xref href=\"System.Drawing.PointF\"></xref> that represents the center point of the path gradient.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.CenterPoint*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.Clone\n  id: Clone\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: PathGradientBrush.Clone()\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.Clone()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Creates an exact copy of this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref>.\n  syntax:\n    content: public override object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> this method creates, cast as an object.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.FocusScales\n  id: FocusScales\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: FocusScales\n  nameWithType: PathGradientBrush.FocusScales\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.FocusScales\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets the focus point for the gradient falloff.\n  syntax:\n    content: public System.Drawing.PointF FocusScales { get; set; }\n    return:\n      type: System.Drawing.PointF\n      description: A <xref href=\"System.Drawing.PointF\"></xref> that represents the focus point for the gradient falloff.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.FocusScales*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors\n  id: InterpolationColors\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: InterpolationColors\n  nameWithType: PathGradientBrush.InterpolationColors\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets a <xref href=\"System.Drawing.Drawing2D.ColorBlend\"></xref> that defines a multicolor linear gradient.\n  remarks: A <xref:System.Drawing.Drawing2D.ColorBlend> contains corresponding arrays of colors and positions. The positions are values from 0 through 1 that specify the percentage of the distance along the gradient path where the corresponding color is located.\n  syntax:\n    content: public System.Drawing.Drawing2D.ColorBlend InterpolationColors { get; set; }\n    return:\n      type: System.Drawing.Drawing2D.ColorBlend\n      description: A <xref href=\"System.Drawing.Drawing2D.ColorBlend\"></xref> that defines a multicolor linear gradient.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)\n  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: MultiplyTransform(Matrix)\n  nameWithType: PathGradientBrush.MultiplyTransform(Matrix)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(Matrix)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Updates the brush's transformation matrix with the product of brush's transformation matrix multiplied by another matrix.\n  remarks: ''\n  example:\n  - For an example, see <xref:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform%2A>.\n  syntax:\n    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);\n    parameters:\n    - id: matrix\n      type: System.Drawing.Drawing2D.Matrix\n      description: The <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that will be multiplied by the brush's current transformation matrix.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)\n  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: MultiplyTransform(Matrix,MatrixOrder)\n  nameWithType: PathGradientBrush.MultiplyTransform(Matrix,MatrixOrder)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(Matrix,MatrixOrder)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Updates the brush's transformation matrix with the product of the brush's transformation matrix multiplied by another matrix.\n  remarks: ''\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \\n  \\n-   Creates a graphics path and adds a rectangle to it.  \\n  \\n-   Creates a <xref:System.Drawing.Drawing2D.PathGradientBrush> from the path points (in this example, the points form a rectangle, but it could be most any shape).  \\n  \\n-   Sets the center color to red and the surrounding color to blue.  \\n  \\n-   Draws the <xref:System.Drawing.Drawing2D.PathGradientBrush> to the screen prior to applying the multiply transform.  \\n  \\n-   Creates s matrix that rotates the brush 90 degrees and translates it by 100 in both axes.  \\n  \\n-   Applies this matrix to the brush by using the <xref:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform%2A> method.  \\n  \\n-   Draws the brush to the screen.  \\n  \\n [!code-cs[System.Drawing.Drawing2D.ClassicPathGradientBrush#1](~/add/codesnippet/csharp/b1f99943-a9ce-4eb4-b1cf-_1.cs)]\\n [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#1](~/add/codesnippet/visualbasic/b1f99943-a9ce-4eb4-b1cf-_1.vb)]\\n [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#1](~/add/codesnippet/cpp/b1f99943-a9ce-4eb4-b1cf-_1.cpp)]\"\n  syntax:\n    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);\n    parameters:\n    - id: matrix\n      type: System.Drawing.Drawing2D.Matrix\n      description: The <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that will be multiplied by the brush's current transformation matrix.\n    - id: order\n      type: System.Drawing.Drawing2D.MatrixOrder\n      description: A <xref href=\"System.Drawing.Drawing2D.MatrixOrder\"></xref> that specifies in which order to multiply the two matrices.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.Rectangle\n  id: Rectangle\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: Rectangle\n  nameWithType: PathGradientBrush.Rectangle\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.Rectangle\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets a bounding rectangle for this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref>.\n  syntax:\n    content: public System.Drawing.RectangleF Rectangle { get; }\n    return:\n      type: System.Drawing.RectangleF\n      description: A <xref href=\"System.Drawing.RectangleF\"></xref> that represents a rectangular region that bounds the path this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> fills.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.Rectangle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.ResetTransform\n  id: ResetTransform\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: ResetTransform()\n  nameWithType: PathGradientBrush.ResetTransform()\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.ResetTransform()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Resets the <xref:System.Drawing.Drawing2D.PathGradientBrush.Transform*> property to identity.\n  remarks: ''\n  example:\n  - \"The following code example resets the geometric transform of `pgBrush` to identity. It is assumed that `myPath` is an existing <xref:System.Drawing.Drawing2D.GraphicsPath>.  \\n  \\n```c#  \\nPathGradientBrush pgBrush = new PathGradientBrush(myPath);  \\n pgBrush.ResetTransform();  \\n```\"\n  syntax:\n    content: public void ResetTransform ();\n    parameters: []\n  overload: System.Drawing.Drawing2D.PathGradientBrush.ResetTransform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single)\n  id: RotateTransform(System.Single)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: RotateTransform(Single)\n  nameWithType: PathGradientBrush.RotateTransform(Single)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.\n  remarks: ''\n  example:\n  - For an example, see <xref:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform%2A>.\n  syntax:\n    content: public void RotateTransform (float angle);\n    parameters:\n    - id: angle\n      type: System.Single\n      description: The angle (extent) of rotation.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  id: RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: RotateTransform(Single,MatrixOrder)\n  nameWithType: PathGradientBrush.RotateTransform(Single,MatrixOrder)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(Single,MatrixOrder)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Rotates the local geometric transform by the specified amount in the specified order.\n  remarks: ''\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \\n  \\n-   Creates a graphics path and adds a rectangle to it.  \\n  \\n-   Creates a <xref:System.Drawing.Drawing2D.PathGradientBrush> from the path points (in this example, the points form a rectangle, but it could be most any shape).  \\n  \\n-   Sets the center color to red and the surrounding color to blue.  \\n  \\n-   Draws the <xref:System.Drawing.Drawing2D.PathGradientBrush> to the screen prior to applying the rotate transform.  \\n  \\n-   Applies the rotate transform to the brush by using its <xref:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform%2A> method.  \\n  \\n-   Draws the rotated brush (rectangle) to the screen.  \\n  \\n Notice that the bottom rectangle is rotated 45 degrees as compared to the one drawn prior to the translation.  \\n  \\n [!code-cs[System.Drawing.Drawing2D.ClassicPathGradientBrush#2](~/add/codesnippet/csharp/58f57d52-58d7-4091-ab9a-_1.cs)]\\n [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#2](~/add/codesnippet/visualbasic/58f57d52-58d7-4091-ab9a-_1.vb)]\\n [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#2](~/add/codesnippet/cpp/58f57d52-58d7-4091-ab9a-_1.cpp)]\"\n  syntax:\n    content: public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);\n    parameters:\n    - id: angle\n      type: System.Single\n      description: The angle (extent) of rotation.\n    - id: order\n      type: System.Drawing.Drawing2D.MatrixOrder\n      description: A <xref href=\"System.Drawing.Drawing2D.MatrixOrder\"></xref> that specifies whether to append or prepend the rotation matrix.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single)\n  id: ScaleTransform(System.Single,System.Single)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: ScaleTransform(Single,Single)\n  nameWithType: PathGradientBrush.ScaleTransform(Single,Single)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(Single,Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.\n  remarks: ''\n  example:\n  - For an example, see <xref:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform%2A>.\n  syntax:\n    content: public void ScaleTransform (float sx, float sy);\n    parameters:\n    - id: sx\n      type: System.Single\n      description: The transform scale factor in the x-axis direction.\n    - id: sy\n      type: System.Single\n      description: The transform scale factor in the y-axis direction.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  id: ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: ScaleTransform(Single,Single,MatrixOrder)\n  nameWithType: PathGradientBrush.ScaleTransform(Single,Single,MatrixOrder)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(Single,Single,MatrixOrder)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Scales the local geometric transform by the specified amounts in the specified order.\n  remarks: ''\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code  \\n  \\n-   Creates a graphics path and adds a rectangle to it.  \\n  \\n-   Creates a <xref:System.Drawing.Drawing2D.PathGradientBrush> from the path points (in this example, the points form a rectangle, but it could be most any shape).  \\n  \\n-   Sets the center color to red and the surrounding color to blue.  \\n  \\n-   Draws the <xref:System.Drawing.Drawing2D.PathGradientBrush> to the screen prior to applying the scale transform.  \\n  \\n-   Applies the scale transform to the brush by using its <xref:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform%2A> method.  \\n  \\n-   Calls the <xref:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform%2A> method to move the brush rectangle such that it does not overlay the one drawn to the screen earlier.  \\n  \\n-   Draws the translated brush rectangle to the screen.  \\n  \\n Notice that the bottom rectangle is twice as long in the x-axis as is the one drawn prior to the translation.  \\n  \\n [!code-cs[System.Drawing.Drawing2D.ClassicPathGradientBrush#3](~/add/codesnippet/csharp/8bf9fd7d-bfd2-4d1e-a571-_1.cs)]\\n [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#3](~/add/codesnippet/visualbasic/8bf9fd7d-bfd2-4d1e-a571-_1.vb)]\\n [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#3](~/add/codesnippet/cpp/8bf9fd7d-bfd2-4d1e-a571-_1.cpp)]\"\n  syntax:\n    content: public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);\n    parameters:\n    - id: sx\n      type: System.Single\n      description: The transform scale factor in the x-axis direction.\n    - id: sy\n      type: System.Single\n      description: The transform scale factor in the y-axis direction.\n    - id: order\n      type: System.Drawing.Drawing2D.MatrixOrder\n      description: A <xref href=\"System.Drawing.Drawing2D.MatrixOrder\"></xref> that specifies whether to append or prepend the scaling matrix.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single)\n  id: SetBlendTriangularShape(System.Single)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: SetBlendTriangularShape(Single)\n  nameWithType: PathGradientBrush.SetBlendTriangularShape(Single)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Creates a gradient with a center color and a linear falloff to one surrounding color.\n  remarks: If there is more than one color in the <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> array, the first color in the array is used for the ending color. The colors specified in this array are used for discrete points on the brush's boundary path.\n  example:\n  - For an example, see <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A>`.`\n  syntax:\n    content: public void SetBlendTriangularShape (float focus);\n    parameters:\n    - id: focus\n      type: System.Single\n      description: A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)\n  id: SetBlendTriangularShape(System.Single,System.Single)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: SetBlendTriangularShape(Single,Single)\n  nameWithType: PathGradientBrush.SetBlendTriangularShape(Single,Single)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(Single,Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Creates a gradient with a center color and a linear falloff to each surrounding color.\n  remarks: \"If there is more than one color in the <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> array, the first color in the array is used for the ending color. The colors specified in this array are colors used for discrete points on the brush's boundary path.  \\n  \\n By default, as you move from the boundary of a path gradient to the center point, the color changes gradually from the boundary color to the center color. You can customize the positioning and blending of the boundary and center colors by calling this method.\"\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \\n  \\n-   Creates a graphics path and adds a rectangle to it.  \\n  \\n-   Creates a <xref:System.Drawing.Drawing2D.PathGradientBrush> from the path points (in this example, the points form a rectangle, but it could be most any shape).  \\n  \\n-   Sets the center color to red and the surrounding color to blue.  \\n  \\n-   Draws the <xref:System.Drawing.Drawing2D.PathGradientBrush> to the screen prior to applying the blend transform.  \\n  \\n-   Applies the blend transform to the brush by using its <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A> method.  \\n  \\n-   Calls the <xref:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform%2A> method to move the brush rectangle such that it does not overlay the one drawn to the screen earlier.  \\n  \\n-   Draws the transformed-brush rectangle is drawn to the screen.  \\n  \\n Notice that the maximum center color (red) is located half way from the center of the path to the path boundary.  \\n  \\n [!code-cs[System.Drawing.Drawing2D.ClassicPathGradientBrush#4](~/add/codesnippet/csharp/ca10f477-4012-4625-8488-_1.cs)]\\n [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#4](~/add/codesnippet/visualbasic/ca10f477-4012-4625-8488-_1.vb)]\\n [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#4](~/add/codesnippet/cpp/ca10f477-4012-4625-8488-_1.cpp)]\"\n  syntax:\n    content: public void SetBlendTriangularShape (float focus, float scale);\n    parameters:\n    - id: focus\n      type: System.Single\n      description: A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.\n    - id: scale\n      type: System.Single\n      description: A value from 0 through 1 that specifies the maximum intensity of the center color that gets blended with the boundary color. A value of 1 causes the highest possible intensity of the center color, and it is the default value.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single)\n  id: SetSigmaBellShape(System.Single)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: SetSigmaBellShape(Single)\n  nameWithType: PathGradientBrush.SetSigmaBellShape(Single)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Creates a gradient brush that changes color starting from the center of the path outward to the path's boundary. The transition from one color to another is based on a bell-shaped curve.\n  remarks: \"If there is more than one color in the <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> array, the first color in the array is used for the ending color. The colors specified in this array are colors used for discrete points on the brush's boundary path.  \\n  \\n By default, as you move from the boundary of a path gradient to the center point, the color changes gradually from the boundary color to the center color. You can customize the positioning and blending of the boundary and center colors by calling this method.\"\n  example:\n  - For an example, see <xref:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape%2A>.\n  syntax:\n    content: public void SetSigmaBellShape (float focus);\n    parameters:\n    - id: focus\n      type: System.Single\n      description: A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single,System.Single)\n  id: SetSigmaBellShape(System.Single,System.Single)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: SetSigmaBellShape(Single,Single)\n  nameWithType: PathGradientBrush.SetSigmaBellShape(Single,Single)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(Single,Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Creates a gradient brush that changes color starting from the center of the path outward to the path's boundary. The transition from one color to another is based on a bell-shaped curve.\n  remarks: \"If there is more than one color in the <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> array, the first color in the array is used for the ending color. The colors specified in this array are colors used for discrete points on the brush's boundary path.  \\n  \\n By default, as you move from the boundary of a path gradient to the center point, the color changes gradually from the boundary color to the center color. You can customize the positioning and blending of the boundary and center colors by calling this method.\"\n  example:\n  - \"The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \\n  \\n-   Creates a graphics path and adds a rectangle to it.  \\n  \\n-   Creates a <xref:System.Drawing.Drawing2D.PathGradientBrush> from the path points (in this example, the points form a rectangle, but it could be most any shape).  \\n  \\n-   Sets the center color to red and the surrounding color to blue.  \\n  \\n-   Draws the <xref:System.Drawing.Drawing2D.PathGradientBrush> to the screen prior to applying the blend transform.  \\n  \\n-   Applies the blend transform to the brush by using its <xref:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape%2A> method.  \\n  \\n-   Calls the <xref:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform%2A> method to move the brush rectangle such that it does not overlay the one drawn to the screen earlier.  \\n  \\n-   Draws the transformed-brush rectangle to the screen.  \\n  \\n Notice that the maximum center color (red) is located half way from the center of the path to the path boundary.  \\n  \\n [!code-cs[System.Drawing.Drawing2D.ClassicPathGradientBrush#5](~/add/codesnippet/csharp/41ba2cc8-a1c4-4664-a9a4-_1.cs)]\\n [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#5](~/add/codesnippet/visualbasic/41ba2cc8-a1c4-4664-a9a4-_1.vb)]\\n [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#5](~/add/codesnippet/cpp/41ba2cc8-a1c4-4664-a9a4-_1.cpp)]\"\n  syntax:\n    content: public void SetSigmaBellShape (float focus, float scale);\n    parameters:\n    - id: focus\n      type: System.Single\n      description: A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.\n    - id: scale\n      type: System.Single\n      description: A value from 0 through 1 that specifies the maximum intensity of the center color that gets blended with the boundary color. A value of 1 causes the highest possible intensity of the center color, and it is the default value.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.SurroundColors\n  id: SurroundColors\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: SurroundColors\n  nameWithType: PathGradientBrush.SurroundColors\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.SurroundColors\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets an array of colors that correspond to the points in the path this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> fills.\n  remarks: Each <xref:System.Drawing.Color> in the SurroundColors array corresponds to a point in the path.\n  syntax:\n    content: public System.Drawing.Color[] SurroundColors { get; set; }\n    return:\n      type: System.Drawing.Color[]\n      description: An array of <xref href=\"System.Drawing.Color\"></xref> structures that represents the colors associated with each point in the path this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> fills.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.SurroundColors*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.Transform\n  id: Transform\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: Transform\n  nameWithType: PathGradientBrush.Transform\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.Transform\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets a copy of the <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that defines a local geometric transform for this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref>.\n  remarks: A geometric transform can be used to translate, scale, rotate, or skew the gradient fill. Because the matrix returned and by the Transform property is a copy of the brush's geometric transform, you should dispose of the matrix when you no longer need it.\n  syntax:\n    content: public System.Drawing.Drawing2D.Matrix Transform { get; set; }\n    return:\n      type: System.Drawing.Drawing2D.Matrix\n      description: A copy of the <xref href=\"System.Drawing.Drawing2D.Matrix\"></xref> that defines a geometric transform that applies only to fills drawn with this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref>.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.Transform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single)\n  id: TranslateTransform(System.Single,System.Single)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: TranslateTransform(Single,Single)\n  nameWithType: PathGradientBrush.TranslateTransform(Single,Single)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(Single,Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Applies the specified translation to the local geometric transform. This method prepends the translation to the transform.\n  remarks: ''\n  example:\n  - For an example, see <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A>.\n  syntax:\n    content: public void TranslateTransform (float dx, float dy);\n    parameters:\n    - id: dx\n      type: System.Single\n      description: The value of the translation in x.\n    - id: dy\n      type: System.Single\n      description: The value of the translation in y.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  id: TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: TranslateTransform(Single,Single,MatrixOrder)\n  nameWithType: PathGradientBrush.TranslateTransform(Single,Single,MatrixOrder)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(Single,Single,MatrixOrder)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Applies the specified translation to the local geometric transform in the specified order.\n  remarks: ''\n  example:\n  - For an example, see <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A>.\n  syntax:\n    content: public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);\n    parameters:\n    - id: dx\n      type: System.Single\n      description: The value of the translation in x.\n    - id: dy\n      type: System.Single\n      description: The value of the translation in y.\n    - id: order\n      type: System.Drawing.Drawing2D.MatrixOrder\n      description: The order (prepend or append) in which to apply the translation.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.PathGradientBrush.WrapMode\n  id: WrapMode\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  langs:\n  - csharp\n  name: WrapMode\n  nameWithType: PathGradientBrush.WrapMode\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.WrapMode\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Gets or sets a <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> that indicates the wrap mode for this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref>.\n  syntax:\n    content: public System.Drawing.Drawing2D.WrapMode WrapMode { get; set; }\n    return:\n      type: System.Drawing.Drawing2D.WrapMode\n      description: A <xref href=\"System.Drawing.Drawing2D.WrapMode\"></xref> that specifies how fills drawn with this <xref href=\"System.Drawing.Drawing2D.PathGradientBrush\"></xref> are tiled.\n  overload: System.Drawing.Drawing2D.PathGradientBrush.WrapMode*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Drawing.Brush\n  isExternal: false\n  name: System.Drawing.Brush\n- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Drawing2D.GraphicsPath)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: PathGradientBrush(GraphicsPath)\n  nameWithType: PathGradientBrush.PathGradientBrush(GraphicsPath)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(GraphicsPath)\n- uid: System.Drawing.Drawing2D.GraphicsPath\n  parent: System.Drawing.Drawing2D\n  isExternal: false\n  name: GraphicsPath\n  nameWithType: GraphicsPath\n  fullName: System.Drawing.Drawing2D.GraphicsPath\n- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[])\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: PathGradientBrush(Point[])\n  nameWithType: PathGradientBrush.PathGradientBrush(Point[])\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(Point[])\n- uid: System.Drawing.Point[]\n  parent: System.Drawing\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Drawing.Point[]\n  spec.csharp:\n  - uid: System.Drawing.Point\n    name: Point\n    nameWithType: Point\n    fullName: Point[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[])\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: PathGradientBrush(PointF[])\n  nameWithType: PathGradientBrush.PathGradientBrush(PointF[])\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(PointF[])\n- uid: System.Drawing.PointF[]\n  parent: System.Drawing\n  isExternal: false\n  name: PointF\n  nameWithType: PointF\n  fullName: System.Drawing.PointF[]\n  spec.csharp:\n  - uid: System.Drawing.PointF\n    name: PointF\n    nameWithType: PointF\n    fullName: PointF[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: PathGradientBrush(Point[],WrapMode)\n  nameWithType: PathGradientBrush.PathGradientBrush(Point[],WrapMode)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(Point[],WrapMode)\n- uid: System.Drawing.Drawing2D.WrapMode\n  parent: System.Drawing.Drawing2D\n  isExternal: false\n  name: WrapMode\n  nameWithType: WrapMode\n  fullName: System.Drawing.Drawing2D.WrapMode\n- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: PathGradientBrush(PointF[],WrapMode)\n  nameWithType: PathGradientBrush.PathGradientBrush(PointF[],WrapMode)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.PathGradientBrush(PointF[],WrapMode)\n- uid: System.Drawing.Drawing2D.PathGradientBrush.Blend\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: Blend\n  nameWithType: PathGradientBrush.Blend\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.Blend\n- uid: System.Drawing.Drawing2D.Blend\n  parent: System.Drawing.Drawing2D\n  isExternal: false\n  name: Blend\n  nameWithType: Blend\n  fullName: System.Drawing.Drawing2D.Blend\n- uid: System.Drawing.Drawing2D.PathGradientBrush.CenterColor\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: CenterColor\n  nameWithType: PathGradientBrush.CenterColor\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.CenterColor\n- uid: System.Drawing.Color\n  parent: System.Drawing\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Drawing.Color\n- uid: System.Drawing.Drawing2D.PathGradientBrush.CenterPoint\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: CenterPoint\n  nameWithType: PathGradientBrush.CenterPoint\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.CenterPoint\n- uid: System.Drawing.PointF\n  parent: System.Drawing\n  isExternal: false\n  name: PointF\n  nameWithType: PointF\n  fullName: System.Drawing.PointF\n- uid: System.Drawing.Drawing2D.PathGradientBrush.Clone\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: Clone()\n  nameWithType: PathGradientBrush.Clone()\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Drawing.Drawing2D.PathGradientBrush.FocusScales\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: FocusScales\n  nameWithType: PathGradientBrush.FocusScales\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.FocusScales\n- uid: System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: InterpolationColors\n  nameWithType: PathGradientBrush.InterpolationColors\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors\n- uid: System.Drawing.Drawing2D.ColorBlend\n  parent: System.Drawing.Drawing2D\n  isExternal: false\n  name: ColorBlend\n  nameWithType: ColorBlend\n  fullName: System.Drawing.Drawing2D.ColorBlend\n- uid: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: MultiplyTransform(Matrix)\n  nameWithType: PathGradientBrush.MultiplyTransform(Matrix)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(Matrix)\n- uid: System.Drawing.Drawing2D.Matrix\n  parent: System.Drawing.Drawing2D\n  isExternal: false\n  name: Matrix\n  nameWithType: Matrix\n  fullName: System.Drawing.Drawing2D.Matrix\n- uid: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: MultiplyTransform(Matrix,MatrixOrder)\n  nameWithType: PathGradientBrush.MultiplyTransform(Matrix,MatrixOrder)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(Matrix,MatrixOrder)\n- uid: System.Drawing.Drawing2D.MatrixOrder\n  parent: System.Drawing.Drawing2D\n  isExternal: false\n  name: MatrixOrder\n  nameWithType: MatrixOrder\n  fullName: System.Drawing.Drawing2D.MatrixOrder\n- uid: System.Drawing.Drawing2D.PathGradientBrush.Rectangle\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: Rectangle\n  nameWithType: PathGradientBrush.Rectangle\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.Rectangle\n- uid: System.Drawing.RectangleF\n  parent: System.Drawing\n  isExternal: false\n  name: RectangleF\n  nameWithType: RectangleF\n  fullName: System.Drawing.RectangleF\n- uid: System.Drawing.Drawing2D.PathGradientBrush.ResetTransform\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: ResetTransform()\n  nameWithType: PathGradientBrush.ResetTransform()\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.ResetTransform()\n- uid: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: RotateTransform(Single)\n  nameWithType: PathGradientBrush.RotateTransform(Single)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(Single)\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: RotateTransform(Single,MatrixOrder)\n  nameWithType: PathGradientBrush.RotateTransform(Single,MatrixOrder)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(Single,MatrixOrder)\n- uid: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: ScaleTransform(Single,Single)\n  nameWithType: PathGradientBrush.ScaleTransform(Single,Single)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(Single,Single)\n- uid: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: ScaleTransform(Single,Single,MatrixOrder)\n  nameWithType: PathGradientBrush.ScaleTransform(Single,Single,MatrixOrder)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(Single,Single,MatrixOrder)\n- uid: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: SetBlendTriangularShape(Single)\n  nameWithType: PathGradientBrush.SetBlendTriangularShape(Single)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(Single)\n- uid: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: SetBlendTriangularShape(Single,Single)\n  nameWithType: PathGradientBrush.SetBlendTriangularShape(Single,Single)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(Single,Single)\n- uid: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: SetSigmaBellShape(Single)\n  nameWithType: PathGradientBrush.SetSigmaBellShape(Single)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(Single)\n- uid: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single,System.Single)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: SetSigmaBellShape(Single,Single)\n  nameWithType: PathGradientBrush.SetSigmaBellShape(Single,Single)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(Single,Single)\n- uid: System.Drawing.Drawing2D.PathGradientBrush.SurroundColors\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: SurroundColors\n  nameWithType: PathGradientBrush.SurroundColors\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.SurroundColors\n- uid: System.Drawing.Color[]\n  parent: System.Drawing\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Drawing.Color[]\n  spec.csharp:\n  - uid: System.Drawing.Color\n    name: Color\n    nameWithType: Color\n    fullName: Color[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Drawing.Drawing2D.PathGradientBrush.Transform\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: Transform\n  nameWithType: PathGradientBrush.Transform\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.Transform\n- uid: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: TranslateTransform(Single,Single)\n  nameWithType: PathGradientBrush.TranslateTransform(Single,Single)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(Single,Single)\n- uid: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: TranslateTransform(Single,Single,MatrixOrder)\n  nameWithType: PathGradientBrush.TranslateTransform(Single,Single,MatrixOrder)\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(Single,Single,MatrixOrder)\n- uid: System.Drawing.Drawing2D.PathGradientBrush.WrapMode\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: WrapMode\n  nameWithType: PathGradientBrush.WrapMode\n  fullName: System.Drawing.Drawing2D.PathGradientBrush.WrapMode\n- uid: System.Drawing.Drawing2D.PathGradientBrush.#ctor*\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: PathGradientBrush\n  nameWithType: PathGradientBrush.PathGradientBrush\n- uid: System.Drawing.Drawing2D.PathGradientBrush.Blend*\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: Blend\n  nameWithType: PathGradientBrush.Blend\n- uid: System.Drawing.Drawing2D.PathGradientBrush.CenterColor*\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: CenterColor\n  nameWithType: PathGradientBrush.CenterColor\n- uid: System.Drawing.Drawing2D.PathGradientBrush.CenterPoint*\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: CenterPoint\n  nameWithType: PathGradientBrush.CenterPoint\n- uid: System.Drawing.Drawing2D.PathGradientBrush.Clone*\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: Clone\n  nameWithType: PathGradientBrush.Clone\n- uid: System.Drawing.Drawing2D.PathGradientBrush.FocusScales*\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: FocusScales\n  nameWithType: PathGradientBrush.FocusScales\n- uid: System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors*\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: InterpolationColors\n  nameWithType: PathGradientBrush.InterpolationColors\n- uid: System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform*\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: MultiplyTransform\n  nameWithType: PathGradientBrush.MultiplyTransform\n- uid: System.Drawing.Drawing2D.PathGradientBrush.Rectangle*\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: Rectangle\n  nameWithType: PathGradientBrush.Rectangle\n- uid: System.Drawing.Drawing2D.PathGradientBrush.ResetTransform*\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: ResetTransform\n  nameWithType: PathGradientBrush.ResetTransform\n- uid: System.Drawing.Drawing2D.PathGradientBrush.RotateTransform*\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: RotateTransform\n  nameWithType: PathGradientBrush.RotateTransform\n- uid: System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform*\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: ScaleTransform\n  nameWithType: PathGradientBrush.ScaleTransform\n- uid: System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape*\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: SetBlendTriangularShape\n  nameWithType: PathGradientBrush.SetBlendTriangularShape\n- uid: System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape*\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: SetSigmaBellShape\n  nameWithType: PathGradientBrush.SetSigmaBellShape\n- uid: System.Drawing.Drawing2D.PathGradientBrush.SurroundColors*\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: SurroundColors\n  nameWithType: PathGradientBrush.SurroundColors\n- uid: System.Drawing.Drawing2D.PathGradientBrush.Transform*\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: Transform\n  nameWithType: PathGradientBrush.Transform\n- uid: System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform*\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: TranslateTransform\n  nameWithType: PathGradientBrush.TranslateTransform\n- uid: System.Drawing.Drawing2D.PathGradientBrush.WrapMode*\n  parent: System.Drawing.Drawing2D.PathGradientBrush\n  isExternal: false\n  name: WrapMode\n  nameWithType: PathGradientBrush.WrapMode\n"}