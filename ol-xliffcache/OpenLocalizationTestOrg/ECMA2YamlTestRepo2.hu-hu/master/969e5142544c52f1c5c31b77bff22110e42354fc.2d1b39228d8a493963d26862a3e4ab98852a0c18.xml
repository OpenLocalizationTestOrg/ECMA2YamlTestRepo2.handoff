{"nodes":[{"pos":[1188,1277],"content":"Used in order to associate or attach additional information to the instance of an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Used in order to associate or attach additional information to the instance of an object.","pos":[0,89]}]},{"pos":[1289,1758],"content":"This is used by the [!INCLUDE[wfd1](~/add/includes/wfd1-md.md)] in order to keep track of interesting pieces of data during an editing session for data that is otherwise transient, that will (mostly) be discarded at the end of an editing session. AttachedProperty is useful as items in the `View` can bind to the values and react to changes. For instance, this is the way that the selected item template is displayed (it keys off of an attached property for selection).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This is used by the <ph id=\"ph1\">[!INCLUDE[wfd1](~/add/includes/wfd1-md.md)]</ph> in order to keep track of interesting pieces of data during an editing session for data that is otherwise transient, that will (mostly) be discarded at the end of an editing session.","pos":[0,246],"source":"This is used by the [!INCLUDE[wfd1](~/add/includes/wfd1-md.md)] in order to keep track of interesting pieces of data during an editing session for data that is otherwise transient, that will (mostly) be discarded at the end of an editing session."},{"content":"AttachedProperty is useful as items in the <ph id=\"ph1\">`View`</ph> can bind to the values and react to changes.","pos":[247,341],"source":" AttachedProperty is useful as items in the `View` can bind to the values and react to changes."},{"content":"For instance, this is the way that the selected item template is displayed (it keys off of an attached property for selection).","pos":[342,469]}]},{"pos":[2376,2491],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.AttachedProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Activities.Presentation.Model.AttachedProperty\"></xref> class."},{"pos":[3235,3283],"content":"Retrieves the value of the specified model item.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the value of the specified model item.","pos":[0,48]}]},{"pos":[3513,3528],"content":"The model item.","needQuote":true,"needEscape":true,"nodes":[{"content":"The model item.","pos":[0,15]}]},{"pos":[3586,3659],"content":"Returns a <xref:System.Object> that contains the value of the model item.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a &lt;xref:System.Object&gt; that contains the value of the model item.","pos":[0,73],"source":"Returns a <xref:System.Object> that contains the value of the model item."}]},{"pos":[4221,4365],"content":"Gets or sets a Boolean value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.AttachedProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is browsable.","needQuote":true,"needEscape":true,"source":"Gets or sets a Boolean value that indicates whether the <xref href=\"System.Activities.Presentation.Model.AttachedProperty\"></xref> is browsable."},{"pos":[4377,4691],"content":"The primary impact of setting this to <ph id=\"ph1\">`true`</ph> is that the &lt;xref:System.Activities.Presentation.Model.AttachedProperty&gt; will be discoverable within the &lt;xref:System.Activities.Presentation.Model.ModelItem.Properties%2A&gt; collection of the &lt;xref:System.Activities.Presentation.Model.ModelItem&gt; to which it is attached.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The primary impact of setting this to `true` is that the <xref:System.Activities.Presentation.Model.AttachedProperty> will be discoverable within the <xref:System.Activities.Presentation.Model.ModelItem.Properties%2A> collection of the <xref:System.Activities.Presentation.Model.ModelItem> to which it is attached."},{"pos":[4811,5042],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Activities.Presentation.Model.AttachedProperty\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is browsable; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Activities.Presentation.Model.AttachedProperty\"></xref> is browsable; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5602,5674],"content":"Gets a value that determines whether the attached property is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that determines whether the attached property is read-only.","pos":[0,72]}]},{"pos":[5797,5962],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the property is read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6491,6529],"content":"Gets or sets the name of the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the property.","pos":[0,38]}]},{"pos":[6643,6713],"content":"Returns a <xref:System.String> that contains the name of the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a &lt;xref:System.String&gt; that contains the name of the property.","pos":[0,70],"source":"Returns a <xref:System.String> that contains the name of the property."}]},{"pos":[7448,7528],"content":"Creates a notification that indicates that the specified model item has changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a notification that indicates that the specified model item has changed.","pos":[0,80]}]},{"pos":[7760,7786],"content":"The item that has changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item that has changed.","pos":[0,26]}]},{"pos":[8351,8379],"content":"Gets or sets the owner type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the owner type.","pos":[0,28]}]},{"pos":[8494,8552],"content":"Returns a <xref:System.Type> that contains the owner type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a &lt;xref:System.Type&gt; that contains the owner type.","pos":[0,58],"source":"Returns a <xref:System.Type> that contains the owner type."}]},{"pos":[9237,9290],"content":"Resets the specified model item to the default value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resets the specified model item to the default value.","pos":[0,53]}]},{"pos":[9520,9544],"content":"The model item to reset.","needQuote":true,"needEscape":true,"nodes":[{"content":"The model item to reset.","pos":[0,24]}]},{"pos":[10269,10322],"content":"Sets the specified model item to the specified value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the specified model item to the specified value.","pos":[0,53]}]},{"pos":[10564,10586],"content":"The model item to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The model item to set.","pos":[0,22]}]},{"pos":[10648,10665],"content":"The value to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to set.","pos":[0,17]}]},{"pos":[11192,11206],"content":"Gets the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type.","pos":[0,14]}]},{"pos":[11320,11372],"content":"Returns a <xref:System.Type> that contains the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a &lt;xref:System.Type&gt; that contains the type.","pos":[0,52],"source":"Returns a <xref:System.Type> that contains the type."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Model.AttachedProperty\n  id: AttachedProperty\n  children:\n  - System.Activities.Presentation.Model.AttachedProperty.#ctor\n  - System.Activities.Presentation.Model.AttachedProperty.GetValue(System.Activities.Presentation.Model.ModelItem)\n  - System.Activities.Presentation.Model.AttachedProperty.IsBrowsable\n  - System.Activities.Presentation.Model.AttachedProperty.IsReadOnly\n  - System.Activities.Presentation.Model.AttachedProperty.Name\n  - System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)\n  - System.Activities.Presentation.Model.AttachedProperty.OwnerType\n  - System.Activities.Presentation.Model.AttachedProperty.ResetValue(System.Activities.Presentation.Model.ModelItem)\n  - System.Activities.Presentation.Model.AttachedProperty.SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)\n  - System.Activities.Presentation.Model.AttachedProperty.Type\n  langs:\n  - csharp\n  name: AttachedProperty\n  nameWithType: AttachedProperty\n  fullName: System.Activities.Presentation.Model.AttachedProperty\n  type: Class\n  summary: Used in order to associate or attach additional information to the instance of an object.\n  remarks: This is used by the [!INCLUDE[wfd1](~/add/includes/wfd1-md.md)] in order to keep track of interesting pieces of data during an editing session for data that is otherwise transient, that will (mostly) be discarded at the end of an editing session. AttachedProperty is useful as items in the `View` can bind to the values and react to changes. For instance, this is the way that the selected item template is displayed (it keys off of an attached property for selection).\n  syntax:\n    content: public abstract class AttachedProperty\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.AttachedProperty.#ctor\n  id: '#ctor'\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  langs:\n  - csharp\n  name: AttachedProperty()\n  nameWithType: AttachedProperty.AttachedProperty()\n  fullName: System.Activities.Presentation.Model.AttachedProperty.AttachedProperty()\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Presentation.Model.AttachedProperty\"></xref> class.\n  syntax:\n    content: protected AttachedProperty ();\n    parameters: []\n  overload: System.Activities.Presentation.Model.AttachedProperty.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.AttachedProperty.GetValue(System.Activities.Presentation.Model.ModelItem)\n  id: GetValue(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  langs:\n  - csharp\n  name: GetValue(ModelItem)\n  nameWithType: AttachedProperty.GetValue(ModelItem)\n  fullName: System.Activities.Presentation.Model.AttachedProperty.GetValue(ModelItem)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Retrieves the value of the specified model item.\n  syntax:\n    content: public abstract object GetValue (System.Activities.Presentation.Model.ModelItem modelItem);\n    parameters:\n    - id: modelItem\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The model item.\n    return:\n      type: System.Object\n      description: Returns a <xref:System.Object> that contains the value of the model item.\n  overload: System.Activities.Presentation.Model.AttachedProperty.GetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable\n  id: IsBrowsable\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  langs:\n  - csharp\n  name: IsBrowsable\n  nameWithType: AttachedProperty.IsBrowsable\n  fullName: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets or sets a Boolean value that indicates whether the <xref href=\"System.Activities.Presentation.Model.AttachedProperty\"></xref> is browsable.\n  remarks: The primary impact of setting this to `true` is that the <xref:System.Activities.Presentation.Model.AttachedProperty> will be discoverable within the <xref:System.Activities.Presentation.Model.ModelItem.Properties%2A> collection of the <xref:System.Activities.Presentation.Model.ModelItem> to which it is attached.\n  syntax:\n    content: public bool IsBrowsable { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Activities.Presentation.Model.AttachedProperty\"></xref> is browsable; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly\n  id: IsReadOnly\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: AttachedProperty.IsReadOnly\n  fullName: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets a value that determines whether the attached property is read-only.\n  syntax:\n    content: public abstract bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.AttachedProperty.Name\n  id: Name\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  langs:\n  - csharp\n  name: Name\n  nameWithType: AttachedProperty.Name\n  fullName: System.Activities.Presentation.Model.AttachedProperty.Name\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets or sets the name of the property.\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: Returns a <xref:System.String> that contains the name of the property.\n  overload: System.Activities.Presentation.Model.AttachedProperty.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)\n  id: NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  langs:\n  - csharp\n  name: NotifyPropertyChanged(ModelItem)\n  nameWithType: AttachedProperty.NotifyPropertyChanged(ModelItem)\n  fullName: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(ModelItem)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Creates a notification that indicates that the specified model item has changed.\n  syntax:\n    content: public void NotifyPropertyChanged (System.Activities.Presentation.Model.ModelItem modelItem);\n    parameters:\n    - id: modelItem\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The item that has changed.\n  overload: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.AttachedProperty.OwnerType\n  id: OwnerType\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  langs:\n  - csharp\n  name: OwnerType\n  nameWithType: AttachedProperty.OwnerType\n  fullName: System.Activities.Presentation.Model.AttachedProperty.OwnerType\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets or sets the owner type.\n  syntax:\n    content: public Type OwnerType { get; set; }\n    return:\n      type: System.Type\n      description: Returns a <xref:System.Type> that contains the owner type.\n  overload: System.Activities.Presentation.Model.AttachedProperty.OwnerType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.AttachedProperty.ResetValue(System.Activities.Presentation.Model.ModelItem)\n  id: ResetValue(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  langs:\n  - csharp\n  name: ResetValue(ModelItem)\n  nameWithType: AttachedProperty.ResetValue(ModelItem)\n  fullName: System.Activities.Presentation.Model.AttachedProperty.ResetValue(ModelItem)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Resets the specified model item to the default value.\n  syntax:\n    content: public abstract void ResetValue (System.Activities.Presentation.Model.ModelItem modelItem);\n    parameters:\n    - id: modelItem\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The model item to reset.\n  overload: System.Activities.Presentation.Model.AttachedProperty.ResetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.AttachedProperty.SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)\n  id: SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  langs:\n  - csharp\n  name: SetValue(ModelItem,Object)\n  nameWithType: AttachedProperty.SetValue(ModelItem,Object)\n  fullName: System.Activities.Presentation.Model.AttachedProperty.SetValue(ModelItem,Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Sets the specified model item to the specified value.\n  syntax:\n    content: public abstract void SetValue (System.Activities.Presentation.Model.ModelItem modelItem, object value);\n    parameters:\n    - id: modelItem\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The model item to set.\n    - id: value\n      type: System.Object\n      description: The value to set.\n  overload: System.Activities.Presentation.Model.AttachedProperty.SetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.AttachedProperty.Type\n  id: Type\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  langs:\n  - csharp\n  name: Type\n  nameWithType: AttachedProperty.Type\n  fullName: System.Activities.Presentation.Model.AttachedProperty.Type\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets the type.\n  syntax:\n    content: public abstract Type Type { get; }\n    return:\n      type: System.Type\n      description: Returns a <xref:System.Type> that contains the type.\n  overload: System.Activities.Presentation.Model.AttachedProperty.Type*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.Presentation.Model.AttachedProperty.#ctor\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: AttachedProperty()\n  nameWithType: AttachedProperty.AttachedProperty()\n  fullName: System.Activities.Presentation.Model.AttachedProperty.AttachedProperty()\n- uid: System.Activities.Presentation.Model.AttachedProperty.GetValue(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: GetValue(ModelItem)\n  nameWithType: AttachedProperty.GetValue(ModelItem)\n  fullName: System.Activities.Presentation.Model.AttachedProperty.GetValue(ModelItem)\n- uid: System.Activities.Presentation.Model.ModelItem\n  parent: System.Activities.Presentation.Model\n  isExternal: false\n  name: ModelItem\n  nameWithType: ModelItem\n  fullName: System.Activities.Presentation.Model.ModelItem\n- uid: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: IsBrowsable\n  nameWithType: AttachedProperty.IsBrowsable\n  fullName: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: AttachedProperty.IsReadOnly\n  fullName: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly\n- uid: System.Activities.Presentation.Model.AttachedProperty.Name\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: Name\n  nameWithType: AttachedProperty.Name\n  fullName: System.Activities.Presentation.Model.AttachedProperty.Name\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: NotifyPropertyChanged(ModelItem)\n  nameWithType: AttachedProperty.NotifyPropertyChanged(ModelItem)\n  fullName: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(ModelItem)\n- uid: System.Activities.Presentation.Model.AttachedProperty.OwnerType\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: OwnerType\n  nameWithType: AttachedProperty.OwnerType\n  fullName: System.Activities.Presentation.Model.AttachedProperty.OwnerType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.Presentation.Model.AttachedProperty.ResetValue(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: ResetValue(ModelItem)\n  nameWithType: AttachedProperty.ResetValue(ModelItem)\n  fullName: System.Activities.Presentation.Model.AttachedProperty.ResetValue(ModelItem)\n- uid: System.Activities.Presentation.Model.AttachedProperty.SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: SetValue(ModelItem,Object)\n  nameWithType: AttachedProperty.SetValue(ModelItem,Object)\n  fullName: System.Activities.Presentation.Model.AttachedProperty.SetValue(ModelItem,Object)\n- uid: System.Activities.Presentation.Model.AttachedProperty.Type\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: Type\n  nameWithType: AttachedProperty.Type\n  fullName: System.Activities.Presentation.Model.AttachedProperty.Type\n- uid: System.Activities.Presentation.Model.AttachedProperty.#ctor*\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: AttachedProperty\n  nameWithType: AttachedProperty.AttachedProperty\n- uid: System.Activities.Presentation.Model.AttachedProperty.GetValue*\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: GetValue\n  nameWithType: AttachedProperty.GetValue\n- uid: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable*\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: IsBrowsable\n  nameWithType: AttachedProperty.IsBrowsable\n- uid: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly*\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: AttachedProperty.IsReadOnly\n- uid: System.Activities.Presentation.Model.AttachedProperty.Name*\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: Name\n  nameWithType: AttachedProperty.Name\n- uid: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged*\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: NotifyPropertyChanged\n  nameWithType: AttachedProperty.NotifyPropertyChanged\n- uid: System.Activities.Presentation.Model.AttachedProperty.OwnerType*\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: OwnerType\n  nameWithType: AttachedProperty.OwnerType\n- uid: System.Activities.Presentation.Model.AttachedProperty.ResetValue*\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: ResetValue\n  nameWithType: AttachedProperty.ResetValue\n- uid: System.Activities.Presentation.Model.AttachedProperty.SetValue*\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: SetValue\n  nameWithType: AttachedProperty.SetValue\n- uid: System.Activities.Presentation.Model.AttachedProperty.Type*\n  parent: System.Activities.Presentation.Model.AttachedProperty\n  isExternal: false\n  name: Type\n  nameWithType: AttachedProperty.Type\n"}