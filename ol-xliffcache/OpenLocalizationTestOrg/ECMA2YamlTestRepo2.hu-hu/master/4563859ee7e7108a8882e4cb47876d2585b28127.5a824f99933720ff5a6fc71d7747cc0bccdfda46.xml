{"nodes":[{"pos":[2020,2064],"content":"Runs multiple instances of a child activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Runs multiple instances of a child activity.","pos":[0,44]}]},{"pos":[2077,2757],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The ReplicatorActivity is similar to a `for each` statement in code. If you are presented with a task in which you repeat the same function on many different entities, ReplicatorActivity may be a better solution than <xref:System.Workflow.Activities.WhileActivity>.       By default, a ReplicatorActivity is completed when all child instances have completed. You can override this behavior with a custom condition to use when the activity finishes. If this condition evaluates to `true` before all child instances have completed, then any running incomplete child instances are canceled.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       The ReplicatorActivity is similar to a <ph id=\"ph4\">`for each`</ph> statement in code.","pos":[0,156],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The ReplicatorActivity is similar to a `for each` statement in code."},{"content":"If you are presented with a task in which you repeat the same function on many different entities, ReplicatorActivity may be a better solution than &lt;xref:System.Workflow.Activities.WhileActivity&gt;.","pos":[157,353],"source":" If you are presented with a task in which you repeat the same function on many different entities, ReplicatorActivity may be a better solution than <xref:System.Workflow.Activities.WhileActivity>."},{"content":"By default, a ReplicatorActivity is completed when all child instances have completed.","pos":[360,446]},{"content":"You can override this behavior with a custom condition to use when the activity finishes.","pos":[447,536]},{"content":"If this condition evaluates to <ph id=\"ph1\">`true`</ph> before all child instances have completed, then any running incomplete child instances are canceled.","pos":[537,675],"source":" If this condition evaluates to `true` before all child instances have completed, then any running incomplete child instances are canceled."}]},{"pos":[12192,12299],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ReplicatorActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> class."},{"pos":[13553,13691],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ReplicatorActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the name of the activity.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> class using the name of the activity."},{"pos":[13832,13870],"content":"The user-defined name of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user-defined name of the activity.","pos":[0,38]}]},{"pos":[14425,14494],"content":"Gets a value that indicates whether all child instances are complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether all child instances are complete.","pos":[0,69]}]},{"pos":[14506,14733],"content":"This property allows the <xref:System.Workflow.Activities.ReplicatorActivity.UntilCondition%2A> writer an easy way to get this information without having to maintain their own collection or evaluate over a dynamic activity set.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property allows the &lt;xref:System.Workflow.Activities.ReplicatorActivity.UntilCondition%2A&gt; writer an easy way to get this information without having to maintain their own collection or evaluate over a dynamic activity set.","pos":[0,227],"source":"This property allows the <xref:System.Workflow.Activities.ReplicatorActivity.UntilCondition%2A> writer an easy way to get this information without having to maintain their own collection or evaluate over a dynamic activity set."}]},{"pos":[14856,15028],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if all child instances are complete; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if all child instances are complete; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16021,16033],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16132,16144],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16672,16811],"content":"Occurs immediately after the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ReplicatorActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> finishes running a child activity instance.","needQuote":true,"needEscape":true,"source":"Occurs immediately after the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> finishes running a child activity instance."},{"pos":[17046,17058],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17545,17673],"content":"Occurs when the child activity instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ReplicatorActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has completed.","needQuote":true,"needEscape":true,"source":"Occurs when the child activity instance of the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> has completed."},{"pos":[17981,17993],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18465,18522],"content":"Occurs immediately after a child activity is initialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs immediately after a child activity is initialized.","pos":[0,57]}]},{"pos":[18534,19190],"content":"If subscribed to, this event is raised every time that an instance of the child activity is created for an item in the `Children` collection. The `Children` collection is set through the <xref:System.Workflow.Activities.ReplicatorChildEventArgs> of the <xref:System.Workflow.Activities.ReplicatorActivity.Initialized> event handler. The child <xref:System.Workflow.ComponentModel.Activity> instance is passed in the call so that the <xref:System.Workflow.Activities.ReplicatorActivity> can set values on the child. The relevant <xref:System.Workflow.Activities.ReplicatorChildEventArgs.InstanceData%2A> object from the `Children` collection is also passed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If subscribed to, this event is raised every time that an instance of the child activity is created for an item in the <ph id=\"ph1\">`Children`</ph> collection.","pos":[0,141],"source":"If subscribed to, this event is raised every time that an instance of the child activity is created for an item in the `Children` collection."},{"content":"The <ph id=\"ph1\">`Children`</ph> collection is set through the &lt;xref:System.Workflow.Activities.ReplicatorChildEventArgs&gt; of the &lt;xref:System.Workflow.Activities.ReplicatorActivity.Initialized&gt; event handler.","pos":[142,332],"source":" The `Children` collection is set through the <xref:System.Workflow.Activities.ReplicatorChildEventArgs> of the <xref:System.Workflow.Activities.ReplicatorActivity.Initialized> event handler."},{"content":"The child &lt;xref:System.Workflow.ComponentModel.Activity&gt; instance is passed in the call so that the &lt;xref:System.Workflow.Activities.ReplicatorActivity&gt; can set values on the child.","pos":[333,514],"source":" The child <xref:System.Workflow.ComponentModel.Activity> instance is passed in the call so that the <xref:System.Workflow.Activities.ReplicatorActivity> can set values on the child."},{"content":"The relevant &lt;xref:System.Workflow.Activities.ReplicatorChildEventArgs.InstanceData%2A&gt; object from the <ph id=\"ph1\">`Children`</ph> collection is also passed.","pos":[515,656],"source":" The relevant <xref:System.Workflow.Activities.ReplicatorChildEventArgs.InstanceData%2A> object from the `Children` collection is also passed."}]},{"pos":[19967,19979],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20476,20606],"content":"Occurs when the child activity instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ReplicatorActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has initialized.","needQuote":true,"needEscape":true,"source":"Occurs when the child activity instance of the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> has initialized."},{"pos":[20916,20928],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21365,21458],"content":"Occurs when the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ReplicatorActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> completes.","needQuote":true,"needEscape":true,"source":"Occurs when the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> completes."},{"pos":[21582,21594],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22056,22153],"content":"Occurs when the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ReplicatorActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has completed.","needQuote":true,"needEscape":true,"source":"Occurs when the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> has completed."},{"pos":[22456,22468],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22943,22982],"content":"Returns a list of all child activities.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a list of all child activities.","pos":[0,39]}]},{"pos":[23132,23163],"content":"A list of all child activities.","needQuote":true,"needEscape":true,"nodes":[{"content":"A list of all child activities.","pos":[0,31]}]},{"pos":[23694,23748],"content":"Gets the index position of the current child activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the index position of the current child activity.","pos":[0,54]}]},{"pos":[23861,23910],"content":"The index position of the current child activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index position of the current child activity.","pos":[0,49]}]},{"pos":[24462,24512],"content":"Gets an array of running child activity instances.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an array of running child activity instances.","pos":[0,50]}]},{"pos":[24524,24919],"content":"The activity instances returned by this property are the instances of the activity type that are contained within the <xref:System.Workflow.Activities.ReplicatorActivity>. If the <xref:System.Workflow.Activities.ReplicatorActivity> is running in sequence mode, the array contains no more than one activity; if running in parallel mode the array contains all instances that are currently running.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The activity instances returned by this property are the instances of the activity type that are contained within the <xref:System.Workflow.Activities.ReplicatorActivity>. If the <xref:System.Workflow.Activities.ReplicatorActivity> is running in sequence mode, the array contains no more than one activity; if running in parallel mode the array contains all instances that are currently running.","pos":[0,395],"nodes":[{"content":"The activity instances returned by this property are the instances of the activity type that are contained within the &lt;xref:System.Workflow.Activities.ReplicatorActivity&gt;.","pos":[0,171],"source":"The activity instances returned by this property are the instances of the activity type that are contained within the <xref:System.Workflow.Activities.ReplicatorActivity>."},{"content":"If the &lt;xref:System.Workflow.Activities.ReplicatorActivity&gt; is running in sequence mode, the array contains no more than one activity; if running in parallel mode the array contains all instances that are currently running.","pos":[172,395],"source":" If the <xref:System.Workflow.Activities.ReplicatorActivity> is running in sequence mode, the array contains no more than one activity; if running in parallel mode the array contains all instances that are currently running."}]}]},{"pos":[25180,25235],"content":"An array of currently running child activity instances.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of currently running child activity instances.","pos":[0,55]}]},{"pos":[26232,26244],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26343,26355],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26882,27036],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ExecutionType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.ReplicatorActivity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Workflow.Activities.ExecutionType\"></xref> for the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref>."},{"pos":[27702,27843],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ExecutionType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.ReplicatorActivity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.Activities.ExecutionType\"></xref> for the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref>."},{"pos":[28413,28593],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the &lt;xref:System.Workflow.Activities.ReplicatorActivity.ExecutionType*&gt; property.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.ReplicatorActivity.ExecutionType*> property."},{"pos":[28903,28915],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29390,29433],"content":"Gets or sets a list of child activity data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a list of child activity data.","pos":[0,43]}]},{"pos":[29588,29618],"content":"A list of child activity data.","needQuote":true,"needEscape":true,"nodes":[{"content":"A list of child activity data.","pos":[0,30]}]},{"pos":[30206,30389],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the &lt;xref:System.Workflow.Activities.ReplicatorActivity.InitialChildData*&gt; property.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.ReplicatorActivity.InitialChildData*> property."},{"pos":[30702,30714],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31161,31262],"content":"Occurs when the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ReplicatorActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> begins to execute.","needQuote":true,"needEscape":true,"source":"Occurs when the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> begins to execute."},{"pos":[31937,31949],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32421,32609],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.ReplicatorActivity.Initialized\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.ReplicatorActivity.Initialized\"></xref> event."},{"pos":[32817,32829],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33326,33396],"content":"Indicates whether the specified child activity is currently executing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether the specified child activity is currently executing.","pos":[0,70]}]},{"pos":[33533,33574],"content":"The index position of the child activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index position of the child activity.","pos":[0,41]}]},{"pos":[33633,33804],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the child activity is executing; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the child activity is executing; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[34576,34588],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35121,35262],"content":"Gets or sets a completion condition that indicates when the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ReplicatorActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> should finish.","needQuote":true,"needEscape":true,"source":"Gets or sets a completion condition that indicates when the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> should finish."},{"pos":[35275,35578],"content":"This default condition is that all child instances must complete for the <xref:System.Workflow.Activities.ReplicatorActivity> to be completed.       As with a <xref:System.Workflow.Activities.ConditionedActivityGroup>, you can specify the completion condition using a rule condition or code condition.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This default condition is that all child instances must complete for the <xref:System.Workflow.Activities.ReplicatorActivity> to be completed.       As with a <xref:System.Workflow.Activities.ConditionedActivityGroup>, you can specify the completion condition using a rule condition or code condition.","pos":[0,301],"nodes":[{"content":"This default condition is that all child instances must complete for the &lt;xref:System.Workflow.Activities.ReplicatorActivity&gt; to be completed.","pos":[0,142],"source":"This default condition is that all child instances must complete for the <xref:System.Workflow.Activities.ReplicatorActivity> to be completed."},{"content":"As with a &lt;xref:System.Workflow.Activities.ConditionedActivityGroup&gt;, you can specify the completion condition using a rule condition or code condition.","pos":[149,301],"source":"       As with a <xref:System.Workflow.Activities.ConditionedActivityGroup>, you can specify the completion condition using a rule condition or code condition."}]}]},{"pos":[36382,36562],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that determines whether the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.ReplicatorActivity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is finished.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> that determines whether the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> is finished."},{"pos":[37138,37319],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the &lt;xref:System.Workflow.Activities.ReplicatorActivity.UntilCondition*&gt; property.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.ReplicatorActivity.UntilCondition*> property."},{"pos":[37630,37642],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.ReplicatorActivity\n  id: ReplicatorActivity\n  children:\n  - System.Workflow.Activities.ReplicatorActivity.#ctor\n  - System.Workflow.Activities.ReplicatorActivity.#ctor(System.String)\n  - System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete\n  - System.Workflow.Activities.ReplicatorActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.ReplicatorActivity.ChildCompleted\n  - System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent\n  - System.Workflow.Activities.ReplicatorActivity.ChildInitialized\n  - System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent\n  - System.Workflow.Activities.ReplicatorActivity.Completed\n  - System.Workflow.Activities.ReplicatorActivity.CompletedEvent\n  - System.Workflow.Activities.ReplicatorActivity.CurrentChildData\n  - System.Workflow.Activities.ReplicatorActivity.CurrentIndex\n  - System.Workflow.Activities.ReplicatorActivity.DynamicActivities\n  - System.Workflow.Activities.ReplicatorActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.ReplicatorActivity.ExecutionType\n  - System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty\n  - System.Workflow.Activities.ReplicatorActivity.InitialChildData\n  - System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty\n  - System.Workflow.Activities.ReplicatorActivity.Initialized\n  - System.Workflow.Activities.ReplicatorActivity.InitializedEvent\n  - System.Workflow.Activities.ReplicatorActivity.IsExecuting(System.Int32)\n  - System.Workflow.Activities.ReplicatorActivity.OnClosed(System.IServiceProvider)\n  - System.Workflow.Activities.ReplicatorActivity.UntilCondition\n  - System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty\n  langs:\n  - csharp\n  name: ReplicatorActivity\n  nameWithType: ReplicatorActivity\n  fullName: System.Workflow.Activities.ReplicatorActivity\n  type: Class\n  summary: Runs multiple instances of a child activity.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n The ReplicatorActivity is similar to a `for each` statement in code. If you are presented with a task in which you repeat the same function on many different entities, ReplicatorActivity may be a better solution than <xref:System.Workflow.Activities.WhileActivity>.  \\n  \\n By default, a ReplicatorActivity is completed when all child instances have completed. You can override this behavior with a custom condition to use when the activity finishes. If this condition evaluates to `true` before all child instances have completed, then any running incomplete child instances are canceled.\"\n  example:\n  - \"The following code example shows how to create a new instance of the ReplicatorActivity class and define a handler for the <xref:System.Workflow.Activities.ReplicatorActivity.Initialized> event. This code example is part of the Replicator SDK Sample from the SimpleReplicatorWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using Replicator](http://msdn.microsoft.com/en-us/4e35f26b-cf12-4c04-9d25-9ceb958f2858).  \\n  \\n [!code-cs[wf_samples#177](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#177)]\\n [!code-vb[wf_samples#177](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#177)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultEvent(\"Initialized\")]\n\n      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.ReplicatorDesigner), typeof(System.ComponentModel.Design.IDesigner))]\n\n      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]\n\n      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.ReplicatorActivity), \"Resources.Replicator.png\")]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.ReplicatorValidator))]\n\n      [System.Workflow.Runtime.DebugEngine.WorkflowDebuggerStepping(System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingOption.Concurrent)]\n\n      public sealed class ReplicatorActivity : System.Workflow.ComponentModel.CompositeActivity\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  - System.Workflow.ComponentModel.CompositeActivity\n  implements: []\n  inheritedMembers:\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.CompositeActivity.Activities\n  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: ReplicatorActivity()\n  nameWithType: ReplicatorActivity.ReplicatorActivity()\n  fullName: System.Workflow.Activities.ReplicatorActivity.ReplicatorActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example shows how to create a new instance of the <xref:System.Workflow.Activities.ReplicatorActivity> class.  This code example is part of the Replicator SDK Sample from the SimpleReplicatorWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using Replicator](http://msdn.microsoft.com/en-us/4e35f26b-cf12-4c04-9d25-9ceb958f2858).  \\n  \\n [!code-cs[wf_samples#178](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#178)]\\n [!code-vb[wf_samples#178](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#178)]\"\n  syntax:\n    content: public ReplicatorActivity ();\n    parameters: []\n  overload: System.Workflow.Activities.ReplicatorActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: ReplicatorActivity(String)\n  nameWithType: ReplicatorActivity.ReplicatorActivity(String)\n  fullName: System.Workflow.Activities.ReplicatorActivity.ReplicatorActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> class using the name of the activity.\n  syntax:\n    content: public ReplicatorActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-defined name of the activity.\n  overload: System.Workflow.Activities.ReplicatorActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete\n  id: AllChildrenComplete\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: AllChildrenComplete\n  nameWithType: ReplicatorActivity.AllChildrenComplete\n  fullName: System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets a value that indicates whether all child instances are complete.\n  remarks: This property allows the <xref:System.Workflow.Activities.ReplicatorActivity.UntilCondition%2A> writer an easy way to get this information without having to maintain their own collection or evaluate over a dynamic activity set.\n  syntax:\n    content: public bool AllChildrenComplete { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if all child instances are complete; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: ReplicatorActivity.Cancel(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ReplicatorActivity.Cancel(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: To be added.\n  overload: System.Workflow.Activities.ReplicatorActivity.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.ChildCompleted\n  id: ChildCompleted\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: ChildCompleted\n  nameWithType: ReplicatorActivity.ChildCompleted\n  fullName: System.Workflow.Activities.ReplicatorActivity.ChildCompleted\n  type: Event\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Occurs immediately after the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> finishes running a child activity instance.\n  syntax:\n    content: public event EventHandler<System.Workflow.Activities.ReplicatorChildEventArgs> ChildCompleted;\n    return:\n      type: System.EventHandler{System.Workflow.Activities.ReplicatorChildEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent\n  id: ChildCompletedEvent\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: ChildCompletedEvent\n  nameWithType: ReplicatorActivity.ChildCompletedEvent\n  fullName: System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Occurs when the child activity instance of the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> has completed.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ChildCompletedEvent;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.ChildInitialized\n  id: ChildInitialized\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: ChildInitialized\n  nameWithType: ReplicatorActivity.ChildInitialized\n  fullName: System.Workflow.Activities.ReplicatorActivity.ChildInitialized\n  type: Event\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Occurs immediately after a child activity is initialized.\n  remarks: If subscribed to, this event is raised every time that an instance of the child activity is created for an item in the `Children` collection. The `Children` collection is set through the <xref:System.Workflow.Activities.ReplicatorChildEventArgs> of the <xref:System.Workflow.Activities.ReplicatorActivity.Initialized> event handler. The child <xref:System.Workflow.ComponentModel.Activity> instance is passed in the call so that the <xref:System.Workflow.Activities.ReplicatorActivity> can set values on the child. The relevant <xref:System.Workflow.Activities.ReplicatorChildEventArgs.InstanceData%2A> object from the `Children` collection is also passed.\n  example:\n  - \"The following code example shows how to set the value of the ChildInitialized event. This code example is part of the Replicator SDK sample from the SimpleReplicatorWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using Replicator](http://msdn.microsoft.com/en-us/4e35f26b-cf12-4c04-9d25-9ceb958f2858).  \\n  \\n [!code-cs[wf_samples#178](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#178)]\\n [!code-vb[wf_samples#178](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#178)]\"\n  syntax:\n    content: public event EventHandler<System.Workflow.Activities.ReplicatorChildEventArgs> ChildInitialized;\n    return:\n      type: System.EventHandler{System.Workflow.Activities.ReplicatorChildEventArgs}\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent\n  id: ChildInitializedEvent\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: ChildInitializedEvent\n  nameWithType: ReplicatorActivity.ChildInitializedEvent\n  fullName: System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Occurs when the child activity instance of the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> has initialized.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ChildInitializedEvent;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.Completed\n  id: Completed\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: Completed\n  nameWithType: ReplicatorActivity.Completed\n  fullName: System.Workflow.Activities.ReplicatorActivity.Completed\n  type: Event\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Occurs when the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> completes.\n  syntax:\n    content: public event EventHandler Completed;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.CompletedEvent\n  id: CompletedEvent\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: CompletedEvent\n  nameWithType: ReplicatorActivity.CompletedEvent\n  fullName: System.Workflow.Activities.ReplicatorActivity.CompletedEvent\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Occurs when the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> has completed.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CompletedEvent;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.CurrentChildData\n  id: CurrentChildData\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: CurrentChildData\n  nameWithType: ReplicatorActivity.CurrentChildData\n  fullName: System.Workflow.Activities.ReplicatorActivity.CurrentChildData\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Returns a list of all child activities.\n  syntax:\n    content: public System.Collections.IList CurrentChildData { get; }\n    return:\n      type: System.Collections.IList\n      description: A list of all child activities.\n  overload: System.Workflow.Activities.ReplicatorActivity.CurrentChildData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.CurrentIndex\n  id: CurrentIndex\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: CurrentIndex\n  nameWithType: ReplicatorActivity.CurrentIndex\n  fullName: System.Workflow.Activities.ReplicatorActivity.CurrentIndex\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets the index position of the current child activity.\n  syntax:\n    content: public int CurrentIndex { get; }\n    return:\n      type: System.Int32\n      description: The index position of the current child activity.\n  overload: System.Workflow.Activities.ReplicatorActivity.CurrentIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.DynamicActivities\n  id: DynamicActivities\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: DynamicActivities\n  nameWithType: ReplicatorActivity.DynamicActivities\n  fullName: System.Workflow.Activities.ReplicatorActivity.DynamicActivities\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets an array of running child activity instances.\n  remarks: The activity instances returned by this property are the instances of the activity type that are contained within the <xref:System.Workflow.Activities.ReplicatorActivity>. If the <xref:System.Workflow.Activities.ReplicatorActivity> is running in sequence mode, the array contains no more than one activity; if running in parallel mode the array contains all instances that are currently running.\n  syntax:\n    content: public System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity> DynamicActivities { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity}\n      description: An array of currently running child activity instances.\n  overload: System.Workflow.Activities.ReplicatorActivity.DynamicActivities*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: Execute(ActivityExecutionContext)\n  nameWithType: ReplicatorActivity.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ReplicatorActivity.Execute(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: To be added.\n  overload: System.Workflow.Activities.ReplicatorActivity.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.ExecutionType\n  id: ExecutionType\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: ExecutionType\n  nameWithType: ReplicatorActivity.ExecutionType\n  fullName: System.Workflow.Activities.ReplicatorActivity.ExecutionType\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets the <xref href=\"System.Workflow.Activities.ExecutionType\"></xref> for the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref>.\n  remarks: ''\n  example:\n  - \"The following sample shows setting the `ExecutionType` property. This sample is from the Simple Replicator SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Replicator Sample](http://msdn.microsoft.com/en-us/4e35f26b-cf12-4c04-9d25-9ceb958f2858).  \\n  \\n [!code-cs[wf_samples#180](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#180)]\\n [!code-vb[wf_samples#180](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#180)]\"\n  syntax:\n    content: public System.Workflow.Activities.ExecutionType ExecutionType { get; set; }\n    return:\n      type: System.Workflow.Activities.ExecutionType\n      description: The <xref href=\"System.Workflow.Activities.ExecutionType\"></xref> for the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref>.\n  overload: System.Workflow.Activities.ReplicatorActivity.ExecutionType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty\n  id: ExecutionTypeProperty\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: ExecutionTypeProperty\n  nameWithType: ReplicatorActivity.ExecutionTypeProperty\n  fullName: System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.ReplicatorActivity.ExecutionType*> property.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ExecutionTypeProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.InitialChildData\n  id: InitialChildData\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: InitialChildData\n  nameWithType: ReplicatorActivity.InitialChildData\n  fullName: System.Workflow.Activities.ReplicatorActivity.InitialChildData\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets a list of child activity data.\n  syntax:\n    content: public System.Collections.IList InitialChildData { get; set; }\n    return:\n      type: System.Collections.IList\n      description: A list of child activity data.\n  overload: System.Workflow.Activities.ReplicatorActivity.InitialChildData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty\n  id: InitialChildDataProperty\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: InitialChildDataProperty\n  nameWithType: ReplicatorActivity.InitialChildDataProperty\n  fullName: System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.ReplicatorActivity.InitialChildData*> property.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InitialChildDataProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.Initialized\n  id: Initialized\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: Initialized\n  nameWithType: ReplicatorActivity.Initialized\n  fullName: System.Workflow.Activities.ReplicatorActivity.Initialized\n  type: Event\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Occurs when the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> begins to execute.\n  remarks: ''\n  example:\n  - \"The following code example shows how to set the value of the Initialized event. This code example is part of the Replicator SDK sample from the SimpleReplicatorWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using Replicator](http://msdn.microsoft.com/en-us/4e35f26b-cf12-4c04-9d25-9ceb958f2858).  \\n  \\n [!code-cs[wf_samples#178](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#178)]\\n [!code-vb[wf_samples#178](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#178)]\"\n  syntax:\n    content: public event EventHandler Initialized;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.InitializedEvent\n  id: InitializedEvent\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: InitializedEvent\n  nameWithType: ReplicatorActivity.InitializedEvent\n  fullName: System.Workflow.Activities.ReplicatorActivity.InitializedEvent\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.ReplicatorActivity.Initialized\"></xref> event.\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InitializedEvent;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.IsExecuting(System.Int32)\n  id: IsExecuting(System.Int32)\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: IsExecuting(Int32)\n  nameWithType: ReplicatorActivity.IsExecuting(Int32)\n  fullName: System.Workflow.Activities.ReplicatorActivity.IsExecuting(Int32)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Indicates whether the specified child activity is currently executing.\n  syntax:\n    content: public bool IsExecuting (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index position of the child activity.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the child activity is executing; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Workflow.Activities.ReplicatorActivity.IsExecuting*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.OnClosed(System.IServiceProvider)\n  id: OnClosed(System.IServiceProvider)\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: OnClosed(IServiceProvider)\n  nameWithType: ReplicatorActivity.OnClosed(IServiceProvider)\n  fullName: System.Workflow.Activities.ReplicatorActivity.OnClosed(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void OnClosed (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: To be added.\n  overload: System.Workflow.Activities.ReplicatorActivity.OnClosed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.UntilCondition\n  id: UntilCondition\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: UntilCondition\n  nameWithType: ReplicatorActivity.UntilCondition\n  fullName: System.Workflow.Activities.ReplicatorActivity.UntilCondition\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets a completion condition that indicates when the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> should finish.\n  remarks: \"This default condition is that all child instances must complete for the <xref:System.Workflow.Activities.ReplicatorActivity> to be completed.  \\n  \\n As with a <xref:System.Workflow.Activities.ConditionedActivityGroup>, you can specify the completion condition using a rule condition or code condition.\"\n  example:\n  - \"The following code example shows how to set the value of the UntilCondition property to `null`, which means the `ReplicatorActivity` never closes. This code example is part of the Replicator SDK Sample from the SimpleReplicatorWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using Replicator](http://msdn.microsoft.com/en-us/4e35f26b-cf12-4c04-9d25-9ceb958f2858).  \\n  \\n [!code-cs[wf_samples#178](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#178)]\\n [!code-vb[wf_samples#178](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#178)]\"\n  syntax:\n    content: public System.Workflow.ComponentModel.ActivityCondition UntilCondition { get; set; }\n    return:\n      type: System.Workflow.ComponentModel.ActivityCondition\n      description: An <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> that determines whether the <xref href=\"System.Workflow.Activities.ReplicatorActivity\"></xref> is finished.\n  overload: System.Workflow.Activities.ReplicatorActivity.UntilCondition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty\n  id: UntilConditionProperty\n  parent: System.Workflow.Activities.ReplicatorActivity\n  langs:\n  - csharp\n  name: UntilConditionProperty\n  nameWithType: ReplicatorActivity.UntilConditionProperty\n  fullName: System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref:System.Workflow.Activities.ReplicatorActivity.UntilCondition*> property.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty UntilConditionProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.CompositeActivity\n- uid: System.Workflow.Activities.ReplicatorActivity.#ctor\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: ReplicatorActivity()\n  nameWithType: ReplicatorActivity.ReplicatorActivity()\n  fullName: System.Workflow.Activities.ReplicatorActivity.ReplicatorActivity()\n- uid: System.Workflow.Activities.ReplicatorActivity.#ctor(System.String)\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: ReplicatorActivity(String)\n  nameWithType: ReplicatorActivity.ReplicatorActivity(String)\n  fullName: System.Workflow.Activities.ReplicatorActivity.ReplicatorActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: AllChildrenComplete\n  nameWithType: ReplicatorActivity.AllChildrenComplete\n  fullName: System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Workflow.Activities.ReplicatorActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: ReplicatorActivity.Cancel(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ReplicatorActivity.Cancel(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatus\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatus\n  nameWithType: ActivityExecutionStatus\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus\n- uid: System.Workflow.ComponentModel.ActivityExecutionContext\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionContext\n  nameWithType: ActivityExecutionContext\n  fullName: System.Workflow.ComponentModel.ActivityExecutionContext\n- uid: System.Workflow.Activities.ReplicatorActivity.ChildCompleted\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: ChildCompleted\n  nameWithType: ReplicatorActivity.ChildCompleted\n  fullName: System.Workflow.Activities.ReplicatorActivity.ChildCompleted\n- uid: System.EventHandler{System.Workflow.Activities.ReplicatorChildEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<ReplicatorChildEventArgs>\n  nameWithType: EventHandler<ReplicatorChildEventArgs>\n  fullName: System.EventHandler<System.Workflow.Activities.ReplicatorChildEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.Workflow.Activities.ReplicatorChildEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.Activities.ReplicatorChildEventArgs\n    name: ReplicatorChildEventArgs\n    nameWithType: ReplicatorChildEventArgs\n    fullName: ReplicatorChildEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: ChildCompletedEvent\n  nameWithType: ReplicatorActivity.ChildCompletedEvent\n  fullName: System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent\n- uid: System.Workflow.ComponentModel.DependencyProperty\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Workflow.ComponentModel.DependencyProperty\n- uid: System.Workflow.Activities.ReplicatorActivity.ChildInitialized\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: ChildInitialized\n  nameWithType: ReplicatorActivity.ChildInitialized\n  fullName: System.Workflow.Activities.ReplicatorActivity.ChildInitialized\n- uid: System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: ChildInitializedEvent\n  nameWithType: ReplicatorActivity.ChildInitializedEvent\n  fullName: System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent\n- uid: System.Workflow.Activities.ReplicatorActivity.Completed\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: Completed\n  nameWithType: ReplicatorActivity.Completed\n  fullName: System.Workflow.Activities.ReplicatorActivity.Completed\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Workflow.Activities.ReplicatorActivity.CompletedEvent\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: CompletedEvent\n  nameWithType: ReplicatorActivity.CompletedEvent\n  fullName: System.Workflow.Activities.ReplicatorActivity.CompletedEvent\n- uid: System.Workflow.Activities.ReplicatorActivity.CurrentChildData\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: CurrentChildData\n  nameWithType: ReplicatorActivity.CurrentChildData\n  fullName: System.Workflow.Activities.ReplicatorActivity.CurrentChildData\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: true\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.Workflow.Activities.ReplicatorActivity.CurrentIndex\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: CurrentIndex\n  nameWithType: ReplicatorActivity.CurrentIndex\n  fullName: System.Workflow.Activities.ReplicatorActivity.CurrentIndex\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Workflow.Activities.ReplicatorActivity.DynamicActivities\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: DynamicActivities\n  nameWithType: ReplicatorActivity.DynamicActivities\n  fullName: System.Workflow.Activities.ReplicatorActivity.DynamicActivities\n- uid: System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<Activity>\n  nameWithType: ICollection<Activity>\n  fullName: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<System.Workflow.ComponentModel.Activity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.ComponentModel.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.Activities.ReplicatorActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: Execute(ActivityExecutionContext)\n  nameWithType: ReplicatorActivity.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.ReplicatorActivity.Execute(ActivityExecutionContext)\n- uid: System.Workflow.Activities.ReplicatorActivity.ExecutionType\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: ExecutionType\n  nameWithType: ReplicatorActivity.ExecutionType\n  fullName: System.Workflow.Activities.ReplicatorActivity.ExecutionType\n- uid: System.Workflow.Activities.ExecutionType\n  parent: System.Workflow.Activities\n  isExternal: false\n  name: ExecutionType\n  nameWithType: ExecutionType\n  fullName: System.Workflow.Activities.ExecutionType\n- uid: System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: ExecutionTypeProperty\n  nameWithType: ReplicatorActivity.ExecutionTypeProperty\n  fullName: System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty\n- uid: System.Workflow.Activities.ReplicatorActivity.InitialChildData\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: InitialChildData\n  nameWithType: ReplicatorActivity.InitialChildData\n  fullName: System.Workflow.Activities.ReplicatorActivity.InitialChildData\n- uid: System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: InitialChildDataProperty\n  nameWithType: ReplicatorActivity.InitialChildDataProperty\n  fullName: System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty\n- uid: System.Workflow.Activities.ReplicatorActivity.Initialized\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: Initialized\n  nameWithType: ReplicatorActivity.Initialized\n  fullName: System.Workflow.Activities.ReplicatorActivity.Initialized\n- uid: System.Workflow.Activities.ReplicatorActivity.InitializedEvent\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: InitializedEvent\n  nameWithType: ReplicatorActivity.InitializedEvent\n  fullName: System.Workflow.Activities.ReplicatorActivity.InitializedEvent\n- uid: System.Workflow.Activities.ReplicatorActivity.IsExecuting(System.Int32)\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: IsExecuting(Int32)\n  nameWithType: ReplicatorActivity.IsExecuting(Int32)\n  fullName: System.Workflow.Activities.ReplicatorActivity.IsExecuting(Int32)\n- uid: System.Workflow.Activities.ReplicatorActivity.OnClosed(System.IServiceProvider)\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: OnClosed(IServiceProvider)\n  nameWithType: ReplicatorActivity.OnClosed(IServiceProvider)\n  fullName: System.Workflow.Activities.ReplicatorActivity.OnClosed(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: true\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Workflow.Activities.ReplicatorActivity.UntilCondition\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: UntilCondition\n  nameWithType: ReplicatorActivity.UntilCondition\n  fullName: System.Workflow.Activities.ReplicatorActivity.UntilCondition\n- uid: System.Workflow.ComponentModel.ActivityCondition\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityCondition\n  nameWithType: ActivityCondition\n  fullName: System.Workflow.ComponentModel.ActivityCondition\n- uid: System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: UntilConditionProperty\n  nameWithType: ReplicatorActivity.UntilConditionProperty\n  fullName: System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty\n- uid: System.Workflow.Activities.ReplicatorActivity.#ctor*\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: ReplicatorActivity\n  nameWithType: ReplicatorActivity.ReplicatorActivity\n- uid: System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete*\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: AllChildrenComplete\n  nameWithType: ReplicatorActivity.AllChildrenComplete\n- uid: System.Workflow.Activities.ReplicatorActivity.Cancel*\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: Cancel\n  nameWithType: ReplicatorActivity.Cancel\n- uid: System.Workflow.Activities.ReplicatorActivity.CurrentChildData*\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: CurrentChildData\n  nameWithType: ReplicatorActivity.CurrentChildData\n- uid: System.Workflow.Activities.ReplicatorActivity.CurrentIndex*\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: CurrentIndex\n  nameWithType: ReplicatorActivity.CurrentIndex\n- uid: System.Workflow.Activities.ReplicatorActivity.DynamicActivities*\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: DynamicActivities\n  nameWithType: ReplicatorActivity.DynamicActivities\n- uid: System.Workflow.Activities.ReplicatorActivity.Execute*\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: Execute\n  nameWithType: ReplicatorActivity.Execute\n- uid: System.Workflow.Activities.ReplicatorActivity.ExecutionType*\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: ExecutionType\n  nameWithType: ReplicatorActivity.ExecutionType\n- uid: System.Workflow.Activities.ReplicatorActivity.InitialChildData*\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: InitialChildData\n  nameWithType: ReplicatorActivity.InitialChildData\n- uid: System.Workflow.Activities.ReplicatorActivity.IsExecuting*\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: IsExecuting\n  nameWithType: ReplicatorActivity.IsExecuting\n- uid: System.Workflow.Activities.ReplicatorActivity.OnClosed*\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: OnClosed\n  nameWithType: ReplicatorActivity.OnClosed\n- uid: System.Workflow.Activities.ReplicatorActivity.UntilCondition*\n  parent: System.Workflow.Activities.ReplicatorActivity\n  isExternal: false\n  name: UntilCondition\n  nameWithType: ReplicatorActivity.UntilCondition\n"}