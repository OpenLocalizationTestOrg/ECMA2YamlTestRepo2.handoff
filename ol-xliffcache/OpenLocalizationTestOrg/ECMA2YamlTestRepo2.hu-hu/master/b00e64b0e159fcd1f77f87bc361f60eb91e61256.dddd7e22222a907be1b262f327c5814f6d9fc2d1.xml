{"nodes":[{"pos":[2213,2235],"content":"Represents an element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an element.","pos":[0,22]}]},{"pos":[2247,2851],"content":"Elements are one of the most common nodes in the W3C Document Object Model (DOM). Elements can have attributes associated with them. The `XmlElement` class has many methods for accessing attributes (<xref:System.Xml.XmlElement.GetAttribute%2A>, <xref:System.Xml.XmlElement.SetAttribute%2A>, <xref:System.Xml.XmlElement.RemoveAttribute%2A>, <xref:System.Xml.XmlElement.GetAttributeNode%2A>, and so on). You can also use the <xref:System.Xml.XmlElement.Attributes%2A> property which returns an <xref:System.Xml.XmlAttributeCollection> enabling you to access attributes by name or index from the collection.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Elements are one of the most common nodes in the W3C Document Object Model (DOM).","pos":[0,81]},{"content":"Elements can have attributes associated with them.","pos":[82,132]},{"content":"The <ph id=\"ph1\">`XmlElement`</ph> class has many methods for accessing attributes (&lt;xref:System.Xml.XmlElement.GetAttribute%2A&gt;, &lt;xref:System.Xml.XmlElement.SetAttribute%2A&gt;, &lt;xref:System.Xml.XmlElement.RemoveAttribute%2A&gt;, &lt;xref:System.Xml.XmlElement.GetAttributeNode%2A&gt;, and so on).","pos":[133,401],"source":" The `XmlElement` class has many methods for accessing attributes (<xref:System.Xml.XmlElement.GetAttribute%2A>, <xref:System.Xml.XmlElement.SetAttribute%2A>, <xref:System.Xml.XmlElement.RemoveAttribute%2A>, <xref:System.Xml.XmlElement.GetAttributeNode%2A>, and so on)."},{"content":"You can also use the &lt;xref:System.Xml.XmlElement.Attributes%2A&gt; property which returns an &lt;xref:System.Xml.XmlAttributeCollection&gt; enabling you to access attributes by name or index from the collection.","pos":[402,604],"source":" You can also use the <xref:System.Xml.XmlElement.Attributes%2A> property which returns an <xref:System.Xml.XmlAttributeCollection> enabling you to access attributes by name or index from the collection."}]},{"pos":[5133,5216],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xml.XmlElement\"></xref> class."},{"pos":[5228,5365],"content":"Do not instantiate an <xref:System.Xml.XmlElement> directly; instead, use methods such as <xref:System.Xml.XmlDocument.CreateElement%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Do not instantiate an &lt;xref:System.Xml.XmlElement&gt; directly; instead, use methods such as &lt;xref:System.Xml.XmlDocument.CreateElement%2A&gt;.","pos":[0,137],"source":"Do not instantiate an <xref:System.Xml.XmlElement> directly; instead, use methods such as <xref:System.Xml.XmlDocument.CreateElement%2A>."}]},{"pos":[5572,5648],"content":"The namespace prefix; see the <xref:System.Xml.XmlElement.Prefix*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace prefix; see the &lt;xref:System.Xml.XmlElement.Prefix*&gt; property.","pos":[0,76],"source":"The namespace prefix; see the <xref:System.Xml.XmlElement.Prefix*> property."}]},{"pos":[5714,5787],"content":"The local name; see the <xref:System.Xml.XmlElement.LocalName*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local name; see the &lt;xref:System.Xml.XmlElement.LocalName*&gt; property.","pos":[0,73],"source":"The local name; see the <xref:System.Xml.XmlElement.LocalName*> property."}]},{"pos":[5856,5935],"content":"The namespace URI; see the <xref:System.Xml.XmlElement.NamespaceURI*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace URI; see the &lt;xref:System.Xml.XmlElement.NamespaceURI*&gt; property.","pos":[0,79],"source":"The namespace URI; see the <xref:System.Xml.XmlElement.NamespaceURI*> property."}]},{"pos":[6004,6028],"content":"The parent XML document.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parent XML document.","pos":[0,24]}]},{"pos":[6402,6513],"content":"Gets an <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlAttributeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the list of attributes for this node.","needQuote":true,"needEscape":true,"source":"Gets an <xref href=\"System.Xml.XmlAttributeCollection\"></xref> containing the list of attributes for this node."},{"pos":[7154,7257],"content":"<bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlAttributeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the list of attributes for this node.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.Xml.XmlAttributeCollection\"></xref> containing the list of attributes for this node."},{"pos":[7688,7721],"content":"Creates a duplicate of this node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a duplicate of this node.","pos":[0,33]}]},{"pos":[7733,7875],"content":"This method serves as a copy constructor for nodes. The duplicate node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method serves as a copy constructor for nodes.","pos":[0,51]},{"content":"The duplicate node has no parent (&lt;xref:System.Xml.XmlNode.ParentNode%2A&gt; returns <ph id=\"ph1\">`null`</ph>).","pos":[52,142],"source":" The duplicate node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`)."}]},{"pos":[8524,8849],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to recursively clone the subtree under the specified node; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to clone only the node itself (and its attributes if the node is an <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>).","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to recursively clone the subtree under the specified node; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to clone only the node itself (and its attributes if the node is an <xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"></xref>)."},{"pos":[8912,8928],"content":"The cloned node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cloned node.","pos":[0,16]}]},{"pos":[9368,9428],"content":"Returns the value for the attribute with the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the value for the attribute with the specified name.","pos":[0,60]}]},{"pos":[10065,10247],"content":"The name of the attribute to retrieve. This is a qualified name. It is matched against the <xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"></xref> property of the matching node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the attribute to retrieve.","pos":[0,38]},{"content":"This is a qualified name.","pos":[39,64]},{"content":"It is matched against the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property of the matching node.","pos":[65,182],"source":" It is matched against the <xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"></xref> property of the matching node."}]},{"pos":[10305,10471],"content":"The value of the specified attribute. An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified attribute. An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.","pos":[0,166],"nodes":[{"content":"The value of the specified attribute.","pos":[0,37]},{"content":"An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.","pos":[38,166]}]}]},{"pos":[10963,11047],"content":"Returns the value for the attribute with the specified local name and namespace URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the value for the attribute with the specified local name and namespace URI.","pos":[0,84]}]},{"pos":[11228,11272],"content":"The local name of the attribute to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local name of the attribute to retrieve.","pos":[0,44]}]},{"pos":[11341,11388],"content":"The namespace URI of the attribute to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace URI of the attribute to retrieve.","pos":[0,47]}]},{"pos":[11446,11612],"content":"The value of the specified attribute. An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the specified attribute. An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.","pos":[0,166],"nodes":[{"content":"The value of the specified attribute.","pos":[0,37]},{"content":"An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.","pos":[38,166]}]}]},{"pos":[12075,12188],"content":"Returns the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified name.","needQuote":true,"needEscape":true,"source":"Returns the <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> with the specified name."},{"pos":[12858,13040],"content":"The name of the attribute to retrieve. This is a qualified name. It is matched against the <xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"></xref> property of the matching node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the attribute to retrieve.","pos":[0,38]},{"content":"This is a qualified name.","pos":[39,64]},{"content":"It is matched against the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property of the matching node.","pos":[65,182],"source":" It is matched against the <xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"></xref> property of the matching node."}]},{"pos":[13108,13301],"content":"The specified <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if a matching attribute was not found.","needQuote":true,"needEscape":true,"source":"The specified <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if a matching attribute was not found."},{"pos":[13817,13922],"content":"Returns the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified local name and namespace URI.","needQuote":true,"needEscape":true,"source":"Returns the <xref href=\"System.Xml.XmlAttribute\"></xref> with the specified local name and namespace URI."},{"pos":[14124,14156],"content":"The local name of the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local name of the attribute.","pos":[0,32]}]},{"pos":[14225,14260],"content":"The namespace URI of the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace URI of the attribute.","pos":[0,35]}]},{"pos":[14328,14521],"content":"The specified <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if a matching attribute was not found.","needQuote":true,"needEscape":true,"source":"The specified <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if a matching attribute was not found."},{"pos":[15008,15168],"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNodeList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing a list of all descendant elements that match the specified &lt;xref:System.Xml.XmlElement.Name*&gt;.","needQuote":true,"needEscape":true,"source":"Returns an <xref href=\"System.Xml.XmlNodeList\"></xref> containing a list of all descendant elements that match the specified <xref:System.Xml.XmlElement.Name*>."},{"pos":[15181,15562],"content":"The nodes are placed in the order in which they would be encountered in a preorder traversal of the <xref:System.Xml.XmlElement> tree.      > [!NOTE] >  It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName> method instead of the GetElementsByTagName method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The nodes are placed in the order in which they would be encountered in a preorder traversal of the &lt;xref:System.Xml.XmlElement&gt; tree.","pos":[0,134],"source":"The nodes are placed in the order in which they would be encountered in a preorder traversal of the <xref:System.Xml.XmlElement> tree."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  It is recommended that you use the &lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt; or &lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName&gt; method instead of the GetElementsByTagName method.","pos":[140,378],"source":"      > [!NOTE] >  It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName> method instead of the GetElementsByTagName method."}]},{"pos":[16413,16638],"content":"The name tag to match. This is a qualified name. It is matched against the <xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"></xref> property of the matching node. The asterisk (*) is a special value that matches all tags.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name tag to match.","pos":[0,22]},{"content":"This is a qualified name.","pos":[23,48]},{"content":"It is matched against the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property of the matching node.","pos":[49,166],"source":" It is matched against the <xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"></xref> property of the matching node."},{"content":"The asterisk (*) is a special value that matches all tags.","pos":[167,225]}]},{"pos":[16705,16842],"content":"An <xref href=\"System.Xml.XmlNodeList\"></xref> containing a list of all matching nodes. The list is empty if there are no matching nodes.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNodeList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing a list of all matching nodes.","pos":[0,87],"source":"An <xref href=\"System.Xml.XmlNodeList\"></xref> containing a list of all matching nodes."},{"content":"The list is empty if there are no matching nodes.","pos":[88,137]}]},{"pos":[17382,17594],"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNodeList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing a list of all descendant elements that match the specified &lt;xref:System.Xml.XmlElement.LocalName<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.Xml.XmlElement.NamespaceURI<ept id=\"p2\">*</ept>&gt;.","needQuote":true,"needEscape":true,"source":"Returns an <xref href=\"System.Xml.XmlNodeList\"></xref> containing a list of all descendant elements that match the specified <xref:System.Xml.XmlElement.LocalName*> and <xref:System.Xml.XmlElement.NamespaceURI*>."},{"pos":[17607,17972],"content":"The nodes are placed in the order in which they would be encountered in a preorder traversal of the `XmlElement` tree.      > [!NOTE] >  It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName> method instead of the GetElementsByTagName method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The nodes are placed in the order in which they would be encountered in a preorder traversal of the <ph id=\"ph1\">`XmlElement`</ph> tree.","pos":[0,118],"source":"The nodes are placed in the order in which they would be encountered in a preorder traversal of the `XmlElement` tree."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  It is recommended that you use the &lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt; or &lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName&gt; method instead of the GetElementsByTagName method.","pos":[124,362],"source":"      > [!NOTE] >  It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName> method instead of the GetElementsByTagName method."}]},{"pos":[18178,18261],"content":"The local name to match. The asterisk (*) is a special value that matches all tags.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local name to match. The asterisk (*) is a special value that matches all tags.","pos":[0,83],"nodes":[{"content":"The local name to match.","pos":[0,24]},{"content":"The asterisk (*) is a special value that matches all tags.","pos":[25,83]}]}]},{"pos":[18330,18357],"content":"The namespace URI to match.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace URI to match.","pos":[0,27]}]},{"pos":[18424,18561],"content":"An <xref href=\"System.Xml.XmlNodeList\"></xref> containing a list of all matching nodes. The list is empty if there are no matching nodes.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNodeList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing a list of all matching nodes.","pos":[0,87],"source":"An <xref href=\"System.Xml.XmlNodeList\"></xref> containing a list of all matching nodes."},{"content":"The list is empty if there are no matching nodes.","pos":[88,137]}]},{"pos":[19012,19089],"content":"Determines whether the current node has an attribute with the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the current node has an attribute with the specified name.","pos":[0,77]}]},{"pos":[19724,19902],"content":"The name of the attribute to find. This is a qualified name. It is matched against the <xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"></xref> property of the matching node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the attribute to find.","pos":[0,34]},{"content":"This is a qualified name.","pos":[35,60]},{"content":"It is matched against the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property of the matching node.","pos":[61,178],"source":" It is matched against the <xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"></xref> property of the matching node."}]},{"pos":[19961,20145],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current node has the specified attribute; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current node has the specified attribute; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20637,20738],"content":"Determines whether the current node has an attribute with the specified local name and namespace URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the current node has an attribute with the specified local name and namespace URI.","pos":[0,101]}]},{"pos":[20917,20957],"content":"The local name of the attribute to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local name of the attribute to find.","pos":[0,40]}]},{"pos":[21026,21069],"content":"The namespace URI of the attribute to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace URI of the attribute to find.","pos":[0,43]}]},{"pos":[21128,21312],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current node has the specified attribute; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current node has the specified attribute; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21708,21843],"content":"Gets a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_boolean\" name=\"boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value indicating whether the current node has any attributes.","needQuote":true,"needEscape":true,"source":"Gets a <xref uid=\"langword_csharp_boolean\" name=\"boolean\" href=\"\"></xref> value indicating whether the current node has any attributes."},{"pos":[21855,21929],"content":"This property is a Microsoft extension to the Document Object Model (DOM).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is a Microsoft extension to the Document Object Model (DOM).","pos":[0,74]}]},{"pos":[22518,22689],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current node has attributes; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current node has attributes; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23066,23136],"content":"Gets or sets the concatenated values of the node and all its children.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the concatenated values of the node and all its children.","pos":[0,70]}]},{"pos":[23149,23325],"content":"Setting this property replaces all the children with the parsed contents of the given string.       This property is a Microsoft extension to the Document Object Model (DOM).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Setting this property replaces all the children with the parsed contents of the given string.       This property is a Microsoft extension to the Document Object Model (DOM).","pos":[0,174],"nodes":[{"content":"Setting this property replaces all the children with the parsed contents of the given string.","pos":[0,93]},{"content":"This property is a Microsoft extension to the Document Object Model (DOM).","pos":[100,174]}]}]},{"pos":[23939,23996],"content":"The concatenated values of the node and all its children.","needQuote":true,"needEscape":true,"nodes":[{"content":"The concatenated values of the node and all its children.","pos":[0,57]}]},{"pos":[24364,24432],"content":"Gets or sets the markup representing just the children of this node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the markup representing just the children of this node.","pos":[0,68]}]},{"pos":[24445,24683],"content":"Setting this property replaces the children of the node with the parsed contents of the given string. The parsing is done in the current namespace context.       This property is a Microsoft extension to the Document Object Model (DOM).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Setting this property replaces the children of the node with the parsed contents of the given string. The parsing is done in the current namespace context.       This property is a Microsoft extension to the Document Object Model (DOM).","pos":[0,236],"nodes":[{"content":"Setting this property replaces the children of the node with the parsed contents of the given string.","pos":[0,101]},{"content":"The parsing is done in the current namespace context.","pos":[102,155]},{"content":"This property is a Microsoft extension to the Document Object Model (DOM).","pos":[162,236]}]}]},{"pos":[25296,25336],"content":"The markup of the children of this node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The markup of the children of this node.","pos":[0,40]}]},{"pos":[25487,25551],"content":"The XML specified when setting this property is not well-formed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML specified when setting this property is not well-formed.","pos":[0,64]}]},{"pos":[25852,25895],"content":"Gets or sets the tag format of the element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the tag format of the element.","pos":[0,43]}]},{"pos":[25907,25981],"content":"This property is a Microsoft extension of the Document Object Model (DOM).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is a Microsoft extension of the Document Object Model (DOM).","pos":[0,74]}]},{"pos":[26532,27331],"content":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element is to be serialized in the short tag format \"&lt;item/&gt;\"; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> for the long format \"&lt;item&gt;&lt;/item&gt;\".       When setting this property, if set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the children of the element are removed and the element is serialized in the short tag format. If set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the value of the property is changed (regardless of whether or not the element has content); if the element is empty, it is serialized in the long format.       This property is a Microsoft extension to the Document Object Model (DOM).","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the element is to be serialized in the short tag format \"<ph id=\"ph1\">&amp;lt;</ph>item/<ph id=\"ph2\">&amp;gt;</ph>\"; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> for the long format \"<ph id=\"ph3\">&amp;lt;</ph>item<ph id=\"ph4\">&amp;gt;</ph><ph id=\"ph5\">&amp;lt;</ph>/item<ph id=\"ph6\">&amp;gt;</ph>\".","pos":[0,256],"source":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the element is to be serialized in the short tag format \"&lt;item/&gt;\"; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> for the long format \"&lt;item&gt;&lt;/item&gt;\"."},{"content":"When setting this property, if set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the children of the element are removed and the element is serialized in the short tag format.","pos":[263,457],"source":"       When setting this property, if set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the children of the element are removed and the element is serialized in the short tag format."},{"content":"If set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the value of the property is changed (regardless of whether or not the element has content); if the element is empty, it is serialized in the long format.","pos":[458,686],"source":" If set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the value of the property is changed (regardless of whether or not the element has content); if the element is empty, it is serialized in the long format."},{"content":"This property is a Microsoft extension to the Document Object Model (DOM).","pos":[693,767]}]},{"pos":[27703,27743],"content":"Gets the local name of the current node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the local name of the current node.","pos":[0,40]}]},{"pos":[27755,27855],"content":"If the node does not have a prefix, <ph id=\"ph1\">`LocalName`</ph> is the same as &lt;xref:System.Xml.XmlElement.Name%2A&gt;.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If the node does not have a prefix, `LocalName` is the same as <xref:System.Xml.XmlElement.Name%2A>."},{"pos":[28426,28604],"content":"The name of the current node with the prefix removed. For example, <xref uid=\"langword_csharp_LocalName\" name=\"LocalName\" href=\"\"></xref> is book for the element &lt;bk:book&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the current node with the prefix removed.","pos":[0,53]},{"content":"For example, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_LocalName\" name=\"LocalName\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is book for the element <ph id=\"ph1\">&amp;lt;</ph>bk:book<ph id=\"ph2\">&amp;gt;</ph>.","pos":[54,178],"source":" For example, <xref uid=\"langword_csharp_LocalName\" name=\"LocalName\" href=\"\"></xref> is book for the element &lt;bk:book&gt;."}]},{"pos":[28952,28988],"content":"Gets the qualified name of the node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the qualified name of the node.","pos":[0,36]}]},{"pos":[29553,29705],"content":"The qualified name of the node. For <xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"></xref> nodes, this is the tag name of the element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The qualified name of the node.","pos":[0,31]},{"content":"For <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> nodes, this is the tag name of the element.","pos":[32,152],"source":" For <xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"></xref> nodes, this is the tag name of the element."}]},{"pos":[30088,30124],"content":"Gets the namespace URI of this node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the namespace URI of this node.","pos":[0,36]}]},{"pos":[30136,30283],"content":"This is the namespace URI specified at creation time. For example, `NamespaceURI` is urn:samples for the element \\<bk:book xmlns:bk= \"urn:samples\">","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This is the namespace URI specified at creation time.","pos":[0,53]},{"content":"For example, <ph id=\"ph1\">`NamespaceURI`</ph> is urn:samples for the element <ph id=\"ph2\">\\&lt;</ph>bk:book xmlns:bk= \"urn:samples\"&gt;","pos":[54,147],"source":" For example, `NamespaceURI` is urn:samples for the element \\<bk:book xmlns:bk= \"urn:samples\">"}]},{"pos":[30857,30954],"content":"The namespace URI of this node. If there is no namespace URI, this property returns String.Empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace URI of this node. If there is no namespace URI, this property returns String.Empty.","pos":[0,97],"nodes":[{"content":"The namespace URI of this node.","pos":[0,31]},{"content":"If there is no namespace URI, this property returns String.Empty.","pos":[32,97]}]}]},{"pos":[31340,31424],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> immediately following this element.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Xml.XmlNode\"></xref> immediately following this element."},{"pos":[31566,31672],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlNode\" name=\"XmlNode\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> immediately following this element.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_XmlNode\" name=\"XmlNode\" href=\"\"></xref> immediately following this element."},{"pos":[32042,32076],"content":"Gets the type of the current node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of the current node.","pos":[0,34]}]},{"pos":[32223,32356],"content":"The node type. For <xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"></xref> nodes, this value is XmlNodeType.Element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The node type.","pos":[0,14]},{"content":"For <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> nodes, this value is XmlNodeType.Element.","pos":[15,133],"source":" For <xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"></xref> nodes, this value is XmlNodeType.Element."}]},{"pos":[32748,32828],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to which this node belongs.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Xml.XmlDocument\"></xref> to which this node belongs."},{"pos":[32840,32961],"content":"When adding nodes to the current node, use the <ph id=\"ph1\">`XmlDocument`</ph> returned by the <ph id=\"ph2\">`OwnerDocument`</ph> property to create the node.","needQuote":true,"needEscape":true,"extradata":"MT","source":"When adding nodes to the current node, use the `XmlDocument` returned by the `OwnerDocument` property to create the node."},{"pos":[33575,33684],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlDocument\" name=\"XmlDocument\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to which this element belongs.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_XmlDocument\" name=\"XmlDocument\" href=\"\"></xref> to which this element belongs."},{"pos":[34066,34129],"content":"Gets the parent of this node (for nodes that can have parents).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the parent of this node (for nodes that can have parents).","pos":[0,63]}]},{"pos":[34270,34812],"content":"The <xref uid=\"langword_csharp_XmlNode\" name=\"XmlNode\" href=\"\"></xref> that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. For all other nodes, the value returned depends on the <xref:System.Xml.XmlNode.NodeType*> of the node. The following table describes the possible return values for the <xref uid=\"langword_csharp_ParentNode\" name=\"ParentNode\" href=\"\"></xref> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlNode\" name=\"XmlNode\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is the parent of the current node.","pos":[0,110],"source":"The <xref uid=\"langword_csharp_XmlNode\" name=\"XmlNode\" href=\"\"></xref> that is the parent of the current node."},{"content":"If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[111,290],"source":" If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"For all other nodes, the value returned depends on the &lt;xref:System.Xml.XmlNode.NodeType*&gt; of the node.","pos":[291,394],"source":" For all other nodes, the value returned depends on the <xref:System.Xml.XmlNode.NodeType*> of the node."},{"content":"The following table describes the possible return values for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ParentNode\" name=\"ParentNode\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property.","pos":[395,542],"source":" The following table describes the possible return values for the <xref uid=\"langword_csharp_ParentNode\" name=\"ParentNode\" href=\"\"></xref> property."}]},{"pos":[35171,35218],"content":"Gets or sets the namespace prefix of this node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the namespace prefix of this node.","pos":[0,47]}]},{"pos":[35230,35441],"content":"Setting this property changes the <xref:System.Xml.XmlElement.Name%2A> property, which holds the qualified name for an `XmlElement`. However, changing the prefix does not change the namespace URI of the element.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Setting this property changes the &lt;xref:System.Xml.XmlElement.Name%2A&gt; property, which holds the qualified name for an <ph id=\"ph1\">`XmlElement`</ph>.","pos":[0,132],"source":"Setting this property changes the <xref:System.Xml.XmlElement.Name%2A> property, which holds the qualified name for an `XmlElement`."},{"content":"However, changing the prefix does not change the namespace URI of the element.","pos":[133,211]}]},{"pos":[36014,36107],"content":"The namespace prefix of this node. If there is no prefix, this property returns String.Empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace prefix of this node. If there is no prefix, this property returns String.Empty.","pos":[0,93],"nodes":[{"content":"The namespace prefix of this node.","pos":[0,34]},{"content":"If there is no prefix, this property returns String.Empty.","pos":[35,93]}]}]},{"pos":[36258,36280],"content":"This node is read-only","needQuote":true,"needEscape":true,"nodes":[{"content":"This node is read-only","pos":[0,22]}]},{"pos":[36374,36707],"content":"The specified prefix contains an invalid character.       The specified prefix is malformed.       The namespaceURI of this node is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       The specified prefix is \"xml\" and the namespaceURI of this node is different from http://www.w3.org/XML/1998/namespace.","needQuote":false,"needEscape":true,"nodes":[{"content":"The specified prefix contains an invalid character.","pos":[0,51]},{"content":"The specified prefix is malformed.","pos":[58,92]},{"content":"The namespaceURI of this node is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[99,193],"source":"       The namespaceURI of this node is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"The specified prefix is \"xml\" and the namespaceURI of this node is different from http://www.w3.org/XML/1998/namespace.","pos":[200,319]}]},{"pos":[37023,37125],"content":"Removes all specified attributes and children of the current node. Default attributes are not removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all specified attributes and children of the current node. Default attributes are not removed.","pos":[0,102],"nodes":[{"content":"Removes all specified attributes and children of the current node.","pos":[0,66]},{"content":"Default attributes are not removed.","pos":[67,102]}]}]},{"pos":[38111,38197],"content":"Removes all specified attributes from the element. Default attributes are not removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all specified attributes from the element. Default attributes are not removed.","pos":[0,86],"nodes":[{"content":"Removes all specified attributes from the element.","pos":[0,50]},{"content":"Default attributes are not removed.","pos":[51,86]}]}]},{"pos":[38209,38281],"content":"This method is a Microsoft extension to the Document Object Model (DOM).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is a Microsoft extension to the Document Object Model (DOM).","pos":[0,72]}]},{"pos":[39314,39343],"content":"Removes an attribute by name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes an attribute by name.","pos":[0,29]}]},{"pos":[39355,39552],"content":"If the removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.","pos":[0,197]}]},{"pos":[40165,40344],"content":"The name of the attribute to remove.This is a qualified name. It is matched against the <xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"></xref> property of the matching node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the attribute to remove.This is a qualified name.","pos":[0,61]},{"content":"It is matched against the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property of the matching node.","pos":[62,179],"source":" It is matched against the <xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"></xref> property of the matching node."}]},{"pos":[40504,40526],"content":"The node is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The node is read-only.","pos":[0,22]}]},{"pos":[40968,41113],"content":"Removes an attribute with the specified local name and namespace URI. (If the removed attribute has a default value, it is immediately replaced).","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes an attribute with the specified local name and namespace URI. (If the removed attribute has a default value, it is immediately replaced).","pos":[0,145],"nodes":[{"content":"Removes an attribute with the specified local name and namespace URI.","pos":[0,69]},{"content":"(If the removed attribute has a default value, it is immediately replaced).","pos":[70,145]}]}]},{"pos":[41125,41322],"content":"If the removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.","pos":[0,197]}]},{"pos":[41972,42014],"content":"The local name of the attribute to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local name of the attribute to remove.","pos":[0,42]}]},{"pos":[42083,42128],"content":"The namespace URI of the attribute to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace URI of the attribute to remove.","pos":[0,45]}]},{"pos":[42288,42310],"content":"The node is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The node is read-only.","pos":[0,22]}]},{"pos":[42708,42853],"content":"Removes the attribute node with the specified index from the element. (If the removed attribute has a default value, it is immediately replaced).","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the attribute node with the specified index from the element. (If the removed attribute has a default value, it is immediately replaced).","pos":[0,145],"nodes":[{"content":"Removes the attribute node with the specified index from the element.","pos":[0,69]},{"content":"(If the removed attribute has a default value, it is immediately replaced).","pos":[70,145]}]}]},{"pos":[42865,42937],"content":"This method is a Microsoft extension to the Document Object Model (DOM).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is a Microsoft extension to the Document Object Model (DOM).","pos":[0,72]}]},{"pos":[43562,43622],"content":"The index of the node to remove. The first node has index 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the node to remove. The first node has index 0.","pos":[0,60],"nodes":[{"content":"The index of the node to remove.","pos":[0,32]},{"content":"The first node has index 0.","pos":[33,60]}]}]},{"pos":[43685,43815],"content":"The attribute node removed or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is no node at the given index.","needQuote":true,"needEscape":true,"source":"The attribute node removed or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no node at the given index."},{"pos":[44336,44403],"content":"Removes the specified <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Removes the specified <xref href=\"System.Xml.XmlAttribute\"></xref>."},{"pos":[44610,44780],"content":"The <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> node to remove. If the removed attribute has a default value, it is immediately replaced.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> node to remove.","pos":[0,96],"source":"The <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> node to remove."},{"content":"If the removed attribute has a default value, it is immediately replaced.","pos":[97,170]}]},{"pos":[44848,45130],"content":"The removed <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph1\">oldAttr</ph><ept id=\"p3\">&lt;/code&gt;</ept> is not an attribute node of the <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The removed <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if <code>oldAttr</code> is not an attribute node of the <xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"></xref>."},{"pos":[45294,45317],"content":"This node is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"This node is read-only.","pos":[0,23]}]},{"pos":[45779,45958],"content":"Removes the <xref href=\"System.Xml.XmlAttribute\"></xref> specified by the local name and namespace URI. (If the removed attribute has a default value, it is immediately replaced).","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> specified by the local name and namespace URI.","pos":[0,103],"source":"Removes the <xref href=\"System.Xml.XmlAttribute\"></xref> specified by the local name and namespace URI."},{"content":"(If the removed attribute has a default value, it is immediately replaced).","pos":[104,179]}]},{"pos":[46657,46689],"content":"The local name of the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local name of the attribute.","pos":[0,32]}]},{"pos":[46758,46793],"content":"The namespace URI of the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace URI of the attribute.","pos":[0,35]}]},{"pos":[46861,47134],"content":"The removed <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> does not have a matching attribute node.","needQuote":true,"needEscape":true,"source":"The removed <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"></xref> does not have a matching attribute node."},{"pos":[47298,47321],"content":"This node is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"This node is read-only.","pos":[0,23]}]},{"pos":[47637,47746],"content":"Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.","pos":[0,109]}]},{"pos":[47758,47817],"content":"The SchemaInfo property is set when this node is validated.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The SchemaInfo property is set when this node is validated.","pos":[0,59]}]},{"pos":[47986,48109],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.IXmlSchemaInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object containing the post schema validation infoset of this node.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.Schema.IXmlSchemaInfo\"></xref> object containing the post schema validation infoset of this node."},{"pos":[48599,48655],"content":"Sets the value of the attribute with the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the attribute with the specified name.","pos":[0,56]}]},{"pos":[48667,49360],"content":"If an attribute with the same name is already present in the element, its value is changed to that of `value`. `value` is a simple string. It is not parsed as it is being set. Any markup, such as syntax to be recognized as an entity reference, is treated as literal text and needs to be properly escaped by the implementation when it is written out. In order to assign an attribute value that contains entity references, the user must create an <xref:System.Xml.XmlAttribute> node plus any <xref:System.Xml.XmlText> and <xref:System.Xml.XmlEntityReference> nodes, build the appropriate subtree and use <xref:System.Xml.XmlElement.SetAttributeNode%2A> to assign it as the value of an attribute.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If an attribute with the same name is already present in the element, its value is changed to that of <ph id=\"ph1\">`value`</ph>.","pos":[0,110],"source":"If an attribute with the same name is already present in the element, its value is changed to that of `value`."},{"content":"<ph id=\"ph1\">`value`</ph> is a simple string.","pos":[111,138],"source":"`value` is a simple string."},{"content":"It is not parsed as it is being set.","pos":[139,175]},{"content":"Any markup, such as syntax to be recognized as an entity reference, is treated as literal text and needs to be properly escaped by the implementation when it is written out.","pos":[176,349]},{"content":"In order to assign an attribute value that contains entity references, the user must create an &lt;xref:System.Xml.XmlAttribute&gt; node plus any &lt;xref:System.Xml.XmlText&gt; and &lt;xref:System.Xml.XmlEntityReference&gt; nodes, build the appropriate subtree and use &lt;xref:System.Xml.XmlElement.SetAttributeNode%2A&gt; to assign it as the value of an attribute.","pos":[350,693],"source":" In order to assign an attribute value that contains entity references, the user must create an <xref:System.Xml.XmlAttribute> node plus any <xref:System.Xml.XmlText> and <xref:System.Xml.XmlEntityReference> nodes, build the appropriate subtree and use <xref:System.Xml.XmlElement.SetAttributeNode%2A> to assign it as the value of an attribute."}]},{"pos":[49522,49674],"content":"The name of the attribute to create or alter. This is a qualified name. If the name contains a colon it is parsed into prefix and local name components.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the attribute to create or alter. This is a qualified name. If the name contains a colon it is parsed into prefix and local name components.","pos":[0,152],"nodes":[{"content":"The name of the attribute to create or alter.","pos":[0,45]},{"content":"This is a qualified name.","pos":[46,71]},{"content":"If the name contains a colon it is parsed into prefix and local name components.","pos":[72,152]}]}]},{"pos":[49736,49771],"content":"The value to set for the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to set for the attribute.","pos":[0,35]}]},{"pos":[49926,49975],"content":"The specified name contains an invalid character.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified name contains an invalid character.","pos":[0,49]}]},{"pos":[50070,50092],"content":"The node is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The node is read-only.","pos":[0,22]}]},{"pos":[50568,50648],"content":"Sets the value of the attribute with the specified local name and namespace URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the attribute with the specified local name and namespace URI.","pos":[0,80]}]},{"pos":[50843,50875],"content":"The local name of the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local name of the attribute.","pos":[0,32]}]},{"pos":[50944,50979],"content":"The namespace URI of the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace URI of the attribute.","pos":[0,35]}]},{"pos":[51041,51076],"content":"The value to set for the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to set for the attribute.","pos":[0,35]}]},{"pos":[51134,51154],"content":"The attribute value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The attribute value.","pos":[0,20]}]},{"pos":[51655,51719],"content":"Adds the specified <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds the specified <xref href=\"System.Xml.XmlAttribute\"></xref>."},{"pos":[51731,51827],"content":"If an attribute with that name is already present in the element, it is replaced by the new one.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If an attribute with that name is already present in the element, it is replaced by the new one.","pos":[0,96]}]},{"pos":[52031,52169],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> node to add to the attribute collection for this element.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> node to add to the attribute collection for this element."},{"pos":[52237,52487],"content":"If the attribute replaces an existing attribute with the same name, the old <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is returned; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is returned.","needQuote":true,"needEscape":true,"source":"If the attribute replaces an existing attribute with the same name, the old <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> is returned; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned."},{"pos":[52648,52774],"content":"The <code>newAttr</code> was created from a different document than the one that created this node. Or this node is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">newAttr</ph><ept id=\"p1\">&lt;/code&gt;</ept> was created from a different document than the one that created this node.","pos":[0,99],"source":"The <code>newAttr</code> was created from a different document than the one that created this node."},{"content":"Or this node is read-only.","pos":[100,126]}]},{"pos":[52885,53240],"content":"The <code>newAttr</code> is already an attribute of another <xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"></xref> object. You must explicitly clone <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> nodes to re-use them in other <xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"></xref> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">newAttr</ph><ept id=\"p1\">&lt;/code&gt;</ept> is already an attribute of another <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","pos":[0,140],"source":"The <code>newAttr</code> is already an attribute of another <xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"></xref> object."},{"content":"You must explicitly clone <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> nodes to re-use them in other <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects.","pos":[141,355],"source":" You must explicitly clone <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> nodes to re-use them in other <xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"></xref> objects."}]},{"pos":[53687,53751],"content":"Adds the specified <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds the specified <xref href=\"System.Xml.XmlAttribute\"></xref>."},{"pos":[53763,53997],"content":"The `XmlAttribute` does not have any children. Use <xref:System.Xml.XmlAttribute.Value%2A> to assign a text value to the attribute or use <xref:System.Xml.XmlNode.AppendChild%2A> (or a similar method) to add children to the attribute.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`XmlAttribute`</ph> does not have any children.","pos":[0,46],"source":"The `XmlAttribute` does not have any children."},{"content":"Use &lt;xref:System.Xml.XmlAttribute.Value%2A&gt; to assign a text value to the attribute or use &lt;xref:System.Xml.XmlNode.AppendChild%2A&gt; (or a similar method) to add children to the attribute.","pos":[47,234],"source":" Use <xref:System.Xml.XmlAttribute.Value%2A> to assign a text value to the attribute or use <xref:System.Xml.XmlNode.AppendChild%2A> (or a similar method) to add children to the attribute."}]},{"pos":[54662,54694],"content":"The local name of the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local name of the attribute.","pos":[0,32]}]},{"pos":[54763,54798],"content":"The namespace URI of the attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace URI of the attribute.","pos":[0,35]}]},{"pos":[54866,54954],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> to add."},{"pos":[55434,55514],"content":"Saves all the children of the node to the specified <xref:System.Xml.XmlWriter>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves all the children of the node to the specified &lt;xref:System.Xml.XmlWriter&gt;.","pos":[0,80],"source":"Saves all the children of the node to the specified <xref:System.Xml.XmlWriter>."}]},{"pos":[55526,55598],"content":"This method is a Microsoft extension to the Document Object Model (DOM).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is a Microsoft extension to the Document Object Model (DOM).","pos":[0,72]}]},{"pos":[56238,56339],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to which you want to save.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"></xref> to which you want to save."},{"pos":[56782,56850],"content":"Saves the current node to the specified <xref:System.Xml.XmlWriter>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves the current node to the specified &lt;xref:System.Xml.XmlWriter&gt;.","pos":[0,68],"source":"Saves the current node to the specified <xref:System.Xml.XmlWriter>."}]},{"pos":[56862,56934],"content":"This method is a Microsoft extension to the Document Object Model (DOM).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is a Microsoft extension to the Document Object Model (DOM).","pos":[0,72]}]},{"pos":[57568,57669],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to which you want to save.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"></xref> to which you want to save."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.XmlElement\n  id: XmlElement\n  children:\n  - System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)\n  - System.Xml.XmlElement.Attributes\n  - System.Xml.XmlElement.CloneNode(System.Boolean)\n  - System.Xml.XmlElement.GetAttribute(System.String)\n  - System.Xml.XmlElement.GetAttribute(System.String,System.String)\n  - System.Xml.XmlElement.GetAttributeNode(System.String)\n  - System.Xml.XmlElement.GetAttributeNode(System.String,System.String)\n  - System.Xml.XmlElement.GetElementsByTagName(System.String)\n  - System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)\n  - System.Xml.XmlElement.HasAttribute(System.String)\n  - System.Xml.XmlElement.HasAttribute(System.String,System.String)\n  - System.Xml.XmlElement.HasAttributes\n  - System.Xml.XmlElement.InnerText\n  - System.Xml.XmlElement.InnerXml\n  - System.Xml.XmlElement.IsEmpty\n  - System.Xml.XmlElement.LocalName\n  - System.Xml.XmlElement.Name\n  - System.Xml.XmlElement.NamespaceURI\n  - System.Xml.XmlElement.NextSibling\n  - System.Xml.XmlElement.NodeType\n  - System.Xml.XmlElement.OwnerDocument\n  - System.Xml.XmlElement.ParentNode\n  - System.Xml.XmlElement.Prefix\n  - System.Xml.XmlElement.RemoveAll\n  - System.Xml.XmlElement.RemoveAllAttributes\n  - System.Xml.XmlElement.RemoveAttribute(System.String)\n  - System.Xml.XmlElement.RemoveAttribute(System.String,System.String)\n  - System.Xml.XmlElement.RemoveAttributeAt(System.Int32)\n  - System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)\n  - System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)\n  - System.Xml.XmlElement.SchemaInfo\n  - System.Xml.XmlElement.SetAttribute(System.String,System.String)\n  - System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)\n  - System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)\n  - System.Xml.XmlElement.SetAttributeNode(System.String,System.String)\n  - System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)\n  - System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)\n  langs:\n  - csharp\n  name: XmlElement\n  nameWithType: XmlElement\n  fullName: System.Xml.XmlElement\n  type: Class\n  summary: Represents an element.\n  remarks: Elements are one of the most common nodes in the W3C Document Object Model (DOM). Elements can have attributes associated with them. The `XmlElement` class has many methods for accessing attributes (<xref:System.Xml.XmlElement.GetAttribute%2A>, <xref:System.Xml.XmlElement.SetAttribute%2A>, <xref:System.Xml.XmlElement.RemoveAttribute%2A>, <xref:System.Xml.XmlElement.GetAttributeNode%2A>, and so on). You can also use the <xref:System.Xml.XmlElement.Attributes%2A> property which returns an <xref:System.Xml.XmlAttributeCollection> enabling you to access attributes by name or index from the collection.\n  syntax:\n    content: 'public class XmlElement : System.Xml.XmlLinkedNode'\n  inheritance:\n  - System.Object\n  - System.Xml.XmlNode\n  - System.Xml.XmlLinkedNode\n  implements: []\n  inheritedMembers:\n  - System.Xml.XmlLinkedNode.PreviousSibling\n  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.BaseURI\n  - System.Xml.XmlNode.ChildNodes\n  - System.Xml.XmlNode.Clone\n  - System.Xml.XmlNode.CreateNavigator\n  - System.Xml.XmlNode.FirstChild\n  - System.Xml.XmlNode.GetEnumerator\n  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  - System.Xml.XmlNode.HasChildNodes\n  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.IsReadOnly\n  - System.Xml.XmlNode.Item(System.String)\n  - System.Xml.XmlNode.Item(System.String,System.String)\n  - System.Xml.XmlNode.LastChild\n  - System.Xml.XmlNode.Normalize\n  - System.Xml.XmlNode.OuterXml\n  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.PreviousText\n  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.SelectNodes(System.String)\n  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)\n  - System.Xml.XmlNode.SelectSingleNode(System.String)\n  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)\n  - System.Xml.XmlNode.Supports(System.String,System.String)\n  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  - System.Xml.XmlNode.System#ICloneable#Clone\n  - System.Xml.XmlNode.Value\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)\n  id: '#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)'\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: XmlElement(String,String,String,XmlDocument)\n  nameWithType: XmlElement.XmlElement(String,String,String,XmlDocument)\n  fullName: System.Xml.XmlElement.XmlElement(String,String,String,XmlDocument)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Xml.XmlElement\"></xref> class.\n  remarks: Do not instantiate an <xref:System.Xml.XmlElement> directly; instead, use methods such as <xref:System.Xml.XmlDocument.CreateElement%2A>.\n  syntax:\n    content: protected XmlElement (string prefix, string localName, string namespaceURI, System.Xml.XmlDocument doc);\n    parameters:\n    - id: prefix\n      type: System.String\n      description: The namespace prefix; see the <xref:System.Xml.XmlElement.Prefix*> property.\n    - id: localName\n      type: System.String\n      description: The local name; see the <xref:System.Xml.XmlElement.LocalName*> property.\n    - id: namespaceURI\n      type: System.String\n      description: The namespace URI; see the <xref:System.Xml.XmlElement.NamespaceURI*> property.\n    - id: doc\n      type: System.Xml.XmlDocument\n      description: The parent XML document.\n  overload: System.Xml.XmlElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.Attributes\n  id: Attributes\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: XmlElement.Attributes\n  fullName: System.Xml.XmlElement.Attributes\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets an <xref href=\"System.Xml.XmlAttributeCollection\"></xref> containing the list of attributes for this node.\n  remarks: ''\n  example:\n  - \"The following example uses changes the value of the first attribute.  \\n  \\n [!code-cpp[Classic WebData XmlElement.Attributes Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._0_1.cpp)]\\n [!code-cs[Classic WebData XmlElement.Attributes Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._0_1.cs)]\\n [!code-vb[Classic WebData XmlElement.Attributes Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._0_1.vb)]\"\n  syntax:\n    content: public override System.Xml.XmlAttributeCollection Attributes { get; }\n    return:\n      type: System.Xml.XmlAttributeCollection\n      description: <xref href=\"System.Xml.XmlAttributeCollection\"></xref> containing the list of attributes for this node.\n  overload: System.Xml.XmlElement.Attributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.CloneNode(System.Boolean)\n  id: CloneNode(System.Boolean)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: CloneNode(Boolean)\n  nameWithType: XmlElement.CloneNode(Boolean)\n  fullName: System.Xml.XmlElement.CloneNode(Boolean)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Creates a duplicate of this node.\n  remarks: This method serves as a copy constructor for nodes. The duplicate node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).\n  example:\n  - \"The following example creates a new element, clones it, and then adds both elements into an XML document.  \\n  \\n [!code-cpp[Classic WebData XmlElement.CloneNode Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._3_1.cpp)]\\n [!code-cs[Classic WebData XmlElement.CloneNode Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._3_1.cs)]\\n [!code-vb[Classic WebData XmlElement.CloneNode Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._3_1.vb)]\"\n  syntax:\n    content: public override System.Xml.XmlNode CloneNode (bool deep);\n    parameters:\n    - id: deep\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to recursively clone the subtree under the specified node; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to clone only the node itself (and its attributes if the node is an <xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"></xref>).\n    return:\n      type: System.Xml.XmlNode\n      description: The cloned node.\n  overload: System.Xml.XmlElement.CloneNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.GetAttribute(System.String)\n  id: GetAttribute(System.String)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: GetAttribute(String)\n  nameWithType: XmlElement.GetAttribute(String)\n  fullName: System.Xml.XmlElement.GetAttribute(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Returns the value for the attribute with the specified name.\n  remarks: ''\n  example:\n  - \"The following example checks to see if the element has the specified attribute.  \\n  \\n [!code-cs[Classic WebData XmlElement.HasAttribute Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._0_1.cs)]\\n [!code-vb[Classic WebData XmlElement.HasAttribute Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._0_1.vb)]\\n [!code-cpp[Classic WebData XmlElement.HasAttribute Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._0_1.cpp)]\"\n  syntax:\n    content: public virtual string GetAttribute (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the attribute to retrieve. This is a qualified name. It is matched against the <xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"></xref> property of the matching node.\n    return:\n      type: System.String\n      description: The value of the specified attribute. An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.\n  overload: System.Xml.XmlElement.GetAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.GetAttribute(System.String,System.String)\n  id: GetAttribute(System.String,System.String)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: GetAttribute(String,String)\n  nameWithType: XmlElement.GetAttribute(String,String)\n  fullName: System.Xml.XmlElement.GetAttribute(String,String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Returns the value for the attribute with the specified local name and namespace URI.\n  syntax:\n    content: public virtual string GetAttribute (string localName, string namespaceURI);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The local name of the attribute to retrieve.\n    - id: namespaceURI\n      type: System.String\n      description: The namespace URI of the attribute to retrieve.\n    return:\n      type: System.String\n      description: The value of the specified attribute. An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.\n  overload: System.Xml.XmlElement.GetAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.GetAttributeNode(System.String)\n  id: GetAttributeNode(System.String)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: GetAttributeNode(String)\n  nameWithType: XmlElement.GetAttributeNode(String)\n  fullName: System.Xml.XmlElement.GetAttributeNode(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Returns the <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> with the specified name.\n  remarks: ''\n  example:\n  - \"The following example checks to see if the element has the specified attribute.  \\n  \\n [!code-cpp[Classic WebData XmlElement.GetAttributeNode Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._5_1.cpp)]\\n [!code-cs[Classic WebData XmlElement.GetAttributeNode Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._5_1.cs)]\\n [!code-vb[Classic WebData XmlElement.GetAttributeNode Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._5_1.vb)]\"\n  syntax:\n    content: public virtual System.Xml.XmlAttribute GetAttributeNode (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the attribute to retrieve. This is a qualified name. It is matched against the <xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"></xref> property of the matching node.\n    return:\n      type: System.Xml.XmlAttribute\n      description: The specified <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if a matching attribute was not found.\n  overload: System.Xml.XmlElement.GetAttributeNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.GetAttributeNode(System.String,System.String)\n  id: GetAttributeNode(System.String,System.String)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: GetAttributeNode(String,String)\n  nameWithType: XmlElement.GetAttributeNode(String,String)\n  fullName: System.Xml.XmlElement.GetAttributeNode(String,String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Returns the <xref href=\"System.Xml.XmlAttribute\"></xref> with the specified local name and namespace URI.\n  syntax:\n    content: public virtual System.Xml.XmlAttribute GetAttributeNode (string localName, string namespaceURI);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The local name of the attribute.\n    - id: namespaceURI\n      type: System.String\n      description: The namespace URI of the attribute.\n    return:\n      type: System.Xml.XmlAttribute\n      description: The specified <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if a matching attribute was not found.\n  overload: System.Xml.XmlElement.GetAttributeNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.GetElementsByTagName(System.String)\n  id: GetElementsByTagName(System.String)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: GetElementsByTagName(String)\n  nameWithType: XmlElement.GetElementsByTagName(String)\n  fullName: System.Xml.XmlElement.GetElementsByTagName(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Returns an <xref href=\"System.Xml.XmlNodeList\"></xref> containing a list of all descendant elements that match the specified <xref:System.Xml.XmlElement.Name*>.\n  remarks: \"The nodes are placed in the order in which they would be encountered in a preorder traversal of the <xref:System.Xml.XmlElement> tree.  \\n  \\n> [!NOTE]\\n>  It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName> method instead of the GetElementsByTagName method.\"\n  example:\n  - \"The following example gets and displays all the book titles.  \\n  \\n [!code-cpp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._13_1.cpp)]\\n [!code-vb[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._13_1.vb)]\\n [!code-cs[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._13_1.cs)]  \\n  \\n The example uses the file, `2books.xml`, as input.  \\n  \\n [!code-xml[Classic WebData XmlElement.GetElementsByTagName Example#2](~/add/codesnippet/xml/m-system.xml.xmlelement._13_2.xml)]\"\n  syntax:\n    content: public virtual System.Xml.XmlNodeList GetElementsByTagName (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name tag to match. This is a qualified name. It is matched against the <xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"></xref> property of the matching node. The asterisk (*) is a special value that matches all tags.\n    return:\n      type: System.Xml.XmlNodeList\n      description: An <xref href=\"System.Xml.XmlNodeList\"></xref> containing a list of all matching nodes. The list is empty if there are no matching nodes.\n  overload: System.Xml.XmlElement.GetElementsByTagName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)\n  id: GetElementsByTagName(System.String,System.String)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: GetElementsByTagName(String,String)\n  nameWithType: XmlElement.GetElementsByTagName(String,String)\n  fullName: System.Xml.XmlElement.GetElementsByTagName(String,String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Returns an <xref href=\"System.Xml.XmlNodeList\"></xref> containing a list of all descendant elements that match the specified <xref:System.Xml.XmlElement.LocalName*> and <xref:System.Xml.XmlElement.NamespaceURI*>.\n  remarks: \"The nodes are placed in the order in which they would be encountered in a preorder traversal of the `XmlElement` tree.  \\n  \\n> [!NOTE]\\n>  It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName> method instead of the GetElementsByTagName method.\"\n  syntax:\n    content: public virtual System.Xml.XmlNodeList GetElementsByTagName (string localName, string namespaceURI);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The local name to match. The asterisk (*) is a special value that matches all tags.\n    - id: namespaceURI\n      type: System.String\n      description: The namespace URI to match.\n    return:\n      type: System.Xml.XmlNodeList\n      description: An <xref href=\"System.Xml.XmlNodeList\"></xref> containing a list of all matching nodes. The list is empty if there are no matching nodes.\n  overload: System.Xml.XmlElement.GetElementsByTagName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.HasAttribute(System.String)\n  id: HasAttribute(System.String)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: HasAttribute(String)\n  nameWithType: XmlElement.HasAttribute(String)\n  fullName: System.Xml.XmlElement.HasAttribute(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Determines whether the current node has an attribute with the specified name.\n  remarks: ''\n  example:\n  - \"The following example checks to see if the element has the specified attribute.  \\n  \\n [!code-cs[Classic WebData XmlElement.HasAttribute Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._7_1.cs)]\\n [!code-vb[Classic WebData XmlElement.HasAttribute Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._7_1.vb)]\\n [!code-cpp[Classic WebData XmlElement.HasAttribute Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._7_1.cpp)]\"\n  syntax:\n    content: public virtual bool HasAttribute (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the attribute to find. This is a qualified name. It is matched against the <xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"></xref> property of the matching node.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current node has the specified attribute; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xml.XmlElement.HasAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.HasAttribute(System.String,System.String)\n  id: HasAttribute(System.String,System.String)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: HasAttribute(String,String)\n  nameWithType: XmlElement.HasAttribute(String,String)\n  fullName: System.Xml.XmlElement.HasAttribute(String,String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Determines whether the current node has an attribute with the specified local name and namespace URI.\n  syntax:\n    content: public virtual bool HasAttribute (string localName, string namespaceURI);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The local name of the attribute to find.\n    - id: namespaceURI\n      type: System.String\n      description: The namespace URI of the attribute to find.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current node has the specified attribute; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xml.XmlElement.HasAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.HasAttributes\n  id: HasAttributes\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: HasAttributes\n  nameWithType: XmlElement.HasAttributes\n  fullName: System.Xml.XmlElement.HasAttributes\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets a <xref uid=\"langword_csharp_boolean\" name=\"boolean\" href=\"\"></xref> value indicating whether the current node has any attributes.\n  remarks: This property is a Microsoft extension to the Document Object Model (DOM).\n  example:\n  - \"The following example removes all attributes from the root element.  \\n  \\n [!code-cpp[Classic WebData XmlElement.HasAttributes Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._5_1.cpp)]\\n [!code-vb[Classic WebData XmlElement.HasAttributes Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._5_1.vb)]\\n [!code-cs[Classic WebData XmlElement.HasAttributes Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._5_1.cs)]\"\n  syntax:\n    content: public virtual bool HasAttributes { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current node has attributes; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xml.XmlElement.HasAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.InnerText\n  id: InnerText\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: InnerText\n  nameWithType: XmlElement.InnerText\n  fullName: System.Xml.XmlElement.InnerText\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets or sets the concatenated values of the node and all its children.\n  remarks: \"Setting this property replaces all the children with the parsed contents of the given string.  \\n  \\n This property is a Microsoft extension to the Document Object Model (DOM).\"\n  example:\n  - \"The following example compares the `InnerText` and <xref:System.Xml.XmlElement.InnerXml%2A> properties.  \\n  \\n [!code-cpp[Classic WebData XmlElement.InnerXml Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._7_1.cpp)]\\n [!code-cs[Classic WebData XmlElement.InnerXml Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._7_1.cs)]\\n [!code-vb[Classic WebData XmlElement.InnerXml Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._7_1.vb)]\"\n  syntax:\n    content: public override string InnerText { get; set; }\n    return:\n      type: System.String\n      description: The concatenated values of the node and all its children.\n  overload: System.Xml.XmlElement.InnerText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.InnerXml\n  id: InnerXml\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: InnerXml\n  nameWithType: XmlElement.InnerXml\n  fullName: System.Xml.XmlElement.InnerXml\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets or sets the markup representing just the children of this node.\n  remarks: \"Setting this property replaces the children of the node with the parsed contents of the given string. The parsing is done in the current namespace context.  \\n  \\n This property is a Microsoft extension to the Document Object Model (DOM).\"\n  example:\n  - \"The following example compares the <xref:System.Xml.XmlElement.InnerText%2A> and `InnerXml` properties.  \\n  \\n [!code-cpp[Classic WebData XmlElement.InnerXml Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._2_1.cpp)]\\n [!code-cs[Classic WebData XmlElement.InnerXml Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._2_1.cs)]\\n [!code-vb[Classic WebData XmlElement.InnerXml Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._2_1.vb)]\"\n  syntax:\n    content: public override string InnerXml { get; set; }\n    return:\n      type: System.String\n      description: The markup of the children of this node.\n  overload: System.Xml.XmlElement.InnerXml*\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: The XML specified when setting this property is not well-formed.\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.IsEmpty\n  id: IsEmpty\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: IsEmpty\n  nameWithType: XmlElement.IsEmpty\n  fullName: System.Xml.XmlElement.IsEmpty\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets or sets the tag format of the element.\n  remarks: This property is a Microsoft extension of the Document Object Model (DOM).\n  example:\n  - \"The following example adds content to an empty element.  \\n  \\n [!code-cpp[Classic WebData XmlElement.IsEmpty Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._8_1.cpp)]\\n [!code-cs[Classic WebData XmlElement.IsEmpty Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._8_1.cs)]\\n [!code-vb[Classic WebData XmlElement.IsEmpty Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._8_1.vb)]\"\n  syntax:\n    content: public bool IsEmpty { get; set; }\n    return:\n      type: System.Boolean\n      description: \"Returns <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> if the element is to be serialized in the short tag format \\\"&lt;item/&gt;\\\"; <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref> for the long format \\\"&lt;item&gt;&lt;/item&gt;\\\".  \\n  \\n When setting this property, if set to <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>, the children of the element are removed and the element is serialized in the short tag format. If set to <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>, the value of the property is changed (regardless of whether or not the element has content); if the element is empty, it is serialized in the long format.  \\n  \\n This property is a Microsoft extension to the Document Object Model (DOM).\"\n  overload: System.Xml.XmlElement.IsEmpty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.LocalName\n  id: LocalName\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: LocalName\n  nameWithType: XmlElement.LocalName\n  fullName: System.Xml.XmlElement.LocalName\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the local name of the current node.\n  remarks: If the node does not have a prefix, `LocalName` is the same as <xref:System.Xml.XmlElement.Name%2A>.\n  example:\n  - \"The following example displays information on the ISBN element.  \\n  \\n [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._4_1.vb)]\\n [!code-cs[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._4_1.cs)]\\n [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._4_1.cpp)]\"\n  syntax:\n    content: public override string LocalName { get; }\n    return:\n      type: System.String\n      description: The name of the current node with the prefix removed. For example, <xref uid=\"langword_csharp_LocalName\" name=\"LocalName\" href=\"\"></xref> is book for the element &lt;bk:book&gt;.\n  overload: System.Xml.XmlElement.LocalName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.Name\n  id: Name\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: Name\n  nameWithType: XmlElement.Name\n  fullName: System.Xml.XmlElement.Name\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the qualified name of the node.\n  remarks: ''\n  example:\n  - \"The following example displays information on the ISBN element.  \\n  \\n [!code-cpp[Classic WebData XmlElement.Name Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._1_1.cpp)]\\n [!code-cs[Classic WebData XmlElement.Name Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._1_1.cs)]\\n [!code-vb[Classic WebData XmlElement.Name Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._1_1.vb)]\"\n  syntax:\n    content: public override string Name { get; }\n    return:\n      type: System.String\n      description: The qualified name of the node. For <xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"></xref> nodes, this is the tag name of the element.\n  overload: System.Xml.XmlElement.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.NamespaceURI\n  id: NamespaceURI\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: NamespaceURI\n  nameWithType: XmlElement.NamespaceURI\n  fullName: System.Xml.XmlElement.NamespaceURI\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the namespace URI of this node.\n  remarks: This is the namespace URI specified at creation time. For example, `NamespaceURI` is urn:samples for the element \\<bk:book xmlns:bk= \"urn:samples\">\n  example:\n  - \"The following example displays information on the ISBN element.  \\n  \\n [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._6_1.vb)]\\n [!code-cs[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._6_1.cs)]\\n [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._6_1.cpp)]\"\n  syntax:\n    content: public override string NamespaceURI { get; }\n    return:\n      type: System.String\n      description: The namespace URI of this node. If there is no namespace URI, this property returns String.Empty.\n  overload: System.Xml.XmlElement.NamespaceURI*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.NextSibling\n  id: NextSibling\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: NextSibling\n  nameWithType: XmlElement.NextSibling\n  fullName: System.Xml.XmlElement.NextSibling\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the <xref href=\"System.Xml.XmlNode\"></xref> immediately following this element.\n  syntax:\n    content: public override System.Xml.XmlNode NextSibling { get; }\n    return:\n      type: System.Xml.XmlNode\n      description: The <xref uid=\"langword_csharp_XmlNode\" name=\"XmlNode\" href=\"\"></xref> immediately following this element.\n  overload: System.Xml.XmlElement.NextSibling*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.NodeType\n  id: NodeType\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: NodeType\n  nameWithType: XmlElement.NodeType\n  fullName: System.Xml.XmlElement.NodeType\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the type of the current node.\n  syntax:\n    content: public override System.Xml.XmlNodeType NodeType { get; }\n    return:\n      type: System.Xml.XmlNodeType\n      description: The node type. For <xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"></xref> nodes, this value is XmlNodeType.Element.\n  overload: System.Xml.XmlElement.NodeType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.OwnerDocument\n  id: OwnerDocument\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: OwnerDocument\n  nameWithType: XmlElement.OwnerDocument\n  fullName: System.Xml.XmlElement.OwnerDocument\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the <xref href=\"System.Xml.XmlDocument\"></xref> to which this node belongs.\n  remarks: When adding nodes to the current node, use the `XmlDocument` returned by the `OwnerDocument` property to create the node.\n  example:\n  - \"The following example inserts a new element into an XML document.  \\n  \\n [!code-cpp[Classic WebData XmlElement.OwnerDocument Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._3_1.cpp)]\\n [!code-vb[Classic WebData XmlElement.OwnerDocument Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._3_1.vb)]\\n [!code-cs[Classic WebData XmlElement.OwnerDocument Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._3_1.cs)]\"\n  syntax:\n    content: public override System.Xml.XmlDocument OwnerDocument { get; }\n    return:\n      type: System.Xml.XmlDocument\n      description: The <xref uid=\"langword_csharp_XmlDocument\" name=\"XmlDocument\" href=\"\"></xref> to which this element belongs.\n  overload: System.Xml.XmlElement.OwnerDocument*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.ParentNode\n  id: ParentNode\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: ParentNode\n  nameWithType: XmlElement.ParentNode\n  fullName: System.Xml.XmlElement.ParentNode\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the parent of this node (for nodes that can have parents).\n  syntax:\n    content: public override System.Xml.XmlNode ParentNode { get; }\n    return:\n      type: System.Xml.XmlNode\n      description: The <xref uid=\"langword_csharp_XmlNode\" name=\"XmlNode\" href=\"\"></xref> that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. For all other nodes, the value returned depends on the <xref:System.Xml.XmlNode.NodeType*> of the node. The following table describes the possible return values for the <xref uid=\"langword_csharp_ParentNode\" name=\"ParentNode\" href=\"\"></xref> property.\n  overload: System.Xml.XmlElement.ParentNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.Prefix\n  id: Prefix\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: Prefix\n  nameWithType: XmlElement.Prefix\n  fullName: System.Xml.XmlElement.Prefix\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets or sets the namespace prefix of this node.\n  remarks: Setting this property changes the <xref:System.Xml.XmlElement.Name%2A> property, which holds the qualified name for an `XmlElement`. However, changing the prefix does not change the namespace URI of the element.\n  example:\n  - \"The following example displays information on the ISBN element.  \\n  \\n [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._9_1.vb)]\\n [!code-cs[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._9_1.cs)]\\n [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._9_1.cpp)]\"\n  syntax:\n    content: public override string Prefix { get; set; }\n    return:\n      type: System.String\n      description: The namespace prefix of this node. If there is no prefix, this property returns String.Empty.\n  overload: System.Xml.XmlElement.Prefix*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: This node is read-only\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"The specified prefix contains an invalid character.  \\n  \\n The specified prefix is malformed.  \\n  \\n The namespaceURI of this node is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n The specified prefix is \\\"xml\\\" and the namespaceURI of this node is different from http://www.w3.org/XML/1998/namespace.\"\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.RemoveAll\n  id: RemoveAll\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: RemoveAll()\n  nameWithType: XmlElement.RemoveAll()\n  fullName: System.Xml.XmlElement.RemoveAll()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Removes all specified attributes and children of the current node. Default attributes are not removed.\n  remarks: ''\n  example:\n  - \"The following example removes all attributes and child nodes from the root element.  \\n  \\n [!code-cpp[Classic WebData XmlElement.RemoveAll Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._6_1.cpp)]\\n [!code-vb[Classic WebData XmlElement.RemoveAll Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._6_1.vb)]\\n [!code-cs[Classic WebData XmlElement.RemoveAll Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._6_1.cs)]\"\n  syntax:\n    content: public override void RemoveAll ();\n    parameters: []\n  overload: System.Xml.XmlElement.RemoveAll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.RemoveAllAttributes\n  id: RemoveAllAttributes\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: RemoveAllAttributes()\n  nameWithType: XmlElement.RemoveAllAttributes()\n  fullName: System.Xml.XmlElement.RemoveAllAttributes()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Removes all specified attributes from the element. Default attributes are not removed.\n  remarks: This method is a Microsoft extension to the Document Object Model (DOM).\n  example:\n  - \"The following example removes all attributes from the root element.  \\n  \\n [!code-cpp[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._9_1.cpp)]\\n [!code-cs[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._9_1.cs)]\\n [!code-vb[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._9_1.vb)]\"\n  syntax:\n    content: public virtual void RemoveAllAttributes ();\n    parameters: []\n  overload: System.Xml.XmlElement.RemoveAllAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.RemoveAttribute(System.String)\n  id: RemoveAttribute(System.String)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: RemoveAttribute(String)\n  nameWithType: XmlElement.RemoveAttribute(String)\n  fullName: System.Xml.XmlElement.RemoveAttribute(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Removes an attribute by name.\n  remarks: If the removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.\n  example:\n  - \"The following example removes an attribute from an element.  \\n  \\n [!code-cpp[Classic WebData XmlElement.RemoveAttribute Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._1_1.cpp)]\\n [!code-cs[Classic WebData XmlElement.RemoveAttribute Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._1_1.cs)]\\n [!code-vb[Classic WebData XmlElement.RemoveAttribute Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._1_1.vb)]\"\n  syntax:\n    content: public virtual void RemoveAttribute (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the attribute to remove.This is a qualified name. It is matched against the <xref uid=\"langword_csharp_Name\" name=\"Name\" href=\"\"></xref> property of the matching node.\n  overload: System.Xml.XmlElement.RemoveAttribute*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The node is read-only.\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.RemoveAttribute(System.String,System.String)\n  id: RemoveAttribute(System.String,System.String)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: RemoveAttribute(String,String)\n  nameWithType: XmlElement.RemoveAttribute(String,String)\n  fullName: System.Xml.XmlElement.RemoveAttribute(String,String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Removes an attribute with the specified local name and namespace URI. (If the removed attribute has a default value, it is immediately replaced).\n  remarks: If the removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.\n  example:\n  - \"The following example removes an attribute from an element.  \\n  \\n [!code-cpp[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._12_1.cpp)]\\n [!code-vb[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._12_1.vb)]\\n [!code-cs[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._12_1.cs)]\"\n  syntax:\n    content: public virtual void RemoveAttribute (string localName, string namespaceURI);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The local name of the attribute to remove.\n    - id: namespaceURI\n      type: System.String\n      description: The namespace URI of the attribute to remove.\n  overload: System.Xml.XmlElement.RemoveAttribute*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The node is read-only.\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.RemoveAttributeAt(System.Int32)\n  id: RemoveAttributeAt(System.Int32)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: RemoveAttributeAt(Int32)\n  nameWithType: XmlElement.RemoveAttributeAt(Int32)\n  fullName: System.Xml.XmlElement.RemoveAttributeAt(Int32)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Removes the attribute node with the specified index from the element. (If the removed attribute has a default value, it is immediately replaced).\n  remarks: This method is a Microsoft extension to the Document Object Model (DOM).\n  example:\n  - \"The following example removes an attribute from an element.  \\n  \\n [!code-cpp[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._2_1.cpp)]\\n [!code-vb[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._2_1.vb)]\\n [!code-cs[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._2_1.cs)]\"\n  syntax:\n    content: public virtual System.Xml.XmlNode RemoveAttributeAt (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The index of the node to remove. The first node has index 0.\n    return:\n      type: System.Xml.XmlNode\n      description: The attribute node removed or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no node at the given index.\n  overload: System.Xml.XmlElement.RemoveAttributeAt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)\n  id: RemoveAttributeNode(System.Xml.XmlAttribute)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: RemoveAttributeNode(XmlAttribute)\n  nameWithType: XmlElement.RemoveAttributeNode(XmlAttribute)\n  fullName: System.Xml.XmlElement.RemoveAttributeNode(XmlAttribute)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Removes the specified <xref href=\"System.Xml.XmlAttribute\"></xref>.\n  syntax:\n    content: public virtual System.Xml.XmlAttribute RemoveAttributeNode (System.Xml.XmlAttribute oldAttr);\n    parameters:\n    - id: oldAttr\n      type: System.Xml.XmlAttribute\n      description: The <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> node to remove. If the removed attribute has a default value, it is immediately replaced.\n    return:\n      type: System.Xml.XmlAttribute\n      description: The removed <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if <code>oldAttr</code> is not an attribute node of the <xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"></xref>.\n  overload: System.Xml.XmlElement.RemoveAttributeNode*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: This node is read-only.\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)\n  id: RemoveAttributeNode(System.String,System.String)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: RemoveAttributeNode(String,String)\n  nameWithType: XmlElement.RemoveAttributeNode(String,String)\n  fullName: System.Xml.XmlElement.RemoveAttributeNode(String,String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Removes the <xref href=\"System.Xml.XmlAttribute\"></xref> specified by the local name and namespace URI. (If the removed attribute has a default value, it is immediately replaced).\n  remarks: ''\n  example:\n  - \"The following example removes an attribute from an element.  \\n  \\n [!code-cpp[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._11_1.cpp)]\\n [!code-cs[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._11_1.cs)]\\n [!code-vb[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._11_1.vb)]\"\n  syntax:\n    content: public virtual System.Xml.XmlAttribute RemoveAttributeNode (string localName, string namespaceURI);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The local name of the attribute.\n    - id: namespaceURI\n      type: System.String\n      description: The namespace URI of the attribute.\n    return:\n      type: System.Xml.XmlAttribute\n      description: The removed <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the <xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"></xref> does not have a matching attribute node.\n  overload: System.Xml.XmlElement.RemoveAttributeNode*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: This node is read-only.\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.SchemaInfo\n  id: SchemaInfo\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: SchemaInfo\n  nameWithType: XmlElement.SchemaInfo\n  fullName: System.Xml.XmlElement.SchemaInfo\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.\n  remarks: The SchemaInfo property is set when this node is validated.\n  syntax:\n    content: public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }\n    return:\n      type: System.Xml.Schema.IXmlSchemaInfo\n      description: An <xref href=\"System.Xml.Schema.IXmlSchemaInfo\"></xref> object containing the post schema validation infoset of this node.\n  overload: System.Xml.XmlElement.SchemaInfo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.SetAttribute(System.String,System.String)\n  id: SetAttribute(System.String,System.String)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: SetAttribute(String,String)\n  nameWithType: XmlElement.SetAttribute(String,String)\n  fullName: System.Xml.XmlElement.SetAttribute(String,String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Sets the value of the attribute with the specified name.\n  remarks: If an attribute with the same name is already present in the element, its value is changed to that of `value`. `value` is a simple string. It is not parsed as it is being set. Any markup, such as syntax to be recognized as an entity reference, is treated as literal text and needs to be properly escaped by the implementation when it is written out. In order to assign an attribute value that contains entity references, the user must create an <xref:System.Xml.XmlAttribute> node plus any <xref:System.Xml.XmlText> and <xref:System.Xml.XmlEntityReference> nodes, build the appropriate subtree and use <xref:System.Xml.XmlElement.SetAttributeNode%2A> to assign it as the value of an attribute.\n  syntax:\n    content: public virtual void SetAttribute (string name, string value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the attribute to create or alter. This is a qualified name. If the name contains a colon it is parsed into prefix and local name components.\n    - id: value\n      type: System.String\n      description: The value to set for the attribute.\n  overload: System.Xml.XmlElement.SetAttribute*\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: The specified name contains an invalid character.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The node is read-only.\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)\n  id: SetAttribute(System.String,System.String,System.String)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: SetAttribute(String,String,String)\n  nameWithType: XmlElement.SetAttribute(String,String,String)\n  fullName: System.Xml.XmlElement.SetAttribute(String,String,String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Sets the value of the attribute with the specified local name and namespace URI.\n  syntax:\n    content: public virtual string SetAttribute (string localName, string namespaceURI, string value);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The local name of the attribute.\n    - id: namespaceURI\n      type: System.String\n      description: The namespace URI of the attribute.\n    - id: value\n      type: System.String\n      description: The value to set for the attribute.\n    return:\n      type: System.String\n      description: The attribute value.\n  overload: System.Xml.XmlElement.SetAttribute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)\n  id: SetAttributeNode(System.Xml.XmlAttribute)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: SetAttributeNode(XmlAttribute)\n  nameWithType: XmlElement.SetAttributeNode(XmlAttribute)\n  fullName: System.Xml.XmlElement.SetAttributeNode(XmlAttribute)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Adds the specified <xref href=\"System.Xml.XmlAttribute\"></xref>.\n  remarks: If an attribute with that name is already present in the element, it is replaced by the new one.\n  syntax:\n    content: public virtual System.Xml.XmlAttribute SetAttributeNode (System.Xml.XmlAttribute newAttr);\n    parameters:\n    - id: newAttr\n      type: System.Xml.XmlAttribute\n      description: The <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> node to add to the attribute collection for this element.\n    return:\n      type: System.Xml.XmlAttribute\n      description: If the attribute replaces an existing attribute with the same name, the old <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> is returned; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned.\n  overload: System.Xml.XmlElement.SetAttributeNode*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>newAttr</code> was created from a different document than the one that created this node. Or this node is read-only.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <code>newAttr</code> is already an attribute of another <xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"></xref> object. You must explicitly clone <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> nodes to re-use them in other <xref uid=\"langword_csharp_XmlElement\" name=\"XmlElement\" href=\"\"></xref> objects.\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.SetAttributeNode(System.String,System.String)\n  id: SetAttributeNode(System.String,System.String)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: SetAttributeNode(String,String)\n  nameWithType: XmlElement.SetAttributeNode(String,String)\n  fullName: System.Xml.XmlElement.SetAttributeNode(String,String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Adds the specified <xref href=\"System.Xml.XmlAttribute\"></xref>.\n  remarks: The `XmlAttribute` does not have any children. Use <xref:System.Xml.XmlAttribute.Value%2A> to assign a text value to the attribute or use <xref:System.Xml.XmlNode.AppendChild%2A> (or a similar method) to add children to the attribute.\n  example:\n  - \"The following example adds an attribute to an element.  \\n  \\n [!code-cs[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._4_1.cs)]\\n [!code-vb[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._4_1.vb)]\\n [!code-cpp[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._4_1.cpp)]\"\n  syntax:\n    content: public virtual System.Xml.XmlAttribute SetAttributeNode (string localName, string namespaceURI);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The local name of the attribute.\n    - id: namespaceURI\n      type: System.String\n      description: The namespace URI of the attribute.\n    return:\n      type: System.Xml.XmlAttribute\n      description: The <xref uid=\"langword_csharp_XmlAttribute\" name=\"XmlAttribute\" href=\"\"></xref> to add.\n  overload: System.Xml.XmlElement.SetAttributeNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)\n  id: WriteContentTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: WriteContentTo(XmlWriter)\n  nameWithType: XmlElement.WriteContentTo(XmlWriter)\n  fullName: System.Xml.XmlElement.WriteContentTo(XmlWriter)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Saves all the children of the node to the specified <xref:System.Xml.XmlWriter>.\n  remarks: This method is a Microsoft extension to the Document Object Model (DOM).\n  example:\n  - \"The following example displays the contents of the element to the console.  \\n  \\n [!code-cpp[Classic WebData XmlElement.WriteContentTo Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._8_1.cpp)]\\n [!code-vb[Classic WebData XmlElement.WriteContentTo Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._8_1.vb)]\\n [!code-cs[Classic WebData XmlElement.WriteContentTo Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._8_1.cs)]\"\n  syntax:\n    content: public override void WriteContentTo (System.Xml.XmlWriter w);\n    parameters:\n    - id: w\n      type: System.Xml.XmlWriter\n      description: The <xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"></xref> to which you want to save.\n  overload: System.Xml.XmlElement.WriteContentTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)\n  id: WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlElement\n  langs:\n  - csharp\n  name: WriteTo(XmlWriter)\n  nameWithType: XmlElement.WriteTo(XmlWriter)\n  fullName: System.Xml.XmlElement.WriteTo(XmlWriter)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Saves the current node to the specified <xref:System.Xml.XmlWriter>.\n  remarks: This method is a Microsoft extension to the Document Object Model (DOM).\n  example:\n  - \"The following example adds an attribute to an element and then displays the modified element.  \\n  \\n [!code-cs[Classic WebData XmlElement.WriteTo Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._10_1.cs)]\\n [!code-cpp[Classic WebData XmlElement.WriteTo Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._10_1.cpp)]\\n [!code-vb[Classic WebData XmlElement.WriteTo Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._10_1.vb)]\"\n  syntax:\n    content: public override void WriteTo (System.Xml.XmlWriter w);\n    parameters:\n    - id: w\n      type: System.Xml.XmlWriter\n      description: The <xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"></xref> to which you want to save.\n  overload: System.Xml.XmlElement.WriteTo*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Xml.XmlLinkedNode\n  isExternal: false\n  name: System.Xml.XmlLinkedNode\n- uid: System.Xml.XmlException\n  isExternal: true\n  name: System.Xml.XmlException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: XmlElement(String,String,String,XmlDocument)\n  nameWithType: XmlElement.XmlElement(String,String,String,XmlDocument)\n  fullName: System.Xml.XmlElement.XmlElement(String,String,String,XmlDocument)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.XmlDocument\n  parent: System.Xml\n  isExternal: false\n  name: XmlDocument\n  nameWithType: XmlDocument\n  fullName: System.Xml.XmlDocument\n- uid: System.Xml.XmlElement.Attributes\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: Attributes\n  nameWithType: XmlElement.Attributes\n  fullName: System.Xml.XmlElement.Attributes\n- uid: System.Xml.XmlAttributeCollection\n  parent: System.Xml\n  isExternal: false\n  name: XmlAttributeCollection\n  nameWithType: XmlAttributeCollection\n  fullName: System.Xml.XmlAttributeCollection\n- uid: System.Xml.XmlElement.CloneNode(System.Boolean)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: CloneNode(Boolean)\n  nameWithType: XmlElement.CloneNode(Boolean)\n  fullName: System.Xml.XmlElement.CloneNode(Boolean)\n- uid: System.Xml.XmlNode\n  parent: System.Xml\n  isExternal: false\n  name: XmlNode\n  nameWithType: XmlNode\n  fullName: System.Xml.XmlNode\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.XmlElement.GetAttribute(System.String)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: GetAttribute(String)\n  nameWithType: XmlElement.GetAttribute(String)\n  fullName: System.Xml.XmlElement.GetAttribute(String)\n- uid: System.Xml.XmlElement.GetAttribute(System.String,System.String)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: GetAttribute(String,String)\n  nameWithType: XmlElement.GetAttribute(String,String)\n  fullName: System.Xml.XmlElement.GetAttribute(String,String)\n- uid: System.Xml.XmlElement.GetAttributeNode(System.String)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: GetAttributeNode(String)\n  nameWithType: XmlElement.GetAttributeNode(String)\n  fullName: System.Xml.XmlElement.GetAttributeNode(String)\n- uid: System.Xml.XmlAttribute\n  parent: System.Xml\n  isExternal: false\n  name: XmlAttribute\n  nameWithType: XmlAttribute\n  fullName: System.Xml.XmlAttribute\n- uid: System.Xml.XmlElement.GetAttributeNode(System.String,System.String)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: GetAttributeNode(String,String)\n  nameWithType: XmlElement.GetAttributeNode(String,String)\n  fullName: System.Xml.XmlElement.GetAttributeNode(String,String)\n- uid: System.Xml.XmlElement.GetElementsByTagName(System.String)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: GetElementsByTagName(String)\n  nameWithType: XmlElement.GetElementsByTagName(String)\n  fullName: System.Xml.XmlElement.GetElementsByTagName(String)\n- uid: System.Xml.XmlNodeList\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeList\n  nameWithType: XmlNodeList\n  fullName: System.Xml.XmlNodeList\n- uid: System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: GetElementsByTagName(String,String)\n  nameWithType: XmlElement.GetElementsByTagName(String,String)\n  fullName: System.Xml.XmlElement.GetElementsByTagName(String,String)\n- uid: System.Xml.XmlElement.HasAttribute(System.String)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: HasAttribute(String)\n  nameWithType: XmlElement.HasAttribute(String)\n  fullName: System.Xml.XmlElement.HasAttribute(String)\n- uid: System.Xml.XmlElement.HasAttribute(System.String,System.String)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: HasAttribute(String,String)\n  nameWithType: XmlElement.HasAttribute(String,String)\n  fullName: System.Xml.XmlElement.HasAttribute(String,String)\n- uid: System.Xml.XmlElement.HasAttributes\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: HasAttributes\n  nameWithType: XmlElement.HasAttributes\n  fullName: System.Xml.XmlElement.HasAttributes\n- uid: System.Xml.XmlElement.InnerText\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: InnerText\n  nameWithType: XmlElement.InnerText\n  fullName: System.Xml.XmlElement.InnerText\n- uid: System.Xml.XmlElement.InnerXml\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: InnerXml\n  nameWithType: XmlElement.InnerXml\n  fullName: System.Xml.XmlElement.InnerXml\n- uid: System.Xml.XmlElement.IsEmpty\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: IsEmpty\n  nameWithType: XmlElement.IsEmpty\n  fullName: System.Xml.XmlElement.IsEmpty\n- uid: System.Xml.XmlElement.LocalName\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: LocalName\n  nameWithType: XmlElement.LocalName\n  fullName: System.Xml.XmlElement.LocalName\n- uid: System.Xml.XmlElement.Name\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: Name\n  nameWithType: XmlElement.Name\n  fullName: System.Xml.XmlElement.Name\n- uid: System.Xml.XmlElement.NamespaceURI\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: NamespaceURI\n  nameWithType: XmlElement.NamespaceURI\n  fullName: System.Xml.XmlElement.NamespaceURI\n- uid: System.Xml.XmlElement.NextSibling\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: NextSibling\n  nameWithType: XmlElement.NextSibling\n  fullName: System.Xml.XmlElement.NextSibling\n- uid: System.Xml.XmlElement.NodeType\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: NodeType\n  nameWithType: XmlElement.NodeType\n  fullName: System.Xml.XmlElement.NodeType\n- uid: System.Xml.XmlNodeType\n  parent: System.Xml\n  isExternal: true\n  name: XmlNodeType\n  nameWithType: XmlNodeType\n  fullName: System.Xml.XmlNodeType\n- uid: System.Xml.XmlElement.OwnerDocument\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: OwnerDocument\n  nameWithType: XmlElement.OwnerDocument\n  fullName: System.Xml.XmlElement.OwnerDocument\n- uid: System.Xml.XmlElement.ParentNode\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: ParentNode\n  nameWithType: XmlElement.ParentNode\n  fullName: System.Xml.XmlElement.ParentNode\n- uid: System.Xml.XmlElement.Prefix\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: Prefix\n  nameWithType: XmlElement.Prefix\n  fullName: System.Xml.XmlElement.Prefix\n- uid: System.Xml.XmlElement.RemoveAll\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: RemoveAll()\n  nameWithType: XmlElement.RemoveAll()\n  fullName: System.Xml.XmlElement.RemoveAll()\n- uid: System.Xml.XmlElement.RemoveAllAttributes\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: RemoveAllAttributes()\n  nameWithType: XmlElement.RemoveAllAttributes()\n  fullName: System.Xml.XmlElement.RemoveAllAttributes()\n- uid: System.Xml.XmlElement.RemoveAttribute(System.String)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: RemoveAttribute(String)\n  nameWithType: XmlElement.RemoveAttribute(String)\n  fullName: System.Xml.XmlElement.RemoveAttribute(String)\n- uid: System.Xml.XmlElement.RemoveAttribute(System.String,System.String)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: RemoveAttribute(String,String)\n  nameWithType: XmlElement.RemoveAttribute(String,String)\n  fullName: System.Xml.XmlElement.RemoveAttribute(String,String)\n- uid: System.Xml.XmlElement.RemoveAttributeAt(System.Int32)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: RemoveAttributeAt(Int32)\n  nameWithType: XmlElement.RemoveAttributeAt(Int32)\n  fullName: System.Xml.XmlElement.RemoveAttributeAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: RemoveAttributeNode(XmlAttribute)\n  nameWithType: XmlElement.RemoveAttributeNode(XmlAttribute)\n  fullName: System.Xml.XmlElement.RemoveAttributeNode(XmlAttribute)\n- uid: System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: RemoveAttributeNode(String,String)\n  nameWithType: XmlElement.RemoveAttributeNode(String,String)\n  fullName: System.Xml.XmlElement.RemoveAttributeNode(String,String)\n- uid: System.Xml.XmlElement.SchemaInfo\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: SchemaInfo\n  nameWithType: XmlElement.SchemaInfo\n  fullName: System.Xml.XmlElement.SchemaInfo\n- uid: System.Xml.Schema.IXmlSchemaInfo\n  parent: System.Xml.Schema\n  isExternal: false\n  name: IXmlSchemaInfo\n  nameWithType: IXmlSchemaInfo\n  fullName: System.Xml.Schema.IXmlSchemaInfo\n- uid: System.Xml.XmlElement.SetAttribute(System.String,System.String)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: SetAttribute(String,String)\n  nameWithType: XmlElement.SetAttribute(String,String)\n  fullName: System.Xml.XmlElement.SetAttribute(String,String)\n- uid: System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: SetAttribute(String,String,String)\n  nameWithType: XmlElement.SetAttribute(String,String,String)\n  fullName: System.Xml.XmlElement.SetAttribute(String,String,String)\n- uid: System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: SetAttributeNode(XmlAttribute)\n  nameWithType: XmlElement.SetAttributeNode(XmlAttribute)\n  fullName: System.Xml.XmlElement.SetAttributeNode(XmlAttribute)\n- uid: System.Xml.XmlElement.SetAttributeNode(System.String,System.String)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: SetAttributeNode(String,String)\n  nameWithType: XmlElement.SetAttributeNode(String,String)\n  fullName: System.Xml.XmlElement.SetAttributeNode(String,String)\n- uid: System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: WriteContentTo(XmlWriter)\n  nameWithType: XmlElement.WriteContentTo(XmlWriter)\n  fullName: System.Xml.XmlElement.WriteContentTo(XmlWriter)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: WriteTo(XmlWriter)\n  nameWithType: XmlElement.WriteTo(XmlWriter)\n  fullName: System.Xml.XmlElement.WriteTo(XmlWriter)\n- uid: System.Xml.XmlElement.#ctor*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: XmlElement\n  nameWithType: XmlElement.XmlElement\n- uid: System.Xml.XmlElement.Attributes*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: Attributes\n  nameWithType: XmlElement.Attributes\n- uid: System.Xml.XmlElement.CloneNode*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: CloneNode\n  nameWithType: XmlElement.CloneNode\n- uid: System.Xml.XmlElement.GetAttribute*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: GetAttribute\n  nameWithType: XmlElement.GetAttribute\n- uid: System.Xml.XmlElement.GetAttributeNode*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: GetAttributeNode\n  nameWithType: XmlElement.GetAttributeNode\n- uid: System.Xml.XmlElement.GetElementsByTagName*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: GetElementsByTagName\n  nameWithType: XmlElement.GetElementsByTagName\n- uid: System.Xml.XmlElement.HasAttribute*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: HasAttribute\n  nameWithType: XmlElement.HasAttribute\n- uid: System.Xml.XmlElement.HasAttributes*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: HasAttributes\n  nameWithType: XmlElement.HasAttributes\n- uid: System.Xml.XmlElement.InnerText*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: InnerText\n  nameWithType: XmlElement.InnerText\n- uid: System.Xml.XmlElement.InnerXml*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: InnerXml\n  nameWithType: XmlElement.InnerXml\n- uid: System.Xml.XmlElement.IsEmpty*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: IsEmpty\n  nameWithType: XmlElement.IsEmpty\n- uid: System.Xml.XmlElement.LocalName*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: LocalName\n  nameWithType: XmlElement.LocalName\n- uid: System.Xml.XmlElement.Name*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: Name\n  nameWithType: XmlElement.Name\n- uid: System.Xml.XmlElement.NamespaceURI*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: NamespaceURI\n  nameWithType: XmlElement.NamespaceURI\n- uid: System.Xml.XmlElement.NextSibling*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: NextSibling\n  nameWithType: XmlElement.NextSibling\n- uid: System.Xml.XmlElement.NodeType*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: NodeType\n  nameWithType: XmlElement.NodeType\n- uid: System.Xml.XmlElement.OwnerDocument*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: OwnerDocument\n  nameWithType: XmlElement.OwnerDocument\n- uid: System.Xml.XmlElement.ParentNode*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: ParentNode\n  nameWithType: XmlElement.ParentNode\n- uid: System.Xml.XmlElement.Prefix*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: Prefix\n  nameWithType: XmlElement.Prefix\n- uid: System.Xml.XmlElement.RemoveAll*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: RemoveAll\n  nameWithType: XmlElement.RemoveAll\n- uid: System.Xml.XmlElement.RemoveAllAttributes*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: RemoveAllAttributes\n  nameWithType: XmlElement.RemoveAllAttributes\n- uid: System.Xml.XmlElement.RemoveAttribute*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: RemoveAttribute\n  nameWithType: XmlElement.RemoveAttribute\n- uid: System.Xml.XmlElement.RemoveAttributeAt*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: RemoveAttributeAt\n  nameWithType: XmlElement.RemoveAttributeAt\n- uid: System.Xml.XmlElement.RemoveAttributeNode*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: RemoveAttributeNode\n  nameWithType: XmlElement.RemoveAttributeNode\n- uid: System.Xml.XmlElement.SchemaInfo*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: SchemaInfo\n  nameWithType: XmlElement.SchemaInfo\n- uid: System.Xml.XmlElement.SetAttribute*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: SetAttribute\n  nameWithType: XmlElement.SetAttribute\n- uid: System.Xml.XmlElement.SetAttributeNode*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: SetAttributeNode\n  nameWithType: XmlElement.SetAttributeNode\n- uid: System.Xml.XmlElement.WriteContentTo*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: WriteContentTo\n  nameWithType: XmlElement.WriteContentTo\n- uid: System.Xml.XmlElement.WriteTo*\n  parent: System.Xml.XmlElement\n  isExternal: false\n  name: WriteTo\n  nameWithType: XmlElement.WriteTo\n"}