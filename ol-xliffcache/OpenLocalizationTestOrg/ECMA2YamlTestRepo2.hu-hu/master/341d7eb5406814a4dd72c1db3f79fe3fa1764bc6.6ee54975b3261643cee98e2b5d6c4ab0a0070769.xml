{"nodes":[{"pos":[1465,1494],"content":"Provides a host for services.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a host for services.","pos":[0,29]}]},{"pos":[1507,2579],"content":"Implements the host used by the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] service model programming model.       Use the ServiceHost class to configure and expose a service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service. Both IIS and WAS interact with a ServiceHost object on your behalf.       To expose a service for use by callers, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] requires a complete service description (represented by the <xref:System.ServiceModel.Description.ServiceDescription> class). The ServiceHost class creates a <xref:System.ServiceModel.Description.ServiceDescription> from the service type and configuration information and then uses that description to create <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects for each endpoint in the description.       Use a ServiceHost object to load a service, configure endpoints, apply security settings, and start listeners to handle incoming requests.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Implements the host used by the <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> service model programming model.","pos":[0,123],"source":"Implements the host used by the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] service model programming model."},{"content":"Use the ServiceHost class to configure and expose a service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service.","pos":[130,337]},{"content":"Both IIS and WAS interact with a ServiceHost object on your behalf.","pos":[338,405]},{"content":"To expose a service for use by callers, <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> requires a complete service description (represented by the &lt;xref:System.ServiceModel.Description.ServiceDescription&gt; class).","pos":[412,636],"source":"       To expose a service for use by callers, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] requires a complete service description (represented by the <xref:System.ServiceModel.Description.ServiceDescription> class)."},{"content":"The ServiceHost class creates a &lt;xref:System.ServiceModel.Description.ServiceDescription&gt; from the service type and configuration information and then uses that description to create &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt; objects for each endpoint in the description.","pos":[637,921],"source":" The ServiceHost class creates a <xref:System.ServiceModel.Description.ServiceDescription> from the service type and configuration information and then uses that description to create <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects for each endpoint in the description."},{"content":"Use a ServiceHost object to load a service, configure endpoints, apply security settings, and start listeners to handle incoming requests.","pos":[928,1066]}]},{"pos":[6120,6213],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ServiceHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceHost\"></xref> class."},{"pos":[6225,6884],"content":"There are two constructors used to create an instance of the <xref:System.ServiceModel.ServiceHost> class. Use the [ServiceHost(Type, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])?qualifyHint=False&autoUpgrade=False) constructor which takes the service type as an input parameter, most of the time. The host can use this to create new services as needed. Use the [ServiceHost(Object, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&autoUpgrade=False) constructor instead only when you want the service host to use a specific singleton instance of the service.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"There are two constructors used to create an instance of the &lt;xref:System.ServiceModel.ServiceHost&gt; class.","pos":[0,106],"source":"There are two constructors used to create an instance of the <xref:System.ServiceModel.ServiceHost> class."},{"content":"Use the <bpt id=\"p1\">[</bpt>ServiceHost(Type, Uri<ph id=\"ph1\">\\[</ph><ph id=\"ph2\">\\]</ph>)<ept id=\"p1\">](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])?qualifyHint=False&amp;autoUpgrade=False)</ept> constructor which takes the service type as an input parameter, most of the time.","pos":[107,339],"source":" Use the [ServiceHost(Type, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])?qualifyHint=False&autoUpgrade=False) constructor which takes the service type as an input parameter, most of the time."},{"content":"The host can use this to create new services as needed.","pos":[340,395]},{"content":"Use the <bpt id=\"p1\">[</bpt>ServiceHost(Object, Uri<ph id=\"ph1\">\\[</ph><ph id=\"ph2\">\\]</ph>)<ept id=\"p1\">](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&amp;autoUpgrade=False)</ept> constructor instead only when you want the service host to use a specific singleton instance of the service.","pos":[396,659],"source":" Use the [ServiceHost(Object, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&autoUpgrade=False) constructor instead only when you want the service host to use a specific singleton instance of the service."}]},{"pos":[7481,7640],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ServiceHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the instance of the service and its base addresses specified.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceHost\"></xref> class with the instance of the service and its base addresses specified."},{"pos":[7653,8821],"content":"Use this constructor as an alternative to implementing a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName> when you want to provide a specific object instance for use by a singleton service. You may want to use this overload when your service implementation type is difficult to construct (for example, if it does not implement a default public constructor that has no parameters).       Note that when an object is provided to this overload, some features related to the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] instancing behavior work differently. For example, calling <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=fullName> have no effect when a well-known object instance is provided using this constructor overload. Similarly, any other instance release mechanism is ignored. The <xref:System.ServiceModel.ServiceHost> always behaves as if the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=fullName> property is set to <xref:System.ServiceModel.ReleaseInstanceMode?displayProperty=fullName> for all operations.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this constructor as an alternative to implementing a custom &lt;xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName&gt; when you want to provide a specific object instance for use by a singleton service.","pos":[0,238],"source":"Use this constructor as an alternative to implementing a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName> when you want to provide a specific object instance for use by a singleton service."},{"content":"You may want to use this overload when your service implementation type is difficult to construct (for example, if it does not implement a default public constructor that has no parameters).","pos":[239,429]},{"content":"Note that when an object is provided to this overload, some features related to the <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> instancing behavior work differently.","pos":[436,616],"source":"       Note that when an object is provided to this overload, some features related to the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] instancing behavior work differently."},{"content":"For example, calling &lt;xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=fullName&gt; have no effect when a well-known object instance is provided using this constructor overload.","pos":[617,825],"source":" For example, calling <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=fullName> have no effect when a well-known object instance is provided using this constructor overload."},{"content":"Similarly, any other instance release mechanism is ignored.","pos":[826,885]},{"content":"The &lt;xref:System.ServiceModel.ServiceHost&gt; always behaves as if the &lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=fullName&gt; property is set to &lt;xref:System.ServiceModel.ReleaseInstanceMode?displayProperty=fullName&gt; for all operations.","pos":[886,1166],"source":" The <xref:System.ServiceModel.ServiceHost> always behaves as if the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=fullName> property is set to <xref:System.ServiceModel.ReleaseInstanceMode?displayProperty=fullName> for all operations."}]},{"pos":[9213,9248],"content":"The instance of the hosted service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The instance of the hosted service.","pos":[0,35]}]},{"pos":[9317,9422],"content":"An <xref:System.Array> of type <xref:System.Uri> that contains the base addresses for the hosted service.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Array&gt; of type &lt;xref:System.Uri&gt; that contains the base addresses for the hosted service.","pos":[0,105],"source":"An <xref:System.Array> of type <xref:System.Uri> that contains the base addresses for the hosted service."}]},{"pos":[9590,9685],"content":"<ph id=\"ph1\">&lt;code&gt;singletonInstance&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>singletonInstance</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10136,10287],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ServiceHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the type of service and its base addresses specified.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceHost\"></xref> class with the type of service and its base addresses specified."},{"pos":[10299,10707],"content":"Use this constructor when you have the service type and you can create new instances of it when needed, even when you need a singleton instance. Use the [ServiceHost(Object, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&autoUpgrade=False) constructor instead only when you want the service host to use a specific singleton instance of the service.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this constructor when you have the service type and you can create new instances of it when needed, even when you need a singleton instance.","pos":[0,144]},{"content":"Use the <bpt id=\"p1\">[</bpt>ServiceHost(Object, Uri<ph id=\"ph1\">\\[</ph><ph id=\"ph2\">\\]</ph>)<ept id=\"p1\">](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&amp;autoUpgrade=False)</ept> constructor instead only when you want the service host to use a specific singleton instance of the service.","pos":[145,408],"source":" Use the [ServiceHost(Object, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&autoUpgrade=False) constructor instead only when you want the service host to use a specific singleton instance of the service."}]},{"pos":[11216,11243],"content":"The type of hosted service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of hosted service.","pos":[0,27]}]},{"pos":[11312,11403],"content":"An array of type <xref:System.Uri> that contains the base addresses for the hosted service.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.Uri&gt; that contains the base addresses for the hosted service.","pos":[0,91],"source":"An array of type <xref:System.Uri> that contains the base addresses for the hosted service."}]},{"pos":[11571,11660],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>serviceType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12254,12357],"content":"Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.","pos":[0,103]}]},{"pos":[12852,12910],"content":"The <xref:System.Type> of contract for the endpoint added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of contract for the endpoint added.","pos":[0,58],"source":"The <xref:System.Type> of contract for the endpoint added."}]},{"pos":[12997,13068],"content":"The <xref:System.ServiceModel.Channels.Binding> for the endpoint added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Channels.Binding&gt; for the endpoint added.","pos":[0,71],"source":"The <xref:System.ServiceModel.Channels.Binding> for the endpoint added."}]},{"pos":[13132,13167],"content":"The address for the endpoint added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The address for the endpoint added.","pos":[0,35]}]},{"pos":[13259,13346],"content":"The <xref:System.ServiceModel.Description.ServiceEndpoint> added to the hosted service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; added to the hosted service.","pos":[0,87],"source":"The <xref:System.ServiceModel.Description.ServiceEndpoint> added to the hosted service."}]},{"pos":[13527,13672],"content":"<code>implementedContract</code> or <code>binding</code> or <code>address</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;implementedContract&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binding&lt;/code&gt;</ph> or","pos":[0,59],"source":"<code>implementedContract</code> or <code>binding</code> or "},{"content":"is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[81,145],"source":" is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[14251,14376],"content":"Adds a service endpoint to the hosted service with a specified contract, binding, and URI that contains the endpoint address.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a service endpoint to the hosted service with a specified contract, binding, and URI that contains the endpoint address.","pos":[0,125]}]},{"pos":[14868,14926],"content":"The <xref:System.Type> of contract for the endpoint added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of contract for the endpoint added.","pos":[0,58],"source":"The <xref:System.Type> of contract for the endpoint added."}]},{"pos":[15013,15084],"content":"The <xref:System.ServiceModel.Channels.Binding> for the endpoint added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Channels.Binding&gt; for the endpoint added.","pos":[0,71],"source":"The <xref:System.ServiceModel.Channels.Binding> for the endpoint added."}]},{"pos":[15145,15216],"content":"The <xref:System.Uri> that contains the address for the endpoint added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Uri&gt; that contains the address for the endpoint added.","pos":[0,71],"source":"The <xref:System.Uri> that contains the address for the endpoint added."}]},{"pos":[15308,15395],"content":"The <xref:System.ServiceModel.Description.ServiceEndpoint> added to the hosted service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; added to the hosted service.","pos":[0,87],"source":"The <xref:System.ServiceModel.Description.ServiceEndpoint> added to the hosted service."}]},{"pos":[15576,15721],"content":"<code>implementedContract</code> or <code>binding</code> or <code>address</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;implementedContract&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binding&lt;/code&gt;</ph> or","pos":[0,59],"source":"<code>implementedContract</code> or <code>binding</code> or "},{"content":"is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[81,145],"source":" is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[16349,16491],"content":"Adds a service endpoint to the hosted service with a specified contract, binding, an endpoint address, and a URI on which the service listens.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a service endpoint to the hosted service with a specified contract, binding, an endpoint address, and a URI on which the service listens.","pos":[0,142]}]},{"pos":[16503,16614],"content":"Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.","pos":[0,111]}]},{"pos":[17110,17168],"content":"The <xref:System.Type> of contract for the endpoint added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of contract for the endpoint added.","pos":[0,58],"source":"The <xref:System.Type> of contract for the endpoint added."}]},{"pos":[17255,17326],"content":"The <xref:System.ServiceModel.Channels.Binding> for the endpoint added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Channels.Binding&gt; for the endpoint added.","pos":[0,71],"source":"The <xref:System.ServiceModel.Channels.Binding> for the endpoint added."}]},{"pos":[17390,17427],"content":"The endpoint address for the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The endpoint address for the service.","pos":[0,37]}]},{"pos":[17490,17554],"content":"The <xref:System.Uri> on which the service endpoints can listen.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Uri&gt; on which the service endpoints can listen.","pos":[0,64],"source":"The <xref:System.Uri> on which the service endpoints can listen."}]},{"pos":[17646,17733],"content":"The <xref:System.ServiceModel.Description.ServiceEndpoint> added to the hosted service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; added to the hosted service.","pos":[0,87],"source":"The <xref:System.ServiceModel.Description.ServiceEndpoint> added to the hosted service."}]},{"pos":[17914,18059],"content":"<code>implementedContract</code> or <code>binding</code> or <code>address</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;implementedContract&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binding&lt;/code&gt;</ph> or","pos":[0,59],"source":"<code>implementedContract</code> or <code>binding</code> or "},{"content":"is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[81,145],"source":" is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[18672,18835],"content":"Adds a service endpoint to the hosted service with a specified contract, binding, a URI that contains the endpoint address, and a URI on which the service listens.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a service endpoint to the hosted service with a specified contract, binding, a URI that contains the endpoint address, and a URI on which the service listens.","pos":[0,163]}]},{"pos":[18847,18958],"content":"Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.","pos":[0,111]}]},{"pos":[19451,19509],"content":"The <xref:System.Type> of contract for the endpoint added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of contract for the endpoint added.","pos":[0,58],"source":"The <xref:System.Type> of contract for the endpoint added."}]},{"pos":[19596,19667],"content":"The <xref:System.ServiceModel.Channels.Binding> for the endpoint added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Channels.Binding&gt; for the endpoint added.","pos":[0,71],"source":"The <xref:System.ServiceModel.Channels.Binding> for the endpoint added."}]},{"pos":[19728,19799],"content":"The <xref:System.Uri> that contains the address for the endpoint added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Uri&gt; that contains the address for the endpoint added.","pos":[0,71],"source":"The <xref:System.Uri> that contains the address for the endpoint added."}]},{"pos":[19862,19926],"content":"The <xref:System.Uri> on which the service endpoints can listen.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Uri&gt; on which the service endpoints can listen.","pos":[0,64],"source":"The <xref:System.Uri> on which the service endpoints can listen."}]},{"pos":[20018,20105],"content":"The <xref:System.ServiceModel.Description.ServiceEndpoint> added to the hosted service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt; added to the hosted service.","pos":[0,87],"source":"The <xref:System.ServiceModel.Description.ServiceEndpoint> added to the hosted service."}]},{"pos":[20286,20431],"content":"<code>implementedContract</code> or <code>binding</code> or <code>address</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;implementedContract&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binding&lt;/code&gt;</ph> or","pos":[0,59],"source":"<code>implementedContract</code> or <code>binding</code> or "},{"content":"is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[81,145],"source":" is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[20542,20613],"content":"The contracts are not initialized or the contract keys cannot be found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contracts are not initialized or the contract keys cannot be found.","pos":[0,71]}]},{"pos":[21022,21128],"content":"Loads the service description from the configuration file and applies it to the runtime being constructed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Loads the service description from the configuration file and applies it to the runtime being constructed.","pos":[0,106]}]},{"pos":[22035,22079],"content":"Creates a description of the service hosted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a description of the service hosted.","pos":[0,44]}]},{"pos":[22091,22444],"content":"This method is used to construct contract descriptions from customized programming models. Override the corresponding base class method, <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>, to implement the customized model.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is used to construct contract descriptions from customized programming models. Override the corresponding base class method, <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>, to implement the customized model.","pos":[0,353],"nodes":[{"content":"This method is used to construct contract descriptions from customized programming models.","pos":[0,90]},{"content":"Override the corresponding base class method, &lt;xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29&gt;, to implement the customized model.","pos":[91,353],"source":" Override the corresponding base class method, <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>, to implement the customized model."}]}]},{"pos":[22867,23116],"content":"The &lt;xref:System.Collections.Generic.IDictionary%602&gt; with key pairs of type (<xref:System.String>, <xref:System.ServiceModel.Description.ContractDescription>) that contains the keyed-contracts of the hosted service that have been implemented.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id=\"ph2\">&amp;gt;</ph> with key pairs of type (&lt;xref:System.String&gt;, &lt;xref:System.ServiceModel.Description.ContractDescription&gt;) that contains the keyed-contracts of the hosted service that have been implemented.","pos":[0,249],"source":"The &lt;xref:System.Collections.Generic.IDictionary%602&gt; with key pairs of type (<xref:System.String>, <xref:System.ServiceModel.Description.ContractDescription>) that contains the keyed-contracts of the hosted service that have been implemented."}]},{"pos":[23211,23307],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.ServiceDescription\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the hosted service.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ServiceModel.Description.ServiceDescription\"></xref> of the hosted service."},{"pos":[23495,23586],"content":"The type of service hosted is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The type of service hosted is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[24223,24322],"content":"Initializes a description of the service hosted based on its instance and specified base addresses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a description of the service hosted based on its instance and specified base addresses.","pos":[0,99]}]},{"pos":[24560,24595],"content":"The instance of the hosted service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The instance of the hosted service.","pos":[0,35]}]},{"pos":[24696,24822],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.UriSchemeKeyedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the base addresses for the hosted service.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.UriSchemeKeyedCollection\"></xref> that contains the base addresses for the hosted service."},{"pos":[25006,25101],"content":"<ph id=\"ph1\">&lt;code&gt;singletonInstance&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>singletonInstance</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[25728,25823],"content":"Initializes a description of the service hosted based on its type and specified base addresses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a description of the service hosted based on its type and specified base addresses.","pos":[0,95]}]},{"pos":[26045,26086],"content":"The <xref:System.Type> of service hosted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of service hosted.","pos":[0,41],"source":"The <xref:System.Type> of service hosted."}]},{"pos":[26187,26313],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.UriSchemeKeyedCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the base addresses for the hosted service.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.UriSchemeKeyedCollection\"></xref> that contains the base addresses for the hosted service."},{"pos":[26497,26586],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>serviceType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[26945,27031],"content":"Disposes of disposable services that are being hosted when the service host is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Disposes of disposable services that are being hosted when the service host is closed.","pos":[0,86]}]},{"pos":[27044,27660],"content":"When overriding the OnClosed method you must ensure the base.OnClosed method is called, even if an exception occurs. The following code illustrates how to do this.      ```   protected override void OnClosed()   {       try       {           if (FaultFlagService.faultFlag == ThrowDuring.OnClosed)           {               FaultFlagService.faultFlag = ThrowDuring.Never;               throw new ServiceActivationException(\"Faulting the service because FaultFlagService.faultFlag = ThrowDuring.OnClosed\");           }       }       finally       {           base.OnClosed();       }   }      ```","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When overriding the OnClosed method you must ensure the base.OnClosed method is called, even if an exception occurs.","pos":[0,116]},{"content":"The following code illustrates how to do this.","pos":[117,163]}]},{"pos":[28211,28261],"content":"Gets the singleton instance of the hosted service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the singleton instance of the hosted service.","pos":[0,50]}]},{"pos":[28273,28569],"content":"Use the <bpt id=\"p1\">[</bpt>ServiceHost(Object, Uri<ph id=\"ph1\">\\[</ph><ph id=\"ph2\">\\]</ph>)<ept id=\"p1\">](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&amp;autoUpgrade=False)</ept> constructor to initialize a singleton instance of the service to be hosted when you want to control the instance of the service that is used.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Use the [ServiceHost(Object, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&autoUpgrade=False) constructor to initialize a singleton instance of the service to be hosted when you want to control the instance of the service that is used."},{"pos":[28691,28717],"content":"The hosted service object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hosted service object.","pos":[0,26]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.ServiceHost\n  id: ServiceHost\n  children:\n  - System.ServiceModel.ServiceHost.#ctor\n  - System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])\n  - System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  - System.ServiceModel.ServiceHost.ApplyConfiguration\n  - System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)\n  - System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)\n  - System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)\n  - System.ServiceModel.ServiceHost.OnClosed\n  - System.ServiceModel.ServiceHost.SingletonInstance\n  langs:\n  - csharp\n  name: ServiceHost\n  nameWithType: ServiceHost\n  fullName: System.ServiceModel.ServiceHost\n  type: Class\n  summary: Provides a host for services.\n  remarks: \"Implements the host used by the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] service model programming model.  \\n  \\n Use the ServiceHost class to configure and expose a service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service. Both IIS and WAS interact with a ServiceHost object on your behalf.  \\n  \\n To expose a service for use by callers, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] requires a complete service description (represented by the <xref:System.ServiceModel.Description.ServiceDescription> class). The ServiceHost class creates a <xref:System.ServiceModel.Description.ServiceDescription> from the service type and configuration information and then uses that description to create <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects for each endpoint in the description.  \\n  \\n Use a ServiceHost object to load a service, configure endpoints, apply security settings, and start listeners to handle incoming requests.\"\n  example:\n  - >-\n    [!code-cs[S_SelfHost#1](~/add/codesnippet/csharp/t-system.servicemodel.se_0_1.cs)]\n     [!code-vb[S_SelfHost#1](~/add/codesnippet/visualbasic/t-system.servicemodel.se_0_1.vb)]\n  syntax:\n    content: 'public class ServiceHost : System.ServiceModel.ServiceHostBase'\n  inheritance:\n  - System.ServiceModel.Channels.CommunicationObject\n  - System.ServiceModel.ServiceHostBase\n  implements: []\n  inheritedMembers:\n  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)\n  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  - System.ServiceModel.ServiceHostBase.Authentication\n  - System.ServiceModel.ServiceHostBase.Authorization\n  - System.ServiceModel.ServiceHostBase.BaseAddresses\n  - System.ServiceModel.ServiceHostBase.ChannelDispatchers\n  - System.ServiceModel.ServiceHostBase.CloseTimeout\n  - System.ServiceModel.ServiceHostBase.Credentials\n  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout\n  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout\n  - System.ServiceModel.ServiceHostBase.Description\n  - System.ServiceModel.ServiceHostBase.Extensions\n  - System.ServiceModel.ServiceHostBase.ImplementedContracts\n  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)\n  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)\n  - System.ServiceModel.ServiceHostBase.InitializeRuntime\n  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)\n  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit\n  - System.ServiceModel.ServiceHostBase.OnAbort\n  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)\n  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)\n  - System.ServiceModel.ServiceHostBase.OnOpened\n  - System.ServiceModel.ServiceHostBase.OpenTimeout\n  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters\n  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)\n  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose\n  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived\n  platform:\n  - net462\n- uid: System.ServiceModel.ServiceHost.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: ServiceHost()\n  nameWithType: ServiceHost.ServiceHost()\n  fullName: System.ServiceModel.ServiceHost.ServiceHost()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceHost\"></xref> class.\n  remarks: There are two constructors used to create an instance of the <xref:System.ServiceModel.ServiceHost> class. Use the [ServiceHost(Type, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])?qualifyHint=False&autoUpgrade=False) constructor which takes the service type as an input parameter, most of the time. The host can use this to create new services as needed. Use the [ServiceHost(Object, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&autoUpgrade=False) constructor instead only when you want the service host to use a specific singleton instance of the service.\n  syntax:\n    content: protected ServiceHost ();\n    parameters: []\n  overload: System.ServiceModel.ServiceHost.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])\n  id: '#ctor(System.Object,System.Uri[])'\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: ServiceHost(Object,Uri[])\n  nameWithType: ServiceHost.ServiceHost(Object,Uri[])\n  fullName: System.ServiceModel.ServiceHost.ServiceHost(Object,Uri[])\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceHost\"></xref> class with the instance of the service and its base addresses specified.\n  remarks: \"Use this constructor as an alternative to implementing a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName> when you want to provide a specific object instance for use by a singleton service. You may want to use this overload when your service implementation type is difficult to construct (for example, if it does not implement a default public constructor that has no parameters).  \\n  \\n Note that when an object is provided to this overload, some features related to the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] instancing behavior work differently. For example, calling <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=fullName> have no effect when a well-known object instance is provided using this constructor overload. Similarly, any other instance release mechanism is ignored. The <xref:System.ServiceModel.ServiceHost> always behaves as if the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=fullName> property is set to <xref:System.ServiceModel.ReleaseInstanceMode?displayProperty=fullName> for all operations.\"\n  example:\n  - >-\n    [!code-cs[S_UEServiceHost2#1](~/add/codesnippet/csharp/m-system.servicemodel.se_2_1.cs)]\n     [!code-vb[S_UEServiceHost2#1](~/add/codesnippet/visualbasic/m-system.servicemodel.se_2_1.vb)]\n  syntax:\n    content: public ServiceHost (object singletonInstance, Uri[] baseAddresses);\n    parameters:\n    - id: singletonInstance\n      type: System.Object\n      description: The instance of the hosted service.\n    - id: baseAddresses\n      type: System.Uri[]\n      description: An <xref:System.Array> of type <xref:System.Uri> that contains the base addresses for the hosted service.\n  overload: System.ServiceModel.ServiceHost.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>singletonInstance</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])\n  id: '#ctor(System.Type,System.Uri[])'\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: ServiceHost(Type,Uri[])\n  nameWithType: ServiceHost.ServiceHost(Type,Uri[])\n  fullName: System.ServiceModel.ServiceHost.ServiceHost(Type,Uri[])\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceHost\"></xref> class with the type of service and its base addresses specified.\n  remarks: Use this constructor when you have the service type and you can create new instances of it when needed, even when you need a singleton instance. Use the [ServiceHost(Object, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&autoUpgrade=False) constructor instead only when you want the service host to use a specific singleton instance of the service.\n  example:\n  - \"This sample illustrates how to use the <xref:System.ServiceModel.ServiceHost> class to host a Windows Communication Foundation service:  \\n  \\n [!code-vb[S_UEServiceHost#1](~/add/codesnippet/visualbasic/m-system.servicemodel.se_1_1.vb)]\\n [!code-cs[S_UEServiceHost#1](~/add/codesnippet/csharp/m-system.servicemodel.se_1_1.cs)]\"\n  syntax:\n    content: public ServiceHost (Type serviceType, Uri[] baseAddresses);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of hosted service.\n    - id: baseAddresses\n      type: System.Uri[]\n      description: An array of type <xref:System.Uri> that contains the base addresses for the hosted service.\n  overload: System.ServiceModel.ServiceHost.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: AddServiceEndpoint(Type,Binding,String)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,String)\n  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.\n  remarks: ''\n  example:\n  - >-\n    [!code-vb[S_UEServiceHost#3](~/add/codesnippet/visualbasic/70b66628-f847-4088-a4ea-_1.vb)]\n     [!code-cs[S_UEServiceHost#3](~/add/codesnippet/csharp/70b66628-f847-4088-a4ea-_1.cs)]\n  syntax:\n    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address);\n    parameters:\n    - id: implementedContract\n      type: System.Type\n      description: The <xref:System.Type> of contract for the endpoint added.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref:System.ServiceModel.Channels.Binding> for the endpoint added.\n    - id: address\n      type: System.String\n      description: The address for the endpoint added.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The <xref:System.ServiceModel.Description.ServiceEndpoint> added to the hosted service.\n  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>implementedContract</code> or <code>binding</code> or <code>address</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)\n  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: AddServiceEndpoint(Type,Binding,Uri)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,Uri)\n  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Adds a service endpoint to the hosted service with a specified contract, binding, and URI that contains the endpoint address.\n  remarks: ''\n  example:\n  - >-\n    [!code-vb[S_UEServiceHost#4](~/add/codesnippet/visualbasic/8e2cc351-67c1-445b-afad-_1.vb)]\n     [!code-cs[S_UEServiceHost#4](~/add/codesnippet/csharp/8e2cc351-67c1-445b-afad-_1.cs)]\n  syntax:\n    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);\n    parameters:\n    - id: implementedContract\n      type: System.Type\n      description: The <xref:System.Type> of contract for the endpoint added.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref:System.ServiceModel.Channels.Binding> for the endpoint added.\n    - id: address\n      type: System.Uri\n      description: The <xref:System.Uri> that contains the address for the endpoint added.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The <xref:System.ServiceModel.Description.ServiceEndpoint> added to the hosted service.\n  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>implementedContract</code> or <code>binding</code> or <code>address</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: AddServiceEndpoint(Type,Binding,String,Uri)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)\n  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Adds a service endpoint to the hosted service with a specified contract, binding, an endpoint address, and a URI on which the service listens.\n  remarks: Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.\n  example:\n  - >-\n    [!code-vb[S_UEServiceHost#5](~/add/codesnippet/visualbasic/53ef03a0-4eb7-4902-b7b1-_1.vb)]\n     [!code-cs[S_UEServiceHost#5](~/add/codesnippet/csharp/53ef03a0-4eb7-4902-b7b1-_1.cs)]\n  syntax:\n    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);\n    parameters:\n    - id: implementedContract\n      type: System.Type\n      description: The <xref:System.Type> of contract for the endpoint added.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref:System.ServiceModel.Channels.Binding> for the endpoint added.\n    - id: address\n      type: System.String\n      description: The endpoint address for the service.\n    - id: listenUri\n      type: System.Uri\n      description: The <xref:System.Uri> on which the service endpoints can listen.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The <xref:System.ServiceModel.Description.ServiceEndpoint> added to the hosted service.\n  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>implementedContract</code> or <code>binding</code> or <code>address</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: AddServiceEndpoint(Type,Binding,Uri,Uri)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)\n  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Adds a service endpoint to the hosted service with a specified contract, binding, a URI that contains the endpoint address, and a URI on which the service listens.\n  remarks: Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.\n  example:\n  - >-\n    [!code-vb[S_UEServiceHost#6](~/add/codesnippet/visualbasic/681d17d9-9f10-449e-a378-_1.vb)]\n     [!code-cs[S_UEServiceHost#6](~/add/codesnippet/csharp/681d17d9-9f10-449e-a378-_1.cs)]\n  syntax:\n    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);\n    parameters:\n    - id: implementedContract\n      type: System.Type\n      description: The <xref:System.Type> of contract for the endpoint added.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref:System.ServiceModel.Channels.Binding> for the endpoint added.\n    - id: address\n      type: System.Uri\n      description: The <xref:System.Uri> that contains the address for the endpoint added.\n    - id: listenUri\n      type: System.Uri\n      description: The <xref:System.Uri> on which the service endpoints can listen.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The <xref:System.ServiceModel.Description.ServiceEndpoint> added to the hosted service.\n  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>implementedContract</code> or <code>binding</code> or <code>address</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The contracts are not initialized or the contract keys cannot be found.\n  platform:\n  - net462\n- uid: System.ServiceModel.ServiceHost.ApplyConfiguration\n  id: ApplyConfiguration\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: ApplyConfiguration()\n  nameWithType: ServiceHost.ApplyConfiguration()\n  fullName: System.ServiceModel.ServiceHost.ApplyConfiguration()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Loads the service description from the configuration file and applies it to the runtime being constructed.\n  syntax:\n    content: protected override void ApplyConfiguration ();\n    parameters: []\n  overload: System.ServiceModel.ServiceHost.ApplyConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)\n  id: CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: CreateDescription(IDictionary<String,ContractDescription>)\n  nameWithType: ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)\n  fullName: System.ServiceModel.ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a description of the service hosted.\n  remarks: This method is used to construct contract descriptions from customized programming models. Override the corresponding base class method, <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>, to implement the customized model.\n  syntax:\n    content: protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> implementedContracts);\n    parameters:\n    - id: implementedContracts\n      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}\n      description: The &lt;xref:System.Collections.Generic.IDictionary%602&gt; with key pairs of type (<xref:System.String>, <xref:System.ServiceModel.Description.ContractDescription>) that contains the keyed-contracts of the hosted service that have been implemented.\n    return:\n      type: System.ServiceModel.Description.ServiceDescription\n      description: A <xref href=\"System.ServiceModel.Description.ServiceDescription\"></xref> of the hosted service.\n  overload: System.ServiceModel.ServiceHost.CreateDescription*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The type of service hosted is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)\n  id: InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: InitializeDescription(Object,UriSchemeKeyedCollection)\n  nameWithType: ServiceHost.InitializeDescription(Object,UriSchemeKeyedCollection)\n  fullName: System.ServiceModel.ServiceHost.InitializeDescription(Object,UriSchemeKeyedCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a description of the service hosted based on its instance and specified base addresses.\n  syntax:\n    content: protected void InitializeDescription (object singletonInstance, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);\n    parameters:\n    - id: singletonInstance\n      type: System.Object\n      description: The instance of the hosted service.\n    - id: baseAddresses\n      type: System.ServiceModel.UriSchemeKeyedCollection\n      description: The <xref href=\"System.ServiceModel.UriSchemeKeyedCollection\"></xref> that contains the base addresses for the hosted service.\n  overload: System.ServiceModel.ServiceHost.InitializeDescription*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>singletonInstance</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)\n  id: InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: InitializeDescription(Type,UriSchemeKeyedCollection)\n  nameWithType: ServiceHost.InitializeDescription(Type,UriSchemeKeyedCollection)\n  fullName: System.ServiceModel.ServiceHost.InitializeDescription(Type,UriSchemeKeyedCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a description of the service hosted based on its type and specified base addresses.\n  syntax:\n    content: protected void InitializeDescription (Type serviceType, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The <xref:System.Type> of service hosted.\n    - id: baseAddresses\n      type: System.ServiceModel.UriSchemeKeyedCollection\n      description: The <xref href=\"System.ServiceModel.UriSchemeKeyedCollection\"></xref> that contains the base addresses for the hosted service.\n  overload: System.ServiceModel.ServiceHost.InitializeDescription*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.ServiceHost.OnClosed\n  id: OnClosed\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: OnClosed()\n  nameWithType: ServiceHost.OnClosed()\n  fullName: System.ServiceModel.ServiceHost.OnClosed()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Disposes of disposable services that are being hosted when the service host is closed.\n  remarks: \"When overriding the OnClosed method you must ensure the base.OnClosed method is called, even if an exception occurs. The following code illustrates how to do this.  \\n  \\n```  \\nprotected override void OnClosed()  \\n{  \\n    try  \\n    {  \\n        if (FaultFlagService.faultFlag == ThrowDuring.OnClosed)  \\n        {  \\n            FaultFlagService.faultFlag = ThrowDuring.Never;  \\n            throw new ServiceActivationException(\\\"Faulting the service because FaultFlagService.faultFlag = ThrowDuring.OnClosed\\\");  \\n        }  \\n    }  \\n    finally  \\n    {  \\n        base.OnClosed();  \\n    }  \\n}  \\n  \\n```\"\n  syntax:\n    content: protected override void OnClosed ();\n    parameters: []\n  overload: System.ServiceModel.ServiceHost.OnClosed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ServiceHost.SingletonInstance\n  id: SingletonInstance\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: SingletonInstance\n  nameWithType: ServiceHost.SingletonInstance\n  fullName: System.ServiceModel.ServiceHost.SingletonInstance\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the singleton instance of the hosted service.\n  remarks: Use the [ServiceHost(Object, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&autoUpgrade=False) constructor to initialize a singleton instance of the service to be hosted when you want to control the instance of the service that is used.\n  syntax:\n    content: public object SingletonInstance { get; }\n    return:\n      type: System.Object\n      description: The hosted service object.\n  overload: System.ServiceModel.ServiceHost.SingletonInstance*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: System.ServiceModel.ServiceHostBase\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ServiceModel.ServiceHost.#ctor\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: ServiceHost()\n  nameWithType: ServiceHost.ServiceHost()\n  fullName: System.ServiceModel.ServiceHost.ServiceHost()\n- uid: System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: ServiceHost(Object,Uri[])\n  nameWithType: ServiceHost.ServiceHost(Object,Uri[])\n  fullName: System.ServiceModel.ServiceHost.ServiceHost(Object,Uri[])\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Uri[]\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri[]\n  spec.csharp:\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: Uri[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: ServiceHost(Type,Uri[])\n  nameWithType: ServiceHost.ServiceHost(Type,Uri[])\n  fullName: System.ServiceModel.ServiceHost.ServiceHost(Type,Uri[])\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: AddServiceEndpoint(Type,Binding,String)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,String)\n  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,String)\n- uid: System.ServiceModel.Description.ServiceEndpoint\n  parent: System.ServiceModel.Description\n  isExternal: true\n  name: ServiceEndpoint\n  nameWithType: ServiceEndpoint\n  fullName: System.ServiceModel.Description.ServiceEndpoint\n- uid: System.ServiceModel.Channels.Binding\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: Binding\n  nameWithType: Binding\n  fullName: System.ServiceModel.Channels.Binding\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: AddServiceEndpoint(Type,Binding,Uri)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,Uri)\n  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,Uri)\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: AddServiceEndpoint(Type,Binding,String,Uri)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)\n  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: AddServiceEndpoint(Type,Binding,Uri,Uri)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)\n  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)\n- uid: System.ServiceModel.ServiceHost.ApplyConfiguration\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: ApplyConfiguration()\n  nameWithType: ServiceHost.ApplyConfiguration()\n  fullName: System.ServiceModel.ServiceHost.ApplyConfiguration()\n- uid: System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: CreateDescription(IDictionary<String,ContractDescription>)\n  nameWithType: ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)\n  fullName: System.ServiceModel.ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)\n- uid: System.ServiceModel.Description.ServiceDescription\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: ServiceDescription\n  nameWithType: ServiceDescription\n  fullName: System.ServiceModel.Description.ServiceDescription\n- uid: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<String,ContractDescription>\n  nameWithType: IDictionary<String,ContractDescription>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.ServiceModel.Description.ContractDescription>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.String,System.ServiceModel.Description.ContractDescription>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.ServiceModel.Description.ContractDescription\n    name: ContractDescription\n    nameWithType: ContractDescription\n    fullName: ContractDescription\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: InitializeDescription(Object,UriSchemeKeyedCollection)\n  nameWithType: ServiceHost.InitializeDescription(Object,UriSchemeKeyedCollection)\n  fullName: System.ServiceModel.ServiceHost.InitializeDescription(Object,UriSchemeKeyedCollection)\n- uid: System.ServiceModel.UriSchemeKeyedCollection\n  parent: System.ServiceModel\n  isExternal: false\n  name: UriSchemeKeyedCollection\n  nameWithType: UriSchemeKeyedCollection\n  fullName: System.ServiceModel.UriSchemeKeyedCollection\n- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: InitializeDescription(Type,UriSchemeKeyedCollection)\n  nameWithType: ServiceHost.InitializeDescription(Type,UriSchemeKeyedCollection)\n  fullName: System.ServiceModel.ServiceHost.InitializeDescription(Type,UriSchemeKeyedCollection)\n- uid: System.ServiceModel.ServiceHost.OnClosed\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: OnClosed()\n  nameWithType: ServiceHost.OnClosed()\n  fullName: System.ServiceModel.ServiceHost.OnClosed()\n- uid: System.ServiceModel.ServiceHost.SingletonInstance\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: SingletonInstance\n  nameWithType: ServiceHost.SingletonInstance\n  fullName: System.ServiceModel.ServiceHost.SingletonInstance\n- uid: System.ServiceModel.ServiceHost.#ctor*\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: ServiceHost\n  nameWithType: ServiceHost.ServiceHost\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint*\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: AddServiceEndpoint\n  nameWithType: ServiceHost.AddServiceEndpoint\n- uid: System.ServiceModel.ServiceHost.ApplyConfiguration*\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: ApplyConfiguration\n  nameWithType: ServiceHost.ApplyConfiguration\n- uid: System.ServiceModel.ServiceHost.CreateDescription*\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: CreateDescription\n  nameWithType: ServiceHost.CreateDescription\n- uid: System.ServiceModel.ServiceHost.InitializeDescription*\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: InitializeDescription\n  nameWithType: ServiceHost.InitializeDescription\n- uid: System.ServiceModel.ServiceHost.OnClosed*\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: OnClosed\n  nameWithType: ServiceHost.OnClosed\n- uid: System.ServiceModel.ServiceHost.SingletonInstance*\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: SingletonInstance\n  nameWithType: ServiceHost.SingletonInstance\n"}