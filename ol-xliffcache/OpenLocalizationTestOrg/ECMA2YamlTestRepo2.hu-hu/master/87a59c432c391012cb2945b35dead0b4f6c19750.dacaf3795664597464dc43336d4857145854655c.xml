{"nodes":[{"pos":[873,925],"content":"Accesses the cryptography configuration information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Accesses the cryptography configuration information.","pos":[0,52]}]},{"pos":[938,5302],"content":"The following table shows the simple names recognized by this class and the default algorithm implementations to which they map. Alternatively, you can map other implementations to these names, as described in [Mapping Algorithm Names to Cryptography Classes](~/add/includes/ajax-current-ext-md.md).      |Simple name|Algorithm implementation|   |-----------------|------------------------------|   |3DES, Triple DES, TripleDES, System.Security.Cryptography.TripleDES|<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider>|   |AES, System.Security.Cryptography.AesCryptoServiceProvider|<xref:System.Security.Cryptography.AesCryptoServiceProvider>|   |AesManaged, System.Security.Cryptography.AesManaged|<xref:System.Security.Cryptography.AesManaged>|   |System.Security.Cryptography.AsymmetricAlgorithm|<xref:System.Security.Cryptography.RSACryptoServiceProvider>|   |DES, System.Security.Cryptography.DES|<xref:System.Security.Cryptography.DESCryptoServiceProvider>|   |DSA, System.Security.Cryptography.DSA|<xref:System.Security.Cryptography.DSACryptoServiceProvider>|   |ECDH, ECDiffieHellman, ECDiffieHellmanCng, System.Security.Cryptography.ECDiffieHellmanCng|<xref:System.Security.Cryptography.ECDiffieHellmanCng>|   |ECDsa, ECDsaCng, System.Security.Cryptography.ECDsaCng|<xref:System.Security.Cryptography.ECDsaCng>|   |System.Security.Cryptography.HashAlgorithm|<xref:System.Security.Cryptography.SHA1CryptoServiceProvider>|   |HMAC, System.Security.Cryptography.HMAC|<xref:System.Security.Cryptography.HMACSHA1>|   |HMACMD5, System.Security.Cryptography.HMACMD5|<xref:System.Security.Cryptography.HMACMD5>|   |HMACRIPEMD160, System.Security.Cryptography.HMACRIPEMD160|<xref:System.Security.Cryptography.HMACRIPEMD160>|   |HMACSHA1, System.Security.Cryptography.HMACSHA1|<xref:System.Security.Cryptography.HMACSHA1>|   |HMACSHA256, System.Security.Cryptography.HMACSHA256|<xref:System.Security.Cryptography.HMACSHA256>|   |HMACSHA384, System.Security.Cryptography.HMACSHA384|<xref:System.Security.Cryptography.HMACSHA384>|   |HMACSHA512, System.Security.Cryptography.HMACSHA512|<xref:System.Security.Cryptography.HMACSHA512>|   |System.Security.Cryptography.KeyedHashAlgorithm|<xref:System.Security.Cryptography.HMACSHA1>|   |MACTripleDES, System.Security.Cryptography.MACTripleDES|<xref:System.Security.Cryptography.MACTripleDES>|   |MD5, System.Security.Cryptography.MD5|<xref:System.Security.Cryptography.MD5CryptoServiceProvider>|   |System.Security.Cryptography.MD5Cng|<xref:System.Security.Cryptography.MD5Cng>|   |RandomNumberGenerator|<xref:System.Security.Cryptography.RNGCryptoServiceProvider>|   |RC2, System.Security.Cryptography.RC2|<xref:System.Security.Cryptography.RC2CryptoServiceProvider>|   |Rijndael, System.Security.Cryptography.Rijndael|<xref:System.Security.Cryptography.RijndaelManaged>|   |RIPEMD160, RIPEMD-160, System.Security.Cryptography.RIPEMD160Managed|<xref:System.Security.Cryptography.RIPEMD160Managed>|   |RSA, System.Security.Cryptography.RSA|<xref:System.Security.Cryptography.RSACryptoServiceProvider>|   |SHA, SHA1, System.Security.Cryptography.SHA1|<xref:System.Security.Cryptography.SHA1CryptoServiceProvider>|   |System.Security.Cryptography.SHA1Cng|<xref:System.Security.Cryptography.SHA1Cng>|   |SHA256, SHA-256, System.Security.Cryptography.SHA256|<xref:System.Security.Cryptography.SHA256Managed>|   |System.Security.Cryptography.SHA256Cng|<xref:System.Security.Cryptography.SHA256Cng>|   |System.Security.Cryptography.SHA256CryptoServiceProvider|<xref:System.Security.Cryptography.SHA256CryptoServiceProvider>|   |SHA384, SHA-384, System.Security.Cryptography.SHA384|<xref:System.Security.Cryptography.SHA384Managed>|   |System.Security.Cryptography.SHA384Cng|<xref:System.Security.Cryptography.SHA384Cng>|   |System.Security.Cryptography.SHA384CryptoServiceProvider|<xref:System.Security.Cryptography.SHA384CryptoServiceProvider>|   |SHA512, SHA-512, System.Security.Cryptography.SHA512|<xref:System.Security.Cryptography.SHA512Managed>|   |System.Security.Cryptography.SHA512Cng|<xref:System.Security.Cryptography.SHA512Cng>|   |System.Security.Cryptography.SHA512CryptoServiceProvider|<xref:System.Security.Cryptography.SHA512CryptoServiceProvider>|   |System.Security.Cryptography.SymmetricAlgorithm|<xref:System.Security.Cryptography.RijndaelManaged>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following table shows the simple names recognized by this class and the default algorithm implementations to which they map.","pos":[0,128]},{"content":"Alternatively, you can map other implementations to these names, as described in <bpt id=\"p1\">[</bpt>Mapping Algorithm Names to Cryptography Classes<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[129,299],"source":" Alternatively, you can map other implementations to these names, as described in [Mapping Algorithm Names to Cryptography Classes](~/add/includes/ajax-current-ext-md.md)."},{"content":"|Simple name|Algorithm implementation|   |-----------------|------------------------------|   |3DES, Triple DES, TripleDES, System.Security.Cryptography.TripleDES|&lt;xref:System.Security.Cryptography.TripleDESCryptoServiceProvider&gt;|   |AES, System.Security.Cryptography.AesCryptoServiceProvider|&lt;xref:System.Security.Cryptography.AesCryptoServiceProvider&gt;|   |AesManaged, System.Security.Cryptography.AesManaged|&lt;xref:System.Security.Cryptography.AesManaged&gt;|   |System.Security.Cryptography.AsymmetricAlgorithm|&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;|   |DES, System.Security.Cryptography.DES|&lt;xref:System.Security.Cryptography.DESCryptoServiceProvider&gt;|   |DSA, System.Security.Cryptography.DSA|&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;|   |ECDH, ECDiffieHellman, ECDiffieHellmanCng, System.Security.Cryptography.ECDiffieHellmanCng|&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;|   |ECDsa, ECDsaCng, System.Security.Cryptography.ECDsaCng|&lt;xref:System.Security.Cryptography.ECDsaCng&gt;|   |System.Security.Cryptography.HashAlgorithm|&lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;|   |HMAC, System.Security.Cryptography.HMAC|&lt;xref:System.Security.Cryptography.HMACSHA1&gt;|   |HMACMD5, System.Security.Cryptography.HMACMD5|&lt;xref:System.Security.Cryptography.HMACMD5&gt;|   |HMACRIPEMD160, System.Security.Cryptography.HMACRIPEMD160|&lt;xref:System.Security.Cryptography.HMACRIPEMD160&gt;|   |HMACSHA1, System.Security.Cryptography.HMACSHA1|&lt;xref:System.Security.Cryptography.HMACSHA1&gt;|   |HMACSHA256, System.Security.Cryptography.HMACSHA256|&lt;xref:System.Security.Cryptography.HMACSHA256&gt;|   |HMACSHA384, System.Security.Cryptography.HMACSHA384|&lt;xref:System.Security.Cryptography.HMACSHA384&gt;|   |HMACSHA512, System.Security.Cryptography.HMACSHA512|&lt;xref:System.Security.Cryptography.HMACSHA512&gt;|   |System.Security.Cryptography.KeyedHashAlgorithm|&lt;xref:System.Security.Cryptography.HMACSHA1&gt;|   |MACTripleDES, System.Security.Cryptography.MACTripleDES|&lt;xref:System.Security.Cryptography.MACTripleDES&gt;|   |MD5, System.Security.Cryptography.MD5|&lt;xref:System.Security.Cryptography.MD5CryptoServiceProvider&gt;|   |System.Security.Cryptography.MD5Cng|&lt;xref:System.Security.Cryptography.MD5Cng&gt;|   |RandomNumberGenerator|&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;|   |RC2, System.Security.Cryptography.RC2|&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;|   |Rijndael, System.Security.Cryptography.Rijndael|&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;|   |RIPEMD160, RIPEMD-160, System.Security.Cryptography.RIPEMD160Managed|&lt;xref:System.Security.Cryptography.RIPEMD160Managed&gt;|   |RSA, System.Security.Cryptography.RSA|&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;|   |SHA, SHA1, System.Security.Cryptography.SHA1|&lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;|   |System.Security.Cryptography.SHA1Cng|&lt;xref:System.Security.Cryptography.SHA1Cng&gt;|   |SHA256, SHA-256, System.Security.Cryptography.SHA256|&lt;xref:System.Security.Cryptography.SHA256Managed&gt;|   |System.Security.Cryptography.SHA256Cng|&lt;xref:System.Security.Cryptography.SHA256Cng&gt;|   |System.Security.Cryptography.SHA256CryptoServiceProvider|&lt;xref:System.Security.Cryptography.SHA256CryptoServiceProvider&gt;|   |SHA384, SHA-384, System.Security.Cryptography.SHA384|&lt;xref:System.Security.Cryptography.SHA384Managed&gt;|   |System.Security.Cryptography.SHA384Cng|&lt;xref:System.Security.Cryptography.SHA384Cng&gt;|   |System.Security.Cryptography.SHA384CryptoServiceProvider|&lt;xref:System.Security.Cryptography.SHA384CryptoServiceProvider&gt;|   |SHA512, SHA-512, System.Security.Cryptography.SHA512|&lt;xref:System.Security.Cryptography.SHA512Managed&gt;|   |System.Security.Cryptography.SHA512Cng|&lt;xref:System.Security.Cryptography.SHA512Cng&gt;|   |System.Security.Cryptography.SHA512CryptoServiceProvider|&lt;xref:System.Security.Cryptography.SHA512CryptoServiceProvider&gt;|   |System.Security.Cryptography.SymmetricAlgorithm|&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;|","pos":[305,4324],"source":"      |Simple name|Algorithm implementation|   |-----------------|------------------------------|   |3DES, Triple DES, TripleDES, System.Security.Cryptography.TripleDES|<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider>|   |AES, System.Security.Cryptography.AesCryptoServiceProvider|<xref:System.Security.Cryptography.AesCryptoServiceProvider>|   |AesManaged, System.Security.Cryptography.AesManaged|<xref:System.Security.Cryptography.AesManaged>|   |System.Security.Cryptography.AsymmetricAlgorithm|<xref:System.Security.Cryptography.RSACryptoServiceProvider>|   |DES, System.Security.Cryptography.DES|<xref:System.Security.Cryptography.DESCryptoServiceProvider>|   |DSA, System.Security.Cryptography.DSA|<xref:System.Security.Cryptography.DSACryptoServiceProvider>|   |ECDH, ECDiffieHellman, ECDiffieHellmanCng, System.Security.Cryptography.ECDiffieHellmanCng|<xref:System.Security.Cryptography.ECDiffieHellmanCng>|   |ECDsa, ECDsaCng, System.Security.Cryptography.ECDsaCng|<xref:System.Security.Cryptography.ECDsaCng>|   |System.Security.Cryptography.HashAlgorithm|<xref:System.Security.Cryptography.SHA1CryptoServiceProvider>|   |HMAC, System.Security.Cryptography.HMAC|<xref:System.Security.Cryptography.HMACSHA1>|   |HMACMD5, System.Security.Cryptography.HMACMD5|<xref:System.Security.Cryptography.HMACMD5>|   |HMACRIPEMD160, System.Security.Cryptography.HMACRIPEMD160|<xref:System.Security.Cryptography.HMACRIPEMD160>|   |HMACSHA1, System.Security.Cryptography.HMACSHA1|<xref:System.Security.Cryptography.HMACSHA1>|   |HMACSHA256, System.Security.Cryptography.HMACSHA256|<xref:System.Security.Cryptography.HMACSHA256>|   |HMACSHA384, System.Security.Cryptography.HMACSHA384|<xref:System.Security.Cryptography.HMACSHA384>|   |HMACSHA512, System.Security.Cryptography.HMACSHA512|<xref:System.Security.Cryptography.HMACSHA512>|   |System.Security.Cryptography.KeyedHashAlgorithm|<xref:System.Security.Cryptography.HMACSHA1>|   |MACTripleDES, System.Security.Cryptography.MACTripleDES|<xref:System.Security.Cryptography.MACTripleDES>|   |MD5, System.Security.Cryptography.MD5|<xref:System.Security.Cryptography.MD5CryptoServiceProvider>|   |System.Security.Cryptography.MD5Cng|<xref:System.Security.Cryptography.MD5Cng>|   |RandomNumberGenerator|<xref:System.Security.Cryptography.RNGCryptoServiceProvider>|   |RC2, System.Security.Cryptography.RC2|<xref:System.Security.Cryptography.RC2CryptoServiceProvider>|   |Rijndael, System.Security.Cryptography.Rijndael|<xref:System.Security.Cryptography.RijndaelManaged>|   |RIPEMD160, RIPEMD-160, System.Security.Cryptography.RIPEMD160Managed|<xref:System.Security.Cryptography.RIPEMD160Managed>|   |RSA, System.Security.Cryptography.RSA|<xref:System.Security.Cryptography.RSACryptoServiceProvider>|   |SHA, SHA1, System.Security.Cryptography.SHA1|<xref:System.Security.Cryptography.SHA1CryptoServiceProvider>|   |System.Security.Cryptography.SHA1Cng|<xref:System.Security.Cryptography.SHA1Cng>|   |SHA256, SHA-256, System.Security.Cryptography.SHA256|<xref:System.Security.Cryptography.SHA256Managed>|   |System.Security.Cryptography.SHA256Cng|<xref:System.Security.Cryptography.SHA256Cng>|   |System.Security.Cryptography.SHA256CryptoServiceProvider|<xref:System.Security.Cryptography.SHA256CryptoServiceProvider>|   |SHA384, SHA-384, System.Security.Cryptography.SHA384|<xref:System.Security.Cryptography.SHA384Managed>|   |System.Security.Cryptography.SHA384Cng|<xref:System.Security.Cryptography.SHA384Cng>|   |System.Security.Cryptography.SHA384CryptoServiceProvider|<xref:System.Security.Cryptography.SHA384CryptoServiceProvider>|   |SHA512, SHA-512, System.Security.Cryptography.SHA512|<xref:System.Security.Cryptography.SHA512Managed>|   |System.Security.Cryptography.SHA512Cng|<xref:System.Security.Cryptography.SHA512Cng>|   |System.Security.Cryptography.SHA512CryptoServiceProvider|<xref:System.Security.Cryptography.SHA512CryptoServiceProvider>|   |System.Security.Cryptography.SymmetricAlgorithm|<xref:System.Security.Cryptography.RijndaelManaged>|"}]},{"pos":[6356,6459],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.CryptoConfig\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.CryptoConfig\"></xref> class."},{"pos":[7108,7196],"content":"Adds a set of names to algorithm mappings to be used for the current application domain.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a set of names to algorithm mappings to be used for the current application domain.","pos":[0,88]}]},{"pos":[7208,7417],"content":"The specified mappings take precedence over the built-in mappings and the mappings in the machine.config file. The mappings are used to prevent partially trust code from using trusted cryptographic operations.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The specified mappings take precedence over the built-in mappings and the mappings in the machine.config file. The mappings are used to prevent partially trust code from using trusted cryptographic operations.","pos":[0,209],"nodes":[{"content":"The specified mappings take precedence over the built-in mappings and the mappings in the machine.config file.","pos":[0,110]},{"content":"The mappings are used to prevent partially trust code from using trusted cryptographic operations.","pos":[111,209]}]}]},{"pos":[7586,7610],"content":"The algorithm to map to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The algorithm to map to.","pos":[0,24]}]},{"pos":[7674,7716],"content":"An array of names to map to the algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of names to map to the algorithm.","pos":[0,42]}]},{"pos":[7901,8024],"content":"The<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\"> algorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">names</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The<code> algorithm</code> or <code>names</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8120,8344],"content":"<code>algorithm</code> cannot be accessed from outside the assembly.       -or-       One of the entries in the <code>names</code> parameter is empty or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> cannot be accessed from outside the assembly.","pos":[0,68],"source":"<code>algorithm</code> cannot be accessed from outside the assembly."},{"content":"-or-       One of the entries in the <ph id=\"ph1\">&lt;code&gt;names&lt;/code&gt;</ph> parameter is empty or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[75,214],"source":"       -or-       One of the entries in the <code>names</code> parameter is empty or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[8830,8932],"content":"Adds a set of names to object identifier (OID) mappings to be used for the current application domain.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a set of names to object identifier (OID) mappings to be used for the current application domain.","pos":[0,102]}]},{"pos":[8944,9153],"content":"The specified mappings take precedence over the built-in mappings and the mappings in the machine.config file. The mappings are used to prevent partially trust code from using trusted cryptographic operations.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The specified mappings take precedence over the built-in mappings and the mappings in the machine.config file. The mappings are used to prevent partially trust code from using trusted cryptographic operations.","pos":[0,209],"nodes":[{"content":"The specified mappings take precedence over the built-in mappings and the mappings in the machine.config file.","pos":[0,110]},{"content":"The mappings are used to prevent partially trust code from using trusted cryptographic operations.","pos":[111,209]}]}]},{"pos":[9308,9346],"content":"The object identifier (OID) to map to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object identifier (OID) to map to.","pos":[0,38]}]},{"pos":[9410,9446],"content":"An array of names to map to the OID.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of names to map to the OID.","pos":[0,36]}]},{"pos":[9625,9742],"content":"The<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\"> oid</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">names</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The<code> oid</code> or <code>names</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9837,9965],"content":"One of the entries in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">names</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is empty or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"One of the entries in the <code>names</code> parameter is empty or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10424,10563],"content":"Indicates whether the runtime should enforce the policy to create only Federal Information Processing Standard (FIPS) certified algorithms.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether the runtime should enforce the policy to create only Federal Information Processing Standard (FIPS) certified algorithms.","pos":[0,139]}]},{"pos":[10575,10616],"content":"If <ph id=\"ph1\">`false`</ph>, any algorithm may be created.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If `false`, any algorithm may be created."},{"pos":[10750,10908],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to enforce the policy; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to enforce the policy; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11470,11531],"content":"Creates a new instance of the specified cryptographic object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new instance of the specified cryptographic object.","pos":[0,61]}]},{"pos":[11543,11649],"content":"For a list of simple names recognized by this class, see <xref:System.Security.Cryptography.CryptoConfig>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For a list of simple names recognized by this class, see &lt;xref:System.Security.Cryptography.CryptoConfig&gt;.","pos":[0,106],"source":"For a list of simple names recognized by this class, see <xref:System.Security.Cryptography.CryptoConfig>."}]},{"pos":[12406,12481],"content":"The simple name of the cryptographic object of which to create an instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The simple name of the cryptographic object of which to create an instance.","pos":[0,75]}]},{"pos":[12539,12592],"content":"A new instance of the specified cryptographic object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new instance of the specified cryptographic object.","pos":[0,53]}]},{"pos":[12779,12875],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13008,13170],"content":"The algorithm described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.","needQuote":true,"needEscape":true,"source":"The algorithm described by the <code>name</code> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible."},{"pos":[13695,13785],"content":"Creates a new instance of the specified cryptographic object with the specified arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new instance of the specified cryptographic object with the specified arguments.","pos":[0,90]}]},{"pos":[13797,13903],"content":"For a list of simple names recognized by this class, see <xref:System.Security.Cryptography.CryptoConfig>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For a list of simple names recognized by this class, see &lt;xref:System.Security.Cryptography.CryptoConfig&gt;.","pos":[0,106],"source":"For a list of simple names recognized by this class, see <xref:System.Security.Cryptography.CryptoConfig>."}]},{"pos":[14722,14797],"content":"The simple name of the cryptographic object of which to create an instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The simple name of the cryptographic object of which to create an instance.","pos":[0,75]}]},{"pos":[14860,14924],"content":"The arguments used to create the specified cryptographic object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The arguments used to create the specified cryptographic object.","pos":[0,64]}]},{"pos":[14982,15035],"content":"A new instance of the specified cryptographic object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new instance of the specified cryptographic object.","pos":[0,53]}]},{"pos":[15222,15318],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[15451,15613],"content":"The algorithm described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.","needQuote":true,"needEscape":true,"source":"The algorithm described by the <code>name</code> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible."},{"pos":[16054,16100],"content":"Encodes the specified object identifier (OID).","needQuote":true,"needEscape":true,"nodes":[{"content":"Encodes the specified object identifier (OID).","pos":[0,46]}]},{"pos":[16871,16889],"content":"The OID to encode.","needQuote":true,"needEscape":true,"nodes":[{"content":"The OID to encode.","pos":[0,18]}]},{"pos":[16947,16987],"content":"A byte array containing the encoded OID.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array containing the encoded OID.","pos":[0,40]}]},{"pos":[17169,17264],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">str</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>str</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[17451,17492],"content":"An error occurred while encoding the OID.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred while encoding the OID.","pos":[0,41]}]},{"pos":[17948,18041],"content":"Gets the object identifier (OID) of the algorithm corresponding to the specified simple name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the object identifier (OID) of the algorithm corresponding to the specified simple name.","pos":[0,93]}]},{"pos":[18053,18159],"content":"For a list of simple names recognized by this class, see <xref:System.Security.Cryptography.CryptoConfig>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For a list of simple names recognized by this class, see &lt;xref:System.Security.Cryptography.CryptoConfig&gt;.","pos":[0,106],"source":"For a list of simple names recognized by this class, see <xref:System.Security.Cryptography.CryptoConfig>."}]},{"pos":[18964,19022],"content":"The simple name of the algorithm for which to get the OID.","needQuote":true,"needEscape":true,"nodes":[{"content":"The simple name of the algorithm for which to get the OID.","pos":[0,58]}]},{"pos":[19080,19115],"content":"The OID of the specified algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The OID of the specified algorithm.","pos":[0,35]}]},{"pos":[19300,19396],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.CryptoConfig\n  id: CryptoConfig\n  children:\n  - System.Security.Cryptography.CryptoConfig.#ctor\n  - System.Security.Cryptography.CryptoConfig.AddAlgorithm(System.Type,System.String[])\n  - System.Security.Cryptography.CryptoConfig.AddOID(System.String,System.String[])\n  - System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms\n  - System.Security.Cryptography.CryptoConfig.CreateFromName(System.String)\n  - System.Security.Cryptography.CryptoConfig.CreateFromName(System.String,System.Object[])\n  - System.Security.Cryptography.CryptoConfig.EncodeOID(System.String)\n  - System.Security.Cryptography.CryptoConfig.MapNameToOID(System.String)\n  langs:\n  - csharp\n  name: CryptoConfig\n  nameWithType: CryptoConfig\n  fullName: System.Security.Cryptography.CryptoConfig\n  type: Class\n  summary: Accesses the cryptography configuration information.\n  remarks: \"The following table shows the simple names recognized by this class and the default algorithm implementations to which they map. Alternatively, you can map other implementations to these names, as described in [Mapping Algorithm Names to Cryptography Classes](~/add/includes/ajax-current-ext-md.md).  \\n  \\n|Simple name|Algorithm implementation|  \\n|-----------------|------------------------------|  \\n|3DES, Triple DES, TripleDES, System.Security.Cryptography.TripleDES|<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider>|  \\n|AES, System.Security.Cryptography.AesCryptoServiceProvider|<xref:System.Security.Cryptography.AesCryptoServiceProvider>|  \\n|AesManaged, System.Security.Cryptography.AesManaged|<xref:System.Security.Cryptography.AesManaged>|  \\n|System.Security.Cryptography.AsymmetricAlgorithm|<xref:System.Security.Cryptography.RSACryptoServiceProvider>|  \\n|DES, System.Security.Cryptography.DES|<xref:System.Security.Cryptography.DESCryptoServiceProvider>|  \\n|DSA, System.Security.Cryptography.DSA|<xref:System.Security.Cryptography.DSACryptoServiceProvider>|  \\n|ECDH, ECDiffieHellman, ECDiffieHellmanCng, System.Security.Cryptography.ECDiffieHellmanCng|<xref:System.Security.Cryptography.ECDiffieHellmanCng>|  \\n|ECDsa, ECDsaCng, System.Security.Cryptography.ECDsaCng|<xref:System.Security.Cryptography.ECDsaCng>|  \\n|System.Security.Cryptography.HashAlgorithm|<xref:System.Security.Cryptography.SHA1CryptoServiceProvider>|  \\n|HMAC, System.Security.Cryptography.HMAC|<xref:System.Security.Cryptography.HMACSHA1>|  \\n|HMACMD5, System.Security.Cryptography.HMACMD5|<xref:System.Security.Cryptography.HMACMD5>|  \\n|HMACRIPEMD160, System.Security.Cryptography.HMACRIPEMD160|<xref:System.Security.Cryptography.HMACRIPEMD160>|  \\n|HMACSHA1, System.Security.Cryptography.HMACSHA1|<xref:System.Security.Cryptography.HMACSHA1>|  \\n|HMACSHA256, System.Security.Cryptography.HMACSHA256|<xref:System.Security.Cryptography.HMACSHA256>|  \\n|HMACSHA384, System.Security.Cryptography.HMACSHA384|<xref:System.Security.Cryptography.HMACSHA384>|  \\n|HMACSHA512, System.Security.Cryptography.HMACSHA512|<xref:System.Security.Cryptography.HMACSHA512>|  \\n|System.Security.Cryptography.KeyedHashAlgorithm|<xref:System.Security.Cryptography.HMACSHA1>|  \\n|MACTripleDES, System.Security.Cryptography.MACTripleDES|<xref:System.Security.Cryptography.MACTripleDES>|  \\n|MD5, System.Security.Cryptography.MD5|<xref:System.Security.Cryptography.MD5CryptoServiceProvider>|  \\n|System.Security.Cryptography.MD5Cng|<xref:System.Security.Cryptography.MD5Cng>|  \\n|RandomNumberGenerator|<xref:System.Security.Cryptography.RNGCryptoServiceProvider>|  \\n|RC2, System.Security.Cryptography.RC2|<xref:System.Security.Cryptography.RC2CryptoServiceProvider>|  \\n|Rijndael, System.Security.Cryptography.Rijndael|<xref:System.Security.Cryptography.RijndaelManaged>|  \\n|RIPEMD160, RIPEMD-160, System.Security.Cryptography.RIPEMD160Managed|<xref:System.Security.Cryptography.RIPEMD160Managed>|  \\n|RSA, System.Security.Cryptography.RSA|<xref:System.Security.Cryptography.RSACryptoServiceProvider>|  \\n|SHA, SHA1, System.Security.Cryptography.SHA1|<xref:System.Security.Cryptography.SHA1CryptoServiceProvider>|  \\n|System.Security.Cryptography.SHA1Cng|<xref:System.Security.Cryptography.SHA1Cng>|  \\n|SHA256, SHA-256, System.Security.Cryptography.SHA256|<xref:System.Security.Cryptography.SHA256Managed>|  \\n|System.Security.Cryptography.SHA256Cng|<xref:System.Security.Cryptography.SHA256Cng>|  \\n|System.Security.Cryptography.SHA256CryptoServiceProvider|<xref:System.Security.Cryptography.SHA256CryptoServiceProvider>|  \\n|SHA384, SHA-384, System.Security.Cryptography.SHA384|<xref:System.Security.Cryptography.SHA384Managed>|  \\n|System.Security.Cryptography.SHA384Cng|<xref:System.Security.Cryptography.SHA384Cng>|  \\n|System.Security.Cryptography.SHA384CryptoServiceProvider|<xref:System.Security.Cryptography.SHA384CryptoServiceProvider>|  \\n|SHA512, SHA-512, System.Security.Cryptography.SHA512|<xref:System.Security.Cryptography.SHA512Managed>|  \\n|System.Security.Cryptography.SHA512Cng|<xref:System.Security.Cryptography.SHA512Cng>|  \\n|System.Security.Cryptography.SHA512CryptoServiceProvider|<xref:System.Security.Cryptography.SHA512CryptoServiceProvider>|  \\n|System.Security.Cryptography.SymmetricAlgorithm|<xref:System.Security.Cryptography.RijndaelManaged>|\"\n  example:\n  - \"The following code example demonstrates how to use members of the CryptoConfig class.  \\n  \\n [!code-cs[System.Security.Cryptography.CryptoConfig#1](~/add/codesnippet/csharp/t-system.security.crypto_81_1.cs)]\\n [!code-cpp[System.Security.Cryptography.CryptoConfig#1](~/add/codesnippet/cpp/t-system.security.crypto_81_1.cpp)]\\n [!code-vb[System.Security.Cryptography.CryptoConfig#1](~/add/codesnippet/visualbasic/t-system.security.crypto_81_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CryptoConfig\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CryptoConfig.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.CryptoConfig\n  langs:\n  - csharp\n  name: CryptoConfig()\n  nameWithType: CryptoConfig.CryptoConfig()\n  fullName: System.Security.Cryptography.CryptoConfig.CryptoConfig()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.CryptoConfig\"></xref> class.\n  syntax:\n    content: public CryptoConfig ();\n    parameters: []\n  overload: System.Security.Cryptography.CryptoConfig.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CryptoConfig.AddAlgorithm(System.Type,System.String[])\n  id: AddAlgorithm(System.Type,System.String[])\n  parent: System.Security.Cryptography.CryptoConfig\n  langs:\n  - csharp\n  name: AddAlgorithm(Type,String[])\n  nameWithType: CryptoConfig.AddAlgorithm(Type,String[])\n  fullName: System.Security.Cryptography.CryptoConfig.AddAlgorithm(Type,String[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Adds a set of names to algorithm mappings to be used for the current application domain.\n  remarks: The specified mappings take precedence over the built-in mappings and the mappings in the machine.config file. The mappings are used to prevent partially trust code from using trusted cryptographic operations.\n  syntax:\n    content: public static void AddAlgorithm (Type algorithm, string[] names);\n    parameters:\n    - id: algorithm\n      type: System.Type\n      description: The algorithm to map to.\n    - id: names\n      type: System.String[]\n      description: An array of names to map to the algorithm.\n  overload: System.Security.Cryptography.CryptoConfig.AddAlgorithm*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The<code> algorithm</code> or <code>names</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>algorithm</code> cannot be accessed from outside the assembly.  \\n  \\n -or-  \\n  \\n One of the entries in the <code>names</code> parameter is empty or <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CryptoConfig.AddOID(System.String,System.String[])\n  id: AddOID(System.String,System.String[])\n  parent: System.Security.Cryptography.CryptoConfig\n  langs:\n  - csharp\n  name: AddOID(String,String[])\n  nameWithType: CryptoConfig.AddOID(String,String[])\n  fullName: System.Security.Cryptography.CryptoConfig.AddOID(String,String[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Adds a set of names to object identifier (OID) mappings to be used for the current application domain.\n  remarks: The specified mappings take precedence over the built-in mappings and the mappings in the machine.config file. The mappings are used to prevent partially trust code from using trusted cryptographic operations.\n  syntax:\n    content: public static void AddOID (string oid, string[] names);\n    parameters:\n    - id: oid\n      type: System.String\n      description: The object identifier (OID) to map to.\n    - id: names\n      type: System.String[]\n      description: An array of names to map to the OID.\n  overload: System.Security.Cryptography.CryptoConfig.AddOID*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The<code> oid</code> or <code>names</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: One of the entries in the <code>names</code> parameter is empty or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms\n  id: AllowOnlyFipsAlgorithms\n  parent: System.Security.Cryptography.CryptoConfig\n  langs:\n  - csharp\n  name: AllowOnlyFipsAlgorithms\n  nameWithType: CryptoConfig.AllowOnlyFipsAlgorithms\n  fullName: System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Indicates whether the runtime should enforce the policy to create only Federal Information Processing Standard (FIPS) certified algorithms.\n  remarks: If `false`, any algorithm may be created.\n  syntax:\n    content: public static bool AllowOnlyFipsAlgorithms { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to enforce the policy; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CryptoConfig.CreateFromName(System.String)\n  id: CreateFromName(System.String)\n  parent: System.Security.Cryptography.CryptoConfig\n  langs:\n  - csharp\n  name: CreateFromName(String)\n  nameWithType: CryptoConfig.CreateFromName(String)\n  fullName: System.Security.Cryptography.CryptoConfig.CreateFromName(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Creates a new instance of the specified cryptographic object.\n  remarks: For a list of simple names recognized by this class, see <xref:System.Security.Cryptography.CryptoConfig>.\n  example:\n  - \"The following code example demonstrates how to call the CreateFromName method to create a new SHA1 provider. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoConfig> class.  \\n  \\n [!code-cs[System.Security.Cryptography.CryptoConfig#4](~/add/codesnippet/csharp/m-system.security.crypto_75_1.cs)]\\n [!code-cpp[System.Security.Cryptography.CryptoConfig#4](~/add/codesnippet/cpp/m-system.security.crypto_75_1.cpp)]\\n [!code-vb[System.Security.Cryptography.CryptoConfig#4](~/add/codesnippet/visualbasic/m-system.security.crypto_75_1.vb)]\"\n  syntax:\n    content: public static object CreateFromName (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The simple name of the cryptographic object of which to create an instance.\n    return:\n      type: System.Object\n      description: A new instance of the specified cryptographic object.\n  overload: System.Security.Cryptography.CryptoConfig.CreateFromName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: The algorithm described by the <code>name</code> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CryptoConfig.CreateFromName(System.String,System.Object[])\n  id: CreateFromName(System.String,System.Object[])\n  parent: System.Security.Cryptography.CryptoConfig\n  langs:\n  - csharp\n  name: CreateFromName(String,Object[])\n  nameWithType: CryptoConfig.CreateFromName(String,Object[])\n  fullName: System.Security.Cryptography.CryptoConfig.CreateFromName(String,Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Creates a new instance of the specified cryptographic object with the specified arguments.\n  remarks: For a list of simple names recognized by this class, see <xref:System.Security.Cryptography.CryptoConfig>.\n  example:\n  - \"The following code example demonstrates how to call the CreateFromName method to initialize a new RSA provider instance accessing the `TestContainer` key container. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoConfig> class.  \\n  \\n [!code-cs[System.Security.Cryptography.CryptoConfig#5](~/add/codesnippet/csharp/e4d60361-8137-4437-9775-_1.cs)]\\n [!code-cpp[System.Security.Cryptography.CryptoConfig#5](~/add/codesnippet/cpp/e4d60361-8137-4437-9775-_1.cpp)]\\n [!code-vb[System.Security.Cryptography.CryptoConfig#5](~/add/codesnippet/visualbasic/e4d60361-8137-4437-9775-_1.vb)]\"\n  syntax:\n    content: public static object CreateFromName (string name, object[] args);\n    parameters:\n    - id: name\n      type: System.String\n      description: The simple name of the cryptographic object of which to create an instance.\n    - id: args\n      type: System.Object[]\n      description: The arguments used to create the specified cryptographic object.\n    return:\n      type: System.Object\n      description: A new instance of the specified cryptographic object.\n  overload: System.Security.Cryptography.CryptoConfig.CreateFromName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: The algorithm described by the <code>name</code> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CryptoConfig.EncodeOID(System.String)\n  id: EncodeOID(System.String)\n  parent: System.Security.Cryptography.CryptoConfig\n  langs:\n  - csharp\n  name: EncodeOID(String)\n  nameWithType: CryptoConfig.EncodeOID(String)\n  fullName: System.Security.Cryptography.CryptoConfig.EncodeOID(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Encodes the specified object identifier (OID).\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to call the EncodeOID method to encode the specified object identifier. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoConfig> class.  \\n  \\n [!code-cs[System.Security.Cryptography.CryptoConfig#6](~/add/codesnippet/csharp/m-system.security.crypto_22_1.cs)]\\n [!code-cpp[System.Security.Cryptography.CryptoConfig#6](~/add/codesnippet/cpp/m-system.security.crypto_22_1.cpp)]\\n [!code-vb[System.Security.Cryptography.CryptoConfig#6](~/add/codesnippet/visualbasic/m-system.security.crypto_22_1.vb)]\"\n  syntax:\n    content: public static byte[] EncodeOID (string str);\n    parameters:\n    - id: str\n      type: System.String\n      description: The OID to encode.\n    return:\n      type: System.Byte[]\n      description: A byte array containing the encoded OID.\n  overload: System.Security.Cryptography.CryptoConfig.EncodeOID*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>str</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException\n    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException\n    description: An error occurred while encoding the OID.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.CryptoConfig.MapNameToOID(System.String)\n  id: MapNameToOID(System.String)\n  parent: System.Security.Cryptography.CryptoConfig\n  langs:\n  - csharp\n  name: MapNameToOID(String)\n  nameWithType: CryptoConfig.MapNameToOID(String)\n  fullName: System.Security.Cryptography.CryptoConfig.MapNameToOID(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets the object identifier (OID) of the algorithm corresponding to the specified simple name.\n  remarks: For a list of simple names recognized by this class, see <xref:System.Security.Cryptography.CryptoConfig>.\n  example:\n  - \"The following code example demonstrates how to call the MapNameToOID method to retrieve an object identifier (OID) from the string name of the SHA1 algorithm. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoConfig> class.  \\n  \\n [!code-cs[System.Security.Cryptography.CryptoConfig#3](~/add/codesnippet/csharp/m-system.security.crypto_80_1.cs)]\\n [!code-cpp[System.Security.Cryptography.CryptoConfig#3](~/add/codesnippet/cpp/m-system.security.crypto_80_1.cpp)]\\n [!code-vb[System.Security.Cryptography.CryptoConfig#3](~/add/codesnippet/visualbasic/m-system.security.crypto_80_1.vb)]\"\n  syntax:\n    content: public static string MapNameToOID (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The simple name of the algorithm for which to get the OID.\n    return:\n      type: System.String\n      description: The OID of the specified algorithm.\n  overload: System.Security.Cryptography.CryptoConfig.MapNameToOID*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Reflection.TargetInvocationException\n  isExternal: true\n  name: System.Reflection.TargetInvocationException\n- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicUnexpectedOperationException\n  nameWithType: CryptographicUnexpectedOperationException\n  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException\n- uid: System.Security.Cryptography.CryptoConfig.#ctor\n  parent: System.Security.Cryptography.CryptoConfig\n  isExternal: false\n  name: CryptoConfig()\n  nameWithType: CryptoConfig.CryptoConfig()\n  fullName: System.Security.Cryptography.CryptoConfig.CryptoConfig()\n- uid: System.Security.Cryptography.CryptoConfig.AddAlgorithm(System.Type,System.String[])\n  parent: System.Security.Cryptography.CryptoConfig\n  isExternal: false\n  name: AddAlgorithm(Type,String[])\n  nameWithType: CryptoConfig.AddAlgorithm(Type,String[])\n  fullName: System.Security.Cryptography.CryptoConfig.AddAlgorithm(Type,String[])\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.CryptoConfig.AddOID(System.String,System.String[])\n  parent: System.Security.Cryptography.CryptoConfig\n  isExternal: false\n  name: AddOID(String,String[])\n  nameWithType: CryptoConfig.AddOID(String,String[])\n  fullName: System.Security.Cryptography.CryptoConfig.AddOID(String,String[])\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms\n  parent: System.Security.Cryptography.CryptoConfig\n  isExternal: false\n  name: AllowOnlyFipsAlgorithms\n  nameWithType: CryptoConfig.AllowOnlyFipsAlgorithms\n  fullName: System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CryptoConfig.CreateFromName(System.String)\n  parent: System.Security.Cryptography.CryptoConfig\n  isExternal: false\n  name: CreateFromName(String)\n  nameWithType: CryptoConfig.CreateFromName(String)\n  fullName: System.Security.Cryptography.CryptoConfig.CreateFromName(String)\n- uid: System.Security.Cryptography.CryptoConfig.CreateFromName(System.String,System.Object[])\n  parent: System.Security.Cryptography.CryptoConfig\n  isExternal: false\n  name: CreateFromName(String,Object[])\n  nameWithType: CryptoConfig.CreateFromName(String,Object[])\n  fullName: System.Security.Cryptography.CryptoConfig.CreateFromName(String,Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.CryptoConfig.EncodeOID(System.String)\n  parent: System.Security.Cryptography.CryptoConfig\n  isExternal: false\n  name: EncodeOID(String)\n  nameWithType: CryptoConfig.EncodeOID(String)\n  fullName: System.Security.Cryptography.CryptoConfig.EncodeOID(String)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.CryptoConfig.MapNameToOID(System.String)\n  parent: System.Security.Cryptography.CryptoConfig\n  isExternal: false\n  name: MapNameToOID(String)\n  nameWithType: CryptoConfig.MapNameToOID(String)\n  fullName: System.Security.Cryptography.CryptoConfig.MapNameToOID(String)\n- uid: System.Security.Cryptography.CryptoConfig.#ctor*\n  parent: System.Security.Cryptography.CryptoConfig\n  isExternal: false\n  name: CryptoConfig\n  nameWithType: CryptoConfig.CryptoConfig\n- uid: System.Security.Cryptography.CryptoConfig.AddAlgorithm*\n  parent: System.Security.Cryptography.CryptoConfig\n  isExternal: false\n  name: AddAlgorithm\n  nameWithType: CryptoConfig.AddAlgorithm\n- uid: System.Security.Cryptography.CryptoConfig.AddOID*\n  parent: System.Security.Cryptography.CryptoConfig\n  isExternal: false\n  name: AddOID\n  nameWithType: CryptoConfig.AddOID\n- uid: System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms*\n  parent: System.Security.Cryptography.CryptoConfig\n  isExternal: false\n  name: AllowOnlyFipsAlgorithms\n  nameWithType: CryptoConfig.AllowOnlyFipsAlgorithms\n- uid: System.Security.Cryptography.CryptoConfig.CreateFromName*\n  parent: System.Security.Cryptography.CryptoConfig\n  isExternal: false\n  name: CreateFromName\n  nameWithType: CryptoConfig.CreateFromName\n- uid: System.Security.Cryptography.CryptoConfig.EncodeOID*\n  parent: System.Security.Cryptography.CryptoConfig\n  isExternal: false\n  name: EncodeOID\n  nameWithType: CryptoConfig.EncodeOID\n- uid: System.Security.Cryptography.CryptoConfig.MapNameToOID*\n  parent: System.Security.Cryptography.CryptoConfig\n  isExternal: false\n  name: MapNameToOID\n  nameWithType: CryptoConfig.MapNameToOID\n"}