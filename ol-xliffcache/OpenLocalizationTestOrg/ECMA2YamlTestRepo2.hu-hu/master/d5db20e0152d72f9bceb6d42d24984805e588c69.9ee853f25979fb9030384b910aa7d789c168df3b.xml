{"nodes":[{"pos":[2680,2785],"content":"The DirectoryEntry class encapsulates a node or object in the Active Directory Domain Services hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DirectoryEntry class encapsulates a node or object in the Active Directory Domain Services hierarchy.","pos":[0,105]}]},{"pos":[2798,5259],"content":"Use this class for binding to objects, or reading and updating attributes. DirectoryEntry, along with helper classes, provides support for life-cycle management and navigation methods. These include creating, deleting, renaming, moving a child node, and enumerating children. After you modify a node, you must commit your changes in order for them to be saved to the tree. For more information, see the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> property.       DirectoryEntry can be used to access regular entries and some, but not all, information from schema entries.       The Active Directory Domain Services hierarchy contains up to several thousand nodes. Each node represents an object, such as a network printer or a user in a domain. Corporate networks constantly change as new employees are hired and objects such as network printers and computers are added. Active Directory Service Interfaces (ADSI) technology provides ways to programmatically add these objects to the directory tree.       To create a directory entry in the hierarchy, use the <xref:System.DirectoryServices.DirectoryEntry.Children%2A> property. The <xref:System.DirectoryServices.DirectoryEntry.Children%2A> property is a collection that provides an <xref:System.DirectoryServices.DirectoryEntries.Add%2A> method, through which you add a node to the collection directly below the parent node that you are currently bound to. When adding a node to the collection, you must specify a name for the new node and the name of a schema template that you want to associate with the node. For example, you might want to use a schema titled \"Computer\" to add new computers to the hierarchy.       This class also contains attribute caching, which can be useful for optimizing network traffic. To use attribute caching, see the <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> property.       The classes associated with the DirectoryEntry component can be used with any of the Active Directory Domain Services service providers. Some of the current providers are Internet Information Services (IIS), Lightweight Directory Access Protocol (LDAP), Novell NetWare Directory Service (NDS), and WinNT.      > [!NOTE] >  It is assumed that you have a general understanding of Active Directory Domain Services before using this class. For more information, see the <xref:System.DirectoryServices?displayProperty=fullName> namespace overview.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this class for binding to objects, or reading and updating attributes.","pos":[0,74]},{"content":"DirectoryEntry, along with helper classes, provides support for life-cycle management and navigation methods.","pos":[75,184]},{"content":"These include creating, deleting, renaming, moving a child node, and enumerating children.","pos":[185,275]},{"content":"After you modify a node, you must commit your changes in order for them to be saved to the tree.","pos":[276,372]},{"content":"For more information, see the &lt;xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A&gt; property.","pos":[373,476],"source":" For more information, see the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> property."},{"content":"DirectoryEntry can be used to access regular entries and some, but not all, information from schema entries.","pos":[483,591]},{"content":"The Active Directory Domain Services hierarchy contains up to several thousand nodes.","pos":[598,683]},{"content":"Each node represents an object, such as a network printer or a user in a domain.","pos":[684,764]},{"content":"Corporate networks constantly change as new employees are hired and objects such as network printers and computers are added.","pos":[765,890]},{"content":"Active Directory Service Interfaces (ADSI) technology provides ways to programmatically add these objects to the directory tree.","pos":[891,1019]},{"content":"To create a directory entry in the hierarchy, use the &lt;xref:System.DirectoryServices.DirectoryEntry.Children%2A&gt; property.","pos":[1026,1148],"source":"       To create a directory entry in the hierarchy, use the <xref:System.DirectoryServices.DirectoryEntry.Children%2A> property."},{"content":"The &lt;xref:System.DirectoryServices.DirectoryEntry.Children%2A&gt; property is a collection that provides an &lt;xref:System.DirectoryServices.DirectoryEntries.Add%2A&gt; method, through which you add a node to the collection directly below the parent node that you are currently bound to.","pos":[1149,1428],"source":" The <xref:System.DirectoryServices.DirectoryEntry.Children%2A> property is a collection that provides an <xref:System.DirectoryServices.DirectoryEntries.Add%2A> method, through which you add a node to the collection directly below the parent node that you are currently bound to."},{"content":"When adding a node to the collection, you must specify a name for the new node and the name of a schema template that you want to associate with the node.","pos":[1429,1583]},{"content":"For example, you might want to use a schema titled \"Computer\" to add new computers to the hierarchy.","pos":[1584,1684]},{"content":"This class also contains attribute caching, which can be useful for optimizing network traffic.","pos":[1691,1786]},{"content":"To use attribute caching, see the &lt;xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A&gt; property.","pos":[1787,1897],"source":" To use attribute caching, see the <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> property."},{"content":"The classes associated with the DirectoryEntry component can be used with any of the Active Directory Domain Services service providers.","pos":[1904,2040]},{"content":"Some of the current providers are Internet Information Services (IIS), Lightweight Directory Access Protocol (LDAP), Novell NetWare Directory Service (NDS), and WinNT.","pos":[2041,2208]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  It is assumed that you have a general understanding of Active Directory Domain Services before using this class.","pos":[2214,2339],"source":"      > [!NOTE] >  It is assumed that you have a general understanding of Active Directory Domain Services before using this class."},{"content":"For more information, see the &lt;xref:System.DirectoryServices?displayProperty=fullName&gt; namespace overview.","pos":[2340,2446],"source":" For more information, see the <xref:System.DirectoryServices?displayProperty=fullName> namespace overview."}]},{"pos":[6730,6831],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> class."},{"pos":[7438,7614],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that binds to the specified native Active Directory Domain Services object.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> class that binds to the specified native Active Directory Domain Services object."},{"pos":[7626,8105],"content":"This constructor enables a program to use the methods and properties of the <xref:System.DirectoryServices.DirectoryEntry> class on a native Active Directory Domain Services object that implements the IADs interface through a native API. For more information about the IADs interface, see the topic [IADs](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp) in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor enables a program to use the methods and properties of the &lt;xref:System.DirectoryServices.DirectoryEntry&gt; class on a native Active Directory Domain Services object that implements the IADs interface through a native API.","pos":[0,237],"source":"This constructor enables a program to use the methods and properties of the <xref:System.DirectoryServices.DirectoryEntry> class on a native Active Directory Domain Services object that implements the IADs interface through a native API."},{"content":"For more information about the IADs interface, see the topic <bpt id=\"p1\">[</bpt>IADs<ept id=\"p1\">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp)</ept> in the MSDN Library at <bpt id=\"p2\">[</bpt>http://msdn.microsoft.com/library<ept id=\"p2\">](http://msdn.microsoft.com/library)</ept>.","pos":[238,479],"source":" For more information about the IADs interface, see the topic [IADs](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp) in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."}]},{"pos":[8252,8326],"content":"The name of the native Active Directory Domain Services object to bind to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the native Active Directory Domain Services object to bind to.","pos":[0,74]}]},{"pos":[8865,9069],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that binds this instance to the node in Active Directory Domain Services located at the specified path.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> class that binds this instance to the node in Active Directory Domain Services located at the specified path."},{"pos":[11574,11732],"content":"The path at which to bind the DirectoryEntry to the directory. The <xref:System.DirectoryServices.DirectoryEntry.Path*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path at which to bind the DirectoryEntry to the directory. The <xref:System.DirectoryServices.DirectoryEntry.Path*> property is initialized to this value.","pos":[0,158],"nodes":[{"content":"The path at which to bind the DirectoryEntry to the directory.","pos":[0,62]},{"content":"The &lt;xref:System.DirectoryServices.DirectoryEntry.Path*&gt; property is initialized to this value.","pos":[63,158],"source":" The <xref:System.DirectoryServices.DirectoryEntry.Path*> property is initialized to this value."}]}]},{"pos":[12369,12470],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> class."},{"pos":[12641,12815],"content":"The path of this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref>. The <xref:System.DirectoryServices.DirectoryEntry.Path*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path of this <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,78],"source":"The path of this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref>."},{"content":"The &lt;xref:System.DirectoryServices.DirectoryEntry.Path*&gt; property is initialized to this value.","pos":[79,174],"source":" The <xref:System.DirectoryServices.DirectoryEntry.Path*> property is initialized to this value."}]},{"pos":[12880,13032],"content":"The user name to use when authenticating the client. The <xref:System.DirectoryServices.DirectoryEntry.Username*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name to use when authenticating the client. The <xref:System.DirectoryServices.DirectoryEntry.Username*> property is initialized to this value.","pos":[0,152],"nodes":[{"content":"The user name to use when authenticating the client.","pos":[0,52]},{"content":"The &lt;xref:System.DirectoryServices.DirectoryEntry.Username*&gt; property is initialized to this value.","pos":[53,152],"source":" The <xref:System.DirectoryServices.DirectoryEntry.Username*> property is initialized to this value."}]}]},{"pos":[13097,13248],"content":"The password to use when authenticating the client. The <xref:System.DirectoryServices.DirectoryEntry.Password*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password to use when authenticating the client. The <xref:System.DirectoryServices.DirectoryEntry.Password*> property is initialized to this value.","pos":[0,151],"nodes":[{"content":"The password to use when authenticating the client.","pos":[0,51]},{"content":"The &lt;xref:System.DirectoryServices.DirectoryEntry.Password*&gt; property is initialized to this value.","pos":[52,151],"source":" The <xref:System.DirectoryServices.DirectoryEntry.Password*> property is initialized to this value."}]}]},{"pos":[14035,14136],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> class."},{"pos":[14372,14546],"content":"The path of this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref>. The <xref:System.DirectoryServices.DirectoryEntry.Path*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path of this <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,78],"source":"The path of this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref>."},{"content":"The &lt;xref:System.DirectoryServices.DirectoryEntry.Path*&gt; property is initialized to this value.","pos":[79,174],"source":" The <xref:System.DirectoryServices.DirectoryEntry.Path*> property is initialized to this value."}]},{"pos":[14611,14763],"content":"The user name to use when authenticating the client. The <xref:System.DirectoryServices.DirectoryEntry.Username*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name to use when authenticating the client. The <xref:System.DirectoryServices.DirectoryEntry.Username*> property is initialized to this value.","pos":[0,152],"nodes":[{"content":"The user name to use when authenticating the client.","pos":[0,52]},{"content":"The &lt;xref:System.DirectoryServices.DirectoryEntry.Username*&gt; property is initialized to this value.","pos":[53,152],"source":" The <xref:System.DirectoryServices.DirectoryEntry.Username*> property is initialized to this value."}]}]},{"pos":[14828,14979],"content":"The password to use when authenticating the client. The <xref:System.DirectoryServices.DirectoryEntry.Password*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password to use when authenticating the client. The <xref:System.DirectoryServices.DirectoryEntry.Password*> property is initialized to this value.","pos":[0,151],"nodes":[{"content":"The password to use when authenticating the client.","pos":[0,51]},{"content":"The &lt;xref:System.DirectoryServices.DirectoryEntry.Password*&gt; property is initialized to this value.","pos":[52,151],"source":" The <xref:System.DirectoryServices.DirectoryEntry.Password*> property is initialized to this value."}]}]},{"pos":[15085,15279],"content":"One of the <xref href=\"System.DirectoryServices.AuthenticationTypes\"></xref> values. The <xref:System.DirectoryServices.DirectoryEntry.AuthenticationType*> property is initialized to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.AuthenticationTypes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,84],"source":"One of the <xref href=\"System.DirectoryServices.AuthenticationTypes\"></xref> values."},{"content":"The &lt;xref:System.DirectoryServices.DirectoryEntry.AuthenticationType*&gt; property is initialized to this value.","pos":[85,194],"source":" The <xref:System.DirectoryServices.DirectoryEntry.AuthenticationType*> property is initialized to this value."}]},{"pos":[15797,15844],"content":"Gets or sets the type of authentication to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the type of authentication to use.","pos":[0,47]}]},{"pos":[15856,16141],"content":"Prior to [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], the default value is <xref:System.DirectoryServices.AuthenticationTypes>. Beginning with [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], the default value is <xref:System.DirectoryServices.AuthenticationTypes>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Prior to <ph id=\"ph1\">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph>, the default value is &lt;xref:System.DirectoryServices.AuthenticationTypes&gt;.","pos":[0,139],"source":"Prior to [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], the default value is <xref:System.DirectoryServices.AuthenticationTypes>."},{"content":"Beginning with <ph id=\"ph1\">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph>, the default value is &lt;xref:System.DirectoryServices.AuthenticationTypes&gt;.","pos":[140,285],"source":" Beginning with [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], the default value is <xref:System.DirectoryServices.AuthenticationTypes>."}]},{"pos":[16338,16422],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.AuthenticationTypes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.DirectoryServices.AuthenticationTypes\"></xref> values."},{"pos":[16903,16989],"content":"Gets the child entries of this node in the Active Directory Domain Services hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the child entries of this node in the Active Directory Domain Services hierarchy.","pos":[0,86]}]},{"pos":[17002,18402],"content":"The child entries are only the immediate children of this node.       Use this property to find, retrieve, or create a directory entry in the hierarchy. This property is a collection that, along with the usual iteration capabilities, provides an <xref:System.DirectoryServices.DirectoryEntries.Add%2A> method through which you add a node to the collection directly below the parent node that you are currently bound to. When adding a node to the collection, you must specify a name for the new node and the name of a schema template that you want to associate with the node. For example, you might want to use a schema titled \"Computer\" to add new computers to the hierarchy.      > [!NOTE] >  By default, changes are made locally to a cache. After you modify or add a node, you must call the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method to commit your changes in order for them to be saved to the tree. If you call <xref:System.DirectoryServices.DirectoryEntry.RefreshCache> before calling <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>, any uncommitted changes to the property cache will be lost. For more information, see the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> and <xref:System.DirectoryServices.DirectoryEntry.RefreshCache> methods, and the <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The child entries are only the immediate children of this node.","pos":[0,63]},{"content":"Use this property to find, retrieve, or create a directory entry in the hierarchy.","pos":[70,152]},{"content":"This property is a collection that, along with the usual iteration capabilities, provides an &lt;xref:System.DirectoryServices.DirectoryEntries.Add%2A&gt; method through which you add a node to the collection directly below the parent node that you are currently bound to.","pos":[153,419],"source":" This property is a collection that, along with the usual iteration capabilities, provides an <xref:System.DirectoryServices.DirectoryEntries.Add%2A> method through which you add a node to the collection directly below the parent node that you are currently bound to."},{"content":"When adding a node to the collection, you must specify a name for the new node and the name of a schema template that you want to associate with the node.","pos":[420,574]},{"content":"For example, you might want to use a schema titled \"Computer\" to add new computers to the hierarchy.","pos":[575,675]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  By default, changes are made locally to a cache.","pos":[681,742],"source":"      > [!NOTE] >  By default, changes are made locally to a cache."},{"content":"After you modify or add a node, you must call the &lt;xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A&gt; method to commit your changes in order for them to be saved to the tree.","pos":[743,929],"source":" After you modify or add a node, you must call the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method to commit your changes in order for them to be saved to the tree."},{"content":"If you call &lt;xref:System.DirectoryServices.DirectoryEntry.RefreshCache&gt; before calling &lt;xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A&gt;, any uncommitted changes to the property cache will be lost.","pos":[930,1141],"source":" If you call <xref:System.DirectoryServices.DirectoryEntry.RefreshCache> before calling <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>, any uncommitted changes to the property cache will be lost."},{"content":"For more information, see the &lt;xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A&gt; and &lt;xref:System.DirectoryServices.DirectoryEntry.RefreshCache&gt; methods, and the &lt;xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A&gt; property.","pos":[1142,1393],"source":" For more information, see the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> and <xref:System.DirectoryServices.DirectoryEntry.RefreshCache> methods, and the <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> property."}]},{"pos":[18579,18743],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntries\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object containing the child entries of this node in the Active Directory Domain Services hierarchy.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.DirectoryEntries\"></xref> object containing the child entries of this node in the Active Directory Domain Services hierarchy."},{"pos":[19203,19356],"content":"Closes the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and releases any system resources that are associated with this component.","needQuote":true,"needEscape":true,"source":"Closes the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object and releases any system resources that are associated with this component."},{"pos":[19369,19592],"content":"Call this method to release unmanaged system resources, without waiting for garbage collection.       Following a call to Close, any operations on the <xref:System.DirectoryServices.DirectoryEntry> might raise exceptions.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Call this method to release unmanaged system resources, without waiting for garbage collection.       Following a call to Close, any operations on the <xref:System.DirectoryServices.DirectoryEntry> might raise exceptions.","pos":[0,221],"nodes":[{"content":"Call this method to release unmanaged system resources, without waiting for garbage collection.","pos":[0,95]},{"content":"Following a call to Close, any operations on the &lt;xref:System.DirectoryServices.DirectoryEntry&gt; might raise exceptions.","pos":[102,221],"source":"       Following a call to Close, any operations on the <xref:System.DirectoryServices.DirectoryEntry> might raise exceptions."}]}]},{"pos":[20154,20237],"content":"Saves changes that are made to a directory entry to the underlying directory store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves changes that are made to a directory entry to the underlying directory store.","pos":[0,83]}]},{"pos":[20250,21140],"content":"By default, changes to properties are made locally to a cache, and property values to be read are cached after the first read. For more information, see <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>.       Changes made to the cache include changes to the properties as well as calls to <xref:System.DirectoryServices.DirectoryEntries.Add%2A> (if this is the newly created entry).      > [!CAUTION] >  If you call <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A> before calling CommitChanges, any uncommitted changes to the property cache will be lost.      ## Security      -   Use the <xref:System.DirectoryServices.DirectoryServicesPermission> class for reading, writing, deleting, changing, and adding to the Active Directory Domain Services hierarchy. Associated enumeration: <xref:System.DirectoryServices.DirectoryServicesPermissionAccess>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, changes to properties are made locally to a cache, and property values to be read are cached after the first read.","pos":[0,126]},{"content":"For more information, see &lt;xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A&gt;.","pos":[127,220],"source":" For more information, see <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>."},{"content":"Changes made to the cache include changes to the properties as well as calls to &lt;xref:System.DirectoryServices.DirectoryEntries.Add%2A&gt; (if this is the newly created entry).","pos":[227,400],"source":"       Changes made to the cache include changes to the properties as well as calls to <xref:System.DirectoryServices.DirectoryEntries.Add%2A> (if this is the newly created entry)."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  If you call &lt;xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A&gt; before calling CommitChanges, any uncommitted changes to the property cache will be lost.","pos":[406,586],"source":"      > [!CAUTION] >  If you call <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A> before calling CommitChanges, any uncommitted changes to the property cache will be lost."},{"content":"Security      -   Use the &lt;xref:System.DirectoryServices.DirectoryServicesPermission&gt; class for reading, writing, deleting, changing, and adding to the Active Directory Domain Services hierarchy.","pos":[595,790],"source":"      ## Security      -   Use the <xref:System.DirectoryServices.DirectoryServicesPermission> class for reading, writing, deleting, changing, and adding to the Active Directory Domain Services hierarchy."},{"content":"Associated enumeration: &lt;xref:System.DirectoryServices.DirectoryServicesPermissionAccess&gt;.","pos":[791,881],"source":" Associated enumeration: <xref:System.DirectoryServices.DirectoryServicesPermissionAccess>."}]},{"pos":[21807,21871],"content":"Creates a copy of this entry as a child of the specified parent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a copy of this entry as a child of the specified parent.","pos":[0,64]}]},{"pos":[21884,22191],"content":"If <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> is `true`, call <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> on the new object to make the copy permanent.       The Lightweight Directory Access Protocol (LDAP) provider does not currently support the CopyTo method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If &lt;xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A&gt; is <ph id=\"ph1\">`true`</ph>, call &lt;xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A&gt; on the new object to make the copy permanent.","pos":[0,195],"source":"If <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> is `true`, call <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> on the new object to make the copy permanent."},{"content":"The Lightweight Directory Access Protocol (LDAP) provider does not currently support the CopyTo method.","pos":[202,305]}]},{"pos":[22430,22587],"content":"The distinguished name of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that will be the parent for the copy that is being created.","needQuote":true,"needEscape":true,"source":"The distinguished name of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that will be the parent for the copy that is being created."},{"pos":[22671,22809],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the copy of this entry as a child of the new parent.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the copy of this entry as a child of the new parent."},{"pos":[22994,23088],"content":"The specified <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not a container.","needQuote":true,"needEscape":true,"source":"The specified <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> is not a container."},{"pos":[23647,23871],"content":"Creates a copy of this <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, as a child of the specified parent <bpt id=\"p2\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object, with the specified new name.","needQuote":true,"needEscape":true,"source":"Creates a copy of this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object, as a child of the specified parent <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object, with the specified new name."},{"pos":[23884,24185],"content":"The Lightweight Directory Access Protocol (LDAP) provider does not currently support this method.       If <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> is `true`, call <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> on the new object to make the copy permanent.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Lightweight Directory Access Protocol (LDAP) provider does not currently support this method.","pos":[0,97]},{"content":"If &lt;xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A&gt; is <ph id=\"ph1\">`true`</ph>, call &lt;xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A&gt; on the new object to make the copy permanent.","pos":[104,299],"source":"       If <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> is `true`, call <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> on the new object to make the copy permanent."}]},{"pos":[24440,24581],"content":"The DN of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that will be the parent for the copy that is being created.","needQuote":true,"needEscape":true,"source":"The DN of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that will be the parent for the copy that is being created."},{"pos":[24645,24680],"content":"The name of the copy of this entry.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the copy of this entry.","pos":[0,35]}]},{"pos":[24764,24828],"content":"A renamed copy of this entry as a child of the specified parent.","needQuote":true,"needEscape":true,"nodes":[{"content":"A renamed copy of this entry as a child of the specified parent.","pos":[0,64]}]},{"pos":[25013,25114],"content":"The specified <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is not a container.","needQuote":true,"needEscape":true,"source":"The specified <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object is not a container."},{"pos":[25520,25614],"content":"Deletes this entry and its entire subtree from the Active Directory Domain Services hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes this entry and its entire subtree from the Active Directory Domain Services hierarchy.","pos":[0,94]}]},{"pos":[25627,26198],"content":"Of the Active Directory Service Interfaces (ADSI) system-supplied providers, only the Lightweight Directory Access Protocol (LDAP) currently supports this operation.      > [!CAUTION] >  The entry and its entire subtree are deleted from the Active Directory Domain Services hierarchy.      ## Security      -   Use <xref:System.DirectoryServices.DirectoryServicesPermission> for deleting entries from the Active Directory Domain Services hierarchy. Associated enumeration: <xref:System.DirectoryServices.DirectoryServicesPermissionAccess?displayProperty=fullName>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Of the Active Directory Service Interfaces (ADSI) system-supplied providers, only the Lightweight Directory Access Protocol (LDAP) currently supports this operation.","pos":[0,165]},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  The entry and its entire subtree are deleted from the Active Directory Domain Services hierarchy.","pos":[171,284],"source":"      > [!CAUTION] >  The entry and its entire subtree are deleted from the Active Directory Domain Services hierarchy."},{"content":"Security      -   Use &lt;xref:System.DirectoryServices.DirectoryServicesPermission&gt; for deleting entries from the Active Directory Domain Services hierarchy.","pos":[293,448],"source":"      ## Security      -   Use <xref:System.DirectoryServices.DirectoryServicesPermission> for deleting entries from the Active Directory Domain Services hierarchy."},{"content":"Associated enumeration: &lt;xref:System.DirectoryServices.DirectoryServicesPermissionAccess?displayProperty=fullName&gt;.","pos":[449,564],"source":" Associated enumeration: <xref:System.DirectoryServices.DirectoryServicesPermissionAccess?displayProperty=fullName>."}]},{"pos":[26457,26551],"content":"The specified <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not a container.","needQuote":true,"needEscape":true,"source":"The specified <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> is not a container."},{"pos":[26995,27123],"content":"Disposes of the resources (other than memory) that are used by the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Disposes of the resources (other than memory) that are used by the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref>."},{"pos":[27136,28083],"content":"This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected Dispose method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes <xref:System.ComponentModel.Component.Dispose%2A> with `disposing` set to `false`.       When the `disposing` parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.DirectoryServices.DirectoryEntry> object references. This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.       For more information about the <xref:System.ComponentModel.Component.Dispose%2A> and <xref:System.Object.Finalize%2A> methods, see [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called by the public &lt;xref:System.ComponentModel.Component.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.","pos":[0,141],"source":"This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method."},{"content":"&lt;xref:System.ComponentModel.Component.Dispose%2A&gt; invokes the protected Dispose method with the <ph id=\"ph1\">`disposing`</ph> parameter set to <ph id=\"ph2\">`true`</ph>.","pos":[142,274],"source":" <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected Dispose method with the `disposing` parameter set to `true`."},{"content":"&lt;xref:System.Object.Finalize%2A&gt; invokes &lt;xref:System.ComponentModel.Component.Dispose%2A&gt; with <ph id=\"ph1\">`disposing`</ph> set to <ph id=\"ph2\">`false`</ph>.","pos":[275,398],"source":" <xref:System.Object.Finalize%2A> invokes <xref:System.ComponentModel.Component.Dispose%2A> with `disposing` set to `false`."},{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources that are held by any managed objects that this &lt;xref:System.DirectoryServices.DirectoryEntry&gt; object references.","pos":[405,594],"source":"       When the `disposing` parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.DirectoryServices.DirectoryEntry> object references."},{"content":"This method invokes the &lt;xref:System.ComponentModel.Component.Dispose%2A&gt; method of each referenced object.","pos":[595,702],"source":" This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object."},{"content":"For more information about the &lt;xref:System.ComponentModel.Component.Dispose%2A&gt; and &lt;xref:System.Object.Finalize%2A&gt; methods, see <bpt id=\"p1\">[</bpt>Overriding the Finalize Method<ept id=\"p1\">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.","pos":[709,943],"source":"       For more information about the <xref:System.ComponentModel.Component.Dispose%2A> and <xref:System.Object.Finalize%2A> methods, see [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."}]},{"pos":[28240,28449],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources."},{"pos":[28961,29046],"content":"Determines if the specified path represents an actual entry in the directory service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines if the specified path represents an actual entry in the directory service.","pos":[0,85]}]},{"pos":[30526,30558],"content":"The path of the entry to verify.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path of the entry to verify.","pos":[0,32]}]},{"pos":[30617,30825],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified path represents a valid entry in the directory service; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified path represents a valid entry in the directory service; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[31274,31356],"content":"Gets the GUID of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the GUID of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref>."},{"pos":[31368,31509],"content":"When binding to an object in Active Directory Domain Services, use the <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When binding to an object in Active Directory Domain Services, use the &lt;xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A&gt; property.","pos":[0,141],"source":"When binding to an object in Active Directory Domain Services, use the <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> property."}]},{"pos":[33269,33393],"content":"A &lt;xref:System.Guid&gt; structure that represents the GUID of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Guid> structure that represents the GUID of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref>."},{"pos":[33961,34030],"content":"Calls a method on the native Active Directory Domain Services object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Calls a method on the native Active Directory Domain Services object.","pos":[0,69]}]},{"pos":[34042,34475],"content":"If the return value of the native method implements the IADs interface, a corresponding <xref:System.DirectoryServices.DirectoryEntry> is returned. For more information about the IADs interface, see the topic [IADs](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp) in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the return value of the native method implements the IADs interface, a corresponding &lt;xref:System.DirectoryServices.DirectoryEntry&gt; is returned.","pos":[0,147],"source":"If the return value of the native method implements the IADs interface, a corresponding <xref:System.DirectoryServices.DirectoryEntry> is returned."},{"content":"For more information about the IADs interface, see the topic <bpt id=\"p1\">[</bpt>IADs<ept id=\"p1\">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp)</ept> in the MSDN Library at <bpt id=\"p2\">[</bpt>http://msdn.microsoft.com/library<ept id=\"p2\">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp)</ept>.","pos":[148,433],"source":" For more information about the IADs interface, see the topic [IADs](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp) in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp)."}]},{"pos":[34638,34671],"content":"The name of the method to invoke.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the method to invoke.","pos":[0,33]}]},{"pos":[34734,34832],"content":"An array of type <xref:System.Object> objects that contains the arguments of the method to invoke.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.Object&gt; objects that contains the arguments of the method to invoke.","pos":[0,98],"source":"An array of type <xref:System.Object> objects that contains the arguments of the method to invoke."}]},{"pos":[34890,34929],"content":"The return value of the invoked method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The return value of the invoked method.","pos":[0,39]}]},{"pos":[35158,35245],"content":"The native method threw a <xref:System.Runtime.InteropServices.COMException> exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The native method threw a &lt;xref:System.Runtime.InteropServices.COMException&gt; exception.","pos":[0,87],"source":"The native method threw a <xref:System.Runtime.InteropServices.COMException> exception."}]},{"pos":[35378,35654],"content":"The native method threw a <xref:System.Reflection.TargetInvocationException> exception. The <xref:System.Exception.InnerException*> property contains a <xref:System.Runtime.InteropServices.COMException> exception that contains information about the actual error that occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"The native method threw a <xref:System.Reflection.TargetInvocationException> exception. The <xref:System.Exception.InnerException*> property contains a <xref:System.Runtime.InteropServices.COMException> exception that contains information about the actual error that occurred.","pos":[0,276],"nodes":[{"content":"The native method threw a &lt;xref:System.Reflection.TargetInvocationException&gt; exception.","pos":[0,87],"source":"The native method threw a <xref:System.Reflection.TargetInvocationException> exception."},{"content":"The &lt;xref:System.Exception.InnerException*&gt; property contains a &lt;xref:System.Runtime.InteropServices.COMException&gt; exception that contains information about the actual error that occurred.","pos":[88,276],"source":" The <xref:System.Exception.InnerException*> property contains a <xref:System.Runtime.InteropServices.COMException> exception that contains information about the actual error that occurred."}]}]},{"pos":[36103,36175],"content":"Gets a property from the native Active Directory Domain Services object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a property from the native Active Directory Domain Services object.","pos":[0,72]}]},{"pos":[36187,36394],"content":"This method should not be used. The <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> property should be used to access the properties of the <xref:System.DirectoryServices.DirectoryEntry> object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method should not be used. The <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> property should be used to access the properties of the <xref:System.DirectoryServices.DirectoryEntry> object.","pos":[0,207],"nodes":[{"content":"This method should not be used.","pos":[0,31]},{"content":"The &lt;xref:System.DirectoryServices.DirectoryEntry.Properties%2A&gt; property should be used to access the properties of the &lt;xref:System.DirectoryServices.DirectoryEntry&gt; object.","pos":[32,207],"source":" The <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> property should be used to access the properties of the <xref:System.DirectoryServices.DirectoryEntry> object."}]}]},{"pos":[36549,36581],"content":"The name of the property to get.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property to get.","pos":[0,32]}]},{"pos":[36639,36688],"content":"An object that represents the requested property.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that represents the requested property.","pos":[0,49]}]},{"pos":[37276,37346],"content":"Sets a property on the native Active Directory Domain Services object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets a property on the native Active Directory Domain Services object.","pos":[0,70]}]},{"pos":[37358,37565],"content":"This method should not be used. The <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> property should be used to access the properties of the <xref:System.DirectoryServices.DirectoryEntry> object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method should not be used. The <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> property should be used to access the properties of the <xref:System.DirectoryServices.DirectoryEntry> object.","pos":[0,207],"nodes":[{"content":"This method should not be used.","pos":[0,31]},{"content":"The &lt;xref:System.DirectoryServices.DirectoryEntry.Properties%2A&gt; property should be used to access the properties of the &lt;xref:System.DirectoryServices.DirectoryEntry&gt; object.","pos":[32,207],"source":" The <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> property should be used to access the properties of the <xref:System.DirectoryServices.DirectoryEntry> object."}]}]},{"pos":[37733,37765],"content":"The name of the property to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property to set.","pos":[0,32]}]},{"pos":[37828,37879],"content":"The Active Directory Domain Services object to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Active Directory Domain Services object to set.","pos":[0,51]}]},{"pos":[38469,38572],"content":"Moves this <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the specified parent.","needQuote":true,"needEscape":true,"source":"Moves this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object to the specified parent."},{"pos":[38584,38790],"content":"If &lt;xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A&gt; is <ph id=\"ph1\">`true`</ph>, call the &lt;xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A&gt; method on the new object to make the move permanent.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> is `true`, call the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method on the new object to make the move permanent."},{"pos":[38993,39041],"content":"The parent to which you want to move this entry.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parent to which you want to move this entry.","pos":[0,48]}]},{"pos":[39226,39320],"content":"The specified <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not a container.","needQuote":true,"needEscape":true,"source":"The specified <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> is not a container."},{"pos":[39879,40026],"content":"Moves this <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the specified parent and changes its name to the specified value.","needQuote":true,"needEscape":true,"source":"Moves this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object to the specified parent and changes its name to the specified value."},{"pos":[40038,40233],"content":"If &lt;xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A&gt; is <ph id=\"ph1\">`true`</ph>, call &lt;xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A&gt; on the new object to make the move permanent.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> is `true`, call <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> on the new object to make the move permanent."},{"pos":[40452,40500],"content":"The parent to which you want to move this entry.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parent to which you want to move this entry.","pos":[0,48]}]},{"pos":[40564,40591],"content":"The new name of this entry.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new name of this entry.","pos":[0,27]}]},{"pos":[40776,40870],"content":"The specified <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not a container.","needQuote":true,"needEscape":true,"source":"The specified <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> is not a container."},{"pos":[41242,41317],"content":"Gets the name of the object as named with the underlying directory service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the object as named with the underlying directory service.","pos":[0,75]}]},{"pos":[41329,41517],"content":"This name, along with <xref:System.DirectoryServices.DirectoryEntry.SchemaClassName%2A>, distinguishes this entry from its siblings and must be unique among its siblings in each container.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This name, along with &lt;xref:System.DirectoryServices.DirectoryEntry.SchemaClassName%2A&gt;, distinguishes this entry from its siblings and must be unique among its siblings in each container.","pos":[0,188],"source":"This name, along with <xref:System.DirectoryServices.DirectoryEntry.SchemaClassName%2A>, distinguishes this entry from its siblings and must be unique among its siblings in each container."}]},{"pos":[43716,43786],"content":"The name of the object as named with the underlying directory service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the object as named with the underlying directory service.","pos":[0,70]}]},{"pos":[44263,44376],"content":"Gets the GUID of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, as returned from the provider.","needQuote":true,"needEscape":true,"source":"Gets the GUID of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref>, as returned from the provider."},{"pos":[44389,44774],"content":"Use the NativeGuid property when binding an object in Active Directory Domain Services.      > [!NOTE] >  The Lightweight Directory Access Protocol (LDAP) provider returns the globally unique identifier of a <xref:System.DirectoryServices.DirectoryEntry> in a different format than the Internet Information Services (IIS), Novell NetWare Directory Server (NDS), and WinNT providers.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the NativeGuid property when binding an object in Active Directory Domain Services.","pos":[0,87]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The Lightweight Directory Access Protocol (LDAP) provider returns the globally unique identifier of a &lt;xref:System.DirectoryServices.DirectoryEntry&gt; in a different format than the Internet Information Services (IIS), Novell NetWare Directory Server (NDS), and WinNT providers.","pos":[93,382],"source":"      > [!NOTE] >  The Lightweight Directory Access Protocol (LDAP) provider returns the globally unique identifier of a <xref:System.DirectoryServices.DirectoryEntry> in a different format than the Internet Information Services (IIS), Novell NetWare Directory Server (NDS), and WinNT providers."}]},{"pos":[46589,46744],"content":"A &lt;xref:System.Guid&gt; structure that represents the GUID of the <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, as returned from the provider.","needQuote":true,"needEscape":true,"source":"A <xref:System.Guid> structure that represents the GUID of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref>, as returned from the provider."},{"pos":[47237,47303],"content":"Gets the native Active Directory Service Interfaces (ADSI) object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the native Active Directory Service Interfaces (ADSI) object.","pos":[0,66]}]},{"pos":[47316,48030],"content":"Use this property to cast the native Active Directory Domain Services object, which implements the IADs interface, when you want to use a COM interface. For more information about the IADs interface, see the topic [IADs](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp) in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp).       This object is for advanced scenarios that cannot be accomplished with the <xref:System.DirectoryServices?displayProperty=fullName> classes alone. To use it, you need to import one of the COM interfaces from the IADs family, then cast this property to that interface.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this property to cast the native Active Directory Domain Services object, which implements the IADs interface, when you want to use a COM interface.","pos":[0,152]},{"content":"For more information about the IADs interface, see the topic <bpt id=\"p1\">[</bpt>IADs<ept id=\"p1\">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp)</ept> in the MSDN Library at <bpt id=\"p2\">[</bpt>http://msdn.microsoft.com/library<ept id=\"p2\">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp)</ept>.","pos":[153,438],"source":" For more information about the IADs interface, see the topic [IADs](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp) in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp)."},{"content":"This object is for advanced scenarios that cannot be accomplished with the &lt;xref:System.DirectoryServices?displayProperty=fullName&gt; classes alone.","pos":[445,591],"source":"       This object is for advanced scenarios that cannot be accomplished with the <xref:System.DirectoryServices?displayProperty=fullName> classes alone."},{"content":"To use it, you need to import one of the COM interfaces from the IADs family, then cast this property to that interface.","pos":[592,712]}]},{"pos":[48148,48171],"content":"The native ADSI object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The native ADSI object.","pos":[0,23]}]},{"pos":[48676,48728],"content":"Gets or sets the security descriptor for this entry.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the security descriptor for this entry.","pos":[0,52]}]},{"pos":[48929,49074],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the security descriptor for this directory entry.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object that represents the security descriptor for this directory entry."},{"pos":[49546,49596],"content":"Gets the provider-specific options for this entry.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the provider-specific options for this entry.","pos":[0,50]}]},{"pos":[49793,49935],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntryConfiguration\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the provider-specific options for this entry.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.DirectoryEntryConfiguration\"></xref> object that contains the provider-specific options for this entry."},{"pos":[50395,50470],"content":"Gets this entry's parent in the Active Directory Domain Services hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets this entry's parent in the Active Directory Domain Services hierarchy.","pos":[0,75]}]},{"pos":[51759,51870],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the parent of this entry.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the parent of this entry."},{"pos":[52339,52395],"content":"Sets the password to use when authenticating the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the password to use when authenticating the client.","pos":[0,56]}]},{"pos":[52407,52851],"content":"You can set the <xref:System.DirectoryServices.DirectoryEntry.Username%2A> and Password properties to specify alternate credentials with which to access the information in Active Directory Domain Services. Any other <xref:System.DirectoryServices.DirectoryEntry> objects retrieved from this instance (for example, through <xref:System.DirectoryServices.DirectoryEntry.Children%2A>) are automatically created with the same alternate credentials.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can set the <xref:System.DirectoryServices.DirectoryEntry.Username%2A> and Password properties to specify alternate credentials with which to access the information in Active Directory Domain Services. Any other <xref:System.DirectoryServices.DirectoryEntry> objects retrieved from this instance (for example, through <xref:System.DirectoryServices.DirectoryEntry.Children%2A>) are automatically created with the same alternate credentials.","pos":[0,444],"nodes":[{"content":"You can set the &lt;xref:System.DirectoryServices.DirectoryEntry.Username%2A&gt; and Password properties to specify alternate credentials with which to access the information in Active Directory Domain Services.","pos":[0,205],"source":"You can set the <xref:System.DirectoryServices.DirectoryEntry.Username%2A> and Password properties to specify alternate credentials with which to access the information in Active Directory Domain Services."},{"content":"Any other &lt;xref:System.DirectoryServices.DirectoryEntry&gt; objects retrieved from this instance (for example, through &lt;xref:System.DirectoryServices.DirectoryEntry.Children%2A&gt;) are automatically created with the same alternate credentials.","pos":[206,444],"source":" Any other <xref:System.DirectoryServices.DirectoryEntry> objects retrieved from this instance (for example, through <xref:System.DirectoryServices.DirectoryEntry.Children%2A>) are automatically created with the same alternate credentials."}]}]},{"pos":[55263,55314],"content":"The password to use when authenticating the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password to use when authenticating the client.","pos":[0,51]}]},{"pos":[55765,55857],"content":"Gets or sets the path for this <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the path for this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref>."},{"pos":[58870,58992],"content":"The path of this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object. The default is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"The path of this <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,85],"source":"The path of this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object."},{"content":"The default is an empty string (\"\").","pos":[86,122]}]},{"pos":[59469,59599],"content":"Gets the Active Directory Domain Services properties for this <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the Active Directory Domain Services properties for this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object."},{"pos":[59612,60483],"content":"If the property is not initialized, Properties calls the ADSI interface [IADs::Get](http://msdn2.microsoft.com/library/aa746347.aspx) method to retrieve the value from the cache. If the underling cache has not been loaded, [IADs::Get](http://msdn2.microsoft.com/library/aa746347.aspx) implicitly calls [IADs::GetInfo](http://msdn2.microsoft.com/library/aa746349.aspx). This method loads the values of the supported properties that have not been set in the cache from the underlying directory store. Subsequent calls to Properties retrieves the property values in the cache only. To control property cache loading, call <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>.       **Note** The Properties property is not supported for use with the Active Directory Client Extension (DSClient) for [!INCLUDE[WinNt4Family](~/add/includes/ajax-current-ext-md.md)].","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the property is not initialized, Properties calls the ADSI interface <bpt id=\"p1\">[</bpt>IADs::Get<ept id=\"p1\">](http://msdn2.microsoft.com/library/aa746347.aspx)</ept> method to retrieve the value from the cache.","pos":[0,178],"source":"If the property is not initialized, Properties calls the ADSI interface [IADs::Get](http://msdn2.microsoft.com/library/aa746347.aspx) method to retrieve the value from the cache."},{"content":"If the underling cache has not been loaded, <bpt id=\"p1\">[</bpt>IADs::Get<ept id=\"p1\">](http://msdn2.microsoft.com/library/aa746347.aspx)</ept> implicitly calls <bpt id=\"p2\">[</bpt>IADs::GetInfo<ept id=\"p2\">](http://msdn2.microsoft.com/library/aa746349.aspx)</ept>.","pos":[179,368],"source":" If the underling cache has not been loaded, [IADs::Get](http://msdn2.microsoft.com/library/aa746347.aspx) implicitly calls [IADs::GetInfo](http://msdn2.microsoft.com/library/aa746349.aspx)."},{"content":"This method loads the values of the supported properties that have not been set in the cache from the underlying directory store.","pos":[369,498]},{"content":"Subsequent calls to Properties retrieves the property values in the cache only.","pos":[499,578]},{"content":"To control property cache loading, call &lt;xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A&gt;.","pos":[579,682],"source":" To control property cache loading, call <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>."},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> The Properties property is not supported for use with the Active Directory Client Extension (DSClient) for <ph id=\"ph1\">[!INCLUDE[WinNt4Family](~/add/includes/ajax-current-ext-md.md)]</ph>.","pos":[689,869],"source":"**Note** The Properties property is not supported for use with the Active Directory Client Extension (DSClient) for [!INCLUDE[WinNt4Family](~/add/includes/ajax-current-ext-md.md)]."}]},{"pos":[60666,60796],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.PropertyCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the properties that are set on this entry.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.PropertyCollection\"></xref> object that contains the properties that are set on this entry."},{"pos":[61293,61420],"content":"Loads the property values for this <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object into the property cache.","needQuote":true,"needEscape":true,"source":"Loads the property values for this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object into the property cache."},{"pos":[62269,62338],"content":"Loads the values of the specified properties into the property cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Loads the values of the specified properties into the property cache.","pos":[0,69]}]},{"pos":[62710,62747],"content":"An array of the specified properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of the specified properties.","pos":[0,37]}]},{"pos":[63264,63357],"content":"Changes the name of this <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Changes the name of this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object."},{"pos":[63370,63677],"content":"> [!NOTE] >  This will also affect the path that is used to refer to this entry.       If <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> is `true`, be sure to call the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method on the new object to make the move permanent.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph> &gt;  This will also affect the path that is used to refer to this entry.","pos":[0,80],"source":"> [!NOTE] >  This will also affect the path that is used to refer to this entry."},{"content":"If &lt;xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A&gt; is <ph id=\"ph1\">`true`</ph>, be sure to call the &lt;xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A&gt; method on the new object to make the move permanent.","pos":[87,304],"source":"       If <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> is `true`, be sure to call the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method on the new object to make the move permanent."}]},{"pos":[63818,63844],"content":"The new name of the entry.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new name of the entry.","pos":[0,26]}]},{"pos":[64348,64459],"content":"Gets the name of the schema class for this <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the name of the schema class for this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object."},{"pos":[64472,64747],"content":"This is the same as the <xref:System.DirectoryServices.DirectoryEntry.Name%2A> property of the <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> property.       A <xref:System.DirectoryServices.DirectoryEntry> object's schema defines its properties and methods.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This is the same as the <xref:System.DirectoryServices.DirectoryEntry.Name%2A> property of the <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> property.       A <xref:System.DirectoryServices.DirectoryEntry> object's schema defines its properties and methods.","pos":[0,273],"nodes":[{"content":"This is the same as the &lt;xref:System.DirectoryServices.DirectoryEntry.Name%2A&gt; property of the &lt;xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A&gt; property.","pos":[0,166],"source":"This is the same as the <xref:System.DirectoryServices.DirectoryEntry.Name%2A> property of the <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> property."},{"content":"A &lt;xref:System.DirectoryServices.DirectoryEntry&gt; object's schema defines its properties and methods.","pos":[173,273],"source":"       A <xref:System.DirectoryServices.DirectoryEntry> object's schema defines its properties and methods."}]}]},{"pos":[67809,67915],"content":"The name of the schema class for this <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The name of the schema class for this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object."},{"pos":[68408,68446],"content":"Gets the schema object for this entry.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the schema object for this entry.","pos":[0,38]}]},{"pos":[68459,68654],"content":"An entry's schema determines a list of its mandatory and optional property names.       You can use this property to find out what properties and methods are available on the associated object.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An entry's schema determines a list of its mandatory and optional property names.       You can use this property to find out what properties and methods are available on the associated object.","pos":[0,193],"nodes":[{"content":"An entry's schema determines a list of its mandatory and optional property names.","pos":[0,81]},{"content":"You can use this property to find out what properties and methods are available on the associated object.","pos":[88,193]}]}]},{"pos":[71684,71802],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the schema class for this entry.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the schema class for this entry."},{"pos":[72316,72407],"content":"Gets or sets a value indicating whether the cache should be committed after each operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the cache should be committed after each operation.","pos":[0,91]}]},{"pos":[72420,73458],"content":"By default, changes to properties are made locally to a cache, and property values to be read are cached after the first read. When the UsePropertyCache property is `true`, access to the <xref:System.DirectoryServices.DirectoryEntry> object's properties is faster. Setting this to `false` will cause the cache to be committed after each operation.       If the UsePropertyCache property is `true` and you want to commit cached changes, call the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method. To update values in the cache after changes to the directory are made, call the <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A> method.      > [!CAUTION] >  If you call <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A> before calling <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>, any uncommitted changes to the property cache will be lost.      > [!NOTE] >  The Internet Information Services (IIS) provider does not support committing the cache after each operation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, changes to properties are made locally to a cache, and property values to be read are cached after the first read.","pos":[0,126]},{"content":"When the UsePropertyCache property is <ph id=\"ph1\">`true`</ph>, access to the &lt;xref:System.DirectoryServices.DirectoryEntry&gt; object's properties is faster.","pos":[127,264],"source":" When the UsePropertyCache property is `true`, access to the <xref:System.DirectoryServices.DirectoryEntry> object's properties is faster."},{"content":"Setting this to <ph id=\"ph1\">`false`</ph> will cause the cache to be committed after each operation.","pos":[265,347],"source":" Setting this to `false` will cause the cache to be committed after each operation."},{"content":"If the UsePropertyCache property is <ph id=\"ph1\">`true`</ph> and you want to commit cached changes, call the &lt;xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A&gt; method.","pos":[354,516],"source":"       If the UsePropertyCache property is `true` and you want to commit cached changes, call the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method."},{"content":"To update values in the cache after changes to the directory are made, call the &lt;xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A&gt; method.","pos":[517,667],"source":" To update values in the cache after changes to the directory are made, call the <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A> method."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  If you call &lt;xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A&gt; before calling &lt;xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A&gt;, any uncommitted changes to the property cache will be lost.","pos":[673,903],"source":"      > [!CAUTION] >  If you call <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A> before calling <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>, any uncommitted changes to the property cache will be lost."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The Internet Information Services (IIS) provider does not support committing the cache after each operation.","pos":[909,1030],"source":"      > [!NOTE] >  The Internet Information Services (IIS) provider does not support committing the cache after each operation."}]},{"pos":[73584,73855],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the cache should not be committed after each operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the cache should not be committed after each operation; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,194],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the cache should not be committed after each operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[195,271],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[74334,74399],"content":"Gets or sets the user name to use when authenticating the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the user name to use when authenticating the client.","pos":[0,65]}]},{"pos":[74411,74853],"content":"You can set the Username and <xref:System.DirectoryServices.DirectoryEntry.Password%2A> in order to specify alternate credentials with which to access the information in Active Directory Domain Services. Any other <xref:System.DirectoryServices.DirectoryEntry> objects retrieved from this instance (for example, through <xref:System.DirectoryServices.DirectoryEntry.Children%2A>) are automatically created with the same alternate credentials.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can set the Username and <xref:System.DirectoryServices.DirectoryEntry.Password%2A> in order to specify alternate credentials with which to access the information in Active Directory Domain Services. Any other <xref:System.DirectoryServices.DirectoryEntry> objects retrieved from this instance (for example, through <xref:System.DirectoryServices.DirectoryEntry.Children%2A>) are automatically created with the same alternate credentials.","pos":[0,442],"nodes":[{"content":"You can set the Username and &lt;xref:System.DirectoryServices.DirectoryEntry.Password%2A&gt; in order to specify alternate credentials with which to access the information in Active Directory Domain Services.","pos":[0,203],"source":"You can set the Username and <xref:System.DirectoryServices.DirectoryEntry.Password%2A> in order to specify alternate credentials with which to access the information in Active Directory Domain Services."},{"content":"Any other &lt;xref:System.DirectoryServices.DirectoryEntry&gt; objects retrieved from this instance (for example, through &lt;xref:System.DirectoryServices.DirectoryEntry.Children%2A&gt;) are automatically created with the same alternate credentials.","pos":[204,442],"source":" Any other <xref:System.DirectoryServices.DirectoryEntry> objects retrieved from this instance (for example, through <xref:System.DirectoryServices.DirectoryEntry.Children%2A>) are automatically created with the same alternate credentials."}]}]},{"pos":[77237,77289],"content":"The user name to use when authenticating the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name to use when authenticating the client.","pos":[0,52]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.DirectoryEntry\n  id: DirectoryEntry\n  children:\n  - System.DirectoryServices.DirectoryEntry.#ctor\n  - System.DirectoryServices.DirectoryEntry.#ctor(System.Object)\n  - System.DirectoryServices.DirectoryEntry.#ctor(System.String)\n  - System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)\n  - System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)\n  - System.DirectoryServices.DirectoryEntry.AuthenticationType\n  - System.DirectoryServices.DirectoryEntry.Children\n  - System.DirectoryServices.DirectoryEntry.Close\n  - System.DirectoryServices.DirectoryEntry.CommitChanges\n  - System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)\n  - System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)\n  - System.DirectoryServices.DirectoryEntry.DeleteTree\n  - System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)\n  - System.DirectoryServices.DirectoryEntry.Exists(System.String)\n  - System.DirectoryServices.DirectoryEntry.Guid\n  - System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])\n  - System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)\n  - System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])\n  - System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)\n  - System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)\n  - System.DirectoryServices.DirectoryEntry.Name\n  - System.DirectoryServices.DirectoryEntry.NativeGuid\n  - System.DirectoryServices.DirectoryEntry.NativeObject\n  - System.DirectoryServices.DirectoryEntry.ObjectSecurity\n  - System.DirectoryServices.DirectoryEntry.Options\n  - System.DirectoryServices.DirectoryEntry.Parent\n  - System.DirectoryServices.DirectoryEntry.Password\n  - System.DirectoryServices.DirectoryEntry.Path\n  - System.DirectoryServices.DirectoryEntry.Properties\n  - System.DirectoryServices.DirectoryEntry.RefreshCache\n  - System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])\n  - System.DirectoryServices.DirectoryEntry.Rename(System.String)\n  - System.DirectoryServices.DirectoryEntry.SchemaClassName\n  - System.DirectoryServices.DirectoryEntry.SchemaEntry\n  - System.DirectoryServices.DirectoryEntry.UsePropertyCache\n  - System.DirectoryServices.DirectoryEntry.Username\n  langs:\n  - csharp\n  name: DirectoryEntry\n  nameWithType: DirectoryEntry\n  fullName: System.DirectoryServices.DirectoryEntry\n  type: Class\n  summary: The DirectoryEntry class encapsulates a node or object in the Active Directory Domain Services hierarchy.\n  remarks: \"Use this class for binding to objects, or reading and updating attributes. DirectoryEntry, along with helper classes, provides support for life-cycle management and navigation methods. These include creating, deleting, renaming, moving a child node, and enumerating children. After you modify a node, you must commit your changes in order for them to be saved to the tree. For more information, see the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> property.  \\n  \\n DirectoryEntry can be used to access regular entries and some, but not all, information from schema entries.  \\n  \\n The Active Directory Domain Services hierarchy contains up to several thousand nodes. Each node represents an object, such as a network printer or a user in a domain. Corporate networks constantly change as new employees are hired and objects such as network printers and computers are added. Active Directory Service Interfaces (ADSI) technology provides ways to programmatically add these objects to the directory tree.  \\n  \\n To create a directory entry in the hierarchy, use the <xref:System.DirectoryServices.DirectoryEntry.Children%2A> property. The <xref:System.DirectoryServices.DirectoryEntry.Children%2A> property is a collection that provides an <xref:System.DirectoryServices.DirectoryEntries.Add%2A> method, through which you add a node to the collection directly below the parent node that you are currently bound to. When adding a node to the collection, you must specify a name for the new node and the name of a schema template that you want to associate with the node. For example, you might want to use a schema titled \\\"Computer\\\" to add new computers to the hierarchy.  \\n  \\n This class also contains attribute caching, which can be useful for optimizing network traffic. To use attribute caching, see the <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> property.  \\n  \\n The classes associated with the DirectoryEntry component can be used with any of the Active Directory Domain Services service providers. Some of the current providers are Internet Information Services (IIS), Lightweight Directory Access Protocol (LDAP), Novell NetWare Directory Service (NDS), and WinNT.  \\n  \\n> [!NOTE]\\n>  It is assumed that you have a general understanding of Active Directory Domain Services before using this class. For more information, see the <xref:System.DirectoryServices?displayProperty=fullName> namespace overview.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.DirectoryServices.Design.DirectoryEntryConverter))]\n\n      [System.DirectoryServices.DSDescription(\"DirectoryEntryDesc\")]\n\n      public class DirectoryEntry : System.ComponentModel.Component\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.#ctor\n  id: '#ctor'\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: DirectoryEntry()\n  nameWithType: DirectoryEntry.DirectoryEntry()\n  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry()\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> class.\n  syntax:\n    content: public DirectoryEntry ();\n    parameters: []\n  overload: System.DirectoryServices.DirectoryEntry.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: DirectoryEntry(Object)\n  nameWithType: DirectoryEntry.DirectoryEntry(Object)\n  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry(Object)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> class that binds to the specified native Active Directory Domain Services object.\n  remarks: This constructor enables a program to use the methods and properties of the <xref:System.DirectoryServices.DirectoryEntry> class on a native Active Directory Domain Services object that implements the IADs interface through a native API. For more information about the IADs interface, see the topic [IADs](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp) in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).\n  syntax:\n    content: public DirectoryEntry (object adsObject);\n    parameters:\n    - id: adsObject\n      type: System.Object\n      description: The name of the native Active Directory Domain Services object to bind to.\n  overload: System.DirectoryServices.DirectoryEntry.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: DirectoryEntry(String)\n  nameWithType: DirectoryEntry.DirectoryEntry(String)\n  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry(String)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> class that binds this instance to the node in Active Directory Domain Services located at the specified path.\n  remarks: ''\n  example:\n  - \"The following example binds a <xref:System.DirectoryServices.DirectoryEntry> object to the directory entry at the specified path, and displays the <xref:System.DirectoryServices.DirectoryEntry.Path%2A> property of each child entry that is specified by the node's <xref:System.DirectoryServices.DirectoryEntry.Children%2A> property.  \\n  \\n```vb  \\nPublic Class PrintChildren  \\n  \\n    'Entry point which delegates to C-style main Private Function.  \\n    Public Overloads Shared Sub Main()  \\n        Main(System.Environment.GetCommandLineArgs())  \\n    End Sub  \\n  \\n    Overloads Public Shared Sub Main(args() As String)  \\n        Dim objDE As DirectoryEntry  \\n        Dim strPath As String = \\\"LDAP://DC=onecity,DC=corp,DC=fabrikam,DC=com\\\"  \\n        If args.Length > 0 Then  \\n            strPath = args(1)  \\n        End If   \\n        ' Create a new DirectoryEntry with the given path.  \\n        objDE = New DirectoryEntry(strPath)  \\n  \\n        Dim objChildDE As DirectoryEntry  \\n        For Each objChildDE In  objDE.Children  \\n            Console.WriteLine(objChildDE.Path)  \\n        Next objChildDE  \\n    End Sub 'Main  \\nEnd Class 'PrintChildren  \\n  \\n```  \\n  \\n```c#  \\npublic class PrintChildren{  \\n   public static void Main(String[] args)  \\n   {  \\n      DirectoryEntry objDE;  \\n      String strPath=\\\"LDAP://DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\n      if(args.Length>0)strPath=args[1];  \\n  \\n      // Create a new DirectoryEntry with the given path.  \\n      objDE=new DirectoryEntry(strPath);  \\n  \\n      foreach(DirectoryEntry objChildDE in objDE.Children)  \\n        Console.WriteLine(objChildDE.Path);  \\n   }  \\n }  \\n  \\n```  \\n  \\n```cpp#  \\nint main()  \\n{  \\n    String^ args[] = Environment::GetCommandLineArgs();  \\n    DirectoryEntry^ objDE;  \\n    String^ strPath = \\\"LDAP://DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\n    if(args->Length>1)  \\n    {  \\n        strPath=args[1];  \\n    }  \\n  \\n    // Create a new DirectoryEntry with the given path.  \\n    objDE = gcnew DirectoryEntry(strPath);  \\n  \\n    System::Collections::IEnumerator^ enum0 = objDE->Children->GetEnumerator();  \\n    while (enum0->MoveNext())  \\n    {  \\n        DirectoryEntry^ objChildDE = safe_cast<DirectoryEntry^>(enum0->Current);  \\n        Console::WriteLine(objChildDE->Path);  \\n    }  \\n}  \\n  \\n```\"\n  syntax:\n    content: public DirectoryEntry (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path at which to bind the DirectoryEntry to the directory. The <xref:System.DirectoryServices.DirectoryEntry.Path*> property is initialized to this value.\n  overload: System.DirectoryServices.DirectoryEntry.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String)'\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: DirectoryEntry(String,String,String)\n  nameWithType: DirectoryEntry.DirectoryEntry(String,String,String)\n  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry(String,String,String)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> class.\n  syntax:\n    content: public DirectoryEntry (string path, string username, string password);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path of this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref>. The <xref:System.DirectoryServices.DirectoryEntry.Path*> property is initialized to this value.\n    - id: username\n      type: System.String\n      description: The user name to use when authenticating the client. The <xref:System.DirectoryServices.DirectoryEntry.Username*> property is initialized to this value.\n    - id: password\n      type: System.String\n      description: The password to use when authenticating the client. The <xref:System.DirectoryServices.DirectoryEntry.Password*> property is initialized to this value.\n  overload: System.DirectoryServices.DirectoryEntry.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)\n  id: '#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)'\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: DirectoryEntry(String,String,String,AuthenticationTypes)\n  nameWithType: DirectoryEntry.DirectoryEntry(String,String,String,AuthenticationTypes)\n  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry(String,String,String,AuthenticationTypes)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> class.\n  syntax:\n    content: public DirectoryEntry (string path, string username, string password, System.DirectoryServices.AuthenticationTypes authenticationType);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path of this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref>. The <xref:System.DirectoryServices.DirectoryEntry.Path*> property is initialized to this value.\n    - id: username\n      type: System.String\n      description: The user name to use when authenticating the client. The <xref:System.DirectoryServices.DirectoryEntry.Username*> property is initialized to this value.\n    - id: password\n      type: System.String\n      description: The password to use when authenticating the client. The <xref:System.DirectoryServices.DirectoryEntry.Password*> property is initialized to this value.\n    - id: authenticationType\n      type: System.DirectoryServices.AuthenticationTypes\n      description: One of the <xref href=\"System.DirectoryServices.AuthenticationTypes\"></xref> values. The <xref:System.DirectoryServices.DirectoryEntry.AuthenticationType*> property is initialized to this value.\n  overload: System.DirectoryServices.DirectoryEntry.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.AuthenticationType\n  id: AuthenticationType\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: AuthenticationType\n  nameWithType: DirectoryEntry.AuthenticationType\n  fullName: System.DirectoryServices.DirectoryEntry.AuthenticationType\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets the type of authentication to use.\n  remarks: Prior to [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], the default value is <xref:System.DirectoryServices.AuthenticationTypes>. Beginning with [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], the default value is <xref:System.DirectoryServices.AuthenticationTypes>.\n  syntax:\n    content: public System.DirectoryServices.AuthenticationTypes AuthenticationType { get; set; }\n    return:\n      type: System.DirectoryServices.AuthenticationTypes\n      description: One of the <xref href=\"System.DirectoryServices.AuthenticationTypes\"></xref> values.\n  overload: System.DirectoryServices.DirectoryEntry.AuthenticationType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.Children\n  id: Children\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: Children\n  nameWithType: DirectoryEntry.Children\n  fullName: System.DirectoryServices.DirectoryEntry.Children\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the child entries of this node in the Active Directory Domain Services hierarchy.\n  remarks: \"The child entries are only the immediate children of this node.  \\n  \\n Use this property to find, retrieve, or create a directory entry in the hierarchy. This property is a collection that, along with the usual iteration capabilities, provides an <xref:System.DirectoryServices.DirectoryEntries.Add%2A> method through which you add a node to the collection directly below the parent node that you are currently bound to. When adding a node to the collection, you must specify a name for the new node and the name of a schema template that you want to associate with the node. For example, you might want to use a schema titled \\\"Computer\\\" to add new computers to the hierarchy.  \\n  \\n> [!NOTE]\\n>  By default, changes are made locally to a cache. After you modify or add a node, you must call the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method to commit your changes in order for them to be saved to the tree. If you call <xref:System.DirectoryServices.DirectoryEntry.RefreshCache> before calling <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>, any uncommitted changes to the property cache will be lost. For more information, see the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> and <xref:System.DirectoryServices.DirectoryEntry.RefreshCache> methods, and the <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> property.\"\n  syntax:\n    content: public System.DirectoryServices.DirectoryEntries Children { get; }\n    return:\n      type: System.DirectoryServices.DirectoryEntries\n      description: A <xref href=\"System.DirectoryServices.DirectoryEntries\"></xref> object containing the child entries of this node in the Active Directory Domain Services hierarchy.\n  overload: System.DirectoryServices.DirectoryEntry.Children*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.Close\n  id: Close\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: DirectoryEntry.Close()\n  fullName: System.DirectoryServices.DirectoryEntry.Close()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Closes the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object and releases any system resources that are associated with this component.\n  remarks: \"Call this method to release unmanaged system resources, without waiting for garbage collection.  \\n  \\n Following a call to Close, any operations on the <xref:System.DirectoryServices.DirectoryEntry> might raise exceptions.\"\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: System.DirectoryServices.DirectoryEntry.Close*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.CommitChanges\n  id: CommitChanges\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: CommitChanges()\n  nameWithType: DirectoryEntry.CommitChanges()\n  fullName: System.DirectoryServices.DirectoryEntry.CommitChanges()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Saves changes that are made to a directory entry to the underlying directory store.\n  remarks: \"By default, changes to properties are made locally to a cache, and property values to be read are cached after the first read. For more information, see <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>.  \\n  \\n Changes made to the cache include changes to the properties as well as calls to <xref:System.DirectoryServices.DirectoryEntries.Add%2A> (if this is the newly created entry).  \\n  \\n> [!CAUTION]\\n>  If you call <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A> before calling CommitChanges, any uncommitted changes to the property cache will be lost.  \\n  \\n## Security  \\n  \\n-   Use the <xref:System.DirectoryServices.DirectoryServicesPermission> class for reading, writing, deleting, changing, and adding to the Active Directory Domain Services hierarchy. Associated enumeration: <xref:System.DirectoryServices.DirectoryServicesPermissionAccess>.\"\n  syntax:\n    content: public void CommitChanges ();\n    parameters: []\n  overload: System.DirectoryServices.DirectoryEntry.CommitChanges*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)\n  id: CopyTo(System.DirectoryServices.DirectoryEntry)\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: CopyTo(DirectoryEntry)\n  nameWithType: DirectoryEntry.CopyTo(DirectoryEntry)\n  fullName: System.DirectoryServices.DirectoryEntry.CopyTo(DirectoryEntry)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Creates a copy of this entry as a child of the specified parent.\n  remarks: \"If <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> is `true`, call <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> on the new object to make the copy permanent.  \\n  \\n The Lightweight Directory Access Protocol (LDAP) provider does not currently support the CopyTo method.\"\n  syntax:\n    content: public System.DirectoryServices.DirectoryEntry CopyTo (System.DirectoryServices.DirectoryEntry newParent);\n    parameters:\n    - id: newParent\n      type: System.DirectoryServices.DirectoryEntry\n      description: The distinguished name of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that will be the parent for the copy that is being created.\n    return:\n      type: System.DirectoryServices.DirectoryEntry\n      description: A <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the copy of this entry as a child of the new parent.\n  overload: System.DirectoryServices.DirectoryEntry.CopyTo*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> is not a container.\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)\n  id: CopyTo(System.DirectoryServices.DirectoryEntry,System.String)\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: CopyTo(DirectoryEntry,String)\n  nameWithType: DirectoryEntry.CopyTo(DirectoryEntry,String)\n  fullName: System.DirectoryServices.DirectoryEntry.CopyTo(DirectoryEntry,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Creates a copy of this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object, as a child of the specified parent <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object, with the specified new name.\n  remarks: \"The Lightweight Directory Access Protocol (LDAP) provider does not currently support this method.  \\n  \\n If <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> is `true`, call <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> on the new object to make the copy permanent.\"\n  syntax:\n    content: public System.DirectoryServices.DirectoryEntry CopyTo (System.DirectoryServices.DirectoryEntry newParent, string newName);\n    parameters:\n    - id: newParent\n      type: System.DirectoryServices.DirectoryEntry\n      description: The DN of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that will be the parent for the copy that is being created.\n    - id: newName\n      type: System.String\n      description: The name of the copy of this entry.\n    return:\n      type: System.DirectoryServices.DirectoryEntry\n      description: A renamed copy of this entry as a child of the specified parent.\n  overload: System.DirectoryServices.DirectoryEntry.CopyTo*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object is not a container.\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.DeleteTree\n  id: DeleteTree\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: DeleteTree()\n  nameWithType: DirectoryEntry.DeleteTree()\n  fullName: System.DirectoryServices.DirectoryEntry.DeleteTree()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Deletes this entry and its entire subtree from the Active Directory Domain Services hierarchy.\n  remarks: \"Of the Active Directory Service Interfaces (ADSI) system-supplied providers, only the Lightweight Directory Access Protocol (LDAP) currently supports this operation.  \\n  \\n> [!CAUTION]\\n>  The entry and its entire subtree are deleted from the Active Directory Domain Services hierarchy.  \\n  \\n## Security  \\n  \\n-   Use <xref:System.DirectoryServices.DirectoryServicesPermission> for deleting entries from the Active Directory Domain Services hierarchy. Associated enumeration: <xref:System.DirectoryServices.DirectoryServicesPermissionAccess?displayProperty=fullName>.\"\n  syntax:\n    content: public void DeleteTree ();\n    parameters: []\n  overload: System.DirectoryServices.DirectoryEntry.DeleteTree*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> is not a container.\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: DirectoryEntry.Dispose(Boolean)\n  fullName: System.DirectoryServices.DirectoryEntry.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Disposes of the resources (other than memory) that are used by the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref>.\n  remarks: \"This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected Dispose method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes <xref:System.ComponentModel.Component.Dispose%2A> with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.DirectoryServices.DirectoryEntry> object references. This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.  \\n  \\n For more information about the <xref:System.ComponentModel.Component.Dispose%2A> and <xref:System.Object.Finalize%2A> methods, see [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).\"\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources.\n  overload: System.DirectoryServices.DirectoryEntry.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.Exists(System.String)\n  id: Exists(System.String)\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: Exists(String)\n  nameWithType: DirectoryEntry.Exists(String)\n  fullName: System.DirectoryServices.DirectoryEntry.Exists(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Determines if the specified path represents an actual entry in the directory service.\n  remarks: ''\n  example:\n  - \"The following example takes one argument and determines whether the path corresponds to a valid <xref:System.DirectoryServices.DirectoryEntry>.  \\n  \\n```vb  \\nDim myADSPath As String = \\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\"  \\n' Determine whether the given path is correct for the DirectoryEntry.  \\nIf DirectoryEntry.Exists(myADSPath) Then  \\n   Console.WriteLine(\\\"The path {0} is valid\\\",myADSPath)  \\nElse  \\n   Console.WriteLine(\\\"The path {0} is invalid\\\",myADSPath)  \\nEnd If  \\n  \\n```  \\n  \\n```c#  \\nstring myADSPath =\\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\n  \\n// Determine whether the given path is correct for the DirectoryEntry.  \\nif (DirectoryEntry.Exists(myADSPath))  \\n{  \\n    Console.WriteLine(\\\"The path {0} is valid\\\",myADSPath);  \\n}  \\n    else  \\n{  \\n    Console.WriteLine(\\\"The path {0} is invalid\\\",myADSPath);  \\n}  \\n  \\n```  \\n  \\n```cpp#  \\nString^ myADSPath = \\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\n// Determine whether the given path is correct for the DirectoryEntry.  \\nif (DirectoryEntry::Exists(myADSPath))   \\n{  \\n    Console::WriteLine(\\\"The path {0} is valid\\\", myADSPath);  \\n}   \\nelse   \\n{  \\n    Console::WriteLine(\\\"The path {0} is invalid\\\", myADSPath);  \\n}  \\n  \\n```\"\n  syntax:\n    content: public static bool Exists (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path of the entry to verify.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified path represents a valid entry in the directory service; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.DirectoryServices.DirectoryEntry.Exists*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.Guid\n  id: Guid\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: Guid\n  nameWithType: DirectoryEntry.Guid\n  fullName: System.DirectoryServices.DirectoryEntry.Guid\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the GUID of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref>.\n  remarks: When binding to an object in Active Directory Domain Services, use the <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> property.\n  example:\n  - \"The following example demonstrates the Guid and <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> properties of the <xref:System.DirectoryServices.DirectoryEntry> class. This example gets the user-specified <xref:System.DirectoryServices.DirectoryEntry> and displays its Guid and <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> properties.  \\n  \\n```vb  \\nDim myADSPath As [String] = \\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\"  \\nDim myDirectoryEntry As New DirectoryEntry(myADSPath)  \\n  \\n' Display the Guid and NativeGuid.  \\nConsole.WriteLine(\\\"The GUID of the ADS object:\\\" + myDirectoryEntry.Guid.ToString)  \\nConsole.WriteLine(\\\"The Native GUID of the ADS\\\" + \\\"object:\\\" + myDirectoryEntry.NativeGuid)  \\n  \\n```  \\n  \\n```c#  \\nString myADSPath = \\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\nDirectoryEntry myDirectoryEntry=new DirectoryEntry(myADSPath);  \\n  \\n// Display the Guid and NativeGuid.  \\nConsole.WriteLine(\\\"The GUID of the ADS object:\\\"+  \\n                  myDirectoryEntry.Guid);  \\nConsole.WriteLine(\\\"The Native GUID of the ADS\\\"+  \\n                  \\\"object:\\\"+myDirectoryEntry.NativeGuid);  \\n  \\n```  \\n  \\n```cpp#  \\nString^ myADSPath = \\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\nDirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath);  \\n  \\n// Display the Guid and NativeGuid.  \\nConsole::WriteLine(\\\"The GUID of the ADS object: {0}\\\", myDirectoryEntry->Guid);  \\nConsole::WriteLine(\\\"The Native GUID of the ADS object: {0}\\\",  \\n                   myDirectoryEntry->NativeGuid);  \\n  \\n```\"\n  syntax:\n    content: public Guid Guid { get; }\n    return:\n      type: System.Guid\n      description: A <xref:System.Guid> structure that represents the GUID of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref>.\n  overload: System.DirectoryServices.DirectoryEntry.Guid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])\n  id: Invoke(System.String,System.Object[])\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: Invoke(String,Object[])\n  nameWithType: DirectoryEntry.Invoke(String,Object[])\n  fullName: System.DirectoryServices.DirectoryEntry.Invoke(String,Object[])\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Calls a method on the native Active Directory Domain Services object.\n  remarks: If the return value of the native method implements the IADs interface, a corresponding <xref:System.DirectoryServices.DirectoryEntry> is returned. For more information about the IADs interface, see the topic [IADs](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp) in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp).\n  syntax:\n    content: public object Invoke (string methodName, object[] args);\n    parameters:\n    - id: methodName\n      type: System.String\n      description: The name of the method to invoke.\n    - id: args\n      type: System.Object[]\n      description: An array of type <xref:System.Object> objects that contains the arguments of the method to invoke.\n    return:\n      type: System.Object\n      description: The return value of the invoked method.\n  overload: System.DirectoryServices.DirectoryEntry.Invoke*\n  exceptions:\n  - type: System.DirectoryServices.DirectoryServicesCOMException\n    commentId: T:System.DirectoryServices.DirectoryServicesCOMException\n    description: The native method threw a <xref:System.Runtime.InteropServices.COMException> exception.\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: The native method threw a <xref:System.Reflection.TargetInvocationException> exception. The <xref:System.Exception.InnerException*> property contains a <xref:System.Runtime.InteropServices.COMException> exception that contains information about the actual error that occurred.\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)\n  id: InvokeGet(System.String)\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: InvokeGet(String)\n  nameWithType: DirectoryEntry.InvokeGet(String)\n  fullName: System.DirectoryServices.DirectoryEntry.InvokeGet(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets a property from the native Active Directory Domain Services object.\n  remarks: This method should not be used. The <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> property should be used to access the properties of the <xref:System.DirectoryServices.DirectoryEntry> object.\n  syntax:\n    content: public object InvokeGet (string propertyName);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: The name of the property to get.\n    return:\n      type: System.Object\n      description: An object that represents the requested property.\n  overload: System.DirectoryServices.DirectoryEntry.InvokeGet*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])\n  id: InvokeSet(System.String,System.Object[])\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: InvokeSet(String,Object[])\n  nameWithType: DirectoryEntry.InvokeSet(String,Object[])\n  fullName: System.DirectoryServices.DirectoryEntry.InvokeSet(String,Object[])\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Sets a property on the native Active Directory Domain Services object.\n  remarks: This method should not be used. The <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> property should be used to access the properties of the <xref:System.DirectoryServices.DirectoryEntry> object.\n  syntax:\n    content: public void InvokeSet (string propertyName, object[] args);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: The name of the property to set.\n    - id: args\n      type: System.Object[]\n      description: The Active Directory Domain Services object to set.\n  overload: System.DirectoryServices.DirectoryEntry.InvokeSet*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)\n  id: MoveTo(System.DirectoryServices.DirectoryEntry)\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: MoveTo(DirectoryEntry)\n  nameWithType: DirectoryEntry.MoveTo(DirectoryEntry)\n  fullName: System.DirectoryServices.DirectoryEntry.MoveTo(DirectoryEntry)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Moves this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object to the specified parent.\n  remarks: If <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> is `true`, call the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method on the new object to make the move permanent.\n  syntax:\n    content: public void MoveTo (System.DirectoryServices.DirectoryEntry newParent);\n    parameters:\n    - id: newParent\n      type: System.DirectoryServices.DirectoryEntry\n      description: The parent to which you want to move this entry.\n  overload: System.DirectoryServices.DirectoryEntry.MoveTo*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> is not a container.\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)\n  id: MoveTo(System.DirectoryServices.DirectoryEntry,System.String)\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: MoveTo(DirectoryEntry,String)\n  nameWithType: DirectoryEntry.MoveTo(DirectoryEntry,String)\n  fullName: System.DirectoryServices.DirectoryEntry.MoveTo(DirectoryEntry,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Moves this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object to the specified parent and changes its name to the specified value.\n  remarks: If <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> is `true`, call <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> on the new object to make the move permanent.\n  syntax:\n    content: public void MoveTo (System.DirectoryServices.DirectoryEntry newParent, string newName);\n    parameters:\n    - id: newParent\n      type: System.DirectoryServices.DirectoryEntry\n      description: The parent to which you want to move this entry.\n    - id: newName\n      type: System.String\n      description: The new name of this entry.\n  overload: System.DirectoryServices.DirectoryEntry.MoveTo*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> is not a container.\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.Name\n  id: Name\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: Name\n  nameWithType: DirectoryEntry.Name\n  fullName: System.DirectoryServices.DirectoryEntry.Name\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the name of the object as named with the underlying directory service.\n  remarks: This name, along with <xref:System.DirectoryServices.DirectoryEntry.SchemaClassName%2A>, distinguishes this entry from its siblings and must be unique among its siblings in each container.\n  example:\n  - \"The following example creates a <xref:System.DirectoryServices.DirectoryEntry> for the node in the Active Directory Domain Services. It then displays the Name and <xref:System.DirectoryServices.DirectoryEntry.Path%2A> properties of its child nodes.  \\n  \\n```vb  \\nDim myADSPath As String = \\\"LDAP://onecity/CN=Users,DC=onecity,  \\n           _DC=corp,DC=fabrikam,DC=com\\\"  \\nDim myDirectoryEntry As New DirectoryEntry(myADSPath)  \\n  \\nConsole.WriteLine(\\\"DirectoryEntry Name :\\\" + myDirectoryEntry.Name)  \\nConsole.WriteLine(ControlChars.NewLine _  \\n        + \\\"The child entries for this node in the Active Directory Domain Services hierarchy\\\")  \\n  \\nDim myDirectoryEntryChild As DirectoryEntry  \\nFor Each myDirectoryEntryChild In  myDirectoryEntry.Children  \\n   Console.WriteLine(myDirectoryEntryChild.Path)  \\nNext myDirectoryEntryChild  \\n```  \\n  \\n```c#  \\nString myADSPath = \\\"LDAP://onecity/CN=Users,  \\n             DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\nDirectoryEntry myDirectoryEntry=new DirectoryEntry(myADSPath);  \\n  \\nConsole.WriteLine(\\\"DirectoryEntry Name :\\\"+ myDirectoryEntry.Name);  \\nConsole.WriteLine(\\\"\\\\nThe child entries for this node \\\"+  \\n   \\\"in the Active Directory Domain Services hierarchy\\\");  \\n  \\nforeach(DirectoryEntry myDirectoryEntryChild in  \\n   myDirectoryEntry.Children)  \\n{  \\n   Console.WriteLine(myDirectoryEntryChild.Path);  \\n}  \\n  \\n```  \\n  \\n```cpp#  \\nString^ myADSPath = \\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\nDirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath);  \\n  \\nConsole::WriteLine(\\\"DirectoryEntry Name : {0}\\\", myDirectoryEntry->Name);  \\nConsole::WriteLine(\\\"\\\\nThe child entries for this node in the Active Directory Domain Services hierarchy\\\");  \\n  \\nCollections::IEnumerator^ myEnumerator = myDirectoryEntry->Children->GetEnumerator();  \\nwhile (myEnumerator->MoveNext())   \\n{  \\n    DirectoryEntry^ myDirectoryEntryChild = safe_cast<DirectoryEntry^>(myEnumerator->Current);  \\n    Console::WriteLine(myDirectoryEntryChild->Path);  \\n}  \\n```\"\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The name of the object as named with the underlying directory service.\n  overload: System.DirectoryServices.DirectoryEntry.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.NativeGuid\n  id: NativeGuid\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: NativeGuid\n  nameWithType: DirectoryEntry.NativeGuid\n  fullName: System.DirectoryServices.DirectoryEntry.NativeGuid\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the GUID of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref>, as returned from the provider.\n  remarks: \"Use the NativeGuid property when binding an object in Active Directory Domain Services.  \\n  \\n> [!NOTE]\\n>  The Lightweight Directory Access Protocol (LDAP) provider returns the globally unique identifier of a <xref:System.DirectoryServices.DirectoryEntry> in a different format than the Internet Information Services (IIS), Novell NetWare Directory Server (NDS), and WinNT providers.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DirectoryServices.DirectoryEntry.Guid%2A> and NativeGuid properties of the <xref:System.DirectoryServices.DirectoryEntry> class. This example gets the user-specified <xref:System.DirectoryServices.DirectoryEntry> and displays its <xref:System.DirectoryServices.DirectoryEntry.Guid%2A> and NativeGuid properties.  \\n  \\n```vb  \\nDim myADSPath As [String] = \\\"LDAP://onecity/CN=Users,  \\n             DC=onecity,DC=corp,DC=fabrikam,DC=com\\\"  \\nDim myDirectoryEntry As New DirectoryEntry(myADSPath)  \\n  \\n' Display the Guid and NativeGuid.  \\nConsole.WriteLine(\\\"The GUID of the ADS object:\\\" + myDirectoryEntry.Guid.ToString)  \\nConsole.WriteLine(\\\"The Native GUID of the ADS\\\" + \\\"object:\\\" +   \\n             myDirectoryEntry.NativeGuid)  \\n```  \\n  \\n```c#  \\nString myADSPath = \\\"LDAP://onecity/CN=Users,  \\n             DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\nDirectoryEntry myDirectoryEntry=new DirectoryEntry(myADSPath);  \\n  \\n// Display the Guid and NativeGuid.  \\nConsole.WriteLine(\\\"The GUID of the ADS object:\\\"+  \\n                  myDirectoryEntry.Guid);  \\nConsole.WriteLine(\\\"The Native GUID of the ADS\\\"+  \\n                  \\\"object:\\\"+myDirectoryEntry.NativeGuid);  \\n  \\n```  \\n  \\n```cpp#  \\nString^ myADSPath = \\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\nDirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath);  \\n  \\n// Display the Guid and NativeGuid.  \\nConsole::WriteLine(\\\"The GUID of the ADS object: {0}\\\", myDirectoryEntry->Guid));  \\nConsole::WriteLine(\\\"The Native GUID of the ADS object: {0}\\\",  \\n                   myDirectoryEntry->NativeGuid);  \\n```\"\n  syntax:\n    content: public string NativeGuid { get; }\n    return:\n      type: System.String\n      description: A <xref:System.Guid> structure that represents the GUID of the <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref>, as returned from the provider.\n  overload: System.DirectoryServices.DirectoryEntry.NativeGuid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.NativeObject\n  id: NativeObject\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: NativeObject\n  nameWithType: DirectoryEntry.NativeObject\n  fullName: System.DirectoryServices.DirectoryEntry.NativeObject\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the native Active Directory Service Interfaces (ADSI) object.\n  remarks: \"Use this property to cast the native Active Directory Domain Services object, which implements the IADs interface, when you want to use a COM interface. For more information about the IADs interface, see the topic [IADs](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp) in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp).  \\n  \\n This object is for advanced scenarios that cannot be accomplished with the <xref:System.DirectoryServices?displayProperty=fullName> classes alone. To use it, you need to import one of the COM interfaces from the IADs family, then cast this property to that interface.\"\n  syntax:\n    content: public object NativeObject { get; }\n    return:\n      type: System.Object\n      description: The native ADSI object.\n  overload: System.DirectoryServices.DirectoryEntry.NativeObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.ObjectSecurity\n  id: ObjectSecurity\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: ObjectSecurity\n  nameWithType: DirectoryEntry.ObjectSecurity\n  fullName: System.DirectoryServices.DirectoryEntry.ObjectSecurity\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets the security descriptor for this entry.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectorySecurity ObjectSecurity { get; set; }\n    return:\n      type: System.DirectoryServices.ActiveDirectorySecurity\n      description: An <xref href=\"System.DirectoryServices.ActiveDirectorySecurity\"></xref> object that represents the security descriptor for this directory entry.\n  overload: System.DirectoryServices.DirectoryEntry.ObjectSecurity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.Options\n  id: Options\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: Options\n  nameWithType: DirectoryEntry.Options\n  fullName: System.DirectoryServices.DirectoryEntry.Options\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the provider-specific options for this entry.\n  syntax:\n    content: public System.DirectoryServices.DirectoryEntryConfiguration Options { get; }\n    return:\n      type: System.DirectoryServices.DirectoryEntryConfiguration\n      description: A <xref href=\"System.DirectoryServices.DirectoryEntryConfiguration\"></xref> object that contains the provider-specific options for this entry.\n  overload: System.DirectoryServices.DirectoryEntry.Options*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.Parent\n  id: Parent\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: Parent\n  nameWithType: DirectoryEntry.Parent\n  fullName: System.DirectoryServices.DirectoryEntry.Parent\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets this entry's parent in the Active Directory Domain Services hierarchy.\n  remarks: ''\n  example:\n  - \"The following example searches a given <xref:System.DirectoryServices.DirectoryEntry> and displays the <xref:System.DirectoryServices.DirectoryEntry.Name%2A> and Parent of the result.  \\n  \\n```vb  \\nDim myADSPath As String = _   \\n          \\\"LDAP://onecity/CN=user,CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\"  \\nDim myDirectoryEntry As New DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword)  \\n  \\nConsole.WriteLine(\\\"Parent is :\\\" + myDirectoryEntry.Parent.Path)  \\n  \\n```  \\n  \\n```c#  \\nString myADSPath = \\\"LDAP://onecity/CN=user,CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\nDirectoryEntry myDirectoryEntry=new DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  \\n  \\nConsole.WriteLine(\\\"Parent is :\\\"+myDirectoryEntry.Parent.Path);  \\n```  \\n  \\n```cpp#  \\nString^ myADSPath = \\\"LDAP://onecity/CN=user,CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\nDirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  \\n  \\nConsole::WriteLine(\\\"Parent is :{0}\\\", myDirectoryEntry->Parent->Path);  \\n  \\n```\"\n  syntax:\n    content: public System.DirectoryServices.DirectoryEntry Parent { get; }\n    return:\n      type: System.DirectoryServices.DirectoryEntry\n      description: A <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the parent of this entry.\n  overload: System.DirectoryServices.DirectoryEntry.Parent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.Password\n  id: Password\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: Password\n  nameWithType: DirectoryEntry.Password\n  fullName: System.DirectoryServices.DirectoryEntry.Password\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Sets the password to use when authenticating the client.\n  remarks: You can set the <xref:System.DirectoryServices.DirectoryEntry.Username%2A> and Password properties to specify alternate credentials with which to access the information in Active Directory Domain Services. Any other <xref:System.DirectoryServices.DirectoryEntry> objects retrieved from this instance (for example, through <xref:System.DirectoryServices.DirectoryEntry.Children%2A>) are automatically created with the same alternate credentials.\n  example:\n  - \"The following example demonstrates the <xref:System.DirectoryServices.DirectoryEntry.Username%2A> and Password properties of the <xref:System.DirectoryServices.DirectoryEntry> class. This example gets the user-specified <xref:System.DirectoryServices.DirectoryEntry> and the <xref:System.DirectoryServices.DirectoryEntry.Path%2A> of all its <xref:System.DirectoryServices.DirectoryEntry.Children%2A>.  \\n  \\n```vb  \\nDim myADSPath As String = _  \\n      \\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\"  \\n  \\n' Create an Instance of DirectoryEntry.  \\nDim myDirectoryEntry As New DirectoryEntry(myADSPath)  \\nmyDirectoryEntry.Username = UserName  \\nmyDirectoryEntry.Password = SecurelyStoredPassword  \\n  \\n' Get the Child ADS objects.  \\nConsole.WriteLine(\\\"The Child ADS objects are:\\\")  \\nDim myChildDirectoryEntry As DirectoryEntry  \\nFor Each myChildDirectoryEntry In  myDirectoryEntry.Children  \\n   Console.WriteLine(myChildDirectoryEntry.Path)  \\nNext myChildDirectoryEntry   \\n```  \\n  \\n```c#  \\nString myADSPath = \\\"LDAP://onecity/CN=Users,  \\n         DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\n  \\n// Create an Instance of DirectoryEntry.  \\nDirectoryEntry myDirectoryEntry = new DirectoryEntry(myADSPath);  \\nmyDirectoryEntry.Username = UserName;  \\nmyDirectoryEntry.Password = SecurelyStoredPassword;  \\n  \\n// Get the Child ADS objects.  \\nConsole.WriteLine(\\\"The Child ADS objects are:\\\");  \\nforeach(DirectoryEntry myChildDirectoryEntry in myDirectoryEntry.Children)  \\n   Console.WriteLine(myChildDirectoryEntry.Path);  \\n  \\n```  \\n  \\n```cpp#  \\nString^ myADSPath = \\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\n  \\n// Create an Instance of DirectoryEntry.  \\nDirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath);  \\nmyDirectoryEntry->Username = UserName;  \\nmyDirectoryEntry->Password = SecurelyStoredPassword;  \\n  \\n// Get the Child ADS objects.  \\nConsole::WriteLine(\\\"The Child ADS objects are:\\\");  \\nCollections::IEnumerator^ myEnum = myDirectoryEntry->Children->GetEnumerator();  \\nwhile (myEnum->MoveNext())   \\n{  \\n    DirectoryEntry^ myChildDirectoryEntry = safe_cast<DirectoryEntry^>  \\n             (myEnum->Current);  \\n    Console::WriteLine(myChildDirectoryEntry->Path);  \\n}  \\n  \\n```\"\n  syntax:\n    content: public string Password { set; }\n    return:\n      type: System.String\n      description: The password to use when authenticating the client.\n  overload: System.DirectoryServices.DirectoryEntry.Password*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.Path\n  id: Path\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: Path\n  nameWithType: DirectoryEntry.Path\n  fullName: System.DirectoryServices.DirectoryEntry.Path\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets the path for this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref>.\n  remarks: \"The Path property uniquely identifies this entry in a networked environment. This entry can always be retrieved using this Path.  \\n  \\n Setting the Path retrieves a new entry from the directory store; it does not change the path of the currently bound entry.  \\n  \\n The classes associated with the <xref:System.DirectoryServices.DirectoryEntry> component can be used with any of the Active Directory Domain Services service providers. Some of the current providers are Internet Information Services (IIS), Lightweight Directory Access Protocol (LDAP), Novell NetWare Directory Service (NDS), and WinNT.  \\n  \\n> [!NOTE]\\n>  The section of the Path that identifies the provider (precedes \\\"://\\\") is case-sensitive. For example, \\\"LDAP://\\\" or \\\"WinNT://\\\".  \\n  \\n The syntax for the Path property varies according to the provider. Some common scenarios are:  \\n  \\n WinNT  \\n  \\n-   Connect to a group on a computer. For example, \\\"WinNT**://\\\\<domain name>/\\\\<computer name>/\\\\<group name>**\\\". If you are connecting to a local computer, \\\"WinNT://**\\\\<computer name>/\\\\<group name>**\\\".  \\n  \\n-   Connect to a user on a computer. For example, \\\"WinNT://**\\\\<domain name>/\\\\<computer name>/\\\\<user name>**\\\". If you are connecting to a local computer, \\\"WinNT://**\\\\<computer name>/\\\\<user name>**\\\".  \\n  \\n-   Connect to services on a computer. For example, \\\"WinNT://**\\\\<domain name>/\\\\<computer name>/\\\\<service name>**\\\". If you are connecting to a local computer, \\\"WinNT://**\\\\<computer name>/\\\\<service name>**\\\".  \\n  \\n-   Discover all domains on the network. For example, \\\"WinNT:\\\" The domains can be found by enumerating the children of this entry.  \\n  \\n LDAP  \\n  \\n-   Connect to a group in a domain. For example, \\\"LDAP://CN=\\\\<group name>, CN =\\\\<Users>, DC=\\\\<domain component>, DC=\\\\<domain component>,...\\\".  \\n  \\n-   Connect to a user in a domain. For example, \\\"LDAP://CN=\\\\<full user name>, CN=\\\\<Users>, DC=\\\\<domain component>, DC=\\\\<domain component>,...\\\".  \\n  \\n-   Connect to computers in a domain. For example, \\\"LDAP://CN=\\\\<computer name>, CN=\\\\<Computers>, DC=\\\\<domain component>, DC=\\\\<domain component>,...\\\".  \\n  \\n IIS  \\n  \\n-   Connect to a Web directory. For example, \\\"IIS://LocalHost/W3SVC/1/ROOT/\\\\<Web directory name>\\\".  \\n  \\n To bind to the current domain using LDAP, use the path \\\"LDAP://RootDSE\\\", then get the default naming context and rebind the entry. For example:  \\n  \\n```c#  \\nString str = ent.Properties[\\\"defaultNamingContext\\\"][0];  \\nDirectoryEntry domain = new DirectoryEntry(\\\"LDAP://\\\" + str);  \\n```  \\n  \\n For more information, see the documentation for your provider and the topic [Using Active Directory Service Interfaces](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/using_adsi.asp) in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).\"\n  syntax:\n    content: public string Path { get; set; }\n    return:\n      type: System.String\n      description: The path of this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object. The default is an empty string (\"\").\n  overload: System.DirectoryServices.DirectoryEntry.Path*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.Properties\n  id: Properties\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: DirectoryEntry.Properties\n  fullName: System.DirectoryServices.DirectoryEntry.Properties\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the Active Directory Domain Services properties for this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object.\n  remarks: \"If the property is not initialized, Properties calls the ADSI interface [IADs::Get](http://msdn2.microsoft.com/library/aa746347.aspx) method to retrieve the value from the cache. If the underling cache has not been loaded, [IADs::Get](http://msdn2.microsoft.com/library/aa746347.aspx) implicitly calls [IADs::GetInfo](http://msdn2.microsoft.com/library/aa746349.aspx). This method loads the values of the supported properties that have not been set in the cache from the underlying directory store. Subsequent calls to Properties retrieves the property values in the cache only. To control property cache loading, call <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>.  \\n  \\n **Note** The Properties property is not supported for use with the Active Directory Client Extension (DSClient) for [!INCLUDE[WinNt4Family](~/add/includes/ajax-current-ext-md.md)].\"\n  syntax:\n    content: public System.DirectoryServices.PropertyCollection Properties { get; }\n    return:\n      type: System.DirectoryServices.PropertyCollection\n      description: A <xref href=\"System.DirectoryServices.PropertyCollection\"></xref> object that contains the properties that are set on this entry.\n  overload: System.DirectoryServices.DirectoryEntry.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.RefreshCache\n  id: RefreshCache\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: RefreshCache()\n  nameWithType: DirectoryEntry.RefreshCache()\n  fullName: System.DirectoryServices.DirectoryEntry.RefreshCache()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Loads the property values for this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object into the property cache.\n  remarks: >-\n    > [!CAUTION]\n\n    >  Any uncommitted changes to the property cache will be lost. Use the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method to persist changes to the directory store.\n  syntax:\n    content: public void RefreshCache ();\n    parameters: []\n  overload: System.DirectoryServices.DirectoryEntry.RefreshCache*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])\n  id: RefreshCache(System.String[])\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: RefreshCache(String[])\n  nameWithType: DirectoryEntry.RefreshCache(String[])\n  fullName: System.DirectoryServices.DirectoryEntry.RefreshCache(String[])\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Loads the values of the specified properties into the property cache.\n  remarks: >-\n    > [!CAUTION]\n\n    >  Any uncommitted changes to the property cache will be lost. Use <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> to persist changes to the directory store.\n  syntax:\n    content: public void RefreshCache (string[] propertyNames);\n    parameters:\n    - id: propertyNames\n      type: System.String[]\n      description: An array of the specified properties.\n  overload: System.DirectoryServices.DirectoryEntry.RefreshCache*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.Rename(System.String)\n  id: Rename(System.String)\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: Rename(String)\n  nameWithType: DirectoryEntry.Rename(String)\n  fullName: System.DirectoryServices.DirectoryEntry.Rename(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Changes the name of this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object.\n  remarks: \"> [!NOTE]\\n>  This will also affect the path that is used to refer to this entry.  \\n  \\n If <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> is `true`, be sure to call the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method on the new object to make the move permanent.\"\n  syntax:\n    content: public void Rename (string newName);\n    parameters:\n    - id: newName\n      type: System.String\n      description: The new name of the entry.\n  overload: System.DirectoryServices.DirectoryEntry.Rename*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.SchemaClassName\n  id: SchemaClassName\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: SchemaClassName\n  nameWithType: DirectoryEntry.SchemaClassName\n  fullName: System.DirectoryServices.DirectoryEntry.SchemaClassName\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the name of the schema class for this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object.\n  remarks: \"This is the same as the <xref:System.DirectoryServices.DirectoryEntry.Name%2A> property of the <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> property.  \\n  \\n A <xref:System.DirectoryServices.DirectoryEntry> object's schema defines its properties and methods.\"\n  example:\n  - \"The following example demonstrates the SchemaClassName and <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> properties of the <xref:System.DirectoryServices.DirectoryEntry> class. This example gets the user-specified <xref:System.DirectoryServices.DirectoryEntry> and gets all of its children if the <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> is a container object.  The <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> is a container object if the <xref:System.DirectoryServices.DirectoryEntry.Name%2A> of that object is \\\"container\\\".  \\n  \\n```vb  \\nDim myADSPath As String = \\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\"  \\n  \\n' Creates an Instance of DirectoryEntry.  \\nDim myDirectoryEntry As New DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword)  \\n  \\n' Display the 'SchemaClassName'.  \\nConsole.WriteLine(\\\"Schema class name:\\\" + myDirectoryEntry.SchemaClassName)  \\n  \\n' Gets the SchemaEntry of the ADS object.  \\nDim mySchemaEntry As DirectoryEntry = myDirectoryEntry.SchemaEntry  \\n  \\nIf String.Compare(mySchemaEntry.Name, \\\"container\\\") = 0 Then  \\n   Dim myChildDirectoryEntry As DirectoryEntry  \\n   For Each myChildDirectoryEntry In  myDirectoryEntry.Children  \\n      Console.WriteLine(myChildDirectoryEntry.Path)  \\n   Next  \\n```  \\n  \\n```c#  \\nString myADSPath = \\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\n  \\n// Creates an Instance of DirectoryEntry.  \\nDirectoryEntry  myDirectoryEntry=new DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  \\n  \\n// Display the 'SchemaClassName'.  \\nConsole.WriteLine(\\\"Schema class name:\\\" + myDirectoryEntry.SchemaClassName);  \\n  \\n// Gets the SchemaEntry of the ADS object.  \\nDirectoryEntry mySchemaEntry = myDirectoryEntry.SchemaEntry;  \\n  \\nif (string.Compare(mySchemaEntry.Name, \\\"container\\\") == 0)  \\n{  \\n   foreach(DirectoryEntry myChildDirectoryEntry in myDirectoryEntry.Children)  \\n      Console.WriteLine(myChildDirectoryEntry.Path);  \\n}  \\n  \\n```  \\n  \\n```cpp#  \\nString^ myADSPath = \\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\n  \\n// Creates an Instance of DirectoryEntry.  \\nDirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  \\n  \\n// Display the 'SchemaClassName'.  \\nConsole::WriteLine(\\\"Schema class name:{0}\\\", myDirectoryEntry->SchemaClassName);  \\n  \\n// Gets the SchemaEntry of the ADS Object.  \\nDirectoryEntry^ mySchemaEntry = myDirectoryEntry->SchemaEntry;  \\n  \\nif (!String::Compare(mySchemaEntry->Name, \\\"container\\\"))   \\n{  \\n    Collections::IEnumerator^ myEnum = myDirectoryEntry->Children->GetEnumerator();  \\n    while (myEnum->MoveNext())   \\n    {  \\n        DirectoryEntry^ myChildDirectoryEntry = safe_cast<DirectoryEntry^>(myEnum->Current);  \\n        Console::WriteLine(myChildDirectoryEntry->Path);  \\n    }  \\n}  \\n  \\n```\"\n  syntax:\n    content: public string SchemaClassName { get; }\n    return:\n      type: System.String\n      description: The name of the schema class for this <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object.\n  overload: System.DirectoryServices.DirectoryEntry.SchemaClassName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.SchemaEntry\n  id: SchemaEntry\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: SchemaEntry\n  nameWithType: DirectoryEntry.SchemaEntry\n  fullName: System.DirectoryServices.DirectoryEntry.SchemaEntry\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the schema object for this entry.\n  remarks: \"An entry's schema determines a list of its mandatory and optional property names.  \\n  \\n You can use this property to find out what properties and methods are available on the associated object.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DirectoryServices.DirectoryEntry.SchemaClassName%2A> and SchemaEntry properties of the <xref:System.DirectoryServices.DirectoryEntry> class. This example gets the user-specified <xref:System.DirectoryServices.DirectoryEntry> object and gets all of its children if the SchemaEntry object is a container object.  The SchemaEntry is a container object if the <xref:System.DirectoryServices.DirectoryEntry.Name%2A> of that object is \\\"container\\\".  \\n  \\n```vb  \\nDim myADSPath As String = \\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\"  \\n  \\n' Creates an Instance of DirectoryEntry.  \\nDim myDirectoryEntry As New DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword)  \\n  \\n' Display the 'SchemaClassName'.  \\nConsole.WriteLine(\\\"Schema class name:\\\" + myDirectoryEntry.SchemaClassName)  \\n  \\n' Gets the SchemaEntry of the ADS object.  \\nDim mySchemaEntry As DirectoryEntry = myDirectoryEntry.SchemaEntry  \\n  \\nIf String.Compare(mySchemaEntry.Name, \\\"container\\\") = 0 Then  \\n   Dim myChildDirectoryEntry As DirectoryEntry  \\n   For Each myChildDirectoryEntry In  myDirectoryEntry.Children  \\n      Console.WriteLine(myChildDirectoryEntry.Path)  \\n   Next  \\n```  \\n  \\n```c#  \\nString myADSPath = \\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\n  \\n// Creates an Instance of DirectoryEntry.  \\nDirectoryEntry  myDirectoryEntry=new DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  \\n  \\n// Display the 'SchemaClassName'.  \\nConsole.WriteLine(\\\"Schema class name:\\\"+myDirectoryEntry.SchemaClassName);  \\n  \\n// Gets the SchemaEntry of the ADS object.  \\nDirectoryEntry mySchemaEntry = myDirectoryEntry.SchemaEntry;  \\n  \\nif (string.Compare(mySchemaEntry.Name,\\\"container\\\") == 0)  \\n{  \\n   foreach(DirectoryEntry myChildDirectoryEntry in myDirectoryEntry.Children)  \\n      Console.WriteLine(myChildDirectoryEntry.Path);  \\n}  \\n  \\n```  \\n  \\n```cpp#  \\nString^ myADSPath = \\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\n  \\n// Creates an Instance of DirectoryEntry.  \\nDirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  \\n  \\n// Display the 'SchemaClassName'.  \\nConsole::WriteLine(\\\"Schema class name:{0}\\\", myDirectoryEntry->SchemaClassName);  \\n  \\n// Gets the SchemaEntry of the ADS Object*.  \\nDirectoryEntry^ mySchemaEntry = myDirectoryEntry->SchemaEntry;  \\n  \\nif (!String::Compare(mySchemaEntry->Name, S\\\"container\\\"))   \\n{  \\n    Collections::IEnumerator^ myEnum = myDirectoryEntry->Children->GetEnumerator();  \\n    while (myEnum->MoveNext())   \\n    {  \\n        DirectoryEntry^ myChildDirectoryEntry = safe_cast<DirectoryEntry^>(myEnum->Current);  \\n        Console::WriteLine(myChildDirectoryEntry->Path);  \\n    }  \\n}  \\n  \\n```\"\n  syntax:\n    content: public System.DirectoryServices.DirectoryEntry SchemaEntry { get; }\n    return:\n      type: System.DirectoryServices.DirectoryEntry\n      description: A <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the schema class for this entry.\n  overload: System.DirectoryServices.DirectoryEntry.SchemaEntry*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.UsePropertyCache\n  id: UsePropertyCache\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: UsePropertyCache\n  nameWithType: DirectoryEntry.UsePropertyCache\n  fullName: System.DirectoryServices.DirectoryEntry.UsePropertyCache\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets a value indicating whether the cache should be committed after each operation.\n  remarks: \"By default, changes to properties are made locally to a cache, and property values to be read are cached after the first read. When the UsePropertyCache property is `true`, access to the <xref:System.DirectoryServices.DirectoryEntry> object's properties is faster. Setting this to `false` will cause the cache to be committed after each operation.  \\n  \\n If the UsePropertyCache property is `true` and you want to commit cached changes, call the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method. To update values in the cache after changes to the directory are made, call the <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A> method.  \\n  \\n> [!CAUTION]\\n>  If you call <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A> before calling <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>, any uncommitted changes to the property cache will be lost.  \\n  \\n> [!NOTE]\\n>  The Internet Information Services (IIS) provider does not support committing the cache after each operation.\"\n  syntax:\n    content: public bool UsePropertyCache { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the cache should not be committed after each operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.DirectoryServices.DirectoryEntry.UsePropertyCache*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.DirectoryEntry.Username\n  id: Username\n  parent: System.DirectoryServices.DirectoryEntry\n  langs:\n  - csharp\n  name: Username\n  nameWithType: DirectoryEntry.Username\n  fullName: System.DirectoryServices.DirectoryEntry.Username\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets the user name to use when authenticating the client.\n  remarks: You can set the Username and <xref:System.DirectoryServices.DirectoryEntry.Password%2A> in order to specify alternate credentials with which to access the information in Active Directory Domain Services. Any other <xref:System.DirectoryServices.DirectoryEntry> objects retrieved from this instance (for example, through <xref:System.DirectoryServices.DirectoryEntry.Children%2A>) are automatically created with the same alternate credentials.\n  example:\n  - \"The following example demonstrates the Username and <xref:System.DirectoryServices.DirectoryEntry.Password%2A> properties of the <xref:System.DirectoryServices.DirectoryEntry> class. This example gets the user-specified <xref:System.DirectoryServices.DirectoryEntry> and the <xref:System.DirectoryServices.DirectoryEntry.Path%2A> of all its <xref:System.DirectoryServices.DirectoryEntry.Children%2A>.  \\n  \\n```vb  \\nDim myADSPath As String = _  \\n      \\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\"  \\n  \\n' Create an Instance of DirectoryEntry.  \\nDim myDirectoryEntry As New DirectoryEntry(myADSPath)  \\nmyDirectoryEntry.Username = UserName  \\nmyDirectoryEntry.Password = SecurelyStoredPassword  \\n  \\n' Get the Child ADS objects.  \\nConsole.WriteLine(\\\"The Child ADS objects are:\\\")  \\nDim myChildDirectoryEntry As DirectoryEntry  \\nFor Each myChildDirectoryEntry In  myDirectoryEntry.Children  \\n   Console.WriteLine(myChildDirectoryEntry.Path)  \\nNext myChildDirectoryEntry  \\n```  \\n  \\n```c#  \\nString myADSPath = \\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\n  \\n// Create an Instance of DirectoryEntry.  \\nDirectoryEntry myDirectoryEntry = new DirectoryEntry(myADSPath);  \\nmyDirectoryEntry.Username = UserName;  \\nmyDirectoryEntry.Password = SecurelyStoredPassword;  \\n  \\n// Get the Child ADS objects.  \\nConsole.WriteLine(\\\"The Child ADS objects are:\\\");  \\nforeach(DirectoryEntry myChildDirectoryEntry in myDirectoryEntry.Children)  \\n   Console.WriteLine(myChildDirectoryEntry.Path);  \\n  \\n```  \\n  \\n```cpp#  \\nString^ myADSPath = \\\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\\\";  \\n  \\n// Create an Instance of DirectoryEntry.  \\nDirectoryEntry^ myDirectoryEntry = new DirectoryEntry(myADSPath);  \\nmyDirectoryEntry->Username = UserName;  \\nmyDirectoryEntry->Password = SecurelyStoredPassword;  \\n  \\n// Get the Child ADS objects.  \\nConsole::WriteLine(\\\"The Child ADS objects are:\\\");  \\nCollections::IEnumerator^ myEnum = myDirectoryEntry->Children->GetEnumerator();  \\nwhile (myEnum->MoveNext())   \\n{  \\n    DirectoryEntry^ myChildDirectoryEntry = safe_cast<DirectoryEntry^>(myEnum->Current);  \\n    Console::WriteLine(myChildDirectoryEntry->Path);  \\n}  \\n  \\n```\"\n  syntax:\n    content: public string Username { get; set; }\n    return:\n      type: System.String\n      description: The user name to use when authenticating the client.\n  overload: System.DirectoryServices.DirectoryEntry.Username*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.Component\n  isExternal: false\n  name: System.ComponentModel.Component\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.DirectoryServices.DirectoryServicesCOMException\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryServicesCOMException\n  nameWithType: DirectoryServicesCOMException\n  fullName: System.DirectoryServices.DirectoryServicesCOMException\n- uid: System.Reflection.TargetInvocationException\n  isExternal: true\n  name: System.Reflection.TargetInvocationException\n- uid: System.DirectoryServices.DirectoryEntry.#ctor\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: DirectoryEntry()\n  nameWithType: DirectoryEntry.DirectoryEntry()\n  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry()\n- uid: System.DirectoryServices.DirectoryEntry.#ctor(System.Object)\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: DirectoryEntry(Object)\n  nameWithType: DirectoryEntry.DirectoryEntry(Object)\n  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.DirectoryEntry.#ctor(System.String)\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: DirectoryEntry(String)\n  nameWithType: DirectoryEntry.DirectoryEntry(String)\n  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: DirectoryEntry(String,String,String)\n  nameWithType: DirectoryEntry.DirectoryEntry(String,String,String)\n  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry(String,String,String)\n- uid: System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: DirectoryEntry(String,String,String,AuthenticationTypes)\n  nameWithType: DirectoryEntry.DirectoryEntry(String,String,String,AuthenticationTypes)\n  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry(String,String,String,AuthenticationTypes)\n- uid: System.DirectoryServices.AuthenticationTypes\n  parent: System.DirectoryServices\n  isExternal: false\n  name: AuthenticationTypes\n  nameWithType: AuthenticationTypes\n  fullName: System.DirectoryServices.AuthenticationTypes\n- uid: System.DirectoryServices.DirectoryEntry.AuthenticationType\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: AuthenticationType\n  nameWithType: DirectoryEntry.AuthenticationType\n  fullName: System.DirectoryServices.DirectoryEntry.AuthenticationType\n- uid: System.DirectoryServices.DirectoryEntry.Children\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Children\n  nameWithType: DirectoryEntry.Children\n  fullName: System.DirectoryServices.DirectoryEntry.Children\n- uid: System.DirectoryServices.DirectoryEntries\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryEntries\n  nameWithType: DirectoryEntries\n  fullName: System.DirectoryServices.DirectoryEntries\n- uid: System.DirectoryServices.DirectoryEntry.Close\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Close()\n  nameWithType: DirectoryEntry.Close()\n  fullName: System.DirectoryServices.DirectoryEntry.Close()\n- uid: System.DirectoryServices.DirectoryEntry.CommitChanges\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: CommitChanges()\n  nameWithType: DirectoryEntry.CommitChanges()\n  fullName: System.DirectoryServices.DirectoryEntry.CommitChanges()\n- uid: System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: CopyTo(DirectoryEntry)\n  nameWithType: DirectoryEntry.CopyTo(DirectoryEntry)\n  fullName: System.DirectoryServices.DirectoryEntry.CopyTo(DirectoryEntry)\n- uid: System.DirectoryServices.DirectoryEntry\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryEntry\n  nameWithType: DirectoryEntry\n  fullName: System.DirectoryServices.DirectoryEntry\n- uid: System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: CopyTo(DirectoryEntry,String)\n  nameWithType: DirectoryEntry.CopyTo(DirectoryEntry,String)\n  fullName: System.DirectoryServices.DirectoryEntry.CopyTo(DirectoryEntry,String)\n- uid: System.DirectoryServices.DirectoryEntry.DeleteTree\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: DeleteTree()\n  nameWithType: DirectoryEntry.DeleteTree()\n  fullName: System.DirectoryServices.DirectoryEntry.DeleteTree()\n- uid: System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DirectoryEntry.Dispose(Boolean)\n  fullName: System.DirectoryServices.DirectoryEntry.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.DirectoryEntry.Exists(System.String)\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Exists(String)\n  nameWithType: DirectoryEntry.Exists(String)\n  fullName: System.DirectoryServices.DirectoryEntry.Exists(String)\n- uid: System.DirectoryServices.DirectoryEntry.Guid\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Guid\n  nameWithType: DirectoryEntry.Guid\n  fullName: System.DirectoryServices.DirectoryEntry.Guid\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Invoke(String,Object[])\n  nameWithType: DirectoryEntry.Invoke(String,Object[])\n  fullName: System.DirectoryServices.DirectoryEntry.Invoke(String,Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: InvokeGet(String)\n  nameWithType: DirectoryEntry.InvokeGet(String)\n  fullName: System.DirectoryServices.DirectoryEntry.InvokeGet(String)\n- uid: System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: InvokeSet(String,Object[])\n  nameWithType: DirectoryEntry.InvokeSet(String,Object[])\n  fullName: System.DirectoryServices.DirectoryEntry.InvokeSet(String,Object[])\n- uid: System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: MoveTo(DirectoryEntry)\n  nameWithType: DirectoryEntry.MoveTo(DirectoryEntry)\n  fullName: System.DirectoryServices.DirectoryEntry.MoveTo(DirectoryEntry)\n- uid: System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: MoveTo(DirectoryEntry,String)\n  nameWithType: DirectoryEntry.MoveTo(DirectoryEntry,String)\n  fullName: System.DirectoryServices.DirectoryEntry.MoveTo(DirectoryEntry,String)\n- uid: System.DirectoryServices.DirectoryEntry.Name\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Name\n  nameWithType: DirectoryEntry.Name\n  fullName: System.DirectoryServices.DirectoryEntry.Name\n- uid: System.DirectoryServices.DirectoryEntry.NativeGuid\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: NativeGuid\n  nameWithType: DirectoryEntry.NativeGuid\n  fullName: System.DirectoryServices.DirectoryEntry.NativeGuid\n- uid: System.DirectoryServices.DirectoryEntry.NativeObject\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: NativeObject\n  nameWithType: DirectoryEntry.NativeObject\n  fullName: System.DirectoryServices.DirectoryEntry.NativeObject\n- uid: System.DirectoryServices.DirectoryEntry.ObjectSecurity\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: ObjectSecurity\n  nameWithType: DirectoryEntry.ObjectSecurity\n  fullName: System.DirectoryServices.DirectoryEntry.ObjectSecurity\n- uid: System.DirectoryServices.ActiveDirectorySecurity\n  parent: System.DirectoryServices\n  isExternal: false\n  name: ActiveDirectorySecurity\n  nameWithType: ActiveDirectorySecurity\n  fullName: System.DirectoryServices.ActiveDirectorySecurity\n- uid: System.DirectoryServices.DirectoryEntry.Options\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Options\n  nameWithType: DirectoryEntry.Options\n  fullName: System.DirectoryServices.DirectoryEntry.Options\n- uid: System.DirectoryServices.DirectoryEntryConfiguration\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryEntryConfiguration\n  nameWithType: DirectoryEntryConfiguration\n  fullName: System.DirectoryServices.DirectoryEntryConfiguration\n- uid: System.DirectoryServices.DirectoryEntry.Parent\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Parent\n  nameWithType: DirectoryEntry.Parent\n  fullName: System.DirectoryServices.DirectoryEntry.Parent\n- uid: System.DirectoryServices.DirectoryEntry.Password\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Password\n  nameWithType: DirectoryEntry.Password\n  fullName: System.DirectoryServices.DirectoryEntry.Password\n- uid: System.DirectoryServices.DirectoryEntry.Path\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Path\n  nameWithType: DirectoryEntry.Path\n  fullName: System.DirectoryServices.DirectoryEntry.Path\n- uid: System.DirectoryServices.DirectoryEntry.Properties\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Properties\n  nameWithType: DirectoryEntry.Properties\n  fullName: System.DirectoryServices.DirectoryEntry.Properties\n- uid: System.DirectoryServices.PropertyCollection\n  parent: System.DirectoryServices\n  isExternal: false\n  name: PropertyCollection\n  nameWithType: PropertyCollection\n  fullName: System.DirectoryServices.PropertyCollection\n- uid: System.DirectoryServices.DirectoryEntry.RefreshCache\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: RefreshCache()\n  nameWithType: DirectoryEntry.RefreshCache()\n  fullName: System.DirectoryServices.DirectoryEntry.RefreshCache()\n- uid: System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: RefreshCache(String[])\n  nameWithType: DirectoryEntry.RefreshCache(String[])\n  fullName: System.DirectoryServices.DirectoryEntry.RefreshCache(String[])\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.DirectoryServices.DirectoryEntry.Rename(System.String)\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Rename(String)\n  nameWithType: DirectoryEntry.Rename(String)\n  fullName: System.DirectoryServices.DirectoryEntry.Rename(String)\n- uid: System.DirectoryServices.DirectoryEntry.SchemaClassName\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: SchemaClassName\n  nameWithType: DirectoryEntry.SchemaClassName\n  fullName: System.DirectoryServices.DirectoryEntry.SchemaClassName\n- uid: System.DirectoryServices.DirectoryEntry.SchemaEntry\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: SchemaEntry\n  nameWithType: DirectoryEntry.SchemaEntry\n  fullName: System.DirectoryServices.DirectoryEntry.SchemaEntry\n- uid: System.DirectoryServices.DirectoryEntry.UsePropertyCache\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: UsePropertyCache\n  nameWithType: DirectoryEntry.UsePropertyCache\n  fullName: System.DirectoryServices.DirectoryEntry.UsePropertyCache\n- uid: System.DirectoryServices.DirectoryEntry.Username\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Username\n  nameWithType: DirectoryEntry.Username\n  fullName: System.DirectoryServices.DirectoryEntry.Username\n- uid: System.DirectoryServices.DirectoryEntry.#ctor*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: DirectoryEntry\n  nameWithType: DirectoryEntry.DirectoryEntry\n- uid: System.DirectoryServices.DirectoryEntry.AuthenticationType*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: AuthenticationType\n  nameWithType: DirectoryEntry.AuthenticationType\n- uid: System.DirectoryServices.DirectoryEntry.Children*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Children\n  nameWithType: DirectoryEntry.Children\n- uid: System.DirectoryServices.DirectoryEntry.Close*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Close\n  nameWithType: DirectoryEntry.Close\n- uid: System.DirectoryServices.DirectoryEntry.CommitChanges*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: CommitChanges\n  nameWithType: DirectoryEntry.CommitChanges\n- uid: System.DirectoryServices.DirectoryEntry.CopyTo*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: CopyTo\n  nameWithType: DirectoryEntry.CopyTo\n- uid: System.DirectoryServices.DirectoryEntry.DeleteTree*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: DeleteTree\n  nameWithType: DirectoryEntry.DeleteTree\n- uid: System.DirectoryServices.DirectoryEntry.Dispose*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Dispose\n  nameWithType: DirectoryEntry.Dispose\n- uid: System.DirectoryServices.DirectoryEntry.Exists*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Exists\n  nameWithType: DirectoryEntry.Exists\n- uid: System.DirectoryServices.DirectoryEntry.Guid*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Guid\n  nameWithType: DirectoryEntry.Guid\n- uid: System.DirectoryServices.DirectoryEntry.Invoke*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Invoke\n  nameWithType: DirectoryEntry.Invoke\n- uid: System.DirectoryServices.DirectoryEntry.InvokeGet*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: InvokeGet\n  nameWithType: DirectoryEntry.InvokeGet\n- uid: System.DirectoryServices.DirectoryEntry.InvokeSet*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: InvokeSet\n  nameWithType: DirectoryEntry.InvokeSet\n- uid: System.DirectoryServices.DirectoryEntry.MoveTo*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: MoveTo\n  nameWithType: DirectoryEntry.MoveTo\n- uid: System.DirectoryServices.DirectoryEntry.Name*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Name\n  nameWithType: DirectoryEntry.Name\n- uid: System.DirectoryServices.DirectoryEntry.NativeGuid*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: NativeGuid\n  nameWithType: DirectoryEntry.NativeGuid\n- uid: System.DirectoryServices.DirectoryEntry.NativeObject*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: NativeObject\n  nameWithType: DirectoryEntry.NativeObject\n- uid: System.DirectoryServices.DirectoryEntry.ObjectSecurity*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: ObjectSecurity\n  nameWithType: DirectoryEntry.ObjectSecurity\n- uid: System.DirectoryServices.DirectoryEntry.Options*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Options\n  nameWithType: DirectoryEntry.Options\n- uid: System.DirectoryServices.DirectoryEntry.Parent*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Parent\n  nameWithType: DirectoryEntry.Parent\n- uid: System.DirectoryServices.DirectoryEntry.Password*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Password\n  nameWithType: DirectoryEntry.Password\n- uid: System.DirectoryServices.DirectoryEntry.Path*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Path\n  nameWithType: DirectoryEntry.Path\n- uid: System.DirectoryServices.DirectoryEntry.Properties*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Properties\n  nameWithType: DirectoryEntry.Properties\n- uid: System.DirectoryServices.DirectoryEntry.RefreshCache*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: RefreshCache\n  nameWithType: DirectoryEntry.RefreshCache\n- uid: System.DirectoryServices.DirectoryEntry.Rename*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Rename\n  nameWithType: DirectoryEntry.Rename\n- uid: System.DirectoryServices.DirectoryEntry.SchemaClassName*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: SchemaClassName\n  nameWithType: DirectoryEntry.SchemaClassName\n- uid: System.DirectoryServices.DirectoryEntry.SchemaEntry*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: SchemaEntry\n  nameWithType: DirectoryEntry.SchemaEntry\n- uid: System.DirectoryServices.DirectoryEntry.UsePropertyCache*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: UsePropertyCache\n  nameWithType: DirectoryEntry.UsePropertyCache\n- uid: System.DirectoryServices.DirectoryEntry.Username*\n  parent: System.DirectoryServices.DirectoryEntry\n  isExternal: false\n  name: Username\n  nameWithType: DirectoryEntry.Username\n"}