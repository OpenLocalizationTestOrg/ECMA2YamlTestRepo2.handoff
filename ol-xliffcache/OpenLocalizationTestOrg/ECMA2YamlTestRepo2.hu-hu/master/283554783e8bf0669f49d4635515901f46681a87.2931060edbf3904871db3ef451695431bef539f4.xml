{"nodes":[{"pos":[562,634],"content":"Defines an interface implemented by objects that create field templates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines an interface implemented by objects that create field templates.","pos":[0,72]}]},{"pos":[646,909],"content":"This class must be implemented by the <xref:System.Web.DynamicData.FieldTemplateFactory> class in order to create a field template. This interface provides methods that initialize the <xref:System.Web.DynamicData.FieldTemplateFactory> and creates field templates.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class must be implemented by the <xref:System.Web.DynamicData.FieldTemplateFactory> class in order to create a field template. This interface provides methods that initialize the <xref:System.Web.DynamicData.FieldTemplateFactory> and creates field templates.","pos":[0,263],"nodes":[{"content":"This class must be implemented by the &lt;xref:System.Web.DynamicData.FieldTemplateFactory&gt; class in order to create a field template.","pos":[0,131],"source":"This class must be implemented by the <xref:System.Web.DynamicData.FieldTemplateFactory> class in order to create a field template."},{"content":"This interface provides methods that initialize the &lt;xref:System.Web.DynamicData.FieldTemplateFactory&gt; and creates field templates.","pos":[132,263],"source":" This interface provides methods that initialize the <xref:System.Web.DynamicData.FieldTemplateFactory> and creates field templates."}]}]},{"pos":[1763,2015],"content":"Creates an instance of a field template using the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.DataBoundControlMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class and &lt;xref:System.Web.DynamicData.MetaColumn.UIHint*&gt; property.","needQuote":true,"needEscape":true,"source":"Creates an instance of a field template using the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> class, the <xref href=\"System.Web.UI.WebControls.DataBoundControlMode\"></xref> class and <xref:System.Web.DynamicData.MetaColumn.UIHint*> property."},{"pos":[2027,2710],"content":"ASP.NET Dynamic Data field templates are ASP.NET user controls that map data controls to data types in a data model. Field templates generally derive from <xref:System.Web.DynamicData.FieldTemplateUserControl>, the class that enables access to data fields, data columns, and metadata in data models. Dynamic Data projects provide default field templates, but you can modify them or create custom field templates. When imlemented, this method creates a field template based on the data column, the mode of the data column, and the <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> property. You specify the `uiHint` parameter if you want to render data using a custom field template.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"ASP.NET Dynamic Data field templates are ASP.NET user controls that map data controls to data types in a data model.","pos":[0,116]},{"content":"Field templates generally derive from &lt;xref:System.Web.DynamicData.FieldTemplateUserControl&gt;, the class that enables access to data fields, data columns, and metadata in data models.","pos":[117,299],"source":" Field templates generally derive from <xref:System.Web.DynamicData.FieldTemplateUserControl>, the class that enables access to data fields, data columns, and metadata in data models."},{"content":"Dynamic Data projects provide default field templates, but you can modify them or create custom field templates.","pos":[300,412]},{"content":"When imlemented, this method creates a field template based on the data column, the mode of the data column, and the &lt;xref:System.Web.DynamicData.MetaColumn.UIHint%2A&gt; property.","pos":[413,590],"source":" When imlemented, this method creates a field template based on the data column, the mode of the data column, and the <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> property."},{"content":"You specify the <ph id=\"ph1\">`uiHint`</ph> parameter if you want to render data using a custom field template.","pos":[591,683],"source":" You specify the `uiHint` parameter if you want to render data using a custom field template."}]},{"pos":[3009,3072],"content":"Specifies the data column to use to display the field template.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the data column to use to display the field template.","pos":[0,63]}]},{"pos":[3166,3215],"content":"Specifies the display mode of the field template.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the display mode of the field template.","pos":[0,49]}]},{"pos":[3278,3314],"content":"Specifies the field template to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the field template to use.","pos":[0,36]}]},{"pos":[3396,3513],"content":"An instance of a <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.FieldTemplateFactory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object when implemented in a class.","needQuote":true,"needEscape":true,"source":"An instance of a <xref href=\"System.Web.DynamicData.FieldTemplateFactory\"></xref> object when implemented in a class."},{"pos":[4127,4237],"content":"Initializes a <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.FieldTemplateFactory\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using the specified data model.","needQuote":true,"needEscape":true,"source":"Initializes a <xref href=\"System.Web.DynamicData.FieldTemplateFactory\"></xref> using the specified data model."},{"pos":[4249,4638],"content":"ASP.NET Dynamic Data uses field templates to display individual data fields. Field templates are typically implemented as user controls that map data types in a data model to individual fields in the data control. This method initializes the <xref:System.Web.DynamicData.FieldTemplateFactory> class, which is used to create field templates using the data model the field template will use.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"ASP.NET Dynamic Data uses field templates to display individual data fields. Field templates are typically implemented as user controls that map data types in a data model to individual fields in the data control. This method initializes the <xref:System.Web.DynamicData.FieldTemplateFactory> class, which is used to create field templates using the data model the field template will use.","pos":[0,389],"nodes":[{"content":"ASP.NET Dynamic Data uses field templates to display individual data fields.","pos":[0,76]},{"content":"Field templates are typically implemented as user controls that map data types in a data model to individual fields in the data control.","pos":[77,213]},{"content":"This method initializes the &lt;xref:System.Web.DynamicData.FieldTemplateFactory&gt; class, which is used to create field templates using the data model the field template will use.","pos":[214,389],"source":" This method initializes the <xref:System.Web.DynamicData.FieldTemplateFactory> class, which is used to create field templates using the data model the field template will use."}]}]},{"pos":[4823,4877],"content":"Specifies the data model that the field template uses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the data model that the field template uses.","pos":[0,54]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.DynamicData.IFieldTemplateFactory\n  id: IFieldTemplateFactory\n  children:\n  - System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)\n  - System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)\n  langs:\n  - csharp\n  name: IFieldTemplateFactory\n  nameWithType: IFieldTemplateFactory\n  fullName: System.Web.DynamicData.IFieldTemplateFactory\n  type: Interface\n  summary: Defines an interface implemented by objects that create field templates.\n  remarks: This class must be implemented by the <xref:System.Web.DynamicData.FieldTemplateFactory> class in order to create a field template. This interface provides methods that initialize the <xref:System.Web.DynamicData.FieldTemplateFactory> and creates field templates.\n  syntax:\n    content: public interface IFieldTemplateFactory\n  implements: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)\n  id: CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)\n  parent: System.Web.DynamicData.IFieldTemplateFactory\n  langs:\n  - csharp\n  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)\n  nameWithType: IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)\n  fullName: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Creates an instance of a field template using the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> class, the <xref href=\"System.Web.UI.WebControls.DataBoundControlMode\"></xref> class and <xref:System.Web.DynamicData.MetaColumn.UIHint*> property.\n  remarks: ASP.NET Dynamic Data field templates are ASP.NET user controls that map data controls to data types in a data model. Field templates generally derive from <xref:System.Web.DynamicData.FieldTemplateUserControl>, the class that enables access to data fields, data columns, and metadata in data models. Dynamic Data projects provide default field templates, but you can modify them or create custom field templates. When imlemented, this method creates a field template based on the data column, the mode of the data column, and the <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> property. You specify the `uiHint` parameter if you want to render data using a custom field template.\n  syntax:\n    content: public System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);\n    parameters:\n    - id: column\n      type: System.Web.DynamicData.MetaColumn\n      description: Specifies the data column to use to display the field template.\n    - id: mode\n      type: System.Web.UI.WebControls.DataBoundControlMode\n      description: Specifies the display mode of the field template.\n    - id: uiHint\n      type: System.String\n      description: Specifies the field template to use.\n    return:\n      type: System.Web.DynamicData.IFieldTemplate\n      description: An instance of a <xref href=\"System.Web.DynamicData.FieldTemplateFactory\"></xref> object when implemented in a class.\n  overload: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)\n  id: Initialize(System.Web.DynamicData.MetaModel)\n  parent: System.Web.DynamicData.IFieldTemplateFactory\n  langs:\n  - csharp\n  name: Initialize(MetaModel)\n  nameWithType: IFieldTemplateFactory.Initialize(MetaModel)\n  fullName: System.Web.DynamicData.IFieldTemplateFactory.Initialize(MetaModel)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Initializes a <xref href=\"System.Web.DynamicData.FieldTemplateFactory\"></xref> using the specified data model.\n  remarks: ASP.NET Dynamic Data uses field templates to display individual data fields. Field templates are typically implemented as user controls that map data types in a data model to individual fields in the data control. This method initializes the <xref:System.Web.DynamicData.FieldTemplateFactory> class, which is used to create field templates using the data model the field template will use.\n  syntax:\n    content: public void Initialize (System.Web.DynamicData.MetaModel model);\n    parameters:\n    - id: model\n      type: System.Web.DynamicData.MetaModel\n      description: Specifies the data model that the field template uses.\n  overload: System.Web.DynamicData.IFieldTemplateFactory.Initialize*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)\n  parent: System.Web.DynamicData.IFieldTemplateFactory\n  isExternal: false\n  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)\n  nameWithType: IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)\n  fullName: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)\n- uid: System.Web.DynamicData.IFieldTemplate\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: IFieldTemplate\n  nameWithType: IFieldTemplate\n  fullName: System.Web.DynamicData.IFieldTemplate\n- uid: System.Web.DynamicData.MetaColumn\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaColumn\n  nameWithType: MetaColumn\n  fullName: System.Web.DynamicData.MetaColumn\n- uid: System.Web.UI.WebControls.DataBoundControlMode\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: DataBoundControlMode\n  nameWithType: DataBoundControlMode\n  fullName: System.Web.UI.WebControls.DataBoundControlMode\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)\n  parent: System.Web.DynamicData.IFieldTemplateFactory\n  isExternal: false\n  name: Initialize(MetaModel)\n  nameWithType: IFieldTemplateFactory.Initialize(MetaModel)\n  fullName: System.Web.DynamicData.IFieldTemplateFactory.Initialize(MetaModel)\n- uid: System.Web.DynamicData.MetaModel\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaModel\n  nameWithType: MetaModel\n  fullName: System.Web.DynamicData.MetaModel\n- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate*\n  parent: System.Web.DynamicData.IFieldTemplateFactory\n  isExternal: false\n  name: CreateFieldTemplate\n  nameWithType: IFieldTemplateFactory.CreateFieldTemplate\n- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize*\n  parent: System.Web.DynamicData.IFieldTemplateFactory\n  isExternal: false\n  name: Initialize\n  nameWithType: IFieldTemplateFactory.Initialize\n"}