{"nodes":[{"pos":[3407,3446],"content":"Exposes a file within isolated storage.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exposes a file within isolated storage.","pos":[0,39]}]},{"pos":[3459,4757],"content":"Use this class to read, write and create files in isolated storage.       Since this class extends <xref:System.IO.FileStream>, you can use an instance of IsolatedStorageFileStream in most situations where a <xref:System.IO.FileStream> might otherwise be used, such as to construct a <xref:System.IO.StreamReader> or <xref:System.IO.StreamWriter>.       This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.      > [!IMPORTANT] >  Isolated storage is not available for [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] apps. Instead, use the application data classes in the `Windows.Storage` namespaces included in the [!INCLUDE[wrt](~/add/includes/wrt-md.md)] API to store local data and files. For more information, see [Application data](http://go.microsoft.com/fwlink/?LinkId=229175) in the Windows Dev Center.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this class to read, write and create files in isolated storage.","pos":[0,67]},{"content":"Since this class extends &lt;xref:System.IO.FileStream&gt;, you can use an instance of IsolatedStorageFileStream in most situations where a &lt;xref:System.IO.FileStream&gt; might otherwise be used, such as to construct a &lt;xref:System.IO.StreamReader&gt; or &lt;xref:System.IO.StreamWriter&gt;.","pos":[74,347],"source":"       Since this class extends <xref:System.IO.FileStream>, you can use an instance of IsolatedStorageFileStream in most situations where a <xref:System.IO.FileStream> might otherwise be used, such as to construct a <xref:System.IO.StreamReader> or <xref:System.IO.StreamWriter>."},{"content":"This type implements the &lt;xref:System.IDisposable&gt; interface.","pos":[354,415],"source":"       This type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[416,510]},{"content":"To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a <ph id=\"ph1\">`try`</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">`catch`</ph> block.","pos":[511,622],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[623,730],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.","pos":[731,864],"source":" For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  Isolated storage is not available for <ph id=\"ph2\">[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]</ph> apps.","pos":[870,1001],"source":"      > [!IMPORTANT] >  Isolated storage is not available for [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] apps."},{"content":"Instead, use the application data classes in the <ph id=\"ph1\">`Windows.Storage`</ph> namespaces included in the <ph id=\"ph2\">[!INCLUDE[wrt](~/add/includes/wrt-md.md)]</ph> API to store local data and files.","pos":[1002,1172],"source":" Instead, use the application data classes in the `Windows.Storage` namespaces included in the [!INCLUDE[wrt](~/add/includes/wrt-md.md)] API to store local data and files."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Application data<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=229175)</ept> in the Windows Dev Center.","pos":[1173,1291],"source":" For more information, see [Application data](http://go.microsoft.com/fwlink/?LinkId=229175) in the Windows Dev Center."}]},{"pos":[7144,7350],"content":"Initializes a new instance of an <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object giving access to the file designated by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p2\">&lt;/code&gt;</ept> in the specified <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">mode</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of an <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object giving access to the file designated by <code>path</code> in the specified <code>mode</code>."},{"pos":[7363,8288],"content":"The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running. This store will remain open only for the lifetime of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object. To specify a different isolated storage scope, or to allow the store to remain open (so multiple <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects can be opened from it), use the form of the constructor that accepts an <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object.       The `mode` parameter indicates whether a new file should be created, an existing one used, and so on.      > [!CAUTION] >  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and can cause an exception to be thrown.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running.","pos":[0,145]},{"content":"This store will remain open only for the lifetime of the &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; object.","pos":[146,269],"source":" This store will remain open only for the lifetime of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object."},{"content":"To specify a different isolated storage scope, or to allow the store to remain open (so multiple &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; objects can be opened from it), use the form of the constructor that accepts an &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt; object.","pos":[270,566],"source":" To specify a different isolated storage scope, or to allow the store to remain open (so multiple <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects can be opened from it), use the form of the constructor that accepts an <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object."},{"content":"The <ph id=\"ph1\">`mode`</ph> parameter indicates whether a new file should be created, an existing one used, and so on.","pos":[573,674],"source":"       The `mode` parameter indicates whether a new file should be created, an existing one used, and so on."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and can cause an exception to be thrown.","pos":[680,920],"source":"      > [!CAUTION] >  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and can cause an exception to be thrown."}]},{"pos":[8462,8516],"content":"The relative path of the file within isolated storage.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relative path of the file within isolated storage.","pos":[0,54]}]},{"pos":[8582,8640],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.IO.FileMode\"></xref> values."},{"pos":[8820,8858],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> is badly formed.","needQuote":true,"needEscape":true,"source":"The <code>path</code> is badly formed."},{"pos":[8961,9047],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9166,9216],"content":"The directory in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not exist.","needQuote":true,"needEscape":true,"source":"The directory in <code>path</code> does not exist."},{"pos":[9325,9418],"content":"No file was found and the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">mode</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to <bpt id=\"p2\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>","needQuote":true,"needEscape":true,"source":"No file was found and the <code>mode</code> is set to <xref href=\"System.IO.FileMode\"></xref>"},{"pos":[10086,10341],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class giving access to the file designated by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p2\">&lt;/code&gt;</ept>, in the specified <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">mode</ph><ept id=\"p3\">&lt;/code&gt;</ept>, with the kind of <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph3\">access</ph><ept id=\"p4\">&lt;/code&gt;</ept> requested.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> class giving access to the file designated by <code>path</code>, in the specified <code>mode</code>, with the kind of <code>access</code> requested."},{"pos":[10354,11342],"content":"The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running. This store will remain open only for the lifetime of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object. To specify a different isolated storage scope, or to allow the store to remain open (so multiple <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects can be opened from it), use the form of the constructor that accepts an <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object.       The `mode` parameter indicates whether a new file should be created or an existing one used. The `access` parameter includes read-only, read/write, and write-only.      > [!CAUTION] >  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running.","pos":[0,145]},{"content":"This store will remain open only for the lifetime of the &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; object.","pos":[146,269],"source":" This store will remain open only for the lifetime of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object."},{"content":"To specify a different isolated storage scope, or to allow the store to remain open (so multiple &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; objects can be opened from it), use the form of the constructor that accepts an &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt; object.","pos":[270,566],"source":" To specify a different isolated storage scope, or to allow the store to remain open (so multiple <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects can be opened from it), use the form of the constructor that accepts an <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object."},{"content":"The <ph id=\"ph1\">`mode`</ph> parameter indicates whether a new file should be created or an existing one used.","pos":[573,665],"source":"       The `mode` parameter indicates whether a new file should be created or an existing one used."},{"content":"The <ph id=\"ph1\">`access`</ph> parameter includes read-only, read/write, and write-only.","pos":[666,736],"source":" The `access` parameter includes read-only, read/write, and write-only."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.","pos":[742,983],"source":"      > [!CAUTION] >  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown."}]},{"pos":[11545,11599],"content":"The relative path of the file within isolated storage.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relative path of the file within isolated storage.","pos":[0,54]}]},{"pos":[11665,11723],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.IO.FileMode\"></xref> values."},{"pos":[11793,11871],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.IO.FileAccess\"></xref> values."},{"pos":[12051,12089],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> is badly formed.","needQuote":true,"needEscape":true,"source":"The <code>path</code> is badly formed."},{"pos":[12192,12278],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12387,12481],"content":"No file was found and the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">mode</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to <bpt id=\"p2\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"No file was found and the <code>mode</code> is set to <xref href=\"System.IO.FileMode\"></xref>."},{"pos":[13226,13557],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class giving access to the file designated by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p2\">&lt;/code&gt;</ept>, in the specified <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">mode</ph><ept id=\"p3\">&lt;/code&gt;</ept>, and in the context of the <bpt id=\"p4\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> specified by <bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph3\">isf</ph><ept id=\"p5\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> class giving access to the file designated by <code>path</code>, in the specified <code>mode</code>, and in the context of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"></xref> specified by <code>isf</code>."},{"pos":[13570,13921],"content":"The `mode` parameter indicates whether a new file should be created, an existing one used, and so on.      > [!CAUTION] >  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`mode`</ph> parameter indicates whether a new file should be created, an existing one used, and so on.","pos":[0,101],"source":"The `mode` parameter indicates whether a new file should be created, an existing one used, and so on."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.","pos":[107,348],"source":"      > [!CAUTION] >  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown."}]},{"pos":[14706,14760],"content":"The relative path of the file within isolated storage.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relative path of the file within isolated storage.","pos":[0,54]}]},{"pos":[14826,14884],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.IO.FileMode\"></xref> values."},{"pos":[14976,15141],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in which to open the <bpt id=\"p2\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"></xref> in which to open the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref>."},{"pos":[15321,15359],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> is badly formed.","needQuote":true,"needEscape":true,"source":"The <code>path</code> is badly formed."},{"pos":[15462,15548],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[15657,15751],"content":"No file was found and the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">mode</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to <bpt id=\"p2\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"No file was found and the <code>mode</code> is set to <xref href=\"System.IO.FileMode\"></xref>."},{"pos":[15898,15937],"content":"<ph id=\"ph1\">&lt;code&gt;isf&lt;/code&gt;</ph> does not have a quota.","needQuote":true,"needEscape":true,"source":"<code>isf</code> does not have a quota."},{"pos":[16675,16988],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class giving access to the file designated by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p2\">&lt;/code&gt;</ept>, in the specified <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">mode</ph><ept id=\"p3\">&lt;/code&gt;</ept>, with the specified file <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph3\">access</ph><ept id=\"p4\">&lt;/code&gt;</ept>, using the file sharing mode specified by <bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph4\">share</ph><ept id=\"p5\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> class giving access to the file designated by <code>path</code>, in the specified <code>mode</code>, with the specified file <code>access</code>, using the file sharing mode specified by <code>share</code>."},{"pos":[17001,17816],"content":"The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running. This store will remain open only for the lifetime of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object. To specify a different isolated storage scope, or to allow the store to remain open (so multiple <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects can be opened from it), use the form of the constructor that accepts an <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object.      > [!CAUTION] >  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and can cause an exception to be thrown.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running.","pos":[0,145]},{"content":"This store will remain open only for the lifetime of the &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; object.","pos":[146,269],"source":" This store will remain open only for the lifetime of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object."},{"content":"To specify a different isolated storage scope, or to allow the store to remain open (so multiple &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; objects can be opened from it), use the form of the constructor that accepts an &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt; object.","pos":[270,566],"source":" To specify a different isolated storage scope, or to allow the store to remain open (so multiple <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects can be opened from it), use the form of the constructor that accepts an <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and can cause an exception to be thrown.","pos":[572,812],"source":"      > [!CAUTION] >  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and can cause an exception to be thrown."}]},{"pos":[18606,18660],"content":"The relative path of the file within isolated storage.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relative path of the file within isolated storage.","pos":[0,54]}]},{"pos":[18726,18784],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.IO.FileMode\"></xref> values."},{"pos":[18854,18932],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.IO.FileAccess\"></xref> values."},{"pos":[19000,19077],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileShare\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.IO.FileShare\"></xref> values."},{"pos":[19257,19295],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> is badly formed.","needQuote":true,"needEscape":true,"source":"The <code>path</code> is badly formed."},{"pos":[19398,19484],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[19593,19687],"content":"No file was found and the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">mode</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to <bpt id=\"p2\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"No file was found and the <code>mode</code> is set to <xref href=\"System.IO.FileMode\"></xref>."},{"pos":[20507,20882],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class giving access to the file designated by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p2\">&lt;/code&gt;</ept> in the specified <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">mode</ph><ept id=\"p3\">&lt;/code&gt;</ept>, with the specified file <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph3\">access</ph><ept id=\"p4\">&lt;/code&gt;</ept>, and in the context of the <bpt id=\"p5\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> specified by <bpt id=\"p6\">&lt;code&gt;</bpt><ph id=\"ph4\">isf</ph><ept id=\"p6\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> class giving access to the file designated by <code>path</code> in the specified <code>mode</code>, with the specified file <code>access</code>, and in the context of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"></xref> specified by <code>isf</code>."},{"pos":[20895,21308],"content":"The `mode` parameter indicates whether a new file should be created or an existing one used. The `access` parameter includes read-only, read/write, and write-only.      > [!CAUTION] >  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`mode`</ph> parameter indicates whether a new file should be created or an existing one used.","pos":[0,92],"source":"The `mode` parameter indicates whether a new file should be created or an existing one used."},{"content":"The <ph id=\"ph1\">`access`</ph> parameter includes read-only, read/write, and write-only.","pos":[93,163],"source":" The `access` parameter includes read-only, read/write, and write-only."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.","pos":[169,410],"source":"      > [!CAUTION] >  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown."}]},{"pos":[22122,22176],"content":"The relative path of the file within isolated storage.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relative path of the file within isolated storage.","pos":[0,54]}]},{"pos":[22242,22300],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.IO.FileMode\"></xref> values."},{"pos":[22370,22448],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.IO.FileAccess\"></xref> values."},{"pos":[22540,22705],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in which to open the <bpt id=\"p2\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"></xref> in which to open the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref>."},{"pos":[22885,22923],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> is badly formed.","needQuote":true,"needEscape":true,"source":"The <code>path</code> is badly formed."},{"pos":[23026,23112],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[23219,23248],"content":"The isolated store is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The isolated store is closed.","pos":[0,29]}]},{"pos":[23357,23451],"content":"No file was found and the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">mode</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to <bpt id=\"p2\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"No file was found and the <code>mode</code> is set to <xref href=\"System.IO.FileMode\"></xref>."},{"pos":[23598,23637],"content":"<ph id=\"ph1\">&lt;code&gt;isf&lt;/code&gt;</ph> does not have a quota.","needQuote":true,"needEscape":true,"source":"<code>isf</code> does not have a quota."},{"pos":[24419,24776],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class giving access to the file designated by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p2\">&lt;/code&gt;</ept>, in the specified <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">mode</ph><ept id=\"p3\">&lt;/code&gt;</ept>, with the specified file <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph3\">access</ph><ept id=\"p4\">&lt;/code&gt;</ept>, using the file sharing mode specified by <bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph4\">share</ph><ept id=\"p5\">&lt;/code&gt;</ept>, with the <bpt id=\"p6\">&lt;code&gt;</bpt><ph id=\"ph5\">buffersize</ph><ept id=\"p6\">&lt;/code&gt;</ept> specified.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> class giving access to the file designated by <code>path</code>, in the specified <code>mode</code>, with the specified file <code>access</code>, using the file sharing mode specified by <code>share</code>, with the <code>buffersize</code> specified."},{"pos":[24789,25777],"content":"The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running. This store will remain open only for the lifetime of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object. To specify a different isolated storage scope, or to allow the store to remain open (so multiple <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects can be opened from it), use the form of the constructor that accepts an <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object.       The `mode` parameter indicates whether a new file should be created or an existing one used. The `access` parameter includes read-only, read/write, and write-only.      > [!CAUTION] >  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running.","pos":[0,145]},{"content":"This store will remain open only for the lifetime of the &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; object.","pos":[146,269],"source":" This store will remain open only for the lifetime of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object."},{"content":"To specify a different isolated storage scope, or to allow the store to remain open (so multiple &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; objects can be opened from it), use the form of the constructor that accepts an &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt; object.","pos":[270,566],"source":" To specify a different isolated storage scope, or to allow the store to remain open (so multiple <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects can be opened from it), use the form of the constructor that accepts an <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object."},{"content":"The <ph id=\"ph1\">`mode`</ph> parameter indicates whether a new file should be created or an existing one used.","pos":[573,665],"source":"       The `mode` parameter indicates whether a new file should be created or an existing one used."},{"content":"The <ph id=\"ph1\">`access`</ph> parameter includes read-only, read/write, and write-only.","pos":[666,736],"source":" The `access` parameter includes read-only, read/write, and write-only."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.","pos":[742,983],"source":"      > [!CAUTION] >  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown."}]},{"pos":[26023,26077],"content":"The relative path of the file within isolated storage.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relative path of the file within isolated storage.","pos":[0,54]}]},{"pos":[26143,26201],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.IO.FileMode\"></xref> values."},{"pos":[26271,26349],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.IO.FileAccess\"></xref> values."},{"pos":[26417,26494],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileShare\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.IO.FileShare\"></xref> values."},{"pos":[26560,26618],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.FileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> buffer size.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.FileStream\"></xref> buffer size."},{"pos":[26798,26836],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> is badly formed.","needQuote":true,"needEscape":true,"source":"The <code>path</code> is badly formed."},{"pos":[26939,27025],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[27134,27228],"content":"No file was found and the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">mode</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to <bpt id=\"p2\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"No file was found and the <code>mode</code> is set to <xref href=\"System.IO.FileMode\"></xref>."},{"pos":[28118,28555],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class giving access to the file designated by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p2\">&lt;/code&gt;</ept>, in the specified <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">mode</ph><ept id=\"p3\">&lt;/code&gt;</ept>, with the specified file <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph3\">access</ph><ept id=\"p4\">&lt;/code&gt;</ept>, using the file sharing mode specified by <bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph4\">share</ph><ept id=\"p5\">&lt;/code&gt;</ept>, and in the context of the <bpt id=\"p6\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept> specified by <bpt id=\"p7\">&lt;code&gt;</bpt><ph id=\"ph5\">isf</ph><ept id=\"p7\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> class giving access to the file designated by <code>path</code>, in the specified <code>mode</code>, with the specified file <code>access</code>, using the file sharing mode specified by <code>share</code>, and in the context of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"></xref> specified by <code>isf</code>."},{"pos":[28568,28981],"content":"The `mode` parameter indicates whether a new file should be created or an existing one used. The `access` parameter includes read-only, read/write, and write-only.      > [!CAUTION] >  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`mode`</ph> parameter indicates whether a new file should be created or an existing one used.","pos":[0,92],"source":"The `mode` parameter indicates whether a new file should be created or an existing one used."},{"content":"The <ph id=\"ph1\">`access`</ph> parameter includes read-only, read/write, and write-only.","pos":[93,163],"source":" The `access` parameter includes read-only, read/write, and write-only."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.","pos":[169,410],"source":"      > [!CAUTION] >  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown."}]},{"pos":[29822,29876],"content":"The relative path of the file within isolated storage.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relative path of the file within isolated storage.","pos":[0,54]}]},{"pos":[29942,30000],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.IO.FileMode\"></xref> values."},{"pos":[30070,30148],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.IO.FileAccess\"></xref> values."},{"pos":[30216,30293],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileShare\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.IO.FileShare\"></xref> values."},{"pos":[30385,30550],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in which to open the <bpt id=\"p2\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"></xref> in which to open the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref>."},{"pos":[30730,30768],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> is badly formed.","needQuote":true,"needEscape":true,"source":"The <code>path</code> is badly formed."},{"pos":[30871,30957],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[31066,31160],"content":"No file was found and the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">mode</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to <bpt id=\"p2\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"No file was found and the <code>mode</code> is set to <xref href=\"System.IO.FileMode\"></xref>."},{"pos":[31307,31346],"content":"<ph id=\"ph1\">&lt;code&gt;isf&lt;/code&gt;</ph> does not have a quota.","needQuote":true,"needEscape":true,"source":"<code>isf</code> does not have a quota."},{"pos":[32280,32761],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class giving access to the file designated by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p2\">&lt;/code&gt;</ept>, in the specified <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">mode</ph><ept id=\"p3\">&lt;/code&gt;</ept>, with the specified file <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph3\">access</ph><ept id=\"p4\">&lt;/code&gt;</ept>, using the file sharing mode specified by <bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph4\">share</ph><ept id=\"p5\">&lt;/code&gt;</ept>, with the <bpt id=\"p6\">&lt;code&gt;</bpt><ph id=\"ph5\">buffersize</ph><ept id=\"p6\">&lt;/code&gt;</ept> specified, and in the context of the <bpt id=\"p7\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"&gt;</bpt><ept id=\"p7\">&lt;/xref&gt;</ept> specified by <bpt id=\"p8\">&lt;code&gt;</bpt><ph id=\"ph6\">isf</ph><ept id=\"p8\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> class giving access to the file designated by <code>path</code>, in the specified <code>mode</code>, with the specified file <code>access</code>, using the file sharing mode specified by <code>share</code>, with the <code>buffersize</code> specified, and in the context of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"></xref> specified by <code>isf</code>."},{"pos":[32774,33187],"content":"The `mode` parameter indicates whether a new file should be created or an existing one used. The `access` parameter includes read-only, read/write, and write-only.      > [!CAUTION] >  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`mode`</ph> parameter indicates whether a new file should be created or an existing one used.","pos":[0,92],"source":"The `mode` parameter indicates whether a new file should be created or an existing one used."},{"content":"The <ph id=\"ph1\">`access`</ph> parameter includes read-only, read/write, and write-only.","pos":[93,163],"source":" The `access` parameter includes read-only, read/write, and write-only."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.","pos":[169,410],"source":"      > [!CAUTION] >  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown."}]},{"pos":[34044,34098],"content":"The relative path of the file within isolated storage.","needQuote":true,"needEscape":true,"nodes":[{"content":"The relative path of the file within isolated storage.","pos":[0,54]}]},{"pos":[34164,34222],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.IO.FileMode\"></xref> values."},{"pos":[34292,34370],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.IO.FileAccess\"></xref> values."},{"pos":[34438,34514],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.IO.FileShare\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.IO.FileShare\"></xref> values"},{"pos":[34580,34638],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.FileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> buffer size.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.FileStream\"></xref> buffer size."},{"pos":[34730,34895],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in which to open the <bpt id=\"p2\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"></xref> in which to open the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref>."},{"pos":[35075,35113],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> is badly formed.","needQuote":true,"needEscape":true,"source":"The <code>path</code> is badly formed."},{"pos":[35216,35302],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[35411,35505],"content":"No file was found and the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">mode</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to <bpt id=\"p2\">&lt;xref href=\"System.IO.FileMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"No file was found and the <code>mode</code> is set to <xref href=\"System.IO.FileMode\"></xref>."},{"pos":[35652,35691],"content":"<ph id=\"ph1\">&lt;code&gt;isf&lt;/code&gt;</ph> does not have a quota.","needQuote":true,"needEscape":true,"source":"<code>isf</code> does not have a quota."},{"pos":[36393,36421],"content":"Begins an asynchronous read.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins an asynchronous read.","pos":[0,28]}]},{"pos":[36434,36696],"content":"The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.       You must call <xref:System.IO.Stream.EndRead%2A> with this <xref:System.IAsyncResult> to find out how many bytes were read.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.       You must call <xref:System.IO.Stream.EndRead%2A> with this <xref:System.IAsyncResult> to find out how many bytes were read.","pos":[0,260],"nodes":[{"content":"The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.","pos":[0,130]},{"content":"You must call &lt;xref:System.IO.Stream.EndRead%2A&gt; with this &lt;xref:System.IAsyncResult&gt; to find out how many bytes were read.","pos":[137,260],"source":"       You must call <xref:System.IO.Stream.EndRead%2A> with this <xref:System.IAsyncResult> to find out how many bytes were read."}]}]},{"pos":[36929,36958],"content":"The buffer to read data into.","needQuote":true,"needEscape":true,"nodes":[{"content":"The buffer to read data into.","pos":[0,29]}]},{"pos":[37020,37074],"content":"The byte offset in <ph id=\"ph1\">`buffer`</ph> at which to begin reading.","needQuote":true,"needEscape":true,"source":"The byte offset in `buffer` at which to begin reading."},{"pos":[37138,37174],"content":"The maximum number of bytes to read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of bytes to read.","pos":[0,36]}]},{"pos":[37250,37347],"content":"The method to call when the asynchronous read operation is completed. This parameter is optional.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method to call when the asynchronous read operation is completed. This parameter is optional.","pos":[0,97],"nodes":[{"content":"The method to call when the asynchronous read operation is completed.","pos":[0,69]},{"content":"This parameter is optional.","pos":[70,97]}]}]},{"pos":[37415,37451],"content":"The status of the asynchronous read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The status of the asynchronous read.","pos":[0,36]}]},{"pos":[37515,37902],"content":"An <xref:System.IAsyncResult> object that represents the asynchronous read, which is possibly still pending. This <xref:System.IAsyncResult> must be passed to this stream's <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead*> method to determine how many bytes were read. This can be done either by the same code that called BeginRead or in a callback passed to BeginRead.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <xref:System.IAsyncResult> object that represents the asynchronous read, which is possibly still pending. This <xref:System.IAsyncResult> must be passed to this stream's <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead*> method to determine how many bytes were read. This can be done either by the same code that called BeginRead or in a callback passed to BeginRead.","pos":[0,387],"nodes":[{"content":"An &lt;xref:System.IAsyncResult&gt; object that represents the asynchronous read, which is possibly still pending.","pos":[0,108],"source":"An <xref:System.IAsyncResult> object that represents the asynchronous read, which is possibly still pending."},{"content":"This &lt;xref:System.IAsyncResult&gt; must be passed to this stream's &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead*&gt; method to determine how many bytes were read.","pos":[109,286],"source":" This <xref:System.IAsyncResult> must be passed to this stream's <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead*> method to determine how many bytes were read."},{"content":"This can be done either by the same code that called BeginRead or in a callback passed to BeginRead.","pos":[287,387]}]}]},{"pos":[38080,38140],"content":"An asynchronous read was attempted past the end of the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"An asynchronous read was attempted past the end of the file.","pos":[0,60]}]},{"pos":[38847,38876],"content":"Begins an asynchronous write.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins an asynchronous write.","pos":[0,29]}]},{"pos":[38889,39331],"content":"If a <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object is writable, writing at the end of the stream expands the stream.       The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.       You must call <xref:System.IO.Stream.EndWrite%2A> with the <xref:System.IAsyncResult> object that this method returns to find out how many bytes were written.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If a <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object is writable, writing at the end of the stream expands the stream.       The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.       You must call <xref:System.IO.Stream.EndWrite%2A> with the <xref:System.IAsyncResult> object that this method returns to find out how many bytes were written.","pos":[0,438],"nodes":[{"content":"If a &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; object is writable, writing at the end of the stream expands the stream.","pos":[0,136],"source":"If a <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object is writable, writing at the end of the stream expands the stream."},{"content":"The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.","pos":[143,273]},{"content":"You must call &lt;xref:System.IO.Stream.EndWrite%2A&gt; with the &lt;xref:System.IAsyncResult&gt; object that this method returns to find out how many bytes were written.","pos":[280,438],"source":"       You must call <xref:System.IO.Stream.EndWrite%2A> with the <xref:System.IAsyncResult> object that this method returns to find out how many bytes were written."}]}]},{"pos":[39565,39593],"content":"The buffer to write data to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The buffer to write data to.","pos":[0,28]}]},{"pos":[39655,39709],"content":"The byte offset in <ph id=\"ph1\">`buffer`</ph> at which to begin writing.","needQuote":true,"needEscape":true,"source":"The byte offset in `buffer` at which to begin writing."},{"pos":[39773,39810],"content":"The maximum number of bytes to write.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of bytes to write.","pos":[0,37]}]},{"pos":[39886,39984],"content":"The method to call when the asynchronous write operation is completed. This parameter is optional.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method to call when the asynchronous write operation is completed. This parameter is optional.","pos":[0,98],"nodes":[{"content":"The method to call when the asynchronous write operation is completed.","pos":[0,70]},{"content":"This parameter is optional.","pos":[71,98]}]}]},{"pos":[40052,40089],"content":"The status of the asynchronous write.","needQuote":true,"needEscape":true,"nodes":[{"content":"The status of the asynchronous write.","pos":[0,37]}]},{"pos":[40153,40587],"content":"An <xref:System.IAsyncResult> that represents the asynchronous write, which is possibly still pending. This <xref:System.IAsyncResult> must be passed to this stream's <xref:System.IO.Stream.EndWrite*> method to ensure that the write is complete, then frees resources appropriately. This can be done either by the same code that called <xref:System.IO.Stream.BeginWrite*> or in a callback passed to <xref:System.IO.Stream.BeginWrite*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous write, which is possibly still pending.","pos":[0,102],"source":"An <xref:System.IAsyncResult> that represents the asynchronous write, which is possibly still pending."},{"content":"This &lt;xref:System.IAsyncResult&gt; must be passed to this stream's &lt;xref:System.IO.Stream.EndWrite<bpt id=\"p1\">*</bpt>&gt; method to ensure that the write is complete, then frees resources appropriately. This can be done either by the same code that called &lt;xref:System.IO.Stream.BeginWrite<ept id=\"p1\">*</ept>&gt; or in a callback passed to &lt;xref:System.IO.Stream.BeginWrite*&gt;.","pos":[103,434],"source":" This <xref:System.IAsyncResult> must be passed to this stream's <xref:System.IO.Stream.EndWrite*> method to ensure that the write is complete, then frees resources appropriately. This can be done either by the same code that called <xref:System.IO.Stream.BeginWrite*> or in a callback passed to <xref:System.IO.Stream.BeginWrite*>."}]},{"pos":[40766,40827],"content":"An asynchronous write was attempted past the end of the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"An asynchronous write was attempted past the end of the file.","pos":[0,61]}]},{"pos":[41246,41307],"content":"Gets a Boolean value indicating whether the file can be read.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a Boolean value indicating whether the file can be read.","pos":[0,61]}]},{"pos":[41319,41440],"content":"Use this property to determine whether the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object can be read.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this property to determine whether the &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; object can be read.","pos":[0,121],"source":"Use this property to determine whether the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object can be read."}]},{"pos":[42354,42588],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if an <bpt id=\"p2\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object can be read; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if an <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object can be read; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[43097,43167],"content":"Gets a Boolean value indicating whether seek operations are supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a Boolean value indicating whether seek operations are supported.","pos":[0,70]}]},{"pos":[43179,43313],"content":"Use this property to determine whether the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object supports seek operations.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this property to determine whether the &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; object supports seek operations.","pos":[0,134],"source":"Use this property to determine whether the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object supports seek operations."}]},{"pos":[43433,43680],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if an <bpt id=\"p2\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object supports seek operations; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if an <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object supports seek operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[44194,44260],"content":"Gets a Boolean value indicating whether you can write to the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a Boolean value indicating whether you can write to the file.","pos":[0,66]}]},{"pos":[44272,44396],"content":"Use this property to determine whether the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object can be written.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this property to determine whether the &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; object can be written.","pos":[0,124],"source":"Use this property to determine whether the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object can be written."}]},{"pos":[45314,45551],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if an <bpt id=\"p2\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object can be written; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if an <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object can be written; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[46118,46282],"content":"Releases the unmanaged resources used by the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally releases the managed resources.","needQuote":true,"needEscape":true,"source":"Releases the unmanaged resources used by the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> and optionally releases the managed resources."},{"pos":[46295,46908],"content":"This method is called by the public <xref:System.IDisposable.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.IDisposable.Dispose%2A> invokes the protected Dispose method with the `disposing` parameter set to true. <xref:System.Object.Finalize%2A> invokes Dispose with `disposing` set to false.       When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> references. This method invokes the <xref:System.IDisposable.Dispose%2A> method of each referenced object.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called by the public &lt;xref:System.IDisposable.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.","pos":[0,128],"source":"This method is called by the public <xref:System.IDisposable.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method."},{"content":"&lt;xref:System.IDisposable.Dispose%2A&gt; invokes the protected Dispose method with the <ph id=\"ph1\">`disposing`</ph> parameter set to true.","pos":[129,246],"source":" <xref:System.IDisposable.Dispose%2A> invokes the protected Dispose method with the `disposing` parameter set to true."},{"content":"&lt;xref:System.Object.Finalize%2A&gt; invokes Dispose with <ph id=\"ph1\">`disposing`</ph> set to false.","pos":[247,326],"source":" <xref:System.Object.Finalize%2A> invokes Dispose with `disposing` set to false."},{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; references.","pos":[333,516],"source":"       When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> references."},{"content":"This method invokes the &lt;xref:System.IDisposable.Dispose%2A&gt; method of each referenced object.","pos":[517,611],"source":" This method invokes the <xref:System.IDisposable.Dispose%2A> method of each referenced object."}]},{"pos":[47065,47273],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only unmanaged resources","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources"},{"pos":[47864,47905],"content":"Ends a pending asynchronous read request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Ends a pending asynchronous read request.","pos":[0,41]}]},{"pos":[47917,48234],"content":"EndRead must be called exactly once on every <xref:System.IAsyncResult> object from <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A>, and calling EndRead is the only way to know how many bytes were read from the <xref:System.IO.Stream>. EndRead will block until the I/O operation has completed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"EndRead must be called exactly once on every <xref:System.IAsyncResult> object from <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A>, and calling EndRead is the only way to know how many bytes were read from the <xref:System.IO.Stream>. EndRead will block until the I/O operation has completed.","pos":[0,317],"nodes":[{"content":"EndRead must be called exactly once on every &lt;xref:System.IAsyncResult&gt; object from &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A&gt;, and calling EndRead is the only way to know how many bytes were read from the &lt;xref:System.IO.Stream&gt;.","pos":[0,259],"source":"EndRead must be called exactly once on every <xref:System.IAsyncResult> object from <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A>, and calling EndRead is the only way to know how many bytes were read from the <xref:System.IO.Stream>."},{"content":"EndRead will block until the I/O operation has completed.","pos":[260,317]}]}]},{"pos":[48403,48436],"content":"The pending asynchronous request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The pending asynchronous request.","pos":[0,33]}]},{"pos":[48493,48703],"content":"The number of bytes read from the stream, between zero and the number of requested bytes. Streams will only return zero at the end of the stream. Otherwise, they will block until at least one byte is available.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes read from the stream, between zero and the number of requested bytes. Streams will only return zero at the end of the stream. Otherwise, they will block until at least one byte is available.","pos":[0,210],"nodes":[{"content":"The number of bytes read from the stream, between zero and the number of requested bytes.","pos":[0,89]},{"content":"Streams will only return zero at the end of the stream.","pos":[90,145]},{"content":"Otherwise, they will block until at least one byte is available.","pos":[146,210]}]}]},{"pos":[48893,48986],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncResult</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>asyncResult</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[49492,49519],"content":"Ends an asynchronous write.","needQuote":true,"needEscape":true,"nodes":[{"content":"Ends an asynchronous write.","pos":[0,27]}]},{"pos":[49532,49750],"content":"EndWrite must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A>.       EndWrite will block until the I/O operation has completed.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"EndWrite must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A>.       EndWrite will block until the I/O operation has completed.","pos":[0,216],"nodes":[{"content":"EndWrite must be called exactly once on every &lt;xref:System.IAsyncResult&gt; from &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A&gt;.","pos":[0,151],"source":"EndWrite must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A>."},{"content":"EndWrite will block until the I/O operation has completed.","pos":[158,216]}]}]},{"pos":[49922,49966],"content":"The pending asynchronous I/O request to end.","needQuote":true,"needEscape":true,"nodes":[{"content":"The pending asynchronous I/O request to end.","pos":[0,44]}]},{"pos":[50157,50260],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncResult</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>asyncResult</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[50673,50759],"content":"Clears buffers for this stream and causes any buffered data to be written to the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears buffers for this stream and causes any buffered data to be written to the file.","pos":[0,86]}]},{"pos":[50772,51489],"content":"Because a buffer can be used for either reading or writing, but not both simultaneously, Flush performs two functions. First, any data previously written to the buffer is copied to the file and the buffer is cleared. Second, if <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A> is `true` and data was previously copied from the file to the buffer for reading, the current position within the file is decremented by the number of unread bytes in the buffer. The buffer is then cleared.       Use the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush%28System.Boolean%29> method overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Because a buffer can be used for either reading or writing, but not both simultaneously, Flush performs two functions.","pos":[0,118]},{"content":"First, any data previously written to the buffer is copied to the file and the buffer is cleared.","pos":[119,216]},{"content":"Second, if &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A&gt; is <ph id=\"ph1\">`true`</ph> and data was previously copied from the file to the buffer for reading, the current position within the file is decremented by the number of unread bytes in the buffer.","pos":[217,476],"source":" Second, if <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A> is `true` and data was previously copied from the file to the buffer for reading, the current position within the file is decremented by the number of unread bytes in the buffer."},{"content":"The buffer is then cleared.","pos":[477,504]},{"content":"Use the &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush%28System.Boolean%29&gt; method overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.","pos":[511,715],"source":"       Use the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush%28System.Boolean%29> method overload when you want to ensure that all buffered data in intermediate file buffers is written to disk."}]},{"pos":[52117,52250],"content":"Clears buffers for this stream and causes any buffered data to be written to the file, and also clears all intermediate file buffers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears buffers for this stream and causes any buffered data to be written to the file, and also clears all intermediate file buffers.","pos":[0,133]}]},{"pos":[52262,52375],"content":"Use this overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.","pos":[0,113]}]},{"pos":[52530,52705],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to flush all intermediate file buffers; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to flush all intermediate file buffers; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[53207,53566],"content":"Gets the file handle for the file that the current <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object encapsulates. Accessing this property is not permitted on an <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object, and throws an <xref href=\"System.IO.IsolatedStorage.IsolatedStorageException\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the file handle for the file that the current <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object encapsulates.","pos":[0,144],"source":"Gets the file handle for the file that the current <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object encapsulates."},{"content":"Accessing this property is not permitted on an <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, and throws an <bpt id=\"p2\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageException\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[145,359],"source":" Accessing this property is not permitted on an <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object, and throws an <xref href=\"System.IO.IsolatedStorage.IsolatedStorageException\"></xref>."}]},{"pos":[53578,53642],"content":"For more information, see <xref:System.IO.FileStream.Handle%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information, see &lt;xref:System.IO.FileStream.Handle%2A&gt;.","pos":[0,64],"source":"For more information, see <xref:System.IO.FileStream.Handle%2A>."}]},{"pos":[54198,54337],"content":"The file handle for the file that the current <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object encapsulates.","needQuote":true,"needEscape":true,"source":"The file handle for the file that the current <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object encapsulates."},{"pos":[54570,54622],"content":"The Handle property always generates this exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Handle property always generates this exception.","pos":[0,52]}]},{"pos":[55041,55208],"content":"Gets a Boolean value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object was opened asynchronously or synchronously.","needQuote":true,"needEscape":true,"source":"Gets a Boolean value indicating whether the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object was opened asynchronously or synchronously."},{"pos":[55220,55741],"content":"Asynchronous <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects cannot be created, unlike <xref:System.IO.FileStream>. However, the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A>, and <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A> methods are supported on synchronous instances, with some performance penalties.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Asynchronous <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects cannot be created, unlike <xref:System.IO.FileStream>. However, the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A>, and <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A> methods are supported on synchronous instances, with some performance penalties.","pos":[0,521],"nodes":[{"content":"Asynchronous &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; objects cannot be created, unlike &lt;xref:System.IO.FileStream&gt;.","pos":[0,134],"source":"Asynchronous <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects cannot be created, unlike <xref:System.IO.FileStream>."},{"content":"However, the &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A&gt;, &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A&gt;, &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A&gt;, and &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A&gt; methods are supported on synchronous instances, with some performance penalties.","pos":[135,521],"source":" However, the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A>, and <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A> methods are supported on synchronous instances, with some performance penalties."}]}]},{"pos":[56525,56777],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object supports asynchronous access; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object supports asynchronous access; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[57281,57384],"content":"Gets the length of the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the length of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object."},{"pos":[57396,57502],"content":"Length represents the number of bytes currently in the file. It is not affected by isolated storage quota.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Length represents the number of bytes currently in the file. It is not affected by isolated storage quota.","pos":[0,106],"nodes":[{"content":"Length represents the number of bytes currently in the file.","pos":[0,60]},{"content":"It is not affected by isolated storage quota.","pos":[61,106]}]}]},{"pos":[58058,58165],"content":"The length of the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object in bytes.","needQuote":true,"needEscape":true,"source":"The length of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object in bytes."},{"pos":[58749,58817],"content":"Prevents other processes from reading from or writing to the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Prevents other processes from reading from or writing to the stream.","pos":[0,68]}]},{"pos":[58829,58953],"content":"Locking a range of a file stream gives the threads of the locking process exclusive access to that range of the file stream.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Locking a range of a file stream gives the threads of the locking process exclusive access to that range of the file stream.","pos":[0,124]}]},{"pos":[59112,59226],"content":"The starting position of the range to lock. The value of this parameter must be equal to or greater than 0 (zero).","needQuote":true,"needEscape":true,"nodes":[{"content":"The starting position of the range to lock. The value of this parameter must be equal to or greater than 0 (zero).","pos":[0,114],"nodes":[{"content":"The starting position of the range to lock.","pos":[0,43]},{"content":"The value of this parameter must be equal to or greater than 0 (zero).","pos":[44,114]}]}]},{"pos":[59288,59316],"content":"The number of bytes to lock.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes to lock.","pos":[0,28]}]},{"pos":[59515,59572],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;length&lt;/code&gt;</ph> is negative.","needQuote":true,"needEscape":true,"source":"<code>position</code> or <code>length</code> is negative."},{"pos":[59679,59698],"content":"The file is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file is closed.","pos":[0,19]}]},{"pos":[59787,59879],"content":"The process cannot access the file because another process has locked a portion of the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The process cannot access the file because another process has locked a portion of the file.","pos":[0,92]}]},{"pos":[60303,60432],"content":"Gets or sets the current position of the current <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets or sets the current position of the current <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object."},{"pos":[60444,60570],"content":"Setting this property works when the &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A&gt; property is <ph id=\"ph1\">`true`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Setting this property works when the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A> property is `true`."},{"pos":[61151,61260],"content":"The current position of this <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The current position of this <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object."},{"pos":[61463,61511],"content":"The position cannot be set to a negative number.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position cannot be set to a negative number.","pos":[0,48]}]},{"pos":[62055,62186],"content":"Copies bytes from the current buffered <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to an array.","needQuote":true,"needEscape":true,"source":"Copies bytes from the current buffered <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object to an array."},{"pos":[62199,63773],"content":"The `buffer` parameter can be an instance of the <xref:System.Buffer> class, or an array of one of the following types: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Char>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, or <xref:System.Double>. The `offset` parameter gives the offset of the byte in buffer at which to begin writing (index in the buffer), and the `count` parameter gives the maximum number of bytes that will be read from this stream. The returned value is the actual number of bytes read, or zero if the end of the stream is reached. If the read operation is successful, the current position of the stream is advanced by the number of bytes read. If an exception occurs, the current position of the stream is unchanged.       The Read method treats the `buffer` parameter as a block of bytes, regardless of its actual type. Likewise, the `offset` and `count` parameters are always specified in bytes. For `buffer` parameters other than byte arrays, this means that an element index must be multiplied by the element size in bytes to form a correct value for `offset` or `count`.       The Read method will return zero only if the end of the stream is reached. In all other cases, Read always reads at least one byte from the stream before returning. If no data is available from the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object upon a call to Read, the method will block until at least one byte of data can be returned.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`buffer`</ph> parameter can be an instance of the &lt;xref:System.Buffer&gt; class, or an array of one of the following types: &lt;xref:System.Byte&gt;, &lt;xref:System.SByte&gt;, &lt;xref:System.Char&gt;, &lt;xref:System.Int16&gt;, &lt;xref:System.Int32&gt;, &lt;xref:System.Int64&gt;, &lt;xref:System.UInt16&gt;, &lt;xref:System.UInt32&gt;, &lt;xref:System.UInt64&gt;, &lt;xref:System.Single&gt;, or &lt;xref:System.Double&gt;.","pos":[0,356],"source":"The `buffer` parameter can be an instance of the <xref:System.Buffer> class, or an array of one of the following types: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Char>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, or <xref:System.Double>."},{"content":"The <ph id=\"ph1\">`offset`</ph> parameter gives the offset of the byte in buffer at which to begin writing (index in the buffer), and the <ph id=\"ph2\">`count`</ph> parameter gives the maximum number of bytes that will be read from this stream.","pos":[357,563],"source":" The `offset` parameter gives the offset of the byte in buffer at which to begin writing (index in the buffer), and the `count` parameter gives the maximum number of bytes that will be read from this stream."},{"content":"The returned value is the actual number of bytes read, or zero if the end of the stream is reached.","pos":[564,663]},{"content":"If the read operation is successful, the current position of the stream is advanced by the number of bytes read.","pos":[664,776]},{"content":"If an exception occurs, the current position of the stream is unchanged.","pos":[777,849]},{"content":"The Read method treats the <ph id=\"ph1\">`buffer`</ph> parameter as a block of bytes, regardless of its actual type.","pos":[856,953],"source":"       The Read method treats the `buffer` parameter as a block of bytes, regardless of its actual type."},{"content":"Likewise, the <ph id=\"ph1\">`offset`</ph> and <ph id=\"ph2\">`count`</ph> parameters are always specified in bytes.","pos":[954,1030],"source":" Likewise, the `offset` and `count` parameters are always specified in bytes."},{"content":"For <ph id=\"ph1\">`buffer`</ph> parameters other than byte arrays, this means that an element index must be multiplied by the element size in bytes to form a correct value for <ph id=\"ph2\">`offset`</ph> or <ph id=\"ph3\">`count`</ph>.","pos":[1031,1208],"source":" For `buffer` parameters other than byte arrays, this means that an element index must be multiplied by the element size in bytes to form a correct value for `offset` or `count`."},{"content":"The Read method will return zero only if the end of the stream is reached.","pos":[1215,1289]},{"content":"In all other cases, Read always reads at least one byte from the stream before returning.","pos":[1290,1379]},{"content":"If no data is available from the &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; object upon a call to Read, the method will block until at least one byte of data can be returned.","pos":[1380,1570],"source":" If no data is available from the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object upon a call to Read, the method will block until at least one byte of data can be returned."}]},{"pos":[63941,63960],"content":"The buffer to read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The buffer to read.","pos":[0,19]}]},{"pos":[64022,64073],"content":"The offset in the buffer at which to begin writing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The offset in the buffer at which to begin writing.","pos":[0,51]}]},{"pos":[64134,64170],"content":"The maximum number of bytes to read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of bytes to read.","pos":[0,36]}]},{"pos":[64227,64432],"content":"The total number of bytes read into the <code>buffer</code>. This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream is reached.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of bytes read into the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,60],"source":"The total number of bytes read into the <code>buffer</code>."},{"content":"This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream is reached.","pos":[61,205]}]},{"pos":[64947,65076],"content":"Reads a single byte from the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object in isolated storage.","needQuote":true,"needEscape":true,"source":"Reads a single byte from the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object in isolated storage."},{"pos":[65886,65955],"content":"The 8-bit unsigned integer value read from the isolated storage file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The 8-bit unsigned integer value read from the isolated storage file.","pos":[0,69]}]},{"pos":[66500,66750],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"Microsoft.Win32.SafeHandles.SafeFileHandle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the operating system file handle for the file that the current <bpt id=\"p2\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object encapsulates.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"Microsoft.Win32.SafeHandles.SafeFileHandle\"></xref> object that represents the operating system file handle for the file that the current <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object encapsulates."},{"pos":[66762,66899],"content":"The SafeFileHandle property is not supported and always generates an <xref:System.IO.IsolatedStorage.IsolatedStorageException> exception.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The SafeFileHandle property is not supported and always generates an &lt;xref:System.IO.IsolatedStorage.IsolatedStorageException&gt; exception.","pos":[0,137],"source":"The SafeFileHandle property is not supported and always generates an <xref:System.IO.IsolatedStorage.IsolatedStorageException> exception."}]},{"pos":[67092,67337],"content":"A <bpt id=\"p1\">&lt;xref href=\"Microsoft.Win32.SafeHandles.SafeFileHandle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the operating system file handle for the file that the current <bpt id=\"p2\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object encapsulates.","needQuote":true,"needEscape":true,"source":"A <xref href=\"Microsoft.Win32.SafeHandles.SafeFileHandle\"></xref> object that represents the operating system file handle for the file that the current <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object encapsulates."},{"pos":[67578,67638],"content":"The SafeFileHandle property always generates this exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SafeFileHandle property always generates this exception.","pos":[0,60]}]},{"pos":[68164,68301],"content":"Sets the current position of this <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the specified value.","needQuote":true,"needEscape":true,"source":"Sets the current position of this <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object to the specified value."},{"pos":[68313,68482],"content":"Some <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects support positioning beyond the length of the stream, others will throw an exception in this case.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Some &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; objects support positioning beyond the length of the stream, others will throw an exception in this case.","pos":[0,169],"source":"Some <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects support positioning beyond the length of the stream, others will throw an exception in this case."}]},{"pos":[68653,68757],"content":"The new position of the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The new position of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object."},{"pos":[68827,68873],"content":"One of the <xref:System.IO.SeekOrigin> values.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the &lt;xref:System.IO.SeekOrigin&gt; values.","pos":[0,46],"source":"One of the <xref:System.IO.SeekOrigin> values."}]},{"pos":[68930,69034],"content":"The new position in the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The new position in the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object."},{"pos":[69213,69291],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">origin</ph><ept id=\"p1\">&lt;/code&gt;</ept> must be one of the &lt;xref:System.IO.SeekOrigin&gt; values.","needQuote":true,"needEscape":true,"source":"The <code>origin</code> must be one of the <xref:System.IO.SeekOrigin> values."},{"pos":[69767,69907],"content":"Sets the length of this <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Sets the length of this <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object to the specified <code>value</code>."},{"pos":[69919,70413],"content":"If the specified `value` is less than the current length of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object, the stream is truncated. If the specified `value` is larger than the current length of the stream, the stream is expanded. If the stream is expanded, the contents of the stream between the old and the new length are undefined. In order to use this method, an <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object must support both writing and seeking.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the specified <ph id=\"ph1\">`value`</ph> is less than the current length of the &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; object, the stream is truncated.","pos":[0,155],"source":"If the specified `value` is less than the current length of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object, the stream is truncated."},{"content":"If the specified <ph id=\"ph1\">`value`</ph> is larger than the current length of the stream, the stream is expanded.","pos":[156,253],"source":" If the specified `value` is larger than the current length of the stream, the stream is expanded."},{"content":"If the stream is expanded, the contents of the stream between the old and the new length are undefined.","pos":[254,357]},{"content":"In order to use this method, an &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; object must support both writing and seeking.","pos":[358,494],"source":" In order to use this method, an <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object must support both writing and seeking."}]},{"pos":[70558,70660],"content":"The new length of the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The new length of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object."},{"pos":[70864,70904],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is a negative number.","needQuote":true,"needEscape":true,"source":"<code>value</code> is a negative number."},{"pos":[71409,71491],"content":"Allows other processes to access all or part of a file that was previously locked.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows other processes to access all or part of a file that was previously locked.","pos":[0,82]}]},{"pos":[71652,71768],"content":"The starting position of the range to unlock. The value of this parameter must be equal to or greater than 0 (zero).","needQuote":true,"needEscape":true,"nodes":[{"content":"The starting position of the range to unlock. The value of this parameter must be equal to or greater than 0 (zero).","pos":[0,116],"nodes":[{"content":"The starting position of the range to unlock.","pos":[0,45]},{"content":"The value of this parameter must be equal to or greater than 0 (zero).","pos":[46,116]}]}]},{"pos":[71830,71860],"content":"The number of bytes to unlock.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes to unlock.","pos":[0,30]}]},{"pos":[72061,72118],"content":"<ph id=\"ph1\">&lt;code&gt;position&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;length&lt;/code&gt;</ph> is negative.","needQuote":true,"needEscape":true,"source":"<code>position</code> or <code>length</code> is negative."},{"pos":[72667,72812],"content":"Writes a block of bytes to the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object using data read from a byte array.","needQuote":true,"needEscape":true,"source":"Writes a block of bytes to the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object using data read from a byte array."},{"pos":[72824,73374],"content":"The `offset` parameter gives the offset of the byte in the `buffer` at which to begin reading, and the `count` parameter gives the number of bytes that will be written to this <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object. If the write operation is successful, the current position of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object is advanced by the number of bytes written. If an exception occurs, the current position of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object is unchanged.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`offset`</ph> parameter gives the offset of the byte in the <ph id=\"ph2\">`buffer`</ph> at which to begin reading, and the <ph id=\"ph3\">`count`</ph> parameter gives the number of bytes that will be written to this &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; object.","pos":[0,242],"source":"The `offset` parameter gives the offset of the byte in the `buffer` at which to begin reading, and the `count` parameter gives the number of bytes that will be written to this <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object."},{"content":"If the write operation is successful, the current position of the &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; object is advanced by the number of bytes written.","pos":[243,418],"source":" If the write operation is successful, the current position of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object is advanced by the number of bytes written."},{"content":"If an exception occurs, the current position of the &lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt; object is unchanged.","pos":[419,550],"source":" If an exception occurs, the current position of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object is unchanged."}]},{"pos":[73543,73563],"content":"The buffer to write.","needQuote":true,"needEscape":true,"nodes":[{"content":"The buffer to write.","pos":[0,20]}]},{"pos":[73625,73671],"content":"The byte offset in buffer from which to begin.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte offset in buffer from which to begin.","pos":[0,46]}]},{"pos":[73732,73769],"content":"The maximum number of bytes to write.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of bytes to write.","pos":[0,37]}]},{"pos":[74001,74125],"content":"The write attempt exceeds the quota for the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The write attempt exceeds the quota for the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object."},{"pos":[74596,74704],"content":"Writes a single byte to the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Writes a single byte to the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object."},{"pos":[75524,75577],"content":"The byte value to write to the isolated storage file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte value to write to the isolated storage file.","pos":[0,53]}]},{"pos":[75813,75937],"content":"The write attempt exceeds the quota for the <bpt id=\"p1\">&lt;xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The write attempt exceeds the quota for the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  id: IsolatedStorageFileStream\n  children:\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(System.IAsyncResult)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(System.Boolean)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Length\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Position\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(System.Int64,System.Int64)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)\n  - System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)\n  langs:\n  - csharp\n  name: IsolatedStorageFileStream\n  nameWithType: IsolatedStorageFileStream\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  type: Class\n  summary: Exposes a file within isolated storage.\n  remarks: \"Use this class to read, write and create files in isolated storage.  \\n  \\n Since this class extends <xref:System.IO.FileStream>, you can use an instance of IsolatedStorageFileStream in most situations where a <xref:System.IO.FileStream> might otherwise be used, such as to construct a <xref:System.IO.StreamReader> or <xref:System.IO.StreamWriter>.  \\n  \\n This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.  \\n  \\n> [!IMPORTANT]\\n>  Isolated storage is not available for [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] apps. Instead, use the application data classes in the `Windows.Storage` namespaces included in the [!INCLUDE[wrt](~/add/includes/wrt-md.md)] API to store local data and files. For more information, see [Application data](http://go.microsoft.com/fwlink/?LinkId=229175) in the Windows Dev Center.\"\n  example:\n  - \"The following console application demonstrates how you can use <xref:System.IO.IsolatedStorage.IsolatedStorageFile> and IsolatedStorageFileStream to write data to an Isolated Storage file. The user is requested to log in. If the user is a new user, a News URL and a Sports URL are recorded as personal preferences in Isolated Storage. If the user is a returning user, the user's current preferences are displayed. The code examples used throughout this namespace are presented in the context of this sample application. You can use the [Storeadm.exe (Isolated Storage Tool)](~/add/includes/ajax-current-ext-md.md) utility to list and remove the Isolated Storage files that are created with this console application.  \\n  \\n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#1](~/add/codesnippet/visualbasic/t-system.io.isolatedstor_2_1.vb)]\\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#1](~/add/codesnippet/cpp/t-system.io.isolatedstor_2_1.cpp)]\\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#1](~/add/codesnippet/csharp/t-system.io.isolatedstor_2_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class IsolatedStorageFileStream : System.IO.FileStream\n  inheritance:\n  - System.IO.Stream\n  - System.IO.FileStream\n  implements: []\n  inheritedMembers:\n  - System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)\n  - System.IO.FileStream.GetAccessControl\n  - System.IO.FileStream.Name\n  - System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)\n  - System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)\n  id: '#ctor(System.String,System.IO.FileMode)'\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: IsolatedStorageFileStream(String,FileMode)\n  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Initializes a new instance of an <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object giving access to the file designated by <code>path</code> in the specified <code>mode</code>.\n  remarks: \"The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running. This store will remain open only for the lifetime of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object. To specify a different isolated storage scope, or to allow the store to remain open (so multiple <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects can be opened from it), use the form of the constructor that accepts an <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object.  \\n  \\n The `mode` parameter indicates whether a new file should be created, an existing one used, and so on.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and can cause an exception to be thrown.\"\n  syntax:\n    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode);\n    parameters:\n    - id: path\n      type: System.String\n      description: The relative path of the file within isolated storage.\n    - id: mode\n      type: System.IO.FileMode\n      description: One of the <xref href=\"System.IO.FileMode\"></xref> values.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>path</code> is badly formed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The directory in <code>path</code> does not exist.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: No file was found and the <code>mode</code> is set to <xref href=\"System.IO.FileMode\"></xref>\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)\n  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)'\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: IsolatedStorageFileStream(String,FileMode,FileAccess)\n  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Initializes a new instance of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> class giving access to the file designated by <code>path</code>, in the specified <code>mode</code>, with the kind of <code>access</code> requested.\n  remarks: \"The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running. This store will remain open only for the lifetime of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object. To specify a different isolated storage scope, or to allow the store to remain open (so multiple <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects can be opened from it), use the form of the constructor that accepts an <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object.  \\n  \\n The `mode` parameter indicates whether a new file should be created or an existing one used. The `access` parameter includes read-only, read/write, and write-only.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.\"\n  syntax:\n    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access);\n    parameters:\n    - id: path\n      type: System.String\n      description: The relative path of the file within isolated storage.\n    - id: mode\n      type: System.IO.FileMode\n      description: One of the <xref href=\"System.IO.FileMode\"></xref> values.\n    - id: access\n      type: System.IO.FileAccess\n      description: A bitwise combination of the <xref href=\"System.IO.FileAccess\"></xref> values.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>path</code> is badly formed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: No file was found and the <code>mode</code> is set to <xref href=\"System.IO.FileMode\"></xref>.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)\n  id: '#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)'\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: IsolatedStorageFileStream(String,FileMode,IsolatedStorageFile)\n  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,IsolatedStorageFile)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,IsolatedStorageFile)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Initializes a new instance of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> class giving access to the file designated by <code>path</code>, in the specified <code>mode</code>, and in the context of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"></xref> specified by <code>isf</code>.\n  remarks: \"The `mode` parameter indicates whether a new file should be created, an existing one used, and so on.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.\"\n  example:\n  - \"The following code example demonstrates the use of this constructor. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \\n  \\n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/visualbasic/ed0ff8fa-778f-4b06-9af8-_1.vb)]\\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/cpp/ed0ff8fa-778f-4b06-9af8-_1.cpp)]\\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/csharp/ed0ff8fa-778f-4b06-9af8-_1.cs)]\"\n  syntax:\n    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.IsolatedStorage.IsolatedStorageFile isf);\n    parameters:\n    - id: path\n      type: System.String\n      description: The relative path of the file within isolated storage.\n    - id: mode\n      type: System.IO.FileMode\n      description: One of the <xref href=\"System.IO.FileMode\"></xref> values.\n    - id: isf\n      type: System.IO.IsolatedStorage.IsolatedStorageFile\n      description: The <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"></xref> in which to open the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref>.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>path</code> is badly formed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: No file was found and the <code>mode</code> is set to <xref href=\"System.IO.FileMode\"></xref>.\n  - type: System.IO.IsolatedStorage.IsolatedStorageException\n    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException\n    description: <code>isf</code> does not have a quota.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)'\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare)\n  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Initializes a new instance of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> class giving access to the file designated by <code>path</code>, in the specified <code>mode</code>, with the specified file <code>access</code>, using the file sharing mode specified by <code>share</code>.\n  remarks: \"The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running. This store will remain open only for the lifetime of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object. To specify a different isolated storage scope, or to allow the store to remain open (so multiple <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects can be opened from it), use the form of the constructor that accepts an <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and can cause an exception to be thrown.\"\n  example:\n  - \"The following code example demonstrates the use of this constructor. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \\n  \\n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#15](~/add/codesnippet/visualbasic/16e66ff6-8db3-485d-ac06-_1.vb)]\\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#15](~/add/codesnippet/cpp/16e66ff6-8db3-485d-ac06-_1.cpp)]\\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#15](~/add/codesnippet/csharp/16e66ff6-8db3-485d-ac06-_1.cs)]\"\n  syntax:\n    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);\n    parameters:\n    - id: path\n      type: System.String\n      description: The relative path of the file within isolated storage.\n    - id: mode\n      type: System.IO.FileMode\n      description: One of the <xref href=\"System.IO.FileMode\"></xref> values.\n    - id: access\n      type: System.IO.FileAccess\n      description: A bitwise combination of the <xref href=\"System.IO.FileAccess\"></xref> values.\n    - id: share\n      type: System.IO.FileShare\n      description: A bitwise combination of the <xref href=\"System.IO.FileShare\"></xref> values.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>path</code> is badly formed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: No file was found and the <code>mode</code> is set to <xref href=\"System.IO.FileMode\"></xref>.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)\n  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)'\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: IsolatedStorageFileStream(String,FileMode,FileAccess,IsolatedStorageFile)\n  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,IsolatedStorageFile)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,IsolatedStorageFile)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Initializes a new instance of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> class giving access to the file designated by <code>path</code> in the specified <code>mode</code>, with the specified file <code>access</code>, and in the context of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"></xref> specified by <code>isf</code>.\n  remarks: \"The `mode` parameter indicates whether a new file should be created or an existing one used. The `access` parameter includes read-only, read/write, and write-only.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.\"\n  example:\n  - \"The following code example demonstrates the use of this constructor. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \\n  \\n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#10](~/add/codesnippet/visualbasic/404bef15-453e-4818-ab5f-_1.vb)]\\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#10](~/add/codesnippet/cpp/404bef15-453e-4818-ab5f-_1.cpp)]\\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#10](~/add/codesnippet/csharp/404bef15-453e-4818-ab5f-_1.cs)]\"\n  syntax:\n    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.IsolatedStorage.IsolatedStorageFile isf);\n    parameters:\n    - id: path\n      type: System.String\n      description: The relative path of the file within isolated storage.\n    - id: mode\n      type: System.IO.FileMode\n      description: One of the <xref href=\"System.IO.FileMode\"></xref> values.\n    - id: access\n      type: System.IO.FileAccess\n      description: A bitwise combination of the <xref href=\"System.IO.FileAccess\"></xref> values.\n    - id: isf\n      type: System.IO.IsolatedStorage.IsolatedStorageFile\n      description: The <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"></xref> in which to open the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref>.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>path</code> is badly formed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The isolated store is closed.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: No file was found and the <code>mode</code> is set to <xref href=\"System.IO.FileMode\"></xref>.\n  - type: System.IO.IsolatedStorage.IsolatedStorageException\n    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException\n    description: <code>isf</code> does not have a quota.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)\n  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)'\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32)\n  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Initializes a new instance of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> class giving access to the file designated by <code>path</code>, in the specified <code>mode</code>, with the specified file <code>access</code>, using the file sharing mode specified by <code>share</code>, with the <code>buffersize</code> specified.\n  remarks: \"The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running. This store will remain open only for the lifetime of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object. To specify a different isolated storage scope, or to allow the store to remain open (so multiple <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects can be opened from it), use the form of the constructor that accepts an <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object.  \\n  \\n The `mode` parameter indicates whether a new file should be created or an existing one used. The `access` parameter includes read-only, read/write, and write-only.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.\"\n  syntax:\n    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize);\n    parameters:\n    - id: path\n      type: System.String\n      description: The relative path of the file within isolated storage.\n    - id: mode\n      type: System.IO.FileMode\n      description: One of the <xref href=\"System.IO.FileMode\"></xref> values.\n    - id: access\n      type: System.IO.FileAccess\n      description: A bitwise combination of the <xref href=\"System.IO.FileAccess\"></xref> values.\n    - id: share\n      type: System.IO.FileShare\n      description: A bitwise combination of the <xref href=\"System.IO.FileShare\"></xref> values.\n    - id: bufferSize\n      type: System.Int32\n      description: The <xref href=\"System.IO.FileStream\"></xref> buffer size.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>path</code> is badly formed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: No file was found and the <code>mode</code> is set to <xref href=\"System.IO.FileMode\"></xref>.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)\n  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)'\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)\n  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Initializes a new instance of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> class giving access to the file designated by <code>path</code>, in the specified <code>mode</code>, with the specified file <code>access</code>, using the file sharing mode specified by <code>share</code>, and in the context of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"></xref> specified by <code>isf</code>.\n  remarks: \"The `mode` parameter indicates whether a new file should be created or an existing one used. The `access` parameter includes read-only, read/write, and write-only.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.\"\n  example:\n  - \"The following code example demonstrates the use of this constructor. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \\n  \\n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/visualbasic/d6e9d0e2-c3f3-4d3d-941f-_1.vb)]\\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/cpp/d6e9d0e2-c3f3-4d3d-941f-_1.cpp)]\\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/csharp/d6e9d0e2-c3f3-4d3d-941f-_1.cs)]\"\n  syntax:\n    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.IO.IsolatedStorage.IsolatedStorageFile isf);\n    parameters:\n    - id: path\n      type: System.String\n      description: The relative path of the file within isolated storage.\n    - id: mode\n      type: System.IO.FileMode\n      description: One of the <xref href=\"System.IO.FileMode\"></xref> values.\n    - id: access\n      type: System.IO.FileAccess\n      description: A bitwise combination of the <xref href=\"System.IO.FileAccess\"></xref> values.\n    - id: share\n      type: System.IO.FileShare\n      description: A bitwise combination of the <xref href=\"System.IO.FileShare\"></xref> values.\n    - id: isf\n      type: System.IO.IsolatedStorage.IsolatedStorageFile\n      description: The <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"></xref> in which to open the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref>.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>path</code> is badly formed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: No file was found and the <code>mode</code> is set to <xref href=\"System.IO.FileMode\"></xref>.\n  - type: System.IO.IsolatedStorage.IsolatedStorageException\n    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException\n    description: <code>isf</code> does not have a quota.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)\n  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)'\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32,IsolatedStorageFile)\n  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32,IsolatedStorageFile)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32,IsolatedStorageFile)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Initializes a new instance of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> class giving access to the file designated by <code>path</code>, in the specified <code>mode</code>, with the specified file <code>access</code>, using the file sharing mode specified by <code>share</code>, with the <code>buffersize</code> specified, and in the context of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"></xref> specified by <code>isf</code>.\n  remarks: \"The `mode` parameter indicates whether a new file should be created or an existing one used. The `access` parameter includes read-only, read/write, and write-only.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.\"\n  example:\n  - \"The following code example demonstrates the use of this constructor. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \\n  \\n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#12](~/add/codesnippet/visualbasic/992df1ce-aff0-4ca4-9ce4-_1.vb)]\\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#12](~/add/codesnippet/cpp/992df1ce-aff0-4ca4-9ce4-_1.cpp)]\\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#12](~/add/codesnippet/csharp/992df1ce-aff0-4ca4-9ce4-_1.cs)]\"\n  syntax:\n    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize, System.IO.IsolatedStorage.IsolatedStorageFile isf);\n    parameters:\n    - id: path\n      type: System.String\n      description: The relative path of the file within isolated storage.\n    - id: mode\n      type: System.IO.FileMode\n      description: One of the <xref href=\"System.IO.FileMode\"></xref> values.\n    - id: access\n      type: System.IO.FileAccess\n      description: A bitwise combination of the <xref href=\"System.IO.FileAccess\"></xref> values.\n    - id: share\n      type: System.IO.FileShare\n      description: A bitwise combination of the <xref href=\"System.IO.FileShare\"></xref> values\n    - id: bufferSize\n      type: System.Int32\n      description: The <xref href=\"System.IO.FileStream\"></xref> buffer size.\n    - id: isf\n      type: System.IO.IsolatedStorage.IsolatedStorageFile\n      description: The <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\"></xref> in which to open the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref>.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>path</code> is badly formed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: No file was found and the <code>mode</code> is set to <xref href=\"System.IO.FileMode\"></xref>.\n  - type: System.IO.IsolatedStorage.IsolatedStorageException\n    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException\n    description: <code>isf</code> does not have a quota.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)\n  nameWithType: IsolatedStorageFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Begins an asynchronous read.\n  remarks: \"The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.  \\n  \\n You must call <xref:System.IO.Stream.EndRead%2A> with this <xref:System.IAsyncResult> to find out how many bytes were read.\"\n  syntax:\n    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int numBytes, AsyncCallback userCallback, object stateObject);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer to read data into.\n    - id: offset\n      type: System.Int32\n      description: The byte offset in `buffer` at which to begin reading.\n    - id: numBytes\n      type: System.Int32\n      description: The maximum number of bytes to read.\n    - id: userCallback\n      type: System.AsyncCallback\n      description: The method to call when the asynchronous read operation is completed. This parameter is optional.\n    - id: stateObject\n      type: System.Object\n      description: The status of the asynchronous read.\n    return:\n      type: System.IAsyncResult\n      description: An <xref:System.IAsyncResult> object that represents the asynchronous read, which is possibly still pending. This <xref:System.IAsyncResult> must be passed to this stream's <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead*> method to determine how many bytes were read. This can be done either by the same code that called BeginRead or in a callback passed to BeginRead.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An asynchronous read was attempted past the end of the file.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)\n  nameWithType: IsolatedStorageFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Begins an asynchronous write.\n  remarks: \"If a <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object is writable, writing at the end of the stream expands the stream.  \\n  \\n The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.  \\n  \\n You must call <xref:System.IO.Stream.EndWrite%2A> with the <xref:System.IAsyncResult> object that this method returns to find out how many bytes were written.\"\n  syntax:\n    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int numBytes, AsyncCallback userCallback, object stateObject);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer to write data to.\n    - id: offset\n      type: System.Int32\n      description: The byte offset in `buffer` at which to begin writing.\n    - id: numBytes\n      type: System.Int32\n      description: The maximum number of bytes to write.\n    - id: userCallback\n      type: System.AsyncCallback\n      description: The method to call when the asynchronous write operation is completed. This parameter is optional.\n    - id: stateObject\n      type: System.Object\n      description: The status of the asynchronous write.\n    return:\n      type: System.IAsyncResult\n      description: An <xref:System.IAsyncResult> that represents the asynchronous write, which is possibly still pending. This <xref:System.IAsyncResult> must be passed to this stream's <xref:System.IO.Stream.EndWrite*> method to ensure that the write is complete, then frees resources appropriately. This can be done either by the same code that called <xref:System.IO.Stream.BeginWrite*> or in a callback passed to <xref:System.IO.Stream.BeginWrite*>.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An asynchronous write was attempted past the end of the file.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead\n  id: CanRead\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: CanRead\n  nameWithType: IsolatedStorageFileStream.CanRead\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Gets a Boolean value indicating whether the file can be read.\n  remarks: Use this property to determine whether the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object can be read.\n  example:\n  - \"The following code example demonstrates how you could use the CanRead property, as a check to see whether a stream can be read before calling the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A> or <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A> methods. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \\n  \\n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/visualbasic/p-system.io.isolatedstor_1_1.vb)]\\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/cpp/p-system.io.isolatedstor_1_1.cpp)]\\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/csharp/p-system.io.isolatedstor_1_1.cs)]\"\n  syntax:\n    content: public override bool CanRead { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if an <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object can be read; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek\n  id: CanSeek\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: CanSeek\n  nameWithType: IsolatedStorageFileStream.CanSeek\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Gets a Boolean value indicating whether seek operations are supported.\n  remarks: Use this property to determine whether the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object supports seek operations.\n  syntax:\n    content: public override bool CanSeek { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if an <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object supports seek operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite\n  id: CanWrite\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: CanWrite\n  nameWithType: IsolatedStorageFileStream.CanWrite\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Gets a Boolean value indicating whether you can write to the file.\n  remarks: Use this property to determine whether the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object can be written.\n  example:\n  - \"The following code example demonstrates how you could use the CanWrite property, as a check to see whether a stream can be read before calling the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write%2A> or <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A> methods. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \\n  \\n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#13](~/add/codesnippet/visualbasic/p-system.io.isolatedstor_3_1.vb)]\\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#13](~/add/codesnippet/cpp/p-system.io.isolatedstor_3_1.cpp)]\\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#13](~/add/codesnippet/csharp/p-system.io.isolatedstor_3_1.cs)]\"\n  syntax:\n    content: public override bool CanWrite { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if an <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object can be written; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: IsolatedStorageFileStream.Dispose(Boolean)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Releases the unmanaged resources used by the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the public <xref:System.IDisposable.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.IDisposable.Dispose%2A> invokes the protected Dispose method with the `disposing` parameter set to true. <xref:System.Object.Finalize%2A> invokes Dispose with `disposing` set to false.  \\n  \\n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> references. This method invokes the <xref:System.IDisposable.Dispose%2A> method of each referenced object.\"\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)\n  id: EndRead(System.IAsyncResult)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: EndRead(IAsyncResult)\n  nameWithType: IsolatedStorageFileStream.EndRead(IAsyncResult)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(IAsyncResult)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Ends a pending asynchronous read request.\n  remarks: EndRead must be called exactly once on every <xref:System.IAsyncResult> object from <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A>, and calling EndRead is the only way to know how many bytes were read from the <xref:System.IO.Stream>. EndRead will block until the I/O operation has completed.\n  syntax:\n    content: public override int EndRead (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: The pending asynchronous request.\n    return:\n      type: System.Int32\n      description: The number of bytes read from the stream, between zero and the number of requested bytes. Streams will only return zero at the end of the stream. Otherwise, they will block until at least one byte is available.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>asyncResult</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(System.IAsyncResult)\n  id: EndWrite(System.IAsyncResult)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: EndWrite(IAsyncResult)\n  nameWithType: IsolatedStorageFileStream.EndWrite(IAsyncResult)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(IAsyncResult)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Ends an asynchronous write.\n  remarks: \"EndWrite must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A>.  \\n  \\n EndWrite will block until the I/O operation has completed.\"\n  syntax:\n    content: public override void EndWrite (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: The pending asynchronous I/O request to end.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>asyncResult</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush\n  id: Flush\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: IsolatedStorageFileStream.Flush()\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Clears buffers for this stream and causes any buffered data to be written to the file.\n  remarks: \"Because a buffer can be used for either reading or writing, but not both simultaneously, Flush performs two functions. First, any data previously written to the buffer is copied to the file and the buffer is cleared. Second, if <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A> is `true` and data was previously copied from the file to the buffer for reading, the current position within the file is decremented by the number of unread bytes in the buffer. The buffer is then cleared.  \\n  \\n Use the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush%28System.Boolean%29> method overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.\"\n  syntax:\n    content: public override void Flush ();\n    parameters: []\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(System.Boolean)\n  id: Flush(System.Boolean)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: Flush(Boolean)\n  nameWithType: IsolatedStorageFileStream.Flush(Boolean)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Clears buffers for this stream and causes any buffered data to be written to the file, and also clears all intermediate file buffers.\n  remarks: Use this overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.\n  syntax:\n    content: public override void Flush (bool flushToDisk);\n    parameters:\n    - id: flushToDisk\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to flush all intermediate file buffers; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle\n  id: Handle\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: Handle\n  nameWithType: IsolatedStorageFileStream.Handle\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Gets the file handle for the file that the current <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object encapsulates. Accessing this property is not permitted on an <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object, and throws an <xref href=\"System.IO.IsolatedStorage.IsolatedStorageException\"></xref>.\n  remarks: For more information, see <xref:System.IO.FileStream.Handle%2A>.\n  example:\n  - \"The following code example demonstrates the Handle property.  \\n  \\n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#4](~/add/codesnippet/visualbasic/p-system.io.isolatedstor_4_1.vb)]\\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#4](~/add/codesnippet/cpp/p-system.io.isolatedstor_4_1.cpp)]\\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#4](~/add/codesnippet/csharp/p-system.io.isolatedstor_4_1.cs)]\"\n  syntax:\n    content: public override IntPtr Handle { get; }\n    return:\n      type: System.IntPtr\n      description: The file handle for the file that the current <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object encapsulates.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle*\n  exceptions:\n  - type: System.IO.IsolatedStorage.IsolatedStorageException\n    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException\n    description: The Handle property always generates this exception.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync\n  id: IsAsync\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: IsAsync\n  nameWithType: IsolatedStorageFileStream.IsAsync\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Gets a Boolean value indicating whether the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object was opened asynchronously or synchronously.\n  remarks: Asynchronous <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects cannot be created, unlike <xref:System.IO.FileStream>. However, the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A>, and <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A> methods are supported on synchronous instances, with some performance penalties.\n  example:\n  - \"The following code example demonstrates how you can use the IsAsync property to verify that an <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> is synchronous. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \\n  \\n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#7](~/add/codesnippet/visualbasic/p-system.io.isolatedstor_7_1.vb)]\\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#7](~/add/codesnippet/cpp/p-system.io.isolatedstor_7_1.cpp)]\\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#7](~/add/codesnippet/csharp/p-system.io.isolatedstor_7_1.cs)]\"\n  syntax:\n    content: public override bool IsAsync { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object supports asynchronous access; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length\n  id: Length\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: Length\n  nameWithType: IsolatedStorageFileStream.Length\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Gets the length of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object.\n  remarks: Length represents the number of bytes currently in the file. It is not affected by isolated storage quota.\n  example:\n  - \"The following code example demonstrates the Length property.  \\n  \\n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/visualbasic/p-system.io.isolatedstor_6_1.vb)]\\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/cpp/p-system.io.isolatedstor_6_1.cpp)]\\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/csharp/p-system.io.isolatedstor_6_1.cs)]\"\n  syntax:\n    content: public override long Length { get; }\n    return:\n      type: System.Int64\n      description: The length of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object in bytes.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)\n  id: Lock(System.Int64,System.Int64)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: Lock(Int64,Int64)\n  nameWithType: IsolatedStorageFileStream.Lock(Int64,Int64)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(Int64,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Prevents other processes from reading from or writing to the stream.\n  remarks: Locking a range of a file stream gives the threads of the locking process exclusive access to that range of the file stream.\n  syntax:\n    content: public override void Lock (long position, long length);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The starting position of the range to lock. The value of this parameter must be equal to or greater than 0 (zero).\n    - id: length\n      type: System.Int64\n      description: The number of bytes to lock.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> or <code>length</code> is negative.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The file is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The process cannot access the file because another process has locked a portion of the file.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position\n  id: Position\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: Position\n  nameWithType: IsolatedStorageFileStream.Position\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Gets or sets the current position of the current <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object.\n  remarks: Setting this property works when the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A> property is `true`.\n  example:\n  - \"The following code example uses the Position property to write data to a file.  \\n  \\n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/visualbasic/p-system.io.isolatedstor_0_1.vb)]\\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/cpp/p-system.io.isolatedstor_0_1.cpp)]\\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/csharp/p-system.io.isolatedstor_0_1.cs)]\"\n  syntax:\n    content: public override long Position { get; set; }\n    return:\n      type: System.Int64\n      description: The current position of this <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The position cannot be set to a negative number.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: Read(Byte[],Int32,Int32)\n  nameWithType: IsolatedStorageFileStream.Read(Byte[],Int32,Int32)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Copies bytes from the current buffered <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object to an array.\n  remarks: \"The `buffer` parameter can be an instance of the <xref:System.Buffer> class, or an array of one of the following types: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Char>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, or <xref:System.Double>. The `offset` parameter gives the offset of the byte in buffer at which to begin writing (index in the buffer), and the `count` parameter gives the maximum number of bytes that will be read from this stream. The returned value is the actual number of bytes read, or zero if the end of the stream is reached. If the read operation is successful, the current position of the stream is advanced by the number of bytes read. If an exception occurs, the current position of the stream is unchanged.  \\n  \\n The Read method treats the `buffer` parameter as a block of bytes, regardless of its actual type. Likewise, the `offset` and `count` parameters are always specified in bytes. For `buffer` parameters other than byte arrays, this means that an element index must be multiplied by the element size in bytes to form a correct value for `offset` or `count`.  \\n  \\n The Read method will return zero only if the end of the stream is reached. In all other cases, Read always reads at least one byte from the stream before returning. If no data is available from the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object upon a call to Read, the method will block until at least one byte of data can be returned.\"\n  syntax:\n    content: public override int Read (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer to read.\n    - id: offset\n      type: System.Int32\n      description: The offset in the buffer at which to begin writing.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to read.\n    return:\n      type: System.Int32\n      description: The total number of bytes read into the <code>buffer</code>. This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream is reached.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte\n  id: ReadByte\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: ReadByte()\n  nameWithType: IsolatedStorageFileStream.ReadByte()\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Reads a single byte from the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object in isolated storage.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how the ReadByte method can be used to read data from an <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \\n  \\n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/visualbasic/m-system.io.isolatedstor_13_1.vb)]\\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/cpp/m-system.io.isolatedstor_13_1.cpp)]\\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/csharp/m-system.io.isolatedstor_13_1.cs)]\"\n  syntax:\n    content: public override int ReadByte ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The 8-bit unsigned integer value read from the isolated storage file.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle\n  id: SafeFileHandle\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: SafeFileHandle\n  nameWithType: IsolatedStorageFileStream.SafeFileHandle\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Gets a <xref href=\"Microsoft.Win32.SafeHandles.SafeFileHandle\"></xref> object that represents the operating system file handle for the file that the current <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object encapsulates.\n  remarks: The SafeFileHandle property is not supported and always generates an <xref:System.IO.IsolatedStorage.IsolatedStorageException> exception.\n  syntax:\n    content: public override Microsoft.Win32.SafeHandles.SafeFileHandle SafeFileHandle { get; }\n    return:\n      type: Microsoft.Win32.SafeHandles.SafeFileHandle\n      description: A <xref href=\"Microsoft.Win32.SafeHandles.SafeFileHandle\"></xref> object that represents the operating system file handle for the file that the current <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object encapsulates.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle*\n  exceptions:\n  - type: System.IO.IsolatedStorage.IsolatedStorageException\n    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException\n    description: The SafeFileHandle property always generates this exception.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: Seek(Int64,SeekOrigin)\n  nameWithType: IsolatedStorageFileStream.Seek(Int64,SeekOrigin)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(Int64,SeekOrigin)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Sets the current position of this <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object to the specified value.\n  remarks: Some <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects support positioning beyond the length of the stream, others will throw an exception in this case.\n  syntax:\n    content: public override long Seek (long offset, System.IO.SeekOrigin origin);\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: The new position of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object.\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: One of the <xref:System.IO.SeekOrigin> values.\n    return:\n      type: System.Int64\n      description: The new position in the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>origin</code> must be one of the <xref:System.IO.SeekOrigin> values.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: SetLength(Int64)\n  nameWithType: IsolatedStorageFileStream.SetLength(Int64)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Sets the length of this <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object to the specified <code>value</code>.\n  remarks: If the specified `value` is less than the current length of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object, the stream is truncated. If the specified `value` is larger than the current length of the stream, the stream is expanded. If the stream is expanded, the contents of the stream between the old and the new length are undefined. In order to use this method, an <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object must support both writing and seeking.\n  syntax:\n    content: public override void SetLength (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: The new length of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>value</code> is a negative number.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(System.Int64,System.Int64)\n  id: Unlock(System.Int64,System.Int64)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: Unlock(Int64,Int64)\n  nameWithType: IsolatedStorageFileStream.Unlock(Int64,Int64)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(Int64,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Allows other processes to access all or part of a file that was previously locked.\n  syntax:\n    content: public override void Unlock (long position, long length);\n    parameters:\n    - id: position\n      type: System.Int64\n      description: The starting position of the range to unlock. The value of this parameter must be equal to or greater than 0 (zero).\n    - id: length\n      type: System.Int64\n      description: The number of bytes to unlock.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>position</code> or <code>length</code> is negative.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: Write(Byte[],Int32,Int32)\n  nameWithType: IsolatedStorageFileStream.Write(Byte[],Int32,Int32)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Writes a block of bytes to the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object using data read from a byte array.\n  remarks: The `offset` parameter gives the offset of the byte in the `buffer` at which to begin reading, and the `count` parameter gives the number of bytes that will be written to this <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object. If the write operation is successful, the current position of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object is advanced by the number of bytes written. If an exception occurs, the current position of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object is unchanged.\n  syntax:\n    content: public override void Write (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer to write.\n    - id: offset\n      type: System.Int32\n      description: The byte offset in buffer from which to begin.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to write.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write*\n  exceptions:\n  - type: System.IO.IsolatedStorage.IsolatedStorageException\n    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException\n    description: The write attempt exceeds the quota for the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object.\n  platform:\n  - net462\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)\n  id: WriteByte(System.Byte)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  langs:\n  - csharp\n  name: WriteByte(Byte)\n  nameWithType: IsolatedStorageFileStream.WriteByte(Byte)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(Byte)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO.IsolatedStorage\n  summary: Writes a single byte to the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how the WriteByte method can be used to read data from an <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \\n  \\n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/visualbasic/m-system.io.isolatedstor_8_1.vb)]\\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/cpp/m-system.io.isolatedstor_8_1.cpp)]\\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/csharp/m-system.io.isolatedstor_8_1.cs)]\"\n  syntax:\n    content: public override void WriteByte (byte value);\n    parameters:\n    - id: value\n      type: System.Byte\n      description: The byte value to write to the isolated storage file.\n  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte*\n  exceptions:\n  - type: System.IO.IsolatedStorage.IsolatedStorageException\n    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException\n    description: The write attempt exceeds the quota for the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\"></xref> object.\n  platform:\n  - net462\nreferences:\n- uid: System.IO.FileStream\n  isExternal: false\n  name: System.IO.FileStream\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IO.DirectoryNotFoundException\n  isExternal: true\n  name: System.IO.DirectoryNotFoundException\n- uid: System.IO.FileNotFoundException\n  isExternal: true\n  name: System.IO.FileNotFoundException\n- uid: System.IO.IsolatedStorage.IsolatedStorageException\n  parent: System.IO.IsolatedStorage\n  isExternal: false\n  name: IsolatedStorageException\n  nameWithType: IsolatedStorageException\n  fullName: System.IO.IsolatedStorage.IsolatedStorageException\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.IO.IOException\n  isExternal: true\n  name: System.IO.IOException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: IsolatedStorageFileStream(String,FileMode)\n  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.FileMode\n  parent: System.IO\n  isExternal: false\n  name: FileMode\n  nameWithType: FileMode\n  fullName: System.IO.FileMode\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: IsolatedStorageFileStream(String,FileMode,FileAccess)\n  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess)\n- uid: System.IO.FileAccess\n  parent: System.IO\n  isExternal: false\n  name: FileAccess\n  nameWithType: FileAccess\n  fullName: System.IO.FileAccess\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: IsolatedStorageFileStream(String,FileMode,IsolatedStorageFile)\n  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,IsolatedStorageFile)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,IsolatedStorageFile)\n- uid: System.IO.IsolatedStorage.IsolatedStorageFile\n  parent: System.IO.IsolatedStorage\n  isExternal: false\n  name: IsolatedStorageFile\n  nameWithType: IsolatedStorageFile\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFile\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare)\n  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare)\n- uid: System.IO.FileShare\n  parent: System.IO\n  isExternal: false\n  name: FileShare\n  nameWithType: FileShare\n  fullName: System.IO.FileShare\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: IsolatedStorageFileStream(String,FileMode,FileAccess,IsolatedStorageFile)\n  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,IsolatedStorageFile)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,IsolatedStorageFile)\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32)\n  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)\n  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32,IsolatedStorageFile)\n  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32,IsolatedStorageFile)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32,IsolatedStorageFile)\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)\n  nameWithType: IsolatedStorageFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)\n  nameWithType: IsolatedStorageFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: CanRead\n  nameWithType: IsolatedStorageFileStream.CanRead\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: IsolatedStorageFileStream.CanSeek\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: IsolatedStorageFileStream.CanWrite\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: IsolatedStorageFileStream.Dispose(Boolean)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(Boolean)\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: EndRead(IAsyncResult)\n  nameWithType: IsolatedStorageFileStream.EndRead(IAsyncResult)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(IAsyncResult)\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(System.IAsyncResult)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: EndWrite(IAsyncResult)\n  nameWithType: IsolatedStorageFileStream.EndWrite(IAsyncResult)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(IAsyncResult)\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Flush()\n  nameWithType: IsolatedStorageFileStream.Flush()\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush()\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(System.Boolean)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Flush(Boolean)\n  nameWithType: IsolatedStorageFileStream.Flush(Boolean)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(Boolean)\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Handle\n  nameWithType: IsolatedStorageFileStream.Handle\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: IsAsync\n  nameWithType: IsolatedStorageFileStream.IsAsync\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Length\n  nameWithType: IsolatedStorageFileStream.Length\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Lock(Int64,Int64)\n  nameWithType: IsolatedStorageFileStream.Lock(Int64,Int64)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(Int64,Int64)\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Position\n  nameWithType: IsolatedStorageFileStream.Position\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Read(Byte[],Int32,Int32)\n  nameWithType: IsolatedStorageFileStream.Read(Byte[],Int32,Int32)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(Byte[],Int32,Int32)\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: ReadByte()\n  nameWithType: IsolatedStorageFileStream.ReadByte()\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte()\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: SafeFileHandle\n  nameWithType: IsolatedStorageFileStream.SafeFileHandle\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle\n- uid: Microsoft.Win32.SafeHandles.SafeFileHandle\n  parent: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: SafeFileHandle\n  nameWithType: SafeFileHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeFileHandle\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Seek(Int64,SeekOrigin)\n  nameWithType: IsolatedStorageFileStream.Seek(Int64,SeekOrigin)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(Int64,SeekOrigin)\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: true\n  name: SeekOrigin\n  nameWithType: SeekOrigin\n  fullName: System.IO.SeekOrigin\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: SetLength(Int64)\n  nameWithType: IsolatedStorageFileStream.SetLength(Int64)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(Int64)\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(System.Int64,System.Int64)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Unlock(Int64,Int64)\n  nameWithType: IsolatedStorageFileStream.Unlock(Int64,Int64)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(Int64,Int64)\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Write(Byte[],Int32,Int32)\n  nameWithType: IsolatedStorageFileStream.Write(Byte[],Int32,Int32)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(Byte[],Int32,Int32)\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: WriteByte(Byte)\n  nameWithType: IsolatedStorageFileStream.WriteByte(Byte)\n  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(Byte)\n- uid: System.Byte\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: IsolatedStorageFileStream\n  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: BeginRead\n  nameWithType: IsolatedStorageFileStream.BeginRead\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: BeginWrite\n  nameWithType: IsolatedStorageFileStream.BeginWrite\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: CanRead\n  nameWithType: IsolatedStorageFileStream.CanRead\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: IsolatedStorageFileStream.CanSeek\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: IsolatedStorageFileStream.CanWrite\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Dispose\n  nameWithType: IsolatedStorageFileStream.Dispose\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: EndRead\n  nameWithType: IsolatedStorageFileStream.EndRead\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: EndWrite\n  nameWithType: IsolatedStorageFileStream.EndWrite\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Flush\n  nameWithType: IsolatedStorageFileStream.Flush\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Handle\n  nameWithType: IsolatedStorageFileStream.Handle\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: IsAsync\n  nameWithType: IsolatedStorageFileStream.IsAsync\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Length\n  nameWithType: IsolatedStorageFileStream.Length\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Lock\n  nameWithType: IsolatedStorageFileStream.Lock\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Position\n  nameWithType: IsolatedStorageFileStream.Position\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Read\n  nameWithType: IsolatedStorageFileStream.Read\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: ReadByte\n  nameWithType: IsolatedStorageFileStream.ReadByte\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: SafeFileHandle\n  nameWithType: IsolatedStorageFileStream.SafeFileHandle\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Seek\n  nameWithType: IsolatedStorageFileStream.Seek\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: SetLength\n  nameWithType: IsolatedStorageFileStream.SetLength\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Unlock\n  nameWithType: IsolatedStorageFileStream.Unlock\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: Write\n  nameWithType: IsolatedStorageFileStream.Write\n- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte*\n  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream\n  isExternal: false\n  name: WriteByte\n  nameWithType: IsolatedStorageFileStream.WriteByte\n"}