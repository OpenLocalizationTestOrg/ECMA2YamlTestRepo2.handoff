{"nodes":[{"pos":[1087,1181],"content":"For remote calls, implements a client channel that uses the TCP protocol to transmit messages.","needQuote":true,"needEscape":true,"nodes":[{"content":"For remote calls, implements a client channel that uses the TCP protocol to transmit messages.","pos":[0,94]}]},{"pos":[1194,2691],"content":"Channels transport messages across remoting boundaries (for example, computers or application domains). The TcpClientChannel class transports messages using the TCP protocol.       Channels are used by the .NET Framework remoting infrastructure to transport remote calls. When a client makes a call to a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel. It is then deserialized and processed. Any returned values are transmitted by the server channel and received by the client channel.       To perform additional processing of messages on the client side, you can specify an implementation of the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> interface through which all messages processed by the TcpClientChannel are passed.       By default, the TcpClientChannel class uses a binary formatter to serialize all messages.       A TcpClientChannel object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.%23ctor%2A> constructor). For a list of these configuration properties, see the documentation for <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.%23ctor%2A>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Channels transport messages across remoting boundaries (for example, computers or application domains). The TcpClientChannel class transports messages using the TCP protocol.       Channels are used by the .NET Framework remoting infrastructure to transport remote calls. When a client makes a call to a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel. It is then deserialized and processed. Any returned values are transmitted by the server channel and received by the client channel.       To perform additional processing of messages on the client side, you can specify an implementation of the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> interface through which all messages processed by the TcpClientChannel are passed.       By default, the TcpClientChannel class uses a binary formatter to serialize all messages.       A TcpClientChannel object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.%23ctor%2A> constructor). For a list of these configuration properties, see the documentation for <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.%23ctor%2A>.","pos":[0,1489],"nodes":[{"content":"Channels transport messages across remoting boundaries (for example, computers or application domains).","pos":[0,103]},{"content":"The TcpClientChannel class transports messages using the TCP protocol.","pos":[104,174]},{"content":"Channels are used by the .NET Framework remoting infrastructure to transport remote calls.","pos":[181,271]},{"content":"When a client makes a call to a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel.","pos":[272,423]},{"content":"It is then deserialized and processed.","pos":[424,462]},{"content":"Any returned values are transmitted by the server channel and received by the client channel.","pos":[463,556]},{"content":"To perform additional processing of messages on the client side, you can specify an implementation of the &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider&gt; interface through which all messages processed by the TcpClientChannel are passed.","pos":[563,818],"source":"       To perform additional processing of messages on the client side, you can specify an implementation of the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> interface through which all messages processed by the TcpClientChannel are passed."},{"content":"By default, the TcpClientChannel class uses a binary formatter to serialize all messages.","pos":[825,914]},{"content":"A TcpClientChannel object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static &lt;xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName&gt; method) or programmatically (by passing a &lt;xref:System.Collections.IDictionary&gt; collection to the &lt;xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.%23ctor%2A&gt; constructor).","pos":[921,1344],"source":"       A TcpClientChannel object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.%23ctor%2A> constructor)."},{"content":"For a list of these configuration properties, see the documentation for &lt;xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.%23ctor%2A&gt;.","pos":[1345,1489],"source":" For a list of these configuration properties, see the documentation for <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.%23ctor%2A>."}]}]},{"pos":[4081,4196],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\"></xref> class."},{"pos":[4208,4379],"content":"The configuration properties of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> instance returned by this constructor are all set to their default values.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The configuration properties of the &lt;xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel&gt; instance returned by this constructor are all set to their default values.","pos":[0,171],"source":"The configuration properties of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> instance returned by this constructor are all set to their default values."}]},{"pos":[5583,5751],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified configuration properties and sink.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\"></xref> class with the specified configuration properties and sink."},{"pos":[5764,6042],"content":"For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).       If you do not require sink functionality, set the `sinkProvider` parameter to `null`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information about channel configuration properties, see <bpt id=\"p1\">[</bpt>Channel and Formatter Configuration Properties<ept id=\"p1\">](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)</ept>.","pos":[0,184],"source":"For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)."},{"content":"If you do not require sink functionality, set the <ph id=\"ph1\">`sinkProvider`</ph> parameter to <ph id=\"ph2\">`null`</ph>.","pos":[191,276],"source":"       If you do not require sink functionality, set the `sinkProvider` parameter to `null`."}]},{"pos":[6692,6820],"content":"A <xref:System.Collections.IDictionary> collection that specifies values for configuration properties to be used by the channel.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Collections.IDictionary&gt; collection that specifies values for configuration properties to be used by the channel.","pos":[0,128],"source":"A <xref:System.Collections.IDictionary> collection that specifies values for configuration properties to be used by the channel."}]},{"pos":[6935,7061],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation to be used by the channel.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel."},{"pos":[7243,7294],"content":"A configuration property was incorrectly formatted.","needQuote":true,"needEscape":true,"nodes":[{"content":"A configuration property was incorrectly formatted.","pos":[0,51]}]},{"pos":[8019,8167],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified name and sink.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\"></xref> class with the specified name and sink."},{"pos":[8180,8500],"content":"This constructor sets the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName%2A> property by using the `name` parameter. If you want to register more than one channel, each channel must have a unique name.       If you do not require sink functionality, set the `sinkProvider` parameter to `null`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor sets the &lt;xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName%2A&gt; property by using the <ph id=\"ph1\">`name`</ph> parameter.","pos":[0,141],"source":"This constructor sets the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName%2A> property by using the `name` parameter."},{"content":"If you want to register more than one channel, each channel must have a unique name.","pos":[142,226]},{"content":"If you do not require sink functionality, set the <ph id=\"ph1\">`sinkProvider`</ph> parameter to <ph id=\"ph2\">`null`</ph>.","pos":[233,318],"source":"       If you do not require sink functionality, set the `sinkProvider` parameter to `null`."}]},{"pos":[9104,9128],"content":"The name of the channel.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the channel.","pos":[0,24]}]},{"pos":[9243,9369],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.IClientChannelSinkProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation to be used by the channel.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Remoting.Channels.IClientChannelSinkProvider\"></xref> implementation to be used by the channel."},{"pos":[9921,9958],"content":"Gets the name of the current channel.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the current channel.","pos":[0,37]}]},{"pos":[9970,10145],"content":"Every registered channel has a unique name. The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Every registered channel has a unique name. The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.","pos":[0,175],"nodes":[{"content":"Every registered channel has a unique name.","pos":[0,43]},{"content":"The name is used to retrieve a specific channel when calling &lt;xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A&gt;.","pos":[44,175],"source":" The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>."}]}]},{"pos":[10528,10598],"content":"A <xref:System.String> instance that contains the name of the channel.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; instance that contains the name of the channel.","pos":[0,70],"source":"A <xref:System.String> instance that contains the name of the channel."}]},{"pos":[11176,11217],"content":"Gets the priority of the current channel.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the priority of the current channel.","pos":[0,41]}]},{"pos":[11229,11441],"content":"The priority controls the order in which competing clients connect to a given endpoint; higher priority channels connect before lower priority channels. The default priority is 1; negative priorities are allowed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The priority controls the order in which competing clients connect to a given endpoint; higher priority channels connect before lower priority channels. The default priority is 1; negative priorities are allowed.","pos":[0,212],"nodes":[{"content":"The priority controls the order in which competing clients connect to a given endpoint; higher priority channels connect before lower priority channels.","pos":[0,152]},{"content":"The default priority is 1; negative priorities are allowed.","pos":[153,212]}]}]},{"pos":[11824,11888],"content":"An integer that represents the priority assigned to the channel.","needQuote":true,"needEscape":true,"nodes":[{"content":"An integer that represents the priority assigned to the channel.","pos":[0,64]}]},{"pos":[12632,12730],"content":"Returns a channel message sink that delivers messages to the specified URL or channel data object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a channel message sink that delivers messages to the specified URL or channel data object.","pos":[0,98]}]},{"pos":[12742,13048],"content":"The CreateMessageSink method returns a channel message sink that delivers messages to either the specified URL or the channel data object. If the `uri` parameter is `null`, `remoteChannelData` is used as a target for the sink. Either the `url` or `remoteChannelData` parameters can be `null`, but not both.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CreateMessageSink method returns a channel message sink that delivers messages to either the specified URL or the channel data object.","pos":[0,138]},{"content":"If the <ph id=\"ph1\">`uri`</ph> parameter is <ph id=\"ph2\">`null`</ph>, <ph id=\"ph3\">`remoteChannelData`</ph> is used as a target for the sink.","pos":[139,226],"source":" If the `uri` parameter is `null`, `remoteChannelData` is used as a target for the sink."},{"content":"Either the <ph id=\"ph1\">`url`</ph> or <ph id=\"ph2\">`remoteChannelData`</ph> parameters can be <ph id=\"ph3\">`null`</ph>, but not both.","pos":[227,306],"source":" Either the `url` or `remoteChannelData` parameters can be `null`, but not both."}]},{"pos":[13619,13736],"content":"The URL to which the new sink delivers messages. Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL to which the new sink delivers messages.","pos":[0,48]},{"content":"Can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[49,117],"source":" Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[13810,13966],"content":"The channel data object of the remote host to which the new sink will deliver messages. Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The channel data object of the remote host to which the new sink will deliver messages.","pos":[0,87]},{"content":"Can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[88,156],"source":" Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[14032,14212],"content":"When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized.","pos":[0,180],"nodes":[{"content":"When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object.","pos":[0,140]},{"content":"This parameter is passed uninitialized.","pos":[141,180]}]}]},{"pos":[14303,14393],"content":"A channel message sink that delivers messages to the specified URL or channel data object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A channel message sink that delivers messages to the specified URL or channel data object.","pos":[0,90]}]},{"pos":[14947,15028],"content":"Gets or sets a Boolean value that indicates whether the current channel is secure","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a Boolean value that indicates whether the current channel is secure","pos":[0,81]}]},{"pos":[15146,15216],"content":"A Boolean value that indicates whether the current instance is secure.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Boolean value that indicates whether the current instance is secure.","pos":[0,70]}]},{"pos":[15845,15930],"content":"Extracts the channel URI and the remote well-known object URI from the specified URL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Extracts the channel URI and the remote well-known object URI from the specified URL.","pos":[0,85]}]},{"pos":[16235,16274],"content":"The URL from which to extract the URIs.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL from which to extract the URIs.","pos":[0,39]}]},{"pos":[16340,16498],"content":"When this method returns, contains a <xref:System.String> instance that holds the URI of the remote well-known object. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a <xref:System.String> instance that holds the URI of the remote well-known object. This parameter is passed uninitialized.","pos":[0,158],"nodes":[{"content":"When this method returns, contains a &lt;xref:System.String&gt; instance that holds the URI of the remote well-known object.","pos":[0,118],"source":"When this method returns, contains a <xref:System.String> instance that holds the URI of the remote well-known object."},{"content":"This parameter is passed uninitialized.","pos":[119,158]}]}]},{"pos":[16556,16572],"content":"The channel URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The channel URI.","pos":[0,16]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  id: TcpClientChannel\n  children:\n  - System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor\n  - System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)\n  - System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)\n  - System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName\n  - System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority\n  - System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(System.String,System.Object,System.String@)\n  - System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.IsSecured\n  - System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.Parse(System.String,System.String@)\n  langs:\n  - csharp\n  name: TcpClientChannel\n  nameWithType: TcpClientChannel\n  fullName: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  type: Class\n  summary: For remote calls, implements a client channel that uses the TCP protocol to transmit messages.\n  remarks: \"Channels transport messages across remoting boundaries (for example, computers or application domains). The TcpClientChannel class transports messages using the TCP protocol.  \\n  \\n Channels are used by the .NET Framework remoting infrastructure to transport remote calls. When a client makes a call to a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel. It is then deserialized and processed. Any returned values are transmitted by the server channel and received by the client channel.  \\n  \\n To perform additional processing of messages on the client side, you can specify an implementation of the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> interface through which all messages processed by the TcpClientChannel are passed.  \\n  \\n By default, the TcpClientChannel class uses a binary formatter to serialize all messages.  \\n  \\n A TcpClientChannel object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.%23ctor%2A> constructor). For a list of these configuration properties, see the documentation for <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.%23ctor%2A>.\"\n  example:\n  - \"The following code example shows the use of the TcpClientChannel class to call a remote type.  \\n  \\n [!code-cs[Remoting_TcpInfo#20](~/add/codesnippet/csharp/t-system.runtime.remotin_19_1.cs)]\\n [!code-cpp[Remoting_TcpInfo#20](~/add/codesnippet/cpp/t-system.runtime.remotin_19_1.cpp)]  \\n  \\n The remote type called in the example above is defined by the following code.  \\n  \\n [!code-cpp[Remoting_TcpInfo#10](~/add/codesnippet/cpp/t-system.runtime.remotin_19_2.cpp)]\\n [!code-cs[Remoting_TcpInfo#10](~/add/codesnippet/csharp/t-system.runtime.remotin_19_2.cs)]\"\n  syntax:\n    content: 'public class TcpClientChannel : System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.Remoting.Channels.IChannelSender\n  - System.Runtime.Remoting.Channels.ISecurableChannel\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor\n  id: '#ctor'\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  langs:\n  - csharp\n  name: TcpClientChannel()\n  nameWithType: TcpClientChannel.TcpClientChannel()\n  fullName: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.TcpClientChannel()\n  type: Constructor\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\"></xref> class.\n  remarks: The configuration properties of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> instance returned by this constructor are all set to their default values.\n  example:\n  - \"The following code example shows the use of this constructor.  \\n  \\n [!code-cs[Remoting_TcpInfo#21](~/add/codesnippet/csharp/m-system.runtime.remotin_80_1.cs)]\\n [!code-cpp[Remoting_TcpInfo#21](~/add/codesnippet/cpp/m-system.runtime.remotin_80_1.cpp)]\"\n  syntax:\n    content: public TcpClientChannel ();\n    parameters: []\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)\n  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)'\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  langs:\n  - csharp\n  name: TcpClientChannel(IDictionary,IClientChannelSinkProvider)\n  nameWithType: TcpClientChannel.TcpClientChannel(IDictionary,IClientChannelSinkProvider)\n  fullName: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.TcpClientChannel(IDictionary,IClientChannelSinkProvider)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\"></xref> class with the specified configuration properties and sink.\n  remarks: \"For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  \\n  \\n If you do not require sink functionality, set the `sinkProvider` parameter to `null`.\"\n  example:\n  - \"The following code example shows the use of this constructor to create a <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> object with specific configuration properties.  \\n  \\n [!code-cpp[Remoting_TcpAuth#31](~/add/codesnippet/cpp/fe018753-fdb7-4d83-aa94-_1.cpp)]\\n [!code-cs[Remoting_TcpAuth#31](~/add/codesnippet/csharp/fe018753-fdb7-4d83-aa94-_1.cs)]\"\n  syntax:\n    content: public TcpClientChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);\n    parameters:\n    - id: properties\n      type: System.Collections.IDictionary\n      description: A <xref:System.Collections.IDictionary> collection that specifies values for configuration properties to be used by the channel.\n    - id: sinkProvider\n      type: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n      description: The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A configuration property was incorrectly formatted.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)\n  id: '#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)'\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  langs:\n  - csharp\n  name: TcpClientChannel(String,IClientChannelSinkProvider)\n  nameWithType: TcpClientChannel.TcpClientChannel(String,IClientChannelSinkProvider)\n  fullName: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.TcpClientChannel(String,IClientChannelSinkProvider)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\"></xref> class with the specified name and sink.\n  remarks: \"This constructor sets the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName%2A> property by using the `name` parameter. If you want to register more than one channel, each channel must have a unique name.  \\n  \\n If you do not require sink functionality, set the `sinkProvider` parameter to `null`.\"\n  example:\n  - \"The following code example shows how to construct a <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel>.  \\n  \\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#31](~/add/codesnippet/cpp/e9629277-863d-4385-ae00-_1.cpp)]\\n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#31](~/add/codesnippet/csharp/e9629277-863d-4385-ae00-_1.cs)]\"\n  syntax:\n    content: public TcpClientChannel (string name, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the channel.\n    - id: sinkProvider\n      type: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n      description: The <xref href=\"System.Runtime.Remoting.Channels.IClientChannelSinkProvider\"></xref> implementation to be used by the channel.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName\n  id: ChannelName\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  langs:\n  - csharp\n  name: ChannelName\n  nameWithType: TcpClientChannel.ChannelName\n  fullName: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName\n  type: Property\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Gets the name of the current channel.\n  remarks: Every registered channel has a unique name. The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.\n  example:\n  - \"The following code example shows the use of this property.  \\n  \\n [!code-cs[Remoting_TcpInfo#22](~/add/codesnippet/csharp/p-system.runtime.remotin_82_1.cs)]\\n [!code-cpp[Remoting_TcpInfo#22](~/add/codesnippet/cpp/p-system.runtime.remotin_82_1.cpp)]\"\n  syntax:\n    content: public string ChannelName { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> instance that contains the name of the channel.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority\n  id: ChannelPriority\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  langs:\n  - csharp\n  name: ChannelPriority\n  nameWithType: TcpClientChannel.ChannelPriority\n  fullName: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority\n  type: Property\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Gets the priority of the current channel.\n  remarks: The priority controls the order in which competing clients connect to a given endpoint; higher priority channels connect before lower priority channels. The default priority is 1; negative priorities are allowed.\n  example:\n  - \"The following code example shows the use of this property.  \\n  \\n [!code-cs[Remoting_TcpInfo#22](~/add/codesnippet/csharp/p-system.runtime.remotin_81_1.cs)]\\n [!code-cpp[Remoting_TcpInfo#22](~/add/codesnippet/cpp/p-system.runtime.remotin_81_1.cpp)]\"\n  syntax:\n    content: public int ChannelPriority { get; }\n    return:\n      type: System.Int32\n      description: An integer that represents the priority assigned to the channel.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(System.String,System.Object,System.String@)\n  id: CreateMessageSink(System.String,System.Object,System.String@)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  langs:\n  - csharp\n  name: CreateMessageSink(String,Object,String)\n  nameWithType: TcpClientChannel.CreateMessageSink(String,Object,String)\n  fullName: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(String,Object,String)\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Returns a channel message sink that delivers messages to the specified URL or channel data object.\n  remarks: The CreateMessageSink method returns a channel message sink that delivers messages to either the specified URL or the channel data object. If the `uri` parameter is `null`, `remoteChannelData` is used as a target for the sink. Either the `url` or `remoteChannelData` parameters can be `null`, but not both.\n  example:\n  - \"The following code example shows the use this method.  \\n  \\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#32](~/add/codesnippet/cpp/2ab6f3e4-8b11-46d8-8ab0-_1.cpp)]\\n [!code-cs[System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#32](~/add/codesnippet/csharp/2ab6f3e4-8b11-46d8-8ab0-_1.cs)]\"\n  syntax:\n    content: public virtual System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);\n    parameters:\n    - id: url\n      type: System.String\n      description: The URL to which the new sink delivers messages. Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: remoteChannelData\n      type: System.Object\n      description: The channel data object of the remote host to which the new sink will deliver messages. Can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: objectURI\n      type: System.String\n      description: When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized.\n    return:\n      type: System.Runtime.Remoting.Messaging.IMessageSink\n      description: A channel message sink that delivers messages to the specified URL or channel data object.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.IsSecured\n  id: IsSecured\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  langs:\n  - csharp\n  name: IsSecured\n  nameWithType: TcpClientChannel.IsSecured\n  fullName: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.IsSecured\n  type: Property\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Gets or sets a Boolean value that indicates whether the current channel is secure\n  syntax:\n    content: public bool IsSecured { get; set; }\n    return:\n      type: System.Boolean\n      description: A Boolean value that indicates whether the current instance is secure.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.IsSecured*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.Parse(System.String,System.String@)\n  id: Parse(System.String,System.String@)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  langs:\n  - csharp\n  name: Parse(String,String)\n  nameWithType: TcpClientChannel.Parse(String,String)\n  fullName: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.Parse(String,String)\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Extracts the channel URI and the remote well-known object URI from the specified URL.\n  remarks: ''\n  example:\n  - \"The following code example shows the use this method.  \\n  \\n System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#33\"\n  syntax:\n    content: public string Parse (string url, out string objectURI);\n    parameters:\n    - id: url\n      type: System.String\n      description: The URL from which to extract the URIs.\n    - id: objectURI\n      type: System.String\n      description: When this method returns, contains a <xref:System.String> instance that holds the URI of the remote well-known object. This parameter is passed uninitialized.\n    return:\n      type: System.String\n      description: The channel URI.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.Parse*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  isExternal: false\n  name: TcpClientChannel()\n  nameWithType: TcpClientChannel.TcpClientChannel()\n  fullName: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.TcpClientChannel()\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  isExternal: false\n  name: TcpClientChannel(IDictionary,IClientChannelSinkProvider)\n  nameWithType: TcpClientChannel.TcpClientChannel(IDictionary,IClientChannelSinkProvider)\n  fullName: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.TcpClientChannel(IDictionary,IClientChannelSinkProvider)\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: true\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IClientChannelSinkProvider\n  nameWithType: IClientChannelSinkProvider\n  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  isExternal: false\n  name: TcpClientChannel(String,IClientChannelSinkProvider)\n  nameWithType: TcpClientChannel.TcpClientChannel(String,IClientChannelSinkProvider)\n  fullName: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.TcpClientChannel(String,IClientChannelSinkProvider)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  isExternal: false\n  name: ChannelName\n  nameWithType: TcpClientChannel.ChannelName\n  fullName: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  isExternal: false\n  name: ChannelPriority\n  nameWithType: TcpClientChannel.ChannelPriority\n  fullName: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(System.String,System.Object,System.String@)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  isExternal: false\n  name: CreateMessageSink(String,Object,String)\n  nameWithType: TcpClientChannel.CreateMessageSink(String,Object,String)\n  fullName: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(String,Object,String)\n- uid: System.Runtime.Remoting.Messaging.IMessageSink\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMessageSink\n  nameWithType: IMessageSink\n  fullName: System.Runtime.Remoting.Messaging.IMessageSink\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.IsSecured\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  isExternal: false\n  name: IsSecured\n  nameWithType: TcpClientChannel.IsSecured\n  fullName: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.IsSecured\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.Parse(System.String,System.String@)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  isExternal: false\n  name: Parse(String,String)\n  nameWithType: TcpClientChannel.Parse(String,String)\n  fullName: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.Parse(String,String)\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor*\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  isExternal: false\n  name: TcpClientChannel\n  nameWithType: TcpClientChannel.TcpClientChannel\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName*\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  isExternal: false\n  name: ChannelName\n  nameWithType: TcpClientChannel.ChannelName\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority*\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  isExternal: false\n  name: ChannelPriority\n  nameWithType: TcpClientChannel.ChannelPriority\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink*\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  isExternal: false\n  name: CreateMessageSink\n  nameWithType: TcpClientChannel.CreateMessageSink\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.IsSecured*\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  isExternal: false\n  name: IsSecured\n  nameWithType: TcpClientChannel.IsSecured\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.Parse*\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel\n  isExternal: false\n  name: Parse\n  nameWithType: TcpClientChannel.Parse\n"}