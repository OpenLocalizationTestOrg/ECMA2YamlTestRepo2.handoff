{"nodes":[{"pos":[427,501],"content":"Provides control over the casing of names when exported to a type library.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides control over the casing of names when exported to a type library.","pos":[0,74]}]},{"pos":[513,838],"content":"In order to control how types are named when exported to a type library, an object must implement this interface, as well as <xref:System.Runtime.InteropServices.ITypeLibExporterNotifySink>. You then pass this object as the last parameter to <xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"In order to control how types are named when exported to a type library, an object must implement this interface, as well as <xref:System.Runtime.InteropServices.ITypeLibExporterNotifySink>. You then pass this object as the last parameter to <xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A>.","pos":[0,325],"nodes":[{"content":"In order to control how types are named when exported to a type library, an object must implement this interface, as well as &lt;xref:System.Runtime.InteropServices.ITypeLibExporterNotifySink&gt;.","pos":[0,190],"source":"In order to control how types are named when exported to a type library, an object must implement this interface, as well as <xref:System.Runtime.InteropServices.ITypeLibExporterNotifySink>."},{"content":"You then pass this object as the last parameter to &lt;xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A&gt;.","pos":[191,325],"source":" You then pass this object as the last parameter to <xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A>."}]}]},{"pos":[1658,1707],"content":"Returns a list of names to control the casing of.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a list of names to control the casing of.","pos":[0,49]}]},{"pos":[1719,1892],"content":"Names in the array returned from this method must be unique. If a name appears twice in the array of names, even with different casing, the first occurance takes precedence.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Names in the array returned from this method must be unique. If a name appears twice in the array of names, even with different casing, the first occurance takes precedence.","pos":[0,173],"nodes":[{"content":"Names in the array returned from this method must be unique.","pos":[0,60]},{"content":"If a name appears twice in the array of names, even with different casing, the first occurance takes precedence.","pos":[61,173]}]}]},{"pos":[2023,2113],"content":"An array of strings, where each element contains the name of a type to control casing for.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of strings, where each element contains the name of a type to control casing for.","pos":[0,90]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.ITypeLibExporterNameProvider\n  id: ITypeLibExporterNameProvider\n  children:\n  - System.Runtime.InteropServices.ITypeLibExporterNameProvider.GetNames\n  langs:\n  - csharp\n  name: ITypeLibExporterNameProvider\n  nameWithType: ITypeLibExporterNameProvider\n  fullName: System.Runtime.InteropServices.ITypeLibExporterNameProvider\n  type: Interface\n  summary: Provides control over the casing of names when exported to a type library.\n  remarks: In order to control how types are named when exported to a type library, an object must implement this interface, as well as <xref:System.Runtime.InteropServices.ITypeLibExporterNotifySink>. You then pass this object as the last parameter to <xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A>.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"FA1F3615-ACB9-486d-9EAC-1BEF87E36B09\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface ITypeLibExporterNameProvider\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices.ITypeLibExporterNameProvider.GetNames\n  id: GetNames\n  parent: System.Runtime.InteropServices.ITypeLibExporterNameProvider\n  langs:\n  - csharp\n  name: GetNames()\n  nameWithType: ITypeLibExporterNameProvider.GetNames()\n  fullName: System.Runtime.InteropServices.ITypeLibExporterNameProvider.GetNames()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Returns a list of names to control the casing of.\n  remarks: Names in the array returned from this method must be unique. If a name appears twice in the array of names, even with different casing, the first occurance takes precedence.\n  syntax:\n    content: public string[] GetNames ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: An array of strings, where each element contains the name of a type to control casing for.\n  overload: System.Runtime.InteropServices.ITypeLibExporterNameProvider.GetNames*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.InteropServices.ITypeLibExporterNameProvider.GetNames\n  parent: System.Runtime.InteropServices.ITypeLibExporterNameProvider\n  isExternal: false\n  name: GetNames()\n  nameWithType: ITypeLibExporterNameProvider.GetNames()\n  fullName: System.Runtime.InteropServices.ITypeLibExporterNameProvider.GetNames()\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices.ITypeLibExporterNameProvider.GetNames*\n  parent: System.Runtime.InteropServices.ITypeLibExporterNameProvider\n  isExternal: false\n  name: GetNames\n  nameWithType: ITypeLibExporterNameProvider.GetNames\n"}