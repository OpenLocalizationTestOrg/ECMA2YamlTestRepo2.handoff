{"nodes":[{"pos":[614,697],"content":"Represents different kinds of constants (literals). This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents different kinds of constants (literals). This class cannot be inherited.","pos":[0,83],"nodes":[{"content":"Represents different kinds of constants (literals).","pos":[0,51]},{"content":"This class cannot be inherited.","pos":[52,83]}]}]},{"pos":[710,1084],"content":"Constant expressions are only supported for the following [!INCLUDE[adonet_edm](~/add/includes/adonet-edm-md.md)] types: `Edm.String`, `Edm.Boolean`, `Edm.Byte`, `Edm.Float`, `Edm.Double`, `Edm.Decimal`, `Edm.DateTime`, `Edm.Guid`, `Edm.Binary`. For more information, see [Conceptual Model Types (CSDL)](http://msdn.microsoft.com/en-us/987b995f-e429-4569-9559-b4146744def4).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Constant expressions are only supported for the following <ph id=\"ph1\">[!INCLUDE[adonet_edm](~/add/includes/adonet-edm-md.md)]</ph> types: <ph id=\"ph2\">`Edm.String`</ph>, <ph id=\"ph3\">`Edm.Boolean`</ph>, <ph id=\"ph4\">`Edm.Byte`</ph>, <ph id=\"ph5\">`Edm.Float`</ph>, <ph id=\"ph6\">`Edm.Double`</ph>, <ph id=\"ph7\">`Edm.Decimal`</ph>, <ph id=\"ph8\">`Edm.DateTime`</ph>, <ph id=\"ph9\">`Edm.Guid`</ph>, <ph id=\"ph10\">`Edm.Binary`</ph>.","pos":[0,245],"source":"Constant expressions are only supported for the following [!INCLUDE[adonet_edm](~/add/includes/adonet-edm-md.md)] types: `Edm.String`, `Edm.Boolean`, `Edm.Byte`, `Edm.Float`, `Edm.Double`, `Edm.Decimal`, `Edm.DateTime`, `Edm.Guid`, `Edm.Binary`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Conceptual Model Types (CSDL)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/987b995f-e429-4569-9559-b4146744def4)</ept>.","pos":[246,374],"source":" For more information, see [Conceptual Model Types (CSDL)](http://msdn.microsoft.com/en-us/987b995f-e429-4569-9559-b4146744def4)."}]},{"pos":[4897,4979],"content":"Implements the visitor pattern for expressions that do not produce a result value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements the visitor pattern for expressions that do not produce a result value.","pos":[0,82]}]},{"pos":[5211,5299],"content":"An instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An instance of <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref>."},{"pos":[5489,5574],"content":"<ph id=\"ph1\">&lt;code&gt;visitor&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>visitor</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6473,6485],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6541,6553],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7079,7103],"content":"Gets the constant value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the constant value.","pos":[0,24]}]},{"pos":[7213,7232],"content":"The constant value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The constant value.","pos":[0,19]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DbConstantExpression\n  id: DbConstantExpression\n  children:\n  - System.Data.Common.CommandTrees.DbConstantExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  - System.Data.Common.CommandTrees.DbConstantExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  - System.Data.Common.CommandTrees.DbConstantExpression.Value\n  langs:\n  - csharp\n  name: DbConstantExpression\n  nameWithType: DbConstantExpression\n  fullName: System.Data.Common.CommandTrees.DbConstantExpression\n  type: Class\n  summary: Represents different kinds of constants (literals). This class cannot be inherited.\n  remarks: 'Constant expressions are only supported for the following [!INCLUDE[adonet_edm](~/add/includes/adonet-edm-md.md)] types: `Edm.String`, `Edm.Boolean`, `Edm.Byte`, `Edm.Float`, `Edm.Double`, `Edm.Decimal`, `Edm.DateTime`, `Edm.Guid`, `Edm.Binary`. For more information, see [Conceptual Model Types (CSDL)](http://msdn.microsoft.com/en-us/987b995f-e429-4569-9559-b4146744def4).'\n  syntax:\n    content: 'public sealed class DbConstantExpression : System.Data.Common.CommandTrees.DbExpression'\n  inheritance:\n  - System.Object\n  - System.Data.Common.CommandTrees.DbExpression\n  implements: []\n  inheritedMembers:\n  - System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)\n  - System.Data.Common.CommandTrees.DbExpression.ExpressionKind\n  - System.Data.Common.CommandTrees.DbExpression.FromBinary(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.FromBoolean(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.FromByte(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTime(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.FromDecimal(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.FromDouble(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.FromGeography(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.FromGeometry(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.FromGuid(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt16(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt32(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt64(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.FromSingle(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.FromString(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.GetHashCode\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.ResultType\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbConstantExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  id: Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  parent: System.Data.Common.CommandTrees.DbConstantExpression\n  langs:\n  - csharp\n  name: Accept(DbExpressionVisitor)\n  nameWithType: DbConstantExpression.Accept(DbExpressionVisitor)\n  fullName: System.Data.Common.CommandTrees.DbConstantExpression.Accept(DbExpressionVisitor)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Implements the visitor pattern for expressions that do not produce a result value.\n  syntax:\n    content: public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);\n    parameters:\n    - id: visitor\n      type: System.Data.Common.CommandTrees.DbExpressionVisitor\n      description: An instance of <xref href=\"System.Data.Common.CommandTrees.DbExpressionVisitor\"></xref>.\n  overload: System.Data.Common.CommandTrees.DbConstantExpression.Accept*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>visitor</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbConstantExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  id: Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  parent: System.Data.Common.CommandTrees.DbConstantExpression\n  langs:\n  - csharp\n  name: Accept(DbExpressionVisitor<TResultType>)\n  nameWithType: DbConstantExpression.Accept(DbExpressionVisitor<TResultType>)\n  fullName: System.Data.Common.CommandTrees.DbConstantExpression.Accept(DbExpressionVisitor<TResultType>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public override TResultType Accept<TResultType> (System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType> visitor);\n    parameters:\n    - id: visitor\n      type: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbConstantExpression.Accept<TResultType>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbConstantExpression.Value\n  id: Value\n  parent: System.Data.Common.CommandTrees.DbConstantExpression\n  langs:\n  - csharp\n  name: Value\n  nameWithType: DbConstantExpression.Value\n  fullName: System.Data.Common.CommandTrees.DbConstantExpression.Value\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets the constant value.\n  syntax:\n    content: public object Value { get; }\n    return:\n      type: System.Object\n      description: The constant value.\n  overload: System.Data.Common.CommandTrees.DbConstantExpression.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: System.Data.Common.CommandTrees.DbExpression\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Data.Common.CommandTrees.DbConstantExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  parent: System.Data.Common.CommandTrees.DbConstantExpression\n  isExternal: false\n  name: Accept(DbExpressionVisitor)\n  nameWithType: DbConstantExpression.Accept(DbExpressionVisitor)\n  fullName: System.Data.Common.CommandTrees.DbConstantExpression.Accept(DbExpressionVisitor)\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor\n  nameWithType: DbExpressionVisitor\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor\n- uid: System.Data.Common.CommandTrees.DbConstantExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  parent: System.Data.Common.CommandTrees.DbConstantExpression\n  isExternal: false\n  name: Accept(DbExpressionVisitor<TResultType>)\n  nameWithType: DbConstantExpression.Accept(DbExpressionVisitor<TResultType>)\n  fullName: System.Data.Common.CommandTrees.DbConstantExpression.Accept(DbExpressionVisitor<TResultType>)\n- uid: TResultType\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor<TResultType>\n  nameWithType: DbExpressionVisitor<TResultType>\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>\n- uid: System.Data.Common.CommandTrees.DbConstantExpression.Value\n  parent: System.Data.Common.CommandTrees.DbConstantExpression\n  isExternal: false\n  name: Value\n  nameWithType: DbConstantExpression.Value\n  fullName: System.Data.Common.CommandTrees.DbConstantExpression.Value\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Common.CommandTrees.DbConstantExpression.Accept*\n  parent: System.Data.Common.CommandTrees.DbConstantExpression\n  isExternal: false\n  name: Accept\n  nameWithType: DbConstantExpression.Accept\n- uid: System.Data.Common.CommandTrees.DbConstantExpression.Accept<TResultType>*\n  parent: System.Data.Common.CommandTrees.DbConstantExpression\n  isExternal: false\n  name: Accept<TResultType>\n  nameWithType: DbConstantExpression.Accept<TResultType>\n- uid: System.Data.Common.CommandTrees.DbConstantExpression.Value*\n  parent: System.Data.Common.CommandTrees.DbConstantExpression\n  isExternal: false\n  name: Value\n  nameWithType: DbConstantExpression.Value\n"}