{"nodes":[{"pos":[312,490],"content":"Provides the possible values for the configuration setting of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.IdnElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the <bpt id=\"p2\">&lt;xref href=\"System.Configuration\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> namespace.","needQuote":true,"needEscape":true,"source":"Provides the possible values for the configuration setting of the <xref href=\"System.Configuration.IdnElement\"></xref> in the <xref href=\"System.Configuration\"></xref> namespace."},{"pos":[503,1361],"content":"The existing <xref:System.Uri> class has been extended to provide support for International Resource Identifiers (IR) based on RFC 3987. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI. This ensures application compatibility with prior versions of the .NET Framework.       The Internationalized Domain Name (IDN) attribute only controls IDN processing. All other IRI processing (character normalization, for example) is always performed by default.       The configuration setting for the <xref:System.Configuration.IdnElement?displayProperty=fullName> will be read once when the first <xref:System.Uri> class is constructed. Changes to configuration settings after that time are ignored.       For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The existing <xref:System.Uri> class has been extended to provide support for International Resource Identifiers (IR) based on RFC 3987. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI. This ensures application compatibility with prior versions of the .NET Framework.       The Internationalized Domain Name (IDN) attribute only controls IDN processing. All other IRI processing (character normalization, for example) is always performed by default.       The configuration setting for the <xref:System.Configuration.IdnElement?displayProperty=fullName> will be read once when the first <xref:System.Uri> class is constructed. Changes to configuration settings after that time are ignored.       For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.","pos":[0,852],"nodes":[{"content":"The existing &lt;xref:System.Uri&gt; class has been extended to provide support for International Resource Identifiers (IR) based on RFC 3987.","pos":[0,136],"source":"The existing <xref:System.Uri> class has been extended to provide support for International Resource Identifiers (IR) based on RFC 3987."},{"content":"Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI.","pos":[137,248]},{"content":"This ensures application compatibility with prior versions of the .NET Framework.","pos":[249,330]},{"content":"The Internationalized Domain Name (IDN) attribute only controls IDN processing.","pos":[337,416]},{"content":"All other IRI processing (character normalization, for example) is always performed by default.","pos":[417,512]},{"content":"The configuration setting for the &lt;xref:System.Configuration.IdnElement?displayProperty=fullName&gt; will be read once when the first &lt;xref:System.Uri&gt; class is constructed.","pos":[519,689],"source":"       The configuration setting for the <xref:System.Configuration.IdnElement?displayProperty=fullName> will be read once when the first <xref:System.Uri> class is constructed."},{"content":"Changes to configuration settings after that time are ignored.","pos":[690,752]},{"content":"For more information on IRI support, see the Remarks section for the &lt;xref:System.Uri&gt; class.","pos":[759,852],"source":"       For more information on IRI support, see the Remarks section for the <xref:System.Uri> class."}]}]},{"pos":[1702,1793],"content":"This value will convert any Unicode domain names to their Punycode equivalents (IDN names).","needQuote":true,"needEscape":true,"nodes":[{"content":"This value will convert any Unicode domain names to their Punycode equivalents (IDN names).","pos":[0,91]}]},{"pos":[1883,1895],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2244,2489],"content":"This value will convert all external Unicode domain names to use the Punycode equivalents (IDN names). In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode names.","needQuote":true,"needEscape":true,"nodes":[{"content":"This value will convert all external Unicode domain names to use the Punycode equivalents (IDN names). In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode names.","pos":[0,245],"nodes":[{"content":"This value will convert all external Unicode domain names to use the Punycode equivalents (IDN names).","pos":[0,102]},{"content":"In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode names.","pos":[103,245]}]}]},{"pos":[2593,2605],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2889,3042],"content":"This value will not convert any Unicode domain names to use Punycode. This is the default value which is consistent with the .NET Framework 2.0 behavior.","needQuote":true,"needEscape":true,"nodes":[{"content":"This value will not convert any Unicode domain names to use Punycode. This is the default value which is consistent with the .NET Framework 2.0 behavior.","pos":[0,153],"nodes":[{"content":"This value will not convert any Unicode domain names to use Punycode.","pos":[0,69]},{"content":"This is the default value which is consistent with the .NET Framework 2.0 behavior.","pos":[70,153]}]}]},{"pos":[3133,3145],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.UriIdnScope\n  id: UriIdnScope\n  children:\n  - System.UriIdnScope.All\n  - System.UriIdnScope.AllExceptIntranet\n  - System.UriIdnScope.None\n  langs:\n  - csharp\n  name: UriIdnScope\n  nameWithType: UriIdnScope\n  fullName: System.UriIdnScope\n  type: Enum\n  summary: Provides the possible values for the configuration setting of the <xref href=\"System.Configuration.IdnElement\"></xref> in the <xref href=\"System.Configuration\"></xref> namespace.\n  remarks: \"The existing <xref:System.Uri> class has been extended to provide support for International Resource Identifiers (IR) based on RFC 3987. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI. This ensures application compatibility with prior versions of the .NET Framework.  \\n  \\n The Internationalized Domain Name (IDN) attribute only controls IDN processing. All other IRI processing (character normalization, for example) is always performed by default.  \\n  \\n The configuration setting for the <xref:System.Configuration.IdnElement?displayProperty=fullName> will be read once when the first <xref:System.Uri> class is constructed. Changes to configuration settings after that time are ignored.  \\n  \\n For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.\"\n  syntax:\n    content: public enum UriIdnScope\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.UriIdnScope.All\n  id: All\n  parent: System.UriIdnScope\n  langs:\n  - csharp\n  name: All\n  nameWithType: UriIdnScope.All\n  fullName: System.UriIdnScope.All\n  type: Field\n  assemblies:\n  - System\n  namespace: System\n  summary: This value will convert any Unicode domain names to their Punycode equivalents (IDN names).\n  syntax:\n    content: All\n    return:\n      type: System.UriIdnScope\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.UriIdnScope.AllExceptIntranet\n  id: AllExceptIntranet\n  parent: System.UriIdnScope\n  langs:\n  - csharp\n  name: AllExceptIntranet\n  nameWithType: UriIdnScope.AllExceptIntranet\n  fullName: System.UriIdnScope.AllExceptIntranet\n  type: Field\n  assemblies:\n  - System\n  namespace: System\n  summary: This value will convert all external Unicode domain names to use the Punycode equivalents (IDN names). In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode names.\n  syntax:\n    content: AllExceptIntranet\n    return:\n      type: System.UriIdnScope\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.UriIdnScope.None\n  id: None\n  parent: System.UriIdnScope\n  langs:\n  - csharp\n  name: None\n  nameWithType: UriIdnScope.None\n  fullName: System.UriIdnScope.None\n  type: Field\n  assemblies:\n  - System\n  namespace: System\n  summary: This value will not convert any Unicode domain names to use Punycode. This is the default value which is consistent with the .NET Framework 2.0 behavior.\n  syntax:\n    content: None\n    return:\n      type: System.UriIdnScope\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.UriIdnScope.All\n  parent: System.UriIdnScope\n  isExternal: false\n  name: All\n  nameWithType: UriIdnScope.All\n  fullName: System.UriIdnScope.All\n- uid: System.UriIdnScope\n  parent: System\n  isExternal: false\n  name: UriIdnScope\n  nameWithType: UriIdnScope\n  fullName: System.UriIdnScope\n- uid: System.UriIdnScope.AllExceptIntranet\n  parent: System.UriIdnScope\n  isExternal: false\n  name: AllExceptIntranet\n  nameWithType: UriIdnScope.AllExceptIntranet\n  fullName: System.UriIdnScope.AllExceptIntranet\n- uid: System.UriIdnScope.None\n  parent: System.UriIdnScope\n  isExternal: false\n  name: None\n  nameWithType: UriIdnScope.None\n  fullName: System.UriIdnScope.None\n"}