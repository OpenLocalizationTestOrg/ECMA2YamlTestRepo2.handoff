{"nodes":[{"pos":[684,803],"content":"An abstract base class for displaying common <ph id=\"ph1\">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> dialogs.","needQuote":true,"needEscape":true,"source":"An abstract base class for displaying common [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] dialogs."},{"pos":[1296,1392],"content":"Provides initialization for base class values when called by the constructor of a derived class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides initialization for base class values when called by the constructor of a derived class.","pos":[0,96]}]},{"pos":[1975,2047],"content":"Determines whether sufficient permissions for displaying a dialog exist.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether sufficient permissions for displaying a dialog exist.","pos":[0,72]}]},{"pos":[2343,2402],"content":"if sufficient permissions do not exist to display a dialog.","needQuote":true,"needEscape":true,"nodes":[{"content":"if sufficient permissions do not exist to display a dialog.","pos":[0,59]}]},{"pos":[2941,3058],"content":"Defines the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box.","pos":[0,117]}]},{"pos":[3070,3205],"content":"HookProc handles dialog initialization by centering the dialog window, relative to the screen, and to set focus to the default control.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"HookProc handles dialog initialization by centering the dialog window, relative to the screen, and to set focus to the default control.","pos":[0,135]}]},{"pos":[3393,3490],"content":"Window handle for the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> dialog.","needQuote":true,"needEscape":true,"source":"Window handle for the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] dialog."},{"pos":[3549,3663],"content":"Windows message to be processed by the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> dialog.","needQuote":true,"needEscape":true,"source":"Windows message to be processed by the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] dialog."},{"pos":[3726,3756],"content":"Parameters for dialog actions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameters for dialog actions.","pos":[0,30]}]},{"pos":[3819,3849],"content":"Parameters for dialog actions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameters for dialog actions.","pos":[0,30]}]},{"pos":[3907,3943],"content":"Always returns <xref:System.IntPtr>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Always returns &lt;xref:System.IntPtr&gt;.","pos":[0,36],"source":"Always returns <xref:System.IntPtr>."}]},{"pos":[4345,4446],"content":"When overridden in a derived class, resets the properties of a common dialog to their default values.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, resets the properties of a common dialog to their default values.","pos":[0,101]}]},{"pos":[4986,5144],"content":"When overridden in a derived class, is called to display a particular type of <ph id=\"ph1\">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> common dialog.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, is called to display a particular type of [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] common dialog."},{"pos":[5156,5269],"content":"The dialog that is eventually shown is assigned an owner window, which is specified by the <ph id=\"ph1\">`hwndOwner`</ph> parameter.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The dialog that is eventually shown is assigned an owner window, which is specified by the `hwndOwner` parameter."},{"pos":[5428,5474],"content":"Handle to the window that owns the dialog box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Handle to the window that owns the dialog box.","pos":[0,46]}]},{"pos":[5533,5863],"content":"If the user clicks the <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> button of the dialog that is displayed (e.g. <bpt id=\"p2\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref href=\"Microsoft.Win32.SaveFileDialog\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>), <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> is returned; otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"If the user clicks the **OK** button of the dialog that is displayed (e.g. <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>, <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>), <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> is returned; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6291,6316],"content":"Displays a common dialog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Displays a common dialog.","pos":[0,25]}]},{"pos":[6329,6634],"content":"ShowDialog performs initialization tasks for all common dialogs before calling <xref:Microsoft.Win32.CommonDialog.RunDialog%2A>.       In the current implementation, the derived classes (<xref:Microsoft.Win32.OpenFileDialog> and <xref:Microsoft.Win32.SaveFileDialog>) will only return `true` or `false`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"ShowDialog performs initialization tasks for all common dialogs before calling &lt;xref:Microsoft.Win32.CommonDialog.RunDialog%2A&gt;.","pos":[0,128],"source":"ShowDialog performs initialization tasks for all common dialogs before calling <xref:Microsoft.Win32.CommonDialog.RunDialog%2A>."},{"content":"In the current implementation, the derived classes (&lt;xref:Microsoft.Win32.OpenFileDialog&gt; and &lt;xref:Microsoft.Win32.SaveFileDialog&gt;) will only return <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>.","pos":[135,303],"source":"       In the current implementation, the derived classes (<xref:Microsoft.Win32.OpenFileDialog> and <xref:Microsoft.Win32.SaveFileDialog>) will only return `true` or `false`."}]},{"pos":[6798,7124],"content":"If the user clicks the OK button of the dialog that is displayed (e.g. <bpt id=\"p1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"Microsoft.Win32.SaveFileDialog\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>), <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> is returned; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"If the user clicks the OK button of the dialog that is displayed (e.g. <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>, <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>), <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> is returned; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7617,7642],"content":"Displays a common dialog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Displays a common dialog.","pos":[0,25]}]},{"pos":[7655,8084],"content":"ShowDialog performs initialization tasks for all common dialogs before calling <xref:Microsoft.Win32.CommonDialog.RunDialog%2A>. Additionally, the dialog that is eventually shown is assigned an owner window, which is specified by the `owner` parameter.       In the current implementation, the derived classes (<xref:Microsoft.Win32.OpenFileDialog> and <xref:Microsoft.Win32.SaveFileDialog>) will only return `true` or `false`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"ShowDialog performs initialization tasks for all common dialogs before calling &lt;xref:Microsoft.Win32.CommonDialog.RunDialog%2A&gt;.","pos":[0,128],"source":"ShowDialog performs initialization tasks for all common dialogs before calling <xref:Microsoft.Win32.CommonDialog.RunDialog%2A>."},{"content":"Additionally, the dialog that is eventually shown is assigned an owner window, which is specified by the <ph id=\"ph1\">`owner`</ph> parameter.","pos":[129,252],"source":" Additionally, the dialog that is eventually shown is assigned an owner window, which is specified by the `owner` parameter."},{"content":"In the current implementation, the derived classes (&lt;xref:Microsoft.Win32.OpenFileDialog&gt; and &lt;xref:Microsoft.Win32.SaveFileDialog&gt;) will only return <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>.","pos":[259,427],"source":"       In the current implementation, the derived classes (<xref:Microsoft.Win32.OpenFileDialog> and <xref:Microsoft.Win32.SaveFileDialog>) will only return `true` or `false`."}]},{"pos":[8258,8300],"content":"Handle to the window that owns the dialog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Handle to the window that owns the dialog.","pos":[0,42]}]},{"pos":[8376,8702],"content":"If the user clicks the OK button of the dialog that is displayed (e.g. <bpt id=\"p1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"Microsoft.Win32.SaveFileDialog\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>), <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> is returned; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"If the user clicks the OK button of the dialog that is displayed (e.g. <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>, <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>), <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> is returned; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9092,9213],"content":"Gets or sets an object associated with the dialog. This provides the ability to attach an arbitrary object to the dialog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets an object associated with the dialog. This provides the ability to attach an arbitrary object to the dialog.","pos":[0,121],"nodes":[{"content":"Gets or sets an object associated with the dialog.","pos":[0,50]},{"content":"This provides the ability to attach an arbitrary object to the dialog.","pos":[51,121]}]}]},{"pos":[9364,9432],"content":"A <xref:System.Object> that is attached or associated with a dialog.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Object&gt; that is attached or associated with a dialog.","pos":[0,68],"source":"A <xref:System.Object> that is attached or associated with a dialog."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Win32.CommonDialog\n  id: CommonDialog\n  children:\n  - Microsoft.Win32.CommonDialog.#ctor\n  - Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog\n  - Microsoft.Win32.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  - Microsoft.Win32.CommonDialog.Reset\n  - Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)\n  - Microsoft.Win32.CommonDialog.ShowDialog\n  - Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)\n  - Microsoft.Win32.CommonDialog.Tag\n  langs:\n  - csharp\n  name: CommonDialog\n  nameWithType: CommonDialog\n  fullName: Microsoft.Win32.CommonDialog\n  type: Class\n  summary: An abstract base class for displaying common [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] dialogs.\n  syntax:\n    content: public abstract class CommonDialog\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.CommonDialog.#ctor\n  id: '#ctor'\n  parent: Microsoft.Win32.CommonDialog\n  langs:\n  - csharp\n  name: CommonDialog()\n  nameWithType: CommonDialog.CommonDialog()\n  fullName: Microsoft.Win32.CommonDialog.CommonDialog()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Provides initialization for base class values when called by the constructor of a derived class.\n  syntax:\n    content: protected CommonDialog ();\n    parameters: []\n  overload: Microsoft.Win32.CommonDialog.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog\n  id: CheckPermissionsToShowDialog\n  parent: Microsoft.Win32.CommonDialog\n  langs:\n  - csharp\n  name: CheckPermissionsToShowDialog()\n  nameWithType: CommonDialog.CheckPermissionsToShowDialog()\n  fullName: Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Determines whether sufficient permissions for displaying a dialog exist.\n  syntax:\n    content: protected virtual void CheckPermissionsToShowDialog ();\n    parameters: []\n  overload: Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: if sufficient permissions do not exist to display a dialog.\n  platform:\n  - net462\n- uid: Microsoft.Win32.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  id: HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  parent: Microsoft.Win32.CommonDialog\n  langs:\n  - csharp\n  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)\n  nameWithType: CommonDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)\n  fullName: Microsoft.Win32.CommonDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Defines the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box.\n  remarks: HookProc handles dialog initialization by centering the dialog window, relative to the screen, and to set focus to the default control.\n  syntax:\n    content: protected virtual IntPtr HookProc (IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam);\n    parameters:\n    - id: hwnd\n      type: System.IntPtr\n      description: Window handle for the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] dialog.\n    - id: msg\n      type: System.Int32\n      description: Windows message to be processed by the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] dialog.\n    - id: wParam\n      type: System.IntPtr\n      description: Parameters for dialog actions.\n    - id: lParam\n      type: System.IntPtr\n      description: Parameters for dialog actions.\n    return:\n      type: System.IntPtr\n      description: Always returns <xref:System.IntPtr>.\n  overload: Microsoft.Win32.CommonDialog.HookProc*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.CommonDialog.Reset\n  id: Reset\n  parent: Microsoft.Win32.CommonDialog\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: CommonDialog.Reset()\n  fullName: Microsoft.Win32.CommonDialog.Reset()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: When overridden in a derived class, resets the properties of a common dialog to their default values.\n  syntax:\n    content: public abstract void Reset ();\n    parameters: []\n  overload: Microsoft.Win32.CommonDialog.Reset*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)\n  id: RunDialog(System.IntPtr)\n  parent: Microsoft.Win32.CommonDialog\n  langs:\n  - csharp\n  name: RunDialog(IntPtr)\n  nameWithType: CommonDialog.RunDialog(IntPtr)\n  fullName: Microsoft.Win32.CommonDialog.RunDialog(IntPtr)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: When overridden in a derived class, is called to display a particular type of [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] common dialog.\n  remarks: The dialog that is eventually shown is assigned an owner window, which is specified by the `hwndOwner` parameter.\n  syntax:\n    content: protected abstract bool RunDialog (IntPtr hwndOwner);\n    parameters:\n    - id: hwndOwner\n      type: System.IntPtr\n      description: Handle to the window that owns the dialog box.\n    return:\n      type: System.Boolean\n      description: If the user clicks the **OK** button of the dialog that is displayed (e.g. <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>, <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>), <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> is returned; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Win32.CommonDialog.RunDialog*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.CommonDialog.ShowDialog\n  id: ShowDialog\n  parent: Microsoft.Win32.CommonDialog\n  langs:\n  - csharp\n  name: ShowDialog()\n  nameWithType: CommonDialog.ShowDialog()\n  fullName: Microsoft.Win32.CommonDialog.ShowDialog()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Displays a common dialog.\n  remarks: \"ShowDialog performs initialization tasks for all common dialogs before calling <xref:Microsoft.Win32.CommonDialog.RunDialog%2A>.  \\n  \\n In the current implementation, the derived classes (<xref:Microsoft.Win32.OpenFileDialog> and <xref:Microsoft.Win32.SaveFileDialog>) will only return `true` or `false`.\"\n  syntax:\n    content: public virtual Nullable<bool> ShowDialog ();\n    parameters: []\n    return:\n      type: System.Nullable{System.Boolean}\n      description: If the user clicks the OK button of the dialog that is displayed (e.g. <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>, <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>), <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> is returned; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Win32.CommonDialog.ShowDialog*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)\n  id: ShowDialog(System.Windows.Window)\n  parent: Microsoft.Win32.CommonDialog\n  langs:\n  - csharp\n  name: ShowDialog(Window)\n  nameWithType: CommonDialog.ShowDialog(Window)\n  fullName: Microsoft.Win32.CommonDialog.ShowDialog(Window)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Displays a common dialog.\n  remarks: \"ShowDialog performs initialization tasks for all common dialogs before calling <xref:Microsoft.Win32.CommonDialog.RunDialog%2A>. Additionally, the dialog that is eventually shown is assigned an owner window, which is specified by the `owner` parameter.  \\n  \\n In the current implementation, the derived classes (<xref:Microsoft.Win32.OpenFileDialog> and <xref:Microsoft.Win32.SaveFileDialog>) will only return `true` or `false`.\"\n  syntax:\n    content: public Nullable<bool> ShowDialog (System.Windows.Window owner);\n    parameters:\n    - id: owner\n      type: System.Windows.Window\n      description: Handle to the window that owns the dialog.\n    return:\n      type: System.Nullable{System.Boolean}\n      description: If the user clicks the OK button of the dialog that is displayed (e.g. <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>, <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>), <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> is returned; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.Win32.CommonDialog.ShowDialog*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Win32.CommonDialog.Tag\n  id: Tag\n  parent: Microsoft.Win32.CommonDialog\n  langs:\n  - csharp\n  name: Tag\n  nameWithType: CommonDialog.Tag\n  fullName: Microsoft.Win32.CommonDialog.Tag\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets an object associated with the dialog. This provides the ability to attach an arbitrary object to the dialog.\n  remarks: ''\n  example:\n  - See Also\n  syntax:\n    content: public object Tag { get; set; }\n    return:\n      type: System.Object\n      description: A <xref:System.Object> that is attached or associated with a dialog.\n  overload: Microsoft.Win32.CommonDialog.Tag*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: Microsoft.Win32.CommonDialog.#ctor\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: CommonDialog()\n  nameWithType: CommonDialog.CommonDialog()\n  fullName: Microsoft.Win32.CommonDialog.CommonDialog()\n- uid: Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: CheckPermissionsToShowDialog()\n  nameWithType: CommonDialog.CheckPermissionsToShowDialog()\n  fullName: Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog()\n- uid: Microsoft.Win32.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)\n  nameWithType: CommonDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)\n  fullName: Microsoft.Win32.CommonDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.Win32.CommonDialog.Reset\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: Reset()\n  nameWithType: CommonDialog.Reset()\n  fullName: Microsoft.Win32.CommonDialog.Reset()\n- uid: Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: RunDialog(IntPtr)\n  nameWithType: CommonDialog.RunDialog(IntPtr)\n  fullName: Microsoft.Win32.CommonDialog.RunDialog(IntPtr)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Win32.CommonDialog.ShowDialog\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: ShowDialog()\n  nameWithType: CommonDialog.ShowDialog()\n  fullName: Microsoft.Win32.CommonDialog.ShowDialog()\n- uid: System.Nullable{System.Boolean}\n  parent: System\n  isExternal: true\n  name: Nullable<Boolean>\n  nameWithType: Nullable<Boolean>\n  fullName: System.Nullable<System.Boolean>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Boolean>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: ShowDialog(Window)\n  nameWithType: CommonDialog.ShowDialog(Window)\n  fullName: Microsoft.Win32.CommonDialog.ShowDialog(Window)\n- uid: System.Windows.Window\n  parent: System.Windows\n  isExternal: false\n  name: Window\n  nameWithType: Window\n  fullName: System.Windows.Window\n- uid: Microsoft.Win32.CommonDialog.Tag\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: Tag\n  nameWithType: CommonDialog.Tag\n  fullName: Microsoft.Win32.CommonDialog.Tag\n- uid: Microsoft.Win32.CommonDialog.#ctor*\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: CommonDialog\n  nameWithType: CommonDialog.CommonDialog\n- uid: Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog*\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: CheckPermissionsToShowDialog\n  nameWithType: CommonDialog.CheckPermissionsToShowDialog\n- uid: Microsoft.Win32.CommonDialog.HookProc*\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: HookProc\n  nameWithType: CommonDialog.HookProc\n- uid: Microsoft.Win32.CommonDialog.Reset*\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: Reset\n  nameWithType: CommonDialog.Reset\n- uid: Microsoft.Win32.CommonDialog.RunDialog*\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: RunDialog\n  nameWithType: CommonDialog.RunDialog\n- uid: Microsoft.Win32.CommonDialog.ShowDialog*\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: ShowDialog\n  nameWithType: CommonDialog.ShowDialog\n- uid: Microsoft.Win32.CommonDialog.Tag*\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: Tag\n  nameWithType: CommonDialog.Tag\n"}