{"nodes":[{"pos":[625,721],"content":"Provides data for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.QueryContinueDrag\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Provides data for the <xref href=\"System.Windows.Forms.Control.QueryContinueDrag\"></xref> event."},{"pos":[734,1605],"content":"The <xref:System.Windows.Forms.Control.QueryContinueDrag> event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled. A QueryContinueDragEventArgs specifies whether and how the drag-and-drop operation should proceed, whether any modifier keys are pressed, and whether the user has pressed the ESC key.       By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if the ESC key was pressed and sets `Action` to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if the left, middle, or right mouse button is pressed.       For information about the event model, see [Events](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt; event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled.","pos":[0,199],"source":"The <xref:System.Windows.Forms.Control.QueryContinueDrag> event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled."},{"content":"A QueryContinueDragEventArgs specifies whether and how the drag-and-drop operation should proceed, whether any modifier keys are pressed, and whether the user has pressed the ESC key.","pos":[200,383]},{"content":"By default, the &lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt; event sets &lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt; to &lt;xref:System.Windows.Forms.DragAction?displayProperty=fullName&gt; if the ESC key was pressed and sets <ph id=\"ph1\">`Action`</ph> to &lt;xref:System.Windows.Forms.DragAction?displayProperty=fullName&gt; if the left, middle, or right mouse button is pressed.","pos":[390,769],"source":"       By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if the ESC key was pressed and sets `Action` to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if the left, middle, or right mouse button is pressed."},{"content":"For information about the event model, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[776,867],"source":"       For information about the event model, see [Events](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[3105,3214],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.QueryContinueDragEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.QueryContinueDragEventArgs\"></xref> class."},{"pos":[3427,3478],"content":"The current state of the SHIFT, CTRL, and ALT keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current state of the SHIFT, CTRL, and ALT keys.","pos":[0,51]}]},{"pos":[3549,3712],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the ESC key was pressed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the ESC key was pressed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3793,3854],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.DragAction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.DragAction\"></xref> value."},{"pos":[4348,4401],"content":"Gets or sets the status of a drag-and-drop operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the status of a drag-and-drop operation.","pos":[0,53]}]},{"pos":[4413,4734],"content":"By default, the &lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt; event sets Action to &lt;xref:System.Windows.Forms.DragAction?displayProperty=fullName&gt; if the ESC key was pressed and sets <ph id=\"ph1\">`Action`</ph> to &lt;xref:System.Windows.Forms.DragAction?displayProperty=fullName&gt; if the left, middle, or right mouse button is pressed.","needQuote":true,"needEscape":true,"extradata":"MT","source":"By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets Action to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if the ESC key was pressed and sets `Action` to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if the left, middle, or right mouse button is pressed."},{"pos":[5530,5591],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.DragAction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.DragAction\"></xref> value."},{"pos":[6121,6163],"content":"Gets whether the user pressed the ESC key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether the user pressed the ESC key.","pos":[0,42]}]},{"pos":[6175,6413],"content":"By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if EscapePressed is true.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, the &lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt; event sets &lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt; to &lt;xref:System.Windows.Forms.DragAction?displayProperty=fullName&gt; if EscapePressed is true.","pos":[0,238],"source":"By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if EscapePressed is true."}]},{"pos":[7797,7960],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the ESC key was pressed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the ESC key was pressed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8472,8528],"content":"Gets the current state of the SHIFT, CTRL, and ALT keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the current state of the SHIFT, CTRL, and ALT keys.","pos":[0,56]}]},{"pos":[8541,9407],"content":"The bits that are set in the KeyState property identify the keys or mouse buttons that were pressed during the operation. For example, if the left mouse button is pressed, the first bit in the KeyState property is set. You can use the bitwise `AND` operator to test for a given key state.       The following table lists the bits that are set for a specified event.      |Bit|Key|   |---------|---------|   |1|The left mouse button.|   |2|The right mouse button.|   |4|The SHIFT key.|   |8|The CTL key.|   |16|The middle mouse button.|   |32|The ALT key.|       By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if KeyState indicates that the left, middle, or right mouse button is pressed.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The bits that are set in the KeyState property identify the keys or mouse buttons that were pressed during the operation.","pos":[0,121]},{"content":"For example, if the left mouse button is pressed, the first bit in the KeyState property is set.","pos":[122,218]},{"content":"You can use the bitwise <ph id=\"ph1\">`AND`</ph> operator to test for a given key state.","pos":[219,288],"source":" You can use the bitwise `AND` operator to test for a given key state."},{"content":"The following table lists the bits that are set for a specified event.","pos":[295,365]},{"content":"|Bit|Key|   |---------|---------|   |1|The left mouse button.|   |2|The right mouse button.|   |4|The SHIFT key.|   |8|The CTL key.|   |16|The middle mouse button.|   |32|The ALT key.|       By default, the &lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt; event sets &lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt; to &lt;xref:System.Windows.Forms.DragAction?displayProperty=fullName&gt; if KeyState indicates that the left, middle, or right mouse button is pressed.","pos":[371,853],"source":"      |Bit|Key|   |---------|---------|   |1|The left mouse button.|   |2|The right mouse button.|   |4|The SHIFT key.|   |8|The CTL key.|   |16|The middle mouse button.|   |32|The ALT key.|       By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if KeyState indicates that the left, middle, or right mouse button is pressed."}]},{"pos":[10777,10828],"content":"The current state of the SHIFT, CTRL, and ALT keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current state of the SHIFT, CTRL, and ALT keys.","pos":[0,51]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.QueryContinueDragEventArgs\n  id: QueryContinueDragEventArgs\n  children:\n  - System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)\n  - System.Windows.Forms.QueryContinueDragEventArgs.Action\n  - System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed\n  - System.Windows.Forms.QueryContinueDragEventArgs.KeyState\n  langs:\n  - csharp\n  name: QueryContinueDragEventArgs\n  nameWithType: QueryContinueDragEventArgs\n  fullName: System.Windows.Forms.QueryContinueDragEventArgs\n  type: Class\n  summary: Provides data for the <xref href=\"System.Windows.Forms.Control.QueryContinueDrag\"></xref> event.\n  remarks: \"The <xref:System.Windows.Forms.Control.QueryContinueDrag> event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled. A QueryContinueDragEventArgs specifies whether and how the drag-and-drop operation should proceed, whether any modifier keys are pressed, and whether the user has pressed the ESC key.  \\n  \\n By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if the ESC key was pressed and sets `Action` to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if the left, middle, or right mouse button is pressed.  \\n  \\n For information about the event model, see [Events](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"This code excerpt demonstrates using the QueryContinueDragEventArgs class with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/cpp/t-system.windows.forms.q_4_1.cpp)]\\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/visualbasic/t-system.windows.forms.q_4_1.vb)]\\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/csharp/t-system.windows.forms.q_4_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class QueryContinueDragEventArgs : EventArgs\n  inheritance:\n  - System.EventArgs\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)\n  id: '#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)'\n  parent: System.Windows.Forms.QueryContinueDragEventArgs\n  langs:\n  - csharp\n  name: QueryContinueDragEventArgs(Int32,Boolean,DragAction)\n  nameWithType: QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32,Boolean,DragAction)\n  fullName: System.Windows.Forms.QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32,Boolean,DragAction)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.QueryContinueDragEventArgs\"></xref> class.\n  syntax:\n    content: public QueryContinueDragEventArgs (int keyState, bool escapePressed, System.Windows.Forms.DragAction action);\n    parameters:\n    - id: keyState\n      type: System.Int32\n      description: The current state of the SHIFT, CTRL, and ALT keys.\n    - id: escapePressed\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the ESC key was pressed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: action\n      type: System.Windows.Forms.DragAction\n      description: A <xref href=\"System.Windows.Forms.DragAction\"></xref> value.\n  overload: System.Windows.Forms.QueryContinueDragEventArgs.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.QueryContinueDragEventArgs.Action\n  id: Action\n  parent: System.Windows.Forms.QueryContinueDragEventArgs\n  langs:\n  - csharp\n  name: Action\n  nameWithType: QueryContinueDragEventArgs.Action\n  fullName: System.Windows.Forms.QueryContinueDragEventArgs.Action\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the status of a drag-and-drop operation.\n  remarks: By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets Action to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if the ESC key was pressed and sets `Action` to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if the left, middle, or right mouse button is pressed.\n  example:\n  - \"This code excerpt demonstrates using the <xref:System.Windows.Forms.QueryContinueDragEventArgs> class with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/cpp/p-system.windows.forms.q_0_1.cpp)]\\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/visualbasic/p-system.windows.forms.q_0_1.vb)]\\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/csharp/p-system.windows.forms.q_0_1.cs)]\"\n  syntax:\n    content: public System.Windows.Forms.DragAction Action { get; set; }\n    return:\n      type: System.Windows.Forms.DragAction\n      description: A <xref href=\"System.Windows.Forms.DragAction\"></xref> value.\n  overload: System.Windows.Forms.QueryContinueDragEventArgs.Action*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed\n  id: EscapePressed\n  parent: System.Windows.Forms.QueryContinueDragEventArgs\n  langs:\n  - csharp\n  name: EscapePressed\n  nameWithType: QueryContinueDragEventArgs.EscapePressed\n  fullName: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets whether the user pressed the ESC key.\n  remarks: By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if EscapePressed is true.\n  example:\n  - \"The following code example demonstrates the use of the EscapePressed . In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#43](~/add/codesnippet/csharp/p-system.windows.forms.q_6_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#43](~/add/codesnippet/visualbasic/p-system.windows.forms.q_6_1.vb)]\"\n  syntax:\n    content: public bool EscapePressed { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the ESC key was pressed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.QueryContinueDragEventArgs.KeyState\n  id: KeyState\n  parent: System.Windows.Forms.QueryContinueDragEventArgs\n  langs:\n  - csharp\n  name: KeyState\n  nameWithType: QueryContinueDragEventArgs.KeyState\n  fullName: System.Windows.Forms.QueryContinueDragEventArgs.KeyState\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the current state of the SHIFT, CTRL, and ALT keys.\n  remarks: \"The bits that are set in the KeyState property identify the keys or mouse buttons that were pressed during the operation. For example, if the left mouse button is pressed, the first bit in the KeyState property is set. You can use the bitwise `AND` operator to test for a given key state.  \\n  \\n The following table lists the bits that are set for a specified event.  \\n  \\n|Bit|Key|  \\n|---------|---------|  \\n|1|The left mouse button.|  \\n|2|The right mouse button.|  \\n|4|The SHIFT key.|  \\n|8|The CTL key.|  \\n|16|The middle mouse button.|  \\n|32|The ALT key.|  \\n  \\n By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if KeyState indicates that the left, middle, or right mouse button is pressed.\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#43](~/add/codesnippet/csharp/p-system.windows.forms.q_2_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#43](~/add/codesnippet/visualbasic/p-system.windows.forms.q_2_1.vb)]\"\n  syntax:\n    content: public int KeyState { get; }\n    return:\n      type: System.Int32\n      description: The current state of the SHIFT, CTRL, and ALT keys.\n  overload: System.Windows.Forms.QueryContinueDragEventArgs.KeyState*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.EventArgs\n  isExternal: false\n  name: System.EventArgs\n- uid: System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)\n  parent: System.Windows.Forms.QueryContinueDragEventArgs\n  isExternal: false\n  name: QueryContinueDragEventArgs(Int32,Boolean,DragAction)\n  nameWithType: QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32,Boolean,DragAction)\n  fullName: System.Windows.Forms.QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32,Boolean,DragAction)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.DragAction\n  parent: System.Windows.Forms\n  isExternal: false\n  name: DragAction\n  nameWithType: DragAction\n  fullName: System.Windows.Forms.DragAction\n- uid: System.Windows.Forms.QueryContinueDragEventArgs.Action\n  parent: System.Windows.Forms.QueryContinueDragEventArgs\n  isExternal: false\n  name: Action\n  nameWithType: QueryContinueDragEventArgs.Action\n  fullName: System.Windows.Forms.QueryContinueDragEventArgs.Action\n- uid: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed\n  parent: System.Windows.Forms.QueryContinueDragEventArgs\n  isExternal: false\n  name: EscapePressed\n  nameWithType: QueryContinueDragEventArgs.EscapePressed\n  fullName: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed\n- uid: System.Windows.Forms.QueryContinueDragEventArgs.KeyState\n  parent: System.Windows.Forms.QueryContinueDragEventArgs\n  isExternal: false\n  name: KeyState\n  nameWithType: QueryContinueDragEventArgs.KeyState\n  fullName: System.Windows.Forms.QueryContinueDragEventArgs.KeyState\n- uid: System.Windows.Forms.QueryContinueDragEventArgs.#ctor*\n  parent: System.Windows.Forms.QueryContinueDragEventArgs\n  isExternal: false\n  name: QueryContinueDragEventArgs\n  nameWithType: QueryContinueDragEventArgs.QueryContinueDragEventArgs\n- uid: System.Windows.Forms.QueryContinueDragEventArgs.Action*\n  parent: System.Windows.Forms.QueryContinueDragEventArgs\n  isExternal: false\n  name: Action\n  nameWithType: QueryContinueDragEventArgs.Action\n- uid: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed*\n  parent: System.Windows.Forms.QueryContinueDragEventArgs\n  isExternal: false\n  name: EscapePressed\n  nameWithType: QueryContinueDragEventArgs.EscapePressed\n- uid: System.Windows.Forms.QueryContinueDragEventArgs.KeyState*\n  parent: System.Windows.Forms.QueryContinueDragEventArgs\n  isExternal: false\n  name: KeyState\n  nameWithType: QueryContinueDragEventArgs.KeyState\n"}