{"nodes":[{"pos":[1473,1531],"content":"Provides an abstract container class for project elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides an abstract container class for project elements.","pos":[0,58]}]},{"pos":[2817,2881],"content":"Gets a recursive depth-first enumerator over all child elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a recursive depth-first enumerator over all child elements.","pos":[0,64]}]},{"pos":[2893,3018],"content":"Recursion is possible because project element containers may contain children that are themselves project element containers.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Recursion is possible because project element containers may contain children that are themselves project element containers.","pos":[0,125]}]},{"pos":[3281,3348],"content":"Returns a recursive depth-first enumerator over all child elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a recursive depth-first enumerator over all child elements.","pos":[0,67]}]},{"pos":[4029,4112],"content":"Appends the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">child</ph><ept id=\"p1\">&lt;/code&gt;</ept> element as the last child of this project container.","needQuote":true,"needEscape":true,"source":"Appends the <code>child</code> element as the last child of this project container."},{"pos":[4124,4342],"content":"Throws an exception if this project container is not parented, or if the <ph id=\"ph1\">`child`</ph> element is already parented, or if the <ph id=\"ph2\">`child`</ph> element was created by a different &lt;xref:Microsoft.Build.Construction.ProjectRootElement&gt;.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>."},{"pos":[4550,4585],"content":"The project element to be appended.","needQuote":true,"needEscape":true,"nodes":[{"content":"The project element to be appended.","pos":[0,35]}]},{"pos":[5115,5139],"content":"Gets all child elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets all child elements.","pos":[0,24]}]},{"pos":[5399,5426],"content":"Returns all child elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns all child elements.","pos":[0,27]}]},{"pos":[5993,6047],"content":"Gets all child elements, starting from the last child.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets all child elements, starting from the last child.","pos":[0,54]}]},{"pos":[6315,6372],"content":"Returns all child elements, starting from the last child.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns all child elements, starting from the last child.","pos":[0,57]}]},{"pos":[6892,6926],"content":"Gets the number of child elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of child elements.","pos":[0,34]}]},{"pos":[7032,7069],"content":"Returns the number of child elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the number of child elements.","pos":[0,37]}]},{"pos":[7603,7632],"content":"Gets the first child element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the first child element.","pos":[0,29]}]},{"pos":[7644,7752],"content":"Use <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A> to initialize this property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use &lt;xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A&gt; to initialize this property.","pos":[0,108],"source":"Use <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A> to initialize this property."}]},{"pos":[7934,8007],"content":"Returns the first child element. Returns null if no child element exists.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the first child element. Returns null if no child element exists.","pos":[0,73],"nodes":[{"content":"Returns the first child element.","pos":[0,32]},{"content":"Returns null if no child element exists.","pos":[33,73]}]}]},{"pos":[8845,8925],"content":"Inserts the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">child</ph><ept id=\"p1\">&lt;/code&gt;</ept> element after the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">reference</ph><ept id=\"p2\">&lt;/code&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Inserts the <code>child</code> element after the <code>reference</code> element."},{"pos":[8938,9378],"content":"If the `reference` element is null, this method is equivalent to <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>.       Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>, or if the `reference` element is not a child of this project container.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the <ph id=\"ph1\">`reference`</ph> element is null, this method is equivalent to &lt;xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A&gt;.","pos":[0,141],"source":"If the `reference` element is null, this method is equivalent to <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>."},{"content":"Throws an exception if this project container is not parented, or if the <ph id=\"ph1\">`child`</ph> element is already parented, or if the <ph id=\"ph2\">`child`</ph> element was created by a different &lt;xref:Microsoft.Build.Construction.ProjectRootElement&gt;, or if the <ph id=\"ph3\">`reference`</ph> element is not a child of this project container.","pos":[148,438],"source":"       Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>, or if the `reference` element is not a child of this project container."}]},{"pos":[9647,9682],"content":"The project element to be inserted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The project element to be inserted.","pos":[0,35]}]},{"pos":[9778,9819],"content":"The project element to be inserted after.","needQuote":true,"needEscape":true,"nodes":[{"content":"The project element to be inserted after.","pos":[0,41]}]},{"pos":[10668,10749],"content":"Inserts the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">child</ph><ept id=\"p1\">&lt;/code&gt;</ept> element before the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">reference</ph><ept id=\"p2\">&lt;/code&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Inserts the <code>child</code> element before the <code>reference</code> element."},{"pos":[10762,11201],"content":"If the `reference` element is null, this method is equivalent to <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>.       Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>, or if the `reference` element is not a child of this project container.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the <ph id=\"ph1\">`reference`</ph> element is null, this method is equivalent to &lt;xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A&gt;.","pos":[0,140],"source":"If the `reference` element is null, this method is equivalent to <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>."},{"content":"Throws an exception if this project container is not parented, or if the <ph id=\"ph1\">`child`</ph> element is already parented, or if the <ph id=\"ph2\">`child`</ph> element was created by a different &lt;xref:Microsoft.Build.Construction.ProjectRootElement&gt;, or if the <ph id=\"ph3\">`reference`</ph> element is not a child of this project container.","pos":[147,437],"source":"       Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>, or if the `reference` element is not a child of this project container."}]},{"pos":[11471,11506],"content":"The project element to be inserted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The project element to be inserted.","pos":[0,35]}]},{"pos":[11602,11644],"content":"The project element to be inserted before.","needQuote":true,"needEscape":true,"nodes":[{"content":"The project element to be inserted before.","pos":[0,42]}]},{"pos":[12185,12213],"content":"Gets the last child element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the last child element.","pos":[0,28]}]},{"pos":[12225,12332],"content":"Use <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A> to initialize this property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use &lt;xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A&gt; to initialize this property.","pos":[0,107],"source":"Use <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A> to initialize this property."}]},{"pos":[12513,12585],"content":"Returns the last child element. Returns null if no child element exists.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the last child element. Returns null if no child element exists.","pos":[0,72],"nodes":[{"content":"Returns the last child element.","pos":[0,31]},{"content":"Returns null if no child element exists.","pos":[32,72]}]}]},{"pos":[13269,13354],"content":"Prepends the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">child</ph><ept id=\"p1\">&lt;/code&gt;</ept> element as the first child of this project container.","needQuote":true,"needEscape":true,"source":"Prepends the <code>child</code> element as the first child of this project container."},{"pos":[13366,13584],"content":"Throws an exception if this project container is not parented, or if the <ph id=\"ph1\">`child`</ph> element is already parented, or if the <ph id=\"ph2\">`child`</ph> element was created by a different &lt;xref:Microsoft.Build.Construction.ProjectRootElement&gt;.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>."},{"pos":[13793,13829],"content":"The project element to be prepended.","needQuote":true,"needEscape":true,"nodes":[{"content":"The project element to be prepended.","pos":[0,36]}]},{"pos":[14409,14471],"content":"Removes all the children, if any, from this project container.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all the children, if any, from this project container.","pos":[0,62]}]},{"pos":[14483,14548],"content":"It is safe to modify the children in this way during enumeration.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"It is safe to modify the children in this way during enumeration.","pos":[0,65]}]},{"pos":[15311,15376],"content":"Removes a <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">child</ph><ept id=\"p1\">&lt;/code&gt;</ept> element from this project container.","needQuote":true,"needEscape":true,"source":"Removes a <code>child</code> element from this project container."},{"pos":[15388,15539],"content":"Throws an exception if the child element is not currently parented by this project container. It is safe to remove a child this way during enumeration.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Throws an exception if the child element is not currently parented by this project container. It is safe to remove a child this way during enumeration.","pos":[0,151],"nodes":[{"content":"Throws an exception if the child element is not currently parented by this project container.","pos":[0,93]},{"content":"It is safe to remove a child this way during enumeration.","pos":[94,151]}]}]},{"pos":[15747,15781],"content":"The project element to be removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The project element to be removed.","pos":[0,34]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Construction.ProjectElementContainer\n  id: ProjectElementContainer\n  children:\n  - Microsoft.Build.Construction.ProjectElementContainer.AllChildren\n  - Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)\n  - Microsoft.Build.Construction.ProjectElementContainer.Children\n  - Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed\n  - Microsoft.Build.Construction.ProjectElementContainer.Count\n  - Microsoft.Build.Construction.ProjectElementContainer.FirstChild\n  - Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)\n  - Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)\n  - Microsoft.Build.Construction.ProjectElementContainer.LastChild\n  - Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)\n  - Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren\n  - Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)\n  langs:\n  - csharp\n  name: ProjectElementContainer\n  nameWithType: ProjectElementContainer\n  fullName: Microsoft.Build.Construction.ProjectElementContainer\n  type: Class\n  summary: Provides an abstract container class for project elements.\n  syntax:\n    content: 'public abstract class ProjectElementContainer : Microsoft.Build.Construction.ProjectElement'\n  inheritance:\n  - System.Object\n  - Microsoft.Build.Construction.ProjectElement\n  implements: []\n  inheritedMembers:\n  - Microsoft.Build.Construction.ProjectElement.AllParents\n  - Microsoft.Build.Construction.ProjectElement.Condition\n  - Microsoft.Build.Construction.ProjectElement.ConditionLocation\n  - Microsoft.Build.Construction.ProjectElement.ContainingProject\n  - Microsoft.Build.Construction.ProjectElement.Label\n  - Microsoft.Build.Construction.ProjectElement.LabelLocation\n  - Microsoft.Build.Construction.ProjectElement.Location\n  - Microsoft.Build.Construction.ProjectElement.NextSibling\n  - Microsoft.Build.Construction.ProjectElement.Parent\n  - Microsoft.Build.Construction.ProjectElement.PreviousSibling\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElementContainer.AllChildren\n  id: AllChildren\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: AllChildren\n  nameWithType: ProjectElementContainer.AllChildren\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.AllChildren\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Gets a recursive depth-first enumerator over all child elements.\n  remarks: Recursion is possible because project element containers may contain children that are themselves project element containers.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement> AllChildren { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElement}\n      description: Returns a recursive depth-first enumerator over all child elements.\n  overload: Microsoft.Build.Construction.ProjectElementContainer.AllChildren*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)\n  id: AppendChild(Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: AppendChild(ProjectElement)\n  nameWithType: ProjectElementContainer.AppendChild(ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.AppendChild(ProjectElement)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Appends the <code>child</code> element as the last child of this project container.\n  remarks: Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>.\n  syntax:\n    content: public void AppendChild (Microsoft.Build.Construction.ProjectElement child);\n    parameters:\n    - id: child\n      type: Microsoft.Build.Construction.ProjectElement\n      description: The project element to be appended.\n  overload: Microsoft.Build.Construction.ProjectElementContainer.AppendChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElementContainer.Children\n  id: Children\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: Children\n  nameWithType: ProjectElementContainer.Children\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.Children\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Gets all child elements.\n  syntax:\n    content: public System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectElement> Children { get; }\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Construction.ProjectElement}\n      description: Returns all child elements.\n  overload: Microsoft.Build.Construction.ProjectElementContainer.Children*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed\n  id: ChildrenReversed\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: ChildrenReversed\n  nameWithType: ProjectElementContainer.ChildrenReversed\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Gets all child elements, starting from the last child.\n  syntax:\n    content: public System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectElement> ChildrenReversed { get; }\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Construction.ProjectElement}\n      description: Returns all child elements, starting from the last child.\n  overload: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElementContainer.Count\n  id: Count\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ProjectElementContainer.Count\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.Count\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Gets the number of child elements.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Returns the number of child elements.\n  overload: Microsoft.Build.Construction.ProjectElementContainer.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElementContainer.FirstChild\n  id: FirstChild\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: FirstChild\n  nameWithType: ProjectElementContainer.FirstChild\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.FirstChild\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Gets the first child element.\n  remarks: Use <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A> to initialize this property.\n  syntax:\n    content: public Microsoft.Build.Construction.ProjectElement FirstChild { get; }\n    return:\n      type: Microsoft.Build.Construction.ProjectElement\n      description: Returns the first child element. Returns null if no child element exists.\n  overload: Microsoft.Build.Construction.ProjectElementContainer.FirstChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)\n  id: InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: InsertAfterChild(ProjectElement,ProjectElement)\n  nameWithType: ProjectElementContainer.InsertAfterChild(ProjectElement,ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(ProjectElement,ProjectElement)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Inserts the <code>child</code> element after the <code>reference</code> element.\n  remarks: \"If the `reference` element is null, this method is equivalent to <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>.  \\n  \\n Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>, or if the `reference` element is not a child of this project container.\"\n  syntax:\n    content: public void InsertAfterChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);\n    parameters:\n    - id: child\n      type: Microsoft.Build.Construction.ProjectElement\n      description: The project element to be inserted.\n    - id: reference\n      type: Microsoft.Build.Construction.ProjectElement\n      description: The project element to be inserted after.\n  overload: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)\n  id: InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: InsertBeforeChild(ProjectElement,ProjectElement)\n  nameWithType: ProjectElementContainer.InsertBeforeChild(ProjectElement,ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(ProjectElement,ProjectElement)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Inserts the <code>child</code> element before the <code>reference</code> element.\n  remarks: \"If the `reference` element is null, this method is equivalent to <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>.  \\n  \\n Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>, or if the `reference` element is not a child of this project container.\"\n  syntax:\n    content: public void InsertBeforeChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);\n    parameters:\n    - id: child\n      type: Microsoft.Build.Construction.ProjectElement\n      description: The project element to be inserted.\n    - id: reference\n      type: Microsoft.Build.Construction.ProjectElement\n      description: The project element to be inserted before.\n  overload: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElementContainer.LastChild\n  id: LastChild\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: LastChild\n  nameWithType: ProjectElementContainer.LastChild\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.LastChild\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Gets the last child element.\n  remarks: Use <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A> to initialize this property.\n  syntax:\n    content: public Microsoft.Build.Construction.ProjectElement LastChild { get; }\n    return:\n      type: Microsoft.Build.Construction.ProjectElement\n      description: Returns the last child element. Returns null if no child element exists.\n  overload: Microsoft.Build.Construction.ProjectElementContainer.LastChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)\n  id: PrependChild(Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: PrependChild(ProjectElement)\n  nameWithType: ProjectElementContainer.PrependChild(ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.PrependChild(ProjectElement)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Prepends the <code>child</code> element as the first child of this project container.\n  remarks: Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>.\n  syntax:\n    content: public void PrependChild (Microsoft.Build.Construction.ProjectElement child);\n    parameters:\n    - id: child\n      type: Microsoft.Build.Construction.ProjectElement\n      description: The project element to be prepended.\n  overload: Microsoft.Build.Construction.ProjectElementContainer.PrependChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren\n  id: RemoveAllChildren\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: RemoveAllChildren()\n  nameWithType: ProjectElementContainer.RemoveAllChildren()\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren()\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Removes all the children, if any, from this project container.\n  remarks: It is safe to modify the children in this way during enumeration.\n  syntax:\n    content: public void RemoveAllChildren ();\n    parameters: []\n  overload: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)\n  id: RemoveChild(Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: RemoveChild(ProjectElement)\n  nameWithType: ProjectElementContainer.RemoveChild(ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(ProjectElement)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  summary: Removes a <code>child</code> element from this project container.\n  remarks: Throws an exception if the child element is not currently parented by this project container. It is safe to remove a child this way during enumeration.\n  syntax:\n    content: public void RemoveChild (Microsoft.Build.Construction.ProjectElement child);\n    parameters:\n    - id: child\n      type: Microsoft.Build.Construction.ProjectElement\n      description: The project element to be removed.\n  overload: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: Microsoft.Build.Construction.ProjectElement\n- uid: Microsoft.Build.Construction.ProjectElementContainer.AllChildren\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: AllChildren\n  nameWithType: ProjectElementContainer.AllChildren\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.AllChildren\n- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElement}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<ProjectElement>\n  nameWithType: IEnumerable<ProjectElement>\n  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<Microsoft.Build.Construction.ProjectElement>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Construction.ProjectElement\n    name: ProjectElement\n    nameWithType: ProjectElement\n    fullName: ProjectElement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: AppendChild(ProjectElement)\n  nameWithType: ProjectElementContainer.AppendChild(ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.AppendChild(ProjectElement)\n- uid: Microsoft.Build.Construction.ProjectElementContainer.Children\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: Children\n  nameWithType: ProjectElementContainer.Children\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.Children\n- uid: System.Collections.Generic.ICollection{Microsoft.Build.Construction.ProjectElement}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<ProjectElement>\n  nameWithType: ICollection<ProjectElement>\n  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectElement>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<Microsoft.Build.Construction.ProjectElement>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Construction.ProjectElement\n    name: ProjectElement\n    nameWithType: ProjectElement\n    fullName: ProjectElement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: ChildrenReversed\n  nameWithType: ProjectElementContainer.ChildrenReversed\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed\n- uid: Microsoft.Build.Construction.ProjectElementContainer.Count\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: Count\n  nameWithType: ProjectElementContainer.Count\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.Count\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.Build.Construction.ProjectElementContainer.FirstChild\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: FirstChild\n  nameWithType: ProjectElementContainer.FirstChild\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.FirstChild\n- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: InsertAfterChild(ProjectElement,ProjectElement)\n  nameWithType: ProjectElementContainer.InsertAfterChild(ProjectElement,ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(ProjectElement,ProjectElement)\n- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: InsertBeforeChild(ProjectElement,ProjectElement)\n  nameWithType: ProjectElementContainer.InsertBeforeChild(ProjectElement,ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(ProjectElement,ProjectElement)\n- uid: Microsoft.Build.Construction.ProjectElementContainer.LastChild\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: LastChild\n  nameWithType: ProjectElementContainer.LastChild\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.LastChild\n- uid: Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: PrependChild(ProjectElement)\n  nameWithType: ProjectElementContainer.PrependChild(ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.PrependChild(ProjectElement)\n- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: RemoveAllChildren()\n  nameWithType: ProjectElementContainer.RemoveAllChildren()\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren()\n- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: RemoveChild(ProjectElement)\n  nameWithType: ProjectElementContainer.RemoveChild(ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(ProjectElement)\n- uid: Microsoft.Build.Construction.ProjectElementContainer.AllChildren*\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: AllChildren\n  nameWithType: ProjectElementContainer.AllChildren\n- uid: Microsoft.Build.Construction.ProjectElementContainer.AppendChild*\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: AppendChild\n  nameWithType: ProjectElementContainer.AppendChild\n- uid: Microsoft.Build.Construction.ProjectElementContainer.Children*\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: Children\n  nameWithType: ProjectElementContainer.Children\n- uid: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed*\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: ChildrenReversed\n  nameWithType: ProjectElementContainer.ChildrenReversed\n- uid: Microsoft.Build.Construction.ProjectElementContainer.Count*\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: Count\n  nameWithType: ProjectElementContainer.Count\n- uid: Microsoft.Build.Construction.ProjectElementContainer.FirstChild*\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: FirstChild\n  nameWithType: ProjectElementContainer.FirstChild\n- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild*\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: InsertAfterChild\n  nameWithType: ProjectElementContainer.InsertAfterChild\n- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild*\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: InsertBeforeChild\n  nameWithType: ProjectElementContainer.InsertBeforeChild\n- uid: Microsoft.Build.Construction.ProjectElementContainer.LastChild*\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: LastChild\n  nameWithType: ProjectElementContainer.LastChild\n- uid: Microsoft.Build.Construction.ProjectElementContainer.PrependChild*\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: PrependChild\n  nameWithType: ProjectElementContainer.PrependChild\n- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren*\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: RemoveAllChildren\n  nameWithType: ProjectElementContainer.RemoveAllChildren\n- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild*\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: RemoveChild\n  nameWithType: ProjectElementContainer.RemoveChild\n"}