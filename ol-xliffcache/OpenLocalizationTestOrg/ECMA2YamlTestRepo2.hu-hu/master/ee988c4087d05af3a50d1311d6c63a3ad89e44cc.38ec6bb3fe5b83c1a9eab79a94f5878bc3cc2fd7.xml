{"nodes":[{"pos":[433,590],"content":"Extends <bpt id=\"p1\">&lt;xref href=\"System.Activities.ActivityContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and provides additional functionality for <bpt id=\"p2\">&lt;xref href=\"System.Activities.CodeActivity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Extends <xref href=\"System.Activities.ActivityContext\"></xref> and provides additional functionality for <xref href=\"System.Activities.CodeActivity\"></xref>."},{"pos":[2603,2615],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3228,3308],"content":"Sends the specified custom tracking record to any registered tracking providers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sends the specified custom tracking record to any registered tracking providers.","pos":[0,80]}]},{"pos":[3520,3543],"content":"The data to be tracked.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data to be tracked.","pos":[0,23]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.CodeActivityContext\n  id: CodeActivityContext\n  children:\n  - System.Activities.CodeActivityContext.GetProperty``1\n  - System.Activities.CodeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)\n  langs:\n  - csharp\n  name: CodeActivityContext\n  nameWithType: CodeActivityContext\n  fullName: System.Activities.CodeActivityContext\n  type: Class\n  summary: Extends <xref href=\"System.Activities.ActivityContext\"></xref> and provides additional functionality for <xref href=\"System.Activities.CodeActivity\"></xref>.\n  syntax:\n    content: 'public class CodeActivityContext : System.Activities.ActivityContext'\n  inheritance:\n  - System.Object\n  - System.Activities.ActivityContext\n  implements: []\n  inheritedMembers:\n  - System.Activities.ActivityContext.ActivityInstanceId\n  - System.Activities.ActivityContext.DataContext\n  - System.Activities.ActivityContext.GetExtension``1\n  - System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)\n  - System.Activities.ActivityContext.GetValue(System.Activities.Argument)\n  - System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)\n  - System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument`1)\n  - System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument`1)\n  - System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)\n  - System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument`1)\n  - System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)\n  - System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument`1,``0)\n  - System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument`1,``0)\n  - System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)\n  - System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument`1,``0)\n  - System.Activities.ActivityContext.WorkflowInstanceId\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityContext.GetProperty``1\n  id: GetProperty``1\n  parent: System.Activities.CodeActivityContext\n  langs:\n  - csharp\n  name: GetProperty()\n  nameWithType: CodeActivityContext.GetProperty()\n  fullName: System.Activities.CodeActivityContext.GetProperty()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: 'public THandle GetProperty<THandle> () where THandle : System.Activities.Handle;'\n    parameters: []\n    return:\n      type: THandle\n      description: To be added.\n  overload: System.Activities.CodeActivityContext.GetProperty<THandle>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)\n  id: Track(System.Activities.Tracking.CustomTrackingRecord)\n  parent: System.Activities.CodeActivityContext\n  langs:\n  - csharp\n  name: Track(CustomTrackingRecord)\n  nameWithType: CodeActivityContext.Track(CustomTrackingRecord)\n  fullName: System.Activities.CodeActivityContext.Track(CustomTrackingRecord)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Sends the specified custom tracking record to any registered tracking providers.\n  syntax:\n    content: public void Track (System.Activities.Tracking.CustomTrackingRecord record);\n    parameters:\n    - id: record\n      type: System.Activities.Tracking.CustomTrackingRecord\n      description: The data to be tracked.\n  overload: System.Activities.CodeActivityContext.Track*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.ActivityContext\n  isExternal: false\n  name: System.Activities.ActivityContext\n- uid: System.Activities.CodeActivityContext.GetProperty``1\n  parent: System.Activities.CodeActivityContext\n  isExternal: false\n  name: GetProperty()\n  nameWithType: CodeActivityContext.GetProperty()\n  fullName: System.Activities.CodeActivityContext.GetProperty()\n- uid: THandle\n  isExternal: true\n  name: THandle\n  nameWithType: THandle\n  fullName: THandle\n- uid: System.Activities.CodeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)\n  parent: System.Activities.CodeActivityContext\n  isExternal: false\n  name: Track(CustomTrackingRecord)\n  nameWithType: CodeActivityContext.Track(CustomTrackingRecord)\n  fullName: System.Activities.CodeActivityContext.Track(CustomTrackingRecord)\n- uid: System.Activities.Tracking.CustomTrackingRecord\n  parent: System.Activities.Tracking\n  isExternal: false\n  name: CustomTrackingRecord\n  nameWithType: CustomTrackingRecord\n  fullName: System.Activities.Tracking.CustomTrackingRecord\n- uid: System.Activities.CodeActivityContext.GetProperty<THandle>*\n  parent: System.Activities.CodeActivityContext\n  isExternal: false\n  name: GetProperty<THandle>\n  nameWithType: CodeActivityContext.GetProperty<THandle>\n- uid: System.Activities.CodeActivityContext.Track*\n  parent: System.Activities.CodeActivityContext\n  isExternal: false\n  name: Track\n  nameWithType: CodeActivityContext.Track\n"}