{"nodes":[{"pos":[1097,1123],"content":"Represents a grammar rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a grammar rule.","pos":[0,26]}]},{"pos":[1136,2780],"content":"Use the SrgsRule class to create a new rule at run time or to modify a rule in an existing grammar stream or file at run time.       The words and phrases specified by SrgsRule objects in grammars defined by <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instances limit the spoken input that the recognizer must be able to identify.       An SrgsRule object specifies the sequence in which words and phrases must be spoken by ordering the objects that contain them. Words and phrases within a rule are represented by objects such as <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, and <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> elements. Use the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> property to access the collection of child objects that an SrgsRule object contains.       You can determine whether an SrgsRule can be specified in a rule reference from a rule in an external grammar by setting its <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope%2A> property.       It is not legal to define an SrgsRule that is empty or that contains only white space.       This class represents the `rule` element that is defined in the World Wide Web Consortium (W3C) [Speech Recognition Grammar Specification (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761). For information about the SRGS `rule` element and details about its support by System.Speech, see [rule Element](http://msdn.microsoft.com/en-us/da67b4aa-0545-426a-a02f-1417b968021e).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the SrgsRule class to create a new rule at run time or to modify a rule in an existing grammar stream or file at run time.","pos":[0,126]},{"content":"The words and phrases specified by SrgsRule objects in grammars defined by &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument&gt; instances limit the spoken input that the recognizer must be able to identify.","pos":[133,344],"source":"       The words and phrases specified by SrgsRule objects in grammars defined by <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instances limit the spoken input that the recognizer must be able to identify."},{"content":"An SrgsRule object specifies the sequence in which words and phrases must be spoken by ordering the objects that contain them.","pos":[351,477]},{"content":"Words and phrases within a rule are represented by objects such as &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsItem&gt;, &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf&gt;, &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef&gt;, and &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken&gt; elements.","pos":[478,782],"source":" Words and phrases within a rule are represented by objects such as <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, and <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> elements."},{"content":"Use the &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A&gt; property to access the collection of child objects that an SrgsRule object contains.","pos":[783,941],"source":" Use the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> property to access the collection of child objects that an SrgsRule object contains."},{"content":"You can determine whether an SrgsRule can be specified in a rule reference from a rule in an external grammar by setting its &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope%2A&gt; property.","pos":[948,1145],"source":"       You can determine whether an SrgsRule can be specified in a rule reference from a rule in an external grammar by setting its <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope%2A> property."},{"content":"It is not legal to define an SrgsRule that is empty or that contains only white space.","pos":[1152,1238]},{"content":"This class represents the <ph id=\"ph1\">`rule`</ph> element that is defined in the World Wide Web Consortium (W3C) <bpt id=\"p1\">[</bpt>Speech Recognition Grammar Specification (SRGS) Version 1.0<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=201761)</ept>.","pos":[1245,1450],"source":"       This class represents the `rule` element that is defined in the World Wide Web Consortium (W3C) [Speech Recognition Grammar Specification (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761)."},{"content":"For information about the SRGS <ph id=\"ph1\">`rule`</ph> element and details about its support by System.Speech, see <bpt id=\"p1\">[</bpt>rule Element<ept id=\"p1\">](http://msdn.microsoft.com/en-us/da67b4aa-0545-426a-a02f-1417b968021e)</ept>.","pos":[1451,1634],"source":" For information about the SRGS `rule` element and details about its support by System.Speech, see [rule Element](http://msdn.microsoft.com/en-us/da67b4aa-0545-426a-a02f-1417b968021e)."}]},{"pos":[3588,3738],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and specifies the identifier for the rule.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsRule\"></xref> class and specifies the identifier for the rule."},{"pos":[6890,6917],"content":"The identifier of the rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the rule.","pos":[0,27]}]},{"pos":[7100,7180],"content":"<ph id=\"ph1\">&lt;code&gt;id&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>id</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7295,7320],"content":"<ph id=\"ph1\">&lt;code&gt;id&lt;/code&gt;</ph> is empty.","needQuote":true,"needEscape":true,"source":"<code>id</code> is empty."},{"pos":[7411,7459],"content":"<ph id=\"ph1\">&lt;code&gt;id&lt;/code&gt;</ph> is not a proper rule identifier.","needQuote":true,"needEscape":true,"source":"<code>id</code> is not a proper rule identifier."},{"pos":[8067,8271],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsRule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class from an array of <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsRule\"></xref> class from an array of <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsElement\"></xref> objects."},{"pos":[12632,12659],"content":"The identifier of the rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the rule.","pos":[0,27]}]},{"pos":[12762,12854],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> elements.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsElement\"></xref> elements."},{"pos":[13038,13225],"content":"<code>id</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       <code>elements</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;id&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,80],"source":"<code>id</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"<ph id=\"ph1\">&lt;code&gt;elements&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[87,173],"source":"<code>elements</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[13341,13366],"content":"<ph id=\"ph1\">&lt;code&gt;id&lt;/code&gt;</ph> is empty.","needQuote":true,"needEscape":true,"source":"<code>id</code> is empty."},{"pos":[13457,13505],"content":"<ph id=\"ph1\">&lt;code&gt;id&lt;/code&gt;</ph> is not a proper rule identifier.","needQuote":true,"needEscape":true,"source":"<code>id</code> is not a proper rule identifier."},{"pos":[14028,14188],"content":"Adds an <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to an <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsRule\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Adds an <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsElement\"></xref> to an <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsRule\"></xref> object."},{"pos":[14201,15350],"content":"Typical additions to an <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object include <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, and <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> objects that specify what speakers can say. A valid rule element must contain at least one piece of recognizable text or one rule reference. See [Create Grammars Using SrgsGrammar](http://msdn.microsoft.com/en-us/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906) for more information.       An <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object may also contain <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag> and <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> objects that add semantic values and semantic keys to the rule. The speech recognition engine will return the semantic information, as well as the recognized phrase, when it recognizes the phrase. See [Semantic Interpretation Markup](http://msdn.microsoft.com/en-us/2e115391-73b3-4666-8fd1-540c529de3b0) for more information.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Typical additions to an &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsRule&gt; object include &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsItem&gt;, &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf&gt;, &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef&gt;, and &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken&gt; objects that specify what speakers can say.","pos":[0,364],"source":"Typical additions to an <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object include <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, and <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> objects that specify what speakers can say."},{"content":"A valid rule element must contain at least one piece of recognizable text or one rule reference.","pos":[365,461]},{"content":"See <bpt id=\"p1\">[</bpt>Create Grammars Using SrgsGrammar<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906)</ept> for more information.","pos":[462,593],"source":" See [Create Grammars Using SrgsGrammar](http://msdn.microsoft.com/en-us/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906) for more information."},{"content":"An &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsRule&gt; object may also contain &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag&gt; and &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag&gt; objects that add semantic values and semantic keys to the rule.","pos":[600,885],"source":"       An <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object may also contain <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag> and <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> objects that add semantic values and semantic keys to the rule."},{"content":"The speech recognition engine will return the semantic information, as well as the recognized phrase, when it recognizes the phrase.","pos":[886,1018]},{"content":"See <bpt id=\"p1\">[</bpt>Semantic Interpretation Markup<ept id=\"p1\">](http://msdn.microsoft.com/en-us/2e115391-73b3-4666-8fd1-540c529de3b0)</ept> for more information.","pos":[1019,1147],"source":" See [Semantic Interpretation Markup](http://msdn.microsoft.com/en-us/2e115391-73b3-4666-8fd1-540c529de3b0) for more information."}]},{"pos":[17725,17862],"content":"An object that inherits from <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and specifies what can be recognized.","needQuote":true,"needEscape":true,"source":"An object that inherits from <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsElement\"></xref> and specifies what can be recognized."},{"pos":[18043,18128],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[18542,18583],"content":"This property is not currently supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is not currently supported.","pos":[0,41]}]},{"pos":[18702,18716],"content":"Not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not supported.","pos":[0,14]}]},{"pos":[19212,19398],"content":"Gets the collection of <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects in the <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsRule\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets the collection of <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsElement\"></xref> objects in the <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsRule\"></xref> instance."},{"pos":[19410,19880],"content":"The elements in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object can consist of <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag>, and <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> objects.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The elements in an &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsRule&gt; object can consist of &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsItem&gt;, &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf&gt;, &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef&gt;, &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsToken&gt;, &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag&gt;, and &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag&gt; objects.","pos":[0,470],"source":"The elements in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object can consist of <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag>, and <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> objects."}]},{"pos":[20158,20197],"content":"The collection of elements in the rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of elements in the rule.","pos":[0,39]}]},{"pos":[20662,20703],"content":"Gets or sets the identifier for the rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the identifier for the rule.","pos":[0,41]}]},{"pos":[21618,21646],"content":"The identifier for the rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier for the rule.","pos":[0,28]}]},{"pos":[21814,21863],"content":"An attempt is made to set Id to an invalid value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt is made to set Id to an invalid value.","pos":[0,49]}]},{"pos":[22267,22308],"content":"This property is not currently supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is not currently supported.","pos":[0,41]}]},{"pos":[22425,22439],"content":"Not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not supported.","pos":[0,14]}]},{"pos":[22923,22964],"content":"This property is not currently supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is not currently supported.","pos":[0,41]}]},{"pos":[23080,23094],"content":"Not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not supported.","pos":[0,14]}]},{"pos":[23582,23623],"content":"This property is not currently supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is not currently supported.","pos":[0,41]}]},{"pos":[23740,23754],"content":"Not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not supported.","pos":[0,14]}]},{"pos":[24273,24314],"content":"This property is not currently supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is not currently supported.","pos":[0,41]}]},{"pos":[24437,24451],"content":"Not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not supported.","pos":[0,14]}]},{"pos":[24936,25048],"content":"Gets or sets whether a rule can be activated for recognition and when the rule can be referenced by other rules.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets whether a rule can be activated for recognition and when the rule can be referenced by other rules.","pos":[0,112]}]},{"pos":[25061,25709],"content":"The default value for scope is `Private`. A private rule can only be activated for recognition by a rule reference from the root rule in its containing grammar or from another rule that is referenced from the root rule. A private rule cannot be referenced by an external grammar, unless the private rule is declared as the root rule of its containing grammar.       If its scope is set to `Public`, an <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object can be activated for recognition by a reference from a <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> object in the containing grammar or from a rule in an external grammar.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default value for scope is <ph id=\"ph1\">`Private`</ph>.","pos":[0,41],"source":"The default value for scope is `Private`."},{"content":"A private rule can only be activated for recognition by a rule reference from the root rule in its containing grammar or from another rule that is referenced from the root rule.","pos":[42,219]},{"content":"A private rule cannot be referenced by an external grammar, unless the private rule is declared as the root rule of its containing grammar.","pos":[220,359]},{"content":"If its scope is set to <ph id=\"ph1\">`Public`</ph>, an &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsRule&gt; object can be activated for recognition by a reference from a &lt;xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef&gt; object in the containing grammar or from a rule in an external grammar.","pos":[366,646],"source":"       If its scope is set to `Public`, an <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object can be activated for recognition by a reference from a <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> object in the containing grammar or from a rule in an external grammar."}]},{"pos":[28643,28683],"content":"A value the sets the scope for the rule.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value the sets the scope for the rule.","pos":[0,40]}]},{"pos":[29165,29206],"content":"This property is not currently supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is not currently supported.","pos":[0,41]}]},{"pos":[29322,29336],"content":"Not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not supported.","pos":[0,14]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  id: SrgsRule\n  children:\n  - System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String)\n  - System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String,System.Speech.Recognition.SrgsGrammar.SrgsElement[])\n  - System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)\n  - System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass\n  - System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements\n  - System.Speech.Recognition.SrgsGrammar.SrgsRule.Id\n  - System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError\n  - System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit\n  - System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse\n  - System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition\n  - System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope\n  - System.Speech.Recognition.SrgsGrammar.SrgsRule.Script\n  langs:\n  - csharp\n  name: SrgsRule\n  nameWithType: SrgsRule\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  type: Class\n  summary: Represents a grammar rule.\n  remarks: \"Use the SrgsRule class to create a new rule at run time or to modify a rule in an existing grammar stream or file at run time.  \\n  \\n The words and phrases specified by SrgsRule objects in grammars defined by <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instances limit the spoken input that the recognizer must be able to identify.  \\n  \\n An SrgsRule object specifies the sequence in which words and phrases must be spoken by ordering the objects that contain them. Words and phrases within a rule are represented by objects such as <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, and <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> elements. Use the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> property to access the collection of child objects that an SrgsRule object contains.  \\n  \\n You can determine whether an SrgsRule can be specified in a rule reference from a rule in an external grammar by setting its <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope%2A> property.  \\n  \\n It is not legal to define an SrgsRule that is empty or that contains only white space.  \\n  \\n This class represents the `rule` element that is defined in the World Wide Web Consortium (W3C) [Speech Recognition Grammar Specification (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761). For information about the SRGS `rule` element and details about its support by System.Speech, see [rule Element](http://msdn.microsoft.com/en-us/da67b4aa-0545-426a-a02f-1417b968021e).\"\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"Rule={_id.ToString()} Scope={_scope.ToString()}\")]\n\n      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Speech.Recognition.SrgsGrammar.SrgsRule/SrgsRuleDebugDisplay))]\n\n      public class SrgsRule\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  langs:\n  - csharp\n  name: SrgsRule(String)\n  nameWithType: SrgsRule.SrgsRule(String)\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.SrgsRule(String)\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: Initializes a new instance of the <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsRule\"></xref> class and specifies the identifier for the rule.\n  remarks: \"The SrgsRule constructor initializes the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> property. The identifier must be unique within a given grammar.  \\n  \\n The SrgsRule constructor throws a <xref:System.FormatException> in the following circumstances:  \\n  \\n-   `id` is not a valid XML name, as defined in [Extensible Markup Language (XML) 1.0 (Fifth Edition)](http://www.w3.org/TR/REC-xml/). To paraphrase this definition, a valid XML name must begin with a letter, an underscore ('_'), or a colon (':') and can be followed by zero or more NameChar characters (also defined in the XML specification).  \\n  \\n-   `id` is \\\"NULL\\\" or \\\"VOID\\\" or \\\"GARBAGE\\\".  \\n  \\n-   `id` contains at least one invalid rule ID character. These characters are: '?', '*', '+', '&#124;', '(', '), '^', '$', '/', ';', '.', '=', '\\\\<', '>', '[', ']', '{', '}', '\\\\\\\\\\\\\\\\', ' ', '\\\\t', '\\\\r', and '\\\\n'.\"\n  example:\n  - \"The following example creates a grammar that recognizes the phrase \\\"A nation that has won the World Cup is\\\" followed by the name of a country that has won the World Cup. The example creates a <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object named `winnerRule` and passes in the identifier  `WorldCupWinner` as a <xref:System.String>. The <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> object consists of an array of new <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> objects containing alternatives to be recognized by the rule.  \\n  \\n```c#  \\npublic void WorldSoccerWinners ()  \\n{  \\n  \\n  // Create an SrgsDocument, create a new rule  \\n  // and set its scope to public.  \\n  SrgsDocument document = new SrgsDocument();  \\n  SrgsRule winnerRule = new SrgsRule(\\\"WorldCupWinner\\\");  \\n  winnerRule.Scope = SrgsRuleScope.Public;  \\n  \\n  // Add the introduction.  \\n  winnerRule.Elements.Add(new SrgsItem(\\\"A nation that has won the world cup is: \\\"));  \\n  \\n  // Create the rule for the European nations.  \\n  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\\\"England\\\"),   \\n    new SrgsItem(\\\"France\\\"), new SrgsItem(\\\"Germany\\\"), new SrgsItem(\\\"Italy\\\")});  \\n  SrgsRule ruleEurope = (new SrgsRule(\\\"EuropeanNations\\\", new SrgsElement[] {oneOfEurope}));  \\n  \\n  // Create the rule for the South American nations.  \\n  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\\\"Argentina\\\"),   \\n    new SrgsItem(\\\"Brazil\\\"), new SrgsItem(\\\"Uruguay\\\")});  \\n  SrgsRule ruleSAmerica = (new SrgsRule(\\\"SouthAmericanNations\\\", new SrgsElement[] {oneOfSAmerica}));  \\n  \\n  // Add references to winnerRule for ruleEurope and ruleSAmerica.  \\n  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   \\n    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  \\n  \\n  // Add all the rules to the document and make winnerRule   \\n  // the root rule of the document.  \\n  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  \\n  document.Root = winnerRule;  \\n}  \\n```\"\n  syntax:\n    content: public SrgsRule (string id);\n    parameters:\n    - id: id\n      type: System.String\n      description: The identifier of the rule.\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>id</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>id</code> is empty.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>id</code> is not a proper rule identifier.\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String,System.Speech.Recognition.SrgsGrammar.SrgsElement[])\n  id: '#ctor(System.String,System.Speech.Recognition.SrgsGrammar.SrgsElement[])'\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  langs:\n  - csharp\n  name: SrgsRule(String,SrgsElement[])\n  nameWithType: SrgsRule.SrgsRule(String,SrgsElement[])\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.SrgsRule(String,SrgsElement[])\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: Initializes a new instance of the <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsRule\"></xref> class from an array of <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsElement\"></xref> objects.\n  remarks: \"The SrgsRule constructor initializes the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> property. The identifier must be unique within a given grammar.  \\n  \\n The SrgsRule constructor throws a <xref:System.FormatException> in the following circumstances:  \\n  \\n-   `id` is not a valid XML name, as defined in [Extensible Markup Language (XML) 1.0 (Fifth Edition)](http://www.w3.org/TR/REC-xml/). To paraphrase this definition, a valid XML name must begin with a letter, an underscore ('_'), or a colon (':') and can be followed by zero or more NameChar characters (also defined in the XML specification).  \\n  \\n-   `id` is \\\"NULL\\\" or \\\"VOID\\\" or \\\"GARBAGE\\\".  \\n  \\n-   `id` contains at least one invalid rule ID character. These characters are: '?', '*', '+', '&#124;', '(', '), '^', '$', '/', ';', '.', '=', '\\\\<', '>', '[', ']', '{', '}', '\\\\\\\\\\\\\\\\', ' ', '\\\\t', '\\\\r', and '\\\\n'.\"\n  example:\n  - \"The following example creates a grammar that recognizes the phrase \\\"A nation that has won the World Cup is\\\" followed by the name of a country that has won the World Cup. The example creates a public rule named `WorldCupWinner`. The example then creates two <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> objects, `ruleEurope` and  `ruleSAmerica`, passing in a <xref:System.String> for the rule identifier and an <xref:System.Speech.Recognition.SrgsGrammar.SrgsElement> array containing a <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> object. Subsequently, the example adds rule references to `ruleEurope` and `ruleSAmerica` from the rule `WorldCupWinner`.  \\n  \\n```c#  \\npublic void WorldSoccerWinners ()  \\n{  \\n  // Create a grammar from an SRGSDocument, create a new rule  \\n  // and set its scope to public.  \\n  SrgsDocument srgsGrammar = new SrgsDocument ();  \\n  SrgsRule winnerRule = new SrgsRule (\\\"WorldCupWinner\\\");  \\n  winnerRule.Scope = SrgsRuleScope.Public;  \\n  \\n  // Add the introduction.  \\n  winnerRule.Elements.Add (new SrgsItem (\\\"A nation that has won the world cup is\\\"));  \\n  \\n  // Create the rule for the European nations.  \\n  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\\\"England\\\"), new SrgsItem(\\\"France\\\"), new SrgsItem(\\\"Germany\\\"), new SrgsItem(\\\"Italy\\\")});  \\n  SrgsRule ruleEurope = (new SrgsRule(\\\"EuropeanNations\\\", new SrgsElement[] {oneOfEurope}));  \\n  \\n  // Create the rule for the South American nations.  \\n  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\\\"Argentina\\\"), new SrgsItem(\\\"Brazil\\\"), new SrgsItem(\\\"Uruguay\\\")});  \\n  SrgsRule ruleSAmerica = (new SrgsRule(\\\"SouthAmericanNations\\\", new SrgsElement[] {oneOfSAmerica}));  \\n  \\n  // Add references to winnerRule for ruleEurope and ruleSAmerica.  \\n  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  \\n  \\n  // Add all the rules to the grammar and make winnerRule  \\n  // the root rule of the grammar.  \\n  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  \\n  srgsGrammar.Root = winnerRule;  \\n}  \\n```  \\n  \\n The created grammar has the following form.  \\n  \\n```xml  \\n<grammar version=\\\"1.0\\\" xml:lang=\\\"en-US\\\" xmlns=\\\"http://www.w3.org/2001/06/grammar\\\" root=\\\"WorldCupWinner\\\">  \\n    <rule id=\\\"WorldCupWinner\\\" scope=\\\"public\\\">  \\n        <item> A nation that has won the world cup is </item>  \\n        <one-of>  \\n            <item>  \\n                <ruleref uri=\\\"#EuropeanNations\\\" />  \\n            </item>  \\n            <item>  \\n                <ruleref uri=\\\"#SouthAmericanNations\\\" />  \\n            </item>  \\n        </one-of>  \\n    </rule>  \\n    <rule id=\\\"EuropeanNations\\\">  \\n        <one-of>  \\n            <item> England </item>  \\n            <item> France </item>  \\n            <item> Germany </item>  \\n            <item> Italy </item>  \\n        </one-of>  \\n    </rule>  \\n    <rule id=\\\"SouthAmericanNations\\\">  \\n        <one-of>  \\n            <item> Argentina </item>  \\n            <item> Brazil </item>  \\n            <item> Uruguay </item>  \\n        </one-of>  \\n    </rule>  \\n</grammar>  \\n```\"\n  syntax:\n    content: public SrgsRule (string id, System.Speech.Recognition.SrgsGrammar.SrgsElement[] elements);\n    parameters:\n    - id: id\n      type: System.String\n      description: The identifier of the rule.\n    - id: elements\n      type: System.Speech.Recognition.SrgsGrammar.SrgsElement[]\n      description: An array of <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsElement\"></xref> elements.\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>id</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n <code>elements</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>id</code> is empty.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>id</code> is not a proper rule identifier.\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)\n  id: Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  langs:\n  - csharp\n  name: Add(SrgsElement)\n  nameWithType: SrgsRule.Add(SrgsElement)\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(SrgsElement)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: Adds an <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsElement\"></xref> to an <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsRule\"></xref> object.\n  remarks: \"Typical additions to an <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object include <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, and <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> objects that specify what speakers can say. A valid rule element must contain at least one piece of recognizable text or one rule reference. See [Create Grammars Using SrgsGrammar](http://msdn.microsoft.com/en-us/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906) for more information.  \\n  \\n An <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object may also contain <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag> and <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> objects that add semantic values and semantic keys to the rule. The speech recognition engine will return the semantic information, as well as the recognized phrase, when it recognizes the phrase. See [Semantic Interpretation Markup](http://msdn.microsoft.com/en-us/2e115391-73b3-4666-8fd1-540c529de3b0) for more information.\"\n  example:\n  - \"The following example creates a grammar that recognizes the phrase \\\"A nation that has won the World Cup is\\\" followed by the name of a country that has won the World Cup. After creating the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object `winnerRule` and giving it the string identifier `WorldCupWinner`, the example uses the Add method to append the string  \\\"A nation that has won the World Cup is\\\" to the rule. The example then creates two additional rules, `ruleEurope` and  `ruleSAmerica`. Again using the Add method, the example appends an <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> object to the `WorldCupWinner` rule that contains rule references to `ruleEurope` and `ruleSAmerica`.  \\n  \\n```c#  \\n// Create an SrgsDocument, create a new rule  \\n// and set its scope to public.  \\nSrgsDocument document = new SrgsDocument();  \\nSrgsRule winnerRule = new SrgsRule(\\\"WorldCupWinner\\\");  \\nwinnerRule.Scope = SrgsRuleScope.Public;  \\n  \\n// Add the introduction.  \\nwinnerRule.Elements.Add(new SrgsItem(\\\"A nation that has won the world cup is: \\\"));  \\n  \\n// Create the rule for the European nations.  \\nSrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\\\"England\\\"), new SrgsItem(\\\"France\\\"), new SrgsItem(\\\"Germany\\\"), new SrgsItem(\\\"Italy\\\")});  \\nSrgsRule ruleEurope = (new SrgsRule(\\\"EuropeanNations\\\", new SrgsElement[] {oneOfEurope}));  \\n  \\n// Create the rule for the South American nations.  \\nSrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\\\"Argentina\\\"), new SrgsItem(\\\"Brazil\\\"), new SrgsItem(\\\"Uruguay\\\")});  \\nSrgsRule ruleSAmerica = (new SrgsRule(\\\"SouthAmericanNations\\\", new SrgsElement[] {oneOfSAmerica}));  \\n  \\n// Add references to winnerRule for ruleEurope and ruleSAmerica.  \\nwinnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  \\n  \\n// Add all the rules to the document and make winnerRule   \\n// the root rule of the document.  \\ndocument.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  \\ndocument.Root = winnerRule;  \\n```\"\n  syntax:\n    content: public void Add (System.Speech.Recognition.SrgsGrammar.SrgsElement element);\n    parameters:\n    - id: element\n      type: System.Speech.Recognition.SrgsGrammar.SrgsElement\n      description: An object that inherits from <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsElement\"></xref> and specifies what can be recognized.\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass\n  id: BaseClass\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  langs:\n  - csharp\n  name: BaseClass\n  nameWithType: SrgsRule.BaseClass\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: This property is not currently supported.\n  syntax:\n    content: public string BaseClass { get; set; }\n    return:\n      type: System.String\n      description: Not supported.\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements\n  id: Elements\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  langs:\n  - csharp\n  name: Elements\n  nameWithType: SrgsRule.Elements\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: Gets the collection of <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsElement\"></xref> objects in the <xref href=\"System.Speech.Recognition.SrgsGrammar.SrgsRule\"></xref> instance.\n  remarks: The elements in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object can consist of <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag>, and <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> objects.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Speech.Recognition.SrgsGrammar.SrgsElement> Elements { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Speech.Recognition.SrgsGrammar.SrgsElement}\n      description: The collection of elements in the rule.\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Id\n  id: Id\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  langs:\n  - csharp\n  name: Id\n  nameWithType: SrgsRule.Id\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Id\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: Gets or sets the identifier for the rule.\n  remarks: \"The identifier for a rule is a string that contains the name of the rule.  \\n  \\n A value used to set Id must adhere to the following rules:  \\n  \\n-   The value must be a valid XML name, as defined in [Extensible Markup Language (XML) 1.0 (Fifth Edition)](http://www.w3.org/TR/REC-xml/). To paraphrase this definition, a valid XML name must begin with a letter, an underscore ('_'), or a colon (':') and can be followed by zero or more NameChar characters (also defined in the XML specification).  \\n  \\n-   The value can be \\\"NULL\\\" or \\\"VOID\\\" or \\\"GARBAGE\\\".  \\n  \\n-   The value cannot contain any invalid rule ID character. These characters are: '?', '*', '+', '&#124;', '(', '), '^', '$', '/', ';', '.', '=', '\\\\<', '>', '[', ']', '{', '}', '\\\\\\\\\\\\\\\\', ' ', '\\\\t', '\\\\r', and '\\\\n'.\"\n  syntax:\n    content: public string Id { get; set; }\n    return:\n      type: System.String\n      description: The identifier for the rule.\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.Id*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: An attempt is made to set Id to an invalid value.\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError\n  id: OnError\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  langs:\n  - csharp\n  name: OnError\n  nameWithType: SrgsRule.OnError\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: This property is not currently supported.\n  syntax:\n    content: public string OnError { get; set; }\n    return:\n      type: System.String\n      description: Not supported.\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit\n  id: OnInit\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  langs:\n  - csharp\n  name: OnInit\n  nameWithType: SrgsRule.OnInit\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: This property is not currently supported.\n  syntax:\n    content: public string OnInit { get; set; }\n    return:\n      type: System.String\n      description: Not supported.\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse\n  id: OnParse\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  langs:\n  - csharp\n  name: OnParse\n  nameWithType: SrgsRule.OnParse\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: This property is not currently supported.\n  syntax:\n    content: public string OnParse { get; set; }\n    return:\n      type: System.String\n      description: Not supported.\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition\n  id: OnRecognition\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  langs:\n  - csharp\n  name: OnRecognition\n  nameWithType: SrgsRule.OnRecognition\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: This property is not currently supported.\n  syntax:\n    content: public string OnRecognition { get; set; }\n    return:\n      type: System.String\n      description: Not supported.\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope\n  id: Scope\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  langs:\n  - csharp\n  name: Scope\n  nameWithType: SrgsRule.Scope\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: Gets or sets whether a rule can be activated for recognition and when the rule can be referenced by other rules.\n  remarks: \"The default value for scope is `Private`. A private rule can only be activated for recognition by a rule reference from the root rule in its containing grammar or from another rule that is referenced from the root rule. A private rule cannot be referenced by an external grammar, unless the private rule is declared as the root rule of its containing grammar.  \\n  \\n If its scope is set to `Public`, an <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object can be activated for recognition by a reference from a <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> object in the containing grammar or from a rule in an external grammar.\"\n  example:\n  - \"The following example creates a grammar that recognizes the phrase \\\"A nation that has won the World Cup is\\\" followed by the name of a country that has won the World Cup. It creates a public rule named `WorldCupWinner` and sets the scope of that rule to Public.  \\n  \\n```c#  \\n// Create an SrgsDocument, create a new rule and set its scope to public.  \\nSrgsDocument document = new SrgsDocument();  \\nSrgsRule winnerRule = new SrgsRule(\\\"WorldCupWinner\\\");  \\nwinnerRule.Scope = SrgsRuleScope.Public;  \\n  \\n// Add the introduction.  \\nwinnerRule.Elements.Add(new SrgsItem(\\\"A nation that has won the world cup is: \\\"));  \\n  \\n// Create the rule for the European nations.  \\nSrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\\\"England\\\"), new SrgsItem(\\\"France\\\"), new SrgsItem(\\\"Germany\\\"), new SrgsItem(\\\"Italy\\\")});  \\nSrgsRule ruleEurope = (new SrgsRule(\\\"EuropeanNations\\\", new SrgsElement[] {oneOfEurope}));  \\n  \\n// Create the rule for the South American nations.  \\nSrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\\\"Argentina\\\"), new SrgsItem(\\\"Brazil\\\"), new SrgsItem(\\\"Uruguay\\\")});  \\nSrgsRule ruleSAmerica = (new SrgsRule(\\\"SouthAmericanNations\\\", new SrgsElement[] {oneOfSAmerica}));  \\n  \\n// Add references to winnerRule for ruleEurope and ruleSAmerica.  \\nwinnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope)), new SrgsItem(new SrgsRuleRef(ruleSAmerica)})));  \\n  \\n// Add all the rules to the document and make winnerRule   \\n// the root rule of the document.  \\ndocument.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  \\ndocument.Root = winnerRule;  \\n```  \\n  \\n The created grammar has the following form.  \\n  \\n```xml  \\n<grammar version=\\\"1.0\\\" xml:lang=\\\"en-US\\\" xmlns=\\\"http://www.w3.org/2001/06/grammar\\\" root=\\\"WorldCupWinner\\\">  \\n    <rule id=\\\"WorldCupWinner\\\" scope=\\\"public\\\">  \\n        <item> A nation that has won the world cup is </item>  \\n        <one-of>  \\n            <item>  \\n                <ruleref uri=\\\"#EuropeanNations\\\" />  \\n            </item>  \\n            <item>  \\n                <ruleref uri=\\\"#SouthAmericanNations\\\" />  \\n            </item>  \\n        </one-of>  \\n    </rule>  \\n    <rule id=\\\"EuropeanNations\\\">  \\n        <one-of>  \\n            <item> England< /item>  \\n            <item> France </item>  \\n            <item> Germany </item>  \\n            <item> Italy </item>  \\n        </one-of>  \\n    </rule>  \\n    <rule id=\\\"SouthAmericanNations\\\">  \\n        <one-of>  \\n            <item> Argentina </item>  \\n            <item> Brazil </item>  \\n            <item> Uruguay </item>  \\n        </one-of>  \\n    </rule>  \\n</grammar>  \\n```\"\n  syntax:\n    content: public System.Speech.Recognition.SrgsGrammar.SrgsRuleScope Scope { get; set; }\n    return:\n      type: System.Speech.Recognition.SrgsGrammar.SrgsRuleScope\n      description: A value the sets the scope for the rule.\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Script\n  id: Script\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  langs:\n  - csharp\n  name: Script\n  nameWithType: SrgsRule.Script\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Script\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition.SrgsGrammar\n  summary: This property is not currently supported.\n  syntax:\n    content: public string Script { get; set; }\n    return:\n      type: System.String\n      description: Not supported.\n  overload: System.Speech.Recognition.SrgsGrammar.SrgsRule.Script*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.FormatException\n  isExternal: true\n  name: System.FormatException\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String)\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: SrgsRule(String)\n  nameWithType: SrgsRule.SrgsRule(String)\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.SrgsRule(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String,System.Speech.Recognition.SrgsGrammar.SrgsElement[])\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: SrgsRule(String,SrgsElement[])\n  nameWithType: SrgsRule.SrgsRule(String,SrgsElement[])\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.SrgsRule(String,SrgsElement[])\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsElement[]\n  parent: System.Speech.Recognition.SrgsGrammar\n  isExternal: false\n  name: SrgsElement\n  nameWithType: SrgsElement\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsElement[]\n  spec.csharp:\n  - uid: System.Speech.Recognition.SrgsGrammar.SrgsElement\n    name: SrgsElement\n    nameWithType: SrgsElement\n    fullName: SrgsElement[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: Add(SrgsElement)\n  nameWithType: SrgsRule.Add(SrgsElement)\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(SrgsElement)\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsElement\n  parent: System.Speech.Recognition.SrgsGrammar\n  isExternal: false\n  name: SrgsElement\n  nameWithType: SrgsElement\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsElement\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: BaseClass\n  nameWithType: SrgsRule.BaseClass\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: Elements\n  nameWithType: SrgsRule.Elements\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements\n- uid: System.Collections.ObjectModel.Collection{System.Speech.Recognition.SrgsGrammar.SrgsElement}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<SrgsElement>\n  nameWithType: Collection<SrgsElement>\n  fullName: System.Collections.ObjectModel.Collection<System.Speech.Recognition.SrgsGrammar.SrgsElement>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Speech.Recognition.SrgsGrammar.SrgsElement>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Speech.Recognition.SrgsGrammar.SrgsElement\n    name: SrgsElement\n    nameWithType: SrgsElement\n    fullName: SrgsElement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Id\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: Id\n  nameWithType: SrgsRule.Id\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Id\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: OnError\n  nameWithType: SrgsRule.OnError\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: OnInit\n  nameWithType: SrgsRule.OnInit\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: OnParse\n  nameWithType: SrgsRule.OnParse\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: OnRecognition\n  nameWithType: SrgsRule.OnRecognition\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: Scope\n  nameWithType: SrgsRule.Scope\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleScope\n  parent: System.Speech.Recognition.SrgsGrammar\n  isExternal: false\n  name: SrgsRuleScope\n  nameWithType: SrgsRuleScope\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleScope\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Script\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: Script\n  nameWithType: SrgsRule.Script\n  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule.Script\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor*\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: SrgsRule\n  nameWithType: SrgsRule.SrgsRule\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Add*\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: Add\n  nameWithType: SrgsRule.Add\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass*\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: BaseClass\n  nameWithType: SrgsRule.BaseClass\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements*\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: Elements\n  nameWithType: SrgsRule.Elements\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Id*\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: Id\n  nameWithType: SrgsRule.Id\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError*\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: OnError\n  nameWithType: SrgsRule.OnError\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: OnInit\n  nameWithType: SrgsRule.OnInit\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse*\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: OnParse\n  nameWithType: SrgsRule.OnParse\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition*\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: OnRecognition\n  nameWithType: SrgsRule.OnRecognition\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope*\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: Scope\n  nameWithType: SrgsRule.Scope\n- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule.Script*\n  parent: System.Speech.Recognition.SrgsGrammar.SrgsRule\n  isExternal: false\n  name: Script\n  nameWithType: SrgsRule.Script\n"}