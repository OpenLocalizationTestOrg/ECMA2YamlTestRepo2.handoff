{"nodes":[{"pos":[680,809],"content":"Provides the base functionality for creating data-related collections in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> namespace.","needQuote":true,"needEscape":true,"source":"Provides the base functionality for creating data-related collections in the <xref href=\"System.Windows.Forms\"></xref> namespace."},{"pos":[822,1334],"content":"The BaseCollection class is not intended for use by application developers. Application developers should use <xref:System.Collections.CollectionBase> instead.       The BaseCollection class implements the <xref:System.Collections.ICollection> interface.       Classes that derive from the BaseCollection class include:      -   <xref:System.Windows.Forms.BindingsCollection>      -   <xref:System.Windows.Forms.GridColumnStylesCollection>      -   <xref:System.Windows.Forms.GridTableStylesCollection>","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The BaseCollection class is not intended for use by application developers. Application developers should use <xref:System.Collections.CollectionBase> instead.       The BaseCollection class implements the <xref:System.Collections.ICollection> interface.       Classes that derive from the BaseCollection class include:      -   <xref:System.Windows.Forms.BindingsCollection>      -   <xref:System.Windows.Forms.GridColumnStylesCollection>      -   <xref:System.Windows.Forms.GridTableStylesCollection>","pos":[0,502],"nodes":[{"content":"The BaseCollection class is not intended for use by application developers.","pos":[0,75]},{"content":"Application developers should use &lt;xref:System.Collections.CollectionBase&gt; instead.","pos":[76,159],"source":" Application developers should use <xref:System.Collections.CollectionBase> instead."},{"content":"The BaseCollection class implements the &lt;xref:System.Collections.ICollection&gt; interface.","pos":[166,254],"source":"       The BaseCollection class implements the <xref:System.Collections.ICollection> interface."},{"content":"Classes that derive from the BaseCollection class include:      -   &lt;xref:System.Windows.Forms.BindingsCollection&gt;      -   &lt;xref:System.Windows.Forms.GridColumnStylesCollection&gt;      -   &lt;xref:System.Windows.Forms.GridTableStylesCollection&gt;","pos":[261,502],"source":"       Classes that derive from the BaseCollection class include:      -   <xref:System.Windows.Forms.BindingsCollection>      -   <xref:System.Windows.Forms.GridColumnStylesCollection>      -   <xref:System.Windows.Forms.GridTableStylesCollection>"}]}]},{"pos":[2191,2288],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BaseCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.BaseCollection\"></xref> class."},{"pos":[2881,3073],"content":"Copies all the elements of the current one-dimensional <xref:System.Array> to the specified one-dimensional <xref:System.Array> starting at the specified destination <xref:System.Array> index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies all the elements of the current one-dimensional &lt;xref:System.Array&gt; to the specified one-dimensional &lt;xref:System.Array&gt; starting at the specified destination &lt;xref:System.Array&gt; index.","pos":[0,192],"source":"Copies all the elements of the current one-dimensional <xref:System.Array> to the specified one-dimensional <xref:System.Array> starting at the specified destination <xref:System.Array> index."}]},{"pos":[3212,3379],"content":"The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from the current <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Array\" name=\"Array\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The one-dimensional <xref:System.Array> that is the destination of the elements copied from the current <xref uid=\"langword_csharp_Array\" name=\"Array\" href=\"\"></xref>."},{"pos":[3440,3502],"content":"The zero-based relative index in <ph id=\"ph1\">`ar`</ph> at which copying begins.","needQuote":true,"needEscape":true,"source":"The zero-based relative index in `ar` at which copying begins."},{"pos":[3932,3984],"content":"Gets the total number of elements in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the total number of elements in the collection.","pos":[0,52]}]},{"pos":[4098,4145],"content":"The total number of elements in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of elements in the collection.","pos":[0,47]}]},{"pos":[4618,4695],"content":"Gets the object that enables iterating through the members of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the object that enables iterating through the members of the collection.","pos":[0,77]}]},{"pos":[4868,4946],"content":"An object that implements the <xref:System.Collections.IEnumerator> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that implements the &lt;xref:System.Collections.IEnumerator&gt; interface.","pos":[0,78],"source":"An object that implements the <xref:System.Collections.IEnumerator> interface."}]},{"pos":[5408,5468],"content":"Gets a value indicating whether the collection is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the collection is read-only.","pos":[0,60]}]},{"pos":[5480,5637],"content":"The collections that derive from the &lt;xref:System.Windows.Forms.BaseCollection&gt; class are always writable, which is why this property always returns <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The collections that derive from the <xref:System.Windows.Forms.BaseCollection> class are always writable, which is why this property always returns `false`."},{"pos":[5751,5838],"content":"This property is always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This property is always <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6317,6417],"content":"Gets a value indicating whether access to the <xref:System.Collections.ICollection> is synchronized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether access to the &lt;xref:System.Collections.ICollection&gt; is synchronized.","pos":[0,100],"source":"Gets a value indicating whether access to the <xref:System.Collections.ICollection> is synchronized."}]},{"pos":[6430,7059],"content":"If a collection is thread safe, the IsSynchronized property returns `true`, and the programmer does not have to do anything to keep the collection thread safe.       If, as is the case with the <xref:System.Windows.Forms.BaseCollection>, the IsSynchronized property returns `false`, then the <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> property returns an object that can be used with the C# `lock` keyword. Use the static <xref:System.Threading.Monitor.Enter%2A> and <xref:System.Threading.Monitor.Exit%2A> methods of the <xref:System.Threading.Monitor> class to manually lock and unlock the synchronization object.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If a collection is thread safe, the IsSynchronized property returns <ph id=\"ph1\">`true`</ph>, and the programmer does not have to do anything to keep the collection thread safe.","pos":[0,159],"source":"If a collection is thread safe, the IsSynchronized property returns `true`, and the programmer does not have to do anything to keep the collection thread safe."},{"content":"If, as is the case with the &lt;xref:System.Windows.Forms.BaseCollection&gt;, the IsSynchronized property returns <ph id=\"ph1\">`false`</ph>, then the &lt;xref:System.Windows.Forms.BaseCollection.SyncRoot%2A&gt; property returns an object that can be used with the C# <ph id=\"ph2\">`lock`</ph> keyword.","pos":[166,418],"source":"       If, as is the case with the <xref:System.Windows.Forms.BaseCollection>, the IsSynchronized property returns `false`, then the <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> property returns an object that can be used with the C# `lock` keyword."},{"content":"Use the static &lt;xref:System.Threading.Monitor.Enter%2A&gt; and &lt;xref:System.Threading.Monitor.Exit%2A&gt; methods of the &lt;xref:System.Threading.Monitor&gt; class to manually lock and unlock the synchronization object.","pos":[419,627],"source":" Use the static <xref:System.Threading.Monitor.Enter%2A> and <xref:System.Threading.Monitor.Exit%2A> methods of the <xref:System.Threading.Monitor> class to manually lock and unlock the synchronization object."}]},{"pos":[7178,7270],"content":"This property always returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This property always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7703,7812],"content":"Gets the list of elements contained in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BaseCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets the list of elements contained in the <xref href=\"System.Windows.Forms.BaseCollection\"></xref> instance."},{"pos":[7969,8185],"content":"An <xref href=\"System.Collections.ArrayList\"></xref> containing the elements of the collection. This property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> unless overridden in a derived class.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Collections.ArrayList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the elements of the collection.","pos":[0,95],"source":"An <xref href=\"System.Collections.ArrayList\"></xref> containing the elements of the collection."},{"content":"This property returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> unless overridden in a derived class.","pos":[96,216],"source":" This property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> unless overridden in a derived class."}]},{"pos":[8628,8746],"content":"Gets an object that can be used to synchronize access to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BaseCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Windows.Forms.BaseCollection\"></xref>."},{"pos":[8758,9010],"content":"If, as is the case with the &lt;xref:System.Windows.Forms.BaseCollection&gt;, the &lt;xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A&gt; property returns <ph id=\"ph1\">`false`</ph>, then the SyncRoot property returns an object that can be used with the C# <ph id=\"ph2\">`lock`</ph> keyword.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If, as is the case with the <xref:System.Windows.Forms.BaseCollection>, the <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> property returns `false`, then the SyncRoot property returns an object that can be used with the C# `lock` keyword."},{"pos":[9123,9226],"content":"An object that can be used to synchronize the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.BaseCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An object that can be used to synchronize the <xref href=\"System.Windows.Forms.BaseCollection\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.BaseCollection\n  id: BaseCollection\n  children:\n  - System.Windows.Forms.BaseCollection.#ctor\n  - System.Windows.Forms.BaseCollection.CopyTo(System.Array,System.Int32)\n  - System.Windows.Forms.BaseCollection.Count\n  - System.Windows.Forms.BaseCollection.GetEnumerator\n  - System.Windows.Forms.BaseCollection.IsReadOnly\n  - System.Windows.Forms.BaseCollection.IsSynchronized\n  - System.Windows.Forms.BaseCollection.List\n  - System.Windows.Forms.BaseCollection.SyncRoot\n  langs:\n  - csharp\n  name: BaseCollection\n  nameWithType: BaseCollection\n  fullName: System.Windows.Forms.BaseCollection\n  type: Class\n  summary: Provides the base functionality for creating data-related collections in the <xref href=\"System.Windows.Forms\"></xref> namespace.\n  remarks: \"The BaseCollection class is not intended for use by application developers. Application developers should use <xref:System.Collections.CollectionBase> instead.  \\n  \\n The BaseCollection class implements the <xref:System.Collections.ICollection> interface.  \\n  \\n Classes that derive from the BaseCollection class include:  \\n  \\n-   <xref:System.Windows.Forms.BindingsCollection>  \\n  \\n-   <xref:System.Windows.Forms.GridColumnStylesCollection>  \\n  \\n-   <xref:System.Windows.Forms.GridTableStylesCollection>\"\n  syntax:\n    content: 'public class BaseCollection : MarshalByRefObject, System.Collections.ICollection'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Windows.Forms.BaseCollection.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.BaseCollection\n  langs:\n  - csharp\n  name: BaseCollection()\n  nameWithType: BaseCollection.BaseCollection()\n  fullName: System.Windows.Forms.BaseCollection.BaseCollection()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.BaseCollection\"></xref> class.\n  syntax:\n    content: public BaseCollection ();\n    parameters: []\n  overload: System.Windows.Forms.BaseCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BaseCollection.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Forms.BaseCollection\n  langs:\n  - csharp\n  name: CopyTo(Array,Int32)\n  nameWithType: BaseCollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Forms.BaseCollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Copies all the elements of the current one-dimensional <xref:System.Array> to the specified one-dimensional <xref:System.Array> starting at the specified destination <xref:System.Array> index.\n  syntax:\n    content: public void CopyTo (Array ar, int index);\n    parameters:\n    - id: ar\n      type: System.Array\n      description: The one-dimensional <xref:System.Array> that is the destination of the elements copied from the current <xref uid=\"langword_csharp_Array\" name=\"Array\" href=\"\"></xref>.\n    - id: index\n      type: System.Int32\n      description: The zero-based relative index in `ar` at which copying begins.\n  overload: System.Windows.Forms.BaseCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BaseCollection.Count\n  id: Count\n  parent: System.Windows.Forms.BaseCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: BaseCollection.Count\n  fullName: System.Windows.Forms.BaseCollection.Count\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the total number of elements in the collection.\n  syntax:\n    content: public virtual int Count { get; }\n    return:\n      type: System.Int32\n      description: The total number of elements in the collection.\n  overload: System.Windows.Forms.BaseCollection.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BaseCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.Forms.BaseCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: BaseCollection.GetEnumerator()\n  fullName: System.Windows.Forms.BaseCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the object that enables iterating through the members of the collection.\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An object that implements the <xref:System.Collections.IEnumerator> interface.\n  overload: System.Windows.Forms.BaseCollection.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BaseCollection.IsReadOnly\n  id: IsReadOnly\n  parent: System.Windows.Forms.BaseCollection\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: BaseCollection.IsReadOnly\n  fullName: System.Windows.Forms.BaseCollection.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the collection is read-only.\n  remarks: The collections that derive from the <xref:System.Windows.Forms.BaseCollection> class are always writable, which is why this property always returns `false`.\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: This property is always <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.BaseCollection.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BaseCollection.IsSynchronized\n  id: IsSynchronized\n  parent: System.Windows.Forms.BaseCollection\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: BaseCollection.IsSynchronized\n  fullName: System.Windows.Forms.BaseCollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether access to the <xref:System.Collections.ICollection> is synchronized.\n  remarks: \"If a collection is thread safe, the IsSynchronized property returns `true`, and the programmer does not have to do anything to keep the collection thread safe.  \\n  \\n If, as is the case with the <xref:System.Windows.Forms.BaseCollection>, the IsSynchronized property returns `false`, then the <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> property returns an object that can be used with the C# `lock` keyword. Use the static <xref:System.Threading.Monitor.Enter%2A> and <xref:System.Threading.Monitor.Exit%2A> methods of the <xref:System.Threading.Monitor> class to manually lock and unlock the synchronization object.\"\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: This property always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.BaseCollection.IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BaseCollection.List\n  id: List\n  parent: System.Windows.Forms.BaseCollection\n  langs:\n  - csharp\n  name: List\n  nameWithType: BaseCollection.List\n  fullName: System.Windows.Forms.BaseCollection.List\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the list of elements contained in the <xref href=\"System.Windows.Forms.BaseCollection\"></xref> instance.\n  syntax:\n    content: protected virtual System.Collections.ArrayList List { get; }\n    return:\n      type: System.Collections.ArrayList\n      description: An <xref href=\"System.Collections.ArrayList\"></xref> containing the elements of the collection. This property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> unless overridden in a derived class.\n  overload: System.Windows.Forms.BaseCollection.List*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.BaseCollection.SyncRoot\n  id: SyncRoot\n  parent: System.Windows.Forms.BaseCollection\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: BaseCollection.SyncRoot\n  fullName: System.Windows.Forms.BaseCollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Windows.Forms.BaseCollection\"></xref>.\n  remarks: If, as is the case with the <xref:System.Windows.Forms.BaseCollection>, the <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> property returns `false`, then the SyncRoot property returns an object that can be used with the C# `lock` keyword.\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize the <xref href=\"System.Windows.Forms.BaseCollection\"></xref>.\n  overload: System.Windows.Forms.BaseCollection.SyncRoot*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.MarshalByRefObject\n  isExternal: false\n  name: System.MarshalByRefObject\n- uid: System.Windows.Forms.BaseCollection.#ctor\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: BaseCollection()\n  nameWithType: BaseCollection.BaseCollection()\n  fullName: System.Windows.Forms.BaseCollection.BaseCollection()\n- uid: System.Windows.Forms.BaseCollection.CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: CopyTo(Array,Int32)\n  nameWithType: BaseCollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Forms.BaseCollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.BaseCollection.Count\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: Count\n  nameWithType: BaseCollection.Count\n  fullName: System.Windows.Forms.BaseCollection.Count\n- uid: System.Windows.Forms.BaseCollection.GetEnumerator\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: BaseCollection.GetEnumerator()\n  fullName: System.Windows.Forms.BaseCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Forms.BaseCollection.IsReadOnly\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: BaseCollection.IsReadOnly\n  fullName: System.Windows.Forms.BaseCollection.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.BaseCollection.IsSynchronized\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: BaseCollection.IsSynchronized\n  fullName: System.Windows.Forms.BaseCollection.IsSynchronized\n- uid: System.Windows.Forms.BaseCollection.List\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: List\n  nameWithType: BaseCollection.List\n  fullName: System.Windows.Forms.BaseCollection.List\n- uid: System.Collections.ArrayList\n  parent: System.Collections\n  isExternal: false\n  name: ArrayList\n  nameWithType: ArrayList\n  fullName: System.Collections.ArrayList\n- uid: System.Windows.Forms.BaseCollection.SyncRoot\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: BaseCollection.SyncRoot\n  fullName: System.Windows.Forms.BaseCollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Forms.BaseCollection.#ctor*\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: BaseCollection\n  nameWithType: BaseCollection.BaseCollection\n- uid: System.Windows.Forms.BaseCollection.CopyTo*\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: BaseCollection.CopyTo\n- uid: System.Windows.Forms.BaseCollection.Count*\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: Count\n  nameWithType: BaseCollection.Count\n- uid: System.Windows.Forms.BaseCollection.GetEnumerator*\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: BaseCollection.GetEnumerator\n- uid: System.Windows.Forms.BaseCollection.IsReadOnly*\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: BaseCollection.IsReadOnly\n- uid: System.Windows.Forms.BaseCollection.IsSynchronized*\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: BaseCollection.IsSynchronized\n- uid: System.Windows.Forms.BaseCollection.List*\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: List\n  nameWithType: BaseCollection.List\n- uid: System.Windows.Forms.BaseCollection.SyncRoot*\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: BaseCollection.SyncRoot\n"}