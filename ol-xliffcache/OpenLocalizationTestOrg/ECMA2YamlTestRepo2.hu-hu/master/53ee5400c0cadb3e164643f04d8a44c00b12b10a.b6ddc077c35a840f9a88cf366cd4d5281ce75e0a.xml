{"nodes":[{"pos":[1028,1123],"content":"Abstract base class for a serializer that can serialize and deserialize key identifier clauses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Abstract base class for a serializer that can serialize and deserialize key identifier clauses.","pos":[0,95]}]},{"pos":[1135,1281],"content":"Key identifier clauses are represented by the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class and by classes derived from it.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Key identifier clauses are represented by the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt; class and by classes derived from it.","pos":[0,146],"source":"Key identifier clauses are represented by the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class and by classes derived from it."}]},{"pos":[2021,2148],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\"></xref> class."},{"pos":[3001,3183],"content":"When overridden in a derived class, returns a value that indicates whether the element where the specified reader is positioned can be read as a key identifier clause by the handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns a value that indicates whether the element where the specified reader is positioned can be read as a key identifier clause by the handler.","pos":[0,182]}]},{"pos":[3195,3357],"content":"Checks whether the XML can be read as a <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> of the <xref:System.Type> processed by the derived handler.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Checks whether the XML can be read as a &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt; of the &lt;xref:System.Type&gt; processed by the derived handler.","pos":[0,162],"source":"Checks whether the XML can be read as a <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> of the <xref:System.Type> processed by the derived handler."}]},{"pos":[3545,3620],"content":"An XML reader positioned at the start element of the key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader positioned at the start element of the key identifier clause.","pos":[0,75]}]},{"pos":[3679,3887],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the XML can be deserialized to a key identifier clause by the handler; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the XML can be deserialized to a key identifier clause by the handler; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4796,4940],"content":"When overridden in a derived class, returns a value that indicates whether the specified key identifier clause can be serialized by the handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns a value that indicates whether the specified key identifier clause can be serialized by the handler.","pos":[0,144]}]},{"pos":[5241,5276],"content":"The key identifier clause to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause to check.","pos":[0,35]}]},{"pos":[5335,5533],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key identifier clause can be serialized by the handler, otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key identifier clause can be serialized by the handler, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6299,6411],"content":"When overridden in a derived class, deserializes a key identifier clause from by using the specified XML reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, deserializes a key identifier clause from by using the specified XML reader.","pos":[0,112]}]},{"pos":[6647,6730],"content":"An XML reader positioned at the start element of the key identifier clause to read.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader positioned at the start element of the key identifier clause to read.","pos":[0,83]}]},{"pos":[6830,6891],"content":"The key identifier clause that was deserialized from the XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause that was deserialized from the XML.","pos":[0,61]}]},{"pos":[7854,7937],"content":"When overridden in a derived class, serializes the specified key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, serializes the specified key identifier clause.","pos":[0,83]}]},{"pos":[8208,8270],"content":"The XML Writer to use to serialized the key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML Writer to use to serialized the key identifier clause.","pos":[0,62]}]},{"pos":[8396,8435],"content":"The key identifier clause to serialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause to serialize.","pos":[0,39]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  id: SecurityKeyIdentifierClauseSerializer\n  children:\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.#ctor\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  langs:\n  - csharp\n  name: SecurityKeyIdentifierClauseSerializer\n  nameWithType: SecurityKeyIdentifierClauseSerializer\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  type: Class\n  summary: Abstract base class for a serializer that can serialize and deserialize key identifier clauses.\n  remarks: Key identifier clauses are represented by the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class and by classes derived from it.\n  syntax:\n    content: public abstract class SecurityKeyIdentifierClauseSerializer\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  langs:\n  - csharp\n  name: SecurityKeyIdentifierClauseSerializer()\n  nameWithType: SecurityKeyIdentifierClauseSerializer.SecurityKeyIdentifierClauseSerializer()\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.SecurityKeyIdentifierClauseSerializer()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\"></xref> class.\n  syntax:\n    content: protected SecurityKeyIdentifierClauseSerializer ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  id: CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  langs:\n  - csharp\n  name: CanReadKeyIdentifierClause(XmlReader)\n  nameWithType: SecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, returns a value that indicates whether the element where the specified reader is positioned can be read as a key identifier clause by the handler.\n  remarks: Checks whether the XML can be read as a <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> of the <xref:System.Type> processed by the derived handler.\n  syntax:\n    content: public abstract bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at the start element of the key identifier clause.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the XML can be deserialized to a key identifier clause by the handler; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  langs:\n  - csharp\n  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: SecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, returns a value that indicates whether the specified key identifier clause can be serialized by the handler.\n  syntax:\n    content: public abstract bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);\n    parameters:\n    - id: securityKeyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key identifier clause can be serialized by the handler, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  id: ReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  langs:\n  - csharp\n  name: ReadKeyIdentifierClause(XmlReader)\n  nameWithType: SecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, deserializes a key identifier clause from by using the specified XML reader.\n  syntax:\n    content: public abstract System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at the start element of the key identifier clause to read.\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause that was deserialized from the XML.\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  langs:\n  - csharp\n  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  nameWithType: SecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, serializes the specified key identifier clause.\n  syntax:\n    content: public abstract void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: The XML Writer to use to serialized the key identifier clause.\n    - id: securityKeyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause to serialize.\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.#ctor\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: SecurityKeyIdentifierClauseSerializer()\n  nameWithType: SecurityKeyIdentifierClauseSerializer.SecurityKeyIdentifierClauseSerializer()\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.SecurityKeyIdentifierClauseSerializer()\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: CanReadKeyIdentifierClause(XmlReader)\n  nameWithType: SecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(XmlReader)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: SecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: ReadKeyIdentifierClause(XmlReader)\n  nameWithType: SecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(XmlReader)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  nameWithType: SecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.#ctor*\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: SecurityKeyIdentifierClauseSerializer\n  nameWithType: SecurityKeyIdentifierClauseSerializer.SecurityKeyIdentifierClauseSerializer\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: CanReadKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: CanWriteKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: ReadKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer\n  isExternal: false\n  name: WriteKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause\n"}