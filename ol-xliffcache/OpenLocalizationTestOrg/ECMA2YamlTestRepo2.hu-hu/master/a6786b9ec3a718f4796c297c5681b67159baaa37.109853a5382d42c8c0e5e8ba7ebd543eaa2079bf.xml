{"nodes":[{"pos":[1982,2095],"content":"Contains metadata about an individual section within the configuration hierarchy. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains metadata about an individual section within the configuration hierarchy. This class cannot be inherited.","pos":[0,113],"nodes":[{"content":"Contains metadata about an individual section within the configuration hierarchy.","pos":[0,81]},{"content":"This class cannot be inherited.","pos":[82,113]}]}]},{"pos":[2107,2319],"content":"The SectionInformation object contains the metadata about an individual section within the configuration hierarchy. This object can be used in order to validate and change the properties of an individual section.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The SectionInformation object contains the metadata about an individual section within the configuration hierarchy. This object can be used in order to validate and change the properties of an individual section.","pos":[0,212],"nodes":[{"content":"The SectionInformation object contains the metadata about an individual section within the configuration hierarchy.","pos":[0,115]},{"content":"This object can be used in order to validate and change the properties of an individual section.","pos":[116,212]}]}]},{"pos":[4100,4230],"content":"Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be defined.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be defined.","pos":[0,130]}]},{"pos":[4242,4422],"content":"AllowDefinition applies only to configuration files of Web applications. For client applications, you must use <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"AllowDefinition applies only to configuration files of Web applications. For client applications, you must use <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A>.","pos":[0,180],"nodes":[{"content":"AllowDefinition applies only to configuration files of Web applications.","pos":[0,72]},{"content":"For client applications, you must use &lt;xref:System.Configuration.SectionInformation.AllowExeDefinition%2A&gt;.","pos":[73,180],"source":" For client applications, you must use <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A>."}]}]},{"pos":[5448,5614],"content":"A value that indicates where in the configuration file hierarchy the associated <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationSection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object can be declared.","needQuote":true,"needEscape":true,"source":"A value that indicates where in the configuration file hierarchy the associated <xref href=\"System.Configuration.ConfigurationSection\"></xref> object can be declared."},{"pos":[5842,5908],"content":"The selected value conflicts with a value that is already defined.","needQuote":true,"needEscape":true,"nodes":[{"content":"The selected value conflicts with a value that is already defined.","pos":[0,66]}]},{"pos":[6346,6477],"content":"Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be declared.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be declared.","pos":[0,131]}]},{"pos":[6489,6669],"content":"AllowExeDefinition applies only to configuration files of client applications. For Web applications, you must use <xref:System.Configuration.SectionInformation.AllowDefinition%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"AllowExeDefinition applies only to configuration files of client applications. For Web applications, you must use <xref:System.Configuration.SectionInformation.AllowDefinition%2A>.","pos":[0,180],"nodes":[{"content":"AllowExeDefinition applies only to configuration files of client applications.","pos":[0,78]},{"content":"For Web applications, you must use &lt;xref:System.Configuration.SectionInformation.AllowDefinition%2A&gt;.","pos":[79,180],"source":" For Web applications, you must use <xref:System.Configuration.SectionInformation.AllowDefinition%2A>."}]}]},{"pos":[7710,7891],"content":"A value that indicates where in the configuration file hierarchy the associated <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationSection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object can be declared for .exe files.","needQuote":true,"needEscape":true,"source":"A value that indicates where in the configuration file hierarchy the associated <xref href=\"System.Configuration.ConfigurationSection\"></xref> object can be declared for .exe files."},{"pos":[8122,8188],"content":"The selected value conflicts with a value that is already defined.","needQuote":true,"needEscape":true,"nodes":[{"content":"The selected value conflicts with a value that is already defined.","pos":[0,66]}]},{"pos":[8601,8761],"content":"Gets or sets a value that indicates whether the configuration section allows the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_location\" name=\"location\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attribute.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether the configuration section allows the <xref uid=\"langword_csharp_location\" name=\"location\" href=\"\"></xref> attribute."},{"pos":[8773,9020],"content":"When set to `false`, the AllowLocation property indicates that the section is accessed by native-code readers. Therefore, the use of the `location` attribute is not allowed, because the native-code readers do not support the concept of `location`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When set to <ph id=\"ph1\">`false`</ph>, the AllowLocation property indicates that the section is accessed by native-code readers.","pos":[0,110],"source":"When set to `false`, the AllowLocation property indicates that the section is accessed by native-code readers."},{"content":"Therefore, the use of the <ph id=\"ph1\">`location`</ph> attribute is not allowed, because the native-code readers do not support the concept of <ph id=\"ph2\">`location`</ph>.","pos":[111,247],"source":" Therefore, the use of the `location` attribute is not allowed, because the native-code readers do not support the concept of `location`."}]},{"pos":[9956,10266],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref uid=\"langword_csharp_location\" name=\"location\" href=\"\"></xref> attribute is allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_location\" name=\"location\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> attribute is allowed; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,233],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref uid=\"langword_csharp_location\" name=\"location\" href=\"\"></xref> attribute is allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[234,310],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[10492,10558],"content":"The selected value conflicts with a value that is already defined.","needQuote":true,"needEscape":true,"nodes":[{"content":"The selected value conflicts with a value that is already defined.","pos":[0,66]}]},{"pos":[10971,11105],"content":"Gets or sets a value that indicates whether the associated configuration section can be overridden by lower-level configuration files.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the associated configuration section can be overridden by lower-level configuration files.","pos":[0,134]}]},{"pos":[12059,12307],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the section can be overridden; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the section can be overridden; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,169],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the section can be overridden; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[170,248],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[12799,12921],"content":"Gets or sets the name of the include file in which the associated configuration section is defined, if such a file exists.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the include file in which the associated configuration section is defined, if such a file exists.","pos":[0,122]}]},{"pos":[12934,14709],"content":"The ConfigSource property represents the value of the `configSource` attribute that is specified for a <xref:System.Configuration.ConfigurationSection> object that is associated with the <xref:System.Configuration.SectionInformation> object.       A <xref:System.Configuration.ConfigurationSection> implementation can optionally specify a separate file in which the configuration settings for that section are defined. This can be useful in multiple ways:      -   Using include files can result in a more logical and modular structure for configuration files.      -   File-access security and permissions can be used to restrict access to sections of configuration settings.      -   Settings in an include file that are not used during application initialization can be modified and reloaded without requiring an application restart.       The following example shows how this attribute is used in a configuration file to specify that the `pages` section is defined in an external include file:       `<pages configSource=\"pages.config\"/>`       If any of the settings in a configuration include file require the application to restart when they are modified, set the <xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A> property to `true`.       In ASP.NET applications, at run time you can assign to the ConfigSource property the name of an alternative configuration file. In that case, the contents of the file are overwritten by the default connection string information that is contained in the Web.config file. This occurs also when the alternative file does not exist and it is created at run time. If the Web.config file does not contain any connection string information, an empty  section is added to the alternative file.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ConfigSource property represents the value of the <ph id=\"ph1\">`configSource`</ph> attribute that is specified for a &lt;xref:System.Configuration.ConfigurationSection&gt; object that is associated with the &lt;xref:System.Configuration.SectionInformation&gt; object.","pos":[0,241],"source":"The ConfigSource property represents the value of the `configSource` attribute that is specified for a <xref:System.Configuration.ConfigurationSection> object that is associated with the <xref:System.Configuration.SectionInformation> object."},{"content":"A &lt;xref:System.Configuration.ConfigurationSection&gt; implementation can optionally specify a separate file in which the configuration settings for that section are defined.","pos":[248,418],"source":"       A <xref:System.Configuration.ConfigurationSection> implementation can optionally specify a separate file in which the configuration settings for that section are defined."},{"content":"This can be useful in multiple ways:      -   Using include files can result in a more logical and modular structure for configuration files.","pos":[419,560]},{"content":"-   File-access security and permissions can be used to restrict access to sections of configuration settings.","pos":[566,676]},{"content":"-   Settings in an include file that are not used during application initialization can be modified and reloaded without requiring an application restart.","pos":[682,836]},{"content":"The following example shows how this attribute is used in a configuration file to specify that the <ph id=\"ph1\">`pages`</ph> section is defined in an external include file:       <ph id=\"ph2\">`&lt;pages configSource=\"pages.config\"/&gt;`</ph>       If any of the settings in a configuration include file require the application to restart when they are modified, set the &lt;xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A&gt; property to <ph id=\"ph3\">`true`</ph>.","pos":[843,1265],"source":"       The following example shows how this attribute is used in a configuration file to specify that the `pages` section is defined in an external include file:       `<pages configSource=\"pages.config\"/>`       If any of the settings in a configuration include file require the application to restart when they are modified, set the <xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A> property to `true`."},{"content":"In ASP.NET applications, at run time you can assign to the ConfigSource property the name of an alternative configuration file.","pos":[1272,1399]},{"content":"In that case, the contents of the file are overwritten by the default connection string information that is contained in the Web.config file.","pos":[1400,1541]},{"content":"This occurs also when the alternative file does not exist and it is created at run time.","pos":[1542,1630]},{"content":"If the Web.config file does not contain any connection string information, an empty  section is added to the alternative file.","pos":[1631,1757]}]},{"pos":[14832,15015],"content":"The name of the include file in which the associated <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationSection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is defined, if such a file exists; otherwise, an empty string (\"\").","needQuote":true,"needEscape":true,"source":"The name of the include file in which the associated <xref href=\"System.Configuration.ConfigurationSection\"></xref> is defined, if such a file exists; otherwise, an empty string (\"\")."},{"pos":[15530,15610],"content":"Forces the associated configuration section to appear in the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Forces the associated configuration section to appear in the configuration file.","pos":[0,80]}]},{"pos":[15623,16233],"content":"The ForceDeclaration method forces this <xref:System.Configuration.SectionInformation> declaration to be written to the configuration file.      > [!NOTE] >  The ForceDeclaration method can force a <xref:System.Configuration.SectionInformation> declaration to be written to a configuration file, even if the section is not required because it is already declared in a parent file. Using the ForceDeclaration method can make a configuration file more portable from one computer to another. It enables you to make sure that the section exists even when you do not have control over parent configuration files.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ForceDeclaration method forces this &lt;xref:System.Configuration.SectionInformation&gt; declaration to be written to the configuration file.","pos":[0,139],"source":"The ForceDeclaration method forces this <xref:System.Configuration.SectionInformation> declaration to be written to the configuration file."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The ForceDeclaration method can force a &lt;xref:System.Configuration.SectionInformation&gt; declaration to be written to a configuration file, even if the section is not required because it is already declared in a parent file.","pos":[145,380],"source":"      > [!NOTE] >  The ForceDeclaration method can force a <xref:System.Configuration.SectionInformation> declaration to be written to a configuration file, even if the section is not required because it is already declared in a parent file."},{"content":"Using the ForceDeclaration method can make a configuration file more portable from one computer to another.","pos":[381,488]},{"content":"It enables you to make sure that the section exists even when you do not have control over parent configuration files.","pos":[489,607]}]},{"pos":[16881,17021],"content":"Forces the associated configuration section to appear in the configuration file, or removes an existing section from the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Forces the associated configuration section to appear in the configuration file, or removes an existing section from the configuration file.","pos":[0,140]}]},{"pos":[17034,17860],"content":"The ForceDeclaration method forces this <xref:System.Configuration.SectionInformation> declaration to be written to the configuration file if `force` is `true`. If `force` is `false`, this action might be ignored if the <xref:System.Configuration.SectionInformation> declaration is required by the system.      > [!NOTE] >  The ForceDeclaration method can force a <xref:System.Configuration.SectionInformation> declaration to be written to a configuration file, even if this section is not required because it is already declared in a parent file. Using the <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> method can make a configuration file more portable from one computer to another. This also lets you make sure that the section exists even if you do not have control over parent configuration files.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ForceDeclaration method forces this &lt;xref:System.Configuration.SectionInformation&gt; declaration to be written to the configuration file if <ph id=\"ph1\">`force`</ph> is <ph id=\"ph2\">`true`</ph>.","pos":[0,160],"source":"The ForceDeclaration method forces this <xref:System.Configuration.SectionInformation> declaration to be written to the configuration file if `force` is `true`."},{"content":"If <ph id=\"ph1\">`force`</ph> is <ph id=\"ph2\">`false`</ph>, this action might be ignored if the &lt;xref:System.Configuration.SectionInformation&gt; declaration is required by the system.","pos":[161,305],"source":" If `force` is `false`, this action might be ignored if the <xref:System.Configuration.SectionInformation> declaration is required by the system."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The ForceDeclaration method can force a &lt;xref:System.Configuration.SectionInformation&gt; declaration to be written to a configuration file, even if this section is not required because it is already declared in a parent file.","pos":[311,547],"source":"      > [!NOTE] >  The ForceDeclaration method can force a <xref:System.Configuration.SectionInformation> declaration to be written to a configuration file, even if this section is not required because it is already declared in a parent file."},{"content":"Using the &lt;xref:System.Configuration.SectionInformation.ForceDeclaration%2A&gt; method can make a configuration file more portable from one computer to another.","pos":[548,705],"source":" Using the <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> method can make a configuration file more portable from one computer to another."},{"content":"This also lets you make sure that the section exists even if you do not have control over parent configuration files.","pos":[706,823]}]},{"pos":[18338,18544],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the associated section should be written in the configuration file; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the associated section should be written in the configuration file; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18773,18955],"content":"<ph id=\"ph1\">&lt;code&gt;force&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and the associated section cannot be exported to the child configuration file, or it is undeclared.","needQuote":true,"needEscape":true,"source":"<code>force</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and the associated section cannot be exported to the child configuration file, or it is undeclared."},{"pos":[19348,19476],"content":"Gets or sets a value that indicates whether the associated configuration section will be saved even if it has not been modified.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the associated configuration section will be saved even if it has not been modified.","pos":[0,128]}]},{"pos":[19993,20523],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the associated <xref href=\"System.Configuration.ConfigurationSection\"></xref> object will be saved even if it has not been modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.       <div class=\"alert NOTE\">    If the configuration file is saved (even if there are no modifications), ASP.NET restarts the application.      </div>","needQuote":false,"needEscape":true,"nodes":[{"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the associated <xref href=\"System.Configuration.ConfigurationSection\"></xref> object will be saved even if it has not been modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.       ","pos":[0,357],"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the associated <bpt id=\"p2\">&lt;xref href=\"System.Configuration.ConfigurationSection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object will be saved even if it has not been modified; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,271],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the associated <xref href=\"System.Configuration.ConfigurationSection\"></xref> object will be saved even if it has not been modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[272,350],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"content":"    If the configuration file is saved (even if there are no modifications), ASP.NET restarts the application.      ","pos":[381,497],"nodes":[{"content":"If the configuration file is saved (even if there are no modifications), ASP.NET restarts the application.","pos":[4,110]}]}]},{"pos":[21036,21135],"content":"Gets the configuration section that contains the configuration section associated with this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the configuration section that contains the configuration section associated with this object.","pos":[0,99]}]},{"pos":[21147,21357],"content":"If this <xref:System.Configuration.ConfigurationSection> object has no parent sections, the GetParentSection method returns the same value as the <xref:System.Configuration.SectionInformation.Name%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If this &lt;xref:System.Configuration.ConfigurationSection&gt; object has no parent sections, the GetParentSection method returns the same value as the &lt;xref:System.Configuration.SectionInformation.Name%2A&gt; property.","pos":[0,210],"source":"If this <xref:System.Configuration.ConfigurationSection> object has no parent sections, the GetParentSection method returns the same value as the <xref:System.Configuration.SectionInformation.Name%2A> property."}]},{"pos":[21885,22089],"content":"The configuration section that contains the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationSection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is associated with this <bpt id=\"p2\">&lt;xref href=\"System.Configuration.SectionInformation\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The configuration section that contains the <xref href=\"System.Configuration.ConfigurationSection\"></xref> that is associated with this <xref href=\"System.Configuration.SectionInformation\"></xref> object."},{"pos":[22284,22328],"content":"The method is invoked from a parent section.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method is invoked from a parent section.","pos":[0,44]}]},{"pos":[22725,22812],"content":"Returns an XML node object that represents the associated configuration-section object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an XML node object that represents the associated configuration-section object.","pos":[0,87]}]},{"pos":[23277,23331],"content":"The XML representation for this configuration section.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML representation for this configuration section.","pos":[0,54]}]},{"pos":[23519,23576],"content":"This configuration object is locked and cannot be edited.","needQuote":true,"needEscape":true,"nodes":[{"content":"This configuration object is locked and cannot be edited.","pos":[0,57]}]},{"pos":[24054,24258],"content":"Gets or sets a value that indicates whether the settings that are specified in the associated configuration section are inherited by applications that reside in a subdirectory of the relevant application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the settings that are specified in the associated configuration section are inherited by applications that reside in a subdirectory of the relevant application.","pos":[0,204]}]},{"pos":[24271,25028],"content":"The InheritInChildApplications property represents the `inheritInChildApplications`attribute of a `location` element in a configuration file.       Set InheritInChildApplications to `false` to prevent settings that are specific to a certain location (such as the root directory of a Web site) from being inherited by applications that exist in subdirectories.       The following example shows how to use this attribute in a configuration file to specify that the settings defined in the location element for the root of a Web site should not be inherited by child applications:       `<location path=\".\" inheritInChildApplications=\"false\">`       The InheritInChildApplications property applies only to location-specific configuration settings.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The InheritInChildApplications property represents the <ph id=\"ph1\">`inheritInChildApplications`</ph>attribute of a <ph id=\"ph2\">`location`</ph> element in a configuration file.","pos":[0,141],"source":"The InheritInChildApplications property represents the `inheritInChildApplications`attribute of a `location` element in a configuration file."},{"content":"Set InheritInChildApplications to <ph id=\"ph1\">`false`</ph> to prevent settings that are specific to a certain location (such as the root directory of a Web site) from being inherited by applications that exist in subdirectories.","pos":[148,359],"source":"       Set InheritInChildApplications to `false` to prevent settings that are specific to a certain location (such as the root directory of a Web site) from being inherited by applications that exist in subdirectories."},{"content":"The following example shows how to use this attribute in a configuration file to specify that the settings defined in the location element for the root of a Web site should not be inherited by child applications:       <ph id=\"ph1\">`&lt;location path=\".\" inheritInChildApplications=\"false\"&gt;`</ph>       The InheritInChildApplications property applies only to location-specific configuration settings.","pos":[366,745],"source":"       The following example shows how to use this attribute in a configuration file to specify that the settings defined in the location element for the root of a Web site should not be inherited by child applications:       `<location path=\".\" inheritInChildApplications=\"false\">`       The InheritInChildApplications property applies only to location-specific configuration settings."}]},{"pos":[25568,25921],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the settings specified in this <xref href=\"System.Configuration.ConfigurationSection\"></xref> object are inherited by child applications; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the settings specified in this <bpt id=\"p2\">&lt;xref href=\"System.Configuration.ConfigurationSection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object are inherited by child applications; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,276],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the settings specified in this <xref href=\"System.Configuration.ConfigurationSection\"></xref> object are inherited by child applications; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[277,353],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[26471,26576],"content":"Gets a value that indicates whether the configuration section must be declared in the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the configuration section must be declared in the configuration file.","pos":[0,105]}]},{"pos":[27549,27816],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the associated <bpt id=\"p2\">&lt;xref href=\"System.Configuration.ConfigurationSection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object must be declared in the configuration file; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the associated <xref href=\"System.Configuration.ConfigurationSection\"></xref> object must be declared in the configuration file; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28306,28417],"content":"Gets a value that indicates whether the associated configuration section is declared in the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the associated configuration section is declared in the configuration file.","pos":[0,111]}]},{"pos":[29357,29679],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Configuration.ConfigurationSection\"></xref> is declared in the configuration file; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this <bpt id=\"p2\">&lt;xref href=\"System.Configuration.ConfigurationSection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is declared in the configuration file; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,245],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Configuration.ConfigurationSection\"></xref> is declared in the configuration file; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[246,322],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[30148,30231],"content":"Gets a value that indicates whether the associated configuration section is locked.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the associated configuration section is locked.","pos":[0,83]}]},{"pos":[30243,30561],"content":"The IsLocked property returns `true` when the related section is locked by the <xref:System.Configuration.SectionInformation.AllowOverride%2A> or the <xref:System.Configuration.SectionInformation.AllowDefinition%2A> property. A section is locked if it cannot be overridden or defined in the current configuration file.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IsLocked property returns <ph id=\"ph1\">`true`</ph> when the related section is locked by the &lt;xref:System.Configuration.SectionInformation.AllowOverride%2A&gt; or the &lt;xref:System.Configuration.SectionInformation.AllowDefinition%2A&gt; property.","pos":[0,225],"source":"The IsLocked property returns `true` when the related section is locked by the <xref:System.Configuration.SectionInformation.AllowOverride%2A> or the <xref:System.Configuration.SectionInformation.AllowDefinition%2A> property."},{"content":"A section is locked if it cannot be overridden or defined in the current configuration file.","pos":[226,318]}]},{"pos":[31481,31642],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the section is locked; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the section is locked; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[32124,32210],"content":"Gets a value that indicates whether the associated configuration section is protected.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the associated configuration section is protected.","pos":[0,86]}]},{"pos":[32223,32466],"content":"Protected configuration sections are encrypted and read-only.       For more information about protected configuration sections, see [Encrypting Configuration Information Using Protected Configuration](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Protected configuration sections are encrypted and read-only.","pos":[0,61]},{"content":"For more information about protected configuration sections, see <bpt id=\"p1\">[</bpt>Encrypting Configuration Information Using Protected Configuration<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[68,241],"source":"       For more information about protected configuration sections, see [Encrypting Configuration Information Using Protected Configuration](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[33400,33699],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Configuration.ConfigurationSection\"></xref> is protected; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this <bpt id=\"p2\">&lt;xref href=\"System.Configuration.ConfigurationSection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is protected; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,220],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Configuration.ConfigurationSection\"></xref> is protected; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[221,299],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[34149,34203],"content":"Gets the name of the associated configuration section.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the associated configuration section.","pos":[0,54]}]},{"pos":[34215,34268],"content":"The Name is the name of the section without the path.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Name is the name of the section without the path.","pos":[0,53]}]},{"pos":[34757,34804],"content":"The complete name of the configuration section.","needQuote":true,"needEscape":true,"nodes":[{"content":"The complete name of the configuration section.","pos":[0,47]}]},{"pos":[35287,35484],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.OverrideMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value that specifies whether the associated configuration section can be overridden by child configuration files.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Configuration.OverrideMode\"></xref> enumeration value that specifies whether the associated configuration section can be overridden by child configuration files."},{"pos":[35497,36464],"content":"The <xref:System.Configuration.SectionInformation.AllowOverride%2A> property gets or sets a value that indicates whether resources declared inside a `location` element can be overridden by child configuration files. The OverrideMode property gets or sets a value that specifies similar behavior, but does so for a specific configuration element or group, and uses one of the <xref:System.Configuration.OverrideMode> enumeration values. The OverrideMode property enables behavior to be inherited from a parent element.       You cannot programmatically set both the <xref:System.Configuration.SectionInformation.AllowOverride%2A> and OverrideMode property. Setting the <xref:System.Configuration.SectionInformation.AllowOverride%2A> property to `true` sets the OverrideMode property to <xref:System.Configuration.OverrideMode>. Setting the <xref:System.Configuration.SectionInformation.AllowOverride%2A> property to `false` sets the OverrideMode property to `false`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Configuration.SectionInformation.AllowOverride%2A&gt; property gets or sets a value that indicates whether resources declared inside a <ph id=\"ph1\">`location`</ph> element can be overridden by child configuration files.","pos":[0,215],"source":"The <xref:System.Configuration.SectionInformation.AllowOverride%2A> property gets or sets a value that indicates whether resources declared inside a `location` element can be overridden by child configuration files."},{"content":"The OverrideMode property gets or sets a value that specifies similar behavior, but does so for a specific configuration element or group, and uses one of the &lt;xref:System.Configuration.OverrideMode&gt; enumeration values.","pos":[216,435],"source":" The OverrideMode property gets or sets a value that specifies similar behavior, but does so for a specific configuration element or group, and uses one of the <xref:System.Configuration.OverrideMode> enumeration values."},{"content":"The OverrideMode property enables behavior to be inherited from a parent element.","pos":[436,517]},{"content":"You cannot programmatically set both the &lt;xref:System.Configuration.SectionInformation.AllowOverride%2A&gt; and OverrideMode property.","pos":[524,655],"source":"       You cannot programmatically set both the <xref:System.Configuration.SectionInformation.AllowOverride%2A> and OverrideMode property."},{"content":"Setting the &lt;xref:System.Configuration.SectionInformation.AllowOverride%2A&gt; property to <ph id=\"ph1\">`true`</ph> sets the OverrideMode property to &lt;xref:System.Configuration.OverrideMode&gt;.","pos":[656,826],"source":" Setting the <xref:System.Configuration.SectionInformation.AllowOverride%2A> property to `true` sets the OverrideMode property to <xref:System.Configuration.OverrideMode>."},{"content":"Setting the &lt;xref:System.Configuration.SectionInformation.AllowOverride%2A&gt; property to <ph id=\"ph1\">`false`</ph> sets the OverrideMode property to <ph id=\"ph2\">`false`</ph>.","pos":[827,965],"source":" Setting the <xref:System.Configuration.SectionInformation.AllowOverride%2A> property to `false` sets the OverrideMode property to `false`."}]},{"pos":[36634,36719],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.OverrideMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Configuration.OverrideMode\"></xref> enumeration values."},{"pos":[36944,37123],"content":"An attempt was made to change both the <xref:System.Configuration.SectionInformation.AllowOverride*> and OverrideMode properties, which is not supported for compatibility reasons.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to change both the &lt;xref:System.Configuration.SectionInformation.AllowOverride*&gt; and OverrideMode properties, which is not supported for compatibility reasons.","pos":[0,179],"source":"An attempt was made to change both the <xref:System.Configuration.SectionInformation.AllowOverride*> and OverrideMode properties, which is not supported for compatibility reasons."}]},{"pos":[37566,37688],"content":"Gets or sets a value that specifies the default override behavior of a configuration section by child configuration files.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies the default override behavior of a configuration section by child configuration files.","pos":[0,122]}]},{"pos":[37700,38099],"content":"The OverrideModeDefault property of a configuration section can only be set to the <xref:System.Configuration.OverrideMode> or <xref:System.Configuration.OverrideMode> value of the <xref:System.Configuration.OverrideMode> enumeration. Setting the OverrideModeDefault property to <xref:System.Configuration.OverrideMode> is equivalent to setting the value to <xref:System.Configuration.OverrideMode>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The OverrideModeDefault property of a configuration section can only be set to the <xref:System.Configuration.OverrideMode> or <xref:System.Configuration.OverrideMode> value of the <xref:System.Configuration.OverrideMode> enumeration. Setting the OverrideModeDefault property to <xref:System.Configuration.OverrideMode> is equivalent to setting the value to <xref:System.Configuration.OverrideMode>.","pos":[0,399],"nodes":[{"content":"The OverrideModeDefault property of a configuration section can only be set to the &lt;xref:System.Configuration.OverrideMode&gt; or &lt;xref:System.Configuration.OverrideMode&gt; value of the &lt;xref:System.Configuration.OverrideMode&gt; enumeration.","pos":[0,234],"source":"The OverrideModeDefault property of a configuration section can only be set to the <xref:System.Configuration.OverrideMode> or <xref:System.Configuration.OverrideMode> value of the <xref:System.Configuration.OverrideMode> enumeration."},{"content":"Setting the OverrideModeDefault property to &lt;xref:System.Configuration.OverrideMode&gt; is equivalent to setting the value to &lt;xref:System.Configuration.OverrideMode&gt;.","pos":[235,399],"source":" Setting the OverrideModeDefault property to <xref:System.Configuration.OverrideMode> is equivalent to setting the value to <xref:System.Configuration.OverrideMode>."}]}]},{"pos":[38275,38360],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.OverrideMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Configuration.OverrideMode\"></xref> enumeration values."},{"pos":[38592,38661],"content":"The override behavior is specified in a parent configuration section.","needQuote":true,"needEscape":true,"nodes":[{"content":"The override behavior is specified in a parent configuration section.","pos":[0,69]}]},{"pos":[39114,39262],"content":"Gets the override behavior of a configuration section that is in turn based on whether child configuration files can lock the configuration section.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the override behavior of a configuration section that is in turn based on whether child configuration files can lock the configuration section.","pos":[0,148]}]},{"pos":[39274,39388],"content":"This property returns either <xref:System.Configuration.OverrideMode> or <xref:System.Configuration.OverrideMode>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property returns either &lt;xref:System.Configuration.OverrideMode&gt; or &lt;xref:System.Configuration.OverrideMode&gt;.","pos":[0,114],"source":"This property returns either <xref:System.Configuration.OverrideMode> or <xref:System.Configuration.OverrideMode>."}]},{"pos":[39561,39646],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.OverrideMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Configuration.OverrideMode\"></xref> enumeration values."},{"pos":[40176,40259],"content":"Gets the protected configuration provider for the associated configuration section.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the protected configuration provider for the associated configuration section.","pos":[0,83]}]},{"pos":[40272,40522],"content":"For unprotected sections, the ProtectionProvider property is `null`.       For more information about protected configuration sections, see [Encrypting Configuration Information Using Protected Configuration](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"For unprotected sections, the ProtectionProvider property is <ph id=\"ph1\">`null`</ph>.","pos":[0,68],"source":"For unprotected sections, the ProtectionProvider property is `null`."},{"content":"For more information about protected configuration sections, see <bpt id=\"p1\">[</bpt>Encrypting Configuration Information Using Protected Configuration<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[75,248],"source":"       For more information about protected configuration sections, see [Encrypting Configuration Information Using Protected Configuration](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[41171,41287],"content":"The protected configuration provider for this <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationSection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The protected configuration provider for this <xref href=\"System.Configuration.ConfigurationSection\"></xref> object."},{"pos":[41846,41891],"content":"Marks a configuration section for protection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Marks a configuration section for protection.","pos":[0,45]}]},{"pos":[41904,42614],"content":"The ProtectSection method marks the section for encryption so it will be written in encrypted form on disk.       The following protection providers are included by default:       <xref:System.Configuration.DpapiProtectedConfigurationProvider>       <xref:System.Configuration.RsaProtectedConfigurationProvider>      > [!NOTE] >  If you call the ProtectSection method with a `null` parameter or an empty string, the <xref:System.Configuration.RsaProtectedConfigurationProvider> class is used as the protection provider.       For more information about protected configuration sections, see [Encrypting Configuration Information Using Protected Configuration](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ProtectSection method marks the section for encryption so it will be written in encrypted form on disk.","pos":[0,107]},{"content":"The following protection providers are included by default:       &lt;xref:System.Configuration.DpapiProtectedConfigurationProvider&gt;       &lt;xref:System.Configuration.RsaProtectedConfigurationProvider&gt;      &gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If you call the ProtectSection method with a <ph id=\"ph2\">`null`</ph> parameter or an empty string, the &lt;xref:System.Configuration.RsaProtectedConfigurationProvider&gt; class is used as the protection provider.","pos":[114,519],"source":"       The following protection providers are included by default:       <xref:System.Configuration.DpapiProtectedConfigurationProvider>       <xref:System.Configuration.RsaProtectedConfigurationProvider>      > [!NOTE] >  If you call the ProtectSection method with a `null` parameter or an empty string, the <xref:System.Configuration.RsaProtectedConfigurationProvider> class is used as the protection provider."},{"content":"For more information about protected configuration sections, see <bpt id=\"p1\">[</bpt>Encrypting Configuration Information Using Protected Configuration<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[526,699],"source":"       For more information about protected configuration sections, see [Encrypting Configuration Information Using Protected Configuration](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[43113,43156],"content":"The name of the protection provider to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the protection provider to use.","pos":[0,43]}]},{"pos":[44019,44120],"content":"Gets a value that indicates whether the associated configuration section requires access permissions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the associated configuration section requires access permissions.","pos":[0,101]}]},{"pos":[44133,44989],"content":"When RequirePermission is set to `true`, the `GetSection` methods are restricted by the trust level setting of the application. This means that methods or properties that allow access to configuration section handlers are restricted by the trust level set for the Web application.      > [!NOTE] >  Because high and full trust are the only levels that allow access to files outside the current application domain, an application can use configuration section handlers only at these trust levels.       When RequirePermission is set to `false`, the access to the configuration data is not restricted by the application's trust level settings.      > [!NOTE] >  The appropriate file ACL (Access Control List) permissions are still required, regardless of the RequirePermission setting. ACL permissions determine who can access the configuration file.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When RequirePermission is set to <ph id=\"ph1\">`true`</ph>, the <ph id=\"ph2\">`GetSection`</ph> methods are restricted by the trust level setting of the application.","pos":[0,127],"source":"When RequirePermission is set to `true`, the `GetSection` methods are restricted by the trust level setting of the application."},{"content":"This means that methods or properties that allow access to configuration section handlers are restricted by the trust level set for the Web application.","pos":[128,280]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Because high and full trust are the only levels that allow access to files outside the current application domain, an application can use configuration section handlers only at these trust levels.","pos":[286,495],"source":"      > [!NOTE] >  Because high and full trust are the only levels that allow access to files outside the current application domain, an application can use configuration section handlers only at these trust levels."},{"content":"When RequirePermission is set to <ph id=\"ph1\">`false`</ph>, the access to the configuration data is not restricted by the application's trust level settings.","pos":[502,641],"source":"       When RequirePermission is set to `false`, the access to the configuration data is not restricted by the application's trust level settings."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The appropriate file ACL (Access Control List) permissions are still required, regardless of the RequirePermission setting.","pos":[647,783],"source":"      > [!NOTE] >  The appropriate file ACL (Access Control List) permissions are still required, regardless of the RequirePermission setting."},{"content":"ACL permissions determine who can access the configuration file.","pos":[784,848]}]},{"pos":[46206,46594],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref uid=\"langword_csharp_requirePermission\" name=\"requirePermission\" href=\"\"></xref> attribute is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_requirePermission\" name=\"requirePermission\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> attribute is set to <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[0,311],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref uid=\"langword_csharp_requirePermission\" name=\"requirePermission\" href=\"\"></xref> attribute is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[312,388],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[46824,46890],"content":"The selected value conflicts with a value that is already defined.","needQuote":true,"needEscape":true,"nodes":[{"content":"The selected value conflicts with a value that is already defined.","pos":[0,66]}]},{"pos":[47358,47485],"content":"Gets or sets a value that specifies whether a change in an external configuration include file requires an application restart.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies whether a change in an external configuration include file requires an application restart.","pos":[0,127]}]},{"pos":[47497,47719],"content":"Set the RestartOnExternalChanges property to <ph id=\"ph1\">`false`</ph> to prevent an application restart when configuration settings in the external include file are modified for this &lt;xref:System.Configuration.ConfigurationSection&gt; object.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Set the RestartOnExternalChanges property to `false` to prevent an application restart when configuration settings in the external include file are modified for this <xref:System.Configuration.ConfigurationSection> object."},{"pos":[48261,48560],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a change in an external configuration include file requires an application restart; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a change in an external configuration include file requires an application restart; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,222],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a change in an external configuration include file requires an application restart; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[223,299],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[48797,48863],"content":"The selected value conflicts with a value that is already defined.","needQuote":true,"needEscape":true,"nodes":[{"content":"The selected value conflicts with a value that is already defined.","pos":[0,66]}]},{"pos":[49285,49379],"content":"Causes the associated configuration section to inherit all its values from the parent section.","needQuote":true,"needEscape":true,"nodes":[{"content":"Causes the associated configuration section to inherit all its values from the parent section.","pos":[0,94]}]},{"pos":[49645,49695],"content":"This method cannot be called outside editing mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method cannot be called outside editing mode.","pos":[0,50]}]},{"pos":[50098,50152],"content":"Gets the name of the associated configuration section.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the associated configuration section.","pos":[0,54]}]},{"pos":[50164,50280],"content":"The SectionName property value is the complete section name, which includes the configuration inheritance hierarchy.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The SectionName property value is the complete section name, which includes the configuration inheritance hierarchy.","pos":[0,116]}]},{"pos":[50785,50882],"content":"The name of the associated <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationSection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The name of the associated <xref href=\"System.Configuration.ConfigurationSection\"></xref> object."},{"pos":[51409,51520],"content":"Sets the object to an XML representation of the associated configuration section within the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the object to an XML representation of the associated configuration section within the configuration file.","pos":[0,111]}]},{"pos":[51661,51676],"content":"The XML to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML to use.","pos":[0,15]}]},{"pos":[51848,51932],"content":"<ph id=\"ph1\">&lt;code&gt;rawXml&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>rawXml</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[52300,52336],"content":"Gets or sets the section class name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the section class name.","pos":[0,36]}]},{"pos":[52348,52493],"content":"The Type property returns the name of the section class that handles this instance of the <xref:System.Configuration.ConfigurationSection> class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Type property returns the name of the section class that handles this instance of the &lt;xref:System.Configuration.ConfigurationSection&gt; class.","pos":[0,145],"source":"The Type property returns the name of the section class that handles this instance of the <xref:System.Configuration.ConfigurationSection> class."}]},{"pos":[52987,53109],"content":"The name of the class that is associated with this <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationSection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> section.","needQuote":true,"needEscape":true,"source":"The name of the class that is associated with this <xref href=\"System.Configuration.ConfigurationSection\"></xref> section."},{"pos":[53276,53383],"content":"The selected value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string (\"\").","needQuote":true,"needEscape":true,"source":"The selected value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\")."},{"pos":[53528,53594],"content":"The selected value conflicts with a value that is already defined.","needQuote":true,"needEscape":true,"nodes":[{"content":"The selected value conflicts with a value that is already defined.","pos":[0,66]}]},{"pos":[54026,54115],"content":"Removes the protected configuration encryption from the associated configuration section.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the protected configuration encryption from the associated configuration section.","pos":[0,89]}]},{"pos":[54127,54300],"content":"For more information about protected configuration sections, see <bpt id=\"p1\">[</bpt>Encrypting Configuration Information Using Protected Configuration<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"For more information about protected configuration sections, see [Encrypting Configuration Information Using Protected Configuration](~/add/includes/ajax-current-ext-md.md)."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.SectionInformation\n  id: SectionInformation\n  children:\n  - System.Configuration.SectionInformation.AllowDefinition\n  - System.Configuration.SectionInformation.AllowExeDefinition\n  - System.Configuration.SectionInformation.AllowLocation\n  - System.Configuration.SectionInformation.AllowOverride\n  - System.Configuration.SectionInformation.ConfigSource\n  - System.Configuration.SectionInformation.ForceDeclaration\n  - System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)\n  - System.Configuration.SectionInformation.ForceSave\n  - System.Configuration.SectionInformation.GetParentSection\n  - System.Configuration.SectionInformation.GetRawXml\n  - System.Configuration.SectionInformation.InheritInChildApplications\n  - System.Configuration.SectionInformation.IsDeclarationRequired\n  - System.Configuration.SectionInformation.IsDeclared\n  - System.Configuration.SectionInformation.IsLocked\n  - System.Configuration.SectionInformation.IsProtected\n  - System.Configuration.SectionInformation.Name\n  - System.Configuration.SectionInformation.OverrideMode\n  - System.Configuration.SectionInformation.OverrideModeDefault\n  - System.Configuration.SectionInformation.OverrideModeEffective\n  - System.Configuration.SectionInformation.ProtectionProvider\n  - System.Configuration.SectionInformation.ProtectSection(System.String)\n  - System.Configuration.SectionInformation.RequirePermission\n  - System.Configuration.SectionInformation.RestartOnExternalChanges\n  - System.Configuration.SectionInformation.RevertToParent\n  - System.Configuration.SectionInformation.SectionName\n  - System.Configuration.SectionInformation.SetRawXml(System.String)\n  - System.Configuration.SectionInformation.Type\n  - System.Configuration.SectionInformation.UnprotectSection\n  langs:\n  - csharp\n  name: SectionInformation\n  nameWithType: SectionInformation\n  fullName: System.Configuration.SectionInformation\n  type: Class\n  summary: Contains metadata about an individual section within the configuration hierarchy. This class cannot be inherited.\n  remarks: The SectionInformation object contains the metadata about an individual section within the configuration hierarchy. This object can be used in order to validate and change the properties of an individual section.\n  example:\n  - \"The following example shows how to get the SectionInformation metadata that is associated with a <xref:System.Configuration.ConfigurationSection> object.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#91](~/add/codesnippet/visualbasic/t-system.configuration.s_2_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#91](~/add/codesnippet/csharp/t-system.configuration.s_2_1.cs)]  \\n  \\n The following example is an excerpt of the configuration file that is used by the previous example.  \\n  \\n```  \\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>  \\n<configuration>  \\n  <configSections>  \\n    <section name=\\\"MyUrls\\\" type=\\\"Samples.AspNet.UrlsSection,  \\n      ConfigurationElement, Version=1.0.0.0, Culture=neutral,  \\n      PublicKeyToken=null\\\" allowDefinition=\\\"Everywhere\\\"  \\n      allowExeDefinition=\\\"MachineToApplication\\\"  \\n      restartOnExternalChanges=\\\"true\\\" />  \\n  </configSections>  \\n  <MyUrls name=\\\"MyFavorites\\\">  \\n    <simple name=\\\"Contoso\\\" url=\\\"http://www.contoso.com\\\" port=\\\"8080\\\" />  \\n    <urls>  \\n      <clear />  \\n      <add name=\\\"Microsoft\\\" url=\\\"http://www.microsoft.com\\\" port=\\\"0\\\" />  \\n    </urls>  \\n  </MyUrls>  \\n</configuration>  \\n```\"\n  syntax:\n    content: public sealed class SectionInformation\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.AllowDefinition\n  id: AllowDefinition\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: AllowDefinition\n  nameWithType: SectionInformation.AllowDefinition\n  fullName: System.Configuration.SectionInformation.AllowDefinition\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be defined.\n  remarks: AllowDefinition applies only to configuration files of Web applications. For client applications, you must use <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A>.\n  example:\n  - \"The examples in this section show how to get the AllowDefinition property value after accessing the related section information in the configuration file.  \\n  \\n The following example gets the <xref:System.Configuration.SectionInformation> object.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_17_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_17_1.cs)]  \\n  \\n The following example gets the AllowDefinition value.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#96](~/add/codesnippet/visualbasic/p-system.configuration.s_17_2.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#96](~/add/codesnippet/csharp/p-system.configuration.s_17_2.cs)]\"\n  syntax:\n    content: public System.Configuration.ConfigurationAllowDefinition AllowDefinition { get; set; }\n    return:\n      type: System.Configuration.ConfigurationAllowDefinition\n      description: A value that indicates where in the configuration file hierarchy the associated <xref href=\"System.Configuration.ConfigurationSection\"></xref> object can be declared.\n  overload: System.Configuration.SectionInformation.AllowDefinition*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: The selected value conflicts with a value that is already defined.\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.AllowExeDefinition\n  id: AllowExeDefinition\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: AllowExeDefinition\n  nameWithType: SectionInformation.AllowExeDefinition\n  fullName: System.Configuration.SectionInformation.AllowExeDefinition\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be declared.\n  remarks: AllowExeDefinition applies only to configuration files of client applications. For Web applications, you must use <xref:System.Configuration.SectionInformation.AllowDefinition%2A>.\n  example:\n  - \"The examples in this section show how to get the AllowExeDefinition property value after accessing the related section information in the configuration file.  \\n  \\n The following example gets the <xref:System.Configuration.SectionInformation> object.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_18_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_18_1.cs)]  \\n  \\n The following example gets the AllowExeDefinition value.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#97](~/add/codesnippet/visualbasic/p-system.configuration.s_18_2.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#97](~/add/codesnippet/csharp/p-system.configuration.s_18_2.cs)]\"\n  syntax:\n    content: public System.Configuration.ConfigurationAllowExeDefinition AllowExeDefinition { get; set; }\n    return:\n      type: System.Configuration.ConfigurationAllowExeDefinition\n      description: A value that indicates where in the configuration file hierarchy the associated <xref href=\"System.Configuration.ConfigurationSection\"></xref> object can be declared for .exe files.\n  overload: System.Configuration.SectionInformation.AllowExeDefinition*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: The selected value conflicts with a value that is already defined.\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.AllowLocation\n  id: AllowLocation\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: AllowLocation\n  nameWithType: SectionInformation.AllowLocation\n  fullName: System.Configuration.SectionInformation.AllowLocation\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets or sets a value that indicates whether the configuration section allows the <xref uid=\"langword_csharp_location\" name=\"location\" href=\"\"></xref> attribute.\n  remarks: When set to `false`, the AllowLocation property indicates that the section is accessed by native-code readers. Therefore, the use of the `location` attribute is not allowed, because the native-code readers do not support the concept of `location`.\n  example:\n  - \"The examples in this section show how to get the AllowLocation property value after accessing the related section information in the configuration file.  \\n  \\n The following example gets the <xref:System.Configuration.SectionInformation> object.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_6_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_6_1.cs)]  \\n  \\n The following example gets the AllowLocation value.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#98](~/add/codesnippet/visualbasic/p-system.configuration.s_6_2.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#98](~/add/codesnippet/csharp/p-system.configuration.s_6_2.cs)]\"\n  syntax:\n    content: public bool AllowLocation { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref uid=\"langword_csharp_location\" name=\"location\" href=\"\"></xref> attribute is allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Configuration.SectionInformation.AllowLocation*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: The selected value conflicts with a value that is already defined.\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.AllowOverride\n  id: AllowOverride\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: AllowOverride\n  nameWithType: SectionInformation.AllowOverride\n  fullName: System.Configuration.SectionInformation.AllowOverride\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets or sets a value that indicates whether the associated configuration section can be overridden by lower-level configuration files.\n  remarks: ''\n  example:\n  - \"The examples in this section show how to get the AllowOverride property value after accessing the related section information in the configuration file.  \\n  \\n The following example gets the <xref:System.Configuration.SectionInformation> object.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_16_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_16_1.cs)]  \\n  \\n The following example gets the AllowOverride value.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#99](~/add/codesnippet/visualbasic/p-system.configuration.s_16_2.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#99](~/add/codesnippet/csharp/p-system.configuration.s_16_2.cs)]\"\n  syntax:\n    content: public bool AllowOverride { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the section can be overridden; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.SectionInformation.AllowOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.ConfigSource\n  id: ConfigSource\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: ConfigSource\n  nameWithType: SectionInformation.ConfigSource\n  fullName: System.Configuration.SectionInformation.ConfigSource\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets or sets the name of the include file in which the associated configuration section is defined, if such a file exists.\n  remarks: \"The ConfigSource property represents the value of the `configSource` attribute that is specified for a <xref:System.Configuration.ConfigurationSection> object that is associated with the <xref:System.Configuration.SectionInformation> object.  \\n  \\n A <xref:System.Configuration.ConfigurationSection> implementation can optionally specify a separate file in which the configuration settings for that section are defined. This can be useful in multiple ways:  \\n  \\n-   Using include files can result in a more logical and modular structure for configuration files.  \\n  \\n-   File-access security and permissions can be used to restrict access to sections of configuration settings.  \\n  \\n-   Settings in an include file that are not used during application initialization can be modified and reloaded without requiring an application restart.  \\n  \\n The following example shows how this attribute is used in a configuration file to specify that the `pages` section is defined in an external include file:  \\n  \\n `<pages configSource=\\\"pages.config\\\"/>`  \\n  \\n If any of the settings in a configuration include file require the application to restart when they are modified, set the <xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A> property to `true`.  \\n  \\n In ASP.NET applications, at run time you can assign to the ConfigSource property the name of an alternative configuration file. In that case, the contents of the file are overwritten by the default connection string information that is contained in the Web.config file. This occurs also when the alternative file does not exist and it is created at run time. If the Web.config file does not contain any connection string information, an empty  section is added to the alternative file.\"\n  syntax:\n    content: public string ConfigSource { get; set; }\n    return:\n      type: System.String\n      description: The name of the include file in which the associated <xref href=\"System.Configuration.ConfigurationSection\"></xref> is defined, if such a file exists; otherwise, an empty string (\"\").\n  overload: System.Configuration.SectionInformation.ConfigSource*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.ForceDeclaration\n  id: ForceDeclaration\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: ForceDeclaration()\n  nameWithType: SectionInformation.ForceDeclaration()\n  fullName: System.Configuration.SectionInformation.ForceDeclaration()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Forces the associated configuration section to appear in the configuration file.\n  remarks: \"The ForceDeclaration method forces this <xref:System.Configuration.SectionInformation> declaration to be written to the configuration file.  \\n  \\n> [!NOTE]\\n>  The ForceDeclaration method can force a <xref:System.Configuration.SectionInformation> declaration to be written to a configuration file, even if the section is not required because it is already declared in a parent file. Using the ForceDeclaration method can make a configuration file more portable from one computer to another. It enables you to make sure that the section exists even when you do not have control over parent configuration files.\"\n  syntax:\n    content: public void ForceDeclaration ();\n    parameters: []\n  overload: System.Configuration.SectionInformation.ForceDeclaration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)\n  id: ForceDeclaration(System.Boolean)\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: ForceDeclaration(Boolean)\n  nameWithType: SectionInformation.ForceDeclaration(Boolean)\n  fullName: System.Configuration.SectionInformation.ForceDeclaration(Boolean)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Forces the associated configuration section to appear in the configuration file, or removes an existing section from the configuration file.\n  remarks: \"The ForceDeclaration method forces this <xref:System.Configuration.SectionInformation> declaration to be written to the configuration file if `force` is `true`. If `force` is `false`, this action might be ignored if the <xref:System.Configuration.SectionInformation> declaration is required by the system.  \\n  \\n> [!NOTE]\\n>  The ForceDeclaration method can force a <xref:System.Configuration.SectionInformation> declaration to be written to a configuration file, even if this section is not required because it is already declared in a parent file. Using the <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> method can make a configuration file more portable from one computer to another. This also lets you make sure that the section exists even if you do not have control over parent configuration files.\"\n  example:\n  - \"The following example shows how to use the ForceDeclaration method.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#113](~/add/codesnippet/visualbasic/m-system.configuration.s_0_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#113](~/add/codesnippet/csharp/m-system.configuration.s_0_1.cs)]\"\n  syntax:\n    content: public void ForceDeclaration (bool force);\n    parameters:\n    - id: force\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the associated section should be written in the configuration file; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.SectionInformation.ForceDeclaration*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: <code>force</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and the associated section cannot be exported to the child configuration file, or it is undeclared.\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.ForceSave\n  id: ForceSave\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: ForceSave\n  nameWithType: SectionInformation.ForceSave\n  fullName: System.Configuration.SectionInformation.ForceSave\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets or sets a value that indicates whether the associated configuration section will be saved even if it has not been modified.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the ForceSave property of a <xref:System.Configuration.ConfigurationSection> object.  \\n  \\n [!code-cs[System.Configuration.ConfigurationElement#1](~/add/codesnippet/csharp/p-system.configuration.s_7_1.cs)]\\n [!code-vb[System.Configuration.ConfigurationElement#1](~/add/codesnippet/visualbasic/p-system.configuration.s_7_1.vb)]\"\n  syntax:\n    content: public bool ForceSave { get; set; }\n    return:\n      type: System.Boolean\n      description: \"<xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> if the associated <xref href=\\\"System.Configuration.ConfigurationSection\\\"></xref> object will be saved even if it has not been modified; otherwise, <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>. The default is <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>.  \\n  \\n <div class=\\\"alert NOTE\\\">  \\n If the configuration file is saved (even if there are no modifications), ASP.NET restarts the application.  \\n  \\n</div>\"\n  overload: System.Configuration.SectionInformation.ForceSave*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.GetParentSection\n  id: GetParentSection\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: GetParentSection()\n  nameWithType: SectionInformation.GetParentSection()\n  fullName: System.Configuration.SectionInformation.GetParentSection()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets the configuration section that contains the configuration section associated with this object.\n  remarks: If this <xref:System.Configuration.ConfigurationSection> object has no parent sections, the GetParentSection method returns the same value as the <xref:System.Configuration.SectionInformation.Name%2A> property.\n  example:\n  - \"The following example shows how to use the GetParentSection method.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#92](~/add/codesnippet/visualbasic/m-system.configuration.s_5_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#92](~/add/codesnippet/csharp/m-system.configuration.s_5_1.cs)]\"\n  syntax:\n    content: public System.Configuration.ConfigurationSection GetParentSection ();\n    parameters: []\n    return:\n      type: System.Configuration.ConfigurationSection\n      description: The configuration section that contains the <xref href=\"System.Configuration.ConfigurationSection\"></xref> that is associated with this <xref href=\"System.Configuration.SectionInformation\"></xref> object.\n  overload: System.Configuration.SectionInformation.GetParentSection*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The method is invoked from a parent section.\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.GetRawXml\n  id: GetRawXml\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: GetRawXml()\n  nameWithType: SectionInformation.GetRawXml()\n  fullName: System.Configuration.SectionInformation.GetRawXml()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Returns an XML node object that represents the associated configuration-section object.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the GetRawXml method.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#93](~/add/codesnippet/visualbasic/m-system.configuration.s_4_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#93](~/add/codesnippet/csharp/m-system.configuration.s_4_1.cs)]\"\n  syntax:\n    content: public string GetRawXml ();\n    parameters: []\n    return:\n      type: System.String\n      description: The XML representation for this configuration section.\n  overload: System.Configuration.SectionInformation.GetRawXml*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This configuration object is locked and cannot be edited.\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.InheritInChildApplications\n  id: InheritInChildApplications\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: InheritInChildApplications\n  nameWithType: SectionInformation.InheritInChildApplications\n  fullName: System.Configuration.SectionInformation.InheritInChildApplications\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets or sets a value that indicates whether the settings that are specified in the associated configuration section are inherited by applications that reside in a subdirectory of the relevant application.\n  remarks: \"The InheritInChildApplications property represents the `inheritInChildApplications`attribute of a `location` element in a configuration file.  \\n  \\n Set InheritInChildApplications to `false` to prevent settings that are specific to a certain location (such as the root directory of a Web site) from being inherited by applications that exist in subdirectories.  \\n  \\n The following example shows how to use this attribute in a configuration file to specify that the settings defined in the location element for the root of a Web site should not be inherited by child applications:  \\n  \\n `<location path=\\\".\\\" inheritInChildApplications=\\\"false\\\">`  \\n  \\n The InheritInChildApplications property applies only to location-specific configuration settings.\"\n  example:\n  - \"The following example shows how to get the InheritInChildApplications value of a <xref:System.Configuration.ConfigurationSection> object.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#100](~/add/codesnippet/visualbasic/p-system.configuration.s_13_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#100](~/add/codesnippet/csharp/p-system.configuration.s_13_1.cs)]\"\n  syntax:\n    content: public bool InheritInChildApplications { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the settings specified in this <xref href=\"System.Configuration.ConfigurationSection\"></xref> object are inherited by child applications; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Configuration.SectionInformation.InheritInChildApplications*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.IsDeclarationRequired\n  id: IsDeclarationRequired\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: IsDeclarationRequired\n  nameWithType: SectionInformation.IsDeclarationRequired\n  fullName: System.Configuration.SectionInformation.IsDeclarationRequired\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets a value that indicates whether the configuration section must be declared in the configuration file.\n  remarks: ''\n  example:\n  - \"The examples in this section show how to get the IsDeclarationRequired property value after accessing the related section information in the configuration file.  \\n  \\n The following example gets the <xref:System.Configuration.SectionInformation> object.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_0_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_0_1.cs)]  \\n  \\n The following example gets the IsDeclarationRequired value.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#103](~/add/codesnippet/visualbasic/p-system.configuration.s_0_2.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#103](~/add/codesnippet/csharp/p-system.configuration.s_0_2.cs)]\"\n  syntax:\n    content: public bool IsDeclarationRequired { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the associated <xref href=\"System.Configuration.ConfigurationSection\"></xref> object must be declared in the configuration file; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.SectionInformation.IsDeclarationRequired*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.IsDeclared\n  id: IsDeclared\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: IsDeclared\n  nameWithType: SectionInformation.IsDeclared\n  fullName: System.Configuration.SectionInformation.IsDeclared\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets a value that indicates whether the associated configuration section is declared in the configuration file.\n  remarks: ''\n  example:\n  - \"The examples in this section show how to get the IsDeclared property value after accessing the related section information in the configuration file.  \\n  \\n The following example gets the <xref:System.Configuration.SectionInformation> object.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_2_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_2_1.cs)]  \\n  \\n The following example gets the IsDeclared value.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#104](~/add/codesnippet/visualbasic/p-system.configuration.s_2_2.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#104](~/add/codesnippet/csharp/p-system.configuration.s_2_2.cs)]\"\n  syntax:\n    content: public bool IsDeclared { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Configuration.ConfigurationSection\"></xref> is declared in the configuration file; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Configuration.SectionInformation.IsDeclared*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.IsLocked\n  id: IsLocked\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: IsLocked\n  nameWithType: SectionInformation.IsLocked\n  fullName: System.Configuration.SectionInformation.IsLocked\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets a value that indicates whether the associated configuration section is locked.\n  remarks: The IsLocked property returns `true` when the related section is locked by the <xref:System.Configuration.SectionInformation.AllowOverride%2A> or the <xref:System.Configuration.SectionInformation.AllowDefinition%2A> property. A section is locked if it cannot be overridden or defined in the current configuration file.\n  example:\n  - \"The examples in this section show how to get the IsLocked property value after accessing the related section information in the configuration file.  \\n  \\n The following example gets the <xref:System.Configuration.SectionInformation> object.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_5_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_5_1.cs)]  \\n  \\n The following example gets the IsLocked value.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#105](~/add/codesnippet/visualbasic/p-system.configuration.s_5_2.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#105](~/add/codesnippet/csharp/p-system.configuration.s_5_2.cs)]\"\n  syntax:\n    content: public bool IsLocked { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the section is locked; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.SectionInformation.IsLocked*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.IsProtected\n  id: IsProtected\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: IsProtected\n  nameWithType: SectionInformation.IsProtected\n  fullName: System.Configuration.SectionInformation.IsProtected\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets a value that indicates whether the associated configuration section is protected.\n  remarks: \"Protected configuration sections are encrypted and read-only.  \\n  \\n For more information about protected configuration sections, see [Encrypting Configuration Information Using Protected Configuration](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The examples in this section show how to get the IsProtected property value after accessing the related section information in the configuration file.  \\n  \\n The following example gets the <xref:System.Configuration.SectionInformation> object.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_14_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_14_1.cs)]  \\n  \\n The following example gets the IsProtected value.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#106](~/add/codesnippet/visualbasic/p-system.configuration.s_14_2.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#106](~/add/codesnippet/csharp/p-system.configuration.s_14_2.cs)]\"\n  syntax:\n    content: public bool IsProtected { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Configuration.ConfigurationSection\"></xref> is protected; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.SectionInformation.IsProtected*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.Name\n  id: Name\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: Name\n  nameWithType: SectionInformation.Name\n  fullName: System.Configuration.SectionInformation.Name\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets the name of the associated configuration section.\n  remarks: The Name is the name of the section without the path.\n  example:\n  - \"The following example shows how to get the Name value of a <xref:System.Configuration.ConfigurationSection> object.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#107](~/add/codesnippet/visualbasic/p-system.configuration.s_9_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#107](~/add/codesnippet/csharp/p-system.configuration.s_9_1.cs)]\"\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The complete name of the configuration section.\n  overload: System.Configuration.SectionInformation.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.OverrideMode\n  id: OverrideMode\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: OverrideMode\n  nameWithType: SectionInformation.OverrideMode\n  fullName: System.Configuration.SectionInformation.OverrideMode\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets or sets the <xref href=\"System.Configuration.OverrideMode\"></xref> enumeration value that specifies whether the associated configuration section can be overridden by child configuration files.\n  remarks: \"The <xref:System.Configuration.SectionInformation.AllowOverride%2A> property gets or sets a value that indicates whether resources declared inside a `location` element can be overridden by child configuration files. The OverrideMode property gets or sets a value that specifies similar behavior, but does so for a specific configuration element or group, and uses one of the <xref:System.Configuration.OverrideMode> enumeration values. The OverrideMode property enables behavior to be inherited from a parent element.  \\n  \\n You cannot programmatically set both the <xref:System.Configuration.SectionInformation.AllowOverride%2A> and OverrideMode property. Setting the <xref:System.Configuration.SectionInformation.AllowOverride%2A> property to `true` sets the OverrideMode property to <xref:System.Configuration.OverrideMode>. Setting the <xref:System.Configuration.SectionInformation.AllowOverride%2A> property to `false` sets the OverrideMode property to `false`.\"\n  syntax:\n    content: public System.Configuration.OverrideMode OverrideMode { get; set; }\n    return:\n      type: System.Configuration.OverrideMode\n      description: One of the <xref href=\"System.Configuration.OverrideMode\"></xref> enumeration values.\n  overload: System.Configuration.SectionInformation.OverrideMode*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: An attempt was made to change both the <xref:System.Configuration.SectionInformation.AllowOverride*> and OverrideMode properties, which is not supported for compatibility reasons.\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.OverrideModeDefault\n  id: OverrideModeDefault\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: OverrideModeDefault\n  nameWithType: SectionInformation.OverrideModeDefault\n  fullName: System.Configuration.SectionInformation.OverrideModeDefault\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets or sets a value that specifies the default override behavior of a configuration section by child configuration files.\n  remarks: The OverrideModeDefault property of a configuration section can only be set to the <xref:System.Configuration.OverrideMode> or <xref:System.Configuration.OverrideMode> value of the <xref:System.Configuration.OverrideMode> enumeration. Setting the OverrideModeDefault property to <xref:System.Configuration.OverrideMode> is equivalent to setting the value to <xref:System.Configuration.OverrideMode>.\n  syntax:\n    content: public System.Configuration.OverrideMode OverrideModeDefault { get; set; }\n    return:\n      type: System.Configuration.OverrideMode\n      description: One of the <xref href=\"System.Configuration.OverrideMode\"></xref> enumeration values.\n  overload: System.Configuration.SectionInformation.OverrideModeDefault*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: The override behavior is specified in a parent configuration section.\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.OverrideModeEffective\n  id: OverrideModeEffective\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: OverrideModeEffective\n  nameWithType: SectionInformation.OverrideModeEffective\n  fullName: System.Configuration.SectionInformation.OverrideModeEffective\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets the override behavior of a configuration section that is in turn based on whether child configuration files can lock the configuration section.\n  remarks: This property returns either <xref:System.Configuration.OverrideMode> or <xref:System.Configuration.OverrideMode>.\n  syntax:\n    content: public System.Configuration.OverrideMode OverrideModeEffective { get; }\n    return:\n      type: System.Configuration.OverrideMode\n      description: One of the <xref href=\"System.Configuration.OverrideMode\"></xref> enumeration values.\n  overload: System.Configuration.SectionInformation.OverrideModeEffective*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.ProtectionProvider\n  id: ProtectionProvider\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: ProtectionProvider\n  nameWithType: SectionInformation.ProtectionProvider\n  fullName: System.Configuration.SectionInformation.ProtectionProvider\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets the protected configuration provider for the associated configuration section.\n  remarks: \"For unprotected sections, the ProtectionProvider property is `null`.  \\n  \\n For more information about protected configuration sections, see [Encrypting Configuration Information Using Protected Configuration](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example shows how to get the <xref:System.Configuration.SectionInformation.ProtectSection%2A> value of a <xref:System.Configuration.ConfigurationSection> object.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#108](~/add/codesnippet/visualbasic/p-system.configuration.s_11_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#108](~/add/codesnippet/csharp/p-system.configuration.s_11_1.cs)]\"\n  syntax:\n    content: public System.Configuration.ProtectedConfigurationProvider ProtectionProvider { get; }\n    return:\n      type: System.Configuration.ProtectedConfigurationProvider\n      description: The protected configuration provider for this <xref href=\"System.Configuration.ConfigurationSection\"></xref> object.\n  overload: System.Configuration.SectionInformation.ProtectionProvider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.ProtectSection(System.String)\n  id: ProtectSection(System.String)\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: ProtectSection(String)\n  nameWithType: SectionInformation.ProtectSection(String)\n  fullName: System.Configuration.SectionInformation.ProtectSection(String)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Marks a configuration section for protection.\n  remarks: \"The ProtectSection method marks the section for encryption so it will be written in encrypted form on disk.  \\n  \\n The following protection providers are included by default:  \\n  \\n <xref:System.Configuration.DpapiProtectedConfigurationProvider>  \\n  \\n <xref:System.Configuration.RsaProtectedConfigurationProvider>  \\n  \\n> [!NOTE]\\n>  If you call the ProtectSection method with a `null` parameter or an empty string, the <xref:System.Configuration.RsaProtectedConfigurationProvider> class is used as the protection provider.  \\n  \\n For more information about protected configuration sections, see [Encrypting Configuration Information Using Protected Configuration](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example shows how to use the ProtectSection method.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#94](~/add/codesnippet/visualbasic/m-system.configuration.s_3_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#94](~/add/codesnippet/csharp/m-system.configuration.s_3_1.cs)]\"\n  syntax:\n    content: public void ProtectSection (string protectionProvider);\n    parameters:\n    - id: protectionProvider\n      type: System.String\n      description: The name of the protection provider to use.\n  overload: System.Configuration.SectionInformation.ProtectSection*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref:System.Configuration.SectionInformation.AllowLocation*> property is set to <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n The target section is already a protected data section.\"\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.RequirePermission\n  id: RequirePermission\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: RequirePermission\n  nameWithType: SectionInformation.RequirePermission\n  fullName: System.Configuration.SectionInformation.RequirePermission\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets a value that indicates whether the associated configuration section requires access permissions.\n  remarks: \"When RequirePermission is set to `true`, the `GetSection` methods are restricted by the trust level setting of the application. This means that methods or properties that allow access to configuration section handlers are restricted by the trust level set for the Web application.  \\n  \\n> [!NOTE]\\n>  Because high and full trust are the only levels that allow access to files outside the current application domain, an application can use configuration section handlers only at these trust levels.  \\n  \\n When RequirePermission is set to `false`, the access to the configuration data is not restricted by the application's trust level settings.  \\n  \\n> [!NOTE]\\n>  The appropriate file ACL (Access Control List) permissions are still required, regardless of the RequirePermission setting. ACL permissions determine who can access the configuration file.\"\n  example:\n  - \"The following example shows two possible trust levels for a Web application when the RequirePermission property of the `appSettings` section is `true`.  \\n  \\n```  \\n<system.web>  \\n   // With the following trust value   \\n   // the code below works.  \\n  <trust level=\\\"Full\\\" />  \\n</system.web>  \\n  \\n<system.web>  \\n  // With the following trust value   \\n  // the code below does not work.  \\n  <trust level=\\\"Medium\\\" />  \\n</system.web>  \\n```  \\n  \\n The following example shows code that runs without errors when the trust level is set to full. Otherwise, the code results in an error.  \\n  \\n```c#  \\nAppSettingsSection apSection =   \\n  ConfigurationManager.GetSection(\\\"appSettings\\\") as AppSettingsSection;  \\n  \\nNameValueCollection apSectionCollection =  \\n  ConfigurationManager.AppSettings;  \\n```  \\n  \\n```vb#  \\nDim apSection As AppSettingsSection = _   \\n  TryCast(ConfigurationManager.GetSection(\\\"appSettings\\\"),   \\n    AppSettingsSection)  \\n  \\n  Dim apSectionCollection As NameValueCollection = _   \\n    ConfigurationManager.AppSettings  \\n```\"\n  syntax:\n    content: public bool RequirePermission { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref uid=\"langword_csharp_requirePermission\" name=\"requirePermission\" href=\"\"></xref> attribute is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Configuration.SectionInformation.RequirePermission*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: The selected value conflicts with a value that is already defined.\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.RestartOnExternalChanges\n  id: RestartOnExternalChanges\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: RestartOnExternalChanges\n  nameWithType: SectionInformation.RestartOnExternalChanges\n  fullName: System.Configuration.SectionInformation.RestartOnExternalChanges\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets or sets a value that specifies whether a change in an external configuration include file requires an application restart.\n  remarks: Set the RestartOnExternalChanges property to `false` to prevent an application restart when configuration settings in the external include file are modified for this <xref:System.Configuration.ConfigurationSection> object.\n  example:\n  - \"The following example shows how to get the RestartOnExternalChanges property value of a <xref:System.Configuration.ConfigurationSection> object.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#109](~/add/codesnippet/visualbasic/p-system.configuration.s_1_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#109](~/add/codesnippet/csharp/p-system.configuration.s_1_1.cs)]\"\n  syntax:\n    content: public bool RestartOnExternalChanges { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a change in an external configuration include file requires an application restart; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Configuration.SectionInformation.RestartOnExternalChanges*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: The selected value conflicts with a value that is already defined.\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.RevertToParent\n  id: RevertToParent\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: RevertToParent()\n  nameWithType: SectionInformation.RevertToParent()\n  fullName: System.Configuration.SectionInformation.RevertToParent()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Causes the associated configuration section to inherit all its values from the parent section.\n  syntax:\n    content: public void RevertToParent ();\n    parameters: []\n  overload: System.Configuration.SectionInformation.RevertToParent*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This method cannot be called outside editing mode.\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.SectionName\n  id: SectionName\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: SectionName\n  nameWithType: SectionInformation.SectionName\n  fullName: System.Configuration.SectionInformation.SectionName\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets the name of the associated configuration section.\n  remarks: The SectionName property value is the complete section name, which includes the configuration inheritance hierarchy.\n  example:\n  - \"The following example shows how to get the SectionName value of a <xref:System.Configuration.ConfigurationSection> object.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#110](~/add/codesnippet/visualbasic/p-system.configuration.s_10_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#110](~/add/codesnippet/csharp/p-system.configuration.s_10_1.cs)]\"\n  syntax:\n    content: public string SectionName { get; }\n    return:\n      type: System.String\n      description: The name of the associated <xref href=\"System.Configuration.ConfigurationSection\"></xref> object.\n  overload: System.Configuration.SectionInformation.SectionName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.SetRawXml(System.String)\n  id: SetRawXml(System.String)\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: SetRawXml(String)\n  nameWithType: SectionInformation.SetRawXml(String)\n  fullName: System.Configuration.SectionInformation.SetRawXml(String)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Sets the object to an XML representation of the associated configuration section within the configuration file.\n  syntax:\n    content: public void SetRawXml (string rawXml);\n    parameters:\n    - id: rawXml\n      type: System.String\n      description: The XML to use.\n  overload: System.Configuration.SectionInformation.SetRawXml*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>rawXml</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.Type\n  id: Type\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: Type\n  nameWithType: SectionInformation.Type\n  fullName: System.Configuration.SectionInformation.Type\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets or sets the section class name.\n  remarks: The Type property returns the name of the section class that handles this instance of the <xref:System.Configuration.ConfigurationSection> class.\n  example:\n  - \"The following example shows how to get the Type value of a <xref:System.Configuration.ConfigurationSection> object.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#111](~/add/codesnippet/visualbasic/p-system.configuration.s_3_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#111](~/add/codesnippet/csharp/p-system.configuration.s_3_1.cs)]\"\n  syntax:\n    content: public string Type { get; set; }\n    return:\n      type: System.String\n      description: The name of the class that is associated with this <xref href=\"System.Configuration.ConfigurationSection\"></xref> section.\n  overload: System.Configuration.SectionInformation.Type*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The selected value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\").\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: The selected value conflicts with a value that is already defined.\n  platform:\n  - net462\n- uid: System.Configuration.SectionInformation.UnprotectSection\n  id: UnprotectSection\n  parent: System.Configuration.SectionInformation\n  langs:\n  - csharp\n  name: UnprotectSection()\n  nameWithType: SectionInformation.UnprotectSection()\n  fullName: System.Configuration.SectionInformation.UnprotectSection()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Removes the protected configuration encryption from the associated configuration section.\n  remarks: For more information about protected configuration sections, see [Encrypting Configuration Information Using Protected Configuration](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following example shows how to use this method.  \\n  \\n [!code-vb[System.Configuration.ConfigurationElement#112](~/add/codesnippet/visualbasic/m-system.configuration.s_6_1.vb)]\\n [!code-cs[System.Configuration.ConfigurationElement#112](~/add/codesnippet/csharp/m-system.configuration.s_6_1.cs)]\"\n  syntax:\n    content: public void UnprotectSection ();\n    parameters: []\n  overload: System.Configuration.SectionInformation.UnprotectSection*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Configuration.ConfigurationErrorsException\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationErrorsException\n  nameWithType: ConfigurationErrorsException\n  fullName: System.Configuration.ConfigurationErrorsException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Configuration.SectionInformation.AllowDefinition\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: AllowDefinition\n  nameWithType: SectionInformation.AllowDefinition\n  fullName: System.Configuration.SectionInformation.AllowDefinition\n- uid: System.Configuration.ConfigurationAllowDefinition\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationAllowDefinition\n  nameWithType: ConfigurationAllowDefinition\n  fullName: System.Configuration.ConfigurationAllowDefinition\n- uid: System.Configuration.SectionInformation.AllowExeDefinition\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: AllowExeDefinition\n  nameWithType: SectionInformation.AllowExeDefinition\n  fullName: System.Configuration.SectionInformation.AllowExeDefinition\n- uid: System.Configuration.ConfigurationAllowExeDefinition\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationAllowExeDefinition\n  nameWithType: ConfigurationAllowExeDefinition\n  fullName: System.Configuration.ConfigurationAllowExeDefinition\n- uid: System.Configuration.SectionInformation.AllowLocation\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: AllowLocation\n  nameWithType: SectionInformation.AllowLocation\n  fullName: System.Configuration.SectionInformation.AllowLocation\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Configuration.SectionInformation.AllowOverride\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: AllowOverride\n  nameWithType: SectionInformation.AllowOverride\n  fullName: System.Configuration.SectionInformation.AllowOverride\n- uid: System.Configuration.SectionInformation.ConfigSource\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: ConfigSource\n  nameWithType: SectionInformation.ConfigSource\n  fullName: System.Configuration.SectionInformation.ConfigSource\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.SectionInformation.ForceDeclaration\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: ForceDeclaration()\n  nameWithType: SectionInformation.ForceDeclaration()\n  fullName: System.Configuration.SectionInformation.ForceDeclaration()\n- uid: System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: ForceDeclaration(Boolean)\n  nameWithType: SectionInformation.ForceDeclaration(Boolean)\n  fullName: System.Configuration.SectionInformation.ForceDeclaration(Boolean)\n- uid: System.Configuration.SectionInformation.ForceSave\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: ForceSave\n  nameWithType: SectionInformation.ForceSave\n  fullName: System.Configuration.SectionInformation.ForceSave\n- uid: System.Configuration.SectionInformation.GetParentSection\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: GetParentSection()\n  nameWithType: SectionInformation.GetParentSection()\n  fullName: System.Configuration.SectionInformation.GetParentSection()\n- uid: System.Configuration.ConfigurationSection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationSection\n  nameWithType: ConfigurationSection\n  fullName: System.Configuration.ConfigurationSection\n- uid: System.Configuration.SectionInformation.GetRawXml\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: GetRawXml()\n  nameWithType: SectionInformation.GetRawXml()\n  fullName: System.Configuration.SectionInformation.GetRawXml()\n- uid: System.Configuration.SectionInformation.InheritInChildApplications\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: InheritInChildApplications\n  nameWithType: SectionInformation.InheritInChildApplications\n  fullName: System.Configuration.SectionInformation.InheritInChildApplications\n- uid: System.Configuration.SectionInformation.IsDeclarationRequired\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: IsDeclarationRequired\n  nameWithType: SectionInformation.IsDeclarationRequired\n  fullName: System.Configuration.SectionInformation.IsDeclarationRequired\n- uid: System.Configuration.SectionInformation.IsDeclared\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: IsDeclared\n  nameWithType: SectionInformation.IsDeclared\n  fullName: System.Configuration.SectionInformation.IsDeclared\n- uid: System.Configuration.SectionInformation.IsLocked\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: IsLocked\n  nameWithType: SectionInformation.IsLocked\n  fullName: System.Configuration.SectionInformation.IsLocked\n- uid: System.Configuration.SectionInformation.IsProtected\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: IsProtected\n  nameWithType: SectionInformation.IsProtected\n  fullName: System.Configuration.SectionInformation.IsProtected\n- uid: System.Configuration.SectionInformation.Name\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: Name\n  nameWithType: SectionInformation.Name\n  fullName: System.Configuration.SectionInformation.Name\n- uid: System.Configuration.SectionInformation.OverrideMode\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: OverrideMode\n  nameWithType: SectionInformation.OverrideMode\n  fullName: System.Configuration.SectionInformation.OverrideMode\n- uid: System.Configuration.OverrideMode\n  parent: System.Configuration\n  isExternal: false\n  name: OverrideMode\n  nameWithType: OverrideMode\n  fullName: System.Configuration.OverrideMode\n- uid: System.Configuration.SectionInformation.OverrideModeDefault\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: OverrideModeDefault\n  nameWithType: SectionInformation.OverrideModeDefault\n  fullName: System.Configuration.SectionInformation.OverrideModeDefault\n- uid: System.Configuration.SectionInformation.OverrideModeEffective\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: OverrideModeEffective\n  nameWithType: SectionInformation.OverrideModeEffective\n  fullName: System.Configuration.SectionInformation.OverrideModeEffective\n- uid: System.Configuration.SectionInformation.ProtectionProvider\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: ProtectionProvider\n  nameWithType: SectionInformation.ProtectionProvider\n  fullName: System.Configuration.SectionInformation.ProtectionProvider\n- uid: System.Configuration.ProtectedConfigurationProvider\n  parent: System.Configuration\n  isExternal: false\n  name: ProtectedConfigurationProvider\n  nameWithType: ProtectedConfigurationProvider\n  fullName: System.Configuration.ProtectedConfigurationProvider\n- uid: System.Configuration.SectionInformation.ProtectSection(System.String)\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: ProtectSection(String)\n  nameWithType: SectionInformation.ProtectSection(String)\n  fullName: System.Configuration.SectionInformation.ProtectSection(String)\n- uid: System.Configuration.SectionInformation.RequirePermission\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: RequirePermission\n  nameWithType: SectionInformation.RequirePermission\n  fullName: System.Configuration.SectionInformation.RequirePermission\n- uid: System.Configuration.SectionInformation.RestartOnExternalChanges\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: RestartOnExternalChanges\n  nameWithType: SectionInformation.RestartOnExternalChanges\n  fullName: System.Configuration.SectionInformation.RestartOnExternalChanges\n- uid: System.Configuration.SectionInformation.RevertToParent\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: RevertToParent()\n  nameWithType: SectionInformation.RevertToParent()\n  fullName: System.Configuration.SectionInformation.RevertToParent()\n- uid: System.Configuration.SectionInformation.SectionName\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: SectionName\n  nameWithType: SectionInformation.SectionName\n  fullName: System.Configuration.SectionInformation.SectionName\n- uid: System.Configuration.SectionInformation.SetRawXml(System.String)\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: SetRawXml(String)\n  nameWithType: SectionInformation.SetRawXml(String)\n  fullName: System.Configuration.SectionInformation.SetRawXml(String)\n- uid: System.Configuration.SectionInformation.Type\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: Type\n  nameWithType: SectionInformation.Type\n  fullName: System.Configuration.SectionInformation.Type\n- uid: System.Configuration.SectionInformation.UnprotectSection\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: UnprotectSection()\n  nameWithType: SectionInformation.UnprotectSection()\n  fullName: System.Configuration.SectionInformation.UnprotectSection()\n- uid: System.Configuration.SectionInformation.AllowDefinition*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: AllowDefinition\n  nameWithType: SectionInformation.AllowDefinition\n- uid: System.Configuration.SectionInformation.AllowExeDefinition*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: AllowExeDefinition\n  nameWithType: SectionInformation.AllowExeDefinition\n- uid: System.Configuration.SectionInformation.AllowLocation*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: AllowLocation\n  nameWithType: SectionInformation.AllowLocation\n- uid: System.Configuration.SectionInformation.AllowOverride*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: AllowOverride\n  nameWithType: SectionInformation.AllowOverride\n- uid: System.Configuration.SectionInformation.ConfigSource*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: ConfigSource\n  nameWithType: SectionInformation.ConfigSource\n- uid: System.Configuration.SectionInformation.ForceDeclaration*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: ForceDeclaration\n  nameWithType: SectionInformation.ForceDeclaration\n- uid: System.Configuration.SectionInformation.ForceSave*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: ForceSave\n  nameWithType: SectionInformation.ForceSave\n- uid: System.Configuration.SectionInformation.GetParentSection*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: GetParentSection\n  nameWithType: SectionInformation.GetParentSection\n- uid: System.Configuration.SectionInformation.GetRawXml*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: GetRawXml\n  nameWithType: SectionInformation.GetRawXml\n- uid: System.Configuration.SectionInformation.InheritInChildApplications*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: InheritInChildApplications\n  nameWithType: SectionInformation.InheritInChildApplications\n- uid: System.Configuration.SectionInformation.IsDeclarationRequired*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: IsDeclarationRequired\n  nameWithType: SectionInformation.IsDeclarationRequired\n- uid: System.Configuration.SectionInformation.IsDeclared*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: IsDeclared\n  nameWithType: SectionInformation.IsDeclared\n- uid: System.Configuration.SectionInformation.IsLocked*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: IsLocked\n  nameWithType: SectionInformation.IsLocked\n- uid: System.Configuration.SectionInformation.IsProtected*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: IsProtected\n  nameWithType: SectionInformation.IsProtected\n- uid: System.Configuration.SectionInformation.Name*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: Name\n  nameWithType: SectionInformation.Name\n- uid: System.Configuration.SectionInformation.OverrideMode*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: OverrideMode\n  nameWithType: SectionInformation.OverrideMode\n- uid: System.Configuration.SectionInformation.OverrideModeDefault*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: OverrideModeDefault\n  nameWithType: SectionInformation.OverrideModeDefault\n- uid: System.Configuration.SectionInformation.OverrideModeEffective*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: OverrideModeEffective\n  nameWithType: SectionInformation.OverrideModeEffective\n- uid: System.Configuration.SectionInformation.ProtectionProvider*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: ProtectionProvider\n  nameWithType: SectionInformation.ProtectionProvider\n- uid: System.Configuration.SectionInformation.ProtectSection*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: ProtectSection\n  nameWithType: SectionInformation.ProtectSection\n- uid: System.Configuration.SectionInformation.RequirePermission*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: RequirePermission\n  nameWithType: SectionInformation.RequirePermission\n- uid: System.Configuration.SectionInformation.RestartOnExternalChanges*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: RestartOnExternalChanges\n  nameWithType: SectionInformation.RestartOnExternalChanges\n- uid: System.Configuration.SectionInformation.RevertToParent*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: RevertToParent\n  nameWithType: SectionInformation.RevertToParent\n- uid: System.Configuration.SectionInformation.SectionName*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: SectionName\n  nameWithType: SectionInformation.SectionName\n- uid: System.Configuration.SectionInformation.SetRawXml*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: SetRawXml\n  nameWithType: SectionInformation.SetRawXml\n- uid: System.Configuration.SectionInformation.Type*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: Type\n  nameWithType: SectionInformation.Type\n- uid: System.Configuration.SectionInformation.UnprotectSection*\n  parent: System.Configuration.SectionInformation\n  isExternal: false\n  name: UnprotectSection\n  nameWithType: SectionInformation.UnprotectSection\n"}