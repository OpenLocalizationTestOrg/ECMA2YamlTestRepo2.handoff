{"nodes":[{"pos":[1089,1101],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2966,2978],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3558,3570],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4527,4539],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4684,4696],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5304,5316],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5373,5385],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5932,5944],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6617,6629],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6675,6687],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7432,7444],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7517,7529],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8230,8242],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8292,8304],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8819,8831],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Variable`1\n  id: Variable`1\n  children:\n  - System.Activities.Variable`1.#ctor\n  - System.Activities.Variable`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  - System.Activities.Variable`1.#ctor(System.String)\n  - System.Activities.Variable`1.#ctor(System.String,System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  - System.Activities.Variable`1.#ctor(System.String,`0)\n  - System.Activities.Variable`1.Default\n  - System.Activities.Variable`1.Get(System.Activities.ActivityContext)\n  - System.Activities.Variable`1.GetLocation(System.Activities.ActivityContext)\n  - System.Activities.Variable`1.Set(System.Activities.ActivityContext,`0)\n  - System.Activities.Variable`1.TypeCore\n  langs:\n  - csharp\n  name: Variable<T>\n  nameWithType: Variable<T>\n  fullName: System.Activities.Variable<T>\n  type: Class\n  syntax:\n    content: 'public sealed class Variable<T> : System.Activities.Variable'\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.LocationReference\n  - System.Activities.Variable\n  implements: []\n  inheritedMembers:\n  - System.Activities.LocationReference.Type\n  - System.Activities.Variable.Create(System.String,System.Type,System.Activities.VariableModifiers)\n  - System.Activities.Variable.Modifiers\n  - System.Activities.Variable.Name\n  - System.Activities.Variable.NameCore\n  - System.Activities.Variable.Set(System.Activities.ActivityContext,System.Object)\n  platform:\n  - net462\n- uid: System.Activities.Variable`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.Variable`1\n  langs:\n  - csharp\n  name: Variable()\n  nameWithType: Variable<T>.Variable()\n  fullName: System.Activities.Variable<T>.Variable()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public Variable ();\n    parameters: []\n  overload: System.Activities.Variable`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Variable`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})'\n  parent: System.Activities.Variable`1\n  langs:\n  - csharp\n  name: Variable(Expression<Func<ActivityContext,T>>)\n  nameWithType: Variable<T>.Variable(Expression<Func<ActivityContext,T>>)\n  fullName: System.Activities.Variable<T>.Variable(Expression<Func<ActivityContext,T>>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public Variable (System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,T>> defaultExpression);\n    parameters:\n    - id: defaultExpression\n      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}\n      description: To be added.\n  overload: System.Activities.Variable`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Variable`1.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Activities.Variable`1\n  langs:\n  - csharp\n  name: Variable(String)\n  nameWithType: Variable<T>.Variable(String)\n  fullName: System.Activities.Variable<T>.Variable(String)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public Variable (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: To be added.\n  overload: System.Activities.Variable`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Variable`1.#ctor(System.String,System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  id: '#ctor(System.String,System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})'\n  parent: System.Activities.Variable`1\n  langs:\n  - csharp\n  name: Variable(String,Expression<Func<ActivityContext,T>>)\n  nameWithType: Variable<T>.Variable(String,Expression<Func<ActivityContext,T>>)\n  fullName: System.Activities.Variable<T>.Variable(String,Expression<Func<ActivityContext,T>>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public Variable (string name, System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,T>> defaultExpression);\n    parameters:\n    - id: name\n      type: System.String\n      description: To be added.\n    - id: defaultExpression\n      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}\n      description: To be added.\n  overload: System.Activities.Variable`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Variable`1.#ctor(System.String,`0)\n  id: '#ctor(System.String,`0)'\n  parent: System.Activities.Variable`1\n  langs:\n  - csharp\n  name: Variable(String,T)\n  nameWithType: Variable<T>.Variable(String,T)\n  fullName: System.Activities.Variable<T>.Variable(String,T)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public Variable (string name, T defaultValue);\n    parameters:\n    - id: name\n      type: System.String\n      description: To be added.\n    - id: defaultValue\n      type: T\n      description: To be added.\n  overload: System.Activities.Variable`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Variable`1.Default\n  id: Default\n  parent: System.Activities.Variable`1\n  langs:\n  - csharp\n  name: Default\n  nameWithType: Variable<T>.Default\n  fullName: System.Activities.Variable<T>.Default\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public System.Activities.Activity<T> Default { get; set; }\n    return:\n      type: System.Activities.Activity{T}\n      description: To be added.\n  overload: System.Activities.Variable`1.Default*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Variable`1.Get(System.Activities.ActivityContext)\n  id: Get(System.Activities.ActivityContext)\n  parent: System.Activities.Variable`1\n  langs:\n  - csharp\n  name: Get(ActivityContext)\n  nameWithType: Variable<T>.Get(ActivityContext)\n  fullName: System.Activities.Variable<T>.Get(ActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public T Get (System.Activities.ActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.ActivityContext\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.Activities.Variable`1.Get*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Variable`1.GetLocation(System.Activities.ActivityContext)\n  id: GetLocation(System.Activities.ActivityContext)\n  parent: System.Activities.Variable`1\n  langs:\n  - csharp\n  name: GetLocation(ActivityContext)\n  nameWithType: Variable<T>.GetLocation(ActivityContext)\n  fullName: System.Activities.Variable<T>.GetLocation(ActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public System.Activities.Location<T> GetLocation (System.Activities.ActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.ActivityContext\n      description: To be added.\n    return:\n      type: System.Activities.Location`1\n      description: To be added.\n  overload: System.Activities.Variable`1.GetLocation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Variable`1.Set(System.Activities.ActivityContext,`0)\n  id: Set(System.Activities.ActivityContext,`0)\n  parent: System.Activities.Variable`1\n  langs:\n  - csharp\n  name: Set(ActivityContext,T)\n  nameWithType: Variable<T>.Set(ActivityContext,T)\n  fullName: System.Activities.Variable<T>.Set(ActivityContext,T)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public void Set (System.Activities.ActivityContext context, T value);\n    parameters:\n    - id: context\n      type: System.Activities.ActivityContext\n      description: To be added.\n    - id: value\n      type: T\n      description: To be added.\n  overload: System.Activities.Variable`1.Set*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Variable`1.TypeCore\n  id: TypeCore\n  parent: System.Activities.Variable`1\n  langs:\n  - csharp\n  name: TypeCore\n  nameWithType: Variable<T>.TypeCore\n  fullName: System.Activities.Variable<T>.TypeCore\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: protected override Type TypeCore { get; }\n    return:\n      type: System.Type\n      description: To be added.\n  overload: System.Activities.Variable`1.TypeCore*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.Variable\n  isExternal: false\n  name: System.Activities.Variable\n- uid: System.Activities.Variable`1.#ctor\n  parent: System.Activities.Variable`1\n  isExternal: false\n  name: Variable()\n  nameWithType: Variable<T>.Variable()\n  fullName: System.Activities.Variable<T>.Variable()\n- uid: System.Activities.Variable`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  parent: System.Activities.Variable`1\n  isExternal: false\n  name: Variable(Expression<Func<ActivityContext,T>>)\n  nameWithType: Variable<T>.Variable(Expression<Func<ActivityContext,T>>)\n  fullName: System.Activities.Variable<T>.Variable(Expression<Func<ActivityContext,T>>)\n- uid: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<ActivityContext,T>>\n  nameWithType: Expression<Func<ActivityContext,T>>\n  fullName: System.Linq.Expressions.Expression<System.Func<System.Activities.ActivityContext,T>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<System.Activities.ActivityContext,T>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<System.Activities.ActivityContext,T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.ActivityContext\n    name: ActivityContext\n    nameWithType: ActivityContext\n    fullName: ActivityContext\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Variable`1.#ctor(System.String)\n  parent: System.Activities.Variable`1\n  isExternal: false\n  name: Variable(String)\n  nameWithType: Variable<T>.Variable(String)\n  fullName: System.Activities.Variable<T>.Variable(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Variable`1.#ctor(System.String,System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  parent: System.Activities.Variable`1\n  isExternal: false\n  name: Variable(String,Expression<Func<ActivityContext,T>>)\n  nameWithType: Variable<T>.Variable(String,Expression<Func<ActivityContext,T>>)\n  fullName: System.Activities.Variable<T>.Variable(String,Expression<Func<ActivityContext,T>>)\n- uid: System.Activities.Variable`1.#ctor(System.String,`0)\n  parent: System.Activities.Variable`1\n  isExternal: false\n  name: Variable(String,T)\n  nameWithType: Variable<T>.Variable(String,T)\n  fullName: System.Activities.Variable<T>.Variable(String,T)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Activities.Variable`1.Default\n  parent: System.Activities.Variable`1\n  isExternal: false\n  name: Default\n  nameWithType: Variable<T>.Default\n  fullName: System.Activities.Variable<T>.Default\n- uid: System.Activities.Activity{T}\n  parent: System.Activities\n  isExternal: false\n  name: Activity<T>\n  nameWithType: Activity<T>\n  fullName: System.Activities.Activity<T>\n  spec.csharp:\n  - uid: System.Activities.Activity`1\n    name: Activity\n    nameWithType: Activity\n    fullName: Activity<T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Variable`1.Get(System.Activities.ActivityContext)\n  parent: System.Activities.Variable`1\n  isExternal: false\n  name: Get(ActivityContext)\n  nameWithType: Variable<T>.Get(ActivityContext)\n  fullName: System.Activities.Variable<T>.Get(ActivityContext)\n- uid: System.Activities.ActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: ActivityContext\n  nameWithType: ActivityContext\n  fullName: System.Activities.ActivityContext\n- uid: System.Activities.Variable`1.GetLocation(System.Activities.ActivityContext)\n  parent: System.Activities.Variable`1\n  isExternal: false\n  name: GetLocation(ActivityContext)\n  nameWithType: Variable<T>.GetLocation(ActivityContext)\n  fullName: System.Activities.Variable<T>.GetLocation(ActivityContext)\n- uid: System.Activities.Location`1\n  parent: System.Activities\n  isExternal: false\n  name: Location<T>\n  nameWithType: Location<T>\n  fullName: System.Activities.Location<T>\n- uid: System.Activities.Variable`1.Set(System.Activities.ActivityContext,`0)\n  parent: System.Activities.Variable`1\n  isExternal: false\n  name: Set(ActivityContext,T)\n  nameWithType: Variable<T>.Set(ActivityContext,T)\n  fullName: System.Activities.Variable<T>.Set(ActivityContext,T)\n- uid: System.Activities.Variable`1.TypeCore\n  parent: System.Activities.Variable`1\n  isExternal: false\n  name: TypeCore\n  nameWithType: Variable<T>.TypeCore\n  fullName: System.Activities.Variable<T>.TypeCore\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.Variable`1.#ctor*\n  parent: System.Activities.Variable`1\n  isExternal: false\n  name: Variable<T>\n  nameWithType: Variable<T>.Variable<T>\n- uid: System.Activities.Variable`1.Default*\n  parent: System.Activities.Variable`1\n  isExternal: false\n  name: Default\n  nameWithType: Variable<T>.Default\n- uid: System.Activities.Variable`1.Get*\n  parent: System.Activities.Variable`1\n  isExternal: false\n  name: Get\n  nameWithType: Variable<T>.Get\n- uid: System.Activities.Variable`1.GetLocation*\n  parent: System.Activities.Variable`1\n  isExternal: false\n  name: GetLocation\n  nameWithType: Variable<T>.GetLocation\n- uid: System.Activities.Variable`1.Set*\n  parent: System.Activities.Variable`1\n  isExternal: false\n  name: Set\n  nameWithType: Variable<T>.Set\n- uid: System.Activities.Variable`1.TypeCore*\n  parent: System.Activities.Variable`1\n  isExternal: false\n  name: TypeCore\n  nameWithType: Variable<T>.TypeCore\n"}