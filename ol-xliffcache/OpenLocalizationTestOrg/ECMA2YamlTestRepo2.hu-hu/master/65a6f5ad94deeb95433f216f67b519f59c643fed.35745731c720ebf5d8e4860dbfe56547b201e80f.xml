{"nodes":[{"pos":[2473,2531],"content":"Provides for compilation and caching of queries for reuse.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides for compilation and caching of queries for reuse.","pos":[0,58]}]},{"pos":[2544,2847],"content":"Conceptually this class contains a single method (`Compile`) with several overloads. You call the <xref:System.Data.Linq.CompiledQuery.Compile%2A> method to create a new delegate to represent the compiled query.      > [!NOTE] >  Compilation does not occur until the first time the query is executed.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Conceptually this class contains a single method (<ph id=\"ph1\">`Compile`</ph>) with several overloads.","pos":[0,84],"source":"Conceptually this class contains a single method (`Compile`) with several overloads."},{"content":"You call the &lt;xref:System.Data.Linq.CompiledQuery.Compile%2A&gt; method to create a new delegate to represent the compiled query.","pos":[85,211],"source":" You call the <xref:System.Data.Linq.CompiledQuery.Compile%2A> method to create a new delegate to represent the compiled query."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Compilation does not occur until the first time the query is executed.","pos":[217,300],"source":"      > [!NOTE] >  Compilation does not occur until the first time the query is executed."}]},{"pos":[3845,3857],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3928,3940],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4941,4953],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5030,5042],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6099,6111],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6194,6206],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7319,7331],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7420,7432],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8601,8613],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8708,8720],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9945,9957],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10058,10070],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11351,11363],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11470,11482],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12819,12831],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12944,12956],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14351,14363],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14482,14494],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15947,15959],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16084,16096],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17614,17626],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17758,17770],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19354,19366],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19505,19517],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21167,21179],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21325,21337],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23053,23065],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23218,23230],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25012,25024],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25184,25196],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27044,27056],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27223,27235],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27773,27814],"content":"Returns the query as a lambda expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the query as a lambda expression.","pos":[0,41]}]},{"pos":[27990,28038],"content":"The lambda expression that represents the query.","needQuote":true,"needEscape":true,"nodes":[{"content":"The lambda expression that represents the query.","pos":[0,48]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.CompiledQuery\n  id: CompiledQuery\n  children:\n  - System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Data.Linq.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  - System.Data.Linq.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})\n  - System.Data.Linq.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})\n  - System.Data.Linq.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})\n  - System.Data.Linq.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})\n  - System.Data.Linq.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})\n  - System.Data.Linq.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})\n  - System.Data.Linq.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})\n  - System.Data.Linq.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})\n  - System.Data.Linq.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})\n  - System.Data.Linq.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})\n  - System.Data.Linq.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})\n  - System.Data.Linq.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})\n  - System.Data.Linq.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})\n  - System.Data.Linq.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})\n  - System.Data.Linq.CompiledQuery.Expression\n  langs:\n  - csharp\n  name: CompiledQuery\n  nameWithType: CompiledQuery\n  fullName: System.Data.Linq.CompiledQuery\n  type: Class\n  summary: Provides for compilation and caching of queries for reuse.\n  remarks: \"Conceptually this class contains a single method (`Compile`) with several overloads. You call the <xref:System.Data.Linq.CompiledQuery.Compile%2A> method to create a new delegate to represent the compiled query.  \\n  \\n> [!NOTE]\\n>  Compilation does not occur until the first time the query is executed.\"\n  syntax:\n    content: public sealed class CompiledQuery\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  id: Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TResult> Compile<TArg0,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TResult}}\n      description: To be added.\n    return:\n      type: System.Func{TArg0,TResult}\n      description: To be added.\n  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  id: Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TResult> Compile<TArg0,TArg1,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TResult}}\n      description: To be added.\n    return:\n      type: System.Func{TArg0,TArg1,TResult}\n      description: To be added.\n  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})\n  id: Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TResult> Compile<TArg0,TArg1,TArg2,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TResult}}\n      description: To be added.\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TResult}\n      description: To be added.\n  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})\n  id: Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TResult}}\n      description: To be added.\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TResult}\n      description: To be added.\n  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})\n  id: Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TResult}}\n      description: To be added.\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TResult}\n      description: To be added.\n  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})\n  id: Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult}}\n      description: To be added.\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult}\n      description: To be added.\n  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})\n  id: Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult}}\n      description: To be added.\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult}\n      description: To be added.\n  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})\n  id: Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult}}\n      description: To be added.\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult}\n      description: To be added.\n  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})\n  id: Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult}}\n      description: To be added.\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult}\n      description: To be added.\n  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})\n  id: Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult}}\n      description: To be added.\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult}\n      description: To be added.\n  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})\n  id: Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult}}\n      description: To be added.\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult}\n      description: To be added.\n  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})\n  id: Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult}}\n      description: To be added.\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult}\n      description: To be added.\n  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})\n  id: Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult}}\n      description: To be added.\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult}\n      description: To be added.\n  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})\n  id: Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult}}\n      description: To be added.\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult}\n      description: To be added.\n  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})\n  id: Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult}}\n      description: To be added.\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult}\n      description: To be added.\n  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})\n  id: Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult}}\n      description: To be added.\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult}\n      description: To be added.\n  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.CompiledQuery.Expression\n  id: Expression\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Expression\n  nameWithType: CompiledQuery.Expression\n  fullName: System.Data.Linq.CompiledQuery.Expression\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Returns the query as a lambda expression.\n  syntax:\n    content: public System.Linq.Expressions.LambdaExpression Expression { get; }\n    return:\n      type: System.Linq.Expressions.LambdaExpression\n      description: The lambda expression that represents the query.\n  overload: System.Data.Linq.CompiledQuery.Expression*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TResult>>)\n- uid: System.Func{TArg0,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TResult>\n  nameWithType: Func<TArg0,TResult>\n  fullName: System.Func<TArg0,TResult>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<TArg0,TResult>>\n  nameWithType: Expression<Func<TArg0,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TResult>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<TArg0,TResult>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TResult>>)\n- uid: System.Func{TArg0,TArg1,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TArg1,TResult>\n  nameWithType: Func<TArg0,TArg1,TResult>\n  fullName: System.Func<TArg0,TArg1,TResult>\n  spec.csharp:\n  - uid: System.Func`3\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<TArg0,TArg1,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TResult>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<TArg0,TArg1,TResult>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`3\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TArg1,TArg2,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TResult>\n  spec.csharp:\n  - uid: System.Func`4\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<TArg0,TArg1,TArg2,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TResult>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TResult>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`4\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TArg1,TArg2,TArg3,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TResult>\n  spec.csharp:\n  - uid: System.Func`5\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TResult>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TResult>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`5\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>\n  spec.csharp:\n  - uid: System.Func`6\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`6\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>\n  spec.csharp:\n  - uid: System.Func`7\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`7\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>\n  spec.csharp:\n  - uid: System.Func`8\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`8\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>\n  spec.csharp:\n  - uid: System.Func`9\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg7\n    name: TArg7\n    nameWithType: TArg7\n    fullName: TArg7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`9\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg7\n    name: TArg7\n    nameWithType: TArg7\n    fullName: TArg7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>\n  spec.csharp:\n  - uid: System.Func`10\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg7\n    name: TArg7\n    nameWithType: TArg7\n    fullName: TArg7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg8\n    name: TArg8\n    nameWithType: TArg8\n    fullName: TArg8\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`10\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg7\n    name: TArg7\n    nameWithType: TArg7\n    fullName: TArg7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg8\n    name: TArg8\n    nameWithType: TArg8\n    fullName: TArg8\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>\n  spec.csharp:\n  - uid: System.Func`11\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg7\n    name: TArg7\n    nameWithType: TArg7\n    fullName: TArg7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg8\n    name: TArg8\n    nameWithType: TArg8\n    fullName: TArg8\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg9\n    name: TArg9\n    nameWithType: TArg9\n    fullName: TArg9\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`11\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg7\n    name: TArg7\n    nameWithType: TArg7\n    fullName: TArg7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg8\n    name: TArg8\n    nameWithType: TArg8\n    fullName: TArg8\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg9\n    name: TArg9\n    nameWithType: TArg9\n    fullName: TArg9\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>\n  spec.csharp:\n  - uid: System.Func`12\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg7\n    name: TArg7\n    nameWithType: TArg7\n    fullName: TArg7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg8\n    name: TArg8\n    nameWithType: TArg8\n    fullName: TArg8\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg9\n    name: TArg9\n    nameWithType: TArg9\n    fullName: TArg9\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg10\n    name: TArg10\n    nameWithType: TArg10\n    fullName: TArg10\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`12\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg7\n    name: TArg7\n    nameWithType: TArg7\n    fullName: TArg7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg8\n    name: TArg8\n    nameWithType: TArg8\n    fullName: TArg8\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg9\n    name: TArg9\n    nameWithType: TArg9\n    fullName: TArg9\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg10\n    name: TArg10\n    nameWithType: TArg10\n    fullName: TArg10\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>\n  spec.csharp:\n  - uid: System.Func`13\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg7\n    name: TArg7\n    nameWithType: TArg7\n    fullName: TArg7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg8\n    name: TArg8\n    nameWithType: TArg8\n    fullName: TArg8\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg9\n    name: TArg9\n    nameWithType: TArg9\n    fullName: TArg9\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg10\n    name: TArg10\n    nameWithType: TArg10\n    fullName: TArg10\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg11\n    name: TArg11\n    nameWithType: TArg11\n    fullName: TArg11\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`13\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg7\n    name: TArg7\n    nameWithType: TArg7\n    fullName: TArg7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg8\n    name: TArg8\n    nameWithType: TArg8\n    fullName: TArg8\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg9\n    name: TArg9\n    nameWithType: TArg9\n    fullName: TArg9\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg10\n    name: TArg10\n    nameWithType: TArg10\n    fullName: TArg10\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg11\n    name: TArg11\n    nameWithType: TArg11\n    fullName: TArg11\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>\n  spec.csharp:\n  - uid: System.Func`14\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg7\n    name: TArg7\n    nameWithType: TArg7\n    fullName: TArg7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg8\n    name: TArg8\n    nameWithType: TArg8\n    fullName: TArg8\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg9\n    name: TArg9\n    nameWithType: TArg9\n    fullName: TArg9\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg10\n    name: TArg10\n    nameWithType: TArg10\n    fullName: TArg10\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg11\n    name: TArg11\n    nameWithType: TArg11\n    fullName: TArg11\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg12\n    name: TArg12\n    nameWithType: TArg12\n    fullName: TArg12\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`14\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg7\n    name: TArg7\n    nameWithType: TArg7\n    fullName: TArg7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg8\n    name: TArg8\n    nameWithType: TArg8\n    fullName: TArg8\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg9\n    name: TArg9\n    nameWithType: TArg9\n    fullName: TArg9\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg10\n    name: TArg10\n    nameWithType: TArg10\n    fullName: TArg10\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg11\n    name: TArg11\n    nameWithType: TArg11\n    fullName: TArg11\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg12\n    name: TArg12\n    nameWithType: TArg12\n    fullName: TArg12\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>\n  spec.csharp:\n  - uid: System.Func`15\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg7\n    name: TArg7\n    nameWithType: TArg7\n    fullName: TArg7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg8\n    name: TArg8\n    nameWithType: TArg8\n    fullName: TArg8\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg9\n    name: TArg9\n    nameWithType: TArg9\n    fullName: TArg9\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg10\n    name: TArg10\n    nameWithType: TArg10\n    fullName: TArg10\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg11\n    name: TArg11\n    nameWithType: TArg11\n    fullName: TArg11\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg12\n    name: TArg12\n    nameWithType: TArg12\n    fullName: TArg12\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg13\n    name: TArg13\n    nameWithType: TArg13\n    fullName: TArg13\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`15\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg7\n    name: TArg7\n    nameWithType: TArg7\n    fullName: TArg7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg8\n    name: TArg8\n    nameWithType: TArg8\n    fullName: TArg8\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg9\n    name: TArg9\n    nameWithType: TArg9\n    fullName: TArg9\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg10\n    name: TArg10\n    nameWithType: TArg10\n    fullName: TArg10\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg11\n    name: TArg11\n    nameWithType: TArg11\n    fullName: TArg11\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg12\n    name: TArg12\n    nameWithType: TArg12\n    fullName: TArg12\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg13\n    name: TArg13\n    nameWithType: TArg13\n    fullName: TArg13\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>\n  spec.csharp:\n  - uid: System.Func`16\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg7\n    name: TArg7\n    nameWithType: TArg7\n    fullName: TArg7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg8\n    name: TArg8\n    nameWithType: TArg8\n    fullName: TArg8\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg9\n    name: TArg9\n    nameWithType: TArg9\n    fullName: TArg9\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg10\n    name: TArg10\n    nameWithType: TArg10\n    fullName: TArg10\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg11\n    name: TArg11\n    nameWithType: TArg11\n    fullName: TArg11\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg12\n    name: TArg12\n    nameWithType: TArg12\n    fullName: TArg12\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg13\n    name: TArg13\n    nameWithType: TArg13\n    fullName: TArg13\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg14\n    name: TArg14\n    nameWithType: TArg14\n    fullName: TArg14\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`16\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg7\n    name: TArg7\n    nameWithType: TArg7\n    fullName: TArg7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg8\n    name: TArg8\n    nameWithType: TArg8\n    fullName: TArg8\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg9\n    name: TArg9\n    nameWithType: TArg9\n    fullName: TArg9\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg10\n    name: TArg10\n    nameWithType: TArg10\n    fullName: TArg10\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg11\n    name: TArg11\n    nameWithType: TArg11\n    fullName: TArg11\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg12\n    name: TArg12\n    nameWithType: TArg12\n    fullName: TArg12\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg13\n    name: TArg13\n    nameWithType: TArg13\n    fullName: TArg13\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg14\n    name: TArg14\n    nameWithType: TArg14\n    fullName: TArg14\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>\n  spec.csharp:\n  - uid: System.Func`17\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg7\n    name: TArg7\n    nameWithType: TArg7\n    fullName: TArg7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg8\n    name: TArg8\n    nameWithType: TArg8\n    fullName: TArg8\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg9\n    name: TArg9\n    nameWithType: TArg9\n    fullName: TArg9\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg10\n    name: TArg10\n    nameWithType: TArg10\n    fullName: TArg10\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg11\n    name: TArg11\n    nameWithType: TArg11\n    fullName: TArg11\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg12\n    name: TArg12\n    nameWithType: TArg12\n    fullName: TArg12\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg13\n    name: TArg13\n    nameWithType: TArg13\n    fullName: TArg13\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg14\n    name: TArg14\n    nameWithType: TArg14\n    fullName: TArg14\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg15\n    name: TArg15\n    nameWithType: TArg15\n    fullName: TArg15\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`17\n    name: Func\n    nameWithType: Func\n    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TArg0\n    name: TArg0\n    nameWithType: TArg0\n    fullName: TArg0\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg1\n    name: TArg1\n    nameWithType: TArg1\n    fullName: TArg1\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg2\n    name: TArg2\n    nameWithType: TArg2\n    fullName: TArg2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg3\n    name: TArg3\n    nameWithType: TArg3\n    fullName: TArg3\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg4\n    name: TArg4\n    nameWithType: TArg4\n    fullName: TArg4\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg5\n    name: TArg5\n    nameWithType: TArg5\n    fullName: TArg5\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg6\n    name: TArg6\n    nameWithType: TArg6\n    fullName: TArg6\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg7\n    name: TArg7\n    nameWithType: TArg7\n    fullName: TArg7\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg8\n    name: TArg8\n    nameWithType: TArg8\n    fullName: TArg8\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg9\n    name: TArg9\n    nameWithType: TArg9\n    fullName: TArg9\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg10\n    name: TArg10\n    nameWithType: TArg10\n    fullName: TArg10\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg11\n    name: TArg11\n    nameWithType: TArg11\n    fullName: TArg11\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg12\n    name: TArg12\n    nameWithType: TArg12\n    fullName: TArg12\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg13\n    name: TArg13\n    nameWithType: TArg13\n    fullName: TArg13\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg14\n    name: TArg14\n    nameWithType: TArg14\n    fullName: TArg14\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TArg15\n    name: TArg15\n    nameWithType: TArg15\n    fullName: TArg15\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.CompiledQuery.Expression\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Expression\n  nameWithType: CompiledQuery.Expression\n  fullName: System.Data.Linq.CompiledQuery.Expression\n- uid: System.Linq.Expressions.LambdaExpression\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: LambdaExpression\n  nameWithType: LambdaExpression\n  fullName: System.Linq.Expressions.LambdaExpression\n- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TResult>*\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile<TArg0,TResult>\n  nameWithType: CompiledQuery.Compile<TArg0,TResult>\n- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TResult>*\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile<TArg0,TArg1,TResult>\n  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TResult>\n- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TResult>*\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile<TArg0,TArg1,TArg2,TResult>\n  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TResult>\n- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TResult>*\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile<TArg0,TArg1,TArg2,TArg3,TResult>\n  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TResult>\n- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>*\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>\n  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>\n- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>*\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>\n  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>\n- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>*\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>\n  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>\n- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>*\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>\n  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>\n- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>*\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>\n  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>\n- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>*\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>\n  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>\n- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>*\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>\n  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>\n- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>*\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>\n  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>\n- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>*\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>\n  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>\n- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>*\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>\n  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>\n- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>*\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>\n  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>\n- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>*\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>\n  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>\n- uid: System.Data.Linq.CompiledQuery.Expression*\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Expression\n  nameWithType: CompiledQuery.Expression\n"}