{"nodes":[{"pos":[1155,1261],"content":"Enables sharing of global information across multiple sessions and requests within an ASP.NET application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables sharing of global information across multiple sessions and requests within an ASP.NET application.","pos":[0,106]}]},{"pos":[1274,2052],"content":"An ASP.NET application is the sum of all files, pages, handlers, modules, and code within the scope of a virtual directory and its subdirectories on a single Web server.       A single instance of an HttpApplicationState class is created the first time a client requests any URL resource from within a particular ASP.NET application virtual directory. A separate single instance is created for each ASP.NET application on a Web server. A reference to each instance is then exposed via the intrinsic <xref:System.Web.HttpContext.Application%2A> object.       Application state is not shared across either a Web farm (in which an application is hosted across multiple servers) or a Web garden (in which an application is hosted across multiple processes on the same computer).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An ASP.NET application is the sum of all files, pages, handlers, modules, and code within the scope of a virtual directory and its subdirectories on a single Web server.       A single instance of an HttpApplicationState class is created the first time a client requests any URL resource from within a particular ASP.NET application virtual directory. A separate single instance is created for each ASP.NET application on a Web server. A reference to each instance is then exposed via the intrinsic <xref:System.Web.HttpContext.Application%2A> object.       Application state is not shared across either a Web farm (in which an application is hosted across multiple servers) or a Web garden (in which an application is hosted across multiple processes on the same computer).","pos":[0,774],"nodes":[{"content":"An ASP.NET application is the sum of all files, pages, handlers, modules, and code within the scope of a virtual directory and its subdirectories on a single Web server.","pos":[0,169]},{"content":"A single instance of an HttpApplicationState class is created the first time a client requests any URL resource from within a particular ASP.NET application virtual directory.","pos":[176,351]},{"content":"A separate single instance is created for each ASP.NET application on a Web server.","pos":[352,435]},{"content":"A reference to each instance is then exposed via the intrinsic &lt;xref:System.Web.HttpContext.Application%2A&gt; object.","pos":[436,551],"source":" A reference to each instance is then exposed via the intrinsic <xref:System.Web.HttpContext.Application%2A> object."},{"content":"Application state is not shared across either a Web farm (in which an application is hosted across multiple servers) or a Web garden (in which an application is hosted across multiple processes on the same computer).","pos":[558,774]}]}]},{"pos":[4628,4717],"content":"Adds a new object to the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Adds a new object to the <xref href=\"System.Web.HttpApplicationState\"></xref> collection."},{"pos":[5248,5301],"content":"The name of the object to be added to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the object to be added to the collection.","pos":[0,53]}]},{"pos":[5363,5387],"content":"The value of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the object.","pos":[0,24]}]},{"pos":[5794,5886],"content":"Gets the access keys in the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Gets the access keys in the <xref href=\"System.Web.HttpApplicationState\"></xref> collection."},{"pos":[6388,6472],"content":"A string array of <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object names.","needQuote":true,"needEscape":true,"source":"A string array of <xref href=\"System.Web.HttpApplicationState\"></xref> object names."},{"pos":[6877,6969],"content":"Removes all objects from an <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Removes all objects from an <xref href=\"System.Web.HttpApplicationState\"></xref> collection."},{"pos":[7827,7911],"content":"Gets a reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets a reference to the <xref href=\"System.Web.HttpApplicationState\"></xref> object."},{"pos":[7923,7989],"content":"This property provides compatibility with earlier versions of ASP.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property provides compatibility with earlier versions of ASP.","pos":[0,66]}]},{"pos":[8572,8651],"content":"A reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A reference to the <xref href=\"System.Web.HttpApplicationState\"></xref> object."},{"pos":[9053,9151],"content":"Gets the number of objects in the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Gets the number of objects in the <xref href=\"System.Web.HttpApplicationState\"></xref> collection."},{"pos":[9635,9698],"content":"The number of item objects in the collection. The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of item objects in the collection. The default is 0.","pos":[0,63],"nodes":[{"content":"The number of item objects in the collection.","pos":[0,45]},{"content":"The default is 0.","pos":[46,63]}]}]},{"pos":[10134,10221],"content":"Gets an <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object by numerical index.","needQuote":true,"needEscape":true,"source":"Gets an <xref href=\"System.Web.HttpApplicationState\"></xref> object by numerical index."},{"pos":[10853,10895],"content":"The index of the application state object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the application state object.","pos":[0,42]}]},{"pos":[10953,10997],"content":"The object referenced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object referenced by <code>index</code>."},{"pos":[11436,11512],"content":"Gets an <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object by name.","needQuote":true,"needEscape":true,"source":"Gets an <xref href=\"System.Web.HttpApplicationState\"></xref> object by name."},{"pos":[11525,11926],"content":"The following example returns an object named MyAppVar1 from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.      ```vb#   Dim MyObject As Object   MyObject = Application.Get(\"MyAppVar1\")   ```      ```c#   Object MyObject;   MyObject = Application.Get(\"MyAppVar1\");   ```","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following example returns an object named MyAppVar1 from the &lt;xref:System.Web.HttpApplicationState&gt; collection of the intrinsic &lt;xref:System.Web.HttpContext.Application%2A&gt; object and copies it to a new object variable.","pos":[0,223],"source":"The following example returns an object named MyAppVar1 from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable."},{"content":"<ph id=\"ph1\">```vb#   Dim MyObject As Object   MyObject = Application.Get(\"MyAppVar1\")   ```</ph>      <ph id=\"ph2\">```c#   Object MyObject;   MyObject = Application.Get(\"MyAppVar1\");   ```</ph>","pos":[229,387],"source":"```vb#   Dim MyObject As Object   MyObject = Application.Get(\"MyAppVar1\")   ```      ```c#   Object MyObject;   MyObject = Application.Get(\"MyAppVar1\");   ```"}]},{"pos":[12060,12083],"content":"The name of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the object.","pos":[0,23]}]},{"pos":[12141,12184],"content":"The object referenced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object referenced by <code>name</code>."},{"pos":[12633,12715],"content":"Gets an <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object name by index.","needQuote":true,"needEscape":true,"source":"Gets an <xref href=\"System.Web.HttpApplicationState\"></xref> object name by index."},{"pos":[13262,13304],"content":"The index of the application state object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the application state object.","pos":[0,42]}]},{"pos":[13362,13422],"content":"The name under which the application state object was saved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name under which the application state object was saved.","pos":[0,60]}]},{"pos":[13866,13949],"content":"Gets a single <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object by index.","needQuote":true,"needEscape":true,"source":"Gets a single <xref href=\"System.Web.HttpApplicationState\"></xref> object by index."},{"pos":[14591,14643],"content":"The numerical index of the object in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The numerical index of the object in the collection.","pos":[0,52]}]},{"pos":[14701,14745],"content":"The object referenced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object referenced by <code>index</code>."},{"pos":[15192,15287],"content":"Gets the value of a single <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object by name.","needQuote":true,"needEscape":true,"source":"Gets the value of a single <xref href=\"System.Web.HttpApplicationState\"></xref> object by name."},{"pos":[15933,15974],"content":"The name of the object in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the object in the collection.","pos":[0,41]}]},{"pos":[16032,16075],"content":"The object referenced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object referenced by <code>name</code>."},{"pos":[16472,16590],"content":"Locks access to an <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> variable to facilitate access synchronization.","needQuote":true,"needEscape":true,"source":"Locks access to an <xref href=\"System.Web.HttpApplicationState\"></xref> variable to facilitate access synchronization."},{"pos":[16602,17330],"content":"The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods. However, explicitly using the Lock and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods. However, explicitly using the Lock and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.","pos":[0,728],"nodes":[{"content":"The &lt;xref:System.Web.HttpApplicationState&gt; class performs automatic locking and unlocking with the &lt;xref:System.Web.HttpApplicationState.AllKeys%2A&gt; and &lt;xref:System.Web.HttpApplicationState.Count%2A&gt; properties and the &lt;xref:System.Web.HttpApplicationState.Add%2A&gt;, &lt;xref:System.Web.HttpApplicationState.Clear%2A&gt;, &lt;xref:System.Web.HttpApplicationState.Get%2A&gt;, &lt;xref:System.Web.HttpApplicationState.GetKey%2A&gt;, &lt;xref:System.Web.HttpApplicationState.Remove%2A&gt;, &lt;xref:System.Web.HttpApplicationState.RemoveAt%2A&gt; and &lt;xref:System.Web.HttpApplicationState.Set%2A&gt; methods.","pos":[0,572],"source":"The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods."},{"content":"However, explicitly using the Lock and &lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt; methods when you have a series of operations may be more efficient.","pos":[573,728],"source":" However, explicitly using the Lock and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient."}]}]},{"pos":[18338,18435],"content":"Removes the named object from an <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Removes the named object from an <xref href=\"System.Web.HttpApplicationState\"></xref> collection."},{"pos":[18929,18986],"content":"The name of the object to be removed from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the object to be removed from the collection.","pos":[0,57]}]},{"pos":[19410,19502],"content":"Removes all objects from an <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Removes all objects from an <xref href=\"System.Web.HttpApplicationState\"></xref> collection."},{"pos":[19514,19595],"content":"RemoveAll is an internal call to <xref:System.Web.HttpApplicationState.Clear%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"RemoveAll is an internal call to &lt;xref:System.Web.HttpApplicationState.Clear%2A&gt;.","pos":[0,81],"source":"RemoveAll is an internal call to <xref:System.Web.HttpApplicationState.Clear%2A>."}]},{"pos":[20502,20600],"content":"Removes an <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object from a collection by index.","needQuote":true,"needEscape":true,"source":"Removes an <xref href=\"System.Web.HttpApplicationState\"></xref> object from a collection by index."},{"pos":[21208,21261],"content":"The position in the collection of the item to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position in the collection of the item to remove.","pos":[0,53]}]},{"pos":[21754,21855],"content":"Updates the value of an object in an <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection.","needQuote":true,"needEscape":true,"source":"Updates the value of an object in an <xref href=\"System.Web.HttpApplicationState\"></xref> collection."},{"pos":[22355,22392],"content":"The name of the object to be updated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the object to be updated.","pos":[0,37]}]},{"pos":[22454,22486],"content":"The updated value of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The updated value of the object.","pos":[0,32]}]},{"pos":[22923,23111],"content":"Gets all objects declared by an <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_&amp;lt;object&amp;gt;\" name=\"&amp;lt;object&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> tag where the scope is set to \"Application\" within the ASP.NET application.","needQuote":true,"needEscape":true,"source":"Gets all objects declared by an <xref uid=\"langword_csharp_&lt;object&gt;\" name=\"&lt;object&gt;\" href=\"\"></xref> tag where the scope is set to \"Application\" within the ASP.NET application."},{"pos":[23123,23251],"content":"Application objects are defined in the Global.asax file inside the <ph id=\"ph1\">`&lt;object runat=\"server\" scope=\"Application\"&gt; &lt;/object&gt;`</ph> tags.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Application objects are defined in the Global.asax file inside the `<object runat=\"server\" scope=\"Application\"> </object>` tags."},{"pos":[23889,23925],"content":"A collection of objects on the page.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of objects on the page.","pos":[0,36]}]},{"pos":[24341,24461],"content":"Unlocks access to an <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> variable to facilitate access synchronization.","needQuote":true,"needEscape":true,"source":"Unlocks access to an <xref href=\"System.Web.HttpApplicationState\"></xref> variable to facilitate access synchronization."},{"pos":[24473,25201],"content":"The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods. However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and UnLock methods when you have a series of operations may be more efficient.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods. However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and UnLock methods when you have a series of operations may be more efficient.","pos":[0,728],"nodes":[{"content":"The &lt;xref:System.Web.HttpApplicationState&gt; class performs automatic locking and unlocking with the &lt;xref:System.Web.HttpApplicationState.AllKeys%2A&gt; and &lt;xref:System.Web.HttpApplicationState.Count%2A&gt; properties and the &lt;xref:System.Web.HttpApplicationState.Add%2A&gt;, &lt;xref:System.Web.HttpApplicationState.Clear%2A&gt;, &lt;xref:System.Web.HttpApplicationState.Get%2A&gt;, &lt;xref:System.Web.HttpApplicationState.GetKey%2A&gt;, &lt;xref:System.Web.HttpApplicationState.Remove%2A&gt;, &lt;xref:System.Web.HttpApplicationState.RemoveAt%2A&gt; and &lt;xref:System.Web.HttpApplicationState.Set%2A&gt; methods.","pos":[0,572],"source":"The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods."},{"content":"However, explicitly using the &lt;xref:System.Web.HttpApplicationState.Lock%2A&gt; and UnLock methods when you have a series of operations may be more efficient.","pos":[573,728],"source":" However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and UnLock methods when you have a series of operations may be more efficient."}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.HttpApplicationState\n  id: HttpApplicationState\n  children:\n  - System.Web.HttpApplicationState.Add(System.String,System.Object)\n  - System.Web.HttpApplicationState.AllKeys\n  - System.Web.HttpApplicationState.Clear\n  - System.Web.HttpApplicationState.Contents\n  - System.Web.HttpApplicationState.Count\n  - System.Web.HttpApplicationState.Get(System.Int32)\n  - System.Web.HttpApplicationState.Get(System.String)\n  - System.Web.HttpApplicationState.GetKey(System.Int32)\n  - System.Web.HttpApplicationState.Item(System.Int32)\n  - System.Web.HttpApplicationState.Item(System.String)\n  - System.Web.HttpApplicationState.Lock\n  - System.Web.HttpApplicationState.Remove(System.String)\n  - System.Web.HttpApplicationState.RemoveAll\n  - System.Web.HttpApplicationState.RemoveAt(System.Int32)\n  - System.Web.HttpApplicationState.Set(System.String,System.Object)\n  - System.Web.HttpApplicationState.StaticObjects\n  - System.Web.HttpApplicationState.UnLock\n  langs:\n  - csharp\n  name: HttpApplicationState\n  nameWithType: HttpApplicationState\n  fullName: System.Web.HttpApplicationState\n  type: Class\n  summary: Enables sharing of global information across multiple sessions and requests within an ASP.NET application.\n  remarks: \"An ASP.NET application is the sum of all files, pages, handlers, modules, and code within the scope of a virtual directory and its subdirectories on a single Web server.  \\n  \\n A single instance of an HttpApplicationState class is created the first time a client requests any URL resource from within a particular ASP.NET application virtual directory. A separate single instance is created for each ASP.NET application on a Web server. A reference to each instance is then exposed via the intrinsic <xref:System.Web.HttpContext.Application%2A> object.  \\n  \\n Application state is not shared across either a Web farm (in which an application is hosted across multiple servers) or a Web garden (in which an application is hosted across multiple processes on the same computer).\"\n  syntax:\n    content: 'public sealed class HttpApplicationState : System.Collections.Specialized.NameObjectCollectionBase'\n  inheritance:\n  - System.Object\n  - System.Collections.Specialized.NameObjectCollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator\n  - System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly\n  - System.Collections.Specialized.NameObjectCollectionBase.Keys\n  - System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot\n  platform:\n  - net462\n- uid: System.Web.HttpApplicationState.Add(System.String,System.Object)\n  id: Add(System.String,System.Object)\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Add(String,Object)\n  nameWithType: HttpApplicationState.Add(String,Object)\n  fullName: System.Web.HttpApplicationState.Add(String,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds a new object to the <xref href=\"System.Web.HttpApplicationState\"></xref> collection.\n  remarks: ''\n  example:\n  - \"The following example adds two application variables named MyAppVar1 and MyAppVar2 to the Application collection.  \\n  \\n [!code-cs[Classic HttpApplicationState.Add Example#1](~/add/codesnippet/csharp/m-system.web.httpapplica_8_1.cs)]\\n [!code-vb[Classic HttpApplicationState.Add Example#1](~/add/codesnippet/visualbasic/m-system.web.httpapplica_8_1.vb)]\"\n  syntax:\n    content: public void Add (string name, object value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the object to be added to the collection.\n    - id: value\n      type: System.Object\n      description: The value of the object.\n  overload: System.Web.HttpApplicationState.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpApplicationState.AllKeys\n  id: AllKeys\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: AllKeys\n  nameWithType: HttpApplicationState.AllKeys\n  fullName: System.Web.HttpApplicationState.AllKeys\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the access keys in the <xref href=\"System.Web.HttpApplicationState\"></xref> collection.\n  remarks: ''\n  example:\n  - \"The following example fills a string array with all the object names in the application state collection.  \\n  \\n [!code-cs[Classic HttpApplicationState.AllKeys Example#1](~/add/codesnippet/csharp/p-system.web.httpapplica_1_1.cs)]\\n [!code-vb[Classic HttpApplicationState.AllKeys Example#1](~/add/codesnippet/visualbasic/p-system.web.httpapplica_1_1.vb)]\"\n  syntax:\n    content: public string[] AllKeys { get; }\n    return:\n      type: System.String[]\n      description: A string array of <xref href=\"System.Web.HttpApplicationState\"></xref> object names.\n  overload: System.Web.HttpApplicationState.AllKeys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpApplicationState.Clear\n  id: Clear\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: HttpApplicationState.Clear()\n  fullName: System.Web.HttpApplicationState.Clear()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Removes all objects from an <xref href=\"System.Web.HttpApplicationState\"></xref> collection.\n  remarks: ''\n  example:\n  - \"The following example removes all <xref:System.Web.HttpApplicationState> variables from the collection.  \\n  \\n [!code-vb[Classic HttpApplicationState.Clear Example#1](~/add/codesnippet/visualbasic/m-system.web.httpapplica_0_1.vb)]\\n [!code-cs[Classic HttpApplicationState.Clear Example#1](~/add/codesnippet/csharp/m-system.web.httpapplica_0_1.cs)]\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Web.HttpApplicationState.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpApplicationState.Contents\n  id: Contents\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Contents\n  nameWithType: HttpApplicationState.Contents\n  fullName: System.Web.HttpApplicationState.Contents\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a reference to the <xref href=\"System.Web.HttpApplicationState\"></xref> object.\n  remarks: This property provides compatibility with earlier versions of ASP.\n  example:\n  - \"The following example creates a new <xref:System.Web.HttpApplicationState> object that is used to access the object names in the application state collection.  \\n  \\n [!code-cs[Classic HttpApplicationState.Contents Example#1](~/add/codesnippet/csharp/p-system.web.httpapplica_5_1.cs)]\\n [!code-vb[Classic HttpApplicationState.Contents Example#1](~/add/codesnippet/visualbasic/p-system.web.httpapplica_5_1.vb)]\"\n  syntax:\n    content: public System.Web.HttpApplicationState Contents { get; }\n    return:\n      type: System.Web.HttpApplicationState\n      description: A reference to the <xref href=\"System.Web.HttpApplicationState\"></xref> object.\n  overload: System.Web.HttpApplicationState.Contents*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpApplicationState.Count\n  id: Count\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Count\n  nameWithType: HttpApplicationState.Count\n  fullName: System.Web.HttpApplicationState.Count\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the number of objects in the <xref href=\"System.Web.HttpApplicationState\"></xref> collection.\n  remarks: ''\n  example:\n  - \"The following example executes only if the number of objects in the collection exceeds five.  \\n  \\n [!code-cs[Classic HttpApplicationState.Count Example#1](~/add/codesnippet/csharp/p-system.web.httpapplica_3_1.cs)]\\n [!code-vb[Classic HttpApplicationState.Count Example#1](~/add/codesnippet/visualbasic/p-system.web.httpapplica_3_1.vb)]\"\n  syntax:\n    content: public override int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of item objects in the collection. The default is 0.\n  overload: System.Web.HttpApplicationState.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpApplicationState.Get(System.Int32)\n  id: Get(System.Int32)\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Get(Int32)\n  nameWithType: HttpApplicationState.Get(Int32)\n  fullName: System.Web.HttpApplicationState.Get(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets an <xref href=\"System.Web.HttpApplicationState\"></xref> object by numerical index.\n  remarks: ''\n  example:\n  - \"The following example returns the first object (index = 0) from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.  \\n  \\n [!code-cs[Classic HttpApplicationState.Get1 Example#1](~/add/codesnippet/csharp/m-system.web.httpapplica_9_1.cs)]\\n [!code-vb[Classic HttpApplicationState.Get1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpapplica_9_1.vb)]\"\n  syntax:\n    content: public object Get (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the application state object.\n    return:\n      type: System.Object\n      description: The object referenced by <code>index</code>.\n  overload: System.Web.HttpApplicationState.Get*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpApplicationState.Get(System.String)\n  id: Get(System.String)\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Get(String)\n  nameWithType: HttpApplicationState.Get(String)\n  fullName: System.Web.HttpApplicationState.Get(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets an <xref href=\"System.Web.HttpApplicationState\"></xref> object by name.\n  remarks: \"The following example returns an object named MyAppVar1 from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.  \\n  \\n```vb#  \\nDim MyObject As Object  \\nMyObject = Application.Get(\\\"MyAppVar1\\\")  \\n```  \\n  \\n```c#  \\nObject MyObject;  \\nMyObject = Application.Get(\\\"MyAppVar1\\\");  \\n```\"\n  syntax:\n    content: public object Get (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the object.\n    return:\n      type: System.Object\n      description: The object referenced by <code>name</code>.\n  overload: System.Web.HttpApplicationState.Get*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpApplicationState.GetKey(System.Int32)\n  id: GetKey(System.Int32)\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: GetKey(Int32)\n  nameWithType: HttpApplicationState.GetKey(Int32)\n  fullName: System.Web.HttpApplicationState.GetKey(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets an <xref href=\"System.Web.HttpApplicationState\"></xref> object name by index.\n  remarks: ''\n  example:\n  - \"The following example returns the names of all the objects in the application state collection and stores the names in a string array.  \\n  \\n [!code-cs[Classic HttpApplicationState.GetKey Example#1](~/add/codesnippet/csharp/m-system.web.httpapplica_3_1.cs)]\\n [!code-vb[Classic HttpApplicationState.GetKey Example#1](~/add/codesnippet/visualbasic/m-system.web.httpapplica_3_1.vb)]\"\n  syntax:\n    content: public string GetKey (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the application state object.\n    return:\n      type: System.String\n      description: The name under which the application state object was saved.\n  overload: System.Web.HttpApplicationState.GetKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpApplicationState.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: HttpApplicationState.Item(Int32)\n  fullName: System.Web.HttpApplicationState.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a single <xref href=\"System.Web.HttpApplicationState\"></xref> object by index.\n  remarks: ''\n  example:\n  - \"The following example returns the first object (index = 0) from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.  \\n  \\n [!code-vb[Classic HttpApplicationState.this1 Example#1](~/add/codesnippet/visualbasic/p-system.web.httpapplica_4_1.vb)]\\n [!code-cs[Classic HttpApplicationState.this1 Example#1](~/add/codesnippet/csharp/p-system.web.httpapplica_4_1.cs)]\"\n  syntax:\n    content: public object this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The numerical index of the object in the collection.\n    return:\n      type: System.Object\n      description: The object referenced by <code>index</code>.\n  overload: System.Web.HttpApplicationState.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpApplicationState.Item(System.String)\n  id: Item(System.String)\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: HttpApplicationState.Item(String)\n  fullName: System.Web.HttpApplicationState.Item(String)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the value of a single <xref href=\"System.Web.HttpApplicationState\"></xref> object by name.\n  remarks: ''\n  example:\n  - \"The following example returns an object named `MyAppVar1` from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.  \\n  \\n [!code-cs[Classic HttpApplicationState.this Example#1](~/add/codesnippet/csharp/p-system.web.httpapplica_0_1.cs)]\\n [!code-vb[Classic HttpApplicationState.this Example#1](~/add/codesnippet/visualbasic/p-system.web.httpapplica_0_1.vb)]\"\n  syntax:\n    content: public object this[string name] { get; set; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the object in the collection.\n    return:\n      type: System.Object\n      description: The object referenced by <code>name</code>.\n  overload: System.Web.HttpApplicationState.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpApplicationState.Lock\n  id: Lock\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Lock()\n  nameWithType: HttpApplicationState.Lock()\n  fullName: System.Web.HttpApplicationState.Lock()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Locks access to an <xref href=\"System.Web.HttpApplicationState\"></xref> variable to facilitate access synchronization.\n  remarks: The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods. However, explicitly using the Lock and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.\n  example:\n  - \"The following example uses the Lock method and <xref:System.Web.HttpApplicationState.UnLock%2A> method to prevent other sessions from changing the value of two application variables until after the local session has changed them.  \\n  \\n [!code-cs[Classic HttpApplicationState.Lock Example#1](~/add/codesnippet/csharp/m-system.web.httpapplica_7_1.cs)]\\n [!code-vb[Classic HttpApplicationState.Lock Example#1](~/add/codesnippet/visualbasic/m-system.web.httpapplica_7_1.vb)]\"\n  syntax:\n    content: public void Lock ();\n    parameters: []\n  overload: System.Web.HttpApplicationState.Lock*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpApplicationState.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: HttpApplicationState.Remove(String)\n  fullName: System.Web.HttpApplicationState.Remove(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Removes the named object from an <xref href=\"System.Web.HttpApplicationState\"></xref> collection.\n  remarks: ''\n  example:\n  - \"The following example removes one application state variable from the collection.  \\n  \\n [!code-vb[Classic HttpApplicationState.Remove Example#1](~/add/codesnippet/visualbasic/m-system.web.httpapplica_1_1.vb)]\\n [!code-cs[Classic HttpApplicationState.Remove Example#1](~/add/codesnippet/csharp/m-system.web.httpapplica_1_1.cs)]\"\n  syntax:\n    content: public void Remove (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the object to be removed from the collection.\n  overload: System.Web.HttpApplicationState.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpApplicationState.RemoveAll\n  id: RemoveAll\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: RemoveAll()\n  nameWithType: HttpApplicationState.RemoveAll()\n  fullName: System.Web.HttpApplicationState.RemoveAll()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Removes all objects from an <xref href=\"System.Web.HttpApplicationState\"></xref> collection.\n  remarks: RemoveAll is an internal call to <xref:System.Web.HttpApplicationState.Clear%2A>.\n  example:\n  - \"The following example removes all <xref:System.Web.HttpApplicationState> variables from the collection.  \\n  \\n [!code-cs[Classic HttpApplicationState.RemoveAll Example#1](~/add/codesnippet/csharp/m-system.web.httpapplica_2_1.cs)]\\n [!code-vb[Classic HttpApplicationState.RemoveAll Example#1](~/add/codesnippet/visualbasic/m-system.web.httpapplica_2_1.vb)]\"\n  syntax:\n    content: public void RemoveAll ();\n    parameters: []\n  overload: System.Web.HttpApplicationState.RemoveAll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpApplicationState.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: HttpApplicationState.RemoveAt(Int32)\n  fullName: System.Web.HttpApplicationState.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Removes an <xref href=\"System.Web.HttpApplicationState\"></xref> object from a collection by index.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to insert two application variables into the collection, and then use the RemoveAt method to remove the first variable in a custom <xref:System.Web.HttpApplicationState> object.  \\n  \\n [!code-vb[HttpApplicationStateRemoveAt#1](~/add/codesnippet/visualbasic/m-system.web.httpapplica_4_1.aspx)]\\n [!code-cs[HttpApplicationStateRemoveAt#1](~/add/codesnippet/csharp/m-system.web.httpapplica_4_1.aspx)]\"\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The position in the collection of the item to remove.\n  overload: System.Web.HttpApplicationState.RemoveAt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpApplicationState.Set(System.String,System.Object)\n  id: Set(System.String,System.Object)\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Set(String,Object)\n  nameWithType: HttpApplicationState.Set(String,Object)\n  fullName: System.Web.HttpApplicationState.Set(String,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Updates the value of an object in an <xref href=\"System.Web.HttpApplicationState\"></xref> collection.\n  remarks: ''\n  example:\n  - \"The following example updates the value of an existing application state variable.  \\n  \\n [!code-cs[Classic HttpApplicationState.Set Example#1](~/add/codesnippet/csharp/m-system.web.httpapplica_5_1.cs)]\\n [!code-vb[Classic HttpApplicationState.Set Example#1](~/add/codesnippet/visualbasic/m-system.web.httpapplica_5_1.vb)]\"\n  syntax:\n    content: public void Set (string name, object value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the object to be updated.\n    - id: value\n      type: System.Object\n      description: The updated value of the object.\n  overload: System.Web.HttpApplicationState.Set*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpApplicationState.StaticObjects\n  id: StaticObjects\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: StaticObjects\n  nameWithType: HttpApplicationState.StaticObjects\n  fullName: System.Web.HttpApplicationState.StaticObjects\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets all objects declared by an <xref uid=\"langword_csharp_&lt;object&gt;\" name=\"&lt;object&gt;\" href=\"\"></xref> tag where the scope is set to \"Application\" within the ASP.NET application.\n  remarks: Application objects are defined in the Global.asax file inside the `<object runat=\"server\" scope=\"Application\"> </object>` tags.\n  example:\n  - \"The following example gets all application objects into a <xref:System.Web.HttpStaticObjectsCollection> variable and executes a routine only if the number of objects is greater than 0.  \\n  \\n [!code-cs[Classic HttpApplicationState.StaticObjects Example#1](~/add/codesnippet/csharp/p-system.web.httpapplica_2_1.cs)]\\n [!code-vb[Classic HttpApplicationState.StaticObjects Example#1](~/add/codesnippet/visualbasic/p-system.web.httpapplica_2_1.vb)]\"\n  syntax:\n    content: public System.Web.HttpStaticObjectsCollection StaticObjects { get; }\n    return:\n      type: System.Web.HttpStaticObjectsCollection\n      description: A collection of objects on the page.\n  overload: System.Web.HttpApplicationState.StaticObjects*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpApplicationState.UnLock\n  id: UnLock\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: UnLock()\n  nameWithType: HttpApplicationState.UnLock()\n  fullName: System.Web.HttpApplicationState.UnLock()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Unlocks access to an <xref href=\"System.Web.HttpApplicationState\"></xref> variable to facilitate access synchronization.\n  remarks: The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods. However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and UnLock methods when you have a series of operations may be more efficient.\n  example:\n  - \"The following example uses the <xref:System.Web.HttpApplicationState.Lock%2A> method and UnLock method to prevent other sessions from changing the value of two application variables until after the local session has changed them.  \\n  \\n [!code-cs[Classic HttpApplicationState.Lock Example#1](~/add/codesnippet/csharp/m-system.web.httpapplica_6_1.cs)]\\n [!code-vb[Classic HttpApplicationState.Lock Example#1](~/add/codesnippet/visualbasic/m-system.web.httpapplica_6_1.vb)]\"\n  syntax:\n    content: public void UnLock ();\n    parameters: []\n  overload: System.Web.HttpApplicationState.UnLock*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: System.Collections.Specialized.NameObjectCollectionBase\n- uid: System.Web.HttpApplicationState.Add(System.String,System.Object)\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Add(String,Object)\n  nameWithType: HttpApplicationState.Add(String,Object)\n  fullName: System.Web.HttpApplicationState.Add(String,Object)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.HttpApplicationState.AllKeys\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: AllKeys\n  nameWithType: HttpApplicationState.AllKeys\n  fullName: System.Web.HttpApplicationState.AllKeys\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.HttpApplicationState.Clear\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Clear()\n  nameWithType: HttpApplicationState.Clear()\n  fullName: System.Web.HttpApplicationState.Clear()\n- uid: System.Web.HttpApplicationState.Contents\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Contents\n  nameWithType: HttpApplicationState.Contents\n  fullName: System.Web.HttpApplicationState.Contents\n- uid: System.Web.HttpApplicationState\n  parent: System.Web\n  isExternal: false\n  name: HttpApplicationState\n  nameWithType: HttpApplicationState\n  fullName: System.Web.HttpApplicationState\n- uid: System.Web.HttpApplicationState.Count\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Count\n  nameWithType: HttpApplicationState.Count\n  fullName: System.Web.HttpApplicationState.Count\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.HttpApplicationState.Get(System.Int32)\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Get(Int32)\n  nameWithType: HttpApplicationState.Get(Int32)\n  fullName: System.Web.HttpApplicationState.Get(Int32)\n- uid: System.Web.HttpApplicationState.Get(System.String)\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Get(String)\n  nameWithType: HttpApplicationState.Get(String)\n  fullName: System.Web.HttpApplicationState.Get(String)\n- uid: System.Web.HttpApplicationState.GetKey(System.Int32)\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: GetKey(Int32)\n  nameWithType: HttpApplicationState.GetKey(Int32)\n  fullName: System.Web.HttpApplicationState.GetKey(Int32)\n- uid: System.Web.HttpApplicationState.Item(System.Int32)\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: HttpApplicationState.Item(Int32)\n  fullName: System.Web.HttpApplicationState.Item(Int32)\n- uid: System.Web.HttpApplicationState.Item(System.String)\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Item(String)\n  nameWithType: HttpApplicationState.Item(String)\n  fullName: System.Web.HttpApplicationState.Item(String)\n- uid: System.Web.HttpApplicationState.Lock\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Lock()\n  nameWithType: HttpApplicationState.Lock()\n  fullName: System.Web.HttpApplicationState.Lock()\n- uid: System.Web.HttpApplicationState.Remove(System.String)\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Remove(String)\n  nameWithType: HttpApplicationState.Remove(String)\n  fullName: System.Web.HttpApplicationState.Remove(String)\n- uid: System.Web.HttpApplicationState.RemoveAll\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: RemoveAll()\n  nameWithType: HttpApplicationState.RemoveAll()\n  fullName: System.Web.HttpApplicationState.RemoveAll()\n- uid: System.Web.HttpApplicationState.RemoveAt(System.Int32)\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: HttpApplicationState.RemoveAt(Int32)\n  fullName: System.Web.HttpApplicationState.RemoveAt(Int32)\n- uid: System.Web.HttpApplicationState.Set(System.String,System.Object)\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Set(String,Object)\n  nameWithType: HttpApplicationState.Set(String,Object)\n  fullName: System.Web.HttpApplicationState.Set(String,Object)\n- uid: System.Web.HttpApplicationState.StaticObjects\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: StaticObjects\n  nameWithType: HttpApplicationState.StaticObjects\n  fullName: System.Web.HttpApplicationState.StaticObjects\n- uid: System.Web.HttpStaticObjectsCollection\n  parent: System.Web\n  isExternal: false\n  name: HttpStaticObjectsCollection\n  nameWithType: HttpStaticObjectsCollection\n  fullName: System.Web.HttpStaticObjectsCollection\n- uid: System.Web.HttpApplicationState.UnLock\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: UnLock()\n  nameWithType: HttpApplicationState.UnLock()\n  fullName: System.Web.HttpApplicationState.UnLock()\n- uid: System.Web.HttpApplicationState.Add*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Add\n  nameWithType: HttpApplicationState.Add\n- uid: System.Web.HttpApplicationState.AllKeys*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: AllKeys\n  nameWithType: HttpApplicationState.AllKeys\n- uid: System.Web.HttpApplicationState.Clear*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Clear\n  nameWithType: HttpApplicationState.Clear\n- uid: System.Web.HttpApplicationState.Contents*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Contents\n  nameWithType: HttpApplicationState.Contents\n- uid: System.Web.HttpApplicationState.Count*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Count\n  nameWithType: HttpApplicationState.Count\n- uid: System.Web.HttpApplicationState.Get*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Get\n  nameWithType: HttpApplicationState.Get\n- uid: System.Web.HttpApplicationState.GetKey*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: GetKey\n  nameWithType: HttpApplicationState.GetKey\n- uid: System.Web.HttpApplicationState.Item*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Item\n  nameWithType: HttpApplicationState.Item\n- uid: System.Web.HttpApplicationState.Lock*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Lock\n  nameWithType: HttpApplicationState.Lock\n- uid: System.Web.HttpApplicationState.Remove*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Remove\n  nameWithType: HttpApplicationState.Remove\n- uid: System.Web.HttpApplicationState.RemoveAll*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: RemoveAll\n  nameWithType: HttpApplicationState.RemoveAll\n- uid: System.Web.HttpApplicationState.RemoveAt*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: RemoveAt\n  nameWithType: HttpApplicationState.RemoveAt\n- uid: System.Web.HttpApplicationState.Set*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Set\n  nameWithType: HttpApplicationState.Set\n- uid: System.Web.HttpApplicationState.StaticObjects*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: StaticObjects\n  nameWithType: HttpApplicationState.StaticObjects\n- uid: System.Web.HttpApplicationState.UnLock*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: UnLock\n  nameWithType: HttpApplicationState.UnLock\n"}