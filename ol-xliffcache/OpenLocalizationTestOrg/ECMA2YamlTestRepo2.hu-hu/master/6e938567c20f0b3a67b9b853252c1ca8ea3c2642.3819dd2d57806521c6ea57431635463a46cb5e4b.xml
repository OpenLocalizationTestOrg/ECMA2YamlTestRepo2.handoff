{"nodes":[{"pos":[778,867],"content":"Provides methods and fields to manage the input language. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides methods and fields to manage the input language. This class cannot be inherited.","pos":[0,89],"nodes":[{"content":"Provides methods and fields to manage the input language.","pos":[0,57]},{"content":"This class cannot be inherited.","pos":[58,89]}]}]},{"pos":[880,1914],"content":"An input language is a culture/keyboard layout pair that determines how the physical keys on a keyboard map or plot to characters in a language. The input language is based on a Windows input locale identifier, such as that returned by the Platform SDK function, `GetKeyboardLayout`. The input locale identifier is also called a handle to a keyboard layout (HKL) value.       Use the `static` methods provided to find all installed mappings of the system and to change the input language for a thread or process. Call <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> to get the current input language. Call <xref:System.Windows.Forms.InputLanguage.DefaultInputLanguage%2A> for the default input language. Call <xref:System.Windows.Forms.InputLanguage.InstalledInputLanguages%2A> to get all the installed languages in this system. After you have a list of all the installed languages, use <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> to change the current input language to a different language.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An input language is a culture/keyboard layout pair that determines how the physical keys on a keyboard map or plot to characters in a language.","pos":[0,144]},{"content":"The input language is based on a Windows input locale identifier, such as that returned by the Platform SDK function, <ph id=\"ph1\">`GetKeyboardLayout`</ph>.","pos":[145,283],"source":" The input language is based on a Windows input locale identifier, such as that returned by the Platform SDK function, `GetKeyboardLayout`."},{"content":"The input locale identifier is also called a handle to a keyboard layout (HKL) value.","pos":[284,369]},{"content":"Use the <ph id=\"ph1\">`static`</ph> methods provided to find all installed mappings of the system and to change the input language for a thread or process.","pos":[376,512],"source":"       Use the `static` methods provided to find all installed mappings of the system and to change the input language for a thread or process."},{"content":"Call &lt;xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A&gt; to get the current input language.","pos":[513,618],"source":" Call <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> to get the current input language."},{"content":"Call &lt;xref:System.Windows.Forms.InputLanguage.DefaultInputLanguage%2A&gt; for the default input language.","pos":[619,721],"source":" Call <xref:System.Windows.Forms.InputLanguage.DefaultInputLanguage%2A> for the default input language."},{"content":"Call &lt;xref:System.Windows.Forms.InputLanguage.InstalledInputLanguages%2A&gt; to get all the installed languages in this system.","pos":[722,846],"source":" Call <xref:System.Windows.Forms.InputLanguage.InstalledInputLanguages%2A> to get all the installed languages in this system."},{"content":"After you have a list of all the installed languages, use &lt;xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A&gt; to change the current input language to a different language.","pos":[847,1032],"source":" After you have a list of all the installed languages, use <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> to change the current input language to a different language."}]},{"pos":[3446,3493],"content":"Gets the culture of the current input language.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the culture of the current input language.","pos":[0,47]}]},{"pos":[4281,4381],"content":"A <xref:System.Globalization.CultureInfo> that represents the culture of the current input language.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Globalization.CultureInfo&gt; that represents the culture of the current input language.","pos":[0,100],"source":"A <xref:System.Globalization.CultureInfo> that represents the culture of the current input language."}]},{"pos":[4882,4937],"content":"Gets or sets the input language for the current thread.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the input language for the current thread.","pos":[0,55]}]},{"pos":[5684,5801],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.InputLanguage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the input language for the current thread.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Forms.InputLanguage\"></xref> that represents the input language for the current thread."},{"pos":[5979,6030],"content":"The input language is not recognized by the system.","needQuote":true,"needEscape":true,"nodes":[{"content":"The input language is not recognized by the system.","pos":[0,51]}]},{"pos":[6458,6505],"content":"Gets the default input language for the system.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default input language for the system.","pos":[0,47]}]},{"pos":[7256,7370],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.InputLanguage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> representing the default input language for the system.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Forms.InputLanguage\"></xref> representing the default input language for the system."},{"pos":[7866,7914],"content":"Specifies whether two input languages are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether two input languages are equal.","pos":[0,48]}]},{"pos":[8059,8093],"content":"The language to test for equality.","needQuote":true,"needEscape":true,"nodes":[{"content":"The language to test for equality.","pos":[0,34]}]},{"pos":[8152,8319],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two languages are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two languages are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8879,8944],"content":"Returns the input language associated with the specified culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the input language associated with the specified culture.","pos":[0,65]}]},{"pos":[8957,9700],"content":"The FromCulture method selects from among installed keyboards. Specifically, this method performs the following operations:      1.  Gets the LCID associated with `culture`.      2.  Gets the full list of available input language identifiers (HKLs) from the `GetKeyboardLayoutList` function.      3.  Finds the HKL that corresponds to the LCID from `culture`, if one is present.      4.  Returns the installed keyboard associated with that HKL.      5.  If no keyboard is found, returns `null`.      > [!NOTE] >  The FromCulture method never tries to load or install an additional keyboard if one has not already been installed for `culture`. Use the Platform SDK function, `LoadKeyboardLayout`, to install an additional keyboard.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The FromCulture method selects from among installed keyboards.","pos":[0,62]},{"content":"Specifically, this method performs the following operations:      1.","pos":[63,131]},{"content":"Gets the LCID associated with <ph id=\"ph1\">`culture`</ph>.","pos":[133,173],"source":"  Gets the LCID associated with `culture`."},{"content":"2.","pos":[179,181]},{"content":"Gets the full list of available input language identifiers (HKLs) from the <ph id=\"ph1\">`GetKeyboardLayoutList`</ph> function.","pos":[183,291],"source":"  Gets the full list of available input language identifiers (HKLs) from the `GetKeyboardLayoutList` function."},{"content":"3.","pos":[297,299]},{"content":"Finds the HKL that corresponds to the LCID from <ph id=\"ph1\">`culture`</ph>, if one is present.","pos":[301,378],"source":"  Finds the HKL that corresponds to the LCID from `culture`, if one is present."},{"content":"4.","pos":[384,386]},{"content":"Returns the installed keyboard associated with that HKL.","pos":[388,444]},{"content":"5.","pos":[450,452]},{"content":"If no keyboard is found, returns <ph id=\"ph1\">`null`</ph>.","pos":[454,494],"source":"  If no keyboard is found, returns `null`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The FromCulture method never tries to load or install an additional keyboard if one has not already been installed for <ph id=\"ph2\">`culture`</ph>.","pos":[500,642],"source":"      > [!NOTE] >  The FromCulture method never tries to load or install an additional keyboard if one has not already been installed for `culture`."},{"content":"Use the Platform SDK function, <ph id=\"ph1\">`LoadKeyboardLayout`</ph>, to install an additional keyboard.","pos":[643,730],"source":" Use the Platform SDK function, `LoadKeyboardLayout`, to install an additional keyboard."}]},{"pos":[10957,11044],"content":"The <xref:System.Globalization.CultureInfo> that specifies the culture to convert from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Globalization.CultureInfo&gt; that specifies the culture to convert from.","pos":[0,87],"source":"The <xref:System.Globalization.CultureInfo> that specifies the culture to convert from."}]},{"pos":[11123,11237],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.InputLanguage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the previously selected input language.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Forms.InputLanguage\"></xref> that represents the previously selected input language."},{"pos":[11701,11747],"content":"Returns the hash code for this input language.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code for this input language.","pos":[0,46]}]},{"pos":[11882,11920],"content":"The hash code for this input language.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hash code for this input language.","pos":[0,38]}]},{"pos":[12355,12394],"content":"Gets the handle for the input language.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the handle for the input language.","pos":[0,39]}]},{"pos":[13079,13153],"content":"An <xref:System.IntPtr> that represents the handle of this input language.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IntPtr&gt; that represents the handle of this input language.","pos":[0,74],"source":"An <xref:System.IntPtr> that represents the handle of this input language."}]},{"pos":[13668,13713],"content":"Gets a list of all installed input languages.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a list of all installed input languages.","pos":[0,45]}]},{"pos":[14695,14832],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.InputLanguage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that represent the input languages installed on the computer.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Windows.Forms.InputLanguage\"></xref> objects that represent the input languages installed on the computer."},{"pos":[15299,15423],"content":"Gets the name of the current keyboard layout as it appears in the regional settings of the operating system on the computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the current keyboard layout as it appears in the regional settings of the operating system on the computer.","pos":[0,124]}]},{"pos":[16402,16425],"content":"The name of the layout.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the layout.","pos":[0,23]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.InputLanguage\n  id: InputLanguage\n  children:\n  - System.Windows.Forms.InputLanguage.Culture\n  - System.Windows.Forms.InputLanguage.CurrentInputLanguage\n  - System.Windows.Forms.InputLanguage.DefaultInputLanguage\n  - System.Windows.Forms.InputLanguage.Equals(System.Object)\n  - System.Windows.Forms.InputLanguage.FromCulture(System.Globalization.CultureInfo)\n  - System.Windows.Forms.InputLanguage.GetHashCode\n  - System.Windows.Forms.InputLanguage.Handle\n  - System.Windows.Forms.InputLanguage.InstalledInputLanguages\n  - System.Windows.Forms.InputLanguage.LayoutName\n  langs:\n  - csharp\n  name: InputLanguage\n  nameWithType: InputLanguage\n  fullName: System.Windows.Forms.InputLanguage\n  type: Class\n  summary: Provides methods and fields to manage the input language. This class cannot be inherited.\n  remarks: \"An input language is a culture/keyboard layout pair that determines how the physical keys on a keyboard map or plot to characters in a language. The input language is based on a Windows input locale identifier, such as that returned by the Platform SDK function, `GetKeyboardLayout`. The input locale identifier is also called a handle to a keyboard layout (HKL) value.  \\n  \\n Use the `static` methods provided to find all installed mappings of the system and to change the input language for a thread or process. Call <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> to get the current input language. Call <xref:System.Windows.Forms.InputLanguage.DefaultInputLanguage%2A> for the default input language. Call <xref:System.Windows.Forms.InputLanguage.InstalledInputLanguages%2A> to get all the installed languages in this system. After you have a list of all the installed languages, use <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> to change the current input language to a different language.\"\n  example:\n  - \"The following code example gets a list of installed languages. The example requires that `textBox1` has been instantiated and that `textBox1.MultiLine` has been set to `true`.  \\n  \\n [!code-cpp[Classic InputLanguage Example#1](~/add/codesnippet/cpp/t-system.windows.forms.i_2_1.cpp)]\\n [!code-vb[Classic InputLanguage Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.i_2_1.vb)]\\n [!code-cs[Classic InputLanguage Example#1](~/add/codesnippet/csharp/t-system.windows.forms.i_2_1.cs)]  \\n  \\n The next example sets the default input language as the current input language. The example requires that `textBox1` has been instantiated and that `textBox1.MultiLine` has been set to `true`.  \\n  \\n [!code-cpp[Classic InputLanguage Example#2](~/add/codesnippet/cpp/t-system.windows.forms.i_2_2.cpp)]\\n [!code-vb[Classic InputLanguage Example#2](~/add/codesnippet/visualbasic/t-system.windows.forms.i_2_2.vb)]\\n [!code-cs[Classic InputLanguage Example#2](~/add/codesnippet/csharp/t-system.windows.forms.i_2_2.cs)]\"\n  syntax:\n    content: public sealed class InputLanguage\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.InputLanguage.Culture\n  id: Culture\n  parent: System.Windows.Forms.InputLanguage\n  langs:\n  - csharp\n  name: Culture\n  nameWithType: InputLanguage.Culture\n  fullName: System.Windows.Forms.InputLanguage.Culture\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the culture of the current input language.\n  remarks: ''\n  example:\n  - \"The following code example gets the <xref:System.Windows.Forms.InputLanguage> for the current input language. A text box displays this input language and the name of the input language.  \\n  \\n This code assumes that `textBox1` has been instantiated.  \\n  \\n [!code-cpp[Classic InputLanguage.Culture Example#1](~/add/codesnippet/cpp/p-system.windows.forms.i_11_1.cpp)]\\n [!code-cs[Classic InputLanguage.Culture Example#1](~/add/codesnippet/csharp/p-system.windows.forms.i_11_1.cs)]\\n [!code-vb[Classic InputLanguage.Culture Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_11_1.vb)]\"\n  syntax:\n    content: public System.Globalization.CultureInfo Culture { get; }\n    return:\n      type: System.Globalization.CultureInfo\n      description: A <xref:System.Globalization.CultureInfo> that represents the culture of the current input language.\n  overload: System.Windows.Forms.InputLanguage.Culture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.InputLanguage.CurrentInputLanguage\n  id: CurrentInputLanguage\n  parent: System.Windows.Forms.InputLanguage\n  langs:\n  - csharp\n  name: CurrentInputLanguage\n  nameWithType: InputLanguage.CurrentInputLanguage\n  fullName: System.Windows.Forms.InputLanguage.CurrentInputLanguage\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the input language for the current thread.\n  remarks: ''\n  example:\n  - \"The following code example gets and displays the name of the current input language. This code assumes that `textBox1` has been instantiated.  \\n  \\n [!code-cpp[Classic InputLanguage.CurrentInputLanguage Example#1](~/add/codesnippet/cpp/p-system.windows.forms.i_10_1.cpp)]\\n [!code-cs[Classic InputLanguage.CurrentInputLanguage Example#1](~/add/codesnippet/csharp/p-system.windows.forms.i_10_1.cs)]\\n [!code-vb[Classic InputLanguage.CurrentInputLanguage Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_10_1.vb)]\"\n  syntax:\n    content: public static System.Windows.Forms.InputLanguage CurrentInputLanguage { get; set; }\n    return:\n      type: System.Windows.Forms.InputLanguage\n      description: An <xref href=\"System.Windows.Forms.InputLanguage\"></xref> that represents the input language for the current thread.\n  overload: System.Windows.Forms.InputLanguage.CurrentInputLanguage*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The input language is not recognized by the system.\n  platform:\n  - net462\n- uid: System.Windows.Forms.InputLanguage.DefaultInputLanguage\n  id: DefaultInputLanguage\n  parent: System.Windows.Forms.InputLanguage\n  langs:\n  - csharp\n  name: DefaultInputLanguage\n  nameWithType: InputLanguage.DefaultInputLanguage\n  fullName: System.Windows.Forms.InputLanguage.DefaultInputLanguage\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the default input language for the system.\n  remarks: ''\n  example:\n  - \"The following code example gets the default input language and prints its name in a text box. This code assumes that `textBox1` has been instantiated.  \\n  \\n [!code-cpp[Classic InputLanguage.DefaultInputLanguage Example#1](~/add/codesnippet/cpp/p-system.windows.forms.i_19_1.cpp)]\\n [!code-cs[Classic InputLanguage.DefaultInputLanguage Example#1](~/add/codesnippet/csharp/p-system.windows.forms.i_19_1.cs)]\\n [!code-vb[Classic InputLanguage.DefaultInputLanguage Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_19_1.vb)]\"\n  syntax:\n    content: public static System.Windows.Forms.InputLanguage DefaultInputLanguage { get; }\n    return:\n      type: System.Windows.Forms.InputLanguage\n      description: An <xref href=\"System.Windows.Forms.InputLanguage\"></xref> representing the default input language for the system.\n  overload: System.Windows.Forms.InputLanguage.DefaultInputLanguage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.InputLanguage.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Forms.InputLanguage\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: InputLanguage.Equals(Object)\n  fullName: System.Windows.Forms.InputLanguage.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Specifies whether two input languages are equal.\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The language to test for equality.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two languages are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.InputLanguage.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.InputLanguage.FromCulture(System.Globalization.CultureInfo)\n  id: FromCulture(System.Globalization.CultureInfo)\n  parent: System.Windows.Forms.InputLanguage\n  langs:\n  - csharp\n  name: FromCulture(CultureInfo)\n  nameWithType: InputLanguage.FromCulture(CultureInfo)\n  fullName: System.Windows.Forms.InputLanguage.FromCulture(CultureInfo)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Returns the input language associated with the specified culture.\n  remarks: \"The FromCulture method selects from among installed keyboards. Specifically, this method performs the following operations:  \\n  \\n1.  Gets the LCID associated with `culture`.  \\n  \\n2.  Gets the full list of available input language identifiers (HKLs) from the `GetKeyboardLayoutList` function.  \\n  \\n3.  Finds the HKL that corresponds to the LCID from `culture`, if one is present.  \\n  \\n4.  Returns the installed keyboard associated with that HKL.  \\n  \\n5.  If no keyboard is found, returns `null`.  \\n  \\n> [!NOTE]\\n>  The FromCulture method never tries to load or install an additional keyboard if one has not already been installed for `culture`. Use the Platform SDK function, `LoadKeyboardLayout`, to install an additional keyboard.\"\n  example:\n  - \"The following code example sets the default input language as the current input language.  \\n  \\n First, <xref:System.Windows.Forms.InputLanguage.DefaultInputLanguage%2A> is called to get the system default language. Next, <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> is called to get the current input language. The results are printed in a text box. Then, calling <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> with the default input language changes the current input language to the default. The new current input language is displayed in a text box.  \\n  \\n This code assumes that `textBox1` has been instantiated.  \\n  \\n [!code-cs[Classic InputLanguage.FromCulture Example#1](~/add/codesnippet/csharp/91c45c32-452b-417e-9efa-_1.cs)]\\n [!code-cpp[Classic InputLanguage.FromCulture Example#1](~/add/codesnippet/cpp/91c45c32-452b-417e-9efa-_1.cpp)]\\n [!code-vb[Classic InputLanguage.FromCulture Example#1](~/add/codesnippet/visualbasic/91c45c32-452b-417e-9efa-_1.vb)]\"\n  syntax:\n    content: public static System.Windows.Forms.InputLanguage FromCulture (System.Globalization.CultureInfo culture);\n    parameters:\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The <xref:System.Globalization.CultureInfo> that specifies the culture to convert from.\n    return:\n      type: System.Windows.Forms.InputLanguage\n      description: An <xref href=\"System.Windows.Forms.InputLanguage\"></xref> that represents the previously selected input language.\n  overload: System.Windows.Forms.InputLanguage.FromCulture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.InputLanguage.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Forms.InputLanguage\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: InputLanguage.GetHashCode()\n  fullName: System.Windows.Forms.InputLanguage.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Returns the hash code for this input language.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for this input language.\n  overload: System.Windows.Forms.InputLanguage.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.InputLanguage.Handle\n  id: Handle\n  parent: System.Windows.Forms.InputLanguage\n  langs:\n  - csharp\n  name: Handle\n  nameWithType: InputLanguage.Handle\n  fullName: System.Windows.Forms.InputLanguage.Handle\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the handle for the input language.\n  remarks: ''\n  example:\n  - \"The following code example gets the current input language. Then it calls Handle to get the handle and prints the results in a text box. The example requires that `textBox1` has been instantiated.  \\n  \\n [!code-vb[Classic InputLanguage.Handle Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_27_1.vb)]\\n [!code-cpp[Classic InputLanguage.Handle Example#1](~/add/codesnippet/cpp/p-system.windows.forms.i_27_1.cpp)]\\n [!code-cs[Classic InputLanguage.Handle Example#1](~/add/codesnippet/csharp/p-system.windows.forms.i_27_1.cs)]\"\n  syntax:\n    content: public IntPtr Handle { get; }\n    return:\n      type: System.IntPtr\n      description: An <xref:System.IntPtr> that represents the handle of this input language.\n  overload: System.Windows.Forms.InputLanguage.Handle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.InputLanguage.InstalledInputLanguages\n  id: InstalledInputLanguages\n  parent: System.Windows.Forms.InputLanguage\n  langs:\n  - csharp\n  name: InstalledInputLanguages\n  nameWithType: InputLanguage.InstalledInputLanguages\n  fullName: System.Windows.Forms.InputLanguage.InstalledInputLanguages\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a list of all installed input languages.\n  remarks: ''\n  example:\n  - \"The following code example retrieves all the input languages installed on the computer and displays their names. The code calls InstalledInputLanguages to get the installed languages. A text box displays the list of language names.  \\n  \\n This code assumes that `textBox1` has been instantiated and that `textBox1.MultiLine` has been set to `true`.  \\n  \\n [!code-vb[Classic InputLanguage.InstalledInputLanguages Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_25_1.vb)]\\n [!code-cpp[Classic InputLanguage.InstalledInputLanguages Example#1](~/add/codesnippet/cpp/p-system.windows.forms.i_25_1.cpp)]\\n [!code-cs[Classic InputLanguage.InstalledInputLanguages Example#1](~/add/codesnippet/csharp/p-system.windows.forms.i_25_1.cs)]\"\n  syntax:\n    content: public static System.Windows.Forms.InputLanguageCollection InstalledInputLanguages { get; }\n    return:\n      type: System.Windows.Forms.InputLanguageCollection\n      description: An array of <xref href=\"System.Windows.Forms.InputLanguage\"></xref> objects that represent the input languages installed on the computer.\n  overload: System.Windows.Forms.InputLanguage.InstalledInputLanguages*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.InputLanguage.LayoutName\n  id: LayoutName\n  parent: System.Windows.Forms.InputLanguage\n  langs:\n  - csharp\n  name: LayoutName\n  nameWithType: InputLanguage.LayoutName\n  fullName: System.Windows.Forms.InputLanguage.LayoutName\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the name of the current keyboard layout as it appears in the regional settings of the operating system on the computer.\n  remarks: ''\n  example:\n  - \"The following code example gets the culture associated with the current input language and displays the culture name.  \\n  \\n First, <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> is called to get the current input language. Then, <xref:System.Windows.Forms.InputLanguage.Culture%2A> is called to get the culture information for this input language. Finally, <xref:System.Globalization.CultureInfo.EnglishName%2A> is retrieved and displayed in a text box.  \\n  \\n [!code-cs[Classic InputLanguage.LayoutName Example#1](~/add/codesnippet/csharp/p-system.windows.forms.i_30_1.cs)]\\n [!code-cpp[Classic InputLanguage.LayoutName Example#1](~/add/codesnippet/cpp/p-system.windows.forms.i_30_1.cpp)]\\n [!code-vb[Classic InputLanguage.LayoutName Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_30_1.vb)]\"\n  syntax:\n    content: public string LayoutName { get; }\n    return:\n      type: System.String\n      description: The name of the layout.\n  overload: System.Windows.Forms.InputLanguage.LayoutName*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Windows.Forms.InputLanguage.Culture\n  parent: System.Windows.Forms.InputLanguage\n  isExternal: false\n  name: Culture\n  nameWithType: InputLanguage.Culture\n  fullName: System.Windows.Forms.InputLanguage.Culture\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.Forms.InputLanguage.CurrentInputLanguage\n  parent: System.Windows.Forms.InputLanguage\n  isExternal: false\n  name: CurrentInputLanguage\n  nameWithType: InputLanguage.CurrentInputLanguage\n  fullName: System.Windows.Forms.InputLanguage.CurrentInputLanguage\n- uid: System.Windows.Forms.InputLanguage\n  parent: System.Windows.Forms\n  isExternal: false\n  name: InputLanguage\n  nameWithType: InputLanguage\n  fullName: System.Windows.Forms.InputLanguage\n- uid: System.Windows.Forms.InputLanguage.DefaultInputLanguage\n  parent: System.Windows.Forms.InputLanguage\n  isExternal: false\n  name: DefaultInputLanguage\n  nameWithType: InputLanguage.DefaultInputLanguage\n  fullName: System.Windows.Forms.InputLanguage.DefaultInputLanguage\n- uid: System.Windows.Forms.InputLanguage.Equals(System.Object)\n  parent: System.Windows.Forms.InputLanguage\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: InputLanguage.Equals(Object)\n  fullName: System.Windows.Forms.InputLanguage.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.InputLanguage.FromCulture(System.Globalization.CultureInfo)\n  parent: System.Windows.Forms.InputLanguage\n  isExternal: false\n  name: FromCulture(CultureInfo)\n  nameWithType: InputLanguage.FromCulture(CultureInfo)\n  fullName: System.Windows.Forms.InputLanguage.FromCulture(CultureInfo)\n- uid: System.Windows.Forms.InputLanguage.GetHashCode\n  parent: System.Windows.Forms.InputLanguage\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: InputLanguage.GetHashCode()\n  fullName: System.Windows.Forms.InputLanguage.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.InputLanguage.Handle\n  parent: System.Windows.Forms.InputLanguage\n  isExternal: false\n  name: Handle\n  nameWithType: InputLanguage.Handle\n  fullName: System.Windows.Forms.InputLanguage.Handle\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Windows.Forms.InputLanguage.InstalledInputLanguages\n  parent: System.Windows.Forms.InputLanguage\n  isExternal: false\n  name: InstalledInputLanguages\n  nameWithType: InputLanguage.InstalledInputLanguages\n  fullName: System.Windows.Forms.InputLanguage.InstalledInputLanguages\n- uid: System.Windows.Forms.InputLanguageCollection\n  parent: System.Windows.Forms\n  isExternal: false\n  name: InputLanguageCollection\n  nameWithType: InputLanguageCollection\n  fullName: System.Windows.Forms.InputLanguageCollection\n- uid: System.Windows.Forms.InputLanguage.LayoutName\n  parent: System.Windows.Forms.InputLanguage\n  isExternal: false\n  name: LayoutName\n  nameWithType: InputLanguage.LayoutName\n  fullName: System.Windows.Forms.InputLanguage.LayoutName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Forms.InputLanguage.Culture*\n  parent: System.Windows.Forms.InputLanguage\n  isExternal: false\n  name: Culture\n  nameWithType: InputLanguage.Culture\n- uid: System.Windows.Forms.InputLanguage.CurrentInputLanguage*\n  parent: System.Windows.Forms.InputLanguage\n  isExternal: false\n  name: CurrentInputLanguage\n  nameWithType: InputLanguage.CurrentInputLanguage\n- uid: System.Windows.Forms.InputLanguage.DefaultInputLanguage*\n  parent: System.Windows.Forms.InputLanguage\n  isExternal: false\n  name: DefaultInputLanguage\n  nameWithType: InputLanguage.DefaultInputLanguage\n- uid: System.Windows.Forms.InputLanguage.Equals*\n  parent: System.Windows.Forms.InputLanguage\n  isExternal: false\n  name: Equals\n  nameWithType: InputLanguage.Equals\n- uid: System.Windows.Forms.InputLanguage.FromCulture*\n  parent: System.Windows.Forms.InputLanguage\n  isExternal: false\n  name: FromCulture\n  nameWithType: InputLanguage.FromCulture\n- uid: System.Windows.Forms.InputLanguage.GetHashCode*\n  parent: System.Windows.Forms.InputLanguage\n  isExternal: false\n  name: GetHashCode\n  nameWithType: InputLanguage.GetHashCode\n- uid: System.Windows.Forms.InputLanguage.Handle*\n  parent: System.Windows.Forms.InputLanguage\n  isExternal: false\n  name: Handle\n  nameWithType: InputLanguage.Handle\n- uid: System.Windows.Forms.InputLanguage.InstalledInputLanguages*\n  parent: System.Windows.Forms.InputLanguage\n  isExternal: false\n  name: InstalledInputLanguages\n  nameWithType: InputLanguage.InstalledInputLanguages\n- uid: System.Windows.Forms.InputLanguage.LayoutName*\n  parent: System.Windows.Forms.InputLanguage\n  isExternal: false\n  name: LayoutName\n  nameWithType: InputLanguage.LayoutName\n"}