{"nodes":[{"pos":[727,935],"content":"Computes the <xref href=\"System.Security.Cryptography.SHA1\"></xref> hash value for the input data using the implementation provided by the cryptographic service provider (CSP). This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Computes the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.SHA1\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> hash value for the input data using the implementation provided by the cryptographic service provider (CSP).","pos":[0,176],"source":"Computes the <xref href=\"System.Security.Cryptography.SHA1\"></xref> hash value for the input data using the implementation provided by the cryptographic service provider (CSP)."},{"content":"This class cannot be inherited.","pos":[177,208]}]},{"pos":[948,1551],"content":"The hash size for the SHA1CryptoServiceProvider class is 160 bits.      > [!IMPORTANT] >  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The hash size for the SHA1CryptoServiceProvider class is 160 bits.","pos":[0,66]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  This type implements the &lt;xref:System.IDisposable&gt; interface.","pos":[72,151],"source":"      > [!IMPORTANT] >  This type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[152,246]},{"content":"To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a <ph id=\"ph1\">`try`</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">`catch`</ph> block.","pos":[247,358],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[359,466],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.","pos":[467,600],"source":" For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic."}]},{"pos":[4196,4312],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.SHA1CryptoServiceProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.SHA1CryptoServiceProvider\"></xref> class."},{"pos":[5114,5126],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5954,5966],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6029,6041],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6103,6115],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6782,6794],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7339,7442],"content":"Initializes an instance of <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.SHA1CryptoServiceProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes an instance of <xref href=\"System.Security.Cryptography.SHA1CryptoServiceProvider\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.SHA1CryptoServiceProvider\n  id: SHA1CryptoServiceProvider\n  children:\n  - System.Security.Cryptography.SHA1CryptoServiceProvider.#ctor\n  - System.Security.Cryptography.SHA1CryptoServiceProvider.Dispose(System.Boolean)\n  - System.Security.Cryptography.SHA1CryptoServiceProvider.HashCore(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.SHA1CryptoServiceProvider.HashFinal\n  - System.Security.Cryptography.SHA1CryptoServiceProvider.Initialize\n  langs:\n  - csharp\n  name: SHA1CryptoServiceProvider\n  nameWithType: SHA1CryptoServiceProvider\n  fullName: System.Security.Cryptography.SHA1CryptoServiceProvider\n  type: Class\n  summary: Computes the <xref href=\"System.Security.Cryptography.SHA1\"></xref> hash value for the input data using the implementation provided by the cryptographic service provider (CSP). This class cannot be inherited.\n  remarks: \"The hash size for the SHA1CryptoServiceProvider class is 160 bits.  \\n  \\n> [!IMPORTANT]\\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.\"\n  example:\n  - \"The following code example computes the <xref:System.Security.Cryptography.SHA1> hash value for `data` and stores it in `result`. This example assumes that there is a predefined constant `DATA_SIZE`.  \\n  \\n [!code-cs[Classic SHA1CryptoServiceProvider Example#1](~/add/codesnippet/csharp/t-system.security.crypto_108_1.cs)]\\n [!code-cpp[Classic SHA1CryptoServiceProvider Example#1](~/add/codesnippet/cpp/t-system.security.crypto_108_1.cpp)]\\n [!code-vb[Classic SHA1CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_108_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class SHA1CryptoServiceProvider : System.Security.Cryptography.SHA1\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.HashAlgorithm\n  - System.Security.Cryptography.SHA1\n  implements: []\n  inheritedMembers:\n  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform\n  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks\n  - System.Security.Cryptography.HashAlgorithm.Clear\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)\n  - System.Security.Cryptography.HashAlgorithm.Dispose\n  - System.Security.Cryptography.HashAlgorithm.Hash\n  - System.Security.Cryptography.HashAlgorithm.HashSize\n  - System.Security.Cryptography.HashAlgorithm.HashSizeValue\n  - System.Security.Cryptography.HashAlgorithm.HashValue\n  - System.Security.Cryptography.HashAlgorithm.InputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.State\n  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.SHA1.Create\n  - System.Security.Cryptography.SHA1.Create(System.String)\n  platform:\n  - net462\n- uid: System.Security.Cryptography.SHA1CryptoServiceProvider.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.SHA1CryptoServiceProvider\n  langs:\n  - csharp\n  name: SHA1CryptoServiceProvider()\n  nameWithType: SHA1CryptoServiceProvider.SHA1CryptoServiceProvider()\n  fullName: System.Security.Cryptography.SHA1CryptoServiceProvider.SHA1CryptoServiceProvider()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.SHA1CryptoServiceProvider\"></xref> class.\n  syntax:\n    content: public SHA1CryptoServiceProvider ();\n    parameters: []\n  overload: System.Security.Cryptography.SHA1CryptoServiceProvider.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.SHA1CryptoServiceProvider.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.SHA1CryptoServiceProvider\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SHA1CryptoServiceProvider.Dispose(Boolean)\n  fullName: System.Security.Cryptography.SHA1CryptoServiceProvider.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: To be added.\n  overload: System.Security.Cryptography.SHA1CryptoServiceProvider.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.SHA1CryptoServiceProvider.HashCore(System.Byte[],System.Int32,System.Int32)\n  id: HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.SHA1CryptoServiceProvider\n  langs:\n  - csharp\n  name: HashCore(Byte[],Int32,Int32)\n  nameWithType: SHA1CryptoServiceProvider.HashCore(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.SHA1CryptoServiceProvider.HashCore(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void HashCore (byte[] rgb, int ibStart, int cbSize);\n    parameters:\n    - id: rgb\n      type: System.Byte[]\n      description: To be added.\n    - id: ibStart\n      type: System.Int32\n      description: To be added.\n    - id: cbSize\n      type: System.Int32\n      description: To be added.\n  overload: System.Security.Cryptography.SHA1CryptoServiceProvider.HashCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.SHA1CryptoServiceProvider.HashFinal\n  id: HashFinal\n  parent: System.Security.Cryptography.SHA1CryptoServiceProvider\n  langs:\n  - csharp\n  name: HashFinal()\n  nameWithType: SHA1CryptoServiceProvider.HashFinal()\n  fullName: System.Security.Cryptography.SHA1CryptoServiceProvider.HashFinal()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override byte[] HashFinal ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: To be added.\n  overload: System.Security.Cryptography.SHA1CryptoServiceProvider.HashFinal*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.SHA1CryptoServiceProvider.Initialize\n  id: Initialize\n  parent: System.Security.Cryptography.SHA1CryptoServiceProvider\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: SHA1CryptoServiceProvider.Initialize()\n  fullName: System.Security.Cryptography.SHA1CryptoServiceProvider.Initialize()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes an instance of <xref href=\"System.Security.Cryptography.SHA1CryptoServiceProvider\"></xref>.\n  syntax:\n    content: public override void Initialize ();\n    parameters: []\n  overload: System.Security.Cryptography.SHA1CryptoServiceProvider.Initialize*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.SHA1\n  isExternal: false\n  name: System.Security.Cryptography.SHA1\n- uid: System.Security.Cryptography.SHA1CryptoServiceProvider.#ctor\n  parent: System.Security.Cryptography.SHA1CryptoServiceProvider\n  isExternal: false\n  name: SHA1CryptoServiceProvider()\n  nameWithType: SHA1CryptoServiceProvider.SHA1CryptoServiceProvider()\n  fullName: System.Security.Cryptography.SHA1CryptoServiceProvider.SHA1CryptoServiceProvider()\n- uid: System.Security.Cryptography.SHA1CryptoServiceProvider.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.SHA1CryptoServiceProvider\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SHA1CryptoServiceProvider.Dispose(Boolean)\n  fullName: System.Security.Cryptography.SHA1CryptoServiceProvider.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.SHA1CryptoServiceProvider.HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.SHA1CryptoServiceProvider\n  isExternal: false\n  name: HashCore(Byte[],Int32,Int32)\n  nameWithType: SHA1CryptoServiceProvider.HashCore(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.SHA1CryptoServiceProvider.HashCore(Byte[],Int32,Int32)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.SHA1CryptoServiceProvider.HashFinal\n  parent: System.Security.Cryptography.SHA1CryptoServiceProvider\n  isExternal: false\n  name: HashFinal()\n  nameWithType: SHA1CryptoServiceProvider.HashFinal()\n  fullName: System.Security.Cryptography.SHA1CryptoServiceProvider.HashFinal()\n- uid: System.Security.Cryptography.SHA1CryptoServiceProvider.Initialize\n  parent: System.Security.Cryptography.SHA1CryptoServiceProvider\n  isExternal: false\n  name: Initialize()\n  nameWithType: SHA1CryptoServiceProvider.Initialize()\n  fullName: System.Security.Cryptography.SHA1CryptoServiceProvider.Initialize()\n- uid: System.Security.Cryptography.SHA1CryptoServiceProvider.#ctor*\n  parent: System.Security.Cryptography.SHA1CryptoServiceProvider\n  isExternal: false\n  name: SHA1CryptoServiceProvider\n  nameWithType: SHA1CryptoServiceProvider.SHA1CryptoServiceProvider\n- uid: System.Security.Cryptography.SHA1CryptoServiceProvider.Dispose*\n  parent: System.Security.Cryptography.SHA1CryptoServiceProvider\n  isExternal: false\n  name: Dispose\n  nameWithType: SHA1CryptoServiceProvider.Dispose\n- uid: System.Security.Cryptography.SHA1CryptoServiceProvider.HashCore*\n  parent: System.Security.Cryptography.SHA1CryptoServiceProvider\n  isExternal: false\n  name: HashCore\n  nameWithType: SHA1CryptoServiceProvider.HashCore\n- uid: System.Security.Cryptography.SHA1CryptoServiceProvider.HashFinal*\n  parent: System.Security.Cryptography.SHA1CryptoServiceProvider\n  isExternal: false\n  name: HashFinal\n  nameWithType: SHA1CryptoServiceProvider.HashFinal\n- uid: System.Security.Cryptography.SHA1CryptoServiceProvider.Initialize*\n  parent: System.Security.Cryptography.SHA1CryptoServiceProvider\n  isExternal: false\n  name: Initialize\n  nameWithType: SHA1CryptoServiceProvider.Initialize\n"}