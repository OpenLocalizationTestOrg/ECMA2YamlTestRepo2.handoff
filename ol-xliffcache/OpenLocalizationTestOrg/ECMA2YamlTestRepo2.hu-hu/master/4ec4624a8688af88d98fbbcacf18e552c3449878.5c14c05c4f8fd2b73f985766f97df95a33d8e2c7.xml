{"nodes":[{"pos":[958,1233],"content":"Represents a configuration section that contains a collection of binding elements, each of which describes an aspect of how an endpoint communicates with other endpoints, that is built, consistently, into a channel factory on the client and a channel listener on the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a configuration section that contains a collection of binding elements, each of which describes an aspect of how an endpoint communicates with other endpoints, that is built, consistently, into a channel factory on the client and a channel listener on the service.","pos":[0,275]}]},{"pos":[4734,4854],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.BindingCollectionElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.BindingCollectionElement\"></xref> class."},{"pos":[5508,5537],"content":"Gets the name of the binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the binding.","pos":[0,29]}]},{"pos":[5653,5684],"content":"The unique name of the binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique name of the binding.","pos":[0,31]}]},{"pos":[5928,6051],"content":"The current configuration collection name was not found.       -or-       The configuration section name was not found.","needQuote":false,"needEscape":true,"nodes":[{"content":"The current configuration collection name was not found.       -or-       The configuration section name was not found.","pos":[0,119],"nodes":[{"content":"The current configuration collection name was not found.","pos":[0,56]},{"content":"-or-       The configuration section name was not found.","pos":[63,119]}]}]},{"pos":[6530,6559],"content":"Gets the type of the binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of the binding.","pos":[0,29]}]},{"pos":[6680,6739],"content":"A <xref:System.Type> that contains the type of the binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that contains the type of the binding.","pos":[0,59],"source":"A <xref:System.Type> that contains the type of the binding."}]},{"pos":[7353,7416],"content":"Gets all the binding configuration elements in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets all the binding configuration elements in this collection.","pos":[0,63]}]},{"pos":[7755,7813],"content":"All the binding configuration elements in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"All the binding configuration elements in this collection.","pos":[0,58]}]},{"pos":[8451,8530],"content":"Determines whether a binding exists in the collection using the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether a binding exists in the collection using the specified name.","pos":[0,79]}]},{"pos":[8678,8716],"content":"The name of the binding to be located.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the binding to be located.","pos":[0,38]}]},{"pos":[8775,8987],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the collection contains the binding with the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection contains the binding with the specified <code>name</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9565,9595],"content":"Gets the default binding used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default binding used.","pos":[0,30]}]},{"pos":[9789,9878],"content":"A <xref:System.ServiceModel.Channels.Binding> object that represents the default binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.ServiceModel.Channels.Binding&gt; object that represents the default binding.","pos":[0,89],"source":"A <xref:System.ServiceModel.Channels.Binding> object that represents the default binding."}]},{"pos":[10693,10738],"content":"Adds the specified binding to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified binding to the collection.","pos":[0,45]}]},{"pos":[10973,11009],"content":"The name of the binding to be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the binding to be added.","pos":[0,36]}]},{"pos":[11096,11189],"content":"A <xref:System.ServiceModel.Channels.Binding> object that represents the binding to be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.ServiceModel.Channels.Binding&gt; object that represents the binding to be added.","pos":[0,93],"source":"A <xref:System.ServiceModel.Channels.Binding> object that represents the binding to be added."}]},{"pos":[11273,11316],"content":"The configuration settings of this binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configuration settings of this binding.","pos":[0,43]}]},{"pos":[11375,11551],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the operation completed successfully; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation completed successfully; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.BindingCollectionElement\n  id: BindingCollectionElement\n  children:\n  - System.ServiceModel.Configuration.BindingCollectionElement.#ctor\n  - System.ServiceModel.Configuration.BindingCollectionElement.BindingName\n  - System.ServiceModel.Configuration.BindingCollectionElement.BindingType\n  - System.ServiceModel.Configuration.BindingCollectionElement.ConfiguredBindings\n  - System.ServiceModel.Configuration.BindingCollectionElement.ContainsKey(System.String)\n  - System.ServiceModel.Configuration.BindingCollectionElement.GetDefault\n  - System.ServiceModel.Configuration.BindingCollectionElement.TryAdd(System.String,System.ServiceModel.Channels.Binding,System.Configuration.Configuration)\n  langs:\n  - csharp\n  name: BindingCollectionElement\n  nameWithType: BindingCollectionElement\n  fullName: System.ServiceModel.Configuration.BindingCollectionElement\n  type: Class\n  summary: Represents a configuration section that contains a collection of binding elements, each of which describes an aspect of how an endpoint communicates with other endpoints, that is built, consistently, into a channel factory on the client and a channel listener on the service.\n  syntax:\n    content: 'public abstract class BindingCollectionElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Properties\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  langs:\n  - csharp\n  name: BindingCollectionElement()\n  nameWithType: BindingCollectionElement.BindingCollectionElement()\n  fullName: System.ServiceModel.Configuration.BindingCollectionElement.BindingCollectionElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.BindingCollectionElement\"></xref> class.\n  syntax:\n    content: protected BindingCollectionElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.BindingCollectionElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.BindingName\n  id: BindingName\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  langs:\n  - csharp\n  name: BindingName\n  nameWithType: BindingCollectionElement.BindingName\n  fullName: System.ServiceModel.Configuration.BindingCollectionElement.BindingName\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the name of the binding.\n  syntax:\n    content: public string BindingName { get; }\n    return:\n      type: System.String\n      description: The unique name of the binding.\n  overload: System.ServiceModel.Configuration.BindingCollectionElement.BindingName*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: \"The current configuration collection name was not found.  \\n  \\n -or-  \\n  \\n The configuration section name was not found.\"\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.BindingType\n  id: BindingType\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  langs:\n  - csharp\n  name: BindingType\n  nameWithType: BindingCollectionElement.BindingType\n  fullName: System.ServiceModel.Configuration.BindingCollectionElement.BindingType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the type of the binding.\n  syntax:\n    content: public abstract Type BindingType { get; }\n    return:\n      type: System.Type\n      description: A <xref:System.Type> that contains the type of the binding.\n  overload: System.ServiceModel.Configuration.BindingCollectionElement.BindingType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.ConfiguredBindings\n  id: ConfiguredBindings\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  langs:\n  - csharp\n  name: ConfiguredBindings\n  nameWithType: BindingCollectionElement.ConfiguredBindings\n  fullName: System.ServiceModel.Configuration.BindingCollectionElement.ConfiguredBindings\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets all the binding configuration elements in this collection.\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Configuration.IBindingConfigurationElement> ConfiguredBindings { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Configuration.IBindingConfigurationElement}\n      description: All the binding configuration elements in this collection.\n  overload: System.ServiceModel.Configuration.BindingCollectionElement.ConfiguredBindings*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.ContainsKey(System.String)\n  id: ContainsKey(System.String)\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  langs:\n  - csharp\n  name: ContainsKey(String)\n  nameWithType: BindingCollectionElement.ContainsKey(String)\n  fullName: System.ServiceModel.Configuration.BindingCollectionElement.ContainsKey(String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Determines whether a binding exists in the collection using the specified name.\n  syntax:\n    content: public abstract bool ContainsKey (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the binding to be located.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection contains the binding with the specified <code>name</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.BindingCollectionElement.ContainsKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.GetDefault\n  id: GetDefault\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  langs:\n  - csharp\n  name: GetDefault()\n  nameWithType: BindingCollectionElement.GetDefault()\n  fullName: System.ServiceModel.Configuration.BindingCollectionElement.GetDefault()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the default binding used.\n  syntax:\n    content: protected abstract System.ServiceModel.Channels.Binding GetDefault ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.Binding\n      description: A <xref:System.ServiceModel.Channels.Binding> object that represents the default binding.\n  overload: System.ServiceModel.Configuration.BindingCollectionElement.GetDefault*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.TryAdd(System.String,System.ServiceModel.Channels.Binding,System.Configuration.Configuration)\n  id: TryAdd(System.String,System.ServiceModel.Channels.Binding,System.Configuration.Configuration)\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  langs:\n  - csharp\n  name: TryAdd(String,Binding,Configuration)\n  nameWithType: BindingCollectionElement.TryAdd(String,Binding,Configuration)\n  fullName: System.ServiceModel.Configuration.BindingCollectionElement.TryAdd(String,Binding,Configuration)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Adds the specified binding to the collection.\n  syntax:\n    content: protected abstract bool TryAdd (string name, System.ServiceModel.Channels.Binding binding, System.Configuration.Configuration config);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the binding to be added.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: A <xref:System.ServiceModel.Channels.Binding> object that represents the binding to be added.\n    - id: config\n      type: System.Configuration.Configuration\n      description: The configuration settings of this binding.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation completed successfully; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.BindingCollectionElement.TryAdd*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.Configuration.ConfigurationErrorsException\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationErrorsException\n  nameWithType: ConfigurationErrorsException\n  fullName: System.Configuration.ConfigurationErrorsException\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.#ctor\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  isExternal: false\n  name: BindingCollectionElement()\n  nameWithType: BindingCollectionElement.BindingCollectionElement()\n  fullName: System.ServiceModel.Configuration.BindingCollectionElement.BindingCollectionElement()\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.BindingName\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  isExternal: false\n  name: BindingName\n  nameWithType: BindingCollectionElement.BindingName\n  fullName: System.ServiceModel.Configuration.BindingCollectionElement.BindingName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.BindingType\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  isExternal: false\n  name: BindingType\n  nameWithType: BindingCollectionElement.BindingType\n  fullName: System.ServiceModel.Configuration.BindingCollectionElement.BindingType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.ConfiguredBindings\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  isExternal: false\n  name: ConfiguredBindings\n  nameWithType: BindingCollectionElement.ConfiguredBindings\n  fullName: System.ServiceModel.Configuration.BindingCollectionElement.ConfiguredBindings\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Configuration.IBindingConfigurationElement}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<IBindingConfigurationElement>\n  nameWithType: ReadOnlyCollection<IBindingConfigurationElement>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Configuration.IBindingConfigurationElement>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.ServiceModel.Configuration.IBindingConfigurationElement>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Configuration.IBindingConfigurationElement\n    name: IBindingConfigurationElement\n    nameWithType: IBindingConfigurationElement\n    fullName: IBindingConfigurationElement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.ContainsKey(System.String)\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  isExternal: false\n  name: ContainsKey(String)\n  nameWithType: BindingCollectionElement.ContainsKey(String)\n  fullName: System.ServiceModel.Configuration.BindingCollectionElement.ContainsKey(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.GetDefault\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  isExternal: false\n  name: GetDefault()\n  nameWithType: BindingCollectionElement.GetDefault()\n  fullName: System.ServiceModel.Configuration.BindingCollectionElement.GetDefault()\n- uid: System.ServiceModel.Channels.Binding\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: Binding\n  nameWithType: Binding\n  fullName: System.ServiceModel.Channels.Binding\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.TryAdd(System.String,System.ServiceModel.Channels.Binding,System.Configuration.Configuration)\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  isExternal: false\n  name: TryAdd(String,Binding,Configuration)\n  nameWithType: BindingCollectionElement.TryAdd(String,Binding,Configuration)\n  fullName: System.ServiceModel.Configuration.BindingCollectionElement.TryAdd(String,Binding,Configuration)\n- uid: System.Configuration.Configuration\n  parent: System.Configuration\n  isExternal: false\n  name: Configuration\n  nameWithType: Configuration\n  fullName: System.Configuration.Configuration\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.#ctor*\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  isExternal: false\n  name: BindingCollectionElement\n  nameWithType: BindingCollectionElement.BindingCollectionElement\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.BindingName*\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  isExternal: false\n  name: BindingName\n  nameWithType: BindingCollectionElement.BindingName\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.BindingType*\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  isExternal: false\n  name: BindingType\n  nameWithType: BindingCollectionElement.BindingType\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.ConfiguredBindings*\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  isExternal: false\n  name: ConfiguredBindings\n  nameWithType: BindingCollectionElement.ConfiguredBindings\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.ContainsKey*\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  isExternal: false\n  name: ContainsKey\n  nameWithType: BindingCollectionElement.ContainsKey\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.GetDefault*\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  isExternal: false\n  name: GetDefault\n  nameWithType: BindingCollectionElement.GetDefault\n- uid: System.ServiceModel.Configuration.BindingCollectionElement.TryAdd*\n  parent: System.ServiceModel.Configuration.BindingCollectionElement\n  isExternal: false\n  name: TryAdd\n  nameWithType: BindingCollectionElement.TryAdd\n"}