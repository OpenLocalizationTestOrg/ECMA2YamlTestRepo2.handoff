{"nodes":[{"pos":[469,574],"content":"Provides information about the current registration for notification of the next full garbage collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides information about the current registration for notification of the next full garbage collection.","pos":[0,105]}]},{"pos":[586,915],"content":"Use the <xref:System.GC.RegisterForFullGCNotification%2A> method to register for a full garbage collection notification. Then use the <xref:System.GC.WaitForFullGCApproach%2A> method or the <xref:System.GC.WaitForFullGCComplete%2A> method to return a GCNotificationStatus enumeration that contains the status of the notification.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the <xref:System.GC.RegisterForFullGCNotification%2A> method to register for a full garbage collection notification. Then use the <xref:System.GC.WaitForFullGCApproach%2A> method or the <xref:System.GC.WaitForFullGCComplete%2A> method to return a GCNotificationStatus enumeration that contains the status of the notification.","pos":[0,329],"nodes":[{"content":"Use the &lt;xref:System.GC.RegisterForFullGCNotification%2A&gt; method to register for a full garbage collection notification.","pos":[0,120],"source":"Use the <xref:System.GC.RegisterForFullGCNotification%2A> method to register for a full garbage collection notification."},{"content":"Then use the &lt;xref:System.GC.WaitForFullGCApproach%2A&gt; method or the &lt;xref:System.GC.WaitForFullGCComplete%2A&gt; method to return a GCNotificationStatus enumeration that contains the status of the notification.","pos":[121,329],"source":" Then use the <xref:System.GC.WaitForFullGCApproach%2A> method or the <xref:System.GC.WaitForFullGCComplete%2A> method to return a GCNotificationStatus enumeration that contains the status of the notification."}]}]},{"pos":[2044,2094],"content":"The current registration was canceled by the user.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current registration was canceled by the user.","pos":[0,50]}]},{"pos":[2198,2210],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2542,2581],"content":"The notification failed for any reason.","needQuote":true,"needEscape":true,"nodes":[{"content":"The notification failed for any reason.","pos":[0,39]}]},{"pos":[2683,2695],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3063,3517],"content":"This result can be caused by the following: there is no current registration for a garbage collection notification, concurrent garbage collection is enabled, or the time specified for the <code>millisecondsTimeout</code> parameter has expired and no garbage collection notification was obtained. (See the [&lt;gcConcurrent&gt;](../Topic/%3CgcConcurrent%3E%20Element.md) runtime setting for information about how to disable concurrent garbage collection.)","needQuote":false,"needEscape":true,"nodes":[{"content":"This result can be caused by the following: there is no current registration for a garbage collection notification, concurrent garbage collection is enabled, or the time specified for the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">millisecondsTimeout</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter has expired and no garbage collection notification was obtained.","pos":[0,295],"source":"This result can be caused by the following: there is no current registration for a garbage collection notification, concurrent garbage collection is enabled, or the time specified for the <code>millisecondsTimeout</code> parameter has expired and no garbage collection notification was obtained."},{"content":"(See the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">&amp;lt;</ph>gcConcurrent<ph id=\"ph2\">&amp;gt;</ph><ept id=\"p1\">](../Topic/%3CgcConcurrent%3E%20Element.md)</ept> runtime setting for information about how to disable concurrent garbage collection.)","pos":[296,454],"source":" (See the [&lt;gcConcurrent&gt;](../Topic/%3CgcConcurrent%3E%20Element.md) runtime setting for information about how to disable concurrent garbage collection.)"}]},{"pos":[3627,3639],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3986,4056],"content":"The notification was successful and the registration was not canceled.","needQuote":true,"needEscape":true,"nodes":[{"content":"The notification was successful and the registration was not canceled.","pos":[0,70]}]},{"pos":[4161,4173],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4510,4781],"content":"The time specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">millisecondsTimeout</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter for either <ph id=\"ph2\">&amp;lt;</ph>xref:System.GC.WaitForFullGCApproach%28System.Int32%29?displayProperty=fullName<ph id=\"ph3\">&amp;gt;</ph> or <ph id=\"ph4\">&amp;lt;</ph>xref:System.GC.WaitForFullGCComplete%28System.Int32%29?displayProperty=fullName<ph id=\"ph5\">&amp;gt;</ph> has elapsed.","needQuote":true,"needEscape":true,"source":"The time specified by the <code>millisecondsTimeout</code> parameter for either &lt;xref:System.GC.WaitForFullGCApproach%28System.Int32%29?displayProperty=fullName&gt; or &lt;xref:System.GC.WaitForFullGCComplete%28System.Int32%29?displayProperty=fullName&gt; has elapsed."},{"pos":[4884,4896],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.GCNotificationStatus\n  id: GCNotificationStatus\n  children:\n  - System.GCNotificationStatus.Canceled\n  - System.GCNotificationStatus.Failed\n  - System.GCNotificationStatus.NotApplicable\n  - System.GCNotificationStatus.Succeeded\n  - System.GCNotificationStatus.Timeout\n  langs:\n  - csharp\n  name: GCNotificationStatus\n  nameWithType: GCNotificationStatus\n  fullName: System.GCNotificationStatus\n  type: Enum\n  summary: Provides information about the current registration for notification of the next full garbage collection.\n  remarks: Use the <xref:System.GC.RegisterForFullGCNotification%2A> method to register for a full garbage collection notification. Then use the <xref:System.GC.WaitForFullGCApproach%2A> method or the <xref:System.GC.WaitForFullGCComplete%2A> method to return a GCNotificationStatus enumeration that contains the status of the notification.\n  example:\n  - \"The following example obtains a GCNotificationStatus enumeration from the <xref:System.GC.WaitForFullGCApproach%2A> method. If the enumeration returns Succeeded, it calls the custom method `OnFullGCApproachNotify` to perform actions in response to the approaching full garbage collection. This code example is part of a larger example provided for [Garbage Collection Notifications](~/add/includes/ajax-current-ext-md.md) topic.  \\n  \\n [!code-cpp[GCNotification#8](~/add/codesnippet/cpp/t-system.gcnotifications_1.cpp)]\\n [!code-cs[GCNotification#8](~/add/codesnippet/csharp/t-system.gcnotifications_1.cs)]\\n [!code-vb[GCNotification#8](~/add/codesnippet/visualbasic/t-system.gcnotifications_1.vb)]\"\n  syntax:\n    content: public enum GCNotificationStatus\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.GCNotificationStatus.Canceled\n  id: Canceled\n  parent: System.GCNotificationStatus\n  langs:\n  - csharp\n  name: Canceled\n  nameWithType: GCNotificationStatus.Canceled\n  fullName: System.GCNotificationStatus.Canceled\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: The current registration was canceled by the user.\n  syntax:\n    content: Canceled\n    return:\n      type: System.GCNotificationStatus\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.GCNotificationStatus.Failed\n  id: Failed\n  parent: System.GCNotificationStatus\n  langs:\n  - csharp\n  name: Failed\n  nameWithType: GCNotificationStatus.Failed\n  fullName: System.GCNotificationStatus.Failed\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: The notification failed for any reason.\n  syntax:\n    content: Failed\n    return:\n      type: System.GCNotificationStatus\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.GCNotificationStatus.NotApplicable\n  id: NotApplicable\n  parent: System.GCNotificationStatus\n  langs:\n  - csharp\n  name: NotApplicable\n  nameWithType: GCNotificationStatus.NotApplicable\n  fullName: System.GCNotificationStatus.NotApplicable\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: 'This result can be caused by the following: there is no current registration for a garbage collection notification, concurrent garbage collection is enabled, or the time specified for the <code>millisecondsTimeout</code> parameter has expired and no garbage collection notification was obtained. (See the [&lt;gcConcurrent&gt;](../Topic/%3CgcConcurrent%3E%20Element.md) runtime setting for information about how to disable concurrent garbage collection.)'\n  syntax:\n    content: NotApplicable\n    return:\n      type: System.GCNotificationStatus\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.GCNotificationStatus.Succeeded\n  id: Succeeded\n  parent: System.GCNotificationStatus\n  langs:\n  - csharp\n  name: Succeeded\n  nameWithType: GCNotificationStatus.Succeeded\n  fullName: System.GCNotificationStatus.Succeeded\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: The notification was successful and the registration was not canceled.\n  syntax:\n    content: Succeeded\n    return:\n      type: System.GCNotificationStatus\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.GCNotificationStatus.Timeout\n  id: Timeout\n  parent: System.GCNotificationStatus\n  langs:\n  - csharp\n  name: Timeout\n  nameWithType: GCNotificationStatus.Timeout\n  fullName: System.GCNotificationStatus.Timeout\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: The time specified by the <code>millisecondsTimeout</code> parameter for either &lt;xref:System.GC.WaitForFullGCApproach%28System.Int32%29?displayProperty=fullName&gt; or &lt;xref:System.GC.WaitForFullGCComplete%28System.Int32%29?displayProperty=fullName&gt; has elapsed.\n  syntax:\n    content: Timeout\n    return:\n      type: System.GCNotificationStatus\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.GCNotificationStatus.Canceled\n  parent: System.GCNotificationStatus\n  isExternal: false\n  name: Canceled\n  nameWithType: GCNotificationStatus.Canceled\n  fullName: System.GCNotificationStatus.Canceled\n- uid: System.GCNotificationStatus\n  parent: System\n  isExternal: false\n  name: GCNotificationStatus\n  nameWithType: GCNotificationStatus\n  fullName: System.GCNotificationStatus\n- uid: System.GCNotificationStatus.Failed\n  parent: System.GCNotificationStatus\n  isExternal: false\n  name: Failed\n  nameWithType: GCNotificationStatus.Failed\n  fullName: System.GCNotificationStatus.Failed\n- uid: System.GCNotificationStatus.NotApplicable\n  parent: System.GCNotificationStatus\n  isExternal: false\n  name: NotApplicable\n  nameWithType: GCNotificationStatus.NotApplicable\n  fullName: System.GCNotificationStatus.NotApplicable\n- uid: System.GCNotificationStatus.Succeeded\n  parent: System.GCNotificationStatus\n  isExternal: false\n  name: Succeeded\n  nameWithType: GCNotificationStatus.Succeeded\n  fullName: System.GCNotificationStatus.Succeeded\n- uid: System.GCNotificationStatus.Timeout\n  parent: System.GCNotificationStatus\n  isExternal: false\n  name: Timeout\n  nameWithType: GCNotificationStatus.Timeout\n  fullName: System.GCNotificationStatus.Timeout\n"}