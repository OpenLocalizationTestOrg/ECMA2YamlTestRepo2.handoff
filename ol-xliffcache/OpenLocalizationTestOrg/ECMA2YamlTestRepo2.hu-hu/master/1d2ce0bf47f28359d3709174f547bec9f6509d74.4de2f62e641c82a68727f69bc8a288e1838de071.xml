{"nodes":[{"pos":[735,949],"content":"Defines a wrapper object to access the cryptographic service provider (CSP) version of the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines a wrapper object to access the cryptographic service provider (CSP) version of the Data Encryption Standard (<bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) algorithm.","pos":[0,182],"source":"Defines a wrapper object to access the cryptographic service provider (CSP) version of the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm."},{"content":"This class cannot be inherited.","pos":[183,214]}]},{"pos":[961,1009],"content":"This algorithm supports a key length of 64 bits.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This algorithm supports a key length of 64 bits.","pos":[0,48]}]},{"pos":[4981,5096],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DESCryptoServiceProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DESCryptoServiceProvider\"></xref> class."},{"pos":[6631,6764],"content":"The Data Encryption Standard (<bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) cryptographic service provider is not available.","needQuote":true,"needEscape":true,"source":"The Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) cryptographic service provider is not available."},{"pos":[7332,7622],"content":"Creates a symmetric Data Encryption Standard (<bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) decryptor object with the specified key (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key<bpt id=\"p2\">*</bpt>&gt;) and initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV<ept id=\"p2\">*</ept>&gt;).","needQuote":true,"needEscape":true,"source":"Creates a symmetric Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) decryptor object with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>)."},{"pos":[7634,7817],"content":"This method decrypts an encrypted message that was created using the <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method decrypts an encrypted message that was created using the &lt;xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A&gt; overload with the same parameters.","pos":[0,183],"source":"This method decrypts an encrypted message that was created using the <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters."}]},{"pos":[8028,8078],"content":"The secret key to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secret key to use for the symmetric algorithm.","pos":[0,50]}]},{"pos":[8140,8201],"content":"The initialization vector to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The initialization vector to use for the symmetric algorithm.","pos":[0,61]}]},{"pos":[8291,8374],"content":"A symmetric <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> decryptor object.","needQuote":true,"needEscape":true,"source":"A symmetric <xref href=\"System.Security.Cryptography.DES\"></xref> decryptor object."},{"pos":[8621,9171],"content":"The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\"System.Security.Cryptography.CipherMode\"></xref>.       -or-       The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\"System.Security.Cryptography.CipherMode\"></xref> and the value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*> property is not 8.       -or-       An invalid key size was used.       -or-       The algorithm key size was not available.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Mode<bpt id=\"p1\">*</bpt>&gt; property is <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.       -or-       The value of the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Mode<ept id=\"p1\">*</ept>&gt; property is <bpt id=\"p3\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and the value of the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*&gt; property is not 8.","pos":[0,428],"source":"The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\"System.Security.Cryptography.CipherMode\"></xref>.       -or-       The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\"System.Security.Cryptography.CipherMode\"></xref> and the value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*> property is not 8."},{"content":"-or-       An invalid key size was used.","pos":[435,475]},{"content":"-or-       The algorithm key size was not available.","pos":[482,534]}]},{"pos":[9740,10030],"content":"Creates a symmetric Data Encryption Standard (<bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) encryptor object with the specified key (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key<bpt id=\"p2\">*</bpt>&gt;) and initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV<ept id=\"p2\">*</ept>&gt;).","needQuote":true,"needEscape":true,"source":"Creates a symmetric Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) encryptor object with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>)."},{"pos":[10042,10201],"content":"Use the <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the &lt;xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A&gt; overload with the same parameters to decrypt the result of this method.","pos":[0,159],"source":"Use the <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method."}]},{"pos":[11469,11519],"content":"The secret key to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The secret key to use for the symmetric algorithm.","pos":[0,50]}]},{"pos":[11581,11642],"content":"The initialization vector to use for the symmetric algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"The initialization vector to use for the symmetric algorithm.","pos":[0,61]}]},{"pos":[11732,11815],"content":"A symmetric <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> encryptor object.","needQuote":true,"needEscape":true,"source":"A symmetric <xref href=\"System.Security.Cryptography.DES\"></xref> encryptor object."},{"pos":[12062,12612],"content":"The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\"System.Security.Cryptography.CipherMode\"></xref>.       -or-       The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\"System.Security.Cryptography.CipherMode\"></xref> and the value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*> property is not 8.       -or-       An invalid key size was used.       -or-       The algorithm key size was not available.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Mode<bpt id=\"p1\">*</bpt>&gt; property is <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.       -or-       The value of the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Mode<ept id=\"p1\">*</ept>&gt; property is <bpt id=\"p3\">&lt;xref href=\"System.Security.Cryptography.CipherMode\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and the value of the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*&gt; property is not 8.","pos":[0,428],"source":"The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\"System.Security.Cryptography.CipherMode\"></xref>.       -or-       The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\"System.Security.Cryptography.CipherMode\"></xref> and the value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*> property is not 8."},{"content":"-or-       An invalid key size was used.","pos":[435,475]},{"content":"-or-       The algorithm key size was not available.","pos":[482,534]}]},{"pos":[13059,13186],"content":"Generates a random initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) to use for the algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates a random initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV*&gt;) to use for the algorithm.","pos":[0,127],"source":"Generates a random initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) to use for the algorithm."}]},{"pos":[13198,13319],"content":"Use this method to generate a random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> when none is specified.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this method to generate a random &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt; when none is specified.","pos":[0,121],"source":"Use this method to generate a random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> when none is specified."}]},{"pos":[13943,14057],"content":"Generates a random key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) to be used for the algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates a random key (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key*&gt;) to be used for the algorithm.","pos":[0,114],"source":"Generates a random key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) to be used for the algorithm."}]},{"pos":[14070,14374],"content":"Use this method to generate a random key when none is specified. This method will never return a weak key (see <xref:System.Security.Cryptography.DES.IsWeakKey%2A>) or a semi-weak key (see <xref:System.Security.Cryptography.DES.IsSemiWeakKey%2A>).       This algorithm supports a key length of 64 bits.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this method to generate a random key when none is specified. This method will never return a weak key (see <xref:System.Security.Cryptography.DES.IsWeakKey%2A>) or a semi-weak key (see <xref:System.Security.Cryptography.DES.IsSemiWeakKey%2A>).       This algorithm supports a key length of 64 bits.","pos":[0,302],"nodes":[{"content":"Use this method to generate a random key when none is specified.","pos":[0,64]},{"content":"This method will never return a weak key (see &lt;xref:System.Security.Cryptography.DES.IsWeakKey%2A&gt;) or a semi-weak key (see &lt;xref:System.Security.Cryptography.DES.IsSemiWeakKey%2A&gt;).","pos":[65,247],"source":" This method will never return a weak key (see <xref:System.Security.Cryptography.DES.IsWeakKey%2A>) or a semi-weak key (see <xref:System.Security.Cryptography.DES.IsSemiWeakKey%2A>)."},{"content":"This algorithm supports a key length of 64 bits.","pos":[254,302]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.DESCryptoServiceProvider\n  id: DESCryptoServiceProvider\n  children:\n  - System.Security.Cryptography.DESCryptoServiceProvider.#ctor\n  - System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV\n  - System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey\n  langs:\n  - csharp\n  name: DESCryptoServiceProvider\n  nameWithType: DESCryptoServiceProvider\n  fullName: System.Security.Cryptography.DESCryptoServiceProvider\n  type: Class\n  summary: Defines a wrapper object to access the cryptographic service provider (CSP) version of the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm. This class cannot be inherited.\n  remarks: This algorithm supports a key length of 64 bits.\n  example:\n  - \"The following code example uses DESCryptoServiceProvider (an implementation of <xref:System.Security.Cryptography.DES>) with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`. It then outputs the encrypted result to the file specified by `outName`.  \\n  \\n [!code-cpp[Classic DES Example#1](~/add/codesnippet/cpp/t-system.security.crypto_121_1.cpp)]\\n [!code-cs[Classic DES Example#1](~/add/codesnippet/csharp/t-system.security.crypto_121_1.cs)]\\n [!code-vb[Classic DES Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_121_1.vb)]  \\n  \\n Decryption can be handled in the same way; use [CreateDecryptor(Byte\\\\[\\\\], Byte\\\\[\\\\])](assetId:///M:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])?qualifyHint=False&autoUpgrade=True) instead of [CreateEncryptor(Byte\\\\[\\\\], Byte\\\\[\\\\])](assetId:///M:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])?qualifyHint=False&autoUpgrade=True). The same key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) used to encrypt the file must be used to decrypt it.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class DESCryptoServiceProvider : System.Security.Cryptography.DES\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  - System.Security.Cryptography.DES\n  implements: []\n  inheritedMembers:\n  - System.Security.Cryptography.DES.Create\n  - System.Security.Cryptography.DES.Create(System.String)\n  - System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])\n  - System.Security.Cryptography.DES.IsWeakKey(System.Byte[])\n  - System.Security.Cryptography.DES.Key\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.IV\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySize\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Mode\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Padding\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  langs:\n  - csharp\n  name: DESCryptoServiceProvider()\n  nameWithType: DESCryptoServiceProvider.DESCryptoServiceProvider()\n  fullName: System.Security.Cryptography.DESCryptoServiceProvider.DESCryptoServiceProvider()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.DESCryptoServiceProvider\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example uses <xref:System.Security.Cryptography.DESCryptoServiceProvider> (an implementation of <xref:System.Security.Cryptography.DES>) with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`. It then outputs the encrypted result to the file specified by `outName`.  \\n  \\n [!code-cpp[Classic DES Example#1](~/add/codesnippet/cpp/m-system.security.crypto_132_1.cpp)]\\n [!code-cs[Classic DES Example#1](~/add/codesnippet/csharp/m-system.security.crypto_132_1.cs)]\\n [!code-vb[Classic DES Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_132_1.vb)]  \\n  \\n Decryption can be handled in the same way; use <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> instead of <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A>. The same key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) used to encrypt the file must be used to decrypt it.\"\n  syntax:\n    content: public DESCryptoServiceProvider ();\n    parameters: []\n  overload: System.Security.Cryptography.DESCryptoServiceProvider.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) cryptographic service provider is not available.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  id: CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateDecryptor(Byte[],Byte[])\n  nameWithType: DESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) decryptor object with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>).\n  remarks: This method decrypts an encrypted message that was created using the <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to use for the symmetric algorithm.\n    - id: rgbIV\n      type: System.Byte[]\n      description: The initialization vector to use for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric <xref href=\"System.Security.Cryptography.DES\"></xref> decryptor object.\n  overload: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\\\"System.Security.Cryptography.CipherMode\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\\\"System.Security.Cryptography.CipherMode\\\"></xref> and the value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*> property is not 8.  \\n  \\n -or-  \\n  \\n An invalid key size was used.  \\n  \\n -or-  \\n  \\n The algorithm key size was not available.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  id: CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateEncryptor(Byte[],Byte[])\n  nameWithType: DESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) encryptor object with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>).\n  remarks: Use the <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.\n  example:\n  - \"The following code example shows how to create and use a <xref:System.Security.Cryptography.DESCryptoServiceProvider> object to encrypt and decrypt data in a file.  \\n  \\n [!code-cpp[Cryptography.DESCSP.CreateEncryptor.File#1](~/add/codesnippet/cpp/d6da7668-465d-4df8-864e-_1.cpp)]\\n [!code-cs[Cryptography.DESCSP.CreateEncryptor.File#1](~/add/codesnippet/csharp/d6da7668-465d-4df8-864e-_1.cs)]\\n [!code-vb[Cryptography.DESCSP.CreateEncryptor.File#1](~/add/codesnippet/visualbasic/d6da7668-465d-4df8-864e-_1.vb)]  \\n  \\n The following code example shows how to create and use a <xref:System.Security.Cryptography.DESCryptoServiceProvider> object to encrypt and decrypt data in memory.  \\n  \\n [!code-cs[Cryptography.DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/csharp/d6da7668-465d-4df8-864e-_2.cs)]\\n [!code-cpp[Cryptography.DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/cpp/d6da7668-465d-4df8-864e-_2.cpp)]\\n [!code-vb[Cryptography.DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/visualbasic/d6da7668-465d-4df8-864e-_2.vb)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to use for the symmetric algorithm.\n    - id: rgbIV\n      type: System.Byte[]\n      description: The initialization vector to use for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric <xref href=\"System.Security.Cryptography.DES\"></xref> encryptor object.\n  overload: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\\\"System.Security.Cryptography.CipherMode\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*> property is <xref href=\\\"System.Security.Cryptography.CipherMode\\\"></xref> and the value of the <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*> property is not 8.  \\n  \\n -or-  \\n  \\n An invalid key size was used.  \\n  \\n -or-  \\n  \\n The algorithm key size was not available.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV\n  id: GenerateIV\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  langs:\n  - csharp\n  name: GenerateIV()\n  nameWithType: DESCryptoServiceProvider.GenerateIV()\n  fullName: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Generates a random initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) to use for the algorithm.\n  remarks: Use this method to generate a random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> when none is specified.\n  syntax:\n    content: public override void GenerateIV ();\n    parameters: []\n  overload: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey\n  id: GenerateKey\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  langs:\n  - csharp\n  name: GenerateKey()\n  nameWithType: DESCryptoServiceProvider.GenerateKey()\n  fullName: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Generates a random key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) to be used for the algorithm.\n  remarks: \"Use this method to generate a random key when none is specified. This method will never return a weak key (see <xref:System.Security.Cryptography.DES.IsWeakKey%2A>) or a semi-weak key (see <xref:System.Security.Cryptography.DES.IsSemiWeakKey%2A>).  \\n  \\n This algorithm supports a key length of 64 bits.\"\n  syntax:\n    content: public override void GenerateKey ();\n    parameters: []\n  overload: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.DES\n  isExternal: false\n  name: System.Security.Cryptography.DES\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.#ctor\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: DESCryptoServiceProvider()\n  nameWithType: DESCryptoServiceProvider.DESCryptoServiceProvider()\n  fullName: System.Security.Cryptography.DESCryptoServiceProvider.DESCryptoServiceProvider()\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor(Byte[],Byte[])\n  nameWithType: DESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor(Byte[],Byte[])\n  nameWithType: DESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: GenerateIV()\n  nameWithType: DESCryptoServiceProvider.GenerateIV()\n  fullName: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV()\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: GenerateKey()\n  nameWithType: DESCryptoServiceProvider.GenerateKey()\n  fullName: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey()\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.#ctor*\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: DESCryptoServiceProvider\n  nameWithType: DESCryptoServiceProvider.DESCryptoServiceProvider\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor*\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor\n  nameWithType: DESCryptoServiceProvider.CreateDecryptor\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor*\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor\n  nameWithType: DESCryptoServiceProvider.CreateEncryptor\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV*\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: GenerateIV\n  nameWithType: DESCryptoServiceProvider.GenerateIV\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey*\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: GenerateKey\n  nameWithType: DESCryptoServiceProvider.GenerateKey\n"}