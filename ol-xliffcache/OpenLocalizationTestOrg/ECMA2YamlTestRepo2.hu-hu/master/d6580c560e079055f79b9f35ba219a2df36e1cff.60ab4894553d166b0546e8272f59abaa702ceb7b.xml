{"nodes":[{"pos":[668,717],"content":"Represents a compound Access Control Entry (ACE).","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a compound Access Control Entry (ACE).","pos":[0,49]}]},{"pos":[2816,2919],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CompoundAce\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.CompoundAce\"></xref> class."},{"pos":[3241,3392],"content":"Contains flags that specify information about the inheritance, inheritance propagation, and auditing conditions for the new Access Control Entry (ACE).","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains flags that specify information about the inheritance, inheritance propagation, and auditing conditions for the new Access Control Entry (ACE).","pos":[0,151]}]},{"pos":[3458,3486],"content":"The access mask for the ACE.","needQuote":true,"needEscape":true,"nodes":[{"content":"The access mask for the ACE.","pos":[0,28]}]},{"pos":[3590,3686],"content":"A value from the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CompoundAceType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration.","needQuote":true,"needEscape":true,"source":"A value from the <xref href=\"System.Security.AccessControl.CompoundAceType\"></xref> enumeration."},{"pos":[3777,3875],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with the new ACE.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> associated with the new ACE."},{"pos":[4357,4652],"content":"Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.CompoundAce\"></xref> object. This length should be used before marshaling the ACL into a binary array with the <xref:System.Security.AccessControl.CompoundAce.GetBinaryForm*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the length, in bytes, of the binary representation of the current <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CompoundAce\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,141],"source":"Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.CompoundAce\"></xref> object."},{"content":"This length should be used before marshaling the ACL into a binary array with the &lt;xref:System.Security.AccessControl.CompoundAce.GetBinaryForm*&gt; method.","pos":[142,295],"source":" This length should be used before marshaling the ACL into a binary array with the <xref:System.Security.AccessControl.CompoundAce.GetBinaryForm*> method."}]},{"pos":[4774,4910],"content":"The length, in bytes, of the binary representation of the current <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CompoundAce\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.CompoundAce\"></xref> object."},{"pos":[5414,5514],"content":"Gets or sets the type of this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CompoundAce\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets or sets the type of this <xref href=\"System.Security.AccessControl.CompoundAce\"></xref> object."},{"pos":[5710,5797],"content":"The type of this <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CompoundAce\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The type of this <xref href=\"System.Security.AccessControl.CompoundAce\"></xref> object."},{"pos":[6390,6553],"content":"Marshals the contents of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CompoundAce\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object into the specified byte array beginning at the specified offset.","needQuote":true,"needEscape":true,"source":"Marshals the contents of the <xref href=\"System.Security.AccessControl.CompoundAce\"></xref> object into the specified byte array beginning at the specified offset."},{"pos":[6727,6849],"content":"The byte array into which the contents of the <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CompoundAce\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is marshaled.","needQuote":true,"needEscape":true,"source":"The byte array into which the contents of the <xref href=\"System.Security.AccessControl.CompoundAce\"></xref> is marshaled."},{"pos":[6911,6951],"content":"The offset at which to start marshaling.","needQuote":true,"needEscape":true,"nodes":[{"content":"The offset at which to start marshaling.","pos":[0,40]}]},{"pos":[7149,7313],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is negative or too high to allow the entire <bpt id=\"p1\">&lt;xref href=\"System.Security.AccessControl.CompoundAce\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be copied into <ph id=\"ph2\">&lt;code&gt;array&lt;/code&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>offset</code> is negative or too high to allow the entire <xref href=\"System.Security.AccessControl.CompoundAce\"></xref> to be copied into <code>array</code>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.CompoundAce\n  id: CompoundAce\n  children:\n  - System.Security.AccessControl.CompoundAce.#ctor(System.Security.AccessControl.AceFlags,System.Int32,System.Security.AccessControl.CompoundAceType,System.Security.Principal.SecurityIdentifier)\n  - System.Security.AccessControl.CompoundAce.BinaryLength\n  - System.Security.AccessControl.CompoundAce.CompoundAceType\n  - System.Security.AccessControl.CompoundAce.GetBinaryForm(System.Byte[],System.Int32)\n  langs:\n  - csharp\n  name: CompoundAce\n  nameWithType: CompoundAce\n  fullName: System.Security.AccessControl.CompoundAce\n  type: Class\n  summary: Represents a compound Access Control Entry (ACE).\n  syntax:\n    content: 'public sealed class CompoundAce : System.Security.AccessControl.KnownAce'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.GenericAce\n  - System.Security.AccessControl.KnownAce\n  implements: []\n  inheritedMembers:\n  - System.Security.AccessControl.GenericAce.AceFlags\n  - System.Security.AccessControl.GenericAce.AceType\n  - System.Security.AccessControl.GenericAce.AuditFlags\n  - System.Security.AccessControl.GenericAce.Copy\n  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.GenericAce.Equals(System.Object)\n  - System.Security.AccessControl.GenericAce.GetHashCode\n  - System.Security.AccessControl.GenericAce.InheritanceFlags\n  - System.Security.AccessControl.GenericAce.IsInherited\n  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.PropagationFlags\n  - System.Security.AccessControl.KnownAce.AccessMask\n  - System.Security.AccessControl.KnownAce.SecurityIdentifier\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CompoundAce.#ctor(System.Security.AccessControl.AceFlags,System.Int32,System.Security.AccessControl.CompoundAceType,System.Security.Principal.SecurityIdentifier)\n  id: '#ctor(System.Security.AccessControl.AceFlags,System.Int32,System.Security.AccessControl.CompoundAceType,System.Security.Principal.SecurityIdentifier)'\n  parent: System.Security.AccessControl.CompoundAce\n  langs:\n  - csharp\n  name: CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)\n  nameWithType: CompoundAce.CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)\n  fullName: System.Security.AccessControl.CompoundAce.CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.CompoundAce\"></xref> class.\n  syntax:\n    content: public CompoundAce (System.Security.AccessControl.AceFlags flags, int accessMask, System.Security.AccessControl.CompoundAceType compoundAceType, System.Security.Principal.SecurityIdentifier sid);\n    parameters:\n    - id: flags\n      type: System.Security.AccessControl.AceFlags\n      description: Contains flags that specify information about the inheritance, inheritance propagation, and auditing conditions for the new Access Control Entry (ACE).\n    - id: accessMask\n      type: System.Int32\n      description: The access mask for the ACE.\n    - id: compoundAceType\n      type: System.Security.AccessControl.CompoundAceType\n      description: A value from the <xref href=\"System.Security.AccessControl.CompoundAceType\"></xref> enumeration.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> associated with the new ACE.\n  overload: System.Security.AccessControl.CompoundAce.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CompoundAce.BinaryLength\n  id: BinaryLength\n  parent: System.Security.AccessControl.CompoundAce\n  langs:\n  - csharp\n  name: BinaryLength\n  nameWithType: CompoundAce.BinaryLength\n  fullName: System.Security.AccessControl.CompoundAce.BinaryLength\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.CompoundAce\"></xref> object. This length should be used before marshaling the ACL into a binary array with the <xref:System.Security.AccessControl.CompoundAce.GetBinaryForm*> method.\n  syntax:\n    content: public override int BinaryLength { get; }\n    return:\n      type: System.Int32\n      description: The length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.CompoundAce\"></xref> object.\n  overload: System.Security.AccessControl.CompoundAce.BinaryLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CompoundAce.CompoundAceType\n  id: CompoundAceType\n  parent: System.Security.AccessControl.CompoundAce\n  langs:\n  - csharp\n  name: CompoundAceType\n  nameWithType: CompoundAce.CompoundAceType\n  fullName: System.Security.AccessControl.CompoundAce.CompoundAceType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets or sets the type of this <xref href=\"System.Security.AccessControl.CompoundAce\"></xref> object.\n  syntax:\n    content: public System.Security.AccessControl.CompoundAceType CompoundAceType { get; set; }\n    return:\n      type: System.Security.AccessControl.CompoundAceType\n      description: The type of this <xref href=\"System.Security.AccessControl.CompoundAce\"></xref> object.\n  overload: System.Security.AccessControl.CompoundAce.CompoundAceType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.CompoundAce.GetBinaryForm(System.Byte[],System.Int32)\n  id: GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.CompoundAce\n  langs:\n  - csharp\n  name: GetBinaryForm(Byte[],Int32)\n  nameWithType: CompoundAce.GetBinaryForm(Byte[],Int32)\n  fullName: System.Security.AccessControl.CompoundAce.GetBinaryForm(Byte[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Marshals the contents of the <xref href=\"System.Security.AccessControl.CompoundAce\"></xref> object into the specified byte array beginning at the specified offset.\n  syntax:\n    content: public override void GetBinaryForm (byte[] binaryForm, int offset);\n    parameters:\n    - id: binaryForm\n      type: System.Byte[]\n      description: The byte array into which the contents of the <xref href=\"System.Security.AccessControl.CompoundAce\"></xref> is marshaled.\n    - id: offset\n      type: System.Int32\n      description: The offset at which to start marshaling.\n  overload: System.Security.AccessControl.CompoundAce.GetBinaryForm*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>offset</code> is negative or too high to allow the entire <xref href=\"System.Security.AccessControl.CompoundAce\"></xref> to be copied into <code>array</code>.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.AccessControl.KnownAce\n  isExternal: false\n  name: System.Security.AccessControl.KnownAce\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Security.AccessControl.CompoundAce.#ctor(System.Security.AccessControl.AceFlags,System.Int32,System.Security.AccessControl.CompoundAceType,System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.AccessControl.CompoundAce\n  isExternal: false\n  name: CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)\n  nameWithType: CompoundAce.CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)\n  fullName: System.Security.AccessControl.CompoundAce.CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)\n- uid: System.Security.AccessControl.AceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AceFlags\n  nameWithType: AceFlags\n  fullName: System.Security.AccessControl.AceFlags\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.CompoundAceType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CompoundAceType\n  nameWithType: CompoundAceType\n  fullName: System.Security.AccessControl.CompoundAceType\n- uid: System.Security.Principal.SecurityIdentifier\n  parent: System.Security.Principal\n  isExternal: false\n  name: SecurityIdentifier\n  nameWithType: SecurityIdentifier\n  fullName: System.Security.Principal.SecurityIdentifier\n- uid: System.Security.AccessControl.CompoundAce.BinaryLength\n  parent: System.Security.AccessControl.CompoundAce\n  isExternal: false\n  name: BinaryLength\n  nameWithType: CompoundAce.BinaryLength\n  fullName: System.Security.AccessControl.CompoundAce.BinaryLength\n- uid: System.Security.AccessControl.CompoundAce.CompoundAceType\n  parent: System.Security.AccessControl.CompoundAce\n  isExternal: false\n  name: CompoundAceType\n  nameWithType: CompoundAce.CompoundAceType\n  fullName: System.Security.AccessControl.CompoundAce.CompoundAceType\n- uid: System.Security.AccessControl.CompoundAce.GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.CompoundAce\n  isExternal: false\n  name: GetBinaryForm(Byte[],Int32)\n  nameWithType: CompoundAce.GetBinaryForm(Byte[],Int32)\n  fullName: System.Security.AccessControl.CompoundAce.GetBinaryForm(Byte[],Int32)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.AccessControl.CompoundAce.#ctor*\n  parent: System.Security.AccessControl.CompoundAce\n  isExternal: false\n  name: CompoundAce\n  nameWithType: CompoundAce.CompoundAce\n- uid: System.Security.AccessControl.CompoundAce.BinaryLength*\n  parent: System.Security.AccessControl.CompoundAce\n  isExternal: false\n  name: BinaryLength\n  nameWithType: CompoundAce.BinaryLength\n- uid: System.Security.AccessControl.CompoundAce.CompoundAceType*\n  parent: System.Security.AccessControl.CompoundAce\n  isExternal: false\n  name: CompoundAceType\n  nameWithType: CompoundAce.CompoundAceType\n- uid: System.Security.AccessControl.CompoundAce.GetBinaryForm*\n  parent: System.Security.AccessControl.CompoundAce\n  isExternal: false\n  name: GetBinaryForm\n  nameWithType: CompoundAce.GetBinaryForm\n"}