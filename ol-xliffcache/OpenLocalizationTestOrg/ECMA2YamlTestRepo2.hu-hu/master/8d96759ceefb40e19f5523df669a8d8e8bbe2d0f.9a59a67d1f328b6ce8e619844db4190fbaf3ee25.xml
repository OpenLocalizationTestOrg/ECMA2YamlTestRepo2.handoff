{"nodes":[{"pos":[867,970],"content":"Represents the cryptographic key and security algorithms that are used to generate a digital signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the cryptographic key and security algorithms that are used to generate a digital signature.","pos":[0,103]}]},{"pos":[982,1445],"content":"Use the SigningCredentials class to specify the signing key, signing key identifier, and security algorithms that are used by [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] to generate the digital signature for a <xref:System.IdentityModel.Tokens.SamlAssertion>. To set the digital signature details, set the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property of the <xref:System.IdentityModel.Tokens.SamlAssertion> class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the SigningCredentials class to specify the signing key, signing key identifier, and security algorithms that are used by <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> to generate the digital signature for a &lt;xref:System.IdentityModel.Tokens.SamlAssertion&gt;.","pos":[0,274],"source":"Use the SigningCredentials class to specify the signing key, signing key identifier, and security algorithms that are used by [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] to generate the digital signature for a <xref:System.IdentityModel.Tokens.SamlAssertion>."},{"content":"To set the digital signature details, set the &lt;xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A&gt; property of the &lt;xref:System.IdentityModel.Tokens.SamlAssertion&gt; class.","pos":[275,463],"source":" To set the digital signature details, set the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property of the <xref:System.IdentityModel.Tokens.SamlAssertion> class."}]},{"pos":[2237,2345],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SigningCredentials\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SigningCredentials\"></xref> class."},{"pos":[2357,2842],"content":"Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters. The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static, constant strings that represent cryptographic algorithms. The members that have a `Signature` suffix can be used to specify the `signatureAlgoritm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt; class to specify the <ph id=\"ph1\">`signatureAlgorithm`</ph> and <ph id=\"ph2\">`digestAlgorithm`</ph> parameters.","pos":[0,137],"source":"Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters."},{"content":"The &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt; class contains a set of static, constant strings that represent cryptographic algorithms.","pos":[138,285],"source":" The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static, constant strings that represent cryptographic algorithms."},{"content":"The members that have a <ph id=\"ph1\">`Signature`</ph> suffix can be used to specify the <ph id=\"ph2\">`signatureAlgoritm`</ph> parameter and the members that have a <ph id=\"ph3\">`Digest`</ph> suffix can be used to specify the <ph id=\"ph4\">`digestAlgorithm`</ph> parameter.","pos":[286,485],"source":" The members that have a `Signature` suffix can be used to specify the `signatureAlgoritm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter."}]},{"pos":[3105,3251],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the cryptographic key that is used to generate the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used to generate the digital signature."},{"pos":[3326,3423],"content":"A URI that represents the cryptographic algorithm that is used to generate the digital signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"A URI that represents the cryptographic algorithm that is used to generate the digital signature.","pos":[0,97]}]},{"pos":[3495,3647],"content":"A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","pos":[0,152]}]},{"pos":[4560,4668],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SigningCredentials\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SigningCredentials\"></xref> class."},{"pos":[4680,5164],"content":"Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters. The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static constant strings that represent cryptographic algorithms. The members that have a `Signature` suffix can be used to specify the `signatureAlgoritm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt; class to specify the <ph id=\"ph1\">`signatureAlgorithm`</ph> and <ph id=\"ph2\">`digestAlgorithm`</ph> parameters.","pos":[0,137],"source":"Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters."},{"content":"The &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt; class contains a set of static constant strings that represent cryptographic algorithms.","pos":[138,284],"source":" The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static constant strings that represent cryptographic algorithms."},{"content":"The members that have a <ph id=\"ph1\">`Signature`</ph> suffix can be used to specify the <ph id=\"ph2\">`signatureAlgoritm`</ph> parameter and the members that have a <ph id=\"ph3\">`Digest`</ph> suffix can be used to specify the <ph id=\"ph4\">`digestAlgorithm`</ph> parameter.","pos":[285,484],"source":" The members that have a `Signature` suffix can be used to specify the `signatureAlgoritm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter."}]},{"pos":[5499,5645],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the cryptographic key that is used to generate the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used to generate the digital signature."},{"pos":[5720,5817],"content":"A URI that represents the cryptographic algorithm that is used to generate the digital signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"A URI that represents the cryptographic algorithm that is used to generate the digital signature.","pos":[0,97]}]},{"pos":[5889,6041],"content":"A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","pos":[0,152]}]},{"pos":[6154,6324],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the identifier that represents the key that is used to create a digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that specifies the identifier that represents the key that is used to create a digital signature."},{"pos":[6858,6993],"content":"Gets the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","pos":[0,135]}]},{"pos":[7005,7110],"content":"To set the DigestAlgorithm property, use one of the constructors that take a <ph id=\"ph1\">`digestAlgorithm`</ph> parameter.","needQuote":true,"needEscape":true,"extradata":"MT","source":"To set the DigestAlgorithm property, use one of the constructors that take a `digestAlgorithm` parameter."},{"pos":[7230,7382],"content":"A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","pos":[0,152]}]},{"pos":[7941,8021],"content":"Gets the cryptographic algorithm that is used to generate the digital signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the cryptographic algorithm that is used to generate the digital signature.","pos":[0,80]}]},{"pos":[8033,8144],"content":"To set the SignatureAlgorithm property, use one of the constructors that take a <ph id=\"ph1\">`signatureAlgorithm`</ph> parameter.","needQuote":true,"needEscape":true,"extradata":"MT","source":"To set the SignatureAlgorithm property, use one of the constructors that take a `signatureAlgorithm` parameter."},{"pos":[8267,8364],"content":"A URI that represents the cryptographic algorithm that is used to generate the digital signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"A URI that represents the cryptographic algorithm that is used to generate the digital signature.","pos":[0,97]}]},{"pos":[8886,8960],"content":"Gets the cryptographic key that is used to generate the digital signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the cryptographic key that is used to generate the digital signature.","pos":[0,74]}]},{"pos":[8972,9058],"content":"To set the SigningKey property, use a constructor that takes a <ph id=\"ph1\">`signingKey`</ph> parameter.","needQuote":true,"needEscape":true,"extradata":"MT","source":"To set the SigningKey property, use a constructor that takes a `signingKey` parameter."},{"pos":[9232,9378],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the cryptographic key that is used to generate the digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used to generate the digital signature."},{"pos":[9942,10029],"content":"Gets the identifier that represents the key that is used to create a digital signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the identifier that represents the key that is used to create a digital signature.","pos":[0,87]}]},{"pos":[10041,10149],"content":"To set the SigningKeyIdentifier property, use the constructor that takes a <ph id=\"ph1\">`signingKeyIdentifier`</ph> parameter.","needQuote":true,"needEscape":true,"extradata":"MT","source":"To set the SigningKeyIdentifier property, use the constructor that takes a `signingKeyIdentifier` parameter."},{"pos":[10353,10523],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the identifier that represents the key that is used to create a digital signature.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that specifies the identifier that represents the key that is used to create a digital signature."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.SigningCredentials\n  id: SigningCredentials\n  children:\n  - System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)\n  - System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  - System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm\n  - System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm\n  - System.IdentityModel.Tokens.SigningCredentials.SigningKey\n  - System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier\n  langs:\n  - csharp\n  name: SigningCredentials\n  nameWithType: SigningCredentials\n  fullName: System.IdentityModel.Tokens.SigningCredentials\n  type: Class\n  summary: Represents the cryptographic key and security algorithms that are used to generate a digital signature.\n  remarks: Use the SigningCredentials class to specify the signing key, signing key identifier, and security algorithms that are used by [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] to generate the digital signature for a <xref:System.IdentityModel.Tokens.SamlAssertion>. To set the digital signature details, set the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property of the <xref:System.IdentityModel.Tokens.SamlAssertion> class.\n  syntax:\n    content: public class SigningCredentials\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)\n  id: '#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)'\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  langs:\n  - csharp\n  name: SigningCredentials(SecurityKey,String,String)\n  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String)\n  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SigningCredentials\"></xref> class.\n  remarks: Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters. The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static, constant strings that represent cryptographic algorithms. The members that have a `Signature` suffix can be used to specify the `signatureAlgoritm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter.\n  syntax:\n    content: public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm);\n    parameters:\n    - id: signingKey\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used to generate the digital signature.\n    - id: signatureAlgorithm\n      type: System.String\n      description: A URI that represents the cryptographic algorithm that is used to generate the digital signature.\n    - id: digestAlgorithm\n      type: System.String\n      description: A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.\n  overload: System.IdentityModel.Tokens.SigningCredentials.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  id: '#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)'\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  langs:\n  - csharp\n  name: SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)\n  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)\n  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SigningCredentials\"></xref> class.\n  remarks: Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters. The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static constant strings that represent cryptographic algorithms. The members that have a `Signature` suffix can be used to specify the `signatureAlgoritm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter.\n  syntax:\n    content: public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm, System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier);\n    parameters:\n    - id: signingKey\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used to generate the digital signature.\n    - id: signatureAlgorithm\n      type: System.String\n      description: A URI that represents the cryptographic algorithm that is used to generate the digital signature.\n    - id: digestAlgorithm\n      type: System.String\n      description: A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.\n    - id: signingKeyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that specifies the identifier that represents the key that is used to create a digital signature.\n  overload: System.IdentityModel.Tokens.SigningCredentials.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm\n  id: DigestAlgorithm\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  langs:\n  - csharp\n  name: DigestAlgorithm\n  nameWithType: SigningCredentials.DigestAlgorithm\n  fullName: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.\n  remarks: To set the DigestAlgorithm property, use one of the constructors that take a `digestAlgorithm` parameter.\n  syntax:\n    content: public string DigestAlgorithm { get; }\n    return:\n      type: System.String\n      description: A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.\n  overload: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm\n  id: SignatureAlgorithm\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  langs:\n  - csharp\n  name: SignatureAlgorithm\n  nameWithType: SigningCredentials.SignatureAlgorithm\n  fullName: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the cryptographic algorithm that is used to generate the digital signature.\n  remarks: To set the SignatureAlgorithm property, use one of the constructors that take a `signatureAlgorithm` parameter.\n  syntax:\n    content: public string SignatureAlgorithm { get; }\n    return:\n      type: System.String\n      description: A URI that represents the cryptographic algorithm that is used to generate the digital signature.\n  overload: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey\n  id: SigningKey\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  langs:\n  - csharp\n  name: SigningKey\n  nameWithType: SigningCredentials.SigningKey\n  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKey\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the cryptographic key that is used to generate the digital signature.\n  remarks: To set the SigningKey property, use a constructor that takes a `signingKey` parameter.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityKey SigningKey { get; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used to generate the digital signature.\n  overload: System.IdentityModel.Tokens.SigningCredentials.SigningKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier\n  id: SigningKeyIdentifier\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  langs:\n  - csharp\n  name: SigningKeyIdentifier\n  nameWithType: SigningCredentials.SigningKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the identifier that represents the key that is used to create a digital signature.\n  remarks: To set the SigningKeyIdentifier property, use the constructor that takes a `signingKeyIdentifier` parameter.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier SigningKeyIdentifier { get; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that specifies the identifier that represents the key that is used to create a digital signature.\n  overload: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: SigningCredentials(SecurityKey,String,String)\n  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String)\n  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String)\n- uid: System.IdentityModel.Tokens.SecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKey\n  nameWithType: SecurityKey\n  fullName: System.IdentityModel.Tokens.SecurityKey\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)\n  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)\n  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier\n- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: DigestAlgorithm\n  nameWithType: SigningCredentials.DigestAlgorithm\n  fullName: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm\n- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: SignatureAlgorithm\n  nameWithType: SigningCredentials.SignatureAlgorithm\n  fullName: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm\n- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: SigningKey\n  nameWithType: SigningCredentials.SigningKey\n  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKey\n- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: SigningKeyIdentifier\n  nameWithType: SigningCredentials.SigningKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier\n- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor*\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: SigningCredentials\n  nameWithType: SigningCredentials.SigningCredentials\n- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm*\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: DigestAlgorithm\n  nameWithType: SigningCredentials.DigestAlgorithm\n- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm*\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: SignatureAlgorithm\n  nameWithType: SigningCredentials.SignatureAlgorithm\n- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey*\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: SigningKey\n  nameWithType: SigningCredentials.SigningKey\n- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier*\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: SigningKeyIdentifier\n  nameWithType: SigningCredentials.SigningKeyIdentifier\n"}