{"nodes":[{"pos":[779,1065],"content":"Defines the mapping between arguments and expressions and provides the functionality to convert between these objects. Typically, this converter is used declaratively when using an <xref href=\"System.Activities.Presentation.View.ExpressionTextBox\"></xref> in a custom activity designer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the mapping between arguments and expressions and provides the functionality to convert between these objects.","pos":[0,118]},{"content":"Typically, this converter is used declaratively when using an <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.View.ExpressionTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in a custom activity designer.","pos":[119,286],"source":" Typically, this converter is used declaratively when using an <xref href=\"System.Activities.Presentation.View.ExpressionTextBox\"></xref> in a custom activity designer."}]},{"pos":[1077,1162],"content":"This converter can also be used imperatively; however, this usage is not recommended.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This converter can also be used imperatively; however, this usage is not recommended.","pos":[0,85]}]},{"pos":[2514,2647],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Converters.ArgumentToExpressionConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Activities.Presentation.Converters.ArgumentToExpressionConverter\"></xref> class."},{"pos":[3601,3652],"content":"Converts the specified argument into an expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified argument into an expression.","pos":[0,51]}]},{"pos":[3664,3680],"content":"The <ph id=\"ph1\">`parameter`</ph>,","needQuote":true,"needEscape":true,"extradata":"MT","source":"The `parameter`,"},{"pos":[3896,3937],"content":"The value produced by the binding source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value produced by the binding source.","pos":[0,41]}]},{"pos":[4002,4042],"content":"The type of the binding target property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the binding target property.","pos":[0,40]}]},{"pos":[4108,4139],"content":"The converter parameter to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The converter parameter to use.","pos":[0,31]}]},{"pos":[4222,4290],"content":"The <xref:System.Globalization.CultureInfo> to use in the converter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Globalization.CultureInfo&gt; to use in the converter.","pos":[0,68],"source":"The <xref:System.Globalization.CultureInfo> to use in the converter."}]},{"pos":[4349,4486],"content":"An instance of <xref:System.Object> that contains the converted Argument.Expression..       Contains the converted Argument.Expression.","needQuote":false,"needEscape":true,"nodes":[{"content":"An instance of <xref:System.Object> that contains the converted Argument.Expression..       Contains the converted Argument.Expression.","pos":[0,135],"nodes":[{"content":"An instance of &lt;xref:System.Object&gt; that contains the converted Argument.Expression..","pos":[0,85],"source":"An instance of <xref:System.Object> that contains the converted Argument.Expression.."},{"content":"Contains the converted Argument.Expression.","pos":[92,135]}]}]},{"pos":[5380,5440],"content":"Converts the specified Argument.Expression into an argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified Argument.Expression into an argument.","pos":[0,60]}]},{"pos":[5660,5695],"content":"The Argument.Expression to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Argument.Expression to convert.","pos":[0,35]}]},{"pos":[5760,5776],"content":"Not implemented.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not implemented.","pos":[0,16]}]},{"pos":[5842,5858],"content":"Not implemented.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not implemented.","pos":[0,16]}]},{"pos":[5941,5957],"content":"Not implemented.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not implemented.","pos":[0,16]}]},{"pos":[6016,6086],"content":"Returns <xref:System.Object>.       Contains the converted argument.","needQuote":false,"needEscape":true,"nodes":[{"content":"Returns <xref:System.Object>.       Contains the converted argument.","pos":[0,68],"nodes":[{"content":"Returns &lt;xref:System.Object&gt;.","pos":[0,29],"source":"Returns <xref:System.Object>."},{"content":"Contains the converted argument.","pos":[36,68]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  id: ArgumentToExpressionConverter\n  children:\n  - System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor\n  - System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  - System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  langs:\n  - csharp\n  name: ArgumentToExpressionConverter\n  nameWithType: ArgumentToExpressionConverter\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  type: Class\n  summary: Defines the mapping between arguments and expressions and provides the functionality to convert between these objects. Typically, this converter is used declaratively when using an <xref href=\"System.Activities.Presentation.View.ExpressionTextBox\"></xref> in a custom activity designer.\n  remarks: This converter can also be used imperatively; however, this usage is not recommended.\n  example:\n  - \"The following XAML snippet shows how to use the ArgumentToExpressionConverter in a custom activity designer that uses an ExpressionTextBox.  \\n  \\n```  \\n<sapv:ExpressionTextBox   \\n    Expression=\\\"{Binding Path=ModelItem.SampleValue,   \\n                         Mode=TwoWay,   \\n                         Converter={StaticResource ArgumentToExpressionConverter},   \\n                         ConverterParameter=In }\\\"  \\n    ExpressionType=\\\"s:String\\\"  \\n    OwnerActivity=\\\"{Binding Path=ModelItem}\\\"  \\n   />  \\n  \\n```\"\n  syntax:\n    content: 'public class ArgumentToExpressionConverter : System.Windows.Data.IValueConverter'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Windows.Data.IValueConverter\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor\n  id: '#ctor'\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  langs:\n  - csharp\n  name: ArgumentToExpressionConverter()\n  nameWithType: ArgumentToExpressionConverter.ArgumentToExpressionConverter()\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ArgumentToExpressionConverter()\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Converters\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Presentation.Converters.ArgumentToExpressionConverter\"></xref> class.\n  syntax:\n    content: public ArgumentToExpressionConverter ();\n    parameters: []\n  overload: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  id: Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  langs:\n  - csharp\n  name: Convert(Object,Type,Object,CultureInfo)\n  nameWithType: ArgumentToExpressionConverter.Convert(Object,Type,Object,CultureInfo)\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(Object,Type,Object,CultureInfo)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Converters\n  summary: Converts the specified argument into an expression.\n  remarks: The `parameter`,\n  syntax:\n    content: public object Convert (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value produced by the binding source.\n    - id: targetType\n      type: System.Type\n      description: The type of the binding target property.\n    - id: parameter\n      type: System.Object\n      description: The converter parameter to use.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The <xref:System.Globalization.CultureInfo> to use in the converter.\n    return:\n      type: System.Object\n      description: \"An instance of <xref:System.Object> that contains the converted Argument.Expression..  \\n  \\n Contains the converted Argument.Expression.\"\n  overload: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  id: ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  langs:\n  - csharp\n  name: ConvertBack(Object,Type,Object,CultureInfo)\n  nameWithType: ArgumentToExpressionConverter.ConvertBack(Object,Type,Object,CultureInfo)\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(Object,Type,Object,CultureInfo)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Converters\n  summary: Converts the specified Argument.Expression into an argument.\n  syntax:\n    content: public object ConvertBack (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The Argument.Expression to convert.\n    - id: targetType\n      type: System.Type\n      description: Not implemented.\n    - id: parameter\n      type: System.Object\n      description: Not implemented.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Not implemented.\n    return:\n      type: System.Object\n      description: \"Returns <xref:System.Object>.  \\n  \\n Contains the converted argument.\"\n  overload: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  isExternal: false\n  name: ArgumentToExpressionConverter()\n  nameWithType: ArgumentToExpressionConverter.ArgumentToExpressionConverter()\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ArgumentToExpressionConverter()\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  isExternal: false\n  name: Convert(Object,Type,Object,CultureInfo)\n  nameWithType: ArgumentToExpressionConverter.Convert(Object,Type,Object,CultureInfo)\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(Object,Type,Object,CultureInfo)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  isExternal: false\n  name: ConvertBack(Object,Type,Object,CultureInfo)\n  nameWithType: ArgumentToExpressionConverter.ConvertBack(Object,Type,Object,CultureInfo)\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(Object,Type,Object,CultureInfo)\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor*\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  isExternal: false\n  name: ArgumentToExpressionConverter\n  nameWithType: ArgumentToExpressionConverter.ArgumentToExpressionConverter\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert*\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  isExternal: false\n  name: Convert\n  nameWithType: ArgumentToExpressionConverter.Convert\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack*\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter\n  isExternal: false\n  name: ConvertBack\n  nameWithType: ArgumentToExpressionConverter.ConvertBack\n"}