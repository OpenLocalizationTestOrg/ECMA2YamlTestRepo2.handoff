{"nodes":[{"pos":[1067,1130],"content":"Used internally to support remote access to configuration data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Used internally to support remote access to configuration data.","pos":[0,63]}]},{"pos":[1142,1237],"content":"Base class from which <xref:System.Web.Configuration.RemoteWebConfigurationHostServer> extends.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Base class from which &lt;xref:System.Web.Configuration.RemoteWebConfigurationHostServer&gt; extends.","pos":[0,95],"source":"Base class from which <xref:System.Web.Configuration.RemoteWebConfigurationHostServer> extends."}]},{"pos":[2305,2415],"content":"Conditionally encrypts or decrypts the value of the string referenced by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">xmlString</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"Conditionally encrypts or decrypts the value of the string referenced by the <code>xmlString</code> parameter."},{"pos":[2702,2849],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to encrypt; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to decrypt.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> to encrypt; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to decrypt."},{"pos":[2915,2952],"content":"The XML to be encrypted or decrypted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML to be encrypted or decrypted.","pos":[0,37]}]},{"pos":[3031,3083],"content":"The provider used to protect the configuration data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provider used to protect the configuration data.","pos":[0,52]}]},{"pos":[3162,3212],"content":"The <xref:System.Type> of the protection provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the protection provider.","pos":[0,50],"source":"The <xref:System.Type> of the protection provider."}]},{"pos":[3284,3344],"content":"The keys of optional parameters for the protection provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The keys of optional parameters for the protection provider.","pos":[0,60]}]},{"pos":[3418,3480],"content":"The values of optional parameters for the protection provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The values of optional parameters for the protection provider.","pos":[0,62]}]},{"pos":[3538,3628],"content":"A string containing either the encrypted or decrypted value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">xmlString</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A string containing either the encrypted or decrypted value of the <code>xmlString</code>."},{"pos":[4337,4400],"content":"Used internally to support remote access to configuration data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Used internally to support remote access to configuration data.","pos":[0,63]}]},{"pos":[4586,4639],"content":"Path to the remote configuration file to be accessed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Path to the remote configuration file to be accessed.","pos":[0,53]}]},{"pos":[4712,4779],"content":"A Boolean value specifying whether only the <ph id=\"ph1\">`readTime`</ph> is returned.","needQuote":true,"needEscape":true,"source":"A Boolean value specifying whether only the `readTime` is returned."},{"pos":[4843,4875],"content":"Time the file was last accessed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Time the file was last accessed.","pos":[0,32]}]},{"pos":[4933,5068],"content":"An <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_array\" name=\"array\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of 8-bit unsigned integers (bytes) containing the configuration data.","needQuote":true,"needEscape":true,"source":"An <xref uid=\"langword_csharp_array\" name=\"array\" href=\"\"></xref> of 8-bit unsigned integers (bytes) containing the configuration data."},{"pos":[5895,5938],"content":"Gets the details of the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the details of the configuration file.","pos":[0,43]}]},{"pos":[6157,6178],"content":"The name of the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the file.","pos":[0,21]}]},{"pos":[6242,6397],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the file exists; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the file exists; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6457,6478],"content":"The size of the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the file.","pos":[0,21]}]},{"pos":[6544,6574],"content":"The date the file was created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The date the file was created.","pos":[0,30]}]},{"pos":[6643,6678],"content":"The date the file was last written.","needQuote":true,"needEscape":true,"nodes":[{"content":"The date the file was last written.","pos":[0,35]}]},{"pos":[7450,7513],"content":"Used internally to support remote access to configuration data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Used internally to support remote access to configuration data.","pos":[0,63]}]},{"pos":[7709,7745],"content":"The level of the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The level of the configuration file.","pos":[0,36]}]},{"pos":[7806,7859],"content":"Path to the remote configuration file to be accessed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Path to the remote configuration file to be accessed.","pos":[0,53]}]},{"pos":[7920,7947],"content":"Path to the remote machine.","needQuote":true,"needEscape":true,"nodes":[{"content":"Path to the remote machine.","pos":[0,27]}]},{"pos":[8019,8073],"content":"The subpath of the location of the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The subpath of the location of the configuration file.","pos":[0,54]}]},{"pos":[8131,8206],"content":"A concatenated string representing the file path of the configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A concatenated string representing the file path of the configuration file.","pos":[0,75]}]},{"pos":[8963,9026],"content":"Used internally to support remote access to configuration data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Used internally to support remote access to configuration data.","pos":[0,63]}]},{"pos":[9228,9281],"content":"Path to the remote configuration file to be accessed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Path to the remote configuration file to be accessed.","pos":[0,53]}]},{"pos":[9354,9393],"content":"File to duplicate file attributes from.","needQuote":true,"needEscape":true,"nodes":[{"content":"File to duplicate file attributes from.","pos":[0,39]}]},{"pos":[9454,9473],"content":"Data to be written.","needQuote":true,"needEscape":true,"nodes":[{"content":"Data to be written.","pos":[0,19]}]},{"pos":[9537,9569],"content":"Time the file was last accessed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Time the file was last accessed.","pos":[0,32]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Configuration.IRemoteWebConfigurationHostServer\n  id: IRemoteWebConfigurationHostServer\n  children:\n  - System.Web.Configuration.IRemoteWebConfigurationHostServer.DoEncryptOrDecrypt(System.Boolean,System.String,System.String,System.String,System.String[],System.String[])\n  - System.Web.Configuration.IRemoteWebConfigurationHostServer.GetData(System.String,System.Boolean,System.Int64@)\n  - System.Web.Configuration.IRemoteWebConfigurationHostServer.GetFileDetails(System.String,System.Boolean@,System.Int64@,System.Int64@,System.Int64@)\n  - System.Web.Configuration.IRemoteWebConfigurationHostServer.GetFilePaths(System.Int32,System.String,System.String,System.String)\n  - System.Web.Configuration.IRemoteWebConfigurationHostServer.WriteData(System.String,System.String,System.Byte[],System.Int64@)\n  langs:\n  - csharp\n  name: IRemoteWebConfigurationHostServer\n  nameWithType: IRemoteWebConfigurationHostServer\n  fullName: System.Web.Configuration.IRemoteWebConfigurationHostServer\n  type: Interface\n  summary: Used internally to support remote access to configuration data.\n  remarks: Base class from which <xref:System.Web.Configuration.RemoteWebConfigurationHostServer> extends.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"A99B591A-23C6-4238-8452-C7B0E895063D\")]\n\n      public interface IRemoteWebConfigurationHostServer\n  implements: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.IRemoteWebConfigurationHostServer.DoEncryptOrDecrypt(System.Boolean,System.String,System.String,System.String,System.String[],System.String[])\n  id: DoEncryptOrDecrypt(System.Boolean,System.String,System.String,System.String,System.String[],System.String[])\n  parent: System.Web.Configuration.IRemoteWebConfigurationHostServer\n  langs:\n  - csharp\n  name: DoEncryptOrDecrypt(Boolean,String,String,String,String[],String[])\n  nameWithType: IRemoteWebConfigurationHostServer.DoEncryptOrDecrypt(Boolean,String,String,String,String[],String[])\n  fullName: System.Web.Configuration.IRemoteWebConfigurationHostServer.DoEncryptOrDecrypt(Boolean,String,String,String,String[],String[])\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Conditionally encrypts or decrypts the value of the string referenced by the <code>xmlString</code> parameter.\n  syntax:\n    content: public string DoEncryptOrDecrypt (bool doEncrypt, string xmlString, string protectionProviderName, string protectionProviderType, string[] parameterKeys, string[] parameterValues);\n    parameters:\n    - id: doEncrypt\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> to encrypt; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to decrypt.\n    - id: xmlString\n      type: System.String\n      description: The XML to be encrypted or decrypted.\n    - id: protectionProviderName\n      type: System.String\n      description: The provider used to protect the configuration data.\n    - id: protectionProviderType\n      type: System.String\n      description: The <xref:System.Type> of the protection provider.\n    - id: parameterKeys\n      type: System.String[]\n      description: The keys of optional parameters for the protection provider.\n    - id: parameterValues\n      type: System.String[]\n      description: The values of optional parameters for the protection provider.\n    return:\n      type: System.String\n      description: A string containing either the encrypted or decrypted value of the <code>xmlString</code>.\n  overload: System.Web.Configuration.IRemoteWebConfigurationHostServer.DoEncryptOrDecrypt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.IRemoteWebConfigurationHostServer.GetData(System.String,System.Boolean,System.Int64@)\n  id: GetData(System.String,System.Boolean,System.Int64@)\n  parent: System.Web.Configuration.IRemoteWebConfigurationHostServer\n  langs:\n  - csharp\n  name: GetData(String,Boolean,Int64)\n  nameWithType: IRemoteWebConfigurationHostServer.GetData(String,Boolean,Int64)\n  fullName: System.Web.Configuration.IRemoteWebConfigurationHostServer.GetData(String,Boolean,Int64)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Used internally to support remote access to configuration data.\n  syntax:\n    content: public byte[] GetData (string fileName, bool getReadTimeOnly, out long readTime);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: Path to the remote configuration file to be accessed.\n    - id: getReadTimeOnly\n      type: System.Boolean\n      description: A Boolean value specifying whether only the `readTime` is returned.\n    - id: readTime\n      type: System.Int64\n      description: Time the file was last accessed.\n    return:\n      type: System.Byte[]\n      description: An <xref uid=\"langword_csharp_array\" name=\"array\" href=\"\"></xref> of 8-bit unsigned integers (bytes) containing the configuration data.\n  overload: System.Web.Configuration.IRemoteWebConfigurationHostServer.GetData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.IRemoteWebConfigurationHostServer.GetFileDetails(System.String,System.Boolean@,System.Int64@,System.Int64@,System.Int64@)\n  id: GetFileDetails(System.String,System.Boolean@,System.Int64@,System.Int64@,System.Int64@)\n  parent: System.Web.Configuration.IRemoteWebConfigurationHostServer\n  langs:\n  - csharp\n  name: GetFileDetails(String,Boolean,Int64,Int64,Int64)\n  nameWithType: IRemoteWebConfigurationHostServer.GetFileDetails(String,Boolean,Int64,Int64,Int64)\n  fullName: System.Web.Configuration.IRemoteWebConfigurationHostServer.GetFileDetails(String,Boolean,Int64,Int64,Int64)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets the details of the configuration file.\n  syntax:\n    content: public void GetFileDetails (string name, out bool exists, out long size, out long createDate, out long lastWriteDate);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the file.\n    - id: exists\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the file exists; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: size\n      type: System.Int64\n      description: The size of the file.\n    - id: createDate\n      type: System.Int64\n      description: The date the file was created.\n    - id: lastWriteDate\n      type: System.Int64\n      description: The date the file was last written.\n  overload: System.Web.Configuration.IRemoteWebConfigurationHostServer.GetFileDetails*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.IRemoteWebConfigurationHostServer.GetFilePaths(System.Int32,System.String,System.String,System.String)\n  id: GetFilePaths(System.Int32,System.String,System.String,System.String)\n  parent: System.Web.Configuration.IRemoteWebConfigurationHostServer\n  langs:\n  - csharp\n  name: GetFilePaths(Int32,String,String,String)\n  nameWithType: IRemoteWebConfigurationHostServer.GetFilePaths(Int32,String,String,String)\n  fullName: System.Web.Configuration.IRemoteWebConfigurationHostServer.GetFilePaths(Int32,String,String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Used internally to support remote access to configuration data.\n  syntax:\n    content: public string GetFilePaths (int webLevel, string path, string site, string locationSubPath);\n    parameters:\n    - id: webLevel\n      type: System.Int32\n      description: The level of the configuration file.\n    - id: path\n      type: System.String\n      description: Path to the remote configuration file to be accessed.\n    - id: site\n      type: System.String\n      description: Path to the remote machine.\n    - id: locationSubPath\n      type: System.String\n      description: The subpath of the location of the configuration file.\n    return:\n      type: System.String\n      description: A concatenated string representing the file path of the configuration file.\n  overload: System.Web.Configuration.IRemoteWebConfigurationHostServer.GetFilePaths*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.IRemoteWebConfigurationHostServer.WriteData(System.String,System.String,System.Byte[],System.Int64@)\n  id: WriteData(System.String,System.String,System.Byte[],System.Int64@)\n  parent: System.Web.Configuration.IRemoteWebConfigurationHostServer\n  langs:\n  - csharp\n  name: WriteData(String,String,Byte[],Int64)\n  nameWithType: IRemoteWebConfigurationHostServer.WriteData(String,String,Byte[],Int64)\n  fullName: System.Web.Configuration.IRemoteWebConfigurationHostServer.WriteData(String,String,Byte[],Int64)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Used internally to support remote access to configuration data.\n  syntax:\n    content: public void WriteData (string fileName, string templateFileName, byte[] data, ref long readTime);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: Path to the remote configuration file to be accessed.\n    - id: templateFileName\n      type: System.String\n      description: File to duplicate file attributes from.\n    - id: data\n      type: System.Byte[]\n      description: Data to be written.\n    - id: readTime\n      type: System.Int64\n      description: Time the file was last accessed.\n  overload: System.Web.Configuration.IRemoteWebConfigurationHostServer.WriteData*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.Configuration.IRemoteWebConfigurationHostServer.DoEncryptOrDecrypt(System.Boolean,System.String,System.String,System.String,System.String[],System.String[])\n  parent: System.Web.Configuration.IRemoteWebConfigurationHostServer\n  isExternal: false\n  name: DoEncryptOrDecrypt(Boolean,String,String,String,String[],String[])\n  nameWithType: IRemoteWebConfigurationHostServer.DoEncryptOrDecrypt(Boolean,String,String,String,String[],String[])\n  fullName: System.Web.Configuration.IRemoteWebConfigurationHostServer.DoEncryptOrDecrypt(Boolean,String,String,String,String[],String[])\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.Configuration.IRemoteWebConfigurationHostServer.GetData(System.String,System.Boolean,System.Int64@)\n  parent: System.Web.Configuration.IRemoteWebConfigurationHostServer\n  isExternal: false\n  name: GetData(String,Boolean,Int64)\n  nameWithType: IRemoteWebConfigurationHostServer.GetData(String,Boolean,Int64)\n  fullName: System.Web.Configuration.IRemoteWebConfigurationHostServer.GetData(String,Boolean,Int64)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Web.Configuration.IRemoteWebConfigurationHostServer.GetFileDetails(System.String,System.Boolean@,System.Int64@,System.Int64@,System.Int64@)\n  parent: System.Web.Configuration.IRemoteWebConfigurationHostServer\n  isExternal: false\n  name: GetFileDetails(String,Boolean,Int64,Int64,Int64)\n  nameWithType: IRemoteWebConfigurationHostServer.GetFileDetails(String,Boolean,Int64,Int64,Int64)\n  fullName: System.Web.Configuration.IRemoteWebConfigurationHostServer.GetFileDetails(String,Boolean,Int64,Int64,Int64)\n- uid: System.Web.Configuration.IRemoteWebConfigurationHostServer.GetFilePaths(System.Int32,System.String,System.String,System.String)\n  parent: System.Web.Configuration.IRemoteWebConfigurationHostServer\n  isExternal: false\n  name: GetFilePaths(Int32,String,String,String)\n  nameWithType: IRemoteWebConfigurationHostServer.GetFilePaths(Int32,String,String,String)\n  fullName: System.Web.Configuration.IRemoteWebConfigurationHostServer.GetFilePaths(Int32,String,String,String)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Configuration.IRemoteWebConfigurationHostServer.WriteData(System.String,System.String,System.Byte[],System.Int64@)\n  parent: System.Web.Configuration.IRemoteWebConfigurationHostServer\n  isExternal: false\n  name: WriteData(String,String,Byte[],Int64)\n  nameWithType: IRemoteWebConfigurationHostServer.WriteData(String,String,Byte[],Int64)\n  fullName: System.Web.Configuration.IRemoteWebConfigurationHostServer.WriteData(String,String,Byte[],Int64)\n- uid: System.Web.Configuration.IRemoteWebConfigurationHostServer.DoEncryptOrDecrypt*\n  parent: System.Web.Configuration.IRemoteWebConfigurationHostServer\n  isExternal: false\n  name: DoEncryptOrDecrypt\n  nameWithType: IRemoteWebConfigurationHostServer.DoEncryptOrDecrypt\n- uid: System.Web.Configuration.IRemoteWebConfigurationHostServer.GetData*\n  parent: System.Web.Configuration.IRemoteWebConfigurationHostServer\n  isExternal: false\n  name: GetData\n  nameWithType: IRemoteWebConfigurationHostServer.GetData\n- uid: System.Web.Configuration.IRemoteWebConfigurationHostServer.GetFileDetails*\n  parent: System.Web.Configuration.IRemoteWebConfigurationHostServer\n  isExternal: false\n  name: GetFileDetails\n  nameWithType: IRemoteWebConfigurationHostServer.GetFileDetails\n- uid: System.Web.Configuration.IRemoteWebConfigurationHostServer.GetFilePaths*\n  parent: System.Web.Configuration.IRemoteWebConfigurationHostServer\n  isExternal: false\n  name: GetFilePaths\n  nameWithType: IRemoteWebConfigurationHostServer.GetFilePaths\n- uid: System.Web.Configuration.IRemoteWebConfigurationHostServer.WriteData*\n  parent: System.Web.Configuration.IRemoteWebConfigurationHostServer\n  isExternal: false\n  name: WriteData\n  nameWithType: IRemoteWebConfigurationHostServer.WriteData\n"}