{"nodes":[{"pos":[3304,3380],"content":"Provides properties, methods, and events related to the current application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides properties, methods, and events related to the current application.","pos":[0,76]}]},{"pos":[3393,4035],"content":"The properties exposed by the `My.Application` object return data that is associated only with the current application or DLL. No system-level information can be altered with `My.Application`.       The `My.Application` object consists of the following classes:      -   <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase> provides members that are available in all projects.      -   WindowsFormsApplicationBase provides members that are available in Windows Forms applications.      -   <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase> provides members that are available in console applications.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The properties exposed by the <ph id=\"ph1\">`My.Application`</ph> object return data that is associated only with the current application or DLL.","pos":[0,126],"source":"The properties exposed by the `My.Application` object return data that is associated only with the current application or DLL."},{"content":"No system-level information can be altered with <ph id=\"ph1\">`My.Application`</ph>.","pos":[127,192],"source":" No system-level information can be altered with `My.Application`."},{"content":"The <ph id=\"ph1\">`My.Application`</ph> object consists of the following classes:      -   &lt;xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase&gt; provides members that are available in all projects.","pos":[199,388],"source":"       The `My.Application` object consists of the following classes:      -   <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase> provides members that are available in all projects."},{"content":"-   WindowsFormsApplicationBase provides members that are available in Windows Forms applications.","pos":[394,492]},{"content":"-   &lt;xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase&gt; provides members that are available in console applications.","pos":[498,634],"source":"      -   <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase> provides members that are available in console applications."}]},{"pos":[6469,6600],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\"></xref> class."},{"pos":[7536,7706],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified authentication mode.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\"></xref> class with the specified authentication mode."},{"pos":[7719,8309],"content":"If the `authenticationMode` parameter is the <xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode> enumeration value, then this constructor attempts to set the current thread's <xref:System.Threading.Thread.CurrentPrincipal%2A> property to the <xref:System.Security.Principal.WindowsPrincipal> for the current user.       If the `authenticationMode` parameter is the <xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode> enumeration value, then this constructor leaves the current thread's <xref:System.Threading.Thread.CurrentPrincipal%2A> property unchanged.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the <ph id=\"ph1\">`authenticationMode`</ph> parameter is the &lt;xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode&gt; enumeration value, then this constructor attempts to set the current thread's &lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt; property to the &lt;xref:System.Security.Principal.WindowsPrincipal&gt; for the current user.","pos":[0,329],"source":"If the `authenticationMode` parameter is the <xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode> enumeration value, then this constructor attempts to set the current thread's <xref:System.Threading.Thread.CurrentPrincipal%2A> property to the <xref:System.Security.Principal.WindowsPrincipal> for the current user."},{"content":"If the <ph id=\"ph1\">`authenticationMode`</ph> parameter is the &lt;xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode&gt; enumeration value, then this constructor leaves the current thread's &lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt; property unchanged.","pos":[336,588],"source":"       If the `authenticationMode` parameter is the <xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode> enumeration value, then this constructor leaves the current thread's <xref:System.Threading.Thread.CurrentPrincipal%2A> property unchanged."}]},{"pos":[8589,8720],"content":"<xref href=\"Microsoft.VisualBasic.ApplicationServices.AuthenticationMode\"></xref>. Specifies the application's authentication mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.ApplicationServices.AuthenticationMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,82],"source":"<xref href=\"Microsoft.VisualBasic.ApplicationServices.AuthenticationMode\"></xref>."},{"content":"Specifies the application's authentication mode.","pos":[83,131]}]},{"pos":[9385,9516],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ApplicationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the current thread of a Windows Forms application.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Windows.Forms.ApplicationContext\"></xref> object for the current thread of a Windows Forms application."},{"pos":[9529,9908],"content":"This is an advanced member; it does not appear in IntelliSense unless you click the **All** tab.      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This is an advanced member; it does not appear in IntelliSense unless you click the <bpt id=\"p1\">**</bpt>All<ept id=\"p1\">**</ept> tab.","pos":[0,96],"source":"This is an advanced member; it does not appear in IntelliSense unless you click the **All** tab."},{"content":"Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","pos":[105,366],"source":"      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|"}]},{"pos":[10091,10270],"content":"This property returns the <xref href=\"System.Windows.Forms.ApplicationContext\"></xref> object for the current thread. That object contains contextual information about the thread.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property returns the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.ApplicationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the current thread.","pos":[0,117],"source":"This property returns the <xref href=\"System.Windows.Forms.ApplicationContext\"></xref> object for the current thread."},{"content":"That object contains contextual information about the thread.","pos":[118,179]}]},{"pos":[10902,10964],"content":"Processes all Windows messages currently in the message queue.","needQuote":true,"needEscape":true,"nodes":[{"content":"Processes all Windows messages currently in the message queue.","pos":[0,62]}]},{"pos":[10977,13307],"content":"The `My.Application.DoEvents` method allows your application to handle other events that might be raised while you code runs. The `My.Application.DoEvents` method has the same behavior as the <xref:System.Windows.Forms.Application.DoEvents%2A> method.       When you run a Windows Forms application, it creates a new form, which then waits for events to be handled. Each time the form handles an event, such as a button click, it processes all the code associated with that event. All other events wait in the queue. While your code handles the event, your application does not respond. For example, the window does not repaint if another window is dragged on top.       If you call `My.Application.DoEvents` in your code, your application can handle the other events. For example, if your code adds data to a <xref:System.Windows.Forms.ListBox> in a loop, and after each step of the loop it calls `My.Application.DoEvents`, your form repaints when another window is dragged over it. If you remove `My.Application.DoEvents` from your code, your form will not repaint until the click event handler of the button is finished executing.       Typically, you use this method in a loop to process messages.      > [!NOTE] >  The `My.Application.DoEvents` method does not process events in exactly the same way as the form does. Use multithreading to make the form directly handle the events. For more information, see [Multithreaded Applications](~/add/includes/ajax-current-ext-md.md).      > [!CAUTION] >  If a method that handles a user interface (UI) event calls the `My.Application.DoEvents` method, the method might be re-entered before it finishes. This can happen because the `My.Application.DoEvents` method processes Windows messages, and Windows messages can raise events.       The following table lists an example of a task involving the `My.Application.DoEvents` method.      |||   |-|-|   |To|See|   |Allow a form to respond to UI input while busy|[Walkthrough: Handling Events](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`My.Application.DoEvents`</ph> method allows your application to handle other events that might be raised while you code runs.","pos":[0,125],"source":"The `My.Application.DoEvents` method allows your application to handle other events that might be raised while you code runs."},{"content":"The <ph id=\"ph1\">`My.Application.DoEvents`</ph> method has the same behavior as the &lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt; method.","pos":[126,251],"source":" The `My.Application.DoEvents` method has the same behavior as the <xref:System.Windows.Forms.Application.DoEvents%2A> method."},{"content":"When you run a Windows Forms application, it creates a new form, which then waits for events to be handled.","pos":[258,365]},{"content":"Each time the form handles an event, such as a button click, it processes all the code associated with that event.","pos":[366,480]},{"content":"All other events wait in the queue.","pos":[481,516]},{"content":"While your code handles the event, your application does not respond.","pos":[517,586]},{"content":"For example, the window does not repaint if another window is dragged on top.","pos":[587,664]},{"content":"If you call <ph id=\"ph1\">`My.Application.DoEvents`</ph> in your code, your application can handle the other events.","pos":[671,768],"source":"       If you call `My.Application.DoEvents` in your code, your application can handle the other events."},{"content":"For example, if your code adds data to a &lt;xref:System.Windows.Forms.ListBox&gt; in a loop, and after each step of the loop it calls <ph id=\"ph1\">`My.Application.DoEvents`</ph>, your form repaints when another window is dragged over it.","pos":[769,983],"source":" For example, if your code adds data to a <xref:System.Windows.Forms.ListBox> in a loop, and after each step of the loop it calls `My.Application.DoEvents`, your form repaints when another window is dragged over it."},{"content":"If you remove <ph id=\"ph1\">`My.Application.DoEvents`</ph> from your code, your form will not repaint until the click event handler of the button is finished executing.","pos":[984,1133],"source":" If you remove `My.Application.DoEvents` from your code, your form will not repaint until the click event handler of the button is finished executing."},{"content":"Typically, you use this method in a loop to process messages.","pos":[1140,1201]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The <ph id=\"ph2\">`My.Application.DoEvents`</ph> method does not process events in exactly the same way as the form does.","pos":[1207,1322],"source":"      > [!NOTE] >  The `My.Application.DoEvents` method does not process events in exactly the same way as the form does."},{"content":"Use multithreading to make the form directly handle the events.","pos":[1323,1386]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Multithreaded Applications<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1387,1481],"source":" For more information, see [Multithreaded Applications](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  If a method that handles a user interface (UI) event calls the <ph id=\"ph2\">`My.Application.DoEvents`</ph> method, the method might be re-entered before it finishes.","pos":[1487,1650],"source":"      > [!CAUTION] >  If a method that handles a user interface (UI) event calls the `My.Application.DoEvents` method, the method might be re-entered before it finishes."},{"content":"This can happen because the <ph id=\"ph1\">`My.Application.DoEvents`</ph> method processes Windows messages, and Windows messages can raise events.","pos":[1651,1778],"source":" This can happen because the `My.Application.DoEvents` method processes Windows messages, and Windows messages can raise events."},{"content":"The following table lists an example of a task involving the <ph id=\"ph1\">`My.Application.DoEvents`</ph> method.","pos":[1785,1879],"source":"       The following table lists an example of a task involving the `My.Application.DoEvents` method."},{"content":"|||   |-|-|   |To|See|   |Allow a form to respond to UI input while busy|<bpt id=\"p1\">[</bpt>Walkthrough: Handling Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id=\"p2\">**</bpt>Yes<ept id=\"p2\">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","pos":[1885,2298],"source":"      |||   |-|-|   |To|See|   |Allow a form to respond to UI input while busy|[Walkthrough: Handling Events](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|"}]},{"pos":[14357,14457],"content":"Determines whether this application will use the Windows XP styles for windows, controls, and so on.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether this application will use the Windows XP styles for windows, controls, and so on.","pos":[0,100]}]},{"pos":[14469,14683],"content":"The <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> method uses this property to determine whether to call <xref:System.Windows.Forms.Application.EnableVisualStyles%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt; method uses this property to determine whether to call &lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A&gt;.","pos":[0,214],"source":"The <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> method uses this property to determine whether to call <xref:System.Windows.Forms.Application.EnableVisualStyles%2A>."}]},{"pos":[14813,14947],"content":"A <xref:System.Boolean> value that indicates whether this application will use the XP Windows styles for windows, controls, and so on.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt; value that indicates whether this application will use the XP Windows styles for windows, controls, and so on.","pos":[0,134],"source":"A <xref:System.Boolean> value that indicates whether this application will use the XP Windows styles for windows, controls, and so on."}]},{"pos":[15619,15657],"content":"Hides the application's splash screen.","needQuote":true,"needEscape":true,"nodes":[{"content":"Hides the application's splash screen.","pos":[0,38]}]},{"pos":[15670,15923],"content":"The <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> class creates the splash screen on a separate thread. This method marshals the call to the correct thread.       This method is called when the main form is done loading.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> class creates the splash screen on a separate thread. This method marshals the call to the correct thread.       This method is called when the main form is done loading.","pos":[0,251],"nodes":[{"content":"The &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt; class creates the splash screen on a separate thread.","pos":[0,134],"source":"The <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> class creates the splash screen on a separate thread."},{"content":"This method marshals the call to the correct thread.","pos":[135,187]},{"content":"This method is called when the main form is done loading.","pos":[194,251]}]}]},{"pos":[16668,16737],"content":"Determines whether this application is a single-instance application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether this application is a single-instance application.","pos":[0,69]}]},{"pos":[16749,16934],"content":"The <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A> method uses this property to determine whether this application is a single-instance application.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A&gt; method uses this property to determine whether this application is a single-instance application.","pos":[0,185],"source":"The <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A> method uses this property to determine whether this application is a single-instance application."}]},{"pos":[17062,17165],"content":"A <xref:System.Boolean> value that indicates whether this application is a single-instance application.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt; value that indicates whether this application is a single-instance application.","pos":[0,103],"source":"A <xref:System.Boolean> value that indicates whether this application is a single-instance application."}]},{"pos":[17791,17839],"content":"Gets or sets the main form for this application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the main form for this application.","pos":[0,48]}]},{"pos":[17852,18443],"content":"Use the `MainForm` property to get or set the <xref:System.Windows.Forms.Form> object that the Visual Basic Application Startup/Shutdown model uses as the application's main form.       This property supports the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application Startup/Shutdown model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).       The changes to this property are not persisted when the application closes. To change the main form permanently, you must change the setting in the **Project Designer**.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the <ph id=\"ph1\">`MainForm`</ph> property to get or set the &lt;xref:System.Windows.Forms.Form&gt; object that the Visual Basic Application Startup/Shutdown model uses as the application's main form.","pos":[0,179],"source":"Use the `MainForm` property to get or set the <xref:System.Windows.Forms.Form> object that the Visual Basic Application Startup/Shutdown model uses as the application's main form."},{"content":"This property supports the <ph id=\"ph1\">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> Application Startup/Shutdown model.","pos":[186,296],"source":"       This property supports the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application Startup/Shutdown model."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview of the Visual Basic Application Model<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[297,411],"source":" For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md)."},{"content":"The changes to this property are not persisted when the application closes.","pos":[418,493]},{"content":"To change the main form permanently, you must change the setting in the <bpt id=\"p1\">**</bpt>Project Designer<ept id=\"p1\">**</ept>.","pos":[494,587],"source":" To change the main form permanently, you must change the setting in the **Project Designer**."}]},{"pos":[18596,18644],"content":"Gets or sets the main form for this application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the main form for this application.","pos":[0,48]}]},{"pos":[19372,19469],"content":"Determines the minimum length of time, in milliseconds, for which the splash screen is displayed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines the minimum length of time, in milliseconds, for which the splash screen is displayed.","pos":[0,97]}]},{"pos":[19482,21616],"content":"The `My.Application.MinimumSplashScreenDisplayTime` property allows you to specify the minimum length of time you want the application's splash screen to be displayed. If the main form finishes initializing in less time than what is specified by this property, the splash screen remains until the requested amount of time passes, at which time the main form is displayed. If your application takes longer to start, the splash screen is closed once the main form becomes active.       When you add a splash screen to your application using the Project Designer, it sets the `My.Application.MinimumSplashScreenDisplayTime` property to 2000, giving a minimum display time of two seconds.       This property supports the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).       You should set the `My.Application.MinimumSplashScreenDisplayTime` property in a method that overrides the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> or <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> method. Code that overrides methods of the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> class should be entered in the ApplicationEvents.vb file, which is hidden by default.      ||   |-|   |To access the Code Editor window for overriding members|   |1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.<br />2.  Click the **Application** tab.<br />3.  Click the **View Application Events** button to open the Code Editor.<br />     For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The `My.Application.MinimumSplashScreenDisplayTime` property allows you to specify the minimum length of time you want the application's splash screen to be displayed. If the main form finishes initializing in less time than what is specified by this property, the splash screen remains until the requested amount of time passes, at which time the main form is displayed. If your application takes longer to start, the splash screen is closed once the main form becomes active.       When you add a splash screen to your application using the Project Designer, it sets the `My.Application.MinimumSplashScreenDisplayTime` property to 2000, giving a minimum display time of two seconds.       This property supports the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).       You should set the `My.Application.MinimumSplashScreenDisplayTime` property in a method that overrides the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> or <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> method. Code that overrides methods of the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> class should be entered in the ApplicationEvents.vb file, which is hidden by default.      ||   |-|   |To access the Code Editor window for overriding members|   |1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.","pos":[0,1592],"nodes":[{"content":"The <ph id=\"ph1\">`My.Application.MinimumSplashScreenDisplayTime`</ph> property allows you to specify the minimum length of time you want the application's splash screen to be displayed.","pos":[0,167],"source":"The `My.Application.MinimumSplashScreenDisplayTime` property allows you to specify the minimum length of time you want the application's splash screen to be displayed."},{"content":"If the main form finishes initializing in less time than what is specified by this property, the splash screen remains until the requested amount of time passes, at which time the main form is displayed.","pos":[168,371]},{"content":"If your application takes longer to start, the splash screen is closed once the main form becomes active.","pos":[372,477]},{"content":"When you add a splash screen to your application using the Project Designer, it sets the <ph id=\"ph1\">`My.Application.MinimumSplashScreenDisplayTime`</ph> property to 2000, giving a minimum display time of two seconds.","pos":[484,684],"source":"       When you add a splash screen to your application using the Project Designer, it sets the `My.Application.MinimumSplashScreenDisplayTime` property to 2000, giving a minimum display time of two seconds."},{"content":"This property supports the <ph id=\"ph1\">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> Application model.","pos":[691,784],"source":"       This property supports the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview of the Visual Basic Application Model<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[785,899],"source":" For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md)."},{"content":"You should set the <ph id=\"ph1\">`My.Application.MinimumSplashScreenDisplayTime`</ph> property in a method that overrides the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt; or &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A&gt; method.","pos":[906,1217],"source":"       You should set the `My.Application.MinimumSplashScreenDisplayTime` property in a method that overrides the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> or <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> method."},{"content":"Code that overrides methods of the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt; class should be entered in the ApplicationEvents.vb file, which is hidden by default.","pos":[1218,1415],"source":" Code that overrides methods of the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> class should be entered in the ApplicationEvents.vb file, which is hidden by default."},{"content":"||   |-|   |To access the Code Editor window for overriding members|   |1.","pos":[1421,1495]},{"content":"With a project selected in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept> on the <bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept> menu.","pos":[1497,1592],"source":"  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu."}]},{"content":"2.  Click the <bpt id=\"p1\">**</bpt>Application<ept id=\"p1\">**</ept> tab.","pos":[1598,1632],"source":"2.  Click the **Application** tab."},{"content":"3.  Click the <bpt id=\"p1\">**</bpt>View Application Events<ept id=\"p1\">**</ept> button to open the Code Editor.","pos":[1638,1711],"source":"3.  Click the **View Application Events** button to open the Code Editor."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Application Page, Project Designer (Visual Basic)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id=\"p2\">**</bpt>Yes<ept id=\"p2\">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","pos":[1722,2110],"source":"     For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|"}]},{"pos":[22412,22566],"content":"<xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>. The minimum length of time, in milliseconds, for which the splash screen is displayed.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,67],"source":"<xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>."},{"content":"The minimum length of time, in milliseconds, for which the splash screen is displayed.","pos":[68,154]}]},{"pos":[23293,23338],"content":"Occurs when the network availability changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the network availability changes.","pos":[0,45]}]},{"pos":[23351,25875],"content":"An application raises the `NetworkAvailabilityChanged` event every time that the availability of the network changes. You can use the <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> property of the `e` parameter to get the new state of the network connection. To get the current state of the network connection, use the <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> property.       This event is raised on the application's main thread with the other user-interface events. This enables the event handler to access directly the application's UI. However, if the application is busy handling another user-interface event when this event is raised, this event cannot be processed until the other event handler finishes or calls the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> method.       The <xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged> event provides the same functionality as this event but is available for all application types.       The code for the `NetworkAvailabilityChanged` event handler is stored in the ApplicationEvents.vb file, which is hidden by default.      ||   |-|   |To access the Code Editor window for application events|   |1.  Have a project selected in **Solution Explorer.** Click **Properties** on the **Project** menu.<br />2.  Click the **Application** tab.<br />3.  Click the **View Application Events** button to open the Code Editor.<br />     For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|      > [!NOTE] >  Many network hubs will provide a network connection even if the hub is disconnected from a larger network. Consequently, for wired connections, this event indicates change in the connection between the computer and a hub.      > [!NOTE] >  The `NetworkAvailabilityChanged` event is not raised by applications when they are run on Windows 95 and Windows 98, or when they are run by a non-administrator on Windows 2000. If your application might run on those operating systems, use the <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> property to check for network availability.      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An application raises the `NetworkAvailabilityChanged` event every time that the availability of the network changes. You can use the <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> property of the `e` parameter to get the new state of the network connection. To get the current state of the network connection, use the <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> property.       This event is raised on the application's main thread with the other user-interface events. This enables the event handler to access directly the application's UI. However, if the application is busy handling another user-interface event when this event is raised, this event cannot be processed until the other event handler finishes or calls the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> method.       The <xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged> event provides the same functionality as this event but is available for all application types.       The code for the `NetworkAvailabilityChanged` event handler is stored in the ApplicationEvents.vb file, which is hidden by default.      ||   |-|   |To access the Code Editor window for application events|   |1.  Have a project selected in **Solution Explorer.** Click **Properties** on the **Project** menu.","pos":[0,1370],"nodes":[{"content":"An application raises the <ph id=\"ph1\">`NetworkAvailabilityChanged`</ph> event every time that the availability of the network changes.","pos":[0,117],"source":"An application raises the `NetworkAvailabilityChanged` event every time that the availability of the network changes."},{"content":"You can use the &lt;xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A&gt; property of the <ph id=\"ph1\">`e`</ph> parameter to get the new state of the network connection.","pos":[118,296],"source":" You can use the <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> property of the `e` parameter to get the new state of the network connection."},{"content":"To get the current state of the network connection, use the &lt;xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A&gt; property.","pos":[297,426],"source":" To get the current state of the network connection, use the <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> property."},{"content":"This event is raised on the application's main thread with the other user-interface events.","pos":[433,524]},{"content":"This enables the event handler to access directly the application's UI.","pos":[525,596]},{"content":"However, if the application is busy handling another user-interface event when this event is raised, this event cannot be processed until the other event handler finishes or calls the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A&gt; method.","pos":[597,877],"source":" However, if the application is busy handling another user-interface event when this event is raised, this event cannot be processed until the other event handler finishes or calls the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> method."},{"content":"The &lt;xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged&gt; event provides the same functionality as this event but is available for all application types.","pos":[884,1055],"source":"       The <xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged> event provides the same functionality as this event but is available for all application types."},{"content":"The code for the <ph id=\"ph1\">`NetworkAvailabilityChanged`</ph> event handler is stored in the ApplicationEvents.vb file, which is hidden by default.","pos":[1062,1193],"source":"       The code for the `NetworkAvailabilityChanged` event handler is stored in the ApplicationEvents.vb file, which is hidden by default."},{"content":"||   |-|   |To access the Code Editor window for application events|   |1.","pos":[1199,1273]},{"content":"Have a project selected in <bpt id=\"p1\">**</bpt>Solution Explorer.<ept id=\"p1\">**</ept>","pos":[1275,1324],"source":"  Have a project selected in **Solution Explorer.**"},{"content":"Click <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> on the <bpt id=\"p2\">**</bpt>Project<ept id=\"p2\">**</ept> menu.","pos":[1325,1370],"source":" Click **Properties** on the **Project** menu."}]},{"content":"2.  Click the <bpt id=\"p1\">**</bpt>Application<ept id=\"p1\">**</ept> tab.","pos":[1376,1410],"source":"2.  Click the **Application** tab."},{"content":"3.  Click the <bpt id=\"p1\">**</bpt>View Application Events<ept id=\"p1\">**</ept> button to open the Code Editor.","pos":[1416,1489],"source":"3.  Click the **View Application Events** button to open the Code Editor."},{"content":"     For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|      > [!NOTE] >  Many network hubs will provide a network connection even if the hub is disconnected from a larger network. Consequently, for wired connections, this event indicates change in the connection between the computer and a hub.      > [!NOTE] >  The `NetworkAvailabilityChanged` event is not raised by applications when they are run on Windows 95 and Windows 98, or when they are run by a non-administrator on Windows 2000. If your application might run on those operating systems, use the <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> property to check for network availability.      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","pos":[1495,2494],"nodes":[{"content":"For more information, see <bpt id=\"p1\">[</bpt>Application Page, Project Designer (Visual Basic)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.|      &gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Many network hubs will provide a network connection even if the hub is disconnected from a larger network.","pos":[5,248],"source":"     For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|      > [!NOTE] >  Many network hubs will provide a network connection even if the hub is disconnected from a larger network."},{"content":"Consequently, for wired connections, this event indicates change in the connection between the computer and a hub.","pos":[249,363]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The <ph id=\"ph2\">`NetworkAvailabilityChanged`</ph> event is not raised by applications when they are run on Windows 95 and Windows 98, or when they are run by a non-administrator on Windows 2000.","pos":[369,559],"source":"      > [!NOTE] >  The `NetworkAvailabilityChanged` event is not raised by applications when they are run on Windows 95 and Windows 98, or when they are run by a non-administrator on Windows 2000."},{"content":"If your application might run on those operating systems, use the &lt;xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A&gt; property to check for network availability.","pos":[560,729],"source":" If your application might run on those operating systems, use the <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> property to check for network availability."},{"content":"Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","pos":[738,999],"source":"      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|"}]}]},{"pos":[26656,26668],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27238,27353],"content":"When overridden in a derived class, allows a designer to emit code that configures the splash screen and main form.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, allows a designer to emit code that configures the splash screen and main form.","pos":[0,115]}]},{"pos":[27366,27866],"content":"By default, this method does nothing. However, when you select a main form for your application in the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] **Project Designer**, the designer overrides this method with a method that sets the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A> property to a new instance of the main form.       This method is called by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, this method does nothing.","pos":[0,37]},{"content":"However, when you select a main form for your application in the <ph id=\"ph1\">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> <bpt id=\"p1\">**</bpt>Project Designer<ept id=\"p1\">**</ept>, the designer overrides this method with a method that sets the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A&gt; property to a new instance of the main form.","pos":[38,369],"source":" However, when you select a main form for your application in the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] **Project Designer**, the designer overrides this method with a method that sets the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A> property to a new instance of the main form."},{"content":"This method is called by the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A&gt; method.","pos":[376,498],"source":"       This method is called by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A> method."}]},{"pos":[28643,28745],"content":"When overridden in a derived class, allows a designer to emit code that initializes the splash screen.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, allows a designer to emit code that initializes the splash screen.","pos":[0,102]}]},{"pos":[28758,29291],"content":"By default, this method does nothing. If you select a splash screen for your application in the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] **Project Designer**, the designer overrides the OnCreateSplashScreen method with a method that sets the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A> property to a new instance of the splash-screen form.       This method is called by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, this method does nothing.","pos":[0,37]},{"content":"If you select a splash screen for your application in the <ph id=\"ph1\">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> <bpt id=\"p1\">**</bpt>Project Designer<ept id=\"p1\">**</ept>, the designer overrides the OnCreateSplashScreen method with a method that sets the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A&gt; property to a new instance of the splash-screen form.","pos":[38,395],"source":" If you select a splash screen for your application in the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] **Project Designer**, the designer overrides the OnCreateSplashScreen method with a method that sets the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A> property to a new instance of the splash-screen form."},{"content":"This method is called by the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt; method.","pos":[402,531],"source":"       This method is called by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> method."}]},{"pos":[30246,30441],"content":"Sets the visual styles, text display styles, and current principal for the main application thread (if the application uses Windows authentication), and initializes the splash screen, if defined.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the visual styles, text display styles, and current principal for the main application thread (if the application uses Windows authentication), and initializes the splash screen, if defined.","pos":[0,195]}]},{"pos":[30454,31001],"content":"By default, this method sets the visual styles, text display styles, and current principal for the main application thread (if the application uses Windows authentication), and calls `ShowSplashScreen` if neither `/nosplash` nor `-nosplash` is used as a command-line argument.       This method calls the following methods:      -   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A>.      -   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, this method sets the visual styles, text display styles, and current principal for the main application thread (if the application uses Windows authentication), and calls <ph id=\"ph1\">`ShowSplashScreen`</ph> if neither <ph id=\"ph2\">`/nosplash`</ph> nor <ph id=\"ph3\">`-nosplash`</ph> is used as a command-line argument.","pos":[0,276],"source":"By default, this method sets the visual styles, text display styles, and current principal for the main application thread (if the application uses Windows authentication), and calls `ShowSplashScreen` if neither `/nosplash` nor `-nosplash` is used as a command-line argument."},{"content":"This method calls the following methods:      -   &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A&gt;.","pos":[283,430],"source":"       This method calls the following methods:      -   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A>."},{"content":"-   &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A&gt;.","pos":[436,541],"source":"      -   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>."}]},{"pos":[31277,31492],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id=\"ph2\">&amp;gt;</ph> of <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, containing the command-line arguments as strings for the current application.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>, containing the command-line arguments as strings for the current application."},{"pos":[31551,31625],"content":"A <xref:System.Boolean> indicating if application startup should continue.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt; indicating if application startup should continue.","pos":[0,74],"source":"A <xref:System.Boolean> indicating if application startup should continue."}]},{"pos":[32236,32354],"content":"Provides the starting point for when the main application is ready to start running, after the initialization is done.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the starting point for when the main application is ready to start running, after the initialization is done.","pos":[0,118]}]},{"pos":[32367,33503],"content":"By default, before it enters the Windows Forms message loop, this method calls the `OnCreateMainForm` (to create the application's main form) and `HideSplashScreen` (to close the splash screen) methods:      -   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A>. Provides a way for a designer to emit code that initializes the main form.           By default, this method does nothing. However, when you select a main form for your application in the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] **Project Designer**, the designer overrides the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A> method with a method that sets the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A> property to a new instance of the main form.      -   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A>. If the application has a splash screen defined and it is open, this method closes the splash screen.           By default, this method closes the splash screen.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, before it enters the Windows Forms message loop, this method calls the <ph id=\"ph1\">`OnCreateMainForm`</ph> (to create the application's main form) and <ph id=\"ph2\">`HideSplashScreen`</ph> (to close the splash screen) methods:      -   &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A&gt;.","pos":[0,309],"source":"By default, before it enters the Windows Forms message loop, this method calls the `OnCreateMainForm` (to create the application's main form) and `HideSplashScreen` (to close the splash screen) methods:      -   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A>."},{"content":"Provides a way for a designer to emit code that initializes the main form.","pos":[310,384]},{"content":"By default, this method does nothing.","pos":[395,432]},{"content":"However, when you select a main form for your application in the <ph id=\"ph1\">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> <bpt id=\"p1\">**</bpt>Project Designer<ept id=\"p1\">**</ept>, the designer overrides the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A&gt; method with a method that sets the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A&gt; property to a new instance of the main form.","pos":[433,860],"source":" However, when you select a main form for your application in the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] **Project Designer**, the designer overrides the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A> method with a method that sets the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A> property to a new instance of the main form."},{"content":"-   &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A&gt;.","pos":[866,967],"source":"      -   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A>."},{"content":"If the application has a splash screen defined and it is open, this method closes the splash screen.","pos":[968,1068]},{"content":"By default, this method closes the splash screen.","pos":[1079,1128]}]},{"pos":[34208,34299],"content":"When overridden in a derived class, allows for code to run when the application shuts down.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, allows for code to run when the application shuts down.","pos":[0,91]}]},{"pos":[34312,34530],"content":"This method does not run if an unhandled exception occurs in the main application.       By default, this method raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown> event.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method does not run if an unhandled exception occurs in the main application.       By default, this method raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown> event.","pos":[0,216],"nodes":[{"content":"This method does not run if an unhandled exception occurs in the main application.","pos":[0,82]},{"content":"By default, this method raises the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown&gt; event.","pos":[89,216],"source":"       By default, this method raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown> event."}]}]},{"pos":[35408,35495],"content":"When overridden in a derived class, allows for code to run when the application starts.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, allows for code to run when the application starts.","pos":[0,87]}]},{"pos":[35507,35921],"content":"By default, this method raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> event. The event handler can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the event argument. If <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> is `True`, this method returns `False` to cancel the application startup. Otherwise, this method returns `True`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, this method raises the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup&gt; event.","pos":[0,126],"source":"By default, this method raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> event."},{"content":"The event handler can set the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the event argument.","pos":[127,243],"source":" The event handler can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the event argument."},{"content":"If &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; is <ph id=\"ph1\">`True`</ph>, this method returns <ph id=\"ph2\">`False`</ph> to cancel the application startup.","pos":[244,375],"source":" If <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> is `True`, this method returns `False` to cancel the application startup."},{"content":"Otherwise, this method returns <ph id=\"ph1\">`True`</ph>.","pos":[376,414],"source":" Otherwise, this method returns `True`."}]},{"pos":[36176,36377],"content":"<xref href=\"Microsoft.VisualBasic.ApplicationServices.StartupEventArgs\"></xref>. Contains the command-line arguments of the application and indicates whether the application startup should be canceled.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.ApplicationServices.StartupEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,80],"source":"<xref href=\"Microsoft.VisualBasic.ApplicationServices.StartupEventArgs\"></xref>."},{"content":"Contains the command-line arguments of the application and indicates whether the application startup should be canceled.","pos":[81,201]}]},{"pos":[36436,36522],"content":"A <xref:System.Boolean> that indicates if the application should continue starting up.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Boolean&gt; that indicates if the application should continue starting up.","pos":[0,86],"source":"A <xref:System.Boolean> that indicates if the application should continue starting up."}]},{"pos":[37438,37564],"content":"When overridden in a derived class, allows for code to run when a subsequent instance of a single-instance application starts.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, allows for code to run when a subsequent instance of a single-instance application starts.","pos":[0,126]}]},{"pos":[37576,38079],"content":"By default, this method raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> event. The event handler can set the <xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> property of the event argument. If <xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> is `True`, the method activates the main form. Otherwise, the main form is left in its current state.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, this method raises the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance&gt; event.","pos":[0,138],"source":"By default, this method raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> event."},{"content":"The event handler can set the &lt;xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A&gt; property of the event argument.","pos":[139,299],"source":" The event handler can set the <xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> property of the event argument."},{"content":"If &lt;xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A&gt; is <ph id=\"ph1\">`True`</ph>, the method activates the main form.","pos":[300,448],"source":" If <xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> is `True`, the method activates the main form."},{"content":"Otherwise, the main form is left in its current state.","pos":[449,503]}]},{"pos":[38370,38662],"content":"<xref href=\"Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs\"></xref>. Contains the command-line arguments of the subsequent application instance and indicates whether the first application instance should be brought to the foreground upon exiting the exception handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,92],"source":"<xref href=\"Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs\"></xref>."},{"content":"Contains the command-line arguments of the subsequent application instance and indicates whether the first application instance should be brought to the foreground upon exiting the exception handler.","pos":[93,292]}]},{"pos":[39580,39693],"content":"When overridden in a derived class, allows for code to run when an unhandled exception occurs in the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, allows for code to run when an unhandled exception occurs in the application.","pos":[0,113]}]},{"pos":[39705,40362],"content":"By default, this method raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException> event as long as a debugger is not attached and the user is handling the `UnhandledException` event. The event handler can set the <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> property. If <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> is `False`, or if the event is not handled, the application exits upon return from the exception handler. Otherwise, control of the application is returned to the Windows Forms message loop.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, this method raises the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException&gt; event as long as a debugger is not attached and the user is handling the <ph id=\"ph1\">`UnhandledException`</ph> event.","pos":[0,231],"source":"By default, this method raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException> event as long as a debugger is not attached and the user is handling the `UnhandledException` event."},{"content":"The event handler can set the &lt;xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A&gt; property.","pos":[232,367],"source":" The event handler can set the <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> property."},{"content":"If &lt;xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A&gt; is <ph id=\"ph1\">`False`</ph>, or if the event is not handled, the application exits upon return from the exception handler.","pos":[368,572],"source":" If <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> is `False`, or if the event is not handled, the application exits upon return from the exception handler."},{"content":"Otherwise, control of the application is returned to the Windows Forms message loop.","pos":[573,657]}]},{"pos":[40634,40725],"content":"<bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref href=\"Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs\"></xref>."},{"pos":[40784,40962],"content":"A &lt;xref:System.Boolean&gt; that indicates whether the <bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event was raised.","needQuote":true,"needEscape":true,"source":"A <xref:System.Boolean> that indicates whether the <xref href=\"Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException\"></xref> event was raised."},{"pos":[41597,41651],"content":"Gets a collection of all the application's open forms.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of all the application's open forms.","pos":[0,54]}]},{"pos":[41664,42485],"content":"The `My.Application.OpenForms` property gets a collection of all the application's open forms. The behavior is identical to the <xref:System.Windows.Forms.Application.OpenForms%2A?displayProperty=fullName> property.      > [!NOTE] >  The `My.Application.OpenForms` property returns all open forms, regardless of which thread opened them. You should check the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property of each form before accessing it; otherwise, it might throw an <xref:System.InvalidOperationException> exception.      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`My.Application.OpenForms`</ph> property gets a collection of all the application's open forms.","pos":[0,94],"source":"The `My.Application.OpenForms` property gets a collection of all the application's open forms."},{"content":"The behavior is identical to the &lt;xref:System.Windows.Forms.Application.OpenForms%2A?displayProperty=fullName&gt; property.","pos":[95,215],"source":" The behavior is identical to the <xref:System.Windows.Forms.Application.OpenForms%2A?displayProperty=fullName> property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The <ph id=\"ph2\">`My.Application.OpenForms`</ph> property returns all open forms, regardless of which thread opened them.","pos":[221,337],"source":"      > [!NOTE] >  The `My.Application.OpenForms` property returns all open forms, regardless of which thread opened them."},{"content":"You should check the &lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt; property of each form before accessing it; otherwise, it might throw an &lt;xref:System.InvalidOperationException&gt; exception.","pos":[338,535],"source":" You should check the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property of each form before accessing it; otherwise, it might throw an <xref:System.InvalidOperationException> exception."},{"content":"Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","pos":[544,805],"source":"      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|"}]},{"pos":[43338,43454],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.FormCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains all of the application's open forms.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.FormCollection\"></xref> object that contains all of the application's open forms."},{"pos":[44110,44164],"content":"Sets up and starts the Visual Basic Application model.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets up and starts the Visual Basic Application model.","pos":[0,54]}]},{"pos":[44177,44844],"content":"The `My.Application.Run` method provides support for the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model. This method should be called only from the application's `Sub Main`. By default, the `Sub Main` of a Windows Forms application calls this method. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`My.Application.Run`</ph> method provides support for the <ph id=\"ph2\">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> Application model.","pos":[0,123],"source":"The `My.Application.Run` method provides support for the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model."},{"content":"This method should be called only from the application's <ph id=\"ph1\">`Sub Main`</ph>.","pos":[124,192],"source":" This method should be called only from the application's `Sub Main`."},{"content":"By default, the <ph id=\"ph1\">`Sub Main`</ph> of a Windows Forms application calls this method.","pos":[193,269],"source":" By default, the `Sub Main` of a Windows Forms application calls this method."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview of the Visual Basic Application Model<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[270,384],"source":" For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md)."},{"content":"Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","pos":[393,654],"source":"      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|"}]},{"pos":[44994,45165],"content":"Array of type <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. The command line from <xref uid=\"langword_csharp_Sub Main\" name=\"Sub Main\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Array of type <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,79],"source":"Array of type <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>."},{"content":"The command line from <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Sub Main\" name=\"Sub Main\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[80,171],"source":" The command line from <xref uid=\"langword_csharp_Sub Main\" name=\"Sub Main\" href=\"\"></xref>."}]},{"pos":[45838,45905],"content":"Determines whether the application saves the user settings on exit.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the application saves the user settings on exit.","pos":[0,67]}]},{"pos":[45918,47049],"content":"The `SaveMySettingsOnExit` property allows the user to change how the application saves settings, at run time. You can explicitly save setting changes by using the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method of the `My.Settings` object. For more information about changing and saving settings, see [Application Properties](~/add/includes/ajax-current-ext-md.md).       The changes to this property are not persisted when the application closes. To change the `SaveMySettingsOnExit` property permanently, you must change the setting in the **Project Designer**:      ||   |-|   |To change the setting in the Project Designer|   |1.  Have a project selected in **Solution Explorer**. Click **Properties** on the **Project** menu.<br />2.  Click the **Application** tab.<br />3.  Select **Save My.Settings on Shutdown**.|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The `SaveMySettingsOnExit` property allows the user to change how the application saves settings, at run time. You can explicitly save setting changes by using the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method of the `My.Settings` object. For more information about changing and saving settings, see [Application Properties](~/add/includes/ajax-current-ext-md.md).       The changes to this property are not persisted when the application closes. To change the `SaveMySettingsOnExit` property permanently, you must change the setting in the **Project Designer**:      ||   |-|   |To change the setting in the Project Designer|   |1.  Have a project selected in **Solution Explorer**. Click **Properties** on the **Project** menu.","pos":[0,750],"nodes":[{"content":"The <ph id=\"ph1\">`SaveMySettingsOnExit`</ph> property allows the user to change how the application saves settings, at run time.","pos":[0,110],"source":"The `SaveMySettingsOnExit` property allows the user to change how the application saves settings, at run time."},{"content":"You can explicitly save setting changes by using the &lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt; method of the <ph id=\"ph1\">`My.Settings`</ph> object.","pos":[111,259],"source":" You can explicitly save setting changes by using the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method of the `My.Settings` object."},{"content":"For more information about changing and saving settings, see <bpt id=\"p1\">[</bpt>Application Properties<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[260,385],"source":" For more information about changing and saving settings, see [Application Properties](~/add/includes/ajax-current-ext-md.md)."},{"content":"The changes to this property are not persisted when the application closes.","pos":[392,467]},{"content":"To change the <ph id=\"ph1\">`SaveMySettingsOnExit`</ph> property permanently, you must change the setting in the <bpt id=\"p1\">**</bpt>Project Designer<ept id=\"p1\">**</ept>:      ||   |-|   |To change the setting in the Project Designer|   |1.","pos":[468,653],"source":" To change the `SaveMySettingsOnExit` property permanently, you must change the setting in the **Project Designer**:      ||   |-|   |To change the setting in the Project Designer|   |1."},{"content":"Have a project selected in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>.","pos":[655,704],"source":"  Have a project selected in **Solution Explorer**."},{"content":"Click <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> on the <bpt id=\"p2\">**</bpt>Project<ept id=\"p2\">**</ept> menu.","pos":[705,750],"source":" Click **Properties** on the **Project** menu."}]},{"content":"2.  Click the <bpt id=\"p1\">**</bpt>Application<ept id=\"p1\">**</ept> tab.","pos":[756,790],"source":"2.  Click the **Application** tab."},{"content":"3.  Select <bpt id=\"p1\">**</bpt>Save My.Settings on Shutdown<ept id=\"p1\">**</ept>.|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id=\"p2\">**</bpt>Yes<ept id=\"p2\">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","pos":[796,1111],"source":"3.  Select **Save My.Settings on Shutdown**.|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|"}]},{"pos":[47876,48118],"content":"<xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref>. <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> indicates that the application saves the user settings on exit. Otherwise, the settings are not implicitly saved.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,67],"source":"<xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref>."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicates that the application saves the user settings on exit.","pos":[68,192],"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> indicates that the application saves the user settings on exit."},{"content":"Otherwise, the settings are not implicitly saved.","pos":[193,242]}]},{"pos":[48792,48879],"content":"Determines if the application has a splash screen defined, and if it does, displays it.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines if the application has a splash screen defined, and if it does, displays it.","pos":[0,87]}]},{"pos":[48892,49844],"content":"By default, this method calls `OnCreateSplashScreen` in a thread-safe way.       The ShowSplashScreen method contains the code that displays the splash screen for at least the number of milliseconds specified by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A> property. To use this functionality, you must set the `My.Application.MinimumSplashScreenDisplayTime` property in a method that overrides the ShowSplashScreen or <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> method, or add the splash screen to your application using the **Project Designer**. For more information, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A>.       This method is called by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, this method calls <ph id=\"ph1\">`OnCreateSplashScreen`</ph> in a thread-safe way.","pos":[0,74],"source":"By default, this method calls `OnCreateSplashScreen` in a thread-safe way."},{"content":"The ShowSplashScreen method contains the code that displays the splash screen for at least the number of milliseconds specified by the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A&gt; property.","pos":[81,336],"source":"       The ShowSplashScreen method contains the code that displays the splash screen for at least the number of milliseconds specified by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A> property."},{"content":"To use this functionality, you must set the <ph id=\"ph1\">`My.Application.MinimumSplashScreenDisplayTime`</ph> property in a method that overrides the ShowSplashScreen or &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A&gt; method, or add the splash screen to your application using the <bpt id=\"p1\">**</bpt>Project Designer<ept id=\"p1\">**</ept>.","pos":[337,674],"source":" To use this functionality, you must set the `My.Application.MinimumSplashScreenDisplayTime` property in a method that overrides the ShowSplashScreen or <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> method, or add the splash screen to your application using the **Project Designer**."},{"content":"For more information, see &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A&gt;.","pos":[675,812],"source":" For more information, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A>."},{"content":"This method is called by the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A&gt; method.","pos":[819,948],"source":"       This method is called by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> method."}]},{"pos":[50546,50585],"content":"Occurs when the application shuts down.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the application shuts down.","pos":[0,39]}]},{"pos":[50598,51769],"content":"An application raises the `Shutdown` event before it exits. This allows you to control how the application closes its resources. This event is part of the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).       The code for the `Shutdown` event handler is stored in the ApplicationEvents.vb file, which is hidden by default.      ||   |-|   |To access the Code Editor window for application events|   |1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.<br />2.  Click the **Application** tab.<br />3.  Click the **View Application Events** button to open the Code Editor.<br />     For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An application raises the `Shutdown` event before it exits. This allows you to control how the application closes its resources. This event is part of the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).       The code for the `Shutdown` event handler is stored in the ApplicationEvents.vb file, which is hidden by default.      ||   |-|   |To access the Code Editor window for application events|   |1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.","pos":[0,633],"nodes":[{"content":"An application raises the <ph id=\"ph1\">`Shutdown`</ph> event before it exits.","pos":[0,59],"source":"An application raises the `Shutdown` event before it exits."},{"content":"This allows you to control how the application closes its resources.","pos":[60,128]},{"content":"This event is part of the <ph id=\"ph1\">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> Application model.","pos":[129,221],"source":" This event is part of the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview of the Visual Basic Application Model<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[222,336],"source":" For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md)."},{"content":"The code for the <ph id=\"ph1\">`Shutdown`</ph> event handler is stored in the ApplicationEvents.vb file, which is hidden by default.","pos":[343,456],"source":"       The code for the `Shutdown` event handler is stored in the ApplicationEvents.vb file, which is hidden by default."},{"content":"||   |-|   |To access the Code Editor window for application events|   |1.","pos":[462,536]},{"content":"With a project selected in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept> on the <bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept> menu.","pos":[538,633],"source":"  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu."}]},{"content":"2.  Click the <bpt id=\"p1\">**</bpt>Application<ept id=\"p1\">**</ept> tab.","pos":[639,673],"source":"2.  Click the **Application** tab."},{"content":"3.  Click the <bpt id=\"p1\">**</bpt>View Application Events<ept id=\"p1\">**</ept> button to open the Code Editor.","pos":[679,752],"source":"3.  Click the **View Application Events** button to open the Code Editor."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Application Page, Project Designer (Visual Basic)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id=\"p2\">**</bpt>Yes<ept id=\"p2\">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","pos":[763,1151],"source":"     For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|"}]},{"pos":[52473,52485],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[53036,53100],"content":"Determines what happens when the application's main form closes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines what happens when the application's main form closes.","pos":[0,64]}]},{"pos":[53112,53367],"content":"The <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> method checks the value of this property to determine if the application should shut down when the main form is closed, or if another open form should be promoted as the new main form.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A&gt; method checks the value of this property to determine if the application should shut down when the main form is closed, or if another open form should be promoted as the new main form.","pos":[0,255],"source":"The <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> method checks the value of this property to determine if the application should shut down when the main form is closed, or if another open form should be promoted as the new main form."}]},{"pos":[53582,53747],"content":"A <bpt id=\"p1\">&lt;xref href=\"Microsoft.VisualBasic.ApplicationServices.ShutdownMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value, indicating what the application should do when the main form closes.","needQuote":true,"needEscape":true,"source":"A <xref href=\"Microsoft.VisualBasic.ApplicationServices.ShutdownMode\"></xref> enumeration value, indicating what the application should do when the main form closes."},{"pos":[54390,54442],"content":"Gets or sets the splash screen for this application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the splash screen for this application.","pos":[0,52]}]},{"pos":[54455,55341],"content":"The `My.Application.SplashScreen` property allows you to get or set the <xref:System.Windows.Forms.Form> object that the application uses as the splash screen, the first graphic form that is displayed while an application is being started.       This property supports the Visual Basic Application model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).       The changes to this property are not persisted when the application closes. To change the splash screen permanently, you must change the setting in the **Project Designer**.      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`My.Application.SplashScreen`</ph> property allows you to get or set the &lt;xref:System.Windows.Forms.Form&gt; object that the application uses as the splash screen, the first graphic form that is displayed while an application is being started.","pos":[0,239],"source":"The `My.Application.SplashScreen` property allows you to get or set the <xref:System.Windows.Forms.Form> object that the application uses as the splash screen, the first graphic form that is displayed while an application is being started."},{"content":"This property supports the Visual Basic Application model.","pos":[246,304]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview of the Visual Basic Application Model<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[305,419],"source":" For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md)."},{"content":"The changes to this property are not persisted when the application closes.","pos":[426,501]},{"content":"To change the splash screen permanently, you must change the setting in the <bpt id=\"p1\">**</bpt>Project Designer<ept id=\"p1\">**</ept>.","pos":[502,599],"source":" To change the splash screen permanently, you must change the setting in the **Project Designer**."},{"content":"Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","pos":[608,869],"source":"      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|"}]},{"pos":[56189,56292],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that the application uses as the splash screen.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.Form\"></xref> object that the application uses as the splash screen."},{"pos":[56505,56653],"content":"The same value is assigned to this property and the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The same value is assigned to this property and the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*&gt; property.","pos":[0,148],"source":"The same value is assigned to this property and the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*> property."}]},{"pos":[57154,57189],"content":"Occurs when the application starts.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the application starts.","pos":[0,35]}]},{"pos":[57202,59294],"content":"A normal (non-single-instance) application raises the `Startup` event every time it starts. A single-instance application raises the `Startup` event when it starts only if the application is not already active; otherwise, it raises the `StartupNextInstance` event. For more information, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>.       This event is part of the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).       You can use the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the `e` parameter to control the loading of an application's startup form. When the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property is set to `True`, the startup form does not start. In that case, your code should call an alternate startup code path.       You can use the <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> property of the `e` parameter or the <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> property to access the application's command-line arguments.       The code for the `Startup` event handler is stored in the ApplicationEvents.vb file, which is hidden by default.      ||   |-|   |To access the Code Editor window for application events|   |1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.<br />2.  Click the **Application** tab.<br />3.  Click the **View Application Events** button to open the Code Editor.<br /><br /> For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A normal (non-single-instance) application raises the `Startup` event every time it starts. A single-instance application raises the `Startup` event when it starts only if the application is not already active; otherwise, it raises the `StartupNextInstance` event. For more information, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>.       This event is part of the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).       You can use the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the `e` parameter to control the loading of an application's startup form. When the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property is set to `True`, the startup form does not start. In that case, your code should call an alternate startup code path.       You can use the <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> property of the `e` parameter or the <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> property to access the application's command-line arguments.       The code for the `Startup` event handler is stored in the ApplicationEvents.vb file, which is hidden by default.      ||   |-|   |To access the Code Editor window for application events|   |1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.","pos":[0,1546],"nodes":[{"content":"A normal (non-single-instance) application raises the <ph id=\"ph1\">`Startup`</ph> event every time it starts.","pos":[0,91],"source":"A normal (non-single-instance) application raises the `Startup` event every time it starts."},{"content":"A single-instance application raises the <ph id=\"ph1\">`Startup`</ph> event when it starts only if the application is not already active; otherwise, it raises the <ph id=\"ph2\">`StartupNextInstance`</ph> event.","pos":[92,264],"source":" A single-instance application raises the `Startup` event when it starts only if the application is not already active; otherwise, it raises the `StartupNextInstance` event."},{"content":"For more information, see &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance&gt;.","pos":[265,388],"source":" For more information, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>."},{"content":"This event is part of the <ph id=\"ph1\">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> Application model.","pos":[395,487],"source":"       This event is part of the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview of the Visual Basic Application Model<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[488,602],"source":" For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md)."},{"content":"You can use the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the <ph id=\"ph1\">`e`</ph> parameter to control the loading of an application's startup form.","pos":[609,766],"source":"       You can use the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the `e` parameter to control the loading of an application's startup form."},{"content":"When the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property is set to <ph id=\"ph1\">`True`</ph>, the startup form does not start.","pos":[767,890],"source":" When the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property is set to `True`, the startup form does not start."},{"content":"In that case, your code should call an alternate startup code path.","pos":[891,958]},{"content":"You can use the &lt;xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A&gt; property of the <ph id=\"ph1\">`e`</ph> parameter or the &lt;xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A&gt; property to access the application's command-line arguments.","pos":[965,1250],"source":"       You can use the <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> property of the `e` parameter or the <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> property to access the application's command-line arguments."},{"content":"The code for the <ph id=\"ph1\">`Startup`</ph> event handler is stored in the ApplicationEvents.vb file, which is hidden by default.","pos":[1257,1369],"source":"       The code for the `Startup` event handler is stored in the ApplicationEvents.vb file, which is hidden by default."},{"content":"||   |-|   |To access the Code Editor window for application events|   |1.","pos":[1375,1449]},{"content":"With a project selected in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept> on the <bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept> menu.","pos":[1451,1546],"source":"  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu."}]},{"content":"2.  Click the <bpt id=\"p1\">**</bpt>Application<ept id=\"p1\">**</ept> tab.","pos":[1552,1586],"source":"2.  Click the **Application** tab."},{"content":"3.  Click the <bpt id=\"p1\">**</bpt>View Application Events<ept id=\"p1\">**</ept> button to open the Code Editor.","pos":[1592,1665],"source":"3.  Click the **View Application Events** button to open the Code Editor."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Application Page, Project Designer (Visual Basic)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id=\"p2\">**</bpt>Yes<ept id=\"p2\">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","pos":[1678,2066],"source":" For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|"}]},{"pos":[60319,60331],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[60909,61009],"content":"Occurs when attempting to start a single-instance application and the application is already active.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when attempting to start a single-instance application and the application is already active.","pos":[0,100]}]},{"pos":[61022,64205],"content":"A single-instance application raises the StartupNextInstance event when you attempt to restart the application when it is already active. When a single-instance application starts for the first time, it raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> event. For more information, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>.       This event is part of the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).       This event is raised on the application's main thread with the other user-interface events. This allows the event handler to access directly the application's user interface. However, if the application is busy handling another user-interface event when this event is raised, this event cannot be processed until the other event handler finishes or calls the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> method.      > [!NOTE] >  The `StartupNextInstance` event is raised only in single-instance applications. To enable single-instance behavior for your application, you must check the **Make single instance application** check box in the Project Designer.      ||   |-|   |To make an application single instance|   |1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.<br />2.  Click the **Application** tab.<br />3.  Select the **Make single instance application** check box.|       You must use the <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> property of the `e` parameter to access the arguments for subsequent attempts to start a single-instance application. The <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> property provides the arguments used to start the first instance of a single-instance application.       The code for the StartupNextInstance event handler is stored in the ApplicationEvents.vb file, which is hidden by default.      ||   |-|   |To access the Code Editor window for application events|   |1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.<br />2.  Click the **Application** tab.<br />3.  Click the **View Application Events** button to open the Code Editor.<br />     For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|       The following table lists examples of tasks involving the `My.Application.StartupNextInstance` event.      |||   |-|-|   |To|See|   |Check the command-line arguments of the first application instance|<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|Yes|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A single-instance application raises the StartupNextInstance event when you attempt to restart the application when it is already active. When a single-instance application starts for the first time, it raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> event. For more information, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>.       This event is part of the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).       This event is raised on the application's main thread with the other user-interface events. This allows the event handler to access directly the application's user interface. However, if the application is busy handling another user-interface event when this event is raised, this event cannot be processed until the other event handler finishes or calls the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> method.      > [!NOTE] >  The `StartupNextInstance` event is raised only in single-instance applications. To enable single-instance behavior for your application, you must check the **Make single instance application** check box in the Project Designer.      ||   |-|   |To make an application single instance|   |1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.","pos":[0,1499],"nodes":[{"content":"A single-instance application raises the StartupNextInstance event when you attempt to restart the application when it is already active.","pos":[0,137]},{"content":"When a single-instance application starts for the first time, it raises the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup&gt; event.","pos":[138,305],"source":" When a single-instance application starts for the first time, it raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> event."},{"content":"For more information, see &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup&gt;.","pos":[306,417],"source":" For more information, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>."},{"content":"This event is part of the <ph id=\"ph1\">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> Application model.","pos":[424,516],"source":"       This event is part of the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview of the Visual Basic Application Model<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[517,631],"source":" For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md)."},{"content":"This event is raised on the application's main thread with the other user-interface events.","pos":[638,729]},{"content":"This allows the event handler to access directly the application's user interface.","pos":[730,812]},{"content":"However, if the application is busy handling another user-interface event when this event is raised, this event cannot be processed until the other event handler finishes or calls the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A&gt; method.","pos":[813,1093],"source":" However, if the application is busy handling another user-interface event when this event is raised, this event cannot be processed until the other event handler finishes or calls the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> method."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The <ph id=\"ph2\">`StartupNextInstance`</ph> event is raised only in single-instance applications.","pos":[1099,1191],"source":"      > [!NOTE] >  The `StartupNextInstance` event is raised only in single-instance applications."},{"content":"To enable single-instance behavior for your application, you must check the <bpt id=\"p1\">**</bpt>Make single instance application<ept id=\"p1\">**</ept> check box in the Project Designer.","pos":[1192,1339],"source":" To enable single-instance behavior for your application, you must check the **Make single instance application** check box in the Project Designer."},{"content":"||   |-|   |To make an application single instance|   |1.","pos":[1345,1402]},{"content":"With a project selected in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept> on the <bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept> menu.","pos":[1404,1499],"source":"  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu."}]},{"content":"2.  Click the <bpt id=\"p1\">**</bpt>Application<ept id=\"p1\">**</ept> tab.","pos":[1505,1539],"source":"2.  Click the **Application** tab."},{"content":"3.  Select the **Make single instance application** check box.|       You must use the <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> property of the `e` parameter to access the arguments for subsequent attempts to start a single-instance application. The <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> property provides the arguments used to start the first instance of a single-instance application.       The code for the StartupNextInstance event handler is stored in the ApplicationEvents.vb file, which is hidden by default.      ||   |-|   |To access the Code Editor window for application events|   |1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.","pos":[1545,2330],"nodes":[{"content":"3.  Select the <bpt id=\"p1\">**</bpt>Make single instance application<ept id=\"p1\">**</ept> check box.|       You must use the &lt;xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A&gt; property of the <ph id=\"ph1\">`e`</ph> parameter to access the arguments for subsequent attempts to start a single-instance application.","pos":[0,285],"source":"3.  Select the **Make single instance application** check box.|       You must use the <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> property of the `e` parameter to access the arguments for subsequent attempts to start a single-instance application."},{"content":"The &lt;xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A&gt; property provides the arguments used to start the first instance of a single-instance application.","pos":[286,479],"source":" The <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> property provides the arguments used to start the first instance of a single-instance application."},{"content":"The code for the StartupNextInstance event handler is stored in the ApplicationEvents.vb file, which is hidden by default.","pos":[486,608]},{"content":"||   |-|   |To access the Code Editor window for application events|   |1.","pos":[614,688]},{"content":"With a project selected in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept> on the <bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept> menu.","pos":[690,785],"source":"  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu."}]},{"content":"2.  Click the <bpt id=\"p1\">**</bpt>Application<ept id=\"p1\">**</ept> tab.","pos":[2336,2370],"source":"2.  Click the **Application** tab."},{"content":"3.  Click the <bpt id=\"p1\">**</bpt>View Application Events<ept id=\"p1\">**</ept> button to open the Code Editor.","pos":[2376,2449],"source":"3.  Click the **View Application Events** button to open the Code Editor."},{"content":"     For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|       The following table lists examples of tasks involving the `My.Application.StartupNextInstance` event.      |||   |-|-|   |To|See|   |Check the command-line arguments of the first application instance|<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|Yes|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","pos":[2455,3142],"nodes":[{"content":"For more information, see <bpt id=\"p1\">[</bpt>Application Page, Project Designer (Visual Basic)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.|       The following table lists examples of tasks involving the <ph id=\"ph1\">`My.Application.StartupNextInstance`</ph> event.","pos":[5,231],"source":"     For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|       The following table lists examples of tasks involving the `My.Application.StartupNextInstance` event."},{"content":"|||   |-|-|   |To|See|   |Check the command-line arguments of the first application instance|&lt;xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A&gt;|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|Yes|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","pos":[237,687],"source":"      |||   |-|-|   |To|See|   |Check the command-line arguments of the first application instance|<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|Yes|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|"}]}]},{"pos":[65129,65141],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[65714,65776],"content":"Occurs when the application encounters an unhandled exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the application encounters an unhandled exception.","pos":[0,62]}]},{"pos":[65789,68379],"content":"An application raises the `UnhandledException` event when it encounters an unhandled exception. This event is part of the Visual Basic Application model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).       You can use the <xref:System.Threading.ThreadExceptionEventArgs.Exception%2A> property of the `e` parameter to access the unhandled exception that caused this event.       You can use the <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> property of the `e` parameter to control whether the application exits. By default, <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> is `True`. Therefore, the application exits after completing the `UnhandledException` event handler. You can set the value to `False` in the `UnhandledException` event handler to keep the application running, and have it return to a waiting state.       The code for the `UnhandledException` event handler is stored in the ApplicationEvents.vb file, which is hidden by default.      ||   |-|   |To access the Code Editor window for application events|   |1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.<br />2.  Click the **Application** tab.<br />3.  Click the **View Application Events** button to open the Code Editor.|       For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  The Visual Basic compiler prevents applications that are built for debugging from raising this event, to enable a debugger to handle the unhandled exceptions. This means that if you are testing your application by running it under the Visual Studio Integrated Development Environment debugger, your `UnhandledException` event handler will not be called. For more information about building applications for debugging, see [/debug (Visual Basic)](~/add/includes/ajax-current-ext-md.md).      ## Tasks    The following table lists examples of tasks that involve the `My.Application.UnhandledException` event.      |||   |-|-|   |To|See|   |Log unhandled exceptions|[How to: Log Exceptions](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An application raises the `UnhandledException` event when it encounters an unhandled exception. This event is part of the Visual Basic Application model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).       You can use the <xref:System.Threading.ThreadExceptionEventArgs.Exception%2A> property of the `e` parameter to access the unhandled exception that caused this event.       You can use the <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> property of the `e` parameter to control whether the application exits. By default, <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> is `True`. Therefore, the application exits after completing the `UnhandledException` event handler. You can set the value to `False` in the `UnhandledException` event handler to keep the application running, and have it return to a waiting state.       The code for the `UnhandledException` event handler is stored in the ApplicationEvents.vb file, which is hidden by default.      ||   |-|   |To access the Code Editor window for application events|   |1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.","pos":[0,1293],"nodes":[{"content":"An application raises the <ph id=\"ph1\">`UnhandledException`</ph> event when it encounters an unhandled exception.","pos":[0,95],"source":"An application raises the `UnhandledException` event when it encounters an unhandled exception."},{"content":"This event is part of the Visual Basic Application model.","pos":[96,153]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overview of the Visual Basic Application Model<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[154,268],"source":" For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md)."},{"content":"You can use the &lt;xref:System.Threading.ThreadExceptionEventArgs.Exception%2A&gt; property of the <ph id=\"ph1\">`e`</ph> parameter to access the unhandled exception that caused this event.","pos":[275,440],"source":"       You can use the <xref:System.Threading.ThreadExceptionEventArgs.Exception%2A> property of the `e` parameter to access the unhandled exception that caused this event."},{"content":"You can use the &lt;xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A&gt; property of the <ph id=\"ph1\">`e`</ph> parameter to control whether the application exits.","pos":[447,630],"source":"       You can use the <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> property of the `e` parameter to control whether the application exits."},{"content":"By default, &lt;xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A&gt; is <ph id=\"ph1\">`True`</ph>.","pos":[631,749],"source":" By default, <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> is `True`."},{"content":"Therefore, the application exits after completing the <ph id=\"ph1\">`UnhandledException`</ph> event handler.","pos":[750,839],"source":" Therefore, the application exits after completing the `UnhandledException` event handler."},{"content":"You can set the value to <ph id=\"ph1\">`False`</ph> in the <ph id=\"ph2\">`UnhandledException`</ph> event handler to keep the application running, and have it return to a waiting state.","pos":[840,986],"source":" You can set the value to `False` in the `UnhandledException` event handler to keep the application running, and have it return to a waiting state."},{"content":"The code for the <ph id=\"ph1\">`UnhandledException`</ph> event handler is stored in the ApplicationEvents.vb file, which is hidden by default.","pos":[993,1116],"source":"       The code for the `UnhandledException` event handler is stored in the ApplicationEvents.vb file, which is hidden by default."},{"content":"||   |-|   |To access the Code Editor window for application events|   |1.","pos":[1122,1196]},{"content":"With a project selected in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept> on the <bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept> menu.","pos":[1198,1293],"source":"  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu."}]},{"content":"2.  Click the <bpt id=\"p1\">**</bpt>Application<ept id=\"p1\">**</ept> tab.","pos":[1299,1333],"source":"2.  Click the **Application** tab."},{"content":"3.  Click the **View Application Events** button to open the Code Editor.|       For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  The Visual Basic compiler prevents applications that are built for debugging from raising this event, to enable a debugger to handle the unhandled exceptions. This means that if you are testing your application by running it under the Visual Studio Integrated Development Environment debugger, your `UnhandledException` event handler will not be called. For more information about building applications for debugging, see [/debug (Visual Basic)](~/add/includes/ajax-current-ext-md.md).      ## Tasks    The following table lists examples of tasks that involve the `My.Application.UnhandledException` event.      |||   |-|-|   |To|See|   |Log unhandled exceptions|[How to: Log Exceptions](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","pos":[1339,2553],"nodes":[{"content":"3.  Click the <bpt id=\"p1\">**</bpt>View Application Events<ept id=\"p1\">**</ept> button to open the Code Editor.|       For more information, see <bpt id=\"p2\">[</bpt>Application Page, Project Designer (Visual Basic)<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[0,198],"source":"3.  Click the **View Application Events** button to open the Code Editor.|       For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The Visual Basic compiler prevents applications that are built for debugging from raising this event, to enable a debugger to handle the unhandled exceptions.","pos":[204,375],"source":"      > [!NOTE] >  The Visual Basic compiler prevents applications that are built for debugging from raising this event, to enable a debugger to handle the unhandled exceptions."},{"content":"This means that if you are testing your application by running it under the Visual Studio Integrated Development Environment debugger, your <ph id=\"ph1\">`UnhandledException`</ph> event handler will not be called.","pos":[376,570],"source":" This means that if you are testing your application by running it under the Visual Studio Integrated Development Environment debugger, your `UnhandledException` event handler will not be called."},{"content":"For more information about building applications for debugging, see <bpt id=\"p1\">[</bpt>/debug (Visual Basic)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[571,702],"source":" For more information about building applications for debugging, see [/debug (Visual Basic)](~/add/includes/ajax-current-ext-md.md)."},{"content":"Tasks    The following table lists examples of tasks that involve the <ph id=\"ph1\">`My.Application.UnhandledException`</ph> event.","pos":[711,823],"source":"      ## Tasks    The following table lists examples of tasks that involve the `My.Application.UnhandledException` event."},{"content":"|||   |-|-|   |To|See|   |Log unhandled exceptions|<bpt id=\"p1\">[</bpt>How to: Log Exceptions<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|<bpt id=\"p2\">**</bpt>Yes<ept id=\"p2\">**</ept>|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|","pos":[829,1214],"source":"      |||   |-|-|   |To|See|   |Log unhandled exceptions|[How to: Log Exceptions](~/add/includes/ajax-current-ext-md.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Forms Application|**Yes**|   |Class Library|No|   |Console Application|No|   |Windows Forms Control Library|No|   |Web Control Library|No|   |Windows Service|No|   |Web Site|No|"}]}]},{"pos":[69376,69388],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[70004,70145],"content":"When overridden in a derived class, this property allows a designer to specify the default text rendering engine for the application's forms.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, this property allows a designer to specify the default text rendering engine for the application's forms.","pos":[0,141]}]},{"pos":[70158,71310],"content":"By default, this property returns `False` to indicate that the GDI text rendering engine for [!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)] be used for the application's forms. However, you can override this property to return `True` and specify that the application's forms use the GDI+ text rendering engine, which is used in Visual Basic .NET 2002 and Visual Basic .NET 2003.       This property is called by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> constructor.       Code that overrides methods of the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> class should be entered in the ApplicationEvents.vb file, which is hidden by default.      ||   |-|   |To access the Code Editor window for overriding members|   |1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.<br />2.  Click the **Application** tab.<br />3.  Click the **View Application Events** button to open the Code Editor.<br />     For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, this property returns `False` to indicate that the GDI text rendering engine for [!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)] be used for the application's forms. However, you can override this property to return `True` and specify that the application's forms use the GDI+ text rendering engine, which is used in Visual Basic .NET 2002 and Visual Basic .NET 2003.       This property is called by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> constructor.       Code that overrides methods of the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> class should be entered in the ApplicationEvents.vb file, which is hidden by default.      ||   |-|   |To access the Code Editor window for overriding members|   |1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.","pos":[0,895],"nodes":[{"content":"By default, this property returns <ph id=\"ph1\">`False`</ph> to indicate that the GDI text rendering engine for <ph id=\"ph2\">[!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)]</ph> be used for the application's forms.","pos":[0,185],"source":"By default, this property returns `False` to indicate that the GDI text rendering engine for [!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)] be used for the application's forms."},{"content":"However, you can override this property to return <ph id=\"ph1\">`True`</ph> and specify that the application's forms use the GDI+ text rendering engine, which is used in Visual Basic .NET 2002 and Visual Basic .NET 2003.","pos":[186,387],"source":" However, you can override this property to return `True` and specify that the application's forms use the GDI+ text rendering engine, which is used in Visual Basic .NET 2002 and Visual Basic .NET 2003."},{"content":"This property is called by the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt; constructor.","pos":[394,514],"source":"       This property is called by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> constructor."},{"content":"Code that overrides methods of the &lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase&gt; class should be entered in the ApplicationEvents.vb file, which is hidden by default.","pos":[521,718],"source":"       Code that overrides methods of the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> class should be entered in the ApplicationEvents.vb file, which is hidden by default."},{"content":"||   |-|   |To access the Code Editor window for overriding members|   |1.","pos":[724,798]},{"content":"With a project selected in <bpt id=\"p1\">**</bpt>Solution Explorer<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept> on the <bpt id=\"p3\">**</bpt>Project<ept id=\"p3\">**</ept> menu.","pos":[800,895],"source":"  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu."}]},{"content":"2.  Click the <bpt id=\"p1\">**</bpt>Application<ept id=\"p1\">**</ept> tab.","pos":[901,935],"source":"2.  Click the **Application** tab."},{"content":"3.  Click the <bpt id=\"p1\">**</bpt>View Application Events<ept id=\"p1\">**</ept> button to open the Code Editor.","pos":[941,1014],"source":"3.  Click the **View Application Events** button to open the Code Editor."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Application Page, Project Designer (Visual Basic)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.|","pos":[1025,1143],"source":"     For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|"}]},{"pos":[72096,72569],"content":"<xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref>. A value of <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref> indicates that the application should use the default text rendering engine for [!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)]. A value of <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> indicates that the application should use the text rendering engine for Visual Basic .NET 2002 and Visual Basic .NET 2003.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,67],"source":"<xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref>."},{"content":"A value of <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicates that the application should use the default text rendering engine for <ph id=\"ph1\">[!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)]</ph>.","pos":[68,278],"source":" A value of <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref> indicates that the application should use the default text rendering engine for [!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)]."},{"content":"A value of <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicates that the application should use the text rendering engine for Visual Basic .NET 2002 and Visual Basic .NET 2003.","pos":[279,473],"source":" A value of <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> indicates that the application should use the text rendering engine for Visual Basic .NET 2002 and Visual Basic .NET 2003."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  id: WindowsFormsApplicationBase\n  children:\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException\n  - Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering\n  langs:\n  - csharp\n  name: WindowsFormsApplicationBase\n  nameWithType: WindowsFormsApplicationBase\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  type: Class\n  summary: Provides properties, methods, and events related to the current application.\n  remarks: \"The properties exposed by the `My.Application` object return data that is associated only with the current application or DLL. No system-level information can be altered with `My.Application`.  \\n  \\n The `My.Application` object consists of the following classes:  \\n  \\n-   <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase> provides members that are available in all projects.  \\n  \\n-   WindowsFormsApplicationBase provides members that are available in Windows Forms applications.  \\n  \\n-   <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase> provides members that are available in console applications.\"\n  example:\n  - \"This example uses a loop to iterate through the application's open forms, selects the forms that can be accessed directly by the current thread, and displays their titles in a <xref:System.Windows.Forms.ListBox> control. For information about how to access the open forms, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms%2A>.  \\n  \\n [!code-vb[VbVbalrMyApplication#10](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#10)]  \\n  \\n This example requires that your Windows Forms application have a form named `Form1` that contains a list box named `ListBox1`.\"\n  syntax:\n    content: 'public class WindowsFormsApplicationBase : Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase'\n  inheritance:\n  - System.Object\n  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase\n  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase\n  implements: []\n  inheritedMembers:\n  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)\n  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)\n  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture\n  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)\n  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info\n  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log\n  - Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture\n  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs\n  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment\n  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine\n  - Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: WindowsFormsApplicationBase()\n  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase()\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.WindowsFormsApplicationBase()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\"></xref> class.\n  syntax:\n    content: public WindowsFormsApplicationBase ();\n    parameters: []\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)\n  id: '#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)'\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: WindowsFormsApplicationBase(AuthenticationMode)\n  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase(AuthenticationMode)\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.WindowsFormsApplicationBase(AuthenticationMode)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\"></xref> class with the specified authentication mode.\n  remarks: \"If the `authenticationMode` parameter is the <xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode> enumeration value, then this constructor attempts to set the current thread's <xref:System.Threading.Thread.CurrentPrincipal%2A> property to the <xref:System.Security.Principal.WindowsPrincipal> for the current user.  \\n  \\n If the `authenticationMode` parameter is the <xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode> enumeration value, then this constructor leaves the current thread's <xref:System.Threading.Thread.CurrentPrincipal%2A> property unchanged.\"\n  syntax:\n    content: public WindowsFormsApplicationBase (Microsoft.VisualBasic.ApplicationServices.AuthenticationMode authenticationMode);\n    parameters:\n    - id: authenticationMode\n      type: Microsoft.VisualBasic.ApplicationServices.AuthenticationMode\n      description: <xref href=\"Microsoft.VisualBasic.ApplicationServices.AuthenticationMode\"></xref>. Specifies the application's authentication mode.\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext\n  id: ApplicationContext\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: ApplicationContext\n  nameWithType: WindowsFormsApplicationBase.ApplicationContext\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Gets the <xref href=\"System.Windows.Forms.ApplicationContext\"></xref> object for the current thread of a Windows Forms application.\n  remarks: \"This is an advanced member; it does not appear in IntelliSense unless you click the **All** tab.  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Forms Application|**Yes**|  \\n|Class Library|No|  \\n|Console Application|No|  \\n|Windows Forms Control Library|No|  \\n|Web Control Library|No|  \\n|Windows Service|No|  \\n|Web Site|No|\"\n  syntax:\n    content: public System.Windows.Forms.ApplicationContext ApplicationContext { get; }\n    return:\n      type: System.Windows.Forms.ApplicationContext\n      description: This property returns the <xref href=\"System.Windows.Forms.ApplicationContext\"></xref> object for the current thread. That object contains contextual information about the thread.\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents\n  id: DoEvents\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: DoEvents()\n  nameWithType: WindowsFormsApplicationBase.DoEvents()\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Processes all Windows messages currently in the message queue.\n  remarks: \"The `My.Application.DoEvents` method allows your application to handle other events that might be raised while you code runs. The `My.Application.DoEvents` method has the same behavior as the <xref:System.Windows.Forms.Application.DoEvents%2A> method.  \\n  \\n When you run a Windows Forms application, it creates a new form, which then waits for events to be handled. Each time the form handles an event, such as a button click, it processes all the code associated with that event. All other events wait in the queue. While your code handles the event, your application does not respond. For example, the window does not repaint if another window is dragged on top.  \\n  \\n If you call `My.Application.DoEvents` in your code, your application can handle the other events. For example, if your code adds data to a <xref:System.Windows.Forms.ListBox> in a loop, and after each step of the loop it calls `My.Application.DoEvents`, your form repaints when another window is dragged over it. If you remove `My.Application.DoEvents` from your code, your form will not repaint until the click event handler of the button is finished executing.  \\n  \\n Typically, you use this method in a loop to process messages.  \\n  \\n> [!NOTE]\\n>  The `My.Application.DoEvents` method does not process events in exactly the same way as the form does. Use multithreading to make the form directly handle the events. For more information, see [Multithreaded Applications](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!CAUTION]\\n>  If a method that handles a user interface (UI) event calls the `My.Application.DoEvents` method, the method might be re-entered before it finishes. This can happen because the `My.Application.DoEvents` method processes Windows messages, and Windows messages can raise events.  \\n  \\n The following table lists an example of a task involving the `My.Application.DoEvents` method.  \\n  \\n|||  \\n|-|-|  \\n|To|See|  \\n|Allow a form to respond to UI input while busy|[Walkthrough: Handling Events](~/add/includes/ajax-current-ext-md.md)|  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Forms Application|**Yes**|  \\n|Class Library|No|  \\n|Console Application|No|  \\n|Windows Forms Control Library|No|  \\n|Web Control Library|No|  \\n|Windows Service|No|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Application.DoEvents` method to allow the UI for `TextBox1` to update.  \\n  \\n [!code-vb[VbVbalrMyApplication#6](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#6)]  \\n  \\n This code should be in a form that has a `TextBox1` component with a `Text` property.\"\n  syntax:\n    content: public void DoEvents ();\n    parameters: []\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles\n  id: EnableVisualStyles\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: EnableVisualStyles\n  nameWithType: WindowsFormsApplicationBase.EnableVisualStyles\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Determines whether this application will use the Windows XP styles for windows, controls, and so on.\n  remarks: The <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> method uses this property to determine whether to call <xref:System.Windows.Forms.Application.EnableVisualStyles%2A>.\n  syntax:\n    content: protected bool EnableVisualStyles { get; set; }\n    return:\n      type: System.Boolean\n      description: A <xref:System.Boolean> value that indicates whether this application will use the XP Windows styles for windows, controls, and so on.\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen\n  id: HideSplashScreen\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: HideSplashScreen()\n  nameWithType: WindowsFormsApplicationBase.HideSplashScreen()\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Hides the application's splash screen.\n  remarks: \"The <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> class creates the splash screen on a separate thread. This method marshals the call to the correct thread.  \\n  \\n This method is called when the main form is done loading.\"\n  syntax:\n    content: protected void HideSplashScreen ();\n    parameters: []\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance\n  id: IsSingleInstance\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: IsSingleInstance\n  nameWithType: WindowsFormsApplicationBase.IsSingleInstance\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Determines whether this application is a single-instance application.\n  remarks: The <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A> method uses this property to determine whether this application is a single-instance application.\n  syntax:\n    content: protected bool IsSingleInstance { get; set; }\n    return:\n      type: System.Boolean\n      description: A <xref:System.Boolean> value that indicates whether this application is a single-instance application.\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm\n  id: MainForm\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: MainForm\n  nameWithType: WindowsFormsApplicationBase.MainForm\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Gets or sets the main form for this application.\n  remarks: \"Use the `MainForm` property to get or set the <xref:System.Windows.Forms.Form> object that the Visual Basic Application Startup/Shutdown model uses as the application's main form.  \\n  \\n This property supports the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application Startup/Shutdown model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The changes to this property are not persisted when the application closes. To change the main form permanently, you must change the setting in the **Project Designer**.\"\n  syntax:\n    content: protected System.Windows.Forms.Form MainForm { get; set; }\n    return:\n      type: System.Windows.Forms.Form\n      description: Gets or sets the main form for this application.\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime\n  id: MinimumSplashScreenDisplayTime\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: MinimumSplashScreenDisplayTime\n  nameWithType: WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Determines the minimum length of time, in milliseconds, for which the splash screen is displayed.\n  remarks: \"The `My.Application.MinimumSplashScreenDisplayTime` property allows you to specify the minimum length of time you want the application's splash screen to be displayed. If the main form finishes initializing in less time than what is specified by this property, the splash screen remains until the requested amount of time passes, at which time the main form is displayed. If your application takes longer to start, the splash screen is closed once the main form becomes active.  \\n  \\n When you add a splash screen to your application using the Project Designer, it sets the `My.Application.MinimumSplashScreenDisplayTime` property to 2000, giving a minimum display time of two seconds.  \\n  \\n This property supports the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n You should set the `My.Application.MinimumSplashScreenDisplayTime` property in a method that overrides the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> or <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> method. Code that overrides methods of the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> class should be entered in the ApplicationEvents.vb file, which is hidden by default.  \\n  \\n||  \\n|-|  \\n|To access the Code Editor window for overriding members|  \\n|1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.<br />2.  Click the **Application** tab.<br />3.  Click the **View Application Events** button to open the Code Editor.<br />     For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Forms Application|**Yes**|  \\n|Class Library|No|  \\n|Console Application|No|  \\n|Windows Forms Control Library|No|  \\n|Web Control Library|No|  \\n|Windows Service|No|  \\n|Web Site|No|\"\n  example:\n  - \"This example demonstrates how to set the `My.Application.MinimumSplashScreenDisplayTime` property by overriding the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> property.  \\n  \\n [!code-vb[VbVbalrMyApplication#51](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#51)]  \\n  \\n This example requires that the project have a splash screen.  \\n  \\n You must enter this code in the Code Editor window for application events. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\\\(Visual%20Basic\\\\).md).\"\n  syntax:\n    content: public int MinimumSplashScreenDisplayTime { get; set; }\n    return:\n      type: System.Int32\n      description: <xref uid=\"langword_csharp_Integer\" name=\"Integer\" href=\"\"></xref>. The minimum length of time, in milliseconds, for which the splash screen is displayed.\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged\n  id: NetworkAvailabilityChanged\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: NetworkAvailabilityChanged\n  nameWithType: WindowsFormsApplicationBase.NetworkAvailabilityChanged\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged\n  type: Event\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Occurs when the network availability changes.\n  remarks: \"An application raises the `NetworkAvailabilityChanged` event every time that the availability of the network changes. You can use the <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> property of the `e` parameter to get the new state of the network connection. To get the current state of the network connection, use the <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> property.  \\n  \\n This event is raised on the application's main thread with the other user-interface events. This enables the event handler to access directly the application's UI. However, if the application is busy handling another user-interface event when this event is raised, this event cannot be processed until the other event handler finishes or calls the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> method.  \\n  \\n The <xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged> event provides the same functionality as this event but is available for all application types.  \\n  \\n The code for the `NetworkAvailabilityChanged` event handler is stored in the ApplicationEvents.vb file, which is hidden by default.  \\n  \\n||  \\n|-|  \\n|To access the Code Editor window for application events|  \\n|1.  Have a project selected in **Solution Explorer.** Click **Properties** on the **Project** menu.<br />2.  Click the **Application** tab.<br />3.  Click the **View Application Events** button to open the Code Editor.<br />     For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|  \\n  \\n> [!NOTE]\\n>  Many network hubs will provide a network connection even if the hub is disconnected from a larger network. Consequently, for wired connections, this event indicates change in the connection between the computer and a hub.  \\n  \\n> [!NOTE]\\n>  The `NetworkAvailabilityChanged` event is not raised by applications when they are run on Windows 95 and Windows 98, or when they are run by a non-administrator on Windows 2000. If your application might run on those operating systems, use the <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> property to check for network availability.  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Forms Application|**Yes**|  \\n|Class Library|No|  \\n|Console Application|No|  \\n|Windows Forms Control Library|No|  \\n|Web Control Library|No|  \\n|Windows Service|No|  \\n|Web Site|No|\"\n  example:\n  - \"This example calls the `SetConnectionStatus` method of the default `Form1` class when the network availability changes.  \\n  \\n You must enter the code in the Code Editor window for application events. To access this window, follow the instructions from this topic's Remarks section.  \\n  \\n The project should have a form named `Form1`. It should have a method named `SetConnectionStatus` that takes a `Boolean` parameter.  \\n  \\n [!code-vb[VbVbalrMyApplication#9](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#9)]\"\n  syntax:\n    content: public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;\n    return:\n      type: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm\n  id: OnCreateMainForm\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: OnCreateMainForm()\n  nameWithType: WindowsFormsApplicationBase.OnCreateMainForm()\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: When overridden in a derived class, allows a designer to emit code that configures the splash screen and main form.\n  remarks: \"By default, this method does nothing. However, when you select a main form for your application in the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] **Project Designer**, the designer overrides this method with a method that sets the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A> property to a new instance of the main form.  \\n  \\n This method is called by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A> method.\"\n  syntax:\n    content: protected virtual void OnCreateMainForm ();\n    parameters: []\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen\n  id: OnCreateSplashScreen\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: OnCreateSplashScreen()\n  nameWithType: WindowsFormsApplicationBase.OnCreateSplashScreen()\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: When overridden in a derived class, allows a designer to emit code that initializes the splash screen.\n  remarks: \"By default, this method does nothing. If you select a splash screen for your application in the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] **Project Designer**, the designer overrides the OnCreateSplashScreen method with a method that sets the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A> property to a new instance of the splash-screen form.  \\n  \\n This method is called by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> method.\"\n  syntax:\n    content: protected virtual void OnCreateSplashScreen ();\n    parameters: []\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})\n  id: OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: OnInitialize(ReadOnlyCollection<String>)\n  nameWithType: WindowsFormsApplicationBase.OnInitialize(ReadOnlyCollection<String>)\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(ReadOnlyCollection<String>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Sets the visual styles, text display styles, and current principal for the main application thread (if the application uses Windows authentication), and initializes the splash screen, if defined.\n  remarks: \"By default, this method sets the visual styles, text display styles, and current principal for the main application thread (if the application uses Windows authentication), and calls `ShowSplashScreen` if neither `/nosplash` nor `-nosplash` is used as a command-line argument.  \\n  \\n This method calls the following methods:  \\n  \\n-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A>.  \\n  \\n-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>.\"\n  syntax:\n    content: protected virtual bool OnInitialize (System.Collections.ObjectModel.ReadOnlyCollection<string> commandLineArgs);\n    parameters:\n    - id: commandLineArgs\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n      description: A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>, containing the command-line arguments as strings for the current application.\n    return:\n      type: System.Boolean\n      description: A <xref:System.Boolean> indicating if application startup should continue.\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun\n  id: OnRun\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: OnRun()\n  nameWithType: WindowsFormsApplicationBase.OnRun()\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Provides the starting point for when the main application is ready to start running, after the initialization is done.\n  remarks: \"By default, before it enters the Windows Forms message loop, this method calls the `OnCreateMainForm` (to create the application's main form) and `HideSplashScreen` (to close the splash screen) methods:  \\n  \\n-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A>. Provides a way for a designer to emit code that initializes the main form.  \\n  \\n     By default, this method does nothing. However, when you select a main form for your application in the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] **Project Designer**, the designer overrides the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A> method with a method that sets the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A> property to a new instance of the main form.  \\n  \\n-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A>. If the application has a splash screen defined and it is open, this method closes the splash screen.  \\n  \\n     By default, this method closes the splash screen.\"\n  syntax:\n    content: protected virtual void OnRun ();\n    parameters: []\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown\n  id: OnShutdown\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: OnShutdown()\n  nameWithType: WindowsFormsApplicationBase.OnShutdown()\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: When overridden in a derived class, allows for code to run when the application shuts down.\n  remarks: \"This method does not run if an unhandled exception occurs in the main application.  \\n  \\n By default, this method raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown> event.\"\n  syntax:\n    content: protected virtual void OnShutdown ();\n    parameters: []\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)\n  id: OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: OnStartup(StartupEventArgs)\n  nameWithType: WindowsFormsApplicationBase.OnStartup(StartupEventArgs)\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(StartupEventArgs)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: When overridden in a derived class, allows for code to run when the application starts.\n  remarks: By default, this method raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> event. The event handler can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the event argument. If <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> is `True`, this method returns `False` to cancel the application startup. Otherwise, this method returns `True`.\n  syntax:\n    content: protected virtual bool OnStartup (Microsoft.VisualBasic.ApplicationServices.StartupEventArgs eventArgs);\n    parameters:\n    - id: eventArgs\n      type: Microsoft.VisualBasic.ApplicationServices.StartupEventArgs\n      description: <xref href=\"Microsoft.VisualBasic.ApplicationServices.StartupEventArgs\"></xref>. Contains the command-line arguments of the application and indicates whether the application startup should be canceled.\n    return:\n      type: System.Boolean\n      description: A <xref:System.Boolean> that indicates if the application should continue starting up.\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)\n  id: OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: OnStartupNextInstance(StartupNextInstanceEventArgs)\n  nameWithType: WindowsFormsApplicationBase.OnStartupNextInstance(StartupNextInstanceEventArgs)\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(StartupNextInstanceEventArgs)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: When overridden in a derived class, allows for code to run when a subsequent instance of a single-instance application starts.\n  remarks: By default, this method raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> event. The event handler can set the <xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> property of the event argument. If <xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> is `True`, the method activates the main form. Otherwise, the main form is left in its current state.\n  syntax:\n    content: protected virtual void OnStartupNextInstance (Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs eventArgs);\n    parameters:\n    - id: eventArgs\n      type: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs\n      description: <xref href=\"Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs\"></xref>. Contains the command-line arguments of the subsequent application instance and indicates whether the first application instance should be brought to the foreground upon exiting the exception handler.\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)\n  id: OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: OnUnhandledException(UnhandledExceptionEventArgs)\n  nameWithType: WindowsFormsApplicationBase.OnUnhandledException(UnhandledExceptionEventArgs)\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(UnhandledExceptionEventArgs)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: When overridden in a derived class, allows for code to run when an unhandled exception occurs in the application.\n  remarks: By default, this method raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException> event as long as a debugger is not attached and the user is handling the `UnhandledException` event. The event handler can set the <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> property. If <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> is `False`, or if the event is not handled, the application exits upon return from the exception handler. Otherwise, control of the application is returned to the Windows Forms message loop.\n  syntax:\n    content: protected virtual bool OnUnhandledException (Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs e);\n    parameters:\n    - id: e\n      type: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs\n      description: <xref href=\"Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs\"></xref>.\n    return:\n      type: System.Boolean\n      description: A <xref:System.Boolean> that indicates whether the <xref href=\"Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException\"></xref> event was raised.\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms\n  id: OpenForms\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: OpenForms\n  nameWithType: WindowsFormsApplicationBase.OpenForms\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Gets a collection of all the application's open forms.\n  remarks: \"The `My.Application.OpenForms` property gets a collection of all the application's open forms. The behavior is identical to the <xref:System.Windows.Forms.Application.OpenForms%2A?displayProperty=fullName> property.  \\n  \\n> [!NOTE]\\n>  The `My.Application.OpenForms` property returns all open forms, regardless of which thread opened them. You should check the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property of each form before accessing it; otherwise, it might throw an <xref:System.InvalidOperationException> exception.  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Forms Application|**Yes**|  \\n|Class Library|No|  \\n|Console Application|No|  \\n|Windows Forms Control Library|No|  \\n|Web Control Library|No|  \\n|Windows Service|No|  \\n|Web Site|No|\"\n  example:\n  - \"This example loops over the application's open forms, selects the ones directly accessible by the current thread, and displays their titles in a <xref:System.Windows.Forms.ListBox> control. This example requires that your Windows Forms application have a form named `Form1` that contains a list box named `ListBox1`.  \\n  \\n [!code-vb[VbVbalrMyApplication#10](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#10)]  \\n  \\n This example loops over the application's open forms and displays their titles in a <xref:System.Windows.Forms.ListBox> control.  \\n  \\n [!code-vb[VbVbalrMyApplication#11](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#11)]\"\n  syntax:\n    content: public System.Windows.Forms.FormCollection OpenForms { get; }\n    return:\n      type: System.Windows.Forms.FormCollection\n      description: A <xref href=\"System.Windows.Forms.FormCollection\"></xref> object that contains all of the application's open forms.\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])\n  id: Run(System.String[])\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: Run(String[])\n  nameWithType: WindowsFormsApplicationBase.Run(String[])\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(String[])\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Sets up and starts the Visual Basic Application model.\n  remarks: \"The `My.Application.Run` method provides support for the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model. This method should be called only from the application's `Sub Main`. By default, the `Sub Main` of a Windows Forms application calls this method. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Forms Application|**Yes**|  \\n|Class Library|No|  \\n|Console Application|No|  \\n|Windows Forms Control Library|No|  \\n|Web Control Library|No|  \\n|Windows Service|No|  \\n|Web Site|No|\"\n  syntax:\n    content: public void Run (string[] commandLine);\n    parameters:\n    - id: commandLine\n      type: System.String[]\n      description: Array of type <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. The command line from <xref uid=\"langword_csharp_Sub Main\" name=\"Sub Main\" href=\"\"></xref>.\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit\n  id: SaveMySettingsOnExit\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: SaveMySettingsOnExit\n  nameWithType: WindowsFormsApplicationBase.SaveMySettingsOnExit\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Determines whether the application saves the user settings on exit.\n  remarks: \"The `SaveMySettingsOnExit` property allows the user to change how the application saves settings, at run time. You can explicitly save setting changes by using the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method of the `My.Settings` object. For more information about changing and saving settings, see [Application Properties](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The changes to this property are not persisted when the application closes. To change the `SaveMySettingsOnExit` property permanently, you must change the setting in the **Project Designer**:  \\n  \\n||  \\n|-|  \\n|To change the setting in the Project Designer|  \\n|1.  Have a project selected in **Solution Explorer**. Click **Properties** on the **Project** menu.<br />2.  Click the **Application** tab.<br />3.  Select **Save My.Settings on Shutdown**.|  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Forms Application|**Yes**|  \\n|Class Library|No|  \\n|Console Application|No|  \\n|Windows Forms Control Library|No|  \\n|Web Control Library|No|  \\n|Windows Service|No|  \\n|Web Site|No|\"\n  example:\n  - \"This example has two parts.  \\n  \\n-   The `InitializeSaveMySettingsOnExit` subroutine, which initializes the checked state of a <xref:System.Windows.Forms.CheckBox> control to the current value of the `SaveMySettingsOnExit` property.  \\n  \\n-   The `SaveMySettingsOnExit_CheckedChanged` subroutine, which handles changes to a <xref:System.Windows.Forms.CheckBox> control to update the `My.Application.SaveMySettingsOnExit` property.  \\n  \\n [!code-vb[VbVbalrMyApplication#12](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#12)]  \\n  \\n For this example to work, your application must have a <xref:System.Windows.Forms.CheckBox> control named `SaveMySettingsOnExit`.\"\n  syntax:\n    content: public bool SaveMySettingsOnExit { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref>. <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> indicates that the application saves the user settings on exit. Otherwise, the settings are not implicitly saved.\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen\n  id: ShowSplashScreen\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: ShowSplashScreen()\n  nameWithType: WindowsFormsApplicationBase.ShowSplashScreen()\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Determines if the application has a splash screen defined, and if it does, displays it.\n  remarks: \"By default, this method calls `OnCreateSplashScreen` in a thread-safe way.  \\n  \\n The ShowSplashScreen method contains the code that displays the splash screen for at least the number of milliseconds specified by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A> property. To use this functionality, you must set the `My.Application.MinimumSplashScreenDisplayTime` property in a method that overrides the ShowSplashScreen or <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> method, or add the splash screen to your application using the **Project Designer**. For more information, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A>.  \\n  \\n This method is called by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> method.\"\n  syntax:\n    content: protected void ShowSplashScreen ();\n    parameters: []\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown\n  id: Shutdown\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: Shutdown\n  nameWithType: WindowsFormsApplicationBase.Shutdown\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown\n  type: Event\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Occurs when the application shuts down.\n  remarks: \"An application raises the `Shutdown` event before it exits. This allows you to control how the application closes its resources. This event is part of the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The code for the `Shutdown` event handler is stored in the ApplicationEvents.vb file, which is hidden by default.  \\n  \\n||  \\n|-|  \\n|To access the Code Editor window for application events|  \\n|1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.<br />2.  Click the **Application** tab.<br />3.  Click the **View Application Events** button to open the Code Editor.<br />     For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Forms Application|**Yes**|  \\n|Class Library|No|  \\n|Console Application|No|  \\n|Windows Forms Control Library|No|  \\n|Web Control Library|No|  \\n|Windows Service|No|  \\n|Web Site|No|\"\n  example:\n  - \"This example logs messages when the application shuts down.  \\n  \\n [!code-vb[VbVbalrMyApplication#13](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#13)]  \\n  \\n You must enter the code in the Code Editor window for application events. To access this window, follow the instructions from this topic's Remarks section. For more information, see [How to: Log Messages When the Application Starts or Shuts Down](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public event Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler Shutdown;\n    return:\n      type: Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle\n  id: ShutdownStyle\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: ShutdownStyle\n  nameWithType: WindowsFormsApplicationBase.ShutdownStyle\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Determines what happens when the application's main form closes.\n  remarks: The <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> method checks the value of this property to determine if the application should shut down when the main form is closed, or if another open form should be promoted as the new main form.\n  syntax:\n    content: protected Microsoft.VisualBasic.ApplicationServices.ShutdownMode ShutdownStyle { get; set; }\n    return:\n      type: Microsoft.VisualBasic.ApplicationServices.ShutdownMode\n      description: A <xref href=\"Microsoft.VisualBasic.ApplicationServices.ShutdownMode\"></xref> enumeration value, indicating what the application should do when the main form closes.\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen\n  id: SplashScreen\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: SplashScreen\n  nameWithType: WindowsFormsApplicationBase.SplashScreen\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Gets or sets the splash screen for this application.\n  remarks: \"The `My.Application.SplashScreen` property allows you to get or set the <xref:System.Windows.Forms.Form> object that the application uses as the splash screen, the first graphic form that is displayed while an application is being started.  \\n  \\n This property supports the Visual Basic Application model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The changes to this property are not persisted when the application closes. To change the splash screen permanently, you must change the setting in the **Project Designer**.  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Forms Application|**Yes**|  \\n|Class Library|No|  \\n|Console Application|No|  \\n|Windows Forms Control Library|No|  \\n|Web Control Library|No|  \\n|Windows Service|No|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Application.SplashScreen` property and the `My.Application.Startup` event to update the splash screen with status information as the application starts.  \\n  \\n [!code-vb[VbVbalrMyApplication#14](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#14)]  \\n  \\n This example requires that the project have a splash screen named `SplashScreen1`. The splash screen needs to have a property named `Status` that updates its user interface.  \\n  \\n You must enter this code in the Code Editor window for application events. For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public System.Windows.Forms.Form SplashScreen { get; set; }\n    return:\n      type: System.Windows.Forms.Form\n      description: A <xref href=\"System.Windows.Forms.Form\"></xref> object that the application uses as the splash screen.\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The same value is assigned to this property and the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*> property.\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup\n  id: Startup\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: Startup\n  nameWithType: WindowsFormsApplicationBase.Startup\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup\n  type: Event\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Occurs when the application starts.\n  remarks: \"A normal (non-single-instance) application raises the `Startup` event every time it starts. A single-instance application raises the `Startup` event when it starts only if the application is not already active; otherwise, it raises the `StartupNextInstance` event. For more information, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>.  \\n  \\n This event is part of the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n You can use the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the `e` parameter to control the loading of an application's startup form. When the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property is set to `True`, the startup form does not start. In that case, your code should call an alternate startup code path.  \\n  \\n You can use the <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> property of the `e` parameter or the <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> property to access the application's command-line arguments.  \\n  \\n The code for the `Startup` event handler is stored in the ApplicationEvents.vb file, which is hidden by default.  \\n  \\n||  \\n|-|  \\n|To access the Code Editor window for application events|  \\n|1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.<br />2.  Click the **Application** tab.<br />3.  Click the **View Application Events** button to open the Code Editor.<br /><br /> For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Forms Application|**Yes**|  \\n|Class Library|No|  \\n|Console Application|No|  \\n|Windows Forms Control Library|No|  \\n|Web Control Library|No|  \\n|Windows Service|No|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Application.SplashScreen` property and the `My.Application.Startup` event to update the splash screen with status information as the application starts.  \\n  \\n [!code-vb[VbVbalrMyApplication#14](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#14)]  \\n  \\n This example requires that the project have a splash screen named `SplashScreen1`. The splash screen needs to have property named `Status` that updates its user interface.  \\n  \\n You must enter the code in the Code Editor window for application events. To access this window, follow the instructions from this topic's Remarks section. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\\\(Visual%20Basic\\\\).md).\"\n  syntax:\n    content: public event Microsoft.VisualBasic.ApplicationServices.StartupEventHandler Startup;\n    return:\n      type: Microsoft.VisualBasic.ApplicationServices.StartupEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance\n  id: StartupNextInstance\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: StartupNextInstance\n  nameWithType: WindowsFormsApplicationBase.StartupNextInstance\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance\n  type: Event\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Occurs when attempting to start a single-instance application and the application is already active.\n  remarks: \"A single-instance application raises the StartupNextInstance event when you attempt to restart the application when it is already active. When a single-instance application starts for the first time, it raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> event. For more information, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>.  \\n  \\n This event is part of the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] Application model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n This event is raised on the application's main thread with the other user-interface events. This allows the event handler to access directly the application's user interface. However, if the application is busy handling another user-interface event when this event is raised, this event cannot be processed until the other event handler finishes or calls the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> method.  \\n  \\n> [!NOTE]\\n>  The `StartupNextInstance` event is raised only in single-instance applications. To enable single-instance behavior for your application, you must check the **Make single instance application** check box in the Project Designer.  \\n  \\n||  \\n|-|  \\n|To make an application single instance|  \\n|1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.<br />2.  Click the **Application** tab.<br />3.  Select the **Make single instance application** check box.|  \\n  \\n You must use the <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> property of the `e` parameter to access the arguments for subsequent attempts to start a single-instance application. The <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> property provides the arguments used to start the first instance of a single-instance application.  \\n  \\n The code for the StartupNextInstance event handler is stored in the ApplicationEvents.vb file, which is hidden by default.  \\n  \\n||  \\n|-|  \\n|To access the Code Editor window for application events|  \\n|1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.<br />2.  Click the **Application** tab.<br />3.  Click the **View Application Events** button to open the Code Editor.<br />     For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|  \\n  \\n The following table lists examples of tasks involving the `My.Application.StartupNextInstance` event.  \\n  \\n|||  \\n|-|-|  \\n|To|See|  \\n|Check the command-line arguments of the first application instance|<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>|  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Forms Application|Yes|  \\n|Class Library|No|  \\n|Console Application|No|  \\n|Windows Forms Control Library|No|  \\n|Web Control Library|No|  \\n|Windows Service|No|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `e` parameter of the StartupNextInstance event handler to examine the application's command-line arguments. If an argument is found that starts with `/input=`, the rest of that argument is displayed.  \\n  \\n [!code-vb[VbVbalrMyApplication#15](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#15)]  \\n  \\n You must enter the code in the Code Editor window for application events. To access this window, follow the instructions from this topic's Remarks section. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\\\(Visual%20Basic\\\\).md).\"\n  syntax:\n    content: public event Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler StartupNextInstance;\n    return:\n      type: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException\n  id: UnhandledException\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: UnhandledException\n  nameWithType: WindowsFormsApplicationBase.UnhandledException\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException\n  type: Event\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: Occurs when the application encounters an unhandled exception.\n  remarks: \"An application raises the `UnhandledException` event when it encounters an unhandled exception. This event is part of the Visual Basic Application model. For more information, see [Overview of the Visual Basic Application Model](~/add/includes/ajax-current-ext-md.md).  \\n  \\n You can use the <xref:System.Threading.ThreadExceptionEventArgs.Exception%2A> property of the `e` parameter to access the unhandled exception that caused this event.  \\n  \\n You can use the <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> property of the `e` parameter to control whether the application exits. By default, <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> is `True`. Therefore, the application exits after completing the `UnhandledException` event handler. You can set the value to `False` in the `UnhandledException` event handler to keep the application running, and have it return to a waiting state.  \\n  \\n The code for the `UnhandledException` event handler is stored in the ApplicationEvents.vb file, which is hidden by default.  \\n  \\n||  \\n|-|  \\n|To access the Code Editor window for application events|  \\n|1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.<br />2.  Click the **Application** tab.<br />3.  Click the **View Application Events** button to open the Code Editor.|  \\n  \\n For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  The Visual Basic compiler prevents applications that are built for debugging from raising this event, to enable a debugger to handle the unhandled exceptions. This means that if you are testing your application by running it under the Visual Studio Integrated Development Environment debugger, your `UnhandledException` event handler will not be called. For more information about building applications for debugging, see [/debug (Visual Basic)](~/add/includes/ajax-current-ext-md.md).  \\n  \\n## Tasks  \\n The following table lists examples of tasks that involve the `My.Application.UnhandledException` event.  \\n  \\n|||  \\n|-|-|  \\n|To|See|  \\n|Log unhandled exceptions|[How to: Log Exceptions](~/add/includes/ajax-current-ext-md.md)|  \\n  \\n## Availability by Project Type  \\n  \\n|||  \\n|-|-|  \\n|Project type|Available|  \\n|Windows Forms Application|**Yes**|  \\n|Class Library|No|  \\n|Console Application|No|  \\n|Windows Forms Control Library|No|  \\n|Web Control Library|No|  \\n|Windows Service|No|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Application.UnhandledException` event to log any unhandled exceptions.  \\n  \\n You must enter the code in the Code Editor window for application events. To access this window, follow the procedure found in this topic's Remarks section. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\\\(Visual%20Basic\\\\).md).  \\n  \\n Because the `UnhandledException` event is not raised when a debugger is attached to the application, you have to run this example outside the Visual Studio Integrated Development Environment.  \\n  \\n [!code-vb[VbVbalrMyApplication#17](~/add/codesnippet/visualbasic/VbVbalrMyApplication/FakeMyEvents.vb#17)]\"\n  syntax:\n    content: public event Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler UnhandledException;\n    return:\n      type: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering\n  id: UseCompatibleTextRendering\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  langs:\n  - csharp\n  name: UseCompatibleTextRendering\n  nameWithType: WindowsFormsApplicationBase.UseCompatibleTextRendering\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.ApplicationServices\n  summary: When overridden in a derived class, this property allows a designer to specify the default text rendering engine for the application's forms.\n  remarks: \"By default, this property returns `False` to indicate that the GDI text rendering engine for [!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)] be used for the application's forms. However, you can override this property to return `True` and specify that the application's forms use the GDI+ text rendering engine, which is used in Visual Basic .NET 2002 and Visual Basic .NET 2003.  \\n  \\n This property is called by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> constructor.  \\n  \\n Code that overrides methods of the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> class should be entered in the ApplicationEvents.vb file, which is hidden by default.  \\n  \\n||  \\n|-|  \\n|To access the Code Editor window for overriding members|  \\n|1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.<br />2.  Click the **Application** tab.<br />3.  Click the **View Application Events** button to open the Code Editor.<br />     For more information, see [Application Page, Project Designer (Visual Basic)](~/add/includes/ajax-current-ext-md.md).|\"\n  example:\n  - \"This example demonstrates how to set the GDI+ text rendering engine as the application's default rendering engine by overriding the UseCompatibleTextRendering property.  \\n  \\n```  \\nProtected Overloads Shared ReadOnly Property UseCompatibleTextRendering() As Boolean  \\n    Get  \\n        ' Use the GDI+ text rendering engine.  \\n        Return True  \\n    End Get  \\nEnd Property  \\n```  \\n  \\n You must enter this code in the Code Editor window for application events. For more information, see [Application Page, Project Designer (Visual Basic)](../Topic/Application%20Page,%20Project%20Designer%20\\\\(Visual%20Basic\\\\).md).\"\n  syntax:\n    content: protected static bool UseCompatibleTextRendering { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref>. A value of <xref uid=\"langword_csharp_False\" name=\"False\" href=\"\"></xref> indicates that the application should use the default text rendering engine for [!INCLUDE[vbprvblong](~/add/includes/vbprvblong-md.md)]. A value of <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> indicates that the application should use the text rendering engine for Visual Basic .NET 2002 and Visual Basic .NET 2003.\n  overload: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase\n  isExternal: false\n  name: Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: WindowsFormsApplicationBase()\n  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase()\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.WindowsFormsApplicationBase()\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: WindowsFormsApplicationBase(AuthenticationMode)\n  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase(AuthenticationMode)\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.WindowsFormsApplicationBase(AuthenticationMode)\n- uid: Microsoft.VisualBasic.ApplicationServices.AuthenticationMode\n  parent: Microsoft.VisualBasic.ApplicationServices\n  isExternal: false\n  name: AuthenticationMode\n  nameWithType: AuthenticationMode\n  fullName: Microsoft.VisualBasic.ApplicationServices.AuthenticationMode\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: ApplicationContext\n  nameWithType: WindowsFormsApplicationBase.ApplicationContext\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext\n- uid: System.Windows.Forms.ApplicationContext\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ApplicationContext\n  nameWithType: ApplicationContext\n  fullName: System.Windows.Forms.ApplicationContext\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: DoEvents()\n  nameWithType: WindowsFormsApplicationBase.DoEvents()\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents()\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: EnableVisualStyles\n  nameWithType: WindowsFormsApplicationBase.EnableVisualStyles\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: HideSplashScreen()\n  nameWithType: WindowsFormsApplicationBase.HideSplashScreen()\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen()\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: IsSingleInstance\n  nameWithType: WindowsFormsApplicationBase.IsSingleInstance\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: MainForm\n  nameWithType: WindowsFormsApplicationBase.MainForm\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm\n- uid: System.Windows.Forms.Form\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Form\n  nameWithType: Form\n  fullName: System.Windows.Forms.Form\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: MinimumSplashScreenDisplayTime\n  nameWithType: WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: NetworkAvailabilityChanged\n  nameWithType: WindowsFormsApplicationBase.NetworkAvailabilityChanged\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged\n- uid: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler\n  parent: Microsoft.VisualBasic.Devices\n  isExternal: false\n  name: NetworkAvailableEventHandler\n  nameWithType: NetworkAvailableEventHandler\n  fullName: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: OnCreateMainForm()\n  nameWithType: WindowsFormsApplicationBase.OnCreateMainForm()\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm()\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: OnCreateSplashScreen()\n  nameWithType: WindowsFormsApplicationBase.OnCreateSplashScreen()\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen()\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: OnInitialize(ReadOnlyCollection<String>)\n  nameWithType: WindowsFormsApplicationBase.OnInitialize(ReadOnlyCollection<String>)\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(ReadOnlyCollection<String>)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<String>\n  nameWithType: ReadOnlyCollection<String>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: OnRun()\n  nameWithType: WindowsFormsApplicationBase.OnRun()\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun()\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: OnShutdown()\n  nameWithType: WindowsFormsApplicationBase.OnShutdown()\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown()\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: OnStartup(StartupEventArgs)\n  nameWithType: WindowsFormsApplicationBase.OnStartup(StartupEventArgs)\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(StartupEventArgs)\n- uid: Microsoft.VisualBasic.ApplicationServices.StartupEventArgs\n  parent: Microsoft.VisualBasic.ApplicationServices\n  isExternal: false\n  name: StartupEventArgs\n  nameWithType: StartupEventArgs\n  fullName: Microsoft.VisualBasic.ApplicationServices.StartupEventArgs\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: OnStartupNextInstance(StartupNextInstanceEventArgs)\n  nameWithType: WindowsFormsApplicationBase.OnStartupNextInstance(StartupNextInstanceEventArgs)\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(StartupNextInstanceEventArgs)\n- uid: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs\n  parent: Microsoft.VisualBasic.ApplicationServices\n  isExternal: false\n  name: StartupNextInstanceEventArgs\n  nameWithType: StartupNextInstanceEventArgs\n  fullName: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: OnUnhandledException(UnhandledExceptionEventArgs)\n  nameWithType: WindowsFormsApplicationBase.OnUnhandledException(UnhandledExceptionEventArgs)\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(UnhandledExceptionEventArgs)\n- uid: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs\n  parent: Microsoft.VisualBasic.ApplicationServices\n  isExternal: false\n  name: UnhandledExceptionEventArgs\n  nameWithType: UnhandledExceptionEventArgs\n  fullName: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: OpenForms\n  nameWithType: WindowsFormsApplicationBase.OpenForms\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms\n- uid: System.Windows.Forms.FormCollection\n  parent: System.Windows.Forms\n  isExternal: false\n  name: FormCollection\n  nameWithType: FormCollection\n  fullName: System.Windows.Forms.FormCollection\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: Run(String[])\n  nameWithType: WindowsFormsApplicationBase.Run(String[])\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(String[])\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: SaveMySettingsOnExit\n  nameWithType: WindowsFormsApplicationBase.SaveMySettingsOnExit\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: ShowSplashScreen()\n  nameWithType: WindowsFormsApplicationBase.ShowSplashScreen()\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen()\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: Shutdown\n  nameWithType: WindowsFormsApplicationBase.Shutdown\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown\n- uid: Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler\n  parent: Microsoft.VisualBasic.ApplicationServices\n  isExternal: false\n  name: ShutdownEventHandler\n  nameWithType: ShutdownEventHandler\n  fullName: Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: ShutdownStyle\n  nameWithType: WindowsFormsApplicationBase.ShutdownStyle\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle\n- uid: Microsoft.VisualBasic.ApplicationServices.ShutdownMode\n  parent: Microsoft.VisualBasic.ApplicationServices\n  isExternal: false\n  name: ShutdownMode\n  nameWithType: ShutdownMode\n  fullName: Microsoft.VisualBasic.ApplicationServices.ShutdownMode\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: SplashScreen\n  nameWithType: WindowsFormsApplicationBase.SplashScreen\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: Startup\n  nameWithType: WindowsFormsApplicationBase.Startup\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup\n- uid: Microsoft.VisualBasic.ApplicationServices.StartupEventHandler\n  parent: Microsoft.VisualBasic.ApplicationServices\n  isExternal: false\n  name: StartupEventHandler\n  nameWithType: StartupEventHandler\n  fullName: Microsoft.VisualBasic.ApplicationServices.StartupEventHandler\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: StartupNextInstance\n  nameWithType: WindowsFormsApplicationBase.StartupNextInstance\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance\n- uid: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler\n  parent: Microsoft.VisualBasic.ApplicationServices\n  isExternal: false\n  name: StartupNextInstanceEventHandler\n  nameWithType: StartupNextInstanceEventHandler\n  fullName: Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: UnhandledException\n  nameWithType: WindowsFormsApplicationBase.UnhandledException\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException\n- uid: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler\n  parent: Microsoft.VisualBasic.ApplicationServices\n  isExternal: false\n  name: UnhandledExceptionEventHandler\n  nameWithType: UnhandledExceptionEventHandler\n  fullName: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: UseCompatibleTextRendering\n  nameWithType: WindowsFormsApplicationBase.UseCompatibleTextRendering\n  fullName: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: WindowsFormsApplicationBase\n  nameWithType: WindowsFormsApplicationBase.WindowsFormsApplicationBase\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: ApplicationContext\n  nameWithType: WindowsFormsApplicationBase.ApplicationContext\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: DoEvents\n  nameWithType: WindowsFormsApplicationBase.DoEvents\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: EnableVisualStyles\n  nameWithType: WindowsFormsApplicationBase.EnableVisualStyles\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: HideSplashScreen\n  nameWithType: WindowsFormsApplicationBase.HideSplashScreen\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: IsSingleInstance\n  nameWithType: WindowsFormsApplicationBase.IsSingleInstance\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: MainForm\n  nameWithType: WindowsFormsApplicationBase.MainForm\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: MinimumSplashScreenDisplayTime\n  nameWithType: WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: OnCreateMainForm\n  nameWithType: WindowsFormsApplicationBase.OnCreateMainForm\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: OnCreateSplashScreen\n  nameWithType: WindowsFormsApplicationBase.OnCreateSplashScreen\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: OnInitialize\n  nameWithType: WindowsFormsApplicationBase.OnInitialize\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: OnRun\n  nameWithType: WindowsFormsApplicationBase.OnRun\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: OnShutdown\n  nameWithType: WindowsFormsApplicationBase.OnShutdown\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: OnStartup\n  nameWithType: WindowsFormsApplicationBase.OnStartup\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: OnStartupNextInstance\n  nameWithType: WindowsFormsApplicationBase.OnStartupNextInstance\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: OnUnhandledException\n  nameWithType: WindowsFormsApplicationBase.OnUnhandledException\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: OpenForms\n  nameWithType: WindowsFormsApplicationBase.OpenForms\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: Run\n  nameWithType: WindowsFormsApplicationBase.Run\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: SaveMySettingsOnExit\n  nameWithType: WindowsFormsApplicationBase.SaveMySettingsOnExit\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: ShowSplashScreen\n  nameWithType: WindowsFormsApplicationBase.ShowSplashScreen\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: ShutdownStyle\n  nameWithType: WindowsFormsApplicationBase.ShutdownStyle\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: SplashScreen\n  nameWithType: WindowsFormsApplicationBase.SplashScreen\n- uid: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering*\n  parent: Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\n  isExternal: false\n  name: UseCompatibleTextRendering\n  nameWithType: WindowsFormsApplicationBase.UseCompatibleTextRendering\n"}