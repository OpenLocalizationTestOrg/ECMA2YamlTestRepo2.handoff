{"nodes":[{"pos":[2312,2393],"content":"Manages a standard endpoint element for a service application configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Manages a standard endpoint element for a service application configuration file.","pos":[0,81]}]},{"pos":[5734,5849],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.StandardEndpointElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.ServiceModel.Configuration.StandardEndpointElement\"></xref> class."},{"pos":[6862,6953],"content":"Applies the content of a specific service endpoint to the current channel endpoint element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Applies the content of a specific service endpoint to the current channel endpoint element.","pos":[0,91]}]},{"pos":[7263,7337],"content":"An endpoint that enables clients to find and communicate with the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"An endpoint that enables clients to find and communicate with the service.","pos":[0,74]}]},{"pos":[7459,7576],"content":"An endpoint element that defines the physical transfer of messages back and forth between the client and the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"An endpoint element that defines the physical transfer of messages back and forth between the client and the service.","pos":[0,117]}]},{"pos":[8522,8613],"content":"Applies the content of a specific service endpoint to the current service endpoint element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Applies the content of a specific service endpoint to the current service endpoint element.","pos":[0,91]}]},{"pos":[8923,8997],"content":"An endpoint that enables clients to find and communicate with the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"An endpoint that enables clients to find and communicate with the service.","pos":[0,74]}]},{"pos":[9119,9202],"content":"An endpoint element that defines how clients find and communicate with the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"An endpoint element that defines how clients find and communicate with the service.","pos":[0,83]}]},{"pos":[10000,10137],"content":"When implemented in a derived class, creates a service endpoint from message information contained in the specified contract description.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, creates a service endpoint from message information contained in the specified contract description.","pos":[0,137]}]},{"pos":[10454,10530],"content":"Information about what is contained in messages being sent from an endpoint.","needQuote":true,"needEscape":true,"nodes":[{"content":"Information about what is contained in messages being sent from an endpoint.","pos":[0,76]}]},{"pos":[10622,10641],"content":"A service endpoint.","needQuote":true,"needEscape":true,"nodes":[{"content":"A service endpoint.","pos":[0,19]}]},{"pos":[11230,11246],"content":"Not implemented.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not implemented.","pos":[0,16]}]},{"pos":[11371,11390],"content":"<xref:System.Type>.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Type&gt;.","pos":[0,19],"source":"<xref:System.Type>."}]},{"pos":[12201,12315],"content":"Initializes and verifies the format of the specified channel endpoint in a service application configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes and verifies the format of the specified channel endpoint in a service application configuration file.","pos":[0,114]}]},{"pos":[12593,12710],"content":"An endpoint element that defines the physical transfer of messages back and forth between the client and the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"An endpoint element that defines the physical transfer of messages back and forth between the client and the service.","pos":[0,117]}]},{"pos":[13530,13644],"content":"Initializes and verifies the format of the specified service endpoint in a service application configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes and verifies the format of the specified service endpoint in a service application configuration file.","pos":[0,114]}]},{"pos":[13922,14004],"content":"An endpoint element that enables clients to find and communicate with the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"An endpoint element that enables clients to find and communicate with the service.","pos":[0,82]}]},{"pos":[14750,14914],"content":"Ensures that the specified service endpoint is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and that its type matches the current endpoint type.","needQuote":true,"needEscape":true,"source":"Ensures that the specified service endpoint is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and that its type matches the current endpoint type."},{"pos":[15150,15224],"content":"An endpoint that enables clients to find and communicate with the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"An endpoint that enables clients to find and communicate with the service.","pos":[0,74]}]},{"pos":[15766,15874],"content":"Gets or sets the name of the current endpoint element from a list of configuration strings for that element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the current endpoint element from a list of configuration strings for that element.","pos":[0,108]}]},{"pos":[15988,16020],"content":"The name of an endpoint element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of an endpoint element.","pos":[0,32]}]},{"pos":[16962,17114],"content":"When called from a derived class, loads the service description information from the configuration file and applies it to the runtime being constructed.","needQuote":true,"needEscape":true,"nodes":[{"content":"When called from a derived class, loads the service description information from the configuration file and applies it to the runtime being constructed.","pos":[0,152]}]},{"pos":[17438,17512],"content":"An endpoint that enables clients to find and communicate with the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"An endpoint that enables clients to find and communicate with the service.","pos":[0,74]}]},{"pos":[17634,17751],"content":"An endpoint element that defines the physical transfer of messages back and forth between the client and the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"An endpoint element that defines the physical transfer of messages back and forth between the client and the service.","pos":[0,117]}]},{"pos":[18709,18861],"content":"When called from a derived class, loads the service description information from the configuration file and applies it to the runtime being constructed.","needQuote":true,"needEscape":true,"nodes":[{"content":"When called from a derived class, loads the service description information from the configuration file and applies it to the runtime being constructed.","pos":[0,152]}]},{"pos":[19185,19259],"content":"An endpoint that enables clients to find and communicate with the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"An endpoint that enables clients to find and communicate with the service.","pos":[0,74]}]},{"pos":[19381,19433],"content":"A service endpoint element of a service application.","needQuote":true,"needEscape":true,"nodes":[{"content":"A service endpoint element of a service application.","pos":[0,52]}]},{"pos":[20262,20410],"content":"When called from a derived class, initializes and verifies the format of the specified service endpoint in a service application configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"When called from a derived class, initializes and verifies the format of the specified service endpoint in a service application configuration file.","pos":[0,148]}]},{"pos":[20702,20819],"content":"An endpoint element that defines the physical transfer of messages back and forth between the client and the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"An endpoint element that defines the physical transfer of messages back and forth between the client and the service.","pos":[0,117]}]},{"pos":[21651,21799],"content":"When called from a derived class, initializes and verifies the format of the specified service endpoint in a service application configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"When called from a derived class, initializes and verifies the format of the specified service endpoint in a service application configuration file.","pos":[0,148]}]},{"pos":[22091,22180],"content":"A service endpoint element that enables clients to find and communicate with the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"A service endpoint element that enables clients to find and communicate with the service.","pos":[0,89]}]},{"pos":[22761,22827],"content":"Gets the collection of properties of the current endpoint element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of properties of the current endpoint element.","pos":[0,66]}]},{"pos":[23039,23088],"content":"A collection of configuration element properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of configuration element properties.","pos":[0,49]}]},{"pos":[23781,23936],"content":"Resets the internal state of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, including the locks and the properties collections.","needQuote":true,"needEscape":true,"source":"Resets the internal state of the <xref href=\"System.Configuration.ConfigurationElement\"></xref> object, including the locks and the properties collections."},{"pos":[24162,24225],"content":"The top level of a configuration element that has sub-elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"The top level of a configuration element that has sub-elements.","pos":[0,63]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.StandardEndpointElement\n  id: StandardEndpointElement\n  children:\n  - System.ServiceModel.Configuration.StandardEndpointElement.#ctor\n  - System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)\n  - System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)\n  - System.ServiceModel.Configuration.StandardEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)\n  - System.ServiceModel.Configuration.StandardEndpointElement.EndpointType\n  - System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)\n  - System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)\n  - System.ServiceModel.Configuration.StandardEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)\n  - System.ServiceModel.Configuration.StandardEndpointElement.Name\n  - System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)\n  - System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)\n  - System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)\n  - System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)\n  - System.ServiceModel.Configuration.StandardEndpointElement.Properties\n  - System.ServiceModel.Configuration.StandardEndpointElement.Reset(System.Configuration.ConfigurationElement)\n  langs:\n  - csharp\n  name: StandardEndpointElement\n  nameWithType: StandardEndpointElement\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement\n  type: Class\n  summary: Manages a standard endpoint element for a service application configuration file.\n  syntax:\n    content: 'public abstract class StandardEndpointElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  langs:\n  - csharp\n  name: StandardEndpointElement()\n  nameWithType: StandardEndpointElement.StandardEndpointElement()\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.StandardEndpointElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Creates a new instance of the <xref href=\"System.ServiceModel.Configuration.StandardEndpointElement\"></xref> class.\n  syntax:\n    content: protected StandardEndpointElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.StandardEndpointElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)\n  id: ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  langs:\n  - csharp\n  name: ApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)\n  nameWithType: StandardEndpointElement.ApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Applies the content of a specific service endpoint to the current channel endpoint element.\n  syntax:\n    content: public void ApplyConfiguration (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Configuration.ChannelEndpointElement channelEndpointElement);\n    parameters:\n    - id: endpoint\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: An endpoint that enables clients to find and communicate with the service.\n    - id: channelEndpointElement\n      type: System.ServiceModel.Configuration.ChannelEndpointElement\n      description: An endpoint element that defines the physical transfer of messages back and forth between the client and the service.\n  overload: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)\n  id: ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  langs:\n  - csharp\n  name: ApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)\n  nameWithType: StandardEndpointElement.ApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Applies the content of a specific service endpoint to the current service endpoint element.\n  syntax:\n    content: public void ApplyConfiguration (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Configuration.ServiceEndpointElement serviceEndpointElement);\n    parameters:\n    - id: endpoint\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: An endpoint that enables clients to find and communicate with the service.\n    - id: serviceEndpointElement\n      type: System.ServiceModel.Configuration.ServiceEndpointElement\n      description: An endpoint element that defines how clients find and communicate with the service.\n  overload: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)\n  id: CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  langs:\n  - csharp\n  name: CreateServiceEndpoint(ContractDescription)\n  nameWithType: StandardEndpointElement.CreateServiceEndpoint(ContractDescription)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.CreateServiceEndpoint(ContractDescription)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: When implemented in a derived class, creates a service endpoint from message information contained in the specified contract description.\n  syntax:\n    content: protected abstract System.ServiceModel.Description.ServiceEndpoint CreateServiceEndpoint (System.ServiceModel.Description.ContractDescription contractDescription);\n    parameters:\n    - id: contractDescription\n      type: System.ServiceModel.Description.ContractDescription\n      description: Information about what is contained in messages being sent from an endpoint.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: A service endpoint.\n  overload: System.ServiceModel.Configuration.StandardEndpointElement.CreateServiceEndpoint*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.EndpointType\n  id: EndpointType\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  langs:\n  - csharp\n  name: EndpointType\n  nameWithType: StandardEndpointElement.EndpointType\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.EndpointType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Not implemented.\n  syntax:\n    content: protected abstract Type EndpointType { get; }\n    return:\n      type: System.Type\n      description: <xref:System.Type>.\n  overload: System.ServiceModel.Configuration.StandardEndpointElement.EndpointType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)\n  id: InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  langs:\n  - csharp\n  name: InitializeAndValidate(ChannelEndpointElement)\n  nameWithType: StandardEndpointElement.InitializeAndValidate(ChannelEndpointElement)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(ChannelEndpointElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes and verifies the format of the specified channel endpoint in a service application configuration file.\n  syntax:\n    content: public void InitializeAndValidate (System.ServiceModel.Configuration.ChannelEndpointElement channelEndpointElement);\n    parameters:\n    - id: channelEndpointElement\n      type: System.ServiceModel.Configuration.ChannelEndpointElement\n      description: An endpoint element that defines the physical transfer of messages back and forth between the client and the service.\n  overload: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)\n  id: InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  langs:\n  - csharp\n  name: InitializeAndValidate(ServiceEndpointElement)\n  nameWithType: StandardEndpointElement.InitializeAndValidate(ServiceEndpointElement)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(ServiceEndpointElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes and verifies the format of the specified service endpoint in a service application configuration file.\n  syntax:\n    content: public void InitializeAndValidate (System.ServiceModel.Configuration.ServiceEndpointElement serviceEndpointElement);\n    parameters:\n    - id: serviceEndpointElement\n      type: System.ServiceModel.Configuration.ServiceEndpointElement\n      description: An endpoint element that enables clients to find and communicate with the service.\n  overload: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)\n  id: InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  langs:\n  - csharp\n  name: InitializeFrom(ServiceEndpoint)\n  nameWithType: StandardEndpointElement.InitializeFrom(ServiceEndpoint)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.InitializeFrom(ServiceEndpoint)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Ensures that the specified service endpoint is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and that its type matches the current endpoint type.\n  syntax:\n    content: protected virtual void InitializeFrom (System.ServiceModel.Description.ServiceEndpoint endpoint);\n    parameters:\n    - id: endpoint\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: An endpoint that enables clients to find and communicate with the service.\n  overload: System.ServiceModel.Configuration.StandardEndpointElement.InitializeFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.Name\n  id: Name\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  langs:\n  - csharp\n  name: Name\n  nameWithType: StandardEndpointElement.Name\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.Name\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the name of the current endpoint element from a list of configuration strings for that element.\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of an endpoint element.\n  overload: System.ServiceModel.Configuration.StandardEndpointElement.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)\n  id: OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  langs:\n  - csharp\n  name: OnApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)\n  nameWithType: StandardEndpointElement.OnApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: When called from a derived class, loads the service description information from the configuration file and applies it to the runtime being constructed.\n  syntax:\n    content: protected abstract void OnApplyConfiguration (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Configuration.ChannelEndpointElement channelEndpointElement);\n    parameters:\n    - id: endpoint\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: An endpoint that enables clients to find and communicate with the service.\n    - id: channelEndpointElement\n      type: System.ServiceModel.Configuration.ChannelEndpointElement\n      description: An endpoint element that defines the physical transfer of messages back and forth between the client and the service.\n  overload: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)\n  id: OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  langs:\n  - csharp\n  name: OnApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)\n  nameWithType: StandardEndpointElement.OnApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: When called from a derived class, loads the service description information from the configuration file and applies it to the runtime being constructed.\n  syntax:\n    content: protected abstract void OnApplyConfiguration (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Configuration.ServiceEndpointElement serviceEndpointElement);\n    parameters:\n    - id: endpoint\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: An endpoint that enables clients to find and communicate with the service.\n    - id: serviceEndpointElement\n      type: System.ServiceModel.Configuration.ServiceEndpointElement\n      description: A service endpoint element of a service application.\n  overload: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)\n  id: OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  langs:\n  - csharp\n  name: OnInitializeAndValidate(ChannelEndpointElement)\n  nameWithType: StandardEndpointElement.OnInitializeAndValidate(ChannelEndpointElement)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(ChannelEndpointElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: When called from a derived class, initializes and verifies the format of the specified service endpoint in a service application configuration file.\n  syntax:\n    content: protected abstract void OnInitializeAndValidate (System.ServiceModel.Configuration.ChannelEndpointElement channelEndpointElement);\n    parameters:\n    - id: channelEndpointElement\n      type: System.ServiceModel.Configuration.ChannelEndpointElement\n      description: An endpoint element that defines the physical transfer of messages back and forth between the client and the service.\n  overload: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)\n  id: OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  langs:\n  - csharp\n  name: OnInitializeAndValidate(ServiceEndpointElement)\n  nameWithType: StandardEndpointElement.OnInitializeAndValidate(ServiceEndpointElement)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(ServiceEndpointElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: When called from a derived class, initializes and verifies the format of the specified service endpoint in a service application configuration file.\n  syntax:\n    content: protected abstract void OnInitializeAndValidate (System.ServiceModel.Configuration.ServiceEndpointElement serviceEndpointElement);\n    parameters:\n    - id: serviceEndpointElement\n      type: System.ServiceModel.Configuration.ServiceEndpointElement\n      description: A service endpoint element that enables clients to find and communicate with the service.\n  overload: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: StandardEndpointElement.Properties\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the collection of properties of the current endpoint element.\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: A collection of configuration element properties.\n  overload: System.ServiceModel.Configuration.StandardEndpointElement.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.Reset(System.Configuration.ConfigurationElement)\n  id: Reset(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  langs:\n  - csharp\n  name: Reset(ConfigurationElement)\n  nameWithType: StandardEndpointElement.Reset(ConfigurationElement)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.Reset(ConfigurationElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Resets the internal state of the <xref href=\"System.Configuration.ConfigurationElement\"></xref> object, including the locks and the properties collections.\n  syntax:\n    content: protected override void Reset (System.Configuration.ConfigurationElement parentElement);\n    parameters:\n    - id: parentElement\n      type: System.Configuration.ConfigurationElement\n      description: The top level of a configuration element that has sub-elements.\n  overload: System.ServiceModel.Configuration.StandardEndpointElement.Reset*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.#ctor\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: StandardEndpointElement()\n  nameWithType: StandardEndpointElement.StandardEndpointElement()\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.StandardEndpointElement()\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: ApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)\n  nameWithType: StandardEndpointElement.ApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)\n- uid: System.ServiceModel.Description.ServiceEndpoint\n  parent: System.ServiceModel.Description\n  isExternal: true\n  name: ServiceEndpoint\n  nameWithType: ServiceEndpoint\n  fullName: System.ServiceModel.Description.ServiceEndpoint\n- uid: System.ServiceModel.Configuration.ChannelEndpointElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: ChannelEndpointElement\n  nameWithType: ChannelEndpointElement\n  fullName: System.ServiceModel.Configuration.ChannelEndpointElement\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: ApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)\n  nameWithType: StandardEndpointElement.ApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)\n- uid: System.ServiceModel.Configuration.ServiceEndpointElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: ServiceEndpointElement\n  nameWithType: ServiceEndpointElement\n  fullName: System.ServiceModel.Configuration.ServiceEndpointElement\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: CreateServiceEndpoint(ContractDescription)\n  nameWithType: StandardEndpointElement.CreateServiceEndpoint(ContractDescription)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.CreateServiceEndpoint(ContractDescription)\n- uid: System.ServiceModel.Description.ContractDescription\n  parent: System.ServiceModel.Description\n  isExternal: true\n  name: ContractDescription\n  nameWithType: ContractDescription\n  fullName: System.ServiceModel.Description.ContractDescription\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.EndpointType\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: EndpointType\n  nameWithType: StandardEndpointElement.EndpointType\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.EndpointType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: InitializeAndValidate(ChannelEndpointElement)\n  nameWithType: StandardEndpointElement.InitializeAndValidate(ChannelEndpointElement)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(ChannelEndpointElement)\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: InitializeAndValidate(ServiceEndpointElement)\n  nameWithType: StandardEndpointElement.InitializeAndValidate(ServiceEndpointElement)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(ServiceEndpointElement)\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: InitializeFrom(ServiceEndpoint)\n  nameWithType: StandardEndpointElement.InitializeFrom(ServiceEndpoint)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.InitializeFrom(ServiceEndpoint)\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.Name\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: Name\n  nameWithType: StandardEndpointElement.Name\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.Name\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: OnApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)\n  nameWithType: StandardEndpointElement.OnApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: OnApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)\n  nameWithType: StandardEndpointElement.OnApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: OnInitializeAndValidate(ChannelEndpointElement)\n  nameWithType: StandardEndpointElement.OnInitializeAndValidate(ChannelEndpointElement)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(ChannelEndpointElement)\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: OnInitializeAndValidate(ServiceEndpointElement)\n  nameWithType: StandardEndpointElement.OnInitializeAndValidate(ServiceEndpointElement)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(ServiceEndpointElement)\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.Properties\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: Properties\n  nameWithType: StandardEndpointElement.Properties\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: StandardEndpointElement.Reset(ConfigurationElement)\n  fullName: System.ServiceModel.Configuration.StandardEndpointElement.Reset(ConfigurationElement)\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.#ctor*\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: StandardEndpointElement\n  nameWithType: StandardEndpointElement.StandardEndpointElement\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration*\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: ApplyConfiguration\n  nameWithType: StandardEndpointElement.ApplyConfiguration\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.CreateServiceEndpoint*\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: CreateServiceEndpoint\n  nameWithType: StandardEndpointElement.CreateServiceEndpoint\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.EndpointType*\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: EndpointType\n  nameWithType: StandardEndpointElement.EndpointType\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate*\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: InitializeAndValidate\n  nameWithType: StandardEndpointElement.InitializeAndValidate\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.InitializeFrom*\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: InitializeFrom\n  nameWithType: StandardEndpointElement.InitializeFrom\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.Name*\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: Name\n  nameWithType: StandardEndpointElement.Name\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration*\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: OnApplyConfiguration\n  nameWithType: StandardEndpointElement.OnApplyConfiguration\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate*\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: OnInitializeAndValidate\n  nameWithType: StandardEndpointElement.OnInitializeAndValidate\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.Properties*\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: Properties\n  nameWithType: StandardEndpointElement.Properties\n- uid: System.ServiceModel.Configuration.StandardEndpointElement.Reset*\n  parent: System.ServiceModel.Configuration.StandardEndpointElement\n  isExternal: false\n  name: Reset\n  nameWithType: StandardEndpointElement.Reset\n"}