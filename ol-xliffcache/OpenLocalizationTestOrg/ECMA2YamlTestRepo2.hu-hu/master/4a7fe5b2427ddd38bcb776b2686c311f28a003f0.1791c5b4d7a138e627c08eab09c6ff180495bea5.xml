{"nodes":[{"pos":[1057,1195],"content":"Enables the .NET Framework Data Provider for Oracle to help ensure that a user has a security level adequate to access an Oracle database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables the .NET Framework Data Provider for Oracle to help ensure that a user has a security level adequate to access an Oracle database.","pos":[0,138]}]},{"pos":[1208,1989],"content":"This type is deprecated and will be removed in a future version of the .NET Framework. For more information, see [Oracle and ADO.NET](~/add/includes/ajax-current-ext-md.md).       The <xref:System.Data.OracleClient.OraclePermission.IsUnrestricted%2A> property takes precedence over the <xref:System.Data.OracleClient.OraclePermission.AllowBlankPassword%2A> property. Therefore, if you set <xref:System.Data.OracleClient.OraclePermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Data.OracleClient.OraclePermission.IsUnrestricted%2A> to `false` to prevent a user from making a connection using a blank password.       For an example demonstrating how to use security demands, see [Code Access Security and ADO.NET](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This type is deprecated and will be removed in a future version of the .NET Framework.","pos":[0,86]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Oracle and ADO.NET<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[87,173],"source":" For more information, see [Oracle and ADO.NET](~/add/includes/ajax-current-ext-md.md)."},{"content":"The &lt;xref:System.Data.OracleClient.OraclePermission.IsUnrestricted%2A&gt; property takes precedence over the &lt;xref:System.Data.OracleClient.OraclePermission.AllowBlankPassword%2A&gt; property.","pos":[180,366],"source":"       The <xref:System.Data.OracleClient.OraclePermission.IsUnrestricted%2A> property takes precedence over the <xref:System.Data.OracleClient.OraclePermission.AllowBlankPassword%2A> property."},{"content":"Therefore, if you set &lt;xref:System.Data.OracleClient.OraclePermission.AllowBlankPassword%2A&gt; to <ph id=\"ph1\">`false`</ph>, you must also set &lt;xref:System.Data.OracleClient.OraclePermission.IsUnrestricted%2A&gt; to <ph id=\"ph2\">`false`</ph> to prevent a user from making a connection using a blank password.","pos":[367,634],"source":" Therefore, if you set <xref:System.Data.OracleClient.OraclePermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Data.OracleClient.OraclePermission.IsUnrestricted%2A> to `false` to prevent a user from making a connection using a blank password."},{"content":"For an example demonstrating how to use security demands, see <bpt id=\"p1\">[</bpt>Code Access Security and ADO.NET<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[641,777],"source":"       For an example demonstrating how to use security demands, see [Code Access Security and ADO.NET](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[3573,3764],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OraclePermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with one of the <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.OracleClient.OraclePermission\"></xref> class with one of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."},{"pos":[3972,4055],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."},{"pos":[4748,4781],"content":"Creates a new set of permissions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new set of permissions.","pos":[0,33]}]},{"pos":[5002,5024],"content":"The connection string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The connection string.","pos":[0,22]}]},{"pos":[5093,5114],"content":"The key restrictions.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key restrictions.","pos":[0,21]}]},{"pos":[5200,5280],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.KeyRestrictionBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumerations.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.KeyRestrictionBehavior\"></xref> enumerations."},{"pos":[5806,5866],"content":"Gets a value indicating whether a blank password is allowed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether a blank password is allowed.","pos":[0,60]}]},{"pos":[5878,6196],"content":"The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the AllowBlankPassword property. Therefore, if you set AllowBlankPassword to false, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Security.Permissions.PermissionState&gt; enumeration takes precedence over the AllowBlankPassword property.","pos":[0,121],"source":"The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the AllowBlankPassword property."},{"content":"Therefore, if you set AllowBlankPassword to false, you must also set &lt;xref:System.Security.Permissions.PermissionState&gt; to <ph id=\"ph1\">`None`</ph> to prevent a user from making a connection using a blank password.","pos":[122,318],"source":" Therefore, if you set AllowBlankPassword to false, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password."}]},{"pos":[6323,6489],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a blank password is allowed, otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a blank password is allowed, otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6964,7072],"content":"When implemented by a derived class, creates and returns an identical copy of the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented by a derived class, creates and returns an identical copy of the current permission object.","pos":[0,108]}]},{"pos":[7239,7279],"content":"A copy of the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current permission object.","pos":[0,40]}]},{"pos":[7866,7977],"content":"When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.","pos":[0,111]}]},{"pos":[8186,8252],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> expression.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.SecurityElement\"></xref> expression."},{"pos":[8832,8982],"content":"When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,150]}]},{"pos":[9190,9299],"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","pos":[0,109],"nodes":[{"content":"A permission to intersect with the current permission.","pos":[0,54]},{"content":"It must be of the same type as the current permission.","pos":[55,109]}]}]},{"pos":[9371,9590],"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the intersection of the current permission and the specified permission.","pos":[0,105]},{"content":"This new permission is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the intersection is empty.","pos":[106,219],"source":" This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty."}]},{"pos":[10177,10296],"content":"When implemented by a derived class, determines whether the current permission is a subset of the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented by a derived class, determines whether the current permission is a subset of the specified permission.","pos":[0,119]}]},{"pos":[10482,10612],"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","pos":[0,130],"nodes":[{"content":"A permission that is to be tested for the subset relationship.","pos":[0,62]},{"content":"This permission must be of the same type as the current permission.","pos":[63,130]}]}]},{"pos":[10671,10873],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission is a subset of the specified permission; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11390,11525],"content":"Returns a value indicating whether the permission can be represented as unrestricted without any knowledge of the permission semantics.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether the permission can be represented as unrestricted without any knowledge of the permission semantics.","pos":[0,135]}]},{"pos":[11657,11771],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the permission can be represented as unrestricted.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the permission can be represented as unrestricted."},{"pos":[12247,12316],"content":"Creates an XML encoding of the security object and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML encoding of the security object and its current state.","pos":[0,69]}]},{"pos":[12492,12564],"content":"An XML encoding of the security object, including any state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML encoding of the security object, including any state information.","pos":[0,72]}]},{"pos":[13122,13216],"content":"Creates a permission that is the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a permission that is the union of the current permission and the specified permission.","pos":[0,94]}]},{"pos":[13420,13527],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]},{"pos":[13599,13697],"content":"A new permission that represents the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.OracleClient.OraclePermission\n  id: OraclePermission\n  children:\n  - System.Data.OracleClient.OraclePermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Data.OracleClient.OraclePermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  - System.Data.OracleClient.OraclePermission.AllowBlankPassword\n  - System.Data.OracleClient.OraclePermission.Copy\n  - System.Data.OracleClient.OraclePermission.FromXml(System.Security.SecurityElement)\n  - System.Data.OracleClient.OraclePermission.Intersect(System.Security.IPermission)\n  - System.Data.OracleClient.OraclePermission.IsSubsetOf(System.Security.IPermission)\n  - System.Data.OracleClient.OraclePermission.IsUnrestricted\n  - System.Data.OracleClient.OraclePermission.ToXml\n  - System.Data.OracleClient.OraclePermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: OraclePermission\n  nameWithType: OraclePermission\n  fullName: System.Data.OracleClient.OraclePermission\n  type: Class\n  summary: Enables the .NET Framework Data Provider for Oracle to help ensure that a user has a security level adequate to access an Oracle database.\n  remarks: \"This type is deprecated and will be removed in a future version of the .NET Framework. For more information, see [Oracle and ADO.NET](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The <xref:System.Data.OracleClient.OraclePermission.IsUnrestricted%2A> property takes precedence over the <xref:System.Data.OracleClient.OraclePermission.AllowBlankPassword%2A> property. Therefore, if you set <xref:System.Data.OracleClient.OraclePermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Data.OracleClient.OraclePermission.IsUnrestricted%2A> to `false` to prevent a user from making a connection using a blank password.  \\n  \\n For an example demonstrating how to use security demands, see [Code Access Security and ADO.NET](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"OraclePermission has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260\", false)]\n\n      public sealed class OraclePermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OraclePermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Data.OracleClient.OraclePermission\n  langs:\n  - csharp\n  name: OraclePermission(PermissionState)\n  nameWithType: OraclePermission.OraclePermission(PermissionState)\n  fullName: System.Data.OracleClient.OraclePermission.OraclePermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Initializes a new instance of the <xref href=\"System.Data.OracleClient.OraclePermission\"></xref> class with one of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  syntax:\n    content: public OraclePermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Data.OracleClient.OraclePermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OraclePermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  id: Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  parent: System.Data.OracleClient.OraclePermission\n  langs:\n  - csharp\n  name: Add(String,String,KeyRestrictionBehavior)\n  nameWithType: OraclePermission.Add(String,String,KeyRestrictionBehavior)\n  fullName: System.Data.OracleClient.OraclePermission.Add(String,String,KeyRestrictionBehavior)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Creates a new set of permissions.\n  syntax:\n    content: public void Add (string connectionString, string restrictions, System.Data.KeyRestrictionBehavior behavior);\n    parameters:\n    - id: connectionString\n      type: System.String\n      description: The connection string.\n    - id: restrictions\n      type: System.String\n      description: The key restrictions.\n    - id: behavior\n      type: System.Data.KeyRestrictionBehavior\n      description: One of the <xref href=\"System.Data.KeyRestrictionBehavior\"></xref> enumerations.\n  overload: System.Data.OracleClient.OraclePermission.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OraclePermission.AllowBlankPassword\n  id: AllowBlankPassword\n  parent: System.Data.OracleClient.OraclePermission\n  langs:\n  - csharp\n  name: AllowBlankPassword\n  nameWithType: OraclePermission.AllowBlankPassword\n  fullName: System.Data.OracleClient.OraclePermission.AllowBlankPassword\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets a value indicating whether a blank password is allowed.\n  remarks: The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the AllowBlankPassword property. Therefore, if you set AllowBlankPassword to false, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.\n  syntax:\n    content: public bool AllowBlankPassword { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a blank password is allowed, otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.OracleClient.OraclePermission.AllowBlankPassword*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OraclePermission.Copy\n  id: Copy\n  parent: System.Data.OracleClient.OraclePermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: OraclePermission.Copy()\n  fullName: System.Data.OracleClient.OraclePermission.Copy()\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: When implemented by a derived class, creates and returns an identical copy of the current permission object.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission object.\n  overload: System.Data.OracleClient.OraclePermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OraclePermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Data.OracleClient.OraclePermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: OraclePermission.FromXml(SecurityElement)\n  fullName: System.Data.OracleClient.OraclePermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: A <xref href=\"System.Security.SecurityElement\"></xref> expression.\n  overload: System.Data.OracleClient.OraclePermission.FromXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OraclePermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Data.OracleClient.OraclePermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: OraclePermission.Intersect(IPermission)\n  fullName: System.Data.OracleClient.OraclePermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.\n  overload: System.Data.OracleClient.OraclePermission.Intersect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OraclePermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Data.OracleClient.OraclePermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: OraclePermission.IsSubsetOf(IPermission)\n  fullName: System.Data.OracleClient.OraclePermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: When implemented by a derived class, determines whether the current permission is a subset of the specified permission.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.OracleClient.OraclePermission.IsSubsetOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OraclePermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Data.OracleClient.OraclePermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: OraclePermission.IsUnrestricted()\n  fullName: System.Data.OracleClient.OraclePermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Returns a value indicating whether the permission can be represented as unrestricted without any knowledge of the permission semantics.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the permission can be represented as unrestricted.\n  overload: System.Data.OracleClient.OraclePermission.IsUnrestricted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OraclePermission.ToXml\n  id: ToXml\n  parent: System.Data.OracleClient.OraclePermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: OraclePermission.ToXml()\n  fullName: System.Data.OracleClient.OraclePermission.ToXml()\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Creates an XML encoding of the security object and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the security object, including any state information.\n  overload: System.Data.OracleClient.OraclePermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OraclePermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Data.OracleClient.OraclePermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: OraclePermission.Union(IPermission)\n  fullName: System.Data.OracleClient.OraclePermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Creates a permission that is the union of the current permission and the specified permission.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Data.OracleClient.OraclePermission.Union*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.Data.OracleClient.OraclePermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: OraclePermission(PermissionState)\n  nameWithType: OraclePermission.OraclePermission(PermissionState)\n  fullName: System.Data.OracleClient.OraclePermission.OraclePermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Data.OracleClient.OraclePermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: Add(String,String,KeyRestrictionBehavior)\n  nameWithType: OraclePermission.Add(String,String,KeyRestrictionBehavior)\n  fullName: System.Data.OracleClient.OraclePermission.Add(String,String,KeyRestrictionBehavior)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.KeyRestrictionBehavior\n  parent: System.Data\n  isExternal: false\n  name: KeyRestrictionBehavior\n  nameWithType: KeyRestrictionBehavior\n  fullName: System.Data.KeyRestrictionBehavior\n- uid: System.Data.OracleClient.OraclePermission.AllowBlankPassword\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: AllowBlankPassword\n  nameWithType: OraclePermission.AllowBlankPassword\n  fullName: System.Data.OracleClient.OraclePermission.AllowBlankPassword\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.OracleClient.OraclePermission.Copy\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: Copy()\n  nameWithType: OraclePermission.Copy()\n  fullName: System.Data.OracleClient.OraclePermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Data.OracleClient.OraclePermission.FromXml(System.Security.SecurityElement)\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: OraclePermission.FromXml(SecurityElement)\n  fullName: System.Data.OracleClient.OraclePermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Data.OracleClient.OraclePermission.Intersect(System.Security.IPermission)\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: OraclePermission.Intersect(IPermission)\n  fullName: System.Data.OracleClient.OraclePermission.Intersect(IPermission)\n- uid: System.Data.OracleClient.OraclePermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: OraclePermission.IsSubsetOf(IPermission)\n  fullName: System.Data.OracleClient.OraclePermission.IsSubsetOf(IPermission)\n- uid: System.Data.OracleClient.OraclePermission.IsUnrestricted\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: OraclePermission.IsUnrestricted()\n  fullName: System.Data.OracleClient.OraclePermission.IsUnrestricted()\n- uid: System.Data.OracleClient.OraclePermission.ToXml\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: OraclePermission.ToXml()\n  fullName: System.Data.OracleClient.OraclePermission.ToXml()\n- uid: System.Data.OracleClient.OraclePermission.Union(System.Security.IPermission)\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: OraclePermission.Union(IPermission)\n  fullName: System.Data.OracleClient.OraclePermission.Union(IPermission)\n- uid: System.Data.OracleClient.OraclePermission.#ctor*\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: OraclePermission\n  nameWithType: OraclePermission.OraclePermission\n- uid: System.Data.OracleClient.OraclePermission.Add*\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: Add\n  nameWithType: OraclePermission.Add\n- uid: System.Data.OracleClient.OraclePermission.AllowBlankPassword*\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: AllowBlankPassword\n  nameWithType: OraclePermission.AllowBlankPassword\n- uid: System.Data.OracleClient.OraclePermission.Copy*\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: Copy\n  nameWithType: OraclePermission.Copy\n- uid: System.Data.OracleClient.OraclePermission.FromXml*\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: FromXml\n  nameWithType: OraclePermission.FromXml\n- uid: System.Data.OracleClient.OraclePermission.Intersect*\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: Intersect\n  nameWithType: OraclePermission.Intersect\n- uid: System.Data.OracleClient.OraclePermission.IsSubsetOf*\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: OraclePermission.IsSubsetOf\n- uid: System.Data.OracleClient.OraclePermission.IsUnrestricted*\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: OraclePermission.IsUnrestricted\n- uid: System.Data.OracleClient.OraclePermission.ToXml*\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: ToXml\n  nameWithType: OraclePermission.ToXml\n- uid: System.Data.OracleClient.OraclePermission.Union*\n  parent: System.Data.OracleClient.OraclePermission\n  isExternal: false\n  name: Union\n  nameWithType: OraclePermission.Union\n"}