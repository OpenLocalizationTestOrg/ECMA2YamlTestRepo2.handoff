{"nodes":[{"pos":[905,948],"content":"Provides event-based control flow modeling.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides event-based control flow modeling.","pos":[0,43]}]},{"pos":[960,1197],"content":"This activity behaves similarly to <xref:System.Activities.Statements.Switch> in that it executes only one of several activities in response to events. The action chosen to be executed is defined by an event, chosen from a set of events.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This activity behaves similarly to <xref:System.Activities.Statements.Switch> in that it executes only one of several activities in response to events. The action chosen to be executed is defined by an event, chosen from a set of events.","pos":[0,237],"nodes":[{"content":"This activity behaves similarly to &lt;xref:System.Activities.Statements.Switch&gt; in that it executes only one of several activities in response to events.","pos":[0,151],"source":"This activity behaves similarly to <xref:System.Activities.Statements.Switch> in that it executes only one of several activities in response to events."},{"content":"The action chosen to be executed is defined by an event, chosen from a set of events.","pos":[152,237]}]}]},{"pos":[2779,2870],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.Pick\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Activities.Statements.Pick\"></xref> class."},{"pos":[3664,3878],"content":"The collection of <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.PickBranch\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that the <bpt id=\"p2\">&lt;xref href=\"System.Activities.Statements.Pick\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> activity potentially executes one of, based on incoming events.","needQuote":true,"needEscape":true,"source":"The collection of <xref href=\"System.Activities.Statements.PickBranch\"></xref> objects that the <xref href=\"System.Activities.Statements.Pick\"></xref> activity potentially executes one of, based on incoming events."},{"pos":[4465,4487],"content":"The branch collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The branch collection.","pos":[0,22]}]},{"pos":[5310,5322],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6099,6111],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6685,6697],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7480,7492],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8625,8637],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8723,8735],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9681,9693],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.Pick\n  id: Pick\n  children:\n  - System.Activities.Statements.Pick.#ctor\n  - System.Activities.Statements.Pick.Branches\n  - System.Activities.Statements.Pick.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.Pick.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.Pick.CanInduceIdle\n  - System.Activities.Statements.Pick.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.Pick.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.Statements.Pick.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  langs:\n  - csharp\n  name: Pick\n  nameWithType: Pick\n  fullName: System.Activities.Statements.Pick\n  type: Class\n  summary: Provides event-based control flow modeling.\n  remarks: This activity behaves similarly to <xref:System.Activities.Statements.Switch> in that it executes only one of several activities in response to events. The action chosen to be executed is defined by an event, chosen from a set of events.\n  example:\n  - \"The following code sample demonstrates creating a Pick activity. This example is from the [Using the Pick Activity](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_Pick#1](~/add/codesnippet/csharp/pick/program.cs#1)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Branches\")]\n\n      public sealed class Pick : System.Activities.NativeActivity\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  platform:\n  - net462\n- uid: System.Activities.Statements.Pick.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.Pick\n  langs:\n  - csharp\n  name: Pick()\n  nameWithType: Pick.Pick()\n  fullName: System.Activities.Statements.Pick.Pick()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.Pick\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.Pick> activity. This example is from the [Using the Pick Activity](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_Pick#1](~/add/codesnippet/csharp/pick/program.cs#1)]\"\n  syntax:\n    content: public Pick ();\n    parameters: []\n  overload: System.Activities.Statements.Pick.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Pick.Branches\n  id: Branches\n  parent: System.Activities.Statements.Pick\n  langs:\n  - csharp\n  name: Branches\n  nameWithType: Pick.Branches\n  fullName: System.Activities.Statements.Pick.Branches\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The collection of <xref href=\"System.Activities.Statements.PickBranch\"></xref> objects that the <xref href=\"System.Activities.Statements.Pick\"></xref> activity potentially executes one of, based on incoming events.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates setting the Branches property of a <xref:System.Activities.Statements.Pick> activity. This example is from the [Using the Pick Activity](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_Pick#1](~/add/codesnippet/csharp/pick/program.cs#1)]\"\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Statements.PickBranch> Branches { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Statements.PickBranch}\n      description: The branch collection.\n  overload: System.Activities.Statements.Pick.Branches*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Pick.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Pick\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Pick.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.Pick.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Statements.Pick.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Pick.Cancel(System.Activities.NativeActivityContext)\n  id: Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Pick\n  langs:\n  - csharp\n  name: Cancel(NativeActivityContext)\n  nameWithType: Pick.Cancel(NativeActivityContext)\n  fullName: System.Activities.Statements.Pick.Cancel(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Cancel (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: To be added.\n  overload: System.Activities.Statements.Pick.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Pick.CanInduceIdle\n  id: CanInduceIdle\n  parent: System.Activities.Statements.Pick\n  langs:\n  - csharp\n  name: CanInduceIdle\n  nameWithType: Pick.CanInduceIdle\n  fullName: System.Activities.Statements.Pick.CanInduceIdle\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override bool CanInduceIdle { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Activities.Statements.Pick.CanInduceIdle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Pick.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Pick\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: Pick.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.Pick.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: To be added.\n  overload: System.Activities.Statements.Pick.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Pick.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.Pick\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  nameWithType: Pick.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  fullName: System.Activities.Statements.Pick.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n      description: To be added.\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: To be added.\n  overload: System.Activities.Statements.Pick.OnCreateDynamicUpdateMap*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Pick.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  id: UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.Statements.Pick\n  langs:\n  - csharp\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: Pick.UpdateInstance(NativeActivityUpdateContext)\n  fullName: System.Activities.Statements.Pick.UpdateInstance(NativeActivityUpdateContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void UpdateInstance (System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext);\n    parameters:\n    - id: updateContext\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n      description: To be added.\n  overload: System.Activities.Statements.Pick.UpdateInstance*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.NativeActivity\n  isExternal: false\n  name: System.Activities.NativeActivity\n- uid: System.Activities.Statements.Pick.#ctor\n  parent: System.Activities.Statements.Pick\n  isExternal: false\n  name: Pick()\n  nameWithType: Pick.Pick()\n  fullName: System.Activities.Statements.Pick.Pick()\n- uid: System.Activities.Statements.Pick.Branches\n  parent: System.Activities.Statements.Pick\n  isExternal: false\n  name: Branches\n  nameWithType: Pick.Branches\n  fullName: System.Activities.Statements.Pick.Branches\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Statements.PickBranch}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<PickBranch>\n  nameWithType: Collection<PickBranch>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Statements.PickBranch>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Activities.Statements.PickBranch>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Statements.PickBranch\n    name: PickBranch\n    nameWithType: PickBranch\n    fullName: PickBranch\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.Pick.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Pick\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Pick.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.Pick.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.Pick.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Pick\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: Pick.Cancel(NativeActivityContext)\n  fullName: System.Activities.Statements.Pick.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.Pick.CanInduceIdle\n  parent: System.Activities.Statements.Pick\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: Pick.CanInduceIdle\n  fullName: System.Activities.Statements.Pick.CanInduceIdle\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Statements.Pick.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Pick\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: Pick.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.Pick.Execute(NativeActivityContext)\n- uid: System.Activities.Statements.Pick.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.Pick\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  nameWithType: Pick.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  fullName: System.Activities.Statements.Pick.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateMapMetadata\n  nameWithType: NativeActivityUpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Statements.Pick.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.Statements.Pick\n  isExternal: false\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: Pick.UpdateInstance(NativeActivityUpdateContext)\n  fullName: System.Activities.Statements.Pick.UpdateInstance(NativeActivityUpdateContext)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateContext\n  nameWithType: NativeActivityUpdateContext\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n- uid: System.Activities.Statements.Pick.#ctor*\n  parent: System.Activities.Statements.Pick\n  isExternal: false\n  name: Pick\n  nameWithType: Pick.Pick\n- uid: System.Activities.Statements.Pick.Branches*\n  parent: System.Activities.Statements.Pick\n  isExternal: false\n  name: Branches\n  nameWithType: Pick.Branches\n- uid: System.Activities.Statements.Pick.CacheMetadata*\n  parent: System.Activities.Statements.Pick\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: Pick.CacheMetadata\n- uid: System.Activities.Statements.Pick.Cancel*\n  parent: System.Activities.Statements.Pick\n  isExternal: false\n  name: Cancel\n  nameWithType: Pick.Cancel\n- uid: System.Activities.Statements.Pick.CanInduceIdle*\n  parent: System.Activities.Statements.Pick\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: Pick.CanInduceIdle\n- uid: System.Activities.Statements.Pick.Execute*\n  parent: System.Activities.Statements.Pick\n  isExternal: false\n  name: Execute\n  nameWithType: Pick.Execute\n- uid: System.Activities.Statements.Pick.OnCreateDynamicUpdateMap*\n  parent: System.Activities.Statements.Pick\n  isExternal: false\n  name: OnCreateDynamicUpdateMap\n  nameWithType: Pick.OnCreateDynamicUpdateMap\n- uid: System.Activities.Statements.Pick.UpdateInstance*\n  parent: System.Activities.Statements.Pick\n  isExternal: false\n  name: UpdateInstance\n  nameWithType: Pick.UpdateInstance\n"}