{"nodes":[{"pos":[658,801],"content":"Provides a way to determine whether a value is greater than or less than a specified value, or whether a value is between two specified values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a way to determine whether a value is greater than or less than a specified value, or whether a value is between two specified values.","pos":[0,143]}]},{"pos":[814,1954],"content":"The <xref:System.Web.UI.WebControls.QueryExtender> control provides the ability to filter data in a Web page by using classes in the <xref:System.Web.UI.WebControls.Expressions> namespace. These classes include the RangeExpression class.       The RangeExpression class searches a data column using a pair of values that define the range. You use the <xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField%2A> property to specify the column to search. You use the <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> property to specify whether to include or exclude the minimum in the search results, and you use the <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> property to specify whether to include or exclude the maximum value. The maximum and minimum values can be specified in [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] controls and the values can then be passed to the <xref:System.Web.UI.WebControls.QueryExtender> control as parameters in <xref:System.Web.UI.WebControls.ControlParameter> controls. The results are typically displayed in a data-bound control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.QueryExtender&gt; control provides the ability to filter data in a Web page by using classes in the &lt;xref:System.Web.UI.WebControls.Expressions&gt; namespace.","pos":[0,188],"source":"The <xref:System.Web.UI.WebControls.QueryExtender> control provides the ability to filter data in a Web page by using classes in the <xref:System.Web.UI.WebControls.Expressions> namespace."},{"content":"These classes include the RangeExpression class.","pos":[189,237]},{"content":"The RangeExpression class searches a data column using a pair of values that define the range.","pos":[244,338]},{"content":"You use the &lt;xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField%2A&gt; property to specify the column to search.","pos":[339,466],"source":" You use the <xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField%2A> property to specify the column to search."},{"content":"You use the &lt;xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A&gt; property to specify whether to include or exclude the minimum in the search results, and you use the &lt;xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A&gt; property to specify whether to include or exclude the maximum value.","pos":[467,792],"source":" You use the <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> property to specify whether to include or exclude the minimum in the search results, and you use the <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> property to specify whether to include or exclude the maximum value."},{"content":"The maximum and minimum values can be specified in <ph id=\"ph1\">[!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)]</ph> controls and the values can then be passed to the &lt;xref:System.Web.UI.WebControls.QueryExtender&gt; control as parameters in &lt;xref:System.Web.UI.WebControls.ControlParameter&gt; controls.","pos":[793,1077],"source":" The maximum and minimum values can be specified in [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] controls and the values can then be passed to the <xref:System.Web.UI.WebControls.QueryExtender> control as parameters in <xref:System.Web.UI.WebControls.ControlParameter> controls."},{"content":"The results are typically displayed in a data-bound control.","pos":[1078,1138]}]},{"pos":[4916,5031],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Expressions.RangeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.Expressions.RangeExpression\"></xref> class."},{"pos":[5640,5689],"content":"Gets or sets the field to use for the comparison.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the field to use for the comparison.","pos":[0,49]}]},{"pos":[5701,5766],"content":"The range expression searches data field for the specified range.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The range expression searches data field for the specified range.","pos":[0,65]}]},{"pos":[6597,6633],"content":"The field to use for the comparison.","needQuote":true,"needEscape":true,"nodes":[{"content":"The field to use for the comparison.","pos":[0,36]}]},{"pos":[7274,7363],"content":"Gets the <xref:System.Linq.IQueryable> object that the range comparison was performed on.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Linq.IQueryable&gt; object that the range comparison was performed on.","pos":[0,89],"source":"Gets the <xref:System.Linq.IQueryable> object that the range comparison was performed on."}]},{"pos":[7375,7469],"content":"This method uses the specified <xref:System.Linq.IQueryable> object to resolve the expression.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method uses the specified &lt;xref:System.Linq.IQueryable&gt; object to resolve the expression.","pos":[0,94],"source":"This method uses the specified <xref:System.Linq.IQueryable> object to resolve the expression."}]},{"pos":[7665,7702],"content":"The object to use for the comparison.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to use for the comparison.","pos":[0,37]}]},{"pos":[7769,7860],"content":"An instance of the <xref:System.Linq.IQueryable> object that the expression was applied to.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the &lt;xref:System.Linq.IQueryable&gt; object that the expression was applied to.","pos":[0,91],"source":"An instance of the <xref:System.Linq.IQueryable> object that the expression was applied to."}]},{"pos":[8066,8789],"content":"The &lt;xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField<bpt id=\"p1\">*</bpt>&gt; property is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.       -or-       The &lt;xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType<ept id=\"p1\">*</ept>&gt; and the &lt;xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType<bpt id=\"p3\">*</bpt>&gt; properties are set to <bpt id=\"p4\">&lt;xref href=\"System.Web.UI.WebControls.Expressions.RangeType\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.       -or-       The &lt;xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType<ept id=\"p3\">*</ept>&gt; or &lt;xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType*&gt; property is not set to <bpt id=\"p5\">&lt;xref href=\"System.Web.UI.WebControls.Expressions.RangeType\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> and the parameter collection is empty.","needQuote":false,"needEscape":true,"source":"The <xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType*> and the <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType*> properties are set to <xref href=\"System.Web.UI.WebControls.Expressions.RangeType\"></xref>.       -or-       The <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType*> or <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType*> property is not set to <xref href=\"System.Web.UI.WebControls.Expressions.RangeType\"></xref> and the parameter collection is empty."},{"pos":[9230,9274],"content":"Gets or sets the maximum value of the range.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum value of the range.","pos":[0,44]}]},{"pos":[9287,9959],"content":"Possible values for this property are <xref:System.Web.UI.WebControls.Expressions.RangeType>, <xref:System.Web.UI.WebControls.Expressions.RangeType>, and <xref:System.Web.UI.WebControls.Expressions.RangeType>.       When the MaxType is set to <xref:System.Web.UI.WebControls.Expressions.RangeType>, the maximum value of the range is included in the search results. This is equivalent to performing a >= operation. If you set the property to <xref:System.Web.UI.WebControls.Expressions.RangeType> field, it is equivalent to specifying a > or < operation. If you set the property to <xref:System.Web.UI.WebControls.Expressions.RangeType>, no limit is imposed on the range.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Possible values for this property are <xref:System.Web.UI.WebControls.Expressions.RangeType>, <xref:System.Web.UI.WebControls.Expressions.RangeType>, and <xref:System.Web.UI.WebControls.Expressions.RangeType>.       When the MaxType is set to <xref:System.Web.UI.WebControls.Expressions.RangeType>, the maximum value of the range is included in the search results. This is equivalent to performing a >= operation. If you set the property to <xref:System.Web.UI.WebControls.Expressions.RangeType> field, it is equivalent to specifying a > or < operation. If you set the property to <xref:System.Web.UI.WebControls.Expressions.RangeType>, no limit is imposed on the range.","pos":[0,670],"nodes":[{"content":"Possible values for this property are &lt;xref:System.Web.UI.WebControls.Expressions.RangeType&gt;, &lt;xref:System.Web.UI.WebControls.Expressions.RangeType&gt;, and &lt;xref:System.Web.UI.WebControls.Expressions.RangeType&gt;.","pos":[0,209],"source":"Possible values for this property are <xref:System.Web.UI.WebControls.Expressions.RangeType>, <xref:System.Web.UI.WebControls.Expressions.RangeType>, and <xref:System.Web.UI.WebControls.Expressions.RangeType>."},{"content":"When the MaxType is set to &lt;xref:System.Web.UI.WebControls.Expressions.RangeType&gt;, the maximum value of the range is included in the search results.","pos":[216,364],"source":"       When the MaxType is set to <xref:System.Web.UI.WebControls.Expressions.RangeType>, the maximum value of the range is included in the search results."},{"content":"This is equivalent to performing a &gt;= operation.","pos":[365,413],"source":" This is equivalent to performing a >= operation."},{"content":"If you set the property to &lt;xref:System.Web.UI.WebControls.Expressions.RangeType&gt; field, it is equivalent to specifying a &gt; or &lt; operation.","pos":[414,553],"source":" If you set the property to <xref:System.Web.UI.WebControls.Expressions.RangeType> field, it is equivalent to specifying a > or < operation."},{"content":"If you set the property to &lt;xref:System.Web.UI.WebControls.Expressions.RangeType&gt;, no limit is imposed on the range.","pos":[554,670],"source":" If you set the property to <xref:System.Web.UI.WebControls.Expressions.RangeType>, no limit is imposed on the range."}]}]},{"pos":[10813,11012],"content":"The type of comparison to use for the maximum value. The default is <xref href=\"System.Web.UI.WebControls.Expressions.RangeType\"></xref>, which indicates that the maximum comparison is not performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of comparison to use for the maximum value.","pos":[0,52]},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Expressions.RangeType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which indicates that the maximum comparison is not performed.","pos":[53,199],"source":" The default is <xref href=\"System.Web.UI.WebControls.Expressions.RangeType\"></xref>, which indicates that the maximum comparison is not performed."}]},{"pos":[11544,11588],"content":"Gets or sets the minimum value of the range.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the minimum value of the range.","pos":[0,44]}]},{"pos":[13167,13366],"content":"The type of comparison to use for the minimum value. The default is <xref href=\"System.Web.UI.WebControls.Expressions.RangeType\"></xref>, which indicates that the minimum comparison is not performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of comparison to use for the minimum value.","pos":[0,52]},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Expressions.RangeType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which indicates that the minimum comparison is not performed.","pos":[53,199],"source":" The default is <xref href=\"System.Web.UI.WebControls.Expressions.RangeType\"></xref>, which indicates that the minimum comparison is not performed."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.Expressions.RangeExpression\n  id: RangeExpression\n  children:\n  - System.Web.UI.WebControls.Expressions.RangeExpression.#ctor\n  - System.Web.UI.WebControls.Expressions.RangeExpression.DataField\n  - System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)\n  - System.Web.UI.WebControls.Expressions.RangeExpression.MaxType\n  - System.Web.UI.WebControls.Expressions.RangeExpression.MinType\n  langs:\n  - csharp\n  name: RangeExpression\n  nameWithType: RangeExpression\n  fullName: System.Web.UI.WebControls.Expressions.RangeExpression\n  type: Class\n  summary: Provides a way to determine whether a value is greater than or less than a specified value, or whether a value is between two specified values.\n  remarks: \"The <xref:System.Web.UI.WebControls.QueryExtender> control provides the ability to filter data in a Web page by using classes in the <xref:System.Web.UI.WebControls.Expressions> namespace. These classes include the RangeExpression class.  \\n  \\n The RangeExpression class searches a data column using a pair of values that define the range. You use the <xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField%2A> property to specify the column to search. You use the <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> property to specify whether to include or exclude the minimum in the search results, and you use the <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> property to specify whether to include or exclude the maximum value. The maximum and minimum values can be specified in [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] controls and the values can then be passed to the <xref:System.Web.UI.WebControls.QueryExtender> control as parameters in <xref:System.Web.UI.WebControls.ControlParameter> controls. The results are typically displayed in a data-bound control.\"\n  example:\n  - \"The following example shows how to search the ListPrice column in the Products table of the AdventureWorks database for products that have a list price in the range that is specified in the `FromTextBox` and `ToTextBox` text boxes. The filter includes the minimum value but excludes the maximum value in the results. The results are displayed in a <xref:System.Web.UI.WebControls.Label> control.  \\n  \\n This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: 'public class RangeExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression'\n  inheritance:\n  - System.Object\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression\n  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression\n  implements: []\n  inheritedMembers:\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState\n  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.LoadViewState(System.Object)\n  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.Parameters\n  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SaveViewState\n  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)\n  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.TrackViewState\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Expressions.RangeExpression.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.Expressions.RangeExpression\n  langs:\n  - csharp\n  name: RangeExpression()\n  nameWithType: RangeExpression.RangeExpression()\n  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.RangeExpression()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls.Expressions\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.Expressions.RangeExpression\"></xref> class.\n  syntax:\n    content: public RangeExpression ();\n    parameters: []\n  overload: System.Web.UI.WebControls.Expressions.RangeExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Expressions.RangeExpression.DataField\n  id: DataField\n  parent: System.Web.UI.WebControls.Expressions.RangeExpression\n  langs:\n  - csharp\n  name: DataField\n  nameWithType: RangeExpression.DataField\n  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.DataField\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls.Expressions\n  summary: Gets or sets the field to use for the comparison.\n  remarks: The range expression searches data field for the specified range.\n  example:\n  - \"The following example shows how to search the List Price column in the Products table of the AdventureWorks database for products that have a list price in the range that is specified in the `FromTextBox` and `ToTextBox` text boxes.  \\n  \\n This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \\n  \\n```  \\n<asp:RangeExpression DataField=\\\"ListPrice\\\"    \\n    MinType=\\\"Inclusive\\\" MaxType=\\\"Exclusive\\\">  \\n  <asp:ControlParameter ControlID=\\\"FromTextBox\\\" />  \\n  <asp:ControlParameter ControlID=\\\"ToTextBox\\\" />  \\n</asp:RangeExpression>  \\n```\"\n  syntax:\n    content: public string DataField { get; set; }\n    return:\n      type: System.String\n      description: The field to use for the comparison.\n  overload: System.Web.UI.WebControls.Expressions.RangeExpression.DataField*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)\n  id: GetQueryable(System.Linq.IQueryable)\n  parent: System.Web.UI.WebControls.Expressions.RangeExpression\n  langs:\n  - csharp\n  name: GetQueryable(IQueryable)\n  nameWithType: RangeExpression.GetQueryable(IQueryable)\n  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(IQueryable)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls.Expressions\n  summary: Gets the <xref:System.Linq.IQueryable> object that the range comparison was performed on.\n  remarks: This method uses the specified <xref:System.Linq.IQueryable> object to resolve the expression.\n  syntax:\n    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable\n      description: The object to use for the comparison.\n    return:\n      type: System.Linq.IQueryable\n      description: An instance of the <xref:System.Linq.IQueryable> object that the expression was applied to.\n  overload: System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField*> property is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType*> and the <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType*> properties are set to <xref href=\\\"System.Web.UI.WebControls.Expressions.RangeType\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType*> or <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType*> property is not set to <xref href=\\\"System.Web.UI.WebControls.Expressions.RangeType\\\"></xref> and the parameter collection is empty.\"\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Expressions.RangeExpression.MaxType\n  id: MaxType\n  parent: System.Web.UI.WebControls.Expressions.RangeExpression\n  langs:\n  - csharp\n  name: MaxType\n  nameWithType: RangeExpression.MaxType\n  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.MaxType\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls.Expressions\n  summary: Gets or sets the maximum value of the range.\n  remarks: \"Possible values for this property are <xref:System.Web.UI.WebControls.Expressions.RangeType>, <xref:System.Web.UI.WebControls.Expressions.RangeType>, and <xref:System.Web.UI.WebControls.Expressions.RangeType>.  \\n  \\n When the MaxType is set to <xref:System.Web.UI.WebControls.Expressions.RangeType>, the maximum value of the range is included in the search results. This is equivalent to performing a >= operation. If you set the property to <xref:System.Web.UI.WebControls.Expressions.RangeType> field, it is equivalent to specifying a > or < operation. If you set the property to <xref:System.Web.UI.WebControls.Expressions.RangeType>, no limit is imposed on the range.\"\n  example:\n  - \"The following example shows how to include the minimum value that is specified in the range and how to exclude the maximum value. The maximum and minimum values are entered into text boxes. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \\n  \\n```  \\n<asp:RangeExpression DataField=\\\"ListPrice\\\"    \\n    MinType=\\\"Inclusive\\\" MaxType=\\\"Exclusive\\\">  \\n  <asp:ControlParameter ControlID=\\\"FromTextBox\\\" />  \\n  <asp:ControlParameter ControlID=\\\"ToTextBox\\\" />  \\n</asp:RangeExpression>  \\n```\"\n  syntax:\n    content: public System.Web.UI.WebControls.Expressions.RangeType MaxType { get; set; }\n    return:\n      type: System.Web.UI.WebControls.Expressions.RangeType\n      description: The type of comparison to use for the maximum value. The default is <xref href=\"System.Web.UI.WebControls.Expressions.RangeType\"></xref>, which indicates that the maximum comparison is not performed.\n  overload: System.Web.UI.WebControls.Expressions.RangeExpression.MaxType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.Expressions.RangeExpression.MinType\n  id: MinType\n  parent: System.Web.UI.WebControls.Expressions.RangeExpression\n  langs:\n  - csharp\n  name: MinType\n  nameWithType: RangeExpression.MinType\n  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.MinType\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls.Expressions\n  summary: Gets or sets the minimum value of the range.\n  remarks: \"Possible values for this property are <xref:System.Web.UI.WebControls.Expressions.RangeType>, <xref:System.Web.UI.WebControls.Expressions.RangeType>, and <xref:System.Web.UI.WebControls.Expressions.RangeType>.  \\n  \\n When the MinType or <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> property is set to <xref:System.Web.UI.WebControls.Expressions.RangeType>, the minimum and maximum value of the range is included in the search results. This is equivalent to performing a >= or \\\\<= operation. The <xref:System.Web.UI.WebControls.Expressions.RangeType> field is equivalent to the > or < operation and <xref:System.Web.UI.WebControls.Expressions.RangeType> imposes no limit on the range.\"\n  example:\n  - \"The following example shows how to include the minimum value that is specified in the range and how to exclude the maximum value. The maximum and minimum values are entered into text boxes. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \\n  \\n```  \\n<asp:RangeExpression DataField=\\\"ListPrice\\\"    \\n    MinType=\\\"Inclusive\\\" MaxType=\\\"Exclusive\\\">  \\n  <asp:ControlParameter ControlID=\\\"FromTextBox\\\" />  \\n  <asp:ControlParameter ControlID=\\\"ToTextBox\\\" />  \\n</asp:RangeExpression>  \\n```\"\n  syntax:\n    content: public System.Web.UI.WebControls.Expressions.RangeType MinType { get; set; }\n    return:\n      type: System.Web.UI.WebControls.Expressions.RangeType\n      description: The type of comparison to use for the minimum value. The default is <xref href=\"System.Web.UI.WebControls.Expressions.RangeType\"></xref>, which indicates that the minimum comparison is not performed.\n  overload: System.Web.UI.WebControls.Expressions.RangeExpression.MinType*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression\n  isExternal: false\n  name: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Web.UI.WebControls.Expressions.RangeExpression.#ctor\n  parent: System.Web.UI.WebControls.Expressions.RangeExpression\n  isExternal: false\n  name: RangeExpression()\n  nameWithType: RangeExpression.RangeExpression()\n  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.RangeExpression()\n- uid: System.Web.UI.WebControls.Expressions.RangeExpression.DataField\n  parent: System.Web.UI.WebControls.Expressions.RangeExpression\n  isExternal: false\n  name: DataField\n  nameWithType: RangeExpression.DataField\n  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.DataField\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)\n  parent: System.Web.UI.WebControls.Expressions.RangeExpression\n  isExternal: false\n  name: GetQueryable(IQueryable)\n  nameWithType: RangeExpression.GetQueryable(IQueryable)\n  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(IQueryable)\n- uid: System.Linq.IQueryable\n  parent: System.Linq\n  isExternal: true\n  name: IQueryable\n  nameWithType: IQueryable\n  fullName: System.Linq.IQueryable\n- uid: System.Web.UI.WebControls.Expressions.RangeExpression.MaxType\n  parent: System.Web.UI.WebControls.Expressions.RangeExpression\n  isExternal: false\n  name: MaxType\n  nameWithType: RangeExpression.MaxType\n  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.MaxType\n- uid: System.Web.UI.WebControls.Expressions.RangeType\n  parent: System.Web.UI.WebControls.Expressions\n  isExternal: false\n  name: RangeType\n  nameWithType: RangeType\n  fullName: System.Web.UI.WebControls.Expressions.RangeType\n- uid: System.Web.UI.WebControls.Expressions.RangeExpression.MinType\n  parent: System.Web.UI.WebControls.Expressions.RangeExpression\n  isExternal: false\n  name: MinType\n  nameWithType: RangeExpression.MinType\n  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.MinType\n- uid: System.Web.UI.WebControls.Expressions.RangeExpression.#ctor*\n  parent: System.Web.UI.WebControls.Expressions.RangeExpression\n  isExternal: false\n  name: RangeExpression\n  nameWithType: RangeExpression.RangeExpression\n- uid: System.Web.UI.WebControls.Expressions.RangeExpression.DataField*\n  parent: System.Web.UI.WebControls.Expressions.RangeExpression\n  isExternal: false\n  name: DataField\n  nameWithType: RangeExpression.DataField\n- uid: System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable*\n  parent: System.Web.UI.WebControls.Expressions.RangeExpression\n  isExternal: false\n  name: GetQueryable\n  nameWithType: RangeExpression.GetQueryable\n- uid: System.Web.UI.WebControls.Expressions.RangeExpression.MaxType*\n  parent: System.Web.UI.WebControls.Expressions.RangeExpression\n  isExternal: false\n  name: MaxType\n  nameWithType: RangeExpression.MaxType\n- uid: System.Web.UI.WebControls.Expressions.RangeExpression.MinType*\n  parent: System.Web.UI.WebControls.Expressions.RangeExpression\n  isExternal: false\n  name: MinType\n  nameWithType: RangeExpression.MinType\n"}