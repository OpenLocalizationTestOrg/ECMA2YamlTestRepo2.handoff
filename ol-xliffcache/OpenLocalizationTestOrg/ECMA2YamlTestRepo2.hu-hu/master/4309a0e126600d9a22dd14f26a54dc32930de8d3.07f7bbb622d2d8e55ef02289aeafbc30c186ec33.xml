{"nodes":[{"pos":[434,524],"content":"Represents a non-rooted transaction that can be delegated. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a non-rooted transaction that can be delegated. This class cannot be inherited.","pos":[0,90],"nodes":[{"content":"Represents a non-rooted transaction that can be delegated.","pos":[0,58]},{"content":"This class cannot be inherited.","pos":[59,90]}]}]},{"pos":[536,800],"content":"This class derives from <xref:System.Transactions.Transaction> and provides a constructor that takes an implementation of the <xref:System.Transactions.ISimpleTransactionSuperior> interface. Instances of this type are not the root transaction but can be delegated.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class derives from <xref:System.Transactions.Transaction> and provides a constructor that takes an implementation of the <xref:System.Transactions.ISimpleTransactionSuperior> interface. Instances of this type are not the root transaction but can be delegated.","pos":[0,264],"nodes":[{"content":"This class derives from &lt;xref:System.Transactions.Transaction&gt; and provides a constructor that takes an implementation of the &lt;xref:System.Transactions.ISimpleTransactionSuperior&gt; interface.","pos":[0,190],"source":"This class derives from <xref:System.Transactions.Transaction> and provides a constructor that takes an implementation of the <xref:System.Transactions.ISimpleTransactionSuperior> interface."},{"content":"Instances of this type are not the root transaction but can be delegated.","pos":[191,264]}]}]},{"pos":[4027,4131],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Transactions.SubordinateTransaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Transactions.SubordinateTransaction\"></xref> class."},{"pos":[4567,4605],"content":"The isolation level of the transaction","needQuote":true,"needEscape":true,"nodes":[{"content":"The isolation level of the transaction","pos":[0,38]}]},{"pos":[4703,4772],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Transactions.ISimpleTransactionSuperior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Transactions.ISimpleTransactionSuperior\"></xref>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Transactions.SubordinateTransaction\n  id: SubordinateTransaction\n  children:\n  - System.Transactions.SubordinateTransaction.#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)\n  langs:\n  - csharp\n  name: SubordinateTransaction\n  nameWithType: SubordinateTransaction\n  fullName: System.Transactions.SubordinateTransaction\n  type: Class\n  summary: Represents a non-rooted transaction that can be delegated. This class cannot be inherited.\n  remarks: This class derives from <xref:System.Transactions.Transaction> and provides a constructor that takes an implementation of the <xref:System.Transactions.ISimpleTransactionSuperior> interface. Instances of this type are not the root transaction but can be delegated.\n  syntax:\n    content: 'public sealed class SubordinateTransaction : System.Transactions.Transaction'\n  inheritance:\n  - System.Object\n  - System.Transactions.Transaction\n  implements: []\n  inheritedMembers:\n  - System.Transactions.Transaction.Clone\n  - System.Transactions.Transaction.Current\n  - System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)\n  - System.Transactions.Transaction.Dispose\n  - System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)\n  - System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)\n  - System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)\n  - System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)\n  - System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)\n  - System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)\n  - System.Transactions.Transaction.Equals(System.Object)\n  - System.Transactions.Transaction.GetHashCode\n  - System.Transactions.Transaction.GetPromotedToken\n  - System.Transactions.Transaction.IsolationLevel\n  - System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)\n  - System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)\n  - System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)\n  - System.Transactions.Transaction.PromoterType\n  - System.Transactions.Transaction.Rollback\n  - System.Transactions.Transaction.Rollback(System.Exception)\n  - System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)\n  - System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Transactions.Transaction.TransactionCompleted\n  - System.Transactions.Transaction.TransactionInformation\n  platform:\n  - net462\n- uid: System.Transactions.SubordinateTransaction.#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)\n  id: '#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)'\n  parent: System.Transactions.SubordinateTransaction\n  langs:\n  - csharp\n  name: SubordinateTransaction(IsolationLevel,ISimpleTransactionSuperior)\n  nameWithType: SubordinateTransaction.SubordinateTransaction(IsolationLevel,ISimpleTransactionSuperior)\n  fullName: System.Transactions.SubordinateTransaction.SubordinateTransaction(IsolationLevel,ISimpleTransactionSuperior)\n  type: Constructor\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Initializes a new instance of the <xref href=\"System.Transactions.SubordinateTransaction\"></xref> class.\n  remarks: >-\n    > [!NOTE]\n\n    >  Only one <xref:System.Transactions.SubordinateTransaction> can be created for a given <xref:System.Transactions.ISimpleTransactionSuperior>.\n  syntax:\n    content: public SubordinateTransaction (System.Transactions.IsolationLevel isoLevel, System.Transactions.ISimpleTransactionSuperior superior);\n    parameters:\n    - id: isoLevel\n      type: System.Transactions.IsolationLevel\n      description: The isolation level of the transaction\n    - id: superior\n      type: System.Transactions.ISimpleTransactionSuperior\n      description: A <xref href=\"System.Transactions.ISimpleTransactionSuperior\"></xref>\n  overload: System.Transactions.SubordinateTransaction.#ctor*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Transactions.Transaction\n  isExternal: false\n  name: System.Transactions.Transaction\n- uid: System.Transactions.SubordinateTransaction.#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)\n  parent: System.Transactions.SubordinateTransaction\n  isExternal: false\n  name: SubordinateTransaction(IsolationLevel,ISimpleTransactionSuperior)\n  nameWithType: SubordinateTransaction.SubordinateTransaction(IsolationLevel,ISimpleTransactionSuperior)\n  fullName: System.Transactions.SubordinateTransaction.SubordinateTransaction(IsolationLevel,ISimpleTransactionSuperior)\n- uid: System.Transactions.IsolationLevel\n  parent: System.Transactions\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: IsolationLevel\n  fullName: System.Transactions.IsolationLevel\n- uid: System.Transactions.ISimpleTransactionSuperior\n  parent: System.Transactions\n  isExternal: false\n  name: ISimpleTransactionSuperior\n  nameWithType: ISimpleTransactionSuperior\n  fullName: System.Transactions.ISimpleTransactionSuperior\n- uid: System.Transactions.SubordinateTransaction.#ctor*\n  parent: System.Transactions.SubordinateTransaction\n  isExternal: false\n  name: SubordinateTransaction\n  nameWithType: SubordinateTransaction.SubordinateTransaction\n"}