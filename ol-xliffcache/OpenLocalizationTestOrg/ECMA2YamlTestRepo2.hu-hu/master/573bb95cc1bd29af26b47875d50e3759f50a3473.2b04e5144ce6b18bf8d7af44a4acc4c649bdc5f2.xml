{"nodes":[{"pos":[1336,1392],"content":"Allows control of code access permissions for messaging.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows control of code access permissions for messaging.","pos":[0,56]}]},{"pos":[3046,3147],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class."},{"pos":[4148,4300],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified permission access level entries.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified permission access level entries."},{"pos":[4789,4976],"content":"An array of <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> objects. The <xref:System.Messaging.MessageQueuePermission.PermissionEntries*> property is set to this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermissionEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","pos":[0,86],"source":"An array of <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> objects."},{"content":"The &lt;xref:System.Messaging.MessageQueuePermission.PermissionEntries*&gt; property is set to this value.","pos":[87,187],"source":" The <xref:System.Messaging.MessageQueuePermission.PermissionEntries*> property is set to this value."}]},{"pos":[5618,5755],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified permission state.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified permission state."},{"pos":[6202,6285],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."},{"pos":[7019,7179],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified access levels and the path of the queue.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified access levels and the path of the queue."},{"pos":[7665,7750],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermissionAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Messaging.MessageQueuePermissionAccess\"></xref> values."},{"pos":[7811,7910],"content":"The path of the queue that is referenced by the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The path of the queue that is referenced by the <xref href=\"System.Messaging.MessageQueue\"></xref>."},{"pos":[8742,8932],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified access levels, computer to use, queue description, and queue category.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified access levels, computer to use, queue description, and queue category."},{"pos":[9456,9541],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermissionAccess\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Messaging.MessageQueuePermissionAccess\"></xref> values."},{"pos":[9609,9677],"content":"The name of the computer where the Message Queuing queue is located.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the computer where the Message Queuing queue is located.","pos":[0,68]}]},{"pos":[9739,9761],"content":"The queue description.","needQuote":true,"needEscape":true,"nodes":[{"content":"The queue description.","pos":[0,22]}]},{"pos":[9826,9879],"content":"The queue category (Message Queuing type identifier).","needQuote":true,"needEscape":true,"nodes":[{"content":"The queue category (Message Queuing type identifier).","pos":[0,53]}]},{"pos":[10323,10394],"content":"Creates and returns an identical copy of the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns an identical copy of the current permission object.","pos":[0,71]}]},{"pos":[10561,10601],"content":"A copy of the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current permission object.","pos":[0,40]}]},{"pos":[11170,11245],"content":"Reconstructs a security object with a specified state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs a security object with a specified state from an XML encoding.","pos":[0,75]}]},{"pos":[11454,11513],"content":"The XML encoding to use to reconstruct the security object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML encoding to use to reconstruct the security object.","pos":[0,59]}]},{"pos":[12075,12209],"content":"Returns a new permission object that represents the intersection of the current permission object and the specified permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a new permission object that represents the intersection of the current permission object and the specified permission object.","pos":[0,134]}]},{"pos":[12417,12547],"content":"A permission object to intersect with the current permission object. It must be of the same type as the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission object to intersect with the current permission object. It must be of the same type as the current permission object.","pos":[0,130],"nodes":[{"content":"A permission object to intersect with the current permission object.","pos":[0,68]},{"content":"It must be of the same type as the current permission object.","pos":[69,130]}]}]},{"pos":[12619,12907],"content":"A new permission object that represents the intersection of the current permission object and the specified permission object. This new permission object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic) if the intersection is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission object that represents the intersection of the current permission object and the specified permission object.","pos":[0,126]},{"content":"This new permission object is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic) if the intersection is empty.","pos":[127,288],"source":" This new permission object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic) if the intersection is empty."}]},{"pos":[13476,13592],"content":"Returns a value that indicates whether the current permission object is a subset of the specified permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the current permission object is a subset of the specified permission object.","pos":[0,116]}]},{"pos":[13778,13918],"content":"A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.","pos":[0,140],"nodes":[{"content":"A permission object that is to be tested for the subset relationship.","pos":[0,69]},{"content":"This object must be of the same type as the current permission object.","pos":[70,140]}]}]},{"pos":[13977,14193],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission object is a subset of the specified permission object; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission object is a subset of the specified permission object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14692,14831],"content":"Returns a value that indicates whether the permission can be represented as unrestricted without any knowledge of the permission semantics.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the permission can be represented as unrestricted without any knowledge of the permission semantics.","pos":[0,139]}]},{"pos":[14963,15152],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the permission can be represented as unrestricted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the permission can be represented as unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15666,15737],"content":"Gets the collection of permission entries for this permissions request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of permission entries for this permissions request.","pos":[0,71]}]},{"pos":[16237,16381],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueuePermissionEntryCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the permission entries for this permissions request.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Messaging.MessageQueuePermissionEntryCollection\"></xref> that contains the permission entries for this permissions request."},{"pos":[16842,16911],"content":"Creates an XML encoding of the security object and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML encoding of the security object and its current state.","pos":[0,69]}]},{"pos":[17087,17159],"content":"An XML encoding of the security object, including any state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML encoding of the security object, including any state information.","pos":[0,72]}]},{"pos":[17699,17797],"content":"Returns a new permission object that is the union of the current and specified permission objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a new permission object that is the union of the current and specified permission objects.","pos":[0,98]}]},{"pos":[18001,18129],"content":"A permission object to combine with the current permission object. It must be of the same type as the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission object to combine with the current permission object. It must be of the same type as the current permission object.","pos":[0,128],"nodes":[{"content":"A permission object to combine with the current permission object.","pos":[0,66]},{"content":"It must be of the same type as the current permission object.","pos":[67,128]}]}]},{"pos":[18201,18320],"content":"A new permission object that represents the union of the current permission object and the specified permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission object that represents the union of the current permission object and the specified permission object.","pos":[0,119]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Messaging.MessageQueuePermission\n  id: MessageQueuePermission\n  children:\n  - System.Messaging.MessageQueuePermission.#ctor\n  - System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionEntry[])\n  - System.Messaging.MessageQueuePermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)\n  - System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)\n  - System.Messaging.MessageQueuePermission.Copy\n  - System.Messaging.MessageQueuePermission.FromXml(System.Security.SecurityElement)\n  - System.Messaging.MessageQueuePermission.Intersect(System.Security.IPermission)\n  - System.Messaging.MessageQueuePermission.IsSubsetOf(System.Security.IPermission)\n  - System.Messaging.MessageQueuePermission.IsUnrestricted\n  - System.Messaging.MessageQueuePermission.PermissionEntries\n  - System.Messaging.MessageQueuePermission.ToXml\n  - System.Messaging.MessageQueuePermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: MessageQueuePermission\n  nameWithType: MessageQueuePermission\n  fullName: System.Messaging.MessageQueuePermission\n  type: Class\n  summary: Allows control of code access permissions for messaging.\n  remarks: ''\n  example:\n  - \"The following code example creates several instances of MessageQueuePermission and demonstrates the use of the <xref:System.Messaging.MessageQueuePermission.PermissionEntries%2A> property.  \\n  \\n [!code-cs[MessageQueuePermission#0](~/add/codesnippet/csharp/t-system.messaging.messa_11_1.cs)]\"\n  syntax:\n    content: 'public sealed class MessageQueuePermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermission.#ctor\n  id: '#ctor'\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: MessageQueuePermission()\n  nameWithType: MessageQueuePermission.MessageQueuePermission()\n  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission()\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example creates a new instance of <xref:System.Messaging.MessageQueuePermission>.  \\n  \\n [!code-cs[MessageQueuePermission#1](~/add/codesnippet/csharp/m-system.messaging.messa_5_1.cs)]\"\n  syntax:\n    content: public MessageQueuePermission ();\n    parameters: []\n  overload: System.Messaging.MessageQueuePermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionEntry[])\n  id: '#ctor(System.Messaging.MessageQueuePermissionEntry[])'\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: MessageQueuePermission(MessageQueuePermissionEntry[])\n  nameWithType: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionEntry[])\n  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionEntry[])\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified permission access level entries.\n  remarks: ''\n  example:\n  - \"The following code example creates a new instance of <xref:System.Messaging.MessageQueuePermission>.  \\n  \\n [!code-cs[MessageQueuePermission#4](~/add/codesnippet/csharp/05826c34-0343-4cde-b70a-_1.cs)]\"\n  syntax:\n    content: public MessageQueuePermission (System.Messaging.MessageQueuePermissionEntry[] permissionAccessEntries);\n    parameters:\n    - id: permissionAccessEntries\n      type: System.Messaging.MessageQueuePermissionEntry[]\n      description: An array of <xref href=\"System.Messaging.MessageQueuePermissionEntry\"></xref> objects. The <xref:System.Messaging.MessageQueuePermission.PermissionEntries*> property is set to this value.\n  overload: System.Messaging.MessageQueuePermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: MessageQueuePermission(PermissionState)\n  nameWithType: MessageQueuePermission.MessageQueuePermission(PermissionState)\n  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified permission state.\n  remarks: ''\n  example:\n  - \"The following code example creates a new instance of <xref:System.Messaging.MessageQueuePermission>.  \\n  \\n [!code-cs[MessageQueuePermission#5](~/add/codesnippet/csharp/398c7aba-e1ef-4fb1-a878-_1.cs)]\"\n  syntax:\n    content: public MessageQueuePermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Messaging.MessageQueuePermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)\n  id: '#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)'\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: MessageQueuePermission(MessageQueuePermissionAccess,String)\n  nameWithType: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess,String)\n  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess,String)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified access levels and the path of the queue.\n  remarks: ''\n  example:\n  - \"The following code example creates a new instance of <xref:System.Messaging.MessageQueuePermission>.  \\n  \\n [!code-cs[MessageQueuePermission#2](~/add/codesnippet/csharp/33b0d668-a747-483a-840a-_1.cs)]\"\n  syntax:\n    content: public MessageQueuePermission (System.Messaging.MessageQueuePermissionAccess permissionAccess, string path);\n    parameters:\n    - id: permissionAccess\n      type: System.Messaging.MessageQueuePermissionAccess\n      description: One of the <xref href=\"System.Messaging.MessageQueuePermissionAccess\"></xref> values.\n    - id: path\n      type: System.String\n      description: The path of the queue that is referenced by the <xref href=\"System.Messaging.MessageQueue\"></xref>.\n  overload: System.Messaging.MessageQueuePermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)\n  id: '#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)'\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: MessageQueuePermission(MessageQueuePermissionAccess,String,String,String)\n  nameWithType: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess,String,String,String)\n  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess,String,String,String)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.MessageQueuePermission\"></xref> class with the specified access levels, computer to use, queue description, and queue category.\n  remarks: ''\n  example:\n  - \"The following code example creates a new instance of <xref:System.Messaging.MessageQueuePermission>.  \\n  \\n [!code-cs[MessageQueuePermission#3](~/add/codesnippet/csharp/3edb4ca1-e73d-4f2b-9481-_1.cs)]\"\n  syntax:\n    content: public MessageQueuePermission (System.Messaging.MessageQueuePermissionAccess permissionAccess, string machineName, string label, string category);\n    parameters:\n    - id: permissionAccess\n      type: System.Messaging.MessageQueuePermissionAccess\n      description: One of the <xref href=\"System.Messaging.MessageQueuePermissionAccess\"></xref> values.\n    - id: machineName\n      type: System.String\n      description: The name of the computer where the Message Queuing queue is located.\n    - id: label\n      type: System.String\n      description: The queue description.\n    - id: category\n      type: System.String\n      description: The queue category (Message Queuing type identifier).\n  overload: System.Messaging.MessageQueuePermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermission.Copy\n  id: Copy\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: MessageQueuePermission.Copy()\n  fullName: System.Messaging.MessageQueuePermission.Copy()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Creates and returns an identical copy of the current permission object.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission object.\n  overload: System.Messaging.MessageQueuePermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: MessageQueuePermission.FromXml(SecurityElement)\n  fullName: System.Messaging.MessageQueuePermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Reconstructs a security object with a specified state from an XML encoding.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the security object.\n  overload: System.Messaging.MessageQueuePermission.FromXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: MessageQueuePermission.Intersect(IPermission)\n  fullName: System.Messaging.MessageQueuePermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Returns a new permission object that represents the intersection of the current permission object and the specified permission object.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object to intersect with the current permission object. It must be of the same type as the current permission object.\n    return:\n      type: System.Security.IPermission\n      description: A new permission object that represents the intersection of the current permission object and the specified permission object. This new permission object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic) if the intersection is empty.\n  overload: System.Messaging.MessageQueuePermission.Intersect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: MessageQueuePermission.IsSubsetOf(IPermission)\n  fullName: System.Messaging.MessageQueuePermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Returns a value that indicates whether the current permission object is a subset of the specified permission object.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission object is a subset of the specified permission object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Messaging.MessageQueuePermission.IsSubsetOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: MessageQueuePermission.IsUnrestricted()\n  fullName: System.Messaging.MessageQueuePermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Returns a value that indicates whether the permission can be represented as unrestricted without any knowledge of the permission semantics.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the permission can be represented as unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Messaging.MessageQueuePermission.IsUnrestricted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermission.PermissionEntries\n  id: PermissionEntries\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: PermissionEntries\n  nameWithType: MessageQueuePermission.PermissionEntries\n  fullName: System.Messaging.MessageQueuePermission.PermissionEntries\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets the collection of permission entries for this permissions request.\n  remarks: ''\n  example:\n  - \"The following code example creates a new instance of <xref:System.Messaging.MessageQueuePermission> and gets the value of its PermissionEntries property.  \\n  \\n [!code-cs[MessageQueuePermission#6](~/add/codesnippet/csharp/p-system.messaging.messa_78_1.cs)]\"\n  syntax:\n    content: public System.Messaging.MessageQueuePermissionEntryCollection PermissionEntries { get; }\n    return:\n      type: System.Messaging.MessageQueuePermissionEntryCollection\n      description: A <xref href=\"System.Messaging.MessageQueuePermissionEntryCollection\"></xref> that contains the permission entries for this permissions request.\n  overload: System.Messaging.MessageQueuePermission.PermissionEntries*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermission.ToXml\n  id: ToXml\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: MessageQueuePermission.ToXml()\n  fullName: System.Messaging.MessageQueuePermission.ToXml()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Creates an XML encoding of the security object and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the security object, including any state information.\n  overload: System.Messaging.MessageQueuePermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueuePermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Messaging.MessageQueuePermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: MessageQueuePermission.Union(IPermission)\n  fullName: System.Messaging.MessageQueuePermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Returns a new permission object that is the union of the current and specified permission objects.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object to combine with the current permission object. It must be of the same type as the current permission object.\n    return:\n      type: System.Security.IPermission\n      description: A new permission object that represents the union of the current permission object and the specified permission object.\n  overload: System.Messaging.MessageQueuePermission.Union*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.Messaging.MessageQueuePermission.#ctor\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: MessageQueuePermission()\n  nameWithType: MessageQueuePermission.MessageQueuePermission()\n  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission()\n- uid: System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionEntry[])\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: MessageQueuePermission(MessageQueuePermissionEntry[])\n  nameWithType: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionEntry[])\n  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionEntry[])\n- uid: System.Messaging.MessageQueuePermissionEntry[]\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueuePermissionEntry\n  nameWithType: MessageQueuePermissionEntry\n  fullName: System.Messaging.MessageQueuePermissionEntry[]\n  spec.csharp:\n  - uid: System.Messaging.MessageQueuePermissionEntry\n    name: MessageQueuePermissionEntry\n    nameWithType: MessageQueuePermissionEntry\n    fullName: MessageQueuePermissionEntry[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Messaging.MessageQueuePermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: MessageQueuePermission(PermissionState)\n  nameWithType: MessageQueuePermission.MessageQueuePermission(PermissionState)\n  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: MessageQueuePermission(MessageQueuePermissionAccess,String)\n  nameWithType: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess,String)\n  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess,String)\n- uid: System.Messaging.MessageQueuePermissionAccess\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueuePermissionAccess\n  nameWithType: MessageQueuePermissionAccess\n  fullName: System.Messaging.MessageQueuePermissionAccess\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: MessageQueuePermission(MessageQueuePermissionAccess,String,String,String)\n  nameWithType: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess,String,String,String)\n  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess,String,String,String)\n- uid: System.Messaging.MessageQueuePermission.Copy\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: Copy()\n  nameWithType: MessageQueuePermission.Copy()\n  fullName: System.Messaging.MessageQueuePermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Messaging.MessageQueuePermission.FromXml(System.Security.SecurityElement)\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: MessageQueuePermission.FromXml(SecurityElement)\n  fullName: System.Messaging.MessageQueuePermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Messaging.MessageQueuePermission.Intersect(System.Security.IPermission)\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: MessageQueuePermission.Intersect(IPermission)\n  fullName: System.Messaging.MessageQueuePermission.Intersect(IPermission)\n- uid: System.Messaging.MessageQueuePermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: MessageQueuePermission.IsSubsetOf(IPermission)\n  fullName: System.Messaging.MessageQueuePermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Messaging.MessageQueuePermission.IsUnrestricted\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: MessageQueuePermission.IsUnrestricted()\n  fullName: System.Messaging.MessageQueuePermission.IsUnrestricted()\n- uid: System.Messaging.MessageQueuePermission.PermissionEntries\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: PermissionEntries\n  nameWithType: MessageQueuePermission.PermissionEntries\n  fullName: System.Messaging.MessageQueuePermission.PermissionEntries\n- uid: System.Messaging.MessageQueuePermissionEntryCollection\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueuePermissionEntryCollection\n  nameWithType: MessageQueuePermissionEntryCollection\n  fullName: System.Messaging.MessageQueuePermissionEntryCollection\n- uid: System.Messaging.MessageQueuePermission.ToXml\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: MessageQueuePermission.ToXml()\n  fullName: System.Messaging.MessageQueuePermission.ToXml()\n- uid: System.Messaging.MessageQueuePermission.Union(System.Security.IPermission)\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: MessageQueuePermission.Union(IPermission)\n  fullName: System.Messaging.MessageQueuePermission.Union(IPermission)\n- uid: System.Messaging.MessageQueuePermission.#ctor*\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: MessageQueuePermission\n  nameWithType: MessageQueuePermission.MessageQueuePermission\n- uid: System.Messaging.MessageQueuePermission.Copy*\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: Copy\n  nameWithType: MessageQueuePermission.Copy\n- uid: System.Messaging.MessageQueuePermission.FromXml*\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: FromXml\n  nameWithType: MessageQueuePermission.FromXml\n- uid: System.Messaging.MessageQueuePermission.Intersect*\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: Intersect\n  nameWithType: MessageQueuePermission.Intersect\n- uid: System.Messaging.MessageQueuePermission.IsSubsetOf*\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: MessageQueuePermission.IsSubsetOf\n- uid: System.Messaging.MessageQueuePermission.IsUnrestricted*\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: MessageQueuePermission.IsUnrestricted\n- uid: System.Messaging.MessageQueuePermission.PermissionEntries*\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: PermissionEntries\n  nameWithType: MessageQueuePermission.PermissionEntries\n- uid: System.Messaging.MessageQueuePermission.ToXml*\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: ToXml\n  nameWithType: MessageQueuePermission.ToXml\n- uid: System.Messaging.MessageQueuePermission.Union*\n  parent: System.Messaging.MessageQueuePermission\n  isExternal: false\n  name: Union\n  nameWithType: MessageQueuePermission.Union\n"}