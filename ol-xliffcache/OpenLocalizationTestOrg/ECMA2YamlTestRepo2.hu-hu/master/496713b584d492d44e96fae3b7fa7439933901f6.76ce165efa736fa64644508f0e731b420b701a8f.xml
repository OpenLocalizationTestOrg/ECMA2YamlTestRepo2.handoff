{"nodes":[{"pos":[2111,2236],"content":"Represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause.","pos":[0,125]}]},{"pos":[2248,3008],"content":"Use the SecurityTokenResolver class to retrieve a key or security token when you have a key identifier or key identifier clause. The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> methods retrieve a token given that there is a key identifier or key identifier clause. The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> retrieve a key given that there is a key identifier clause. The methods with a `Try` prefix return `false` when the retrieval is unsuccessful, whereas the methods without a `Try` prefix throw an exception.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the SecurityTokenResolver class to retrieve a key or security token when you have a key identifier or key identifier clause.","pos":[0,128]},{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A&gt; and &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A&gt; methods retrieve a token given that there is a key identifier or key identifier clause.","pos":[129,379],"source":" The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> methods retrieve a token given that there is a key identifier or key identifier clause."},{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A&gt; and &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A&gt; retrieve a key given that there is a key identifier clause.","pos":[380,614],"source":" The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> retrieve a key given that there is a key identifier clause."},{"content":"The methods with a <ph id=\"ph1\">`Try`</ph> prefix return <ph id=\"ph2\">`false`</ph> when the retrieval is unsuccessful, whereas the methods without a <ph id=\"ph3\">`Try`</ph> prefix throw an exception.","pos":[615,760],"source":" The methods with a `Try` prefix return `false` when the retrieval is unsuccessful, whereas the methods without a `Try` prefix throw an exception."}]},{"pos":[3765,3879],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> class."},{"pos":[4961,5037],"content":"Creates a default security token resolver for the specified security tokens.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a default security token resolver for the specified security tokens.","pos":[0,76]}]},{"pos":[5049,5378],"content":"The security token resolver that is returned from this method, uses the <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> methods on the specified security tokens to resolve key identifiers and key identifier clauses.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The security token resolver that is returned from this method, uses the &lt;xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A&gt; and &lt;xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A&gt; methods on the specified security tokens to resolve key identifiers and key identifier clauses.","pos":[0,329],"source":"The security token resolver that is returned from this method, uses the <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> methods on the specified security tokens to resolve key identifiers and key identifier clauses."}]},{"pos":[5786,6064],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id=\"ph2\">&amp;gt;</ph> of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the set of security tokens for which this security token resolver can resolve key identifiers and key identifier clauses to.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that contains the set of security tokens for which this security token resolver can resolve key identifiers and key identifier clauses to."},{"pos":[6137,6505],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to resolve the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_&amp;lt;SecurityTokenReference&amp;gt;\" name=\"&amp;lt;SecurityTokenReference&amp;gt;\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> key identifier clauses that reference a security key that is located somewhere else in the SOAP message; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to resolve the <xref uid=\"langword_csharp_&lt;SecurityTokenReference&gt;\" name=\"&lt;SecurityTokenReference&gt;\" href=\"\"></xref> key identifier clauses that reference a security key that is located somewhere else in the SOAP message; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6602,6798],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that resolves key identifiers and clauses that match the security tokens specified in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">tokens</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that resolves key identifiers and clauses that match the security tokens specified in the <code>tokens</code> parameter."},{"pos":[7516,7588],"content":"When overridden in a derived class, loads custom configuration from XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, loads custom configuration from XML.","pos":[0,72]}]},{"pos":[7600,7733],"content":"By default, throws a <xref:System.NotImplementedException>. You can override this method to provide functionality in a derived class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, throws a <xref:System.NotImplementedException>. You can override this method to provide functionality in a derived class.","pos":[0,133],"nodes":[{"content":"By default, throws a &lt;xref:System.NotImplementedException&gt;.","pos":[0,59],"source":"By default, throws a <xref:System.NotImplementedException>."},{"content":"You can override this method to provide functionality in a derived class.","pos":[60,133]}]}]},{"pos":[7925,7959],"content":"The custom configuration elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"The custom configuration elements.","pos":[0,34]}]},{"pos":[8755,8829],"content":"Obtains the key that is referenced in the specified key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"Obtains the key that is referenced in the specified key identifier clause.","pos":[0,74]}]},{"pos":[8841,9215],"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and ResolveSecurityKey methods differ in what happens when the key identifier clause cannot be resolved to a key. The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> method returns `false`, whereas the ResolveSecurityKey method throws an exception.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A&gt; and ResolveSecurityKey methods differ in what happens when the key identifier clause cannot be resolved to a key.","pos":[0,202],"source":"The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and ResolveSecurityKey methods differ in what happens when the key identifier clause cannot be resolved to a key."},{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A&gt; method returns <ph id=\"ph1\">`false`</ph>, whereas the ResolveSecurityKey method throws an exception.","pos":[203,374],"source":" The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> method returns `false`, whereas the ResolveSecurityKey method throws an exception."}]},{"pos":[9517,9620],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to retrieve the key for.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> to retrieve the key for."},{"pos":[9704,9833],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is the key referenced in the specified key identifier clause.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that is the key referenced in the specified key identifier clause."},{"pos":[10035,10132],"content":"<ph id=\"ph1\">&lt;code&gt;keyIdentifierClause&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>keyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10243,10362],"content":"A key could not be retrieved for the key identifier clause specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyIdentifierClause</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"A key could not be retrieved for the key identifier clause specified in the <code>keyIdentifierClause</code> parameter."},{"pos":[10991,11120],"content":"Retrieves a security token that matches one of the security key identifier clauses contained within the specified key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a security token that matches one of the security key identifier clauses contained within the specified key identifier.","pos":[0,129]}]},{"pos":[11132,11486],"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and ResolveToken methods differ in what happens when the key identifier cannot be resolved to a security token. The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> method returns `false`, whereas the ResolveToken method throws an exception.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A&gt; and ResolveToken methods differ in what happens when the key identifier cannot be resolved to a security token.","pos":[0,194],"source":"The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and ResolveToken methods differ in what happens when the key identifier cannot be resolved to a security token."},{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A&gt; method returns <ph id=\"ph1\">`false`</ph>, whereas the ResolveToken method throws an exception.","pos":[195,354],"source":" The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> method returns `false`, whereas the ResolveToken method throws an exception."}]},{"pos":[11760,11866],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create a security token for.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> to create a security token for."},{"pos":[11952,12062],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified key identifier.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier."},{"pos":[12258,12349],"content":"<ph id=\"ph1\">&lt;code&gt;keyIdentifier&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>keyIdentifier</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12460,12528],"content":"A security token cannot be created for the specified key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A security token cannot be created for the specified key identifier.","pos":[0,68]}]},{"pos":[13187,13265],"content":"Retrieves the security token that matches the specified key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the security token that matches the specified key identifier clause.","pos":[0,78]}]},{"pos":[13277,13638],"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and ResolveToken methods differ in what happens when the key identifier clause cannot be resolved to a security token. The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> method returns `false`, whereas the ResolveToken method throws an exception.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A&gt; and ResolveToken methods differ in what happens when the key identifier clause cannot be resolved to a security token.","pos":[0,201],"source":"The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and ResolveToken methods differ in what happens when the key identifier clause cannot be resolved to a security token."},{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A&gt; method returns <ph id=\"ph1\">`false`</ph>, whereas the ResolveToken method throws an exception.","pos":[202,361],"source":" The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> method returns `false`, whereas the ResolveToken method throws an exception."}]},{"pos":[13936,14048],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create a security token for.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> to create a security token for."},{"pos":[14134,14251],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified key identifier clause.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier clause."},{"pos":[15169,15256],"content":"Attempts to retrieve the key that is referenced in the specified key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to retrieve the key that is referenced in the specified key identifier clause.","pos":[0,87]}]},{"pos":[15268,15642],"content":"The TryResolveSecurityKey and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods differ in what happens when the key identifier clause cannot be resolved to a key. The TryResolveSecurityKey method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> method throws an exception.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TryResolveSecurityKey and &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A&gt; methods differ in what happens when the key identifier clause cannot be resolved to a key.","pos":[0,202],"source":"The TryResolveSecurityKey and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods differ in what happens when the key identifier clause cannot be resolved to a key."},{"content":"The TryResolveSecurityKey method returns <ph id=\"ph1\">`false`</ph>, whereas the &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A&gt; method throws an exception.","pos":[203,374],"source":" The TryResolveSecurityKey method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> method throws an exception."}]},{"pos":[15961,16064],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to retrieve the key for.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> to retrieve the key for."},{"pos":[16150,16368],"content":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the key that is referenced in the specified key identifier clause. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the key that is referenced in the specified key identifier clause.","pos":[0,178],"source":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the key that is referenced in the specified key identifier clause."},{"content":"This parameter is passed uninitialized.","pos":[179,218]}]},{"pos":[16427,16631],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when a key can be retrieved for the specified key identifier clause; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a key can be retrieved for the specified key identifier clause; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16836,16933],"content":"<ph id=\"ph1\">&lt;code&gt;keyIdentifierClause&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>keyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[17775,17862],"content":"Attempts to retrieve the key that is referenced in the specified key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to retrieve the key that is referenced in the specified key identifier clause.","pos":[0,87]}]},{"pos":[17874,18107],"content":"The TryResolveSecurityKeyCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TryResolveSecurityKeyCore method is called by the &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A&gt; and &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A&gt; methods.","pos":[0,233],"source":"The TryResolveSecurityKeyCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods."}]},{"pos":[18442,18545],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to retrieve the key for.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> to retrieve the key for."},{"pos":[18631,18849],"content":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the key that is referenced in the specified key identifier clause. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the key that is referenced in the specified key identifier clause.","pos":[0,178],"source":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the key that is referenced in the specified key identifier clause."},{"content":"This parameter is passed uninitialized.","pos":[179,218]}]},{"pos":[18908,19112],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when a key can be retrieved for the specified key identifier clause; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a key can be retrieved for the specified key identifier clause; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19993,20126],"content":"Attempts to retrieve the security token that matches one of the key identifier clauses contained within the specified key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to retrieve the security token that matches one of the key identifier clauses contained within the specified key identifier.","pos":[0,133]}]},{"pos":[20138,20492],"content":"The TryResolveToken and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods differ in what happens when the key identifier cannot be resolved to a security token. The TryResolveToken method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> method throws an exception.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TryResolveToken and &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A&gt; methods differ in what happens when the key identifier cannot be resolved to a security token.","pos":[0,194],"source":"The TryResolveToken and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods differ in what happens when the key identifier cannot be resolved to a security token."},{"content":"The TryResolveToken method returns <ph id=\"ph1\">`false`</ph>, whereas the &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A&gt; method throws an exception.","pos":[195,354],"source":" The TryResolveToken method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> method throws an exception."}]},{"pos":[20785,20891],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create a security token for.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> to create a security token for."},{"pos":[20981,21166],"content":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified key identifier.","pos":[0,145],"source":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier."},{"content":"This parameter is passed uninitialized.","pos":[146,185]}]},{"pos":[21225,21433],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when a security token can be retrieved for the specified key identifier; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a security token can be retrieved for the specified key identifier; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21632,21723],"content":"<ph id=\"ph1\">&lt;code&gt;keyIdentifier&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>keyIdentifier</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[22525,22614],"content":"Attempts to retrieve the security token that matches the specified key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to retrieve the security token that matches the specified key identifier clause.","pos":[0,89]}]},{"pos":[22626,22987],"content":"The TryResolveToken and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods differ in what happens when the key identifier clause cannot be resolved to a security token. The TryResolveToken method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> method throws an exception.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TryResolveToken and &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A&gt; methods differ in what happens when the key identifier clause cannot be resolved to a security token.","pos":[0,201],"source":"The TryResolveToken and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods differ in what happens when the key identifier clause cannot be resolved to a security token."},{"content":"The TryResolveToken method returns <ph id=\"ph1\">`false`</ph>, whereas the &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A&gt; method throws an exception.","pos":[202,361],"source":" The TryResolveToken method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> method throws an exception."}]},{"pos":[23304,23416],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create a security token for.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> to create a security token for."},{"pos":[23506,23698],"content":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier clause. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified key identifier clause.","pos":[0,152],"source":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier clause."},{"content":"This parameter is passed uninitialized.","pos":[153,192]}]},{"pos":[23757,23972],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when a security token can be retrieved for the specified key identifier clause; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a security token can be retrieved for the specified key identifier clause; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24171,24268],"content":"<ph id=\"ph1\">&lt;code&gt;keyIdentifierClause&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>keyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[25060,25238],"content":"When overridden in a derived class, attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.","pos":[0,178]}]},{"pos":[25250,25465],"content":"The TryResolveTokenCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TryResolveTokenCore method is called by the &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A&gt; and &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A&gt; methods.","pos":[0,215],"source":"The TryResolveTokenCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods."}]},{"pos":[25774,25880],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create a security token for.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> to create a security token for."},{"pos":[25970,26155],"content":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified key identifier.","pos":[0,145],"source":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier."},{"content":"This parameter is passed uninitialized.","pos":[146,185]}]},{"pos":[26214,26422],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when a security token can be retrieved for the specified key identifier; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a security token can be retrieved for the specified key identifier; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[27347,27471],"content":"When overridden in a derived class, attempts to resolve the security token that matches the specified key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, attempts to resolve the security token that matches the specified key identifier clause.","pos":[0,124]}]},{"pos":[27483,27698],"content":"The TryResolveTokenCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TryResolveTokenCore method is called by the &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A&gt; and &lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A&gt; methods.","pos":[0,215],"source":"The TryResolveTokenCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods."}]},{"pos":[28031,28143],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create a security token for.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> to create a security token for."},{"pos":[28233,28425],"content":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier clause. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the specified key identifier clause.","pos":[0,152],"source":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier clause."},{"content":"This parameter is passed uninitialized.","pos":[153,192]}]},{"pos":[28484,28699],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when a security token can be retrieved for the specified key identifier clause; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a security token can be retrieved for the specified key identifier clause; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver\n  id: SecurityTokenResolver\n  children:\n  - System.IdentityModel.Selectors.SecurityTokenResolver.#ctor\n  - System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  langs:\n  - csharp\n  name: SecurityTokenResolver\n  nameWithType: SecurityTokenResolver\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver\n  type: Class\n  summary: Represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause.\n  remarks: Use the SecurityTokenResolver class to retrieve a key or security token when you have a key identifier or key identifier clause. The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> methods retrieve a token given that there is a key identifier or key identifier clause. The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> retrieve a key given that there is a key identifier clause. The methods with a `Try` prefix return `false` when the retrieval is unsuccessful, whereas the methods without a `Try` prefix throw an exception.\n  syntax:\n    content: 'public abstract class SecurityTokenResolver : System.IdentityModel.Configuration.ICustomIdentityConfiguration'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IdentityModel.Configuration.ICustomIdentityConfiguration\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  langs:\n  - csharp\n  name: SecurityTokenResolver()\n  nameWithType: SecurityTokenResolver.SecurityTokenResolver()\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.SecurityTokenResolver()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> class.\n  syntax:\n    content: protected SecurityTokenResolver ();\n    parameters: []\n  overload: System.IdentityModel.Selectors.SecurityTokenResolver.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)\n  id: CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  langs:\n  - csharp\n  name: CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)\n  nameWithType: SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Creates a default security token resolver for the specified security tokens.\n  remarks: The security token resolver that is returned from this method, uses the <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> methods on the specified security tokens to resolve key identifiers and key identifier clauses.\n  syntax:\n    content: public static System.IdentityModel.Selectors.SecurityTokenResolver CreateDefaultSecurityTokenResolver (System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityToken> tokens, bool canMatchLocalId);\n    parameters:\n    - id: tokens\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken}\n      description: A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that contains the set of security tokens for which this security token resolver can resolve key identifiers and key identifier clauses to.\n    - id: canMatchLocalId\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to resolve the <xref uid=\"langword_csharp_&lt;SecurityTokenReference&gt;\" name=\"&lt;SecurityTokenReference&gt;\" href=\"\"></xref> key identifier clauses that reference a security key that is located somewhere else in the SOAP message; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: A <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref> that resolves key identifiers and clauses that match the security tokens specified in the <code>tokens</code> parameter.\n  overload: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  id: LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  langs:\n  - csharp\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: When overridden in a derived class, loads custom configuration from XML.\n  remarks: By default, throws a <xref:System.NotImplementedException>. You can override this method to provide functionality in a derived class.\n  syntax:\n    content: public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);\n    parameters:\n    - id: nodelist\n      type: System.Xml.XmlNodeList\n      description: The custom configuration elements.\n  overload: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  langs:\n  - csharp\n  name: ResolveSecurityKey(SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Obtains the key that is referenced in the specified key identifier clause.\n  remarks: The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and ResolveSecurityKey methods differ in what happens when the key identifier clause cannot be resolved to a key. The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> method returns `false`, whereas the ResolveSecurityKey method throws an exception.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityKey ResolveSecurityKey (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> to retrieve the key for.\n    return:\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that is the key referenced in the specified key identifier clause.\n  overload: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A key could not be retrieved for the key identifier clause specified in the <code>keyIdentifierClause</code> parameter.\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  id: ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  langs:\n  - csharp\n  name: ResolveToken(SecurityKeyIdentifier)\n  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Retrieves a security token that matches one of the security key identifier clauses contained within the specified key identifier.\n  remarks: The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and ResolveToken methods differ in what happens when the key identifier cannot be resolved to a security token. The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> method returns `false`, whereas the ResolveToken method throws an exception.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityToken ResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);\n    parameters:\n    - id: keyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> to create a security token for.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier.\n  overload: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyIdentifier</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A security token cannot be created for the specified key identifier.\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  langs:\n  - csharp\n  name: ResolveToken(SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Retrieves the security token that matches the specified key identifier clause.\n  remarks: The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and ResolveToken methods differ in what happens when the key identifier clause cannot be resolved to a security token. The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> method returns `false`, whereas the ResolveToken method throws an exception.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityToken ResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> to create a security token for.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier clause.\n  overload: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  id: TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  langs:\n  - csharp\n  name: TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)\n  nameWithType: SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Attempts to retrieve the key that is referenced in the specified key identifier clause.\n  remarks: The TryResolveSecurityKey and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods differ in what happens when the key identifier clause cannot be resolved to a key. The TryResolveSecurityKey method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> method throws an exception.\n  syntax:\n    content: public bool TryResolveSecurityKey (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> to retrieve the key for.\n    - id: key\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the key that is referenced in the specified key identifier clause. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a key can be retrieved for the specified key identifier clause; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  id: TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  langs:\n  - csharp\n  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)\n  nameWithType: SecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Attempts to retrieve the key that is referenced in the specified key identifier clause.\n  remarks: The TryResolveSecurityKeyCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods.\n  syntax:\n    content: protected abstract bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> to retrieve the key for.\n    - id: key\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the key that is referenced in the specified key identifier clause. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a key can be retrieved for the specified key identifier clause; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  id: TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  langs:\n  - csharp\n  name: TryResolveToken(SecurityKeyIdentifier,SecurityToken)\n  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier,SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier,SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Attempts to retrieve the security token that matches one of the key identifier clauses contained within the specified key identifier.\n  remarks: The TryResolveToken and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods differ in what happens when the key identifier cannot be resolved to a security token. The TryResolveToken method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> method throws an exception.\n  syntax:\n    content: public bool TryResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: keyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> to create a security token for.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a security token can be retrieved for the specified key identifier; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyIdentifier</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  id: TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  langs:\n  - csharp\n  name: TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)\n  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Attempts to retrieve the security token that matches the specified key identifier clause.\n  remarks: The TryResolveToken and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods differ in what happens when the key identifier clause cannot be resolved to a security token. The TryResolveToken method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> method throws an exception.\n  syntax:\n    content: public bool TryResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> to create a security token for.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier clause. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a security token can be retrieved for the specified key identifier clause; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  langs:\n  - csharp\n  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)\n  nameWithType: SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: When overridden in a derived class, attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.\n  remarks: The TryResolveTokenCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.\n  syntax:\n    content: protected abstract bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: keyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> to create a security token for.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a security token can be retrieved for the specified key identifier; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  langs:\n  - csharp\n  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)\n  nameWithType: SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: When overridden in a derived class, attempts to resolve the security token that matches the specified key identifier clause.\n  remarks: The TryResolveTokenCore method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.\n  syntax:\n    content: protected abstract bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> to create a security token for.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier clause. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a security token can be retrieved for the specified key identifier clause; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.#ctor\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: SecurityTokenResolver()\n  nameWithType: SecurityTokenResolver.SecurityTokenResolver()\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.SecurityTokenResolver()\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)\n  nameWithType: SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenResolver\n  nameWithType: SecurityTokenResolver\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<SecurityToken>\n  nameWithType: ReadOnlyCollection<SecurityToken>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityToken>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityToken>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Tokens.SecurityToken\n    name: SecurityToken\n    nameWithType: SecurityToken\n    fullName: SecurityToken\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)\n- uid: System.Xml.XmlNodeList\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeList\n  nameWithType: XmlNodeList\n  fullName: System.Xml.XmlNodeList\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveSecurityKey(SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKey\n  nameWithType: SecurityKey\n  fullName: System.IdentityModel.Tokens.SecurityKey\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveToken(SecurityKeyIdentifier)\n  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveToken(SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)\n  nameWithType: SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)\n  nameWithType: SecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveToken(SecurityKeyIdentifier,SecurityToken)\n  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier,SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier,SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)\n  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)\n  nameWithType: SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)\n  nameWithType: SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.#ctor*\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: SecurityTokenResolver\n  nameWithType: SecurityTokenResolver.SecurityTokenResolver\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver*\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: CreateDefaultSecurityTokenResolver\n  nameWithType: SecurityTokenResolver.CreateDefaultSecurityTokenResolver\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration*\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: LoadCustomConfiguration\n  nameWithType: SecurityTokenResolver.LoadCustomConfiguration\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey*\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveSecurityKey\n  nameWithType: SecurityTokenResolver.ResolveSecurityKey\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken*\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveToken\n  nameWithType: SecurityTokenResolver.ResolveToken\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey*\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKey\n  nameWithType: SecurityTokenResolver.TryResolveSecurityKey\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore*\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKeyCore\n  nameWithType: SecurityTokenResolver.TryResolveSecurityKeyCore\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken*\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveToken\n  nameWithType: SecurityTokenResolver.TryResolveToken\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore*\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore\n  nameWithType: SecurityTokenResolver.TryResolveTokenCore\n"}