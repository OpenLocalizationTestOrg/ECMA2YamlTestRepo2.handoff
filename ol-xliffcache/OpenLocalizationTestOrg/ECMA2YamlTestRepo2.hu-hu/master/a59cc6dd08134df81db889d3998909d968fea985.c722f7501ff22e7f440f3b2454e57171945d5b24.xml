{"nodes":[{"pos":[605,663],"content":"Flags providing additional control over the build request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags providing additional control over the build request.","pos":[0,58]}]},{"pos":[1284,1538],"content":"When this flag is present and the project has previously been built on a node whose affinity is incompatible with the affinity this request requires, this build request ignores the project state (but not the target results) that was previously generated.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this flag is present and the project has previously been built on a node whose affinity is incompatible with the affinity this request requires, this build request ignores the project state (but not the target results) that was previously generated.","pos":[0,254]}]},{"pos":[1551,2365],"content":"This behavior, when this flag is present, is not usually desired. This flag is provided only for those cases where the client knows that the new build request does not depend on the project state generated by a previous request. Setting this flag can provide a performance boost in the case of incompatible node affinities, because MSBuild would otherwise have to serialize the project state from one node to another, Serializing the project state can be expensive, depending on the amount of data the project has previously generated.       This flag has no effect on target results, so if a previous request has built a target, the new request will not re-build the target. Additionally, none of the project state mutations which occurred as a consequence of previously building that target will be re-applied.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This behavior, when this flag is present, is not usually desired. This flag is provided only for those cases where the client knows that the new build request does not depend on the project state generated by a previous request. Setting this flag can provide a performance boost in the case of incompatible node affinities, because MSBuild would otherwise have to serialize the project state from one node to another, Serializing the project state can be expensive, depending on the amount of data the project has previously generated.       This flag has no effect on target results, so if a previous request has built a target, the new request will not re-build the target. Additionally, none of the project state mutations which occurred as a consequence of previously building that target will be re-applied.","pos":[0,812],"nodes":[{"content":"This behavior, when this flag is present, is not usually desired.","pos":[0,65]},{"content":"This flag is provided only for those cases where the client knows that the new build request does not depend on the project state generated by a previous request.","pos":[66,228]},{"content":"Setting this flag can provide a performance boost in the case of incompatible node affinities, because MSBuild would otherwise have to serialize the project state from one node to another, Serializing the project state can be expensive, depending on the amount of data the project has previously generated.","pos":[229,535]},{"content":"This flag has no effect on target results, so if a previous request has built a target, the new request will not re-build the target.","pos":[542,675]},{"content":"Additionally, none of the project state mutations which occurred as a consequence of previously building that target will be re-applied.","pos":[676,812]}]}]},{"pos":[2508,2520],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2929,2938],"content":"No flags.","needQuote":true,"needEscape":true,"nodes":[{"content":"No flags.","pos":[0,9]}]},{"pos":[3058,3070],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3604,3807],"content":"When this flag is present, <bpt id=\"p1\">&lt;xref href=\"Microsoft.Build.Execution.BuildResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> issued in response to this request will include &lt;xref:Microsoft.Build.Execution.BuildResult.ProjectStateAfterBuild*&gt;.","needQuote":true,"needEscape":true,"source":"When this flag is present, <xref href=\"Microsoft.Build.Execution.BuildResult\"></xref> issued in response to this request will include <xref:Microsoft.Build.Execution.BuildResult.ProjectStateAfterBuild*>."},{"pos":[3952,3964],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4503,4601],"content":"When this flag is present, the existing ProjectInstance in the build will be replaced by this one.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this flag is present, the existing ProjectInstance in the build will be replaced by this one.","pos":[0,98]}]},{"pos":[4747,4759],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Execution.BuildRequestDataFlags\n  id: BuildRequestDataFlags\n  children:\n  - Microsoft.Build.Execution.BuildRequestDataFlags.IgnoreExistingProjectState\n  - Microsoft.Build.Execution.BuildRequestDataFlags.None\n  - Microsoft.Build.Execution.BuildRequestDataFlags.ProvideProjectStateAfterBuild\n  - Microsoft.Build.Execution.BuildRequestDataFlags.ReplaceExistingProjectInstance\n  langs:\n  - csharp\n  name: BuildRequestDataFlags\n  nameWithType: BuildRequestDataFlags\n  fullName: Microsoft.Build.Execution.BuildRequestDataFlags\n  type: Enum\n  summary: Flags providing additional control over the build request.\n  syntax:\n    content: >-\n      [System.Flags]\n\n      public enum BuildRequestDataFlags\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: Microsoft.Build.Execution.BuildRequestDataFlags.IgnoreExistingProjectState\n  id: IgnoreExistingProjectState\n  parent: Microsoft.Build.Execution.BuildRequestDataFlags\n  langs:\n  - csharp\n  name: IgnoreExistingProjectState\n  nameWithType: BuildRequestDataFlags.IgnoreExistingProjectState\n  fullName: Microsoft.Build.Execution.BuildRequestDataFlags.IgnoreExistingProjectState\n  type: Field\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Execution\n  summary: When this flag is present and the project has previously been built on a node whose affinity is incompatible with the affinity this request requires, this build request ignores the project state (but not the target results) that was previously generated.\n  remarks: \"This behavior, when this flag is present, is not usually desired. This flag is provided only for those cases where the client knows that the new build request does not depend on the project state generated by a previous request. Setting this flag can provide a performance boost in the case of incompatible node affinities, because MSBuild would otherwise have to serialize the project state from one node to another, Serializing the project state can be expensive, depending on the amount of data the project has previously generated.  \\n  \\n This flag has no effect on target results, so if a previous request has built a target, the new request will not re-build the target. Additionally, none of the project state mutations which occurred as a consequence of previously building that target will be re-applied.\"\n  syntax:\n    content: IgnoreExistingProjectState\n    return:\n      type: Microsoft.Build.Execution.BuildRequestDataFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Execution.BuildRequestDataFlags.None\n  id: None\n  parent: Microsoft.Build.Execution.BuildRequestDataFlags\n  langs:\n  - csharp\n  name: None\n  nameWithType: BuildRequestDataFlags.None\n  fullName: Microsoft.Build.Execution.BuildRequestDataFlags.None\n  type: Field\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Execution\n  summary: No flags.\n  syntax:\n    content: None\n    return:\n      type: Microsoft.Build.Execution.BuildRequestDataFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Execution.BuildRequestDataFlags.ProvideProjectStateAfterBuild\n  id: ProvideProjectStateAfterBuild\n  parent: Microsoft.Build.Execution.BuildRequestDataFlags\n  langs:\n  - csharp\n  name: ProvideProjectStateAfterBuild\n  nameWithType: BuildRequestDataFlags.ProvideProjectStateAfterBuild\n  fullName: Microsoft.Build.Execution.BuildRequestDataFlags.ProvideProjectStateAfterBuild\n  type: Field\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Execution\n  summary: When this flag is present, <xref href=\"Microsoft.Build.Execution.BuildResult\"></xref> issued in response to this request will include <xref:Microsoft.Build.Execution.BuildResult.ProjectStateAfterBuild*>.\n  syntax:\n    content: ProvideProjectStateAfterBuild\n    return:\n      type: Microsoft.Build.Execution.BuildRequestDataFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Execution.BuildRequestDataFlags.ReplaceExistingProjectInstance\n  id: ReplaceExistingProjectInstance\n  parent: Microsoft.Build.Execution.BuildRequestDataFlags\n  langs:\n  - csharp\n  name: ReplaceExistingProjectInstance\n  nameWithType: BuildRequestDataFlags.ReplaceExistingProjectInstance\n  fullName: Microsoft.Build.Execution.BuildRequestDataFlags.ReplaceExistingProjectInstance\n  type: Field\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Execution\n  summary: When this flag is present, the existing ProjectInstance in the build will be replaced by this one.\n  syntax:\n    content: ReplaceExistingProjectInstance\n    return:\n      type: Microsoft.Build.Execution.BuildRequestDataFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: Microsoft.Build.Execution.BuildRequestDataFlags.IgnoreExistingProjectState\n  parent: Microsoft.Build.Execution.BuildRequestDataFlags\n  isExternal: false\n  name: IgnoreExistingProjectState\n  nameWithType: BuildRequestDataFlags.IgnoreExistingProjectState\n  fullName: Microsoft.Build.Execution.BuildRequestDataFlags.IgnoreExistingProjectState\n- uid: Microsoft.Build.Execution.BuildRequestDataFlags\n  parent: Microsoft.Build.Execution\n  isExternal: false\n  name: BuildRequestDataFlags\n  nameWithType: BuildRequestDataFlags\n  fullName: Microsoft.Build.Execution.BuildRequestDataFlags\n- uid: Microsoft.Build.Execution.BuildRequestDataFlags.None\n  parent: Microsoft.Build.Execution.BuildRequestDataFlags\n  isExternal: false\n  name: None\n  nameWithType: BuildRequestDataFlags.None\n  fullName: Microsoft.Build.Execution.BuildRequestDataFlags.None\n- uid: Microsoft.Build.Execution.BuildRequestDataFlags.ProvideProjectStateAfterBuild\n  parent: Microsoft.Build.Execution.BuildRequestDataFlags\n  isExternal: false\n  name: ProvideProjectStateAfterBuild\n  nameWithType: BuildRequestDataFlags.ProvideProjectStateAfterBuild\n  fullName: Microsoft.Build.Execution.BuildRequestDataFlags.ProvideProjectStateAfterBuild\n- uid: Microsoft.Build.Execution.BuildRequestDataFlags.ReplaceExistingProjectInstance\n  parent: Microsoft.Build.Execution.BuildRequestDataFlags\n  isExternal: false\n  name: ReplaceExistingProjectInstance\n  nameWithType: BuildRequestDataFlags.ReplaceExistingProjectInstance\n  fullName: Microsoft.Build.Execution.BuildRequestDataFlags.ReplaceExistingProjectInstance\n"}