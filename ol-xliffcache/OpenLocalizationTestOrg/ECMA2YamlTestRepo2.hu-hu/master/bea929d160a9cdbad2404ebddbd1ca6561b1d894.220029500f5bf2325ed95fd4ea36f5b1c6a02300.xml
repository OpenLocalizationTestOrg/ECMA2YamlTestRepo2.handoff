{"nodes":[{"pos":[535,629],"content":"Allows a workflow execution property to provide custom registration and un-registration logic.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows a workflow execution property to provide custom registration and un-registration logic.","pos":[0,94]}]},{"pos":[1272,1431],"content":"Called when a workflow execution property is added through <xref:System.Activities.ExecutionProperties.Add*>. This provides a validation hook for the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when a workflow execution property is added through <xref:System.Activities.ExecutionProperties.Add*>. This provides a validation hook for the property.","pos":[0,159],"nodes":[{"content":"Called when a workflow execution property is added through &lt;xref:System.Activities.ExecutionProperties.Add*&gt;.","pos":[0,109],"source":"Called when a workflow execution property is added through <xref:System.Activities.ExecutionProperties.Add*>."},{"content":"This provides a validation hook for the property.","pos":[110,159]}]}]},{"pos":[1628,1786],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Activities.RegistrationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that references the collection of execution properties to which the property is being registered.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Activities.RegistrationContext\"></xref> that references the collection of execution properties to which the property is being registered."},{"pos":[2439,2499],"content":"Called when a workflow execution property goes out of scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when a workflow execution property goes out of scope.","pos":[0,60]}]},{"pos":[2698,2844],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Activities.RegistrationContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that references the collection of execution properties to which the property belongs.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Activities.RegistrationContext\"></xref> that references the collection of execution properties to which the property belongs."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.IPropertyRegistrationCallback\n  id: IPropertyRegistrationCallback\n  children:\n  - System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)\n  - System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)\n  langs:\n  - csharp\n  name: IPropertyRegistrationCallback\n  nameWithType: IPropertyRegistrationCallback\n  fullName: System.Activities.IPropertyRegistrationCallback\n  type: Interface\n  summary: Allows a workflow execution property to provide custom registration and un-registration logic.\n  syntax:\n    content: public interface IPropertyRegistrationCallback\n  implements: []\n  platform:\n  - net462\n- uid: System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)\n  id: Register(System.Activities.RegistrationContext)\n  parent: System.Activities.IPropertyRegistrationCallback\n  langs:\n  - csharp\n  name: Register(RegistrationContext)\n  nameWithType: IPropertyRegistrationCallback.Register(RegistrationContext)\n  fullName: System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Called when a workflow execution property is added through <xref:System.Activities.ExecutionProperties.Add*>. This provides a validation hook for the property.\n  syntax:\n    content: public void Register (System.Activities.RegistrationContext context);\n    parameters:\n    - id: context\n      type: System.Activities.RegistrationContext\n      description: A <xref href=\"System.Activities.RegistrationContext\"></xref> that references the collection of execution properties to which the property is being registered.\n  overload: System.Activities.IPropertyRegistrationCallback.Register*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)\n  id: Unregister(System.Activities.RegistrationContext)\n  parent: System.Activities.IPropertyRegistrationCallback\n  langs:\n  - csharp\n  name: Unregister(RegistrationContext)\n  nameWithType: IPropertyRegistrationCallback.Unregister(RegistrationContext)\n  fullName: System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Called when a workflow execution property goes out of scope.\n  syntax:\n    content: public void Unregister (System.Activities.RegistrationContext context);\n    parameters:\n    - id: context\n      type: System.Activities.RegistrationContext\n      description: A <xref href=\"System.Activities.RegistrationContext\"></xref> that references the collection of execution properties to which the property belongs.\n  overload: System.Activities.IPropertyRegistrationCallback.Unregister*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)\n  parent: System.Activities.IPropertyRegistrationCallback\n  isExternal: false\n  name: Register(RegistrationContext)\n  nameWithType: IPropertyRegistrationCallback.Register(RegistrationContext)\n  fullName: System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)\n- uid: System.Activities.RegistrationContext\n  parent: System.Activities\n  isExternal: false\n  name: RegistrationContext\n  nameWithType: RegistrationContext\n  fullName: System.Activities.RegistrationContext\n- uid: System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)\n  parent: System.Activities.IPropertyRegistrationCallback\n  isExternal: false\n  name: Unregister(RegistrationContext)\n  nameWithType: IPropertyRegistrationCallback.Unregister(RegistrationContext)\n  fullName: System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)\n- uid: System.Activities.IPropertyRegistrationCallback.Register*\n  parent: System.Activities.IPropertyRegistrationCallback\n  isExternal: false\n  name: Register\n  nameWithType: IPropertyRegistrationCallback.Register\n- uid: System.Activities.IPropertyRegistrationCallback.Unregister*\n  parent: System.Activities.IPropertyRegistrationCallback\n  isExternal: false\n  name: Unregister\n  nameWithType: IPropertyRegistrationCallback.Unregister\n"}