{"nodes":[{"pos":[527,570],"content":"Provides a type resolver for managed types.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a type resolver for managed types.","pos":[0,43]}]},{"pos":[583,1276],"content":"This type resolver can be used with the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class to include in the serialized JavaScript Object Notation (JSON) string the assembly-qualified name of any managed type that requires custom type metadata.       The SimpleTypeResolver class enables you to serialize managed types as JSON while retaining the managed type definition for custom types.       To create an instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class that uses a type resolver, you must use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%28System.Web.Script.Serialization.JavaScriptTypeResolver%29> constructor.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This type resolver can be used with the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class to include in the serialized JavaScript Object Notation (JSON) string the assembly-qualified name of any managed type that requires custom type metadata.       The SimpleTypeResolver class enables you to serialize managed types as JSON while retaining the managed type definition for custom types.       To create an instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class that uses a type resolver, you must use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%28System.Web.Script.Serialization.JavaScriptTypeResolver%29> constructor.","pos":[0,689],"nodes":[{"content":"This type resolver can be used with the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; class to include in the serialized JavaScript Object Notation (JSON) string the assembly-qualified name of any managed type that requires custom type metadata.","pos":[0,259],"source":"This type resolver can be used with the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class to include in the serialized JavaScript Object Notation (JSON) string the assembly-qualified name of any managed type that requires custom type metadata."},{"content":"The SimpleTypeResolver class enables you to serialize managed types as JSON while retaining the managed type definition for custom types.","pos":[266,403]},{"content":"To create an instance of the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; class that uses a type resolver, you must use the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%28System.Web.Script.Serialization.JavaScriptTypeResolver%29&gt; constructor.","pos":[410,689],"source":"       To create an instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class that uses a type resolver, you must use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%28System.Web.Script.Serialization.JavaScriptTypeResolver%29> constructor."}]}]},{"pos":[2414,2526],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Script.Serialization.SimpleTypeResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Script.Serialization.SimpleTypeResolver\"></xref> class."},{"pos":[3185,3238],"content":"Returns the <xref:System.Type> of the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the &lt;xref:System.Type&gt; of the specified name.","pos":[0,53],"source":"Returns the <xref:System.Type> of the specified name."}]},{"pos":[3250,3365],"content":"The ResolveType method calls the <xref:System.Type.GetType%2A?displayProperty=fullName> method to resolve the type.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ResolveType method calls the &lt;xref:System.Type.GetType%2A?displayProperty=fullName&gt; method to resolve the type.","pos":[0,115],"source":"The ResolveType method calls the <xref:System.Type.GetType%2A?displayProperty=fullName> method to resolve the type."}]},{"pos":[3509,3557],"content":"The assembly-qualified name of the managed type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The assembly-qualified name of the managed type.","pos":[0,48]}]},{"pos":[3613,3752],"content":"A &lt;xref:System.Type&gt; object that has the specified name, if found; otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Type> object that has the specified name, if found; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[4345,4417],"content":"Returns the assembly-qualified name of the specified <xref:System.Type>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the assembly-qualified name of the specified &lt;xref:System.Type&gt;.","pos":[0,72],"source":"Returns the assembly-qualified name of the specified <xref:System.Type>."}]},{"pos":[4565,4589],"content":"The type to be resolved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to be resolved.","pos":[0,24]}]},{"pos":[4647,4720],"content":"A string that contains the assembly-qualified name of the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains the assembly-qualified name of the specified type.","pos":[0,73]}]},{"pos":[4915,4997],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Script.Serialization.SimpleTypeResolver\n  id: SimpleTypeResolver\n  children:\n  - System.Web.Script.Serialization.SimpleTypeResolver.#ctor\n  - System.Web.Script.Serialization.SimpleTypeResolver.ResolveType(System.String)\n  - System.Web.Script.Serialization.SimpleTypeResolver.ResolveTypeId(System.Type)\n  langs:\n  - csharp\n  name: SimpleTypeResolver\n  nameWithType: SimpleTypeResolver\n  fullName: System.Web.Script.Serialization.SimpleTypeResolver\n  type: Class\n  summary: Provides a type resolver for managed types.\n  remarks: \"This type resolver can be used with the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class to include in the serialized JavaScript Object Notation (JSON) string the assembly-qualified name of any managed type that requires custom type metadata.  \\n  \\n The SimpleTypeResolver class enables you to serialize managed types as JSON while retaining the managed type definition for custom types.  \\n  \\n To create an instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class that uses a type resolver, you must use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%28System.Web.Script.Serialization.JavaScriptTypeResolver%29> constructor.\"\n  example:\n  - \"The following example demonstrates how to use the SimpleTypeResolver class and shows the resulting serialized strings by using different type resolvers.  \\n  \\n [!code-cs[System.Web.Script.Serialization.TypeResolver#1](~/add/codesnippet/csharp/t-system.web.script.seri_3_1.aspx)]\\n [!code-vb[System.Web.Script.Serialization.TypeResolver#1](~/add/codesnippet/visualbasic/t-system.web.script.seri_3_1.aspx)]\"\n  syntax:\n    content: 'public class SimpleTypeResolver : System.Web.Script.Serialization.JavaScriptTypeResolver'\n  inheritance:\n  - System.Object\n  - System.Web.Script.Serialization.JavaScriptTypeResolver\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Script.Serialization.SimpleTypeResolver.#ctor\n  id: '#ctor'\n  parent: System.Web.Script.Serialization.SimpleTypeResolver\n  langs:\n  - csharp\n  name: SimpleTypeResolver()\n  nameWithType: SimpleTypeResolver.SimpleTypeResolver()\n  fullName: System.Web.Script.Serialization.SimpleTypeResolver.SimpleTypeResolver()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.Web.Script.Serialization.SimpleTypeResolver\"></xref> class.\n  syntax:\n    content: public SimpleTypeResolver ();\n    parameters: []\n  overload: System.Web.Script.Serialization.SimpleTypeResolver.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Script.Serialization.SimpleTypeResolver.ResolveType(System.String)\n  id: ResolveType(System.String)\n  parent: System.Web.Script.Serialization.SimpleTypeResolver\n  langs:\n  - csharp\n  name: ResolveType(String)\n  nameWithType: SimpleTypeResolver.ResolveType(String)\n  fullName: System.Web.Script.Serialization.SimpleTypeResolver.ResolveType(String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  summary: Returns the <xref:System.Type> of the specified name.\n  remarks: The ResolveType method calls the <xref:System.Type.GetType%2A?displayProperty=fullName> method to resolve the type.\n  syntax:\n    content: public override Type ResolveType (string id);\n    parameters:\n    - id: id\n      type: System.String\n      description: The assembly-qualified name of the managed type.\n    return:\n      type: System.Type\n      description: A <xref:System.Type> object that has the specified name, if found; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.Script.Serialization.SimpleTypeResolver.ResolveType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Script.Serialization.SimpleTypeResolver.ResolveTypeId(System.Type)\n  id: ResolveTypeId(System.Type)\n  parent: System.Web.Script.Serialization.SimpleTypeResolver\n  langs:\n  - csharp\n  name: ResolveTypeId(Type)\n  nameWithType: SimpleTypeResolver.ResolveTypeId(Type)\n  fullName: System.Web.Script.Serialization.SimpleTypeResolver.ResolveTypeId(Type)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  summary: Returns the assembly-qualified name of the specified <xref:System.Type>.\n  syntax:\n    content: public override string ResolveTypeId (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to be resolved.\n    return:\n      type: System.String\n      description: A string that contains the assembly-qualified name of the specified type.\n  overload: System.Web.Script.Serialization.SimpleTypeResolver.ResolveTypeId*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Web.Script.Serialization.JavaScriptTypeResolver\n  isExternal: false\n  name: System.Web.Script.Serialization.JavaScriptTypeResolver\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.Script.Serialization.SimpleTypeResolver.#ctor\n  parent: System.Web.Script.Serialization.SimpleTypeResolver\n  isExternal: false\n  name: SimpleTypeResolver()\n  nameWithType: SimpleTypeResolver.SimpleTypeResolver()\n  fullName: System.Web.Script.Serialization.SimpleTypeResolver.SimpleTypeResolver()\n- uid: System.Web.Script.Serialization.SimpleTypeResolver.ResolveType(System.String)\n  parent: System.Web.Script.Serialization.SimpleTypeResolver\n  isExternal: false\n  name: ResolveType(String)\n  nameWithType: SimpleTypeResolver.ResolveType(String)\n  fullName: System.Web.Script.Serialization.SimpleTypeResolver.ResolveType(String)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Script.Serialization.SimpleTypeResolver.ResolveTypeId(System.Type)\n  parent: System.Web.Script.Serialization.SimpleTypeResolver\n  isExternal: false\n  name: ResolveTypeId(Type)\n  nameWithType: SimpleTypeResolver.ResolveTypeId(Type)\n  fullName: System.Web.Script.Serialization.SimpleTypeResolver.ResolveTypeId(Type)\n- uid: System.Web.Script.Serialization.SimpleTypeResolver.#ctor*\n  parent: System.Web.Script.Serialization.SimpleTypeResolver\n  isExternal: false\n  name: SimpleTypeResolver\n  nameWithType: SimpleTypeResolver.SimpleTypeResolver\n- uid: System.Web.Script.Serialization.SimpleTypeResolver.ResolveType*\n  parent: System.Web.Script.Serialization.SimpleTypeResolver\n  isExternal: false\n  name: ResolveType\n  nameWithType: SimpleTypeResolver.ResolveType\n- uid: System.Web.Script.Serialization.SimpleTypeResolver.ResolveTypeId*\n  parent: System.Web.Script.Serialization.SimpleTypeResolver\n  isExternal: false\n  name: ResolveTypeId\n  nameWithType: SimpleTypeResolver.ResolveTypeId\n"}