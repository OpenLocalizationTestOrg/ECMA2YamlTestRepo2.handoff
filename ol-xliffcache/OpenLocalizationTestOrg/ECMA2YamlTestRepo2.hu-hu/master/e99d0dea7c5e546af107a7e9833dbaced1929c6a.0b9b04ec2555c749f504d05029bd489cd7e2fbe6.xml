{"nodes":[{"pos":[612,759],"content":"Implements a custom security upgrade provider, inherited from this <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_abstract\" name=\"abstract\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> base class.","needQuote":true,"needEscape":true,"source":"Implements a custom security upgrade provider, inherited from this <xref uid=\"langword_csharp_abstract\" name=\"abstract\" href=\"\"></xref> base class."},{"pos":[772,1907],"content":"To add a security upgrade, you implement a class that derives from StreamSecurityUpgradeProvider.       The upgrade process has the following steps:      1.  Implement a class that derives from StreamSecurityUpgradeProvider.      2.  Register it. You do this by creating a binding element for it, and registering the provider in a custom binding.      3.  The derived class that you implement creates an instance of <xref:System.ServiceModel.Channels.StreamSecurityUpgradeInitiator>, which at run time initiates a request to the other end of its connection to upgrade the channel transport layer.      4.  The derived class that you implement creates an instance of <xref:System.ServiceModel.Channels.StreamSecurityUpgradeAcceptor>, which at run time receives the upgrade request from the preceding step, and if possible, accepts the upgrade, and returns the upgraded stream to the other side of its connection.       The security upgrade request can be one of many similar requests. If so, the requests are processed in a definite order. For more information, see <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"To add a security upgrade, you implement a class that derives from StreamSecurityUpgradeProvider.       The upgrade process has the following steps:      1.  Implement a class that derives from StreamSecurityUpgradeProvider.      2.  Register it. You do this by creating a binding element for it, and registering the provider in a custom binding.      3.  The derived class that you implement creates an instance of <xref:System.ServiceModel.Channels.StreamSecurityUpgradeInitiator>, which at run time initiates a request to the other end of its connection to upgrade the channel transport layer.      4.  The derived class that you implement creates an instance of <xref:System.ServiceModel.Channels.StreamSecurityUpgradeAcceptor>, which at run time receives the upgrade request from the preceding step, and if possible, accepts the upgrade, and returns the upgraded stream to the other side of its connection.       The security upgrade request can be one of many similar requests. If so, the requests are processed in a definite order. For more information, see <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.","pos":[0,1123],"nodes":[{"content":"To add a security upgrade, you implement a class that derives from StreamSecurityUpgradeProvider.","pos":[0,97]},{"content":"The upgrade process has the following steps:      1.","pos":[104,156]},{"content":"Implement a class that derives from StreamSecurityUpgradeProvider.","pos":[158,224]},{"content":"2.","pos":[230,232]},{"content":"Register it.","pos":[234,246]},{"content":"You do this by creating a binding element for it, and registering the provider in a custom binding.","pos":[247,346]},{"content":"3.","pos":[352,354]},{"content":"The derived class that you implement creates an instance of &lt;xref:System.ServiceModel.Channels.StreamSecurityUpgradeInitiator&gt;, which at run time initiates a request to the other end of its connection to upgrade the channel transport layer.","pos":[356,596],"source":"  The derived class that you implement creates an instance of <xref:System.ServiceModel.Channels.StreamSecurityUpgradeInitiator>, which at run time initiates a request to the other end of its connection to upgrade the channel transport layer."},{"content":"4.","pos":[602,604]},{"content":"The derived class that you implement creates an instance of &lt;xref:System.ServiceModel.Channels.StreamSecurityUpgradeAcceptor&gt;, which at run time receives the upgrade request from the preceding step, and if possible, accepts the upgrade, and returns the upgraded stream to the other side of its connection.","pos":[606,911],"source":"  The derived class that you implement creates an instance of <xref:System.ServiceModel.Channels.StreamSecurityUpgradeAcceptor>, which at run time receives the upgrade request from the preceding step, and if possible, accepts the upgrade, and returns the upgraded stream to the other side of its connection."},{"content":"The security upgrade request can be one of many similar requests.","pos":[918,983]},{"content":"If so, the requests are processed in a definite order.","pos":[984,1038]},{"content":"For more information, see &lt;xref:System.ServiceModel.Channels.StreamUpgradeProvider&gt;.","pos":[1039,1123],"source":" For more information, see <xref:System.ServiceModel.Channels.StreamUpgradeProvider>."}]}]},{"pos":[3151,3271],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Channels.StreamSecurityUpgradeProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.StreamSecurityUpgradeProvider\"></xref> class."},{"pos":[4172,4292],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Channels.StreamSecurityUpgradeProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.StreamSecurityUpgradeProvider\"></xref> class."},{"pos":[4304,4413],"content":"These time-outs control the default Close and Open time-outs when using the custom security upgrade provider.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"These time-outs control the default Close and Open time-outs when using the custom security upgrade provider.","pos":[0,109]}]},{"pos":[4655,4691],"content":"The default communication time-outs.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default communication time-outs.","pos":[0,36]}]},{"pos":[5249,5303],"content":"Gets the identity being used for the security upgrade.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the identity being used for the security upgrade.","pos":[0,54]}]},{"pos":[5315,5450],"content":"This identity can be used for developing custom stream-level authentication schemes through inheriting from the upgrade provider class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This identity can be used for developing custom stream-level authentication schemes through inheriting from the upgrade provider class.","pos":[0,135]}]},{"pos":[5625,5730],"content":"Returns the <xref:System.ServiceModel.EndpointIdentity> of the client that requests the security upgrade.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the &lt;xref:System.ServiceModel.EndpointIdentity&gt; of the client that requests the security upgrade.","pos":[0,105],"source":"Returns the <xref:System.ServiceModel.EndpointIdentity> of the client that requests the security upgrade."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.StreamSecurityUpgradeProvider\n  id: StreamSecurityUpgradeProvider\n  children:\n  - System.ServiceModel.Channels.StreamSecurityUpgradeProvider.#ctor\n  - System.ServiceModel.Channels.StreamSecurityUpgradeProvider.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  - System.ServiceModel.Channels.StreamSecurityUpgradeProvider.Identity\n  langs:\n  - csharp\n  name: StreamSecurityUpgradeProvider\n  nameWithType: StreamSecurityUpgradeProvider\n  fullName: System.ServiceModel.Channels.StreamSecurityUpgradeProvider\n  type: Class\n  summary: Implements a custom security upgrade provider, inherited from this <xref uid=\"langword_csharp_abstract\" name=\"abstract\" href=\"\"></xref> base class.\n  remarks: \"To add a security upgrade, you implement a class that derives from StreamSecurityUpgradeProvider.  \\n  \\n The upgrade process has the following steps:  \\n  \\n1.  Implement a class that derives from StreamSecurityUpgradeProvider.  \\n  \\n2.  Register it. You do this by creating a binding element for it, and registering the provider in a custom binding.  \\n  \\n3.  The derived class that you implement creates an instance of <xref:System.ServiceModel.Channels.StreamSecurityUpgradeInitiator>, which at run time initiates a request to the other end of its connection to upgrade the channel transport layer.  \\n  \\n4.  The derived class that you implement creates an instance of <xref:System.ServiceModel.Channels.StreamSecurityUpgradeAcceptor>, which at run time receives the upgrade request from the preceding step, and if possible, accepts the upgrade, and returns the upgraded stream to the other side of its connection.  \\n  \\n The security upgrade request can be one of many similar requests. If so, the requests are processed in a definite order. For more information, see <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.\"\n  syntax:\n    content: 'public abstract class StreamSecurityUpgradeProvider : System.ServiceModel.Channels.StreamUpgradeProvider'\n  inheritance:\n  - System.ServiceModel.Channels.CommunicationObject\n  - System.ServiceModel.Channels.StreamUpgradeProvider\n  implements: []\n  inheritedMembers:\n  - System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeAcceptor\n  - System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeInitiator(System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.Channels.StreamUpgradeProvider.DefaultCloseTimeout\n  - System.ServiceModel.Channels.StreamUpgradeProvider.DefaultOpenTimeout\n  - System.ServiceModel.Channels.StreamUpgradeProvider.GetProperty``1\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.StreamSecurityUpgradeProvider.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.StreamSecurityUpgradeProvider\n  langs:\n  - csharp\n  name: StreamSecurityUpgradeProvider()\n  nameWithType: StreamSecurityUpgradeProvider.StreamSecurityUpgradeProvider()\n  fullName: System.ServiceModel.Channels.StreamSecurityUpgradeProvider.StreamSecurityUpgradeProvider()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.StreamSecurityUpgradeProvider\"></xref> class.\n  syntax:\n    content: protected StreamSecurityUpgradeProvider ();\n    parameters: []\n  overload: System.ServiceModel.Channels.StreamSecurityUpgradeProvider.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.StreamSecurityUpgradeProvider.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  id: '#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)'\n  parent: System.ServiceModel.Channels.StreamSecurityUpgradeProvider\n  langs:\n  - csharp\n  name: StreamSecurityUpgradeProvider(IDefaultCommunicationTimeouts)\n  nameWithType: StreamSecurityUpgradeProvider.StreamSecurityUpgradeProvider(IDefaultCommunicationTimeouts)\n  fullName: System.ServiceModel.Channels.StreamSecurityUpgradeProvider.StreamSecurityUpgradeProvider(IDefaultCommunicationTimeouts)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.StreamSecurityUpgradeProvider\"></xref> class.\n  remarks: These time-outs control the default Close and Open time-outs when using the custom security upgrade provider.\n  syntax:\n    content: protected StreamSecurityUpgradeProvider (System.ServiceModel.IDefaultCommunicationTimeouts timeouts);\n    parameters:\n    - id: timeouts\n      type: System.ServiceModel.IDefaultCommunicationTimeouts\n      description: The default communication time-outs.\n  overload: System.ServiceModel.Channels.StreamSecurityUpgradeProvider.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Channels.StreamSecurityUpgradeProvider.Identity\n  id: Identity\n  parent: System.ServiceModel.Channels.StreamSecurityUpgradeProvider\n  langs:\n  - csharp\n  name: Identity\n  nameWithType: StreamSecurityUpgradeProvider.Identity\n  fullName: System.ServiceModel.Channels.StreamSecurityUpgradeProvider.Identity\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the identity being used for the security upgrade.\n  remarks: This identity can be used for developing custom stream-level authentication schemes through inheriting from the upgrade provider class.\n  syntax:\n    content: public abstract System.ServiceModel.EndpointIdentity Identity { get; }\n    return:\n      type: System.ServiceModel.EndpointIdentity\n      description: Returns the <xref:System.ServiceModel.EndpointIdentity> of the client that requests the security upgrade.\n  overload: System.ServiceModel.Channels.StreamSecurityUpgradeProvider.Identity*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider\n  isExternal: false\n  name: System.ServiceModel.Channels.StreamUpgradeProvider\n- uid: System.ServiceModel.Channels.StreamSecurityUpgradeProvider.#ctor\n  parent: System.ServiceModel.Channels.StreamSecurityUpgradeProvider\n  isExternal: false\n  name: StreamSecurityUpgradeProvider()\n  nameWithType: StreamSecurityUpgradeProvider.StreamSecurityUpgradeProvider()\n  fullName: System.ServiceModel.Channels.StreamSecurityUpgradeProvider.StreamSecurityUpgradeProvider()\n- uid: System.ServiceModel.Channels.StreamSecurityUpgradeProvider.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  parent: System.ServiceModel.Channels.StreamSecurityUpgradeProvider\n  isExternal: false\n  name: StreamSecurityUpgradeProvider(IDefaultCommunicationTimeouts)\n  nameWithType: StreamSecurityUpgradeProvider.StreamSecurityUpgradeProvider(IDefaultCommunicationTimeouts)\n  fullName: System.ServiceModel.Channels.StreamSecurityUpgradeProvider.StreamSecurityUpgradeProvider(IDefaultCommunicationTimeouts)\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts\n  parent: System.ServiceModel\n  isExternal: true\n  name: IDefaultCommunicationTimeouts\n  nameWithType: IDefaultCommunicationTimeouts\n  fullName: System.ServiceModel.IDefaultCommunicationTimeouts\n- uid: System.ServiceModel.Channels.StreamSecurityUpgradeProvider.Identity\n  parent: System.ServiceModel.Channels.StreamSecurityUpgradeProvider\n  isExternal: false\n  name: Identity\n  nameWithType: StreamSecurityUpgradeProvider.Identity\n  fullName: System.ServiceModel.Channels.StreamSecurityUpgradeProvider.Identity\n- uid: System.ServiceModel.EndpointIdentity\n  parent: System.ServiceModel\n  isExternal: true\n  name: EndpointIdentity\n  nameWithType: EndpointIdentity\n  fullName: System.ServiceModel.EndpointIdentity\n- uid: System.ServiceModel.Channels.StreamSecurityUpgradeProvider.#ctor*\n  parent: System.ServiceModel.Channels.StreamSecurityUpgradeProvider\n  isExternal: false\n  name: StreamSecurityUpgradeProvider\n  nameWithType: StreamSecurityUpgradeProvider.StreamSecurityUpgradeProvider\n- uid: System.ServiceModel.Channels.StreamSecurityUpgradeProvider.Identity*\n  parent: System.ServiceModel.Channels.StreamSecurityUpgradeProvider\n  isExternal: false\n  name: Identity\n  nameWithType: StreamSecurityUpgradeProvider.Identity\n"}