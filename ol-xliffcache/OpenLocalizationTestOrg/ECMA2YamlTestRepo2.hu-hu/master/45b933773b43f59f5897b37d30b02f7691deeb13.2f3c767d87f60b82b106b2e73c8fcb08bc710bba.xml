{"nodes":[{"pos":[1816,1905],"content":"Serves as the abstract base class for validation controls that perform typed comparisons.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serves as the abstract base class for validation controls that perform typed comparisons.","pos":[0,89]}]},{"pos":[1918,4092],"content":"The BaseCompareValidator class is inherited by validation controls that compare values, such as the <xref:System.Web.UI.WebControls.CompareValidator> and <xref:System.Web.UI.WebControls.RangeValidator> controls, to provide basic common functionality.       Use the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> property to specify the data type that that the values are converted to before being compared.      > [!NOTE] >  If the value of the input control being validated cannot be converted to the specified data type, validation fails. The <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> property of the validation control is set to `false`.       The BaseCompareValidator class also contains several static properties and methods that are useful when performing comparison validations. You can determine whether a string can be converted to a specific data type by using the <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A> method. The maximum year that can be represented by a two-digit year is contained in the <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> property. The <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> method allows you to convert a two-digit year to a four-digit year.      > [!NOTE] >  When you use validator controls that derive from the BaseCompareValidator control inside an <xref:System.Web.UI.UpdatePanel> control, make sure that the validator control and the control it is associated with are in the same panel. For more information about using the <xref:System.Web.UI.UpdatePanel> control for partial-page updates, see [Partial-Page Rendering Overview](~/add/includes/ajax-current-ext-md.md).       For more information about validation controls, see <xref:System.Web.UI.WebControls.BaseValidator>.      ## Accessibility    The markup rendered by default for this control might not conform to accessibility standards such as the Web Content Accessibility Guidelines 1.0 (WCAG) priority 1 guidelines. For details about accessibility support for this control, see [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The BaseCompareValidator class is inherited by validation controls that compare values, such as the &lt;xref:System.Web.UI.WebControls.CompareValidator&gt; and &lt;xref:System.Web.UI.WebControls.RangeValidator&gt; controls, to provide basic common functionality.","pos":[0,250],"source":"The BaseCompareValidator class is inherited by validation controls that compare values, such as the <xref:System.Web.UI.WebControls.CompareValidator> and <xref:System.Web.UI.WebControls.RangeValidator> controls, to provide basic common functionality."},{"content":"Use the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A&gt; property to specify the data type that that the values are converted to before being compared.","pos":[257,421],"source":"       Use the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> property to specify the data type that that the values are converted to before being compared."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the value of the input control being validated cannot be converted to the specified data type, validation fails.","pos":[427,555],"source":"      > [!NOTE] >  If the value of the input control being validated cannot be converted to the specified data type, validation fails."},{"content":"The &lt;xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A&gt; property of the validation control is set to <ph id=\"ph1\">`false`</ph>.","pos":[556,671],"source":" The <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> property of the validation control is set to `false`."},{"content":"The BaseCompareValidator class also contains several static properties and methods that are useful when performing comparison validations.","pos":[678,816]},{"content":"You can determine whether a string can be converted to a specific data type by using the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A&gt; method.","pos":[817,981],"source":" You can determine whether a string can be converted to a specific data type by using the <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A> method."},{"content":"The maximum year that can be represented by a two-digit year is contained in the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A&gt; property.","pos":[982,1140],"source":" The maximum year that can be represented by a two-digit year is contained in the <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> property."},{"content":"The &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A&gt; method allows you to convert a two-digit year to a four-digit year.","pos":[1141,1281],"source":" The <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> method allows you to convert a two-digit year to a four-digit year."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When you use validator controls that derive from the BaseCompareValidator control inside an &lt;xref:System.Web.UI.UpdatePanel&gt; control, make sure that the validator control and the control it is associated with are in the same panel.","pos":[1287,1531],"source":"      > [!NOTE] >  When you use validator controls that derive from the BaseCompareValidator control inside an <xref:System.Web.UI.UpdatePanel> control, make sure that the validator control and the control it is associated with are in the same panel."},{"content":"For more information about using the &lt;xref:System.Web.UI.UpdatePanel&gt; control for partial-page updates, see <bpt id=\"p1\">[</bpt>Partial-Page Rendering Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1532,1713],"source":" For more information about using the <xref:System.Web.UI.UpdatePanel> control for partial-page updates, see [Partial-Page Rendering Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"For more information about validation controls, see &lt;xref:System.Web.UI.WebControls.BaseValidator&gt;.","pos":[1720,1819],"source":"       For more information about validation controls, see <xref:System.Web.UI.WebControls.BaseValidator>."},{"content":"Accessibility    The markup rendered by default for this control might not conform to accessibility standards such as the Web Content Accessibility Guidelines 1.0 (WCAG) priority 1 guidelines.","pos":[1828,2020]},{"content":"For details about accessibility support for this control, see <bpt id=\"p1\">[</bpt>ASP.NET Controls and Accessibility<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2021,2159],"source":" For details about accessibility support for this control, see [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[14164,14272],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.BaseCompareValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.BaseCompareValidator\"></xref> class."},{"pos":[14284,14638],"content":"Because the <xref:System.Web.UI.WebControls.BaseCompareValidator> class is abstract, you cannot create a <xref:System.Web.UI.WebControls.BaseCompareValidator> object directly. This constructor is commonly called by the constructor of a derived class to initialize the properties defined in the <xref:System.Web.UI.WebControls.BaseCompareValidator> class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Because the <xref:System.Web.UI.WebControls.BaseCompareValidator> class is abstract, you cannot create a <xref:System.Web.UI.WebControls.BaseCompareValidator> object directly. This constructor is commonly called by the constructor of a derived class to initialize the properties defined in the <xref:System.Web.UI.WebControls.BaseCompareValidator> class.","pos":[0,354],"nodes":[{"content":"Because the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator&gt; class is abstract, you cannot create a &lt;xref:System.Web.UI.WebControls.BaseCompareValidator&gt; object directly.","pos":[0,175],"source":"Because the <xref:System.Web.UI.WebControls.BaseCompareValidator> class is abstract, you cannot create a <xref:System.Web.UI.WebControls.BaseCompareValidator> object directly."},{"content":"This constructor is commonly called by the constructor of a derived class to initialize the properties defined in the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator&gt; class.","pos":[176,354],"source":" This constructor is commonly called by the constructor of a derived class to initialize the properties defined in the <xref:System.Web.UI.WebControls.BaseCompareValidator> class."}]}]},{"pos":[15375,15526],"content":"Adds the HTML attributes and styles that need to be rendered for the control to the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Adds the HTML attributes and styles that need to be rendered for the control to the specified <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object."},{"pos":[15538,15848],"content":"The AddAttributesToRender method is used to render the attributes of the control in the HTML tag for the control. This method is typically overridden by control developers in derived classes to insert the appropriate attributes and styles to the <xref:System.Web.UI.HtmlTextWriter> output stream for a control.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The AddAttributesToRender method is used to render the attributes of the control in the HTML tag for the control. This method is typically overridden by control developers in derived classes to insert the appropriate attributes and styles to the <xref:System.Web.UI.HtmlTextWriter> output stream for a control.","pos":[0,310],"nodes":[{"content":"The AddAttributesToRender method is used to render the attributes of the control in the HTML tag for the control.","pos":[0,113]},{"content":"This method is typically overridden by control developers in derived classes to insert the appropriate attributes and styles to the &lt;xref:System.Web.UI.HtmlTextWriter&gt; output stream for a control.","pos":[114,310],"source":" This method is typically overridden by control developers in derived classes to insert the appropriate attributes and styles to the <xref:System.Web.UI.HtmlTextWriter> output stream for a control."}]}]},{"pos":[16050,16174],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the output stream to render HTML content on the client.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that represents the output stream to render HTML content on the client."},{"pos":[16888,17096],"content":"Determines whether the specified string can be converted to the specified data type. This version of the overloaded method tests currency, double, and date values using the format used by the current culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified string can be converted to the specified data type. This version of the overloaded method tests currency, double, and date values using the format used by the current culture.","pos":[0,208],"nodes":[{"content":"Determines whether the specified string can be converted to the specified data type.","pos":[0,84]},{"content":"This version of the overloaded method tests currency, double, and date values using the format used by the current culture.","pos":[85,208]}]}]},{"pos":[17109,17744],"content":"Use the CanConvert method to determine whether the specified string can be converted to the specified data type. This method is commonly used to test whether a string can be converted to a compatible data type before performing an operation that depends on that data type.       This version of the method tests the value using the format used by the current culture. To test the value using a culture-neutral format, use the <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29?displayProperty=fullName> overloaded version of this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the CanConvert method to determine whether the specified string can be converted to the specified data type. This method is commonly used to test whether a string can be converted to a compatible data type before performing an operation that depends on that data type.       This version of the method tests the value using the format used by the current culture. To test the value using a culture-neutral format, use the <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29?displayProperty=fullName> overloaded version of this method.","pos":[0,633],"nodes":[{"content":"Use the CanConvert method to determine whether the specified string can be converted to the specified data type.","pos":[0,112]},{"content":"This method is commonly used to test whether a string can be converted to a compatible data type before performing an operation that depends on that data type.","pos":[113,272]},{"content":"This version of the method tests the value using the format used by the current culture.","pos":[279,367]},{"content":"To test the value using a culture-neutral format, use the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29?displayProperty=fullName&gt; overloaded version of this method.","pos":[368,633],"source":" To test the value using a culture-neutral format, use the <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29?displayProperty=fullName> overloaded version of this method."}]}]},{"pos":[18331,18350],"content":"The string to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string to test.","pos":[0,19]}]},{"pos":[18442,18526],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ValidationDataType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.WebControls.ValidationDataType\"></xref> values."},{"pos":[18585,18794],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified data string can be converted to the specified data type; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified data string can be converted to the specified data type; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19551,19753],"content":"Determines whether the specified string can be converted to the specified data type. This version of the overloaded method allows you to specify whether values are tested using a culture-neutral format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified string can be converted to the specified data type. This version of the overloaded method allows you to specify whether values are tested using a culture-neutral format.","pos":[0,202],"nodes":[{"content":"Determines whether the specified string can be converted to the specified data type.","pos":[0,84]},{"content":"This version of the overloaded method allows you to specify whether values are tested using a culture-neutral format.","pos":[85,202]}]}]},{"pos":[19765,20515],"content":"Use the CanConvert method to determine whether the specified string can be converted to the specified data type. This method is commonly used to test whether a string can be converted to a compatible data type before performing an operation that depends on that data type. To indicate that values should be tested using a culture-neutral format, pass in `true` for the `cultureInvariant` parameter; otherwise, values are tested using the format used by the current culture. When testing a value using the format used by the current culture, consider using the <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=fullName> overloaded version of this method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the CanConvert method to determine whether the specified string can be converted to the specified data type.","pos":[0,112]},{"content":"This method is commonly used to test whether a string can be converted to a compatible data type before performing an operation that depends on that data type.","pos":[113,272]},{"content":"To indicate that values should be tested using a culture-neutral format, pass in <ph id=\"ph1\">`true`</ph> for the <ph id=\"ph2\">`cultureInvariant`</ph> parameter; otherwise, values are tested using the format used by the current culture.","pos":[273,473],"source":" To indicate that values should be tested using a culture-neutral format, pass in `true` for the `cultureInvariant` parameter; otherwise, values are tested using the format used by the current culture."},{"content":"When testing a value using the format used by the current culture, consider using the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=fullName&gt; overloaded version of this method.","pos":[474,750],"source":" When testing a value using the format used by the current culture, consider using the <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=fullName> overloaded version of this method."}]},{"pos":[20734,20753],"content":"The string to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string to test.","pos":[0,19]}]},{"pos":[20845,20941],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ValidationDataType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.WebControls.ValidationDataType\"></xref> enumeration values."},{"pos":[21015,21197],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to test values using a culture-neutral format; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to test values using a culture-neutral format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21256,21465],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified data string can be converted to the specified data type; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified data string can be converted to the specified data type; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22384,22575],"content":"Compares two strings using the specified operator and data type. This version of the overloaded method compares currency, double, and date values using the format used by the current culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares two strings using the specified operator and data type. This version of the overloaded method compares currency, double, and date values using the format used by the current culture.","pos":[0,191],"nodes":[{"content":"Compares two strings using the specified operator and data type.","pos":[0,64]},{"content":"This version of the overloaded method compares currency, double, and date values using the format used by the current culture.","pos":[65,191]}]}]},{"pos":[22588,23543],"content":"The Compare method is used to test whether the value of the `leftText` parameter relates to the value of the `rightText` parameter in the manner specified by the `op` parameter. The `type` parameter specifies the data type of the values being compared.      > [!NOTE] >  If the `op` parameter is set to `ValidationCompareOperator.DataTypeCheck`, this method tests only the value of the `leftText` parameter for the data type specified by the `type` parameter. The `rightText` parameter is ignored.       This version of the method compares the values using the format used by the current culture. To compare the values using a culture-neutral format, use the <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=fullName> overloaded version of this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Compare method is used to test whether the value of the <ph id=\"ph1\">`leftText`</ph> parameter relates to the value of the <ph id=\"ph2\">`rightText`</ph> parameter in the manner specified by the <ph id=\"ph3\">`op`</ph> parameter.","pos":[0,177],"source":"The Compare method is used to test whether the value of the `leftText` parameter relates to the value of the `rightText` parameter in the manner specified by the `op` parameter."},{"content":"The <ph id=\"ph1\">`type`</ph> parameter specifies the data type of the values being compared.","pos":[178,252],"source":" The `type` parameter specifies the data type of the values being compared."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the <ph id=\"ph2\">`op`</ph> parameter is set to <ph id=\"ph3\">`ValidationCompareOperator.DataTypeCheck`</ph>, this method tests only the value of the <ph id=\"ph4\">`leftText`</ph> parameter for the data type specified by the <ph id=\"ph5\">`type`</ph> parameter.","pos":[258,459],"source":"      > [!NOTE] >  If the `op` parameter is set to `ValidationCompareOperator.DataTypeCheck`, this method tests only the value of the `leftText` parameter for the data type specified by the `type` parameter."},{"content":"The <ph id=\"ph1\">`rightText`</ph> parameter is ignored.","pos":[460,497],"source":" The `rightText` parameter is ignored."},{"content":"This version of the method compares the values using the format used by the current culture.","pos":[504,596]},{"content":"To compare the values using a culture-neutral format, use the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=fullName&gt; overloaded version of this method.","pos":[597,950],"source":" To compare the values using a culture-neutral format, use the <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=fullName> overloaded version of this method."}]},{"pos":[23822,23865],"content":"The value on the left side of the operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value on the left side of the operator.","pos":[0,43]}]},{"pos":[23931,23975],"content":"The value on the right side of the operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value on the right side of the operator.","pos":[0,44]}]},{"pos":[24072,24163],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ValidationCompareOperator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.WebControls.ValidationCompareOperator\"></xref> values."},{"pos":[24255,24339],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ValidationDataType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.WebControls.ValidationDataType\"></xref> values."},{"pos":[24398,24680],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">leftValue</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter relates to the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">rightValue</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter in the manner specified by the <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph3\">op</ph><ept id=\"p4\">&lt;/code&gt;</ept> parameter; otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>leftValue</code> parameter relates to the <code>rightValue</code> parameter in the manner specified by the <code>op</code> parameter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25704,25890],"content":"Compares two strings using the specified operator and validation data type. This version of the overload allows you to specify whether values are compared using a culture-neutral format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares two strings using the specified operator and validation data type. This version of the overload allows you to specify whether values are compared using a culture-neutral format.","pos":[0,186],"nodes":[{"content":"Compares two strings using the specified operator and validation data type.","pos":[0,75]},{"content":"This version of the overload allows you to specify whether values are compared using a culture-neutral format.","pos":[76,186]}]}]},{"pos":[25903,27006],"content":"The Compare method is used to test whether the value of the `leftText` parameter relates to the value of the `rightText` parameter in the manner specified by the `op` parameter. The `type` parameter specifies the data type of the values being compared.      > [!NOTE] >  If the `op` parameter is set to `ValidationCompareOperator.DataTypeCheck`, this method tests only the value of the `leftText` parameter for the data type specified by the `type` parameter. The `rightText` parameter is ignored.       To indicate that values should be compared using a culture-neutral format, pass in `true` for the `cultureInvariantLeftText` and `cultureInvariantRightText` parameters; otherwise, the values are compared using the format used by the current culture. When comparing values using the format used by the current culture, consider using the <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=fullName> overloaded version of this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Compare method is used to test whether the value of the <ph id=\"ph1\">`leftText`</ph> parameter relates to the value of the <ph id=\"ph2\">`rightText`</ph> parameter in the manner specified by the <ph id=\"ph3\">`op`</ph> parameter.","pos":[0,177],"source":"The Compare method is used to test whether the value of the `leftText` parameter relates to the value of the `rightText` parameter in the manner specified by the `op` parameter."},{"content":"The <ph id=\"ph1\">`type`</ph> parameter specifies the data type of the values being compared.","pos":[178,252],"source":" The `type` parameter specifies the data type of the values being compared."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the <ph id=\"ph2\">`op`</ph> parameter is set to <ph id=\"ph3\">`ValidationCompareOperator.DataTypeCheck`</ph>, this method tests only the value of the <ph id=\"ph4\">`leftText`</ph> parameter for the data type specified by the <ph id=\"ph5\">`type`</ph> parameter.","pos":[258,459],"source":"      > [!NOTE] >  If the `op` parameter is set to `ValidationCompareOperator.DataTypeCheck`, this method tests only the value of the `leftText` parameter for the data type specified by the `type` parameter."},{"content":"The <ph id=\"ph1\">`rightText`</ph> parameter is ignored.","pos":[460,497],"source":" The `rightText` parameter is ignored."},{"content":"To indicate that values should be compared using a culture-neutral format, pass in <ph id=\"ph1\">`true`</ph> for the <ph id=\"ph2\">`cultureInvariantLeftText`</ph> and <ph id=\"ph3\">`cultureInvariantRightText`</ph> parameters; otherwise, the values are compared using the format used by the current culture.","pos":[504,753],"source":"       To indicate that values should be compared using a culture-neutral format, pass in `true` for the `cultureInvariantLeftText` and `cultureInvariantRightText` parameters; otherwise, the values are compared using the format used by the current culture."},{"content":"When comparing values using the format used by the current culture, consider using the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=fullName&gt; overloaded version of this method.","pos":[754,1098],"source":" When comparing values using the format used by the current culture, consider using the <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=fullName> overloaded version of this method."}]},{"pos":[27348,27391],"content":"The value on the left side of the operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value on the left side of the operator.","pos":[0,43]}]},{"pos":[27473,27668],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert the left side value to a culture-neutral format; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to convert the left side value to a culture-neutral format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[27734,27778],"content":"The value on the right side of the operator.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value on the right side of the operator.","pos":[0,44]}]},{"pos":[27861,28057],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert the right side value to a culture-neutral format; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to convert the right side value to a culture-neutral format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28154,28245],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ValidationCompareOperator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.WebControls.ValidationCompareOperator\"></xref> values."},{"pos":[28337,28421],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ValidationDataType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.WebControls.ValidationDataType\"></xref> values."},{"pos":[28480,28762],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">leftValue</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter relates to the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">rightValue</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter in the manner specified by the <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph3\">op</ph><ept id=\"p4\">&lt;/code&gt;</ept> parameter; otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>leftValue</code> parameter relates to the <code>rightValue</code> parameter in the manner specified by the <code>op</code> parameter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[29498,29695],"content":"Converts the specified text into an object of the specified data type. This version of the overloaded method converts currency, double, and date values using the format used by the current culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified text into an object of the specified data type. This version of the overloaded method converts currency, double, and date values using the format used by the current culture.","pos":[0,197],"nodes":[{"content":"Converts the specified text into an object of the specified data type.","pos":[0,70]},{"content":"This version of the overloaded method converts currency, double, and date values using the format used by the current culture.","pos":[71,197]}]}]},{"pos":[29708,30427],"content":"The Convert method is used to convert text into an object of the specified data type. Although the method returns `true` or `false` to indicate whether the conversion was successful, the converted value is stored in the `value` `out` parameter.      > [!NOTE] >  If the conversion is unsuccessful, the `value` parameter is set to `null`.       This version of the method converts values using the format used by the current culture. To convert values using a culture-neutral format, use the <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29?displayProperty=fullName> overloaded version of this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Convert method is used to convert text into an object of the specified data type.","pos":[0,85]},{"content":"Although the method returns <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph> to indicate whether the conversion was successful, the converted value is stored in the <ph id=\"ph3\">`value`</ph> <ph id=\"ph4\">`out`</ph> parameter.","pos":[86,244],"source":" Although the method returns `true` or `false` to indicate whether the conversion was successful, the converted value is stored in the `value` `out` parameter."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the conversion is unsuccessful, the <ph id=\"ph2\">`value`</ph> parameter is set to <ph id=\"ph3\">`null`</ph>.","pos":[250,337],"source":"      > [!NOTE] >  If the conversion is unsuccessful, the `value` parameter is set to `null`."},{"content":"This version of the method converts values using the format used by the current culture.","pos":[344,432]},{"content":"To convert values using a culture-neutral format, use the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29?displayProperty=fullName&gt; overloaded version of this method.","pos":[433,714],"source":" To convert values using a culture-neutral format, use the <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29?displayProperty=fullName> overloaded version of this method."}]},{"pos":[30642,30662],"content":"The text to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text to convert.","pos":[0,20]}]},{"pos":[30754,30838],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ValidationDataType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.WebControls.ValidationDataType\"></xref> values."},{"pos":[30900,31012],"content":"When this method returns, contains an object with the conversion result. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains an object with the conversion result. This parameter is passed uninitialized.","pos":[0,112],"nodes":[{"content":"When this method returns, contains an object with the conversion result.","pos":[0,72]},{"content":"This parameter is passed uninitialized.","pos":[73,112]}]}]},{"pos":[31071,31239],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the conversion is successful; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the conversion is successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[32029,32220],"content":"Converts the specified text into an object of the specified data type. This version of the overloaded method allows you to specify whether values are converted using a culture-neutral format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified text into an object of the specified data type. This version of the overloaded method allows you to specify whether values are converted using a culture-neutral format.","pos":[0,191],"nodes":[{"content":"Converts the specified text into an object of the specified data type.","pos":[0,70]},{"content":"This version of the overloaded method allows you to specify whether values are converted using a culture-neutral format.","pos":[71,191]}]}]},{"pos":[32233,33083],"content":"The Convert method is used to convert text into an object of the specified data type. Although the method returns `true` or `false` to indicate whether the conversion was successful, the converted value is stored in the `value``out` parameter.      > [!NOTE] >  If the conversion is unsuccessful, the `value` parameter is set to `null`.       To indicate that values should be converted using a culture-neutral format, pass in `true` for the `cultureInvariant` parameter; otherwise, values are converted using the format used by the current culture. When converting a value using the format used by the current culture, consider using the <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29?displayProperty=fullName> overloaded version of this method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Convert method is used to convert text into an object of the specified data type.","pos":[0,85]},{"content":"Although the method returns <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph> to indicate whether the conversion was successful, the converted value is stored in the <ph id=\"ph3\">`value``out`</ph> parameter.","pos":[86,243],"source":" Although the method returns `true` or `false` to indicate whether the conversion was successful, the converted value is stored in the `value``out` parameter."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the conversion is unsuccessful, the <ph id=\"ph2\">`value`</ph> parameter is set to <ph id=\"ph3\">`null`</ph>.","pos":[249,336],"source":"      > [!NOTE] >  If the conversion is unsuccessful, the `value` parameter is set to `null`."},{"content":"To indicate that values should be converted using a culture-neutral format, pass in <ph id=\"ph1\">`true`</ph> for the <ph id=\"ph2\">`cultureInvariant`</ph> parameter; otherwise, values are converted using the format used by the current culture.","pos":[343,549],"source":"       To indicate that values should be converted using a culture-neutral format, pass in `true` for the `cultureInvariant` parameter; otherwise, values are converted using the format used by the current culture."},{"content":"When converting a value using the format used by the current culture, consider using the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29?displayProperty=fullName&gt; overloaded version of this method.","pos":[550,845],"source":" When converting a value using the format used by the current culture, consider using the <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29?displayProperty=fullName> overloaded version of this method."}]},{"pos":[33321,33341],"content":"The text to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text to convert.","pos":[0,20]}]},{"pos":[33433,33517],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ValidationDataType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.WebControls.ValidationDataType\"></xref> values."},{"pos":[33591,33773],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert values to a culture-neutral format; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to convert values to a culture-neutral format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[33835,33947],"content":"When this method returns, contains an object with the conversion result. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains an object with the conversion result. This parameter is passed uninitialized.","pos":[0,112],"nodes":[{"content":"When this method returns, contains an object with the conversion result.","pos":[0,72]},{"content":"This parameter is passed uninitialized.","pos":[73,112]}]}]},{"pos":[34006,34174],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the conversion is successful; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the conversion is successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[34735,34846],"content":"Gets or sets a value indicating whether values are converted to a culture-neutral format before being compared.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether values are converted to a culture-neutral format before being compared.","pos":[0,111]}]},{"pos":[34859,35457],"content":"When the CultureInvariantValues property is set to `true`, properties of the control that are not strongly typed are converted to a culture-neutral format before being compared. When this property is set to `false`, values are converted to the format of the current culture. The CultureInvariantValues property does not affect values that are entered by users of the control on a Web page.       This property cannot be set by themes or by style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the CultureInvariantValues property is set to <ph id=\"ph1\">`true`</ph>, properties of the control that are not strongly typed are converted to a culture-neutral format before being compared.","pos":[0,177],"source":"When the CultureInvariantValues property is set to `true`, properties of the control that are not strongly typed are converted to a culture-neutral format before being compared."},{"content":"When this property is set to <ph id=\"ph1\">`false`</ph>, values are converted to the format of the current culture.","pos":[178,274],"source":" When this property is set to `false`, values are converted to the format of the current culture."},{"content":"The CultureInvariantValues property does not affect values that are entered by users of the control on a Web page.","pos":[275,389]},{"content":"This property cannot be set by themes or by style sheet themes.","pos":[396,459]},{"content":"For more information, see &lt;xref:System.Web.UI.ThemeableAttribute&gt; and <bpt id=\"p1\">[</bpt>ASP.NET Themes and Skins<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[460,596],"source":" For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[35589,35874],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert values to a culture-neutral format before they are compared; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.The default is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to convert values to a culture-neutral format before they are compared; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[36390,36456],"content":"Gets the maximum year that can be represented by a two-digit year.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the maximum year that can be represented by a two-digit year.","pos":[0,66]}]},{"pos":[36468,37037],"content":"Use the CutoffYear property to determine the maximum year that can be represented by a two-digit year in a 100-year range. For example, if this property contains the value `2029`, you can represent the years 1930 to 2029 using a two-digit year. The two-digit year 30 is interpreted as 1930, while 29 is interpreted as 2029. You cannot change the value of this property directly; however, you can change the maximum year that can be represented by a two-digit year by setting the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the CutoffYear property to determine the maximum year that can be represented by a two-digit year in a 100-year range.","pos":[0,122]},{"content":"For example, if this property contains the value <ph id=\"ph1\">`2029`</ph>, you can represent the years 1930 to 2029 using a two-digit year.","pos":[123,244],"source":" For example, if this property contains the value `2029`, you can represent the years 1930 to 2029 using a two-digit year."},{"content":"The two-digit year 30 is interpreted as 1930, while 29 is interpreted as 2029.","pos":[245,323]},{"content":"You cannot change the value of this property directly; however, you can change the maximum year that can be represented by a two-digit year by setting the &lt;xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName&gt; property.","pos":[324,569],"source":" You cannot change the value of this property directly; however, you can change the maximum year that can be represented by a two-digit year by setting the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property."}]},{"pos":[37158,37219],"content":"The maximum year that can be represented by a two-digit year.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum year that can be represented by a two-digit year.","pos":[0,61]}]},{"pos":[37787,37877],"content":"Determines whether the validation control can be rendered for a newer (\"uplevel\") browser.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the validation control can be rendered for a newer (\"uplevel\") browser.","pos":[0,90]}]},{"pos":[37890,38376],"content":"The DetermineRenderUplevel method is a helper function used primarily by the <xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A> property to determine whether the client's browser supports \"uplevel\" rendering (rendering on a newer browser). The <xref:System.Web.UI.WebControls.BaseCompareValidator> class overrides this method to return `false` if the current culture uses a non-Gregorian calendar.      > [!NOTE] >  This method is used primarily by control developers.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The DetermineRenderUplevel method is a helper function used primarily by the &lt;xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A&gt; property to determine whether the client's browser supports \"uplevel\" rendering (rendering on a newer browser).","pos":[0,252],"source":"The DetermineRenderUplevel method is a helper function used primarily by the <xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A> property to determine whether the client's browser supports \"uplevel\" rendering (rendering on a newer browser)."},{"content":"The &lt;xref:System.Web.UI.WebControls.BaseCompareValidator&gt; class overrides this method to return <ph id=\"ph1\">`false`</ph> if the current culture uses a non-Gregorian calendar.","pos":[253,410],"source":" The <xref:System.Web.UI.WebControls.BaseCompareValidator> class overrides this method to return `false` if the current culture uses a non-Gregorian calendar."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers.","pos":[416,481],"source":"      > [!NOTE] >  This method is used primarily by control developers."}]},{"pos":[38529,38732],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the validation control can be rendered for an \"uplevel\" browser; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the validation control can be rendered for an \"uplevel\" browser; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[39297,39399],"content":"Determines the order in which the month, day, and year appear in a date value for the current culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines the order in which the month, day, and year appear in a date value for the current culture.","pos":[0,102]}]},{"pos":[39412,39870],"content":"The month, day, and year of a date value can appear in different orders depending on the current culture settings. The GetDateElementOrder method is used to determine the order in which these values appear. The following table shows the different values returned by this method.      |Date element order|Return value|   |------------------------|------------------|   |Day, Month, Year|\"dmy\"|   |Month, Day, Year|\"mdy\"|   |Year, Month, Day|\"ymd\"|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The month, day, and year of a date value can appear in different orders depending on the current culture settings. The GetDateElementOrder method is used to determine the order in which these values appear. The following table shows the different values returned by this method.      |Date element order|Return value|   |------------------------|------------------|   |Day, Month, Year|\"dmy\"|   |Month, Day, Year|\"mdy\"|   |Year, Month, Day|\"ymd\"|","pos":[0,446],"nodes":[{"content":"The month, day, and year of a date value can appear in different orders depending on the current culture settings.","pos":[0,114]},{"content":"The GetDateElementOrder method is used to determine the order in which these values appear.","pos":[115,206]},{"content":"The following table shows the different values returned by this method.","pos":[207,278]},{"content":"|Date element order|Return value|   |------------------------|------------------|   |Day, Month, Year|\"dmy\"|   |Month, Day, Year|\"mdy\"|   |Year, Month, Day|\"ymd\"|","pos":[284,446]}]}]},{"pos":[40019,40135],"content":"A string that represents the order in which the month, day, and year appear in a date value for the current culture.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents the order in which the month, day, and year appear in a date value for the current culture.","pos":[0,116]}]},{"pos":[40700,40777],"content":"Generates the four-digit year representation of the specified two-digit year.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates the four-digit year representation of the specified two-digit year.","pos":[0,77]}]},{"pos":[40790,41797],"content":"Use the GetFullYear method to generate the four-digit year representation of the specified two-digit year. The four-digit year representation depends on the value of the <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> property, which contains the maximum year that can be represented by a two-digit year in a 100-year range. For example, if the <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> property contains the value `2029`, the GetFullYear method returns a year between 1930 and 2029. The two-digit year 30 is interpreted as 1930, while 29 is interpreted as 2029. You can change the maximum year that can be represented by a two-digit year by setting the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property.      > [!NOTE] >  Because this method is `static`, you can use it without creating an instance of the class by qualifying the method name along with the class name--for example, `BaseCompareValidator.GetFullYear`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the GetFullYear method to generate the four-digit year representation of the specified two-digit year.","pos":[0,106]},{"content":"The four-digit year representation depends on the value of the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A&gt; property, which contains the maximum year that can be represented by a two-digit year in a 100-year range.","pos":[107,344],"source":" The four-digit year representation depends on the value of the <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> property, which contains the maximum year that can be represented by a two-digit year in a 100-year range."},{"content":"For example, if the &lt;xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A&gt; property contains the value <ph id=\"ph1\">`2029`</ph>, the GetFullYear method returns a year between 1930 and 2029.","pos":[345,529],"source":" For example, if the <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> property contains the value `2029`, the GetFullYear method returns a year between 1930 and 2029."},{"content":"The two-digit year 30 is interpreted as 1930, while 29 is interpreted as 2029.","pos":[530,608]},{"content":"You can change the maximum year that can be represented by a two-digit year by setting the &lt;xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName&gt; property.","pos":[609,790],"source":" You can change the maximum year that can be represented by a two-digit year by setting the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Because this method is <ph id=\"ph2\">`static`</ph>, you can use it without creating an instance of the class by qualifying the method name along with the class name--for example, <ph id=\"ph3\">`BaseCompareValidator.GetFullYear`</ph>.","pos":[796,1004],"source":"      > [!NOTE] >  Because this method is `static`, you can use it without creating an instance of the class by qualifying the method name along with the class name--for example, `BaseCompareValidator.GetFullYear`."}]},{"pos":[41952,41969],"content":"A two-digit year.","needQuote":true,"needEscape":true,"nodes":[{"content":"A two-digit year.","pos":[0,17]}]},{"pos":[42026,42093],"content":"The four-digit year representation of the specified two-digit year.","needQuote":true,"needEscape":true,"nodes":[{"content":"The four-digit year representation of the specified two-digit year.","pos":[0,67]}]},{"pos":[42568,42673],"content":"Gets or sets the data type that the values being compared are converted to before the comparison is made.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the data type that the values being compared are converted to before the comparison is made.","pos":[0,105]}]},{"pos":[42686,44554],"content":"Use the Type property to specify the data type used for comparison. The Type property is used differently by the various comparison validation controls.      > [!IMPORTANT] >  When the Type property is set to <xref:System.Web.UI.WebControls.ValidationDataType> and the current calendar type is non-Gregorian, the validator performs server-side validation only. The validator client script supports only Gregorian calendars.       For example, in the <xref:System.Web.UI.WebControls.RangeValidator> control, all values being compared (the upper bound, lower bound, and value of the input control) are converted to the specified data type before any comparison is performed. However, if you use a <xref:System.Web.UI.WebControls.CompareValidator> control and set its <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> property to `ValidationCompareOperator.DataTypeCheck`, only the value of the input control is converted to the specified data type.      > [!NOTE] >  If the value of the input control associated with the validation control cannot be converted to the specified data type, validation fails. The <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> property of the validation control is set to `false`.       The following table lists the values that you can use for the Type property.      |Data type|Description|   |---------------|-----------------|   |`String`|Specifies a string data type.|   |`Integer`|Specifies a 32-bit signed integer data type.|   |`Double`|Specifies a double-precision floating-point number data type.|   |`Date`|Specifies a date data type.|   |`Currency`|Specifies a monetary data type.|       This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the Type property to specify the data type used for comparison.","pos":[0,67]},{"content":"The Type property is used differently by the various comparison validation controls.","pos":[68,152]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  When the Type property is set to &lt;xref:System.Web.UI.WebControls.ValidationDataType&gt; and the current calendar type is non-Gregorian, the validator performs server-side validation only.","pos":[158,360],"source":"      > [!IMPORTANT] >  When the Type property is set to <xref:System.Web.UI.WebControls.ValidationDataType> and the current calendar type is non-Gregorian, the validator performs server-side validation only."},{"content":"The validator client script supports only Gregorian calendars.","pos":[361,423]},{"content":"For example, in the &lt;xref:System.Web.UI.WebControls.RangeValidator&gt; control, all values being compared (the upper bound, lower bound, and value of the input control) are converted to the specified data type before any comparison is performed.","pos":[430,672],"source":"       For example, in the <xref:System.Web.UI.WebControls.RangeValidator> control, all values being compared (the upper bound, lower bound, and value of the input control) are converted to the specified data type before any comparison is performed."},{"content":"However, if you use a &lt;xref:System.Web.UI.WebControls.CompareValidator&gt; control and set its &lt;xref:System.Web.UI.WebControls.CompareValidator.Operator%2A&gt; property to <ph id=\"ph1\">`ValidationCompareOperator.DataTypeCheck`</ph>, only the value of the input control is converted to the specified data type.","pos":[673,958],"source":" However, if you use a <xref:System.Web.UI.WebControls.CompareValidator> control and set its <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> property to `ValidationCompareOperator.DataTypeCheck`, only the value of the input control is converted to the specified data type."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the value of the input control associated with the validation control cannot be converted to the specified data type, validation fails.","pos":[964,1115],"source":"      > [!NOTE] >  If the value of the input control associated with the validation control cannot be converted to the specified data type, validation fails."},{"content":"The &lt;xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A&gt; property of the validation control is set to <ph id=\"ph1\">`false`</ph>.","pos":[1116,1231],"source":" The <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> property of the validation control is set to `false`."},{"content":"The following table lists the values that you can use for the Type property.","pos":[1238,1314]},{"content":"|Data type|Description|   |---------------|-----------------|   |<ph id=\"ph1\">`String`</ph>|Specifies a string data type.|   |<ph id=\"ph2\">`Integer`</ph>|Specifies a 32-bit signed integer data type.|   |<ph id=\"ph3\">`Double`</ph>|Specifies a double-precision floating-point number data type.|   |<ph id=\"ph4\">`Date`</ph>|Specifies a date data type.|   |<ph id=\"ph5\">`Currency`</ph>|Specifies a monetary data type.|       This property cannot be set by themes or style sheet themes.","pos":[1320,1711],"source":"      |Data type|Description|   |---------------|-----------------|   |`String`|Specifies a string data type.|   |`Integer`|Specifies a 32-bit signed integer data type.|   |`Double`|Specifies a double-precision floating-point number data type.|   |`Date`|Specifies a date data type.|   |`Currency`|Specifies a monetary data type.|       This property cannot be set by themes or style sheet themes."},{"content":"For more information, see &lt;xref:System.Web.UI.ThemeableAttribute&gt; and <bpt id=\"p1\">[</bpt>ASP.NET Themes and Skins<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1712,1848],"source":" For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[45156,45339],"content":"One of the <xref href=\"System.Web.UI.WebControls.ValidationDataType\"></xref> enumeration values. The default value is <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ValidationDataType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values.","pos":[0,96],"source":"One of the <xref href=\"System.Web.UI.WebControls.ValidationDataType\"></xref> enumeration values."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[97,183],"source":" The default value is <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>."}]},{"pos":[45533,45648],"content":"The specified data type is not one of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ValidationDataType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The specified data type is not one of the <xref href=\"System.Web.UI.WebControls.ValidationDataType\"></xref> values."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.BaseCompareValidator\n  id: BaseCompareValidator\n  children:\n  - System.Web.UI.WebControls.BaseCompareValidator.#ctor\n  - System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)\n  - System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean)\n  - System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)\n  - System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.Boolean,System.String,System.Boolean,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)\n  - System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)\n  - System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean,System.Object@)\n  - System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues\n  - System.Web.UI.WebControls.BaseCompareValidator.CutoffYear\n  - System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel\n  - System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder\n  - System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)\n  - System.Web.UI.WebControls.BaseCompareValidator.Type\n  langs:\n  - csharp\n  name: BaseCompareValidator\n  nameWithType: BaseCompareValidator\n  fullName: System.Web.UI.WebControls.BaseCompareValidator\n  type: Class\n  summary: Serves as the abstract base class for validation controls that perform typed comparisons.\n  remarks: \"The BaseCompareValidator class is inherited by validation controls that compare values, such as the <xref:System.Web.UI.WebControls.CompareValidator> and <xref:System.Web.UI.WebControls.RangeValidator> controls, to provide basic common functionality.  \\n  \\n Use the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> property to specify the data type that that the values are converted to before being compared.  \\n  \\n> [!NOTE]\\n>  If the value of the input control being validated cannot be converted to the specified data type, validation fails. The <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> property of the validation control is set to `false`.  \\n  \\n The BaseCompareValidator class also contains several static properties and methods that are useful when performing comparison validations. You can determine whether a string can be converted to a specific data type by using the <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A> method. The maximum year that can be represented by a two-digit year is contained in the <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> property. The <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> method allows you to convert a two-digit year to a four-digit year.  \\n  \\n> [!NOTE]\\n>  When you use validator controls that derive from the BaseCompareValidator control inside an <xref:System.Web.UI.UpdatePanel> control, make sure that the validator control and the control it is associated with are in the same panel. For more information about using the <xref:System.Web.UI.UpdatePanel> control for partial-page updates, see [Partial-Page Rendering Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n For more information about validation controls, see <xref:System.Web.UI.WebControls.BaseValidator>.  \\n  \\n## Accessibility  \\n The markup rendered by default for this control might not conform to accessibility standards such as the Web Content Accessibility Guidelines 1.0 (WCAG) priority 1 guidelines. For details about accessibility support for this control, see [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: 'public abstract class BaseCompareValidator : System.Web.UI.WebControls.BaseValidator'\n  inheritance:\n  - System.Object\n  - System.Web.UI.Control\n  - System.Web.UI.WebControls.WebControl\n  - System.Web.UI.WebControls.Label\n  - System.Web.UI.WebControls.BaseValidator\n  implements: []\n  inheritedMembers:\n  - System.Web.UI.Control.Adapter\n  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)\n  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)\n  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory\n  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.BindingContainer\n  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)\n  - System.Web.UI.Control.ChildControlsCreated\n  - System.Web.UI.Control.ClearCachedClientID\n  - System.Web.UI.Control.ClearChildControlState\n  - System.Web.UI.Control.ClearChildState\n  - System.Web.UI.Control.ClearChildViewState\n  - System.Web.UI.Control.ClearEffectiveClientIDMode\n  - System.Web.UI.Control.ClientID\n  - System.Web.UI.Control.ClientIDMode\n  - System.Web.UI.Control.ClientIDSeparator\n  - System.Web.UI.Control.Context\n  - System.Web.UI.Control.Controls\n  - System.Web.UI.Control.CreateChildControls\n  - System.Web.UI.Control.CreateControlCollection\n  - System.Web.UI.Control.DataBind\n  - System.Web.UI.Control.DataBind(System.Boolean)\n  - System.Web.UI.Control.DataBindChildren\n  - System.Web.UI.Control.DataBinding\n  - System.Web.UI.Control.DataItemContainer\n  - System.Web.UI.Control.DataKeysContainer\n  - System.Web.UI.Control.DesignMode\n  - System.Web.UI.Control.Dispose\n  - System.Web.UI.Control.Disposed\n  - System.Web.UI.Control.EnableViewState\n  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.EnsureChildControls\n  - System.Web.UI.Control.EnsureID\n  - System.Web.UI.Control.Events\n  - System.Web.UI.Control.FindControl(System.String)\n  - System.Web.UI.Control.FindControl(System.String,System.Int32)\n  - System.Web.UI.Control.Focus\n  - System.Web.UI.Control.GetDesignModeState\n  - System.Web.UI.Control.GetRouteUrl(System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)\n  - System.Web.UI.Control.HasChildViewState\n  - System.Web.UI.Control.HasControls\n  - System.Web.UI.Control.HasEvents\n  - System.Web.UI.Control.ID\n  - System.Web.UI.Control.IdSeparator\n  - System.Web.UI.Control.Init\n  - System.Web.UI.Control.IsChildControlStateCleared\n  - System.Web.UI.Control.IsLiteralContent\n  - System.Web.UI.Control.IsTrackingViewState\n  - System.Web.UI.Control.IsViewStateEnabled\n  - System.Web.UI.Control.Load\n  - System.Web.UI.Control.LoadControlState(System.Object)\n  - System.Web.UI.Control.LoadViewStateByID\n  - System.Web.UI.Control.MapPathSecure(System.String)\n  - System.Web.UI.Control.NamingContainer\n  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.OnDataBinding(System.EventArgs)\n  - System.Web.UI.Control.OnLoad(System.EventArgs)\n  - System.Web.UI.Control.OpenFile(System.String)\n  - System.Web.UI.Control.Page\n  - System.Web.UI.Control.Parent\n  - System.Web.UI.Control.PreRender\n  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)\n  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)\n  - System.Web.UI.Control.RenderingCompatibility\n  - System.Web.UI.Control.ResolveAdapter\n  - System.Web.UI.Control.ResolveClientUrl(System.String)\n  - System.Web.UI.Control.ResolveUrl(System.String)\n  - System.Web.UI.Control.SaveControlState\n  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)\n  - System.Web.UI.Control.Site\n  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions\n  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.TemplateControl\n  - System.Web.UI.Control.TemplateSourceDirectory\n  - System.Web.UI.Control.UniqueID\n  - System.Web.UI.Control.Unload\n  - System.Web.UI.Control.ValidateRequestMode\n  - System.Web.UI.Control.ViewState\n  - System.Web.UI.Control.ViewStateIgnoresCase\n  - System.Web.UI.Control.ViewStateMode\n  - System.Web.UI.Control.Visible\n  - System.Web.UI.WebControls.BaseValidator.AssociatedControlID\n  - System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty(System.String,System.String)\n  - System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid\n  - System.Web.UI.WebControls.BaseValidator.ControlToValidate\n  - System.Web.UI.WebControls.BaseValidator.Display\n  - System.Web.UI.WebControls.BaseValidator.EnableClientScript\n  - System.Web.UI.WebControls.BaseValidator.Enabled\n  - System.Web.UI.WebControls.BaseValidator.ErrorMessage\n  - System.Web.UI.WebControls.BaseValidator.EvaluateIsValid\n  - System.Web.UI.WebControls.BaseValidator.ForeColor\n  - System.Web.UI.WebControls.BaseValidator.GetControlRenderID(System.String)\n  - System.Web.UI.WebControls.BaseValidator.GetControlValidationValue(System.String)\n  - System.Web.UI.WebControls.BaseValidator.GetValidationProperty(System.Object)\n  - System.Web.UI.WebControls.BaseValidator.IsUnobtrusive\n  - System.Web.UI.WebControls.BaseValidator.IsValid\n  - System.Web.UI.WebControls.BaseValidator.OnInit(System.EventArgs)\n  - System.Web.UI.WebControls.BaseValidator.OnPreRender(System.EventArgs)\n  - System.Web.UI.WebControls.BaseValidator.OnUnload(System.EventArgs)\n  - System.Web.UI.WebControls.BaseValidator.PropertiesValid\n  - System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript\n  - System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration\n  - System.Web.UI.WebControls.BaseValidator.Render(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.BaseValidator.RenderUplevel\n  - System.Web.UI.WebControls.BaseValidator.SetFocusOnError\n  - System.Web.UI.WebControls.BaseValidator.Text\n  - System.Web.UI.WebControls.BaseValidator.Validate\n  - System.Web.UI.WebControls.BaseValidator.ValidationGroup\n  - System.Web.UI.WebControls.Label.AddParsedSubObject(System.Object)\n  - System.Web.UI.WebControls.Label.LoadViewState(System.Object)\n  - System.Web.UI.WebControls.Label.RenderContents(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.Label.SupportsDisabledAttribute\n  - System.Web.UI.WebControls.Label.TagKey\n  - System.Web.UI.WebControls.WebControl.AccessKey\n  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)\n  - System.Web.UI.WebControls.WebControl.Attributes\n  - System.Web.UI.WebControls.WebControl.BackColor\n  - System.Web.UI.WebControls.WebControl.BorderColor\n  - System.Web.UI.WebControls.WebControl.BorderStyle\n  - System.Web.UI.WebControls.WebControl.BorderWidth\n  - System.Web.UI.WebControls.WebControl.ControlStyle\n  - System.Web.UI.WebControls.WebControl.ControlStyleCreated\n  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)\n  - System.Web.UI.WebControls.WebControl.CreateControlStyle\n  - System.Web.UI.WebControls.WebControl.CssClass\n  - System.Web.UI.WebControls.WebControl.DisabledCssClass\n  - System.Web.UI.WebControls.WebControl.EnableTheming\n  - System.Web.UI.WebControls.WebControl.Font\n  - System.Web.UI.WebControls.WebControl.HasAttributes\n  - System.Web.UI.WebControls.WebControl.Height\n  - System.Web.UI.WebControls.WebControl.IsEnabled\n  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)\n  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.SaveViewState\n  - System.Web.UI.WebControls.WebControl.SkinID\n  - System.Web.UI.WebControls.WebControl.Style\n  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)\n  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)\n  - System.Web.UI.WebControls.WebControl.TabIndex\n  - System.Web.UI.WebControls.WebControl.TagName\n  - System.Web.UI.WebControls.WebControl.ToolTip\n  - System.Web.UI.WebControls.WebControl.TrackViewState\n  - System.Web.UI.WebControls.WebControl.Width\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BaseCompareValidator.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  langs:\n  - csharp\n  name: BaseCompareValidator()\n  nameWithType: BaseCompareValidator.BaseCompareValidator()\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.BaseCompareValidator()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.BaseCompareValidator\"></xref> class.\n  remarks: Because the <xref:System.Web.UI.WebControls.BaseCompareValidator> class is abstract, you cannot create a <xref:System.Web.UI.WebControls.BaseCompareValidator> object directly. This constructor is commonly called by the constructor of a derived class to initialize the properties defined in the <xref:System.Web.UI.WebControls.BaseCompareValidator> class.\n  syntax:\n    content: protected BaseCompareValidator ();\n    parameters: []\n  overload: System.Web.UI.WebControls.BaseCompareValidator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  langs:\n  - csharp\n  name: AddAttributesToRender(HtmlTextWriter)\n  nameWithType: BaseCompareValidator.AddAttributesToRender(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(HtmlTextWriter)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Adds the HTML attributes and styles that need to be rendered for the control to the specified <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object.\n  remarks: The AddAttributesToRender method is used to render the attributes of the control in the HTML tag for the control. This method is typically overridden by control developers in derived classes to insert the appropriate attributes and styles to the <xref:System.Web.UI.HtmlTextWriter> output stream for a control.\n  syntax:\n    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);\n    parameters:\n    - id: writer\n      type: System.Web.UI.HtmlTextWriter\n      description: An <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> that represents the output stream to render HTML content on the client.\n  overload: System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)\n  id: CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  langs:\n  - csharp\n  name: CanConvert(String,ValidationDataType)\n  nameWithType: BaseCompareValidator.CanConvert(String,ValidationDataType)\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.CanConvert(String,ValidationDataType)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Determines whether the specified string can be converted to the specified data type. This version of the overloaded method tests currency, double, and date values using the format used by the current culture.\n  remarks: \"Use the CanConvert method to determine whether the specified string can be converted to the specified data type. This method is commonly used to test whether a string can be converted to a compatible data type before performing an operation that depends on that data type.  \\n  \\n This version of the method tests the value using the format used by the current culture. To test the value using a culture-neutral format, use the <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29?displayProperty=fullName> overloaded version of this method.\"\n  example:\n  - \"The following example demonstrates using the CanConvert method to compare two integer values and determine whether the second integer can be converted.  \\n  \\n [!code-vb[BaseCompareValidatorCanConvert#1](~/add/codesnippet/visualbasic/8a6eb682-0825-49a6-8ab0-_1.aspx)]\\n [!code-cs[BaseCompareValidatorCanConvert#1](~/add/codesnippet/csharp/8a6eb682-0825-49a6-8ab0-_1.aspx)]\"\n  syntax:\n    content: public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type);\n    parameters:\n    - id: text\n      type: System.String\n      description: The string to test.\n    - id: type\n      type: System.Web.UI.WebControls.ValidationDataType\n      description: One of the <xref href=\"System.Web.UI.WebControls.ValidationDataType\"></xref> values.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified data string can be converted to the specified data type; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.BaseCompareValidator.CanConvert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean)\n  id: CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean)\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  langs:\n  - csharp\n  name: CanConvert(String,ValidationDataType,Boolean)\n  nameWithType: BaseCompareValidator.CanConvert(String,ValidationDataType,Boolean)\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.CanConvert(String,ValidationDataType,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Determines whether the specified string can be converted to the specified data type. This version of the overloaded method allows you to specify whether values are tested using a culture-neutral format.\n  remarks: Use the CanConvert method to determine whether the specified string can be converted to the specified data type. This method is commonly used to test whether a string can be converted to a compatible data type before performing an operation that depends on that data type. To indicate that values should be tested using a culture-neutral format, pass in `true` for the `cultureInvariant` parameter; otherwise, values are tested using the format used by the current culture. When testing a value using the format used by the current culture, consider using the <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=fullName> overloaded version of this method.\n  syntax:\n    content: public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant);\n    parameters:\n    - id: text\n      type: System.String\n      description: The string to test.\n    - id: type\n      type: System.Web.UI.WebControls.ValidationDataType\n      description: One of the <xref href=\"System.Web.UI.WebControls.ValidationDataType\"></xref> enumeration values.\n    - id: cultureInvariant\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to test values using a culture-neutral format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified data string can be converted to the specified data type; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.BaseCompareValidator.CanConvert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)\n  id: Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  langs:\n  - csharp\n  name: Compare(String,String,ValidationCompareOperator,ValidationDataType)\n  nameWithType: BaseCompareValidator.Compare(String,String,ValidationCompareOperator,ValidationDataType)\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.Compare(String,String,ValidationCompareOperator,ValidationDataType)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Compares two strings using the specified operator and data type. This version of the overloaded method compares currency, double, and date values using the format used by the current culture.\n  remarks: \"The Compare method is used to test whether the value of the `leftText` parameter relates to the value of the `rightText` parameter in the manner specified by the `op` parameter. The `type` parameter specifies the data type of the values being compared.  \\n  \\n> [!NOTE]\\n>  If the `op` parameter is set to `ValidationCompareOperator.DataTypeCheck`, this method tests only the value of the `leftText` parameter for the data type specified by the `type` parameter. The `rightText` parameter is ignored.  \\n  \\n This version of the method compares the values using the format used by the current culture. To compare the values using a culture-neutral format, use the <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=fullName> overloaded version of this method.\"\n  syntax:\n    content: protected static bool Compare (string leftText, string rightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);\n    parameters:\n    - id: leftText\n      type: System.String\n      description: The value on the left side of the operator.\n    - id: rightText\n      type: System.String\n      description: The value on the right side of the operator.\n    - id: op\n      type: System.Web.UI.WebControls.ValidationCompareOperator\n      description: One of the <xref href=\"System.Web.UI.WebControls.ValidationCompareOperator\"></xref> values.\n    - id: type\n      type: System.Web.UI.WebControls.ValidationDataType\n      description: One of the <xref href=\"System.Web.UI.WebControls.ValidationDataType\"></xref> values.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>leftValue</code> parameter relates to the <code>rightValue</code> parameter in the manner specified by the <code>op</code> parameter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.BaseCompareValidator.Compare*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.Boolean,System.String,System.Boolean,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)\n  id: Compare(System.String,System.Boolean,System.String,System.Boolean,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  langs:\n  - csharp\n  name: Compare(String,Boolean,String,Boolean,ValidationCompareOperator,ValidationDataType)\n  nameWithType: BaseCompareValidator.Compare(String,Boolean,String,Boolean,ValidationCompareOperator,ValidationDataType)\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.Compare(String,Boolean,String,Boolean,ValidationCompareOperator,ValidationDataType)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Compares two strings using the specified operator and validation data type. This version of the overload allows you to specify whether values are compared using a culture-neutral format.\n  remarks: \"The Compare method is used to test whether the value of the `leftText` parameter relates to the value of the `rightText` parameter in the manner specified by the `op` parameter. The `type` parameter specifies the data type of the values being compared.  \\n  \\n> [!NOTE]\\n>  If the `op` parameter is set to `ValidationCompareOperator.DataTypeCheck`, this method tests only the value of the `leftText` parameter for the data type specified by the `type` parameter. The `rightText` parameter is ignored.  \\n  \\n To indicate that values should be compared using a culture-neutral format, pass in `true` for the `cultureInvariantLeftText` and `cultureInvariantRightText` parameters; otherwise, the values are compared using the format used by the current culture. When comparing values using the format used by the current culture, consider using the <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=fullName> overloaded version of this method.\"\n  syntax:\n    content: protected static bool Compare (string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);\n    parameters:\n    - id: leftText\n      type: System.String\n      description: The value on the left side of the operator.\n    - id: cultureInvariantLeftText\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to convert the left side value to a culture-neutral format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: rightText\n      type: System.String\n      description: The value on the right side of the operator.\n    - id: cultureInvariantRightText\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to convert the right side value to a culture-neutral format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: op\n      type: System.Web.UI.WebControls.ValidationCompareOperator\n      description: One of the <xref href=\"System.Web.UI.WebControls.ValidationCompareOperator\"></xref> values.\n    - id: type\n      type: System.Web.UI.WebControls.ValidationDataType\n      description: One of the <xref href=\"System.Web.UI.WebControls.ValidationDataType\"></xref> values.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>leftValue</code> parameter relates to the <code>rightValue</code> parameter in the manner specified by the <code>op</code> parameter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.BaseCompareValidator.Compare*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)\n  id: Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  langs:\n  - csharp\n  name: Convert(String,ValidationDataType,Object)\n  nameWithType: BaseCompareValidator.Convert(String,ValidationDataType,Object)\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.Convert(String,ValidationDataType,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Converts the specified text into an object of the specified data type. This version of the overloaded method converts currency, double, and date values using the format used by the current culture.\n  remarks: \"The Convert method is used to convert text into an object of the specified data type. Although the method returns `true` or `false` to indicate whether the conversion was successful, the converted value is stored in the `value` `out` parameter.  \\n  \\n> [!NOTE]\\n>  If the conversion is unsuccessful, the `value` parameter is set to `null`.  \\n  \\n This version of the method converts values using the format used by the current culture. To convert values using a culture-neutral format, use the <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29?displayProperty=fullName> overloaded version of this method.\"\n  syntax:\n    content: protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, out object value);\n    parameters:\n    - id: text\n      type: System.String\n      description: The text to convert.\n    - id: type\n      type: System.Web.UI.WebControls.ValidationDataType\n      description: One of the <xref href=\"System.Web.UI.WebControls.ValidationDataType\"></xref> values.\n    - id: value\n      type: System.Object\n      description: When this method returns, contains an object with the conversion result. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the conversion is successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.BaseCompareValidator.Convert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean,System.Object@)\n  id: Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean,System.Object@)\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  langs:\n  - csharp\n  name: Convert(String,ValidationDataType,Boolean,Object)\n  nameWithType: BaseCompareValidator.Convert(String,ValidationDataType,Boolean,Object)\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.Convert(String,ValidationDataType,Boolean,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Converts the specified text into an object of the specified data type. This version of the overloaded method allows you to specify whether values are converted using a culture-neutral format.\n  remarks: \"The Convert method is used to convert text into an object of the specified data type. Although the method returns `true` or `false` to indicate whether the conversion was successful, the converted value is stored in the `value``out` parameter.  \\n  \\n> [!NOTE]\\n>  If the conversion is unsuccessful, the `value` parameter is set to `null`.  \\n  \\n To indicate that values should be converted using a culture-neutral format, pass in `true` for the `cultureInvariant` parameter; otherwise, values are converted using the format used by the current culture. When converting a value using the format used by the current culture, consider using the <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29?displayProperty=fullName> overloaded version of this method.\"\n  syntax:\n    content: protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, out object value);\n    parameters:\n    - id: text\n      type: System.String\n      description: The text to convert.\n    - id: type\n      type: System.Web.UI.WebControls.ValidationDataType\n      description: One of the <xref href=\"System.Web.UI.WebControls.ValidationDataType\"></xref> values.\n    - id: cultureInvariant\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to convert values to a culture-neutral format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: value\n      type: System.Object\n      description: When this method returns, contains an object with the conversion result. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the conversion is successful; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.BaseCompareValidator.Convert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues\n  id: CultureInvariantValues\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  langs:\n  - csharp\n  name: CultureInvariantValues\n  nameWithType: BaseCompareValidator.CultureInvariantValues\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether values are converted to a culture-neutral format before being compared.\n  remarks: \"When the CultureInvariantValues property is set to `true`, properties of the control that are not strongly typed are converted to a culture-neutral format before being compared. When this property is set to `false`, values are converted to the format of the current culture. The CultureInvariantValues property does not affect values that are entered by users of the control on a Web page.  \\n  \\n This property cannot be set by themes or by style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public bool CultureInvariantValues { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to convert values to a culture-neutral format before they are compared; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BaseCompareValidator.CutoffYear\n  id: CutoffYear\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  langs:\n  - csharp\n  name: CutoffYear\n  nameWithType: BaseCompareValidator.CutoffYear\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.CutoffYear\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the maximum year that can be represented by a two-digit year.\n  remarks: Use the CutoffYear property to determine the maximum year that can be represented by a two-digit year in a 100-year range. For example, if this property contains the value `2029`, you can represent the years 1930 to 2029 using a two-digit year. The two-digit year 30 is interpreted as 1930, while 29 is interpreted as 2029. You cannot change the value of this property directly; however, you can change the maximum year that can be represented by a two-digit year by setting the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property.\n  syntax:\n    content: protected static int CutoffYear { get; }\n    return:\n      type: System.Int32\n      description: The maximum year that can be represented by a two-digit year.\n  overload: System.Web.UI.WebControls.BaseCompareValidator.CutoffYear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel\n  id: DetermineRenderUplevel\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  langs:\n  - csharp\n  name: DetermineRenderUplevel()\n  nameWithType: BaseCompareValidator.DetermineRenderUplevel()\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Determines whether the validation control can be rendered for a newer (\"uplevel\") browser.\n  remarks: \"The DetermineRenderUplevel method is a helper function used primarily by the <xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A> property to determine whether the client's browser supports \\\"uplevel\\\" rendering (rendering on a newer browser). The <xref:System.Web.UI.WebControls.BaseCompareValidator> class overrides this method to return `false` if the current culture uses a non-Gregorian calendar.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers.\"\n  syntax:\n    content: protected override bool DetermineRenderUplevel ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the validation control can be rendered for an \"uplevel\" browser; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder\n  id: GetDateElementOrder\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  langs:\n  - csharp\n  name: GetDateElementOrder()\n  nameWithType: BaseCompareValidator.GetDateElementOrder()\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Determines the order in which the month, day, and year appear in a date value for the current culture.\n  remarks: \"The month, day, and year of a date value can appear in different orders depending on the current culture settings. The GetDateElementOrder method is used to determine the order in which these values appear. The following table shows the different values returned by this method.  \\n  \\n|Date element order|Return value|  \\n|------------------------|------------------|  \\n|Day, Month, Year|\\\"dmy\\\"|  \\n|Month, Day, Year|\\\"mdy\\\"|  \\n|Year, Month, Day|\\\"ymd\\\"|\"\n  syntax:\n    content: protected static string GetDateElementOrder ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the order in which the month, day, and year appear in a date value for the current culture.\n  overload: System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)\n  id: GetFullYear(System.Int32)\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  langs:\n  - csharp\n  name: GetFullYear(Int32)\n  nameWithType: BaseCompareValidator.GetFullYear(Int32)\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Generates the four-digit year representation of the specified two-digit year.\n  remarks: \"Use the GetFullYear method to generate the four-digit year representation of the specified two-digit year. The four-digit year representation depends on the value of the <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> property, which contains the maximum year that can be represented by a two-digit year in a 100-year range. For example, if the <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> property contains the value `2029`, the GetFullYear method returns a year between 1930 and 2029. The two-digit year 30 is interpreted as 1930, while 29 is interpreted as 2029. You can change the maximum year that can be represented by a two-digit year by setting the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property.  \\n  \\n> [!NOTE]\\n>  Because this method is `static`, you can use it without creating an instance of the class by qualifying the method name along with the class name--for example, `BaseCompareValidator.GetFullYear`.\"\n  syntax:\n    content: protected static int GetFullYear (int shortYear);\n    parameters:\n    - id: shortYear\n      type: System.Int32\n      description: A two-digit year.\n    return:\n      type: System.Int32\n      description: The four-digit year representation of the specified two-digit year.\n  overload: System.Web.UI.WebControls.BaseCompareValidator.GetFullYear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.BaseCompareValidator.Type\n  id: Type\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  langs:\n  - csharp\n  name: Type\n  nameWithType: BaseCompareValidator.Type\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.Type\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the data type that the values being compared are converted to before the comparison is made.\n  remarks: \"Use the Type property to specify the data type used for comparison. The Type property is used differently by the various comparison validation controls.  \\n  \\n> [!IMPORTANT]\\n>  When the Type property is set to <xref:System.Web.UI.WebControls.ValidationDataType> and the current calendar type is non-Gregorian, the validator performs server-side validation only. The validator client script supports only Gregorian calendars.  \\n  \\n For example, in the <xref:System.Web.UI.WebControls.RangeValidator> control, all values being compared (the upper bound, lower bound, and value of the input control) are converted to the specified data type before any comparison is performed. However, if you use a <xref:System.Web.UI.WebControls.CompareValidator> control and set its <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> property to `ValidationCompareOperator.DataTypeCheck`, only the value of the input control is converted to the specified data type.  \\n  \\n> [!NOTE]\\n>  If the value of the input control associated with the validation control cannot be converted to the specified data type, validation fails. The <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> property of the validation control is set to `false`.  \\n  \\n The following table lists the values that you can use for the Type property.  \\n  \\n|Data type|Description|  \\n|---------------|-----------------|  \\n|`String`|Specifies a string data type.|  \\n|`Integer`|Specifies a 32-bit signed integer data type.|  \\n|`Double`|Specifies a double-precision floating-point number data type.|  \\n|`Date`|Specifies a date data type.|  \\n|`Currency`|Specifies a monetary data type.|  \\n  \\n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example demonstrates how to use the Type property to specify the data type that the values being compared are converted to before the comparison is made.  \\n  \\n [!code-cs[Classic CompareValidator Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_627_1.aspx)]\\n [!code-vb[Classic CompareValidator Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_627_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.WebControls.ValidationDataType Type { get; set; }\n    return:\n      type: System.Web.UI.WebControls.ValidationDataType\n      description: One of the <xref href=\"System.Web.UI.WebControls.ValidationDataType\"></xref> enumeration values. The default value is <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.BaseCompareValidator.Type*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The specified data type is not one of the <xref href=\"System.Web.UI.WebControls.ValidationDataType\"></xref> values.\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.WebControls.BaseValidator\n  isExternal: false\n  name: System.Web.UI.WebControls.BaseValidator\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Web.UI.WebControls.BaseCompareValidator.#ctor\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: BaseCompareValidator()\n  nameWithType: BaseCompareValidator.BaseCompareValidator()\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.BaseCompareValidator()\n- uid: System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: AddAttributesToRender(HtmlTextWriter)\n  nameWithType: BaseCompareValidator.AddAttributesToRender(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(HtmlTextWriter)\n- uid: System.Web.UI.HtmlTextWriter\n  parent: System.Web.UI\n  isExternal: false\n  name: HtmlTextWriter\n  nameWithType: HtmlTextWriter\n  fullName: System.Web.UI.HtmlTextWriter\n- uid: System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: CanConvert(String,ValidationDataType)\n  nameWithType: BaseCompareValidator.CanConvert(String,ValidationDataType)\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.CanConvert(String,ValidationDataType)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.WebControls.ValidationDataType\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: ValidationDataType\n  nameWithType: ValidationDataType\n  fullName: System.Web.UI.WebControls.ValidationDataType\n- uid: System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean)\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: CanConvert(String,ValidationDataType,Boolean)\n  nameWithType: BaseCompareValidator.CanConvert(String,ValidationDataType,Boolean)\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.CanConvert(String,ValidationDataType,Boolean)\n- uid: System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: Compare(String,String,ValidationCompareOperator,ValidationDataType)\n  nameWithType: BaseCompareValidator.Compare(String,String,ValidationCompareOperator,ValidationDataType)\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.Compare(String,String,ValidationCompareOperator,ValidationDataType)\n- uid: System.Web.UI.WebControls.ValidationCompareOperator\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: ValidationCompareOperator\n  nameWithType: ValidationCompareOperator\n  fullName: System.Web.UI.WebControls.ValidationCompareOperator\n- uid: System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.Boolean,System.String,System.Boolean,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: Compare(String,Boolean,String,Boolean,ValidationCompareOperator,ValidationDataType)\n  nameWithType: BaseCompareValidator.Compare(String,Boolean,String,Boolean,ValidationCompareOperator,ValidationDataType)\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.Compare(String,Boolean,String,Boolean,ValidationCompareOperator,ValidationDataType)\n- uid: System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: Convert(String,ValidationDataType,Object)\n  nameWithType: BaseCompareValidator.Convert(String,ValidationDataType,Object)\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.Convert(String,ValidationDataType,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean,System.Object@)\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: Convert(String,ValidationDataType,Boolean,Object)\n  nameWithType: BaseCompareValidator.Convert(String,ValidationDataType,Boolean,Object)\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.Convert(String,ValidationDataType,Boolean,Object)\n- uid: System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: CultureInvariantValues\n  nameWithType: BaseCompareValidator.CultureInvariantValues\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues\n- uid: System.Web.UI.WebControls.BaseCompareValidator.CutoffYear\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: CutoffYear\n  nameWithType: BaseCompareValidator.CutoffYear\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.CutoffYear\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: DetermineRenderUplevel()\n  nameWithType: BaseCompareValidator.DetermineRenderUplevel()\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel()\n- uid: System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: GetDateElementOrder()\n  nameWithType: BaseCompareValidator.GetDateElementOrder()\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder()\n- uid: System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: GetFullYear(Int32)\n  nameWithType: BaseCompareValidator.GetFullYear(Int32)\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(Int32)\n- uid: System.Web.UI.WebControls.BaseCompareValidator.Type\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: Type\n  nameWithType: BaseCompareValidator.Type\n  fullName: System.Web.UI.WebControls.BaseCompareValidator.Type\n- uid: System.Web.UI.WebControls.BaseCompareValidator.#ctor*\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: BaseCompareValidator\n  nameWithType: BaseCompareValidator.BaseCompareValidator\n- uid: System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender*\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: AddAttributesToRender\n  nameWithType: BaseCompareValidator.AddAttributesToRender\n- uid: System.Web.UI.WebControls.BaseCompareValidator.CanConvert*\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: CanConvert\n  nameWithType: BaseCompareValidator.CanConvert\n- uid: System.Web.UI.WebControls.BaseCompareValidator.Compare*\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: Compare\n  nameWithType: BaseCompareValidator.Compare\n- uid: System.Web.UI.WebControls.BaseCompareValidator.Convert*\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: Convert\n  nameWithType: BaseCompareValidator.Convert\n- uid: System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues*\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: CultureInvariantValues\n  nameWithType: BaseCompareValidator.CultureInvariantValues\n- uid: System.Web.UI.WebControls.BaseCompareValidator.CutoffYear*\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: CutoffYear\n  nameWithType: BaseCompareValidator.CutoffYear\n- uid: System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel*\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: DetermineRenderUplevel\n  nameWithType: BaseCompareValidator.DetermineRenderUplevel\n- uid: System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder*\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: GetDateElementOrder\n  nameWithType: BaseCompareValidator.GetDateElementOrder\n- uid: System.Web.UI.WebControls.BaseCompareValidator.GetFullYear*\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: GetFullYear\n  nameWithType: BaseCompareValidator.GetFullYear\n- uid: System.Web.UI.WebControls.BaseCompareValidator.Type*\n  parent: System.Web.UI.WebControls.BaseCompareValidator\n  isExternal: false\n  name: Type\n  nameWithType: BaseCompareValidator.Type\n"}