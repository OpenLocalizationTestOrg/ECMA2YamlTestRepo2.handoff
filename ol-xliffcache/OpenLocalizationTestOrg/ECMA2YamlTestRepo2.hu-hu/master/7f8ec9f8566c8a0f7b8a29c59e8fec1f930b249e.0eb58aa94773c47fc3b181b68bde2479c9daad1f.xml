{"nodes":[{"pos":[1251,1285],"content":"Represents an SSPI security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an SSPI security token.","pos":[0,34]}]},{"pos":[2608,2723],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.Tokens.SspiSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.SspiSecurityToken\"></xref> class."},{"pos":[2998,3038],"content":"The <xref:System.Net.NetworkCredential>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Net.NetworkCredential&gt;.","pos":[0,40],"source":"The <xref:System.Net.NetworkCredential>."}]},{"pos":[3127,3328],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the groups to which the Windows accounts belong are extracted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the groups to which the Windows accounts belong are extracted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3413,3600],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if unauthenticated (anonymous) callers are allowed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if unauthenticated (anonymous) callers are allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4502,4617],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.Tokens.SspiSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.SspiSecurityToken\"></xref> class."},{"pos":[4928,4989],"content":"The <xref:System.Security.Principal.TokenImpersonationLevel>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;.","pos":[0,61],"source":"The <xref:System.Security.Principal.TokenImpersonationLevel>."}]},{"pos":[5056,5226],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if NTLM authentication is allowed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if NTLM authentication is allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5315,5355],"content":"The <xref:System.Net.NetworkCredential>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Net.NetworkCredential&gt;.","pos":[0,40],"source":"The <xref:System.Net.NetworkCredential>."}]},{"pos":[5893,5958],"content":"Gets a value that indicates whether to allow NTLM authentication.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether to allow NTLM authentication.","pos":[0,65]}]},{"pos":[5971,6350],"content":"Setting this property to `true` allows authentication to downgrade to NTLM if Kerberos is not available.       Setting this property to `false` causes [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] to make a best-effort to throw an exception if NTLM is used. Note that setting this property to `false` may not prevent NTLM credentials from being sent over the wire.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Setting this property to <ph id=\"ph1\">`true`</ph> allows authentication to downgrade to NTLM if Kerberos is not available.","pos":[0,104],"source":"Setting this property to `true` allows authentication to downgrade to NTLM if Kerberos is not available."},{"content":"Setting this property to <ph id=\"ph1\">`false`</ph> causes <ph id=\"ph2\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> to make a best-effort to throw an exception if NTLM is used.","pos":[111,270],"source":"       Setting this property to `false` causes [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] to make a best-effort to throw an exception if NTLM is used."},{"content":"Note that setting this property to <ph id=\"ph1\">`false`</ph> may not prevent NTLM credentials from being sent over the wire.","pos":[271,377],"source":" Note that setting this property to `false` may not prevent NTLM credentials from being sent over the wire."}]},{"pos":[6464,6634],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if NTLM authentication is allowed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if NTLM authentication is allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7266,7329],"content":"Gets a value that indicates whether to allow anonymous callers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether to allow anonymous callers.","pos":[0,63]}]},{"pos":[7460,7629],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if anonymous callers are allowed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if anonymous callers are allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8299,8394],"content":"Gets a value that indicates whether to extract the groups to which the Windows accounts belong.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether to extract the groups to which the Windows accounts belong.","pos":[0,95]}]},{"pos":[8529,8730],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the groups to which the Windows accounts belong are extracted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the groups to which the Windows accounts belong are extracted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9259,9277],"content":"Gets the token ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the token ID.","pos":[0,18]}]},{"pos":[9393,9406],"content":"The token ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token ID.","pos":[0,13]}]},{"pos":[9986,10021],"content":"Gets the token impersonation level.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the token impersonation level.","pos":[0,35]}]},{"pos":[10223,10284],"content":"The <xref:System.Security.Principal.TokenImpersonationLevel>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;.","pos":[0,61],"source":"The <xref:System.Security.Principal.TokenImpersonationLevel>."}]},{"pos":[10875,10903],"content":"Gets the network credential.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the network credential.","pos":[0,28]}]},{"pos":[11062,11102],"content":"The <xref:System.Net.NetworkCredential>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Net.NetworkCredential&gt;.","pos":[0,40],"source":"The <xref:System.Net.NetworkCredential>."}]},{"pos":[11667,11702],"content":"Gets a collection of security keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of security keys.","pos":[0,35]}]},{"pos":[11989,12066],"content":"A collection of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A collection of <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>."},{"pos":[12611,12658],"content":"Gets the starting effective date for the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the starting effective date for the token.","pos":[0,47]}]},{"pos":[12785,12868],"content":"A <xref:System.DateTime> that represents the starting effective date for the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.DateTime&gt; that represents the starting effective date for the token.","pos":[0,83],"source":"A <xref:System.DateTime> that represents the starting effective date for the token."}]},{"pos":[13400,13439],"content":"Gets the expiration date for the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the expiration date for the token.","pos":[0,39]}]},{"pos":[13564,13639],"content":"A <xref:System.DateTime> that represents the expiration date for the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.DateTime&gt; that represents the expiration date for the token.","pos":[0,75],"source":"A <xref:System.DateTime> that represents the expiration date for the token."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  id: SspiSecurityToken\n  children:\n  - System.ServiceModel.Security.Tokens.SspiSecurityToken.#ctor(System.Net.NetworkCredential,System.Boolean,System.Boolean)\n  - System.ServiceModel.Security.Tokens.SspiSecurityToken.#ctor(System.Security.Principal.TokenImpersonationLevel,System.Boolean,System.Net.NetworkCredential)\n  - System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowNtlm\n  - System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowUnauthenticatedCallers\n  - System.ServiceModel.Security.Tokens.SspiSecurityToken.ExtractGroupsForWindowsAccounts\n  - System.ServiceModel.Security.Tokens.SspiSecurityToken.Id\n  - System.ServiceModel.Security.Tokens.SspiSecurityToken.ImpersonationLevel\n  - System.ServiceModel.Security.Tokens.SspiSecurityToken.NetworkCredential\n  - System.ServiceModel.Security.Tokens.SspiSecurityToken.SecurityKeys\n  - System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidFrom\n  - System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidTo\n  langs:\n  - csharp\n  name: SspiSecurityToken\n  nameWithType: SspiSecurityToken\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  type: Class\n  summary: Represents an SSPI security token.\n  syntax:\n    content: 'public class SspiSecurityToken : System.IdentityModel.Tokens.SecurityToken'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityToken\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1\n  - System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1\n  - System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.#ctor(System.Net.NetworkCredential,System.Boolean,System.Boolean)\n  id: '#ctor(System.Net.NetworkCredential,System.Boolean,System.Boolean)'\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  langs:\n  - csharp\n  name: SspiSecurityToken(NetworkCredential,Boolean,Boolean)\n  nameWithType: SspiSecurityToken.SspiSecurityToken(NetworkCredential,Boolean,Boolean)\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.SspiSecurityToken(NetworkCredential,Boolean,Boolean)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.SspiSecurityToken\"></xref> class.\n  syntax:\n    content: public SspiSecurityToken (System.Net.NetworkCredential networkCredential, bool extractGroupsForWindowsAccounts, bool allowUnauthenticatedCallers);\n    parameters:\n    - id: networkCredential\n      type: System.Net.NetworkCredential\n      description: The <xref:System.Net.NetworkCredential>.\n    - id: extractGroupsForWindowsAccounts\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the groups to which the Windows accounts belong are extracted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: allowUnauthenticatedCallers\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if unauthenticated (anonymous) callers are allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Security.Tokens.SspiSecurityToken.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.#ctor(System.Security.Principal.TokenImpersonationLevel,System.Boolean,System.Net.NetworkCredential)\n  id: '#ctor(System.Security.Principal.TokenImpersonationLevel,System.Boolean,System.Net.NetworkCredential)'\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  langs:\n  - csharp\n  name: SspiSecurityToken(TokenImpersonationLevel,Boolean,NetworkCredential)\n  nameWithType: SspiSecurityToken.SspiSecurityToken(TokenImpersonationLevel,Boolean,NetworkCredential)\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.SspiSecurityToken(TokenImpersonationLevel,Boolean,NetworkCredential)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.SspiSecurityToken\"></xref> class.\n  syntax:\n    content: public SspiSecurityToken (System.Security.Principal.TokenImpersonationLevel impersonationLevel, bool allowNtlm, System.Net.NetworkCredential networkCredential);\n    parameters:\n    - id: impersonationLevel\n      type: System.Security.Principal.TokenImpersonationLevel\n      description: The <xref:System.Security.Principal.TokenImpersonationLevel>.\n    - id: allowNtlm\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if NTLM authentication is allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: networkCredential\n      type: System.Net.NetworkCredential\n      description: The <xref:System.Net.NetworkCredential>.\n  overload: System.ServiceModel.Security.Tokens.SspiSecurityToken.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowNtlm\n  id: AllowNtlm\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  langs:\n  - csharp\n  name: AllowNtlm\n  nameWithType: SspiSecurityToken.AllowNtlm\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowNtlm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets a value that indicates whether to allow NTLM authentication.\n  remarks: \"Setting this property to `true` allows authentication to downgrade to NTLM if Kerberos is not available.  \\n  \\n Setting this property to `false` causes [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] to make a best-effort to throw an exception if NTLM is used. Note that setting this property to `false` may not prevent NTLM credentials from being sent over the wire.\"\n  syntax:\n    content: public bool AllowNtlm { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if NTLM authentication is allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowNtlm*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowUnauthenticatedCallers\n  id: AllowUnauthenticatedCallers\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  langs:\n  - csharp\n  name: AllowUnauthenticatedCallers\n  nameWithType: SspiSecurityToken.AllowUnauthenticatedCallers\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowUnauthenticatedCallers\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets a value that indicates whether to allow anonymous callers.\n  syntax:\n    content: public bool AllowUnauthenticatedCallers { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if anonymous callers are allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowUnauthenticatedCallers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.ExtractGroupsForWindowsAccounts\n  id: ExtractGroupsForWindowsAccounts\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  langs:\n  - csharp\n  name: ExtractGroupsForWindowsAccounts\n  nameWithType: SspiSecurityToken.ExtractGroupsForWindowsAccounts\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.ExtractGroupsForWindowsAccounts\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets a value that indicates whether to extract the groups to which the Windows accounts belong.\n  syntax:\n    content: public bool ExtractGroupsForWindowsAccounts { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the groups to which the Windows accounts belong are extracted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Security.Tokens.SspiSecurityToken.ExtractGroupsForWindowsAccounts*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.Id\n  id: Id\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  langs:\n  - csharp\n  name: Id\n  nameWithType: SspiSecurityToken.Id\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.Id\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets the token ID.\n  syntax:\n    content: public override string Id { get; }\n    return:\n      type: System.String\n      description: The token ID.\n  overload: System.ServiceModel.Security.Tokens.SspiSecurityToken.Id*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.ImpersonationLevel\n  id: ImpersonationLevel\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  langs:\n  - csharp\n  name: ImpersonationLevel\n  nameWithType: SspiSecurityToken.ImpersonationLevel\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.ImpersonationLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets the token impersonation level.\n  syntax:\n    content: public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }\n    return:\n      type: System.Security.Principal.TokenImpersonationLevel\n      description: The <xref:System.Security.Principal.TokenImpersonationLevel>.\n  overload: System.ServiceModel.Security.Tokens.SspiSecurityToken.ImpersonationLevel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.NetworkCredential\n  id: NetworkCredential\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  langs:\n  - csharp\n  name: NetworkCredential\n  nameWithType: SspiSecurityToken.NetworkCredential\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.NetworkCredential\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets the network credential.\n  syntax:\n    content: public System.Net.NetworkCredential NetworkCredential { get; }\n    return:\n      type: System.Net.NetworkCredential\n      description: The <xref:System.Net.NetworkCredential>.\n  overload: System.ServiceModel.Security.Tokens.SspiSecurityToken.NetworkCredential*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.SecurityKeys\n  id: SecurityKeys\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  langs:\n  - csharp\n  name: SecurityKeys\n  nameWithType: SspiSecurityToken.SecurityKeys\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.SecurityKeys\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets a collection of security keys.\n  syntax:\n    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}\n      description: A collection of <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>.\n  overload: System.ServiceModel.Security.Tokens.SspiSecurityToken.SecurityKeys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidFrom\n  id: ValidFrom\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  langs:\n  - csharp\n  name: ValidFrom\n  nameWithType: SspiSecurityToken.ValidFrom\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidFrom\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets the starting effective date for the token.\n  syntax:\n    content: public override DateTime ValidFrom { get; }\n    return:\n      type: System.DateTime\n      description: A <xref:System.DateTime> that represents the starting effective date for the token.\n  overload: System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidTo\n  id: ValidTo\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  langs:\n  - csharp\n  name: ValidTo\n  nameWithType: SspiSecurityToken.ValidTo\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidTo\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets the expiration date for the token.\n  syntax:\n    content: public override DateTime ValidTo { get; }\n    return:\n      type: System.DateTime\n      description: A <xref:System.DateTime> that represents the expiration date for the token.\n  overload: System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidTo*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: System.IdentityModel.Tokens.SecurityToken\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.#ctor(System.Net.NetworkCredential,System.Boolean,System.Boolean)\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: SspiSecurityToken(NetworkCredential,Boolean,Boolean)\n  nameWithType: SspiSecurityToken.SspiSecurityToken(NetworkCredential,Boolean,Boolean)\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.SspiSecurityToken(NetworkCredential,Boolean,Boolean)\n- uid: System.Net.NetworkCredential\n  parent: System.Net\n  isExternal: true\n  name: NetworkCredential\n  nameWithType: NetworkCredential\n  fullName: System.Net.NetworkCredential\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.#ctor(System.Security.Principal.TokenImpersonationLevel,System.Boolean,System.Net.NetworkCredential)\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: SspiSecurityToken(TokenImpersonationLevel,Boolean,NetworkCredential)\n  nameWithType: SspiSecurityToken.SspiSecurityToken(TokenImpersonationLevel,Boolean,NetworkCredential)\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.SspiSecurityToken(TokenImpersonationLevel,Boolean,NetworkCredential)\n- uid: System.Security.Principal.TokenImpersonationLevel\n  parent: System.Security.Principal\n  isExternal: true\n  name: TokenImpersonationLevel\n  nameWithType: TokenImpersonationLevel\n  fullName: System.Security.Principal.TokenImpersonationLevel\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowNtlm\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: AllowNtlm\n  nameWithType: SspiSecurityToken.AllowNtlm\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowNtlm\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowUnauthenticatedCallers\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: AllowUnauthenticatedCallers\n  nameWithType: SspiSecurityToken.AllowUnauthenticatedCallers\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowUnauthenticatedCallers\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.ExtractGroupsForWindowsAccounts\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: ExtractGroupsForWindowsAccounts\n  nameWithType: SspiSecurityToken.ExtractGroupsForWindowsAccounts\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.ExtractGroupsForWindowsAccounts\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.Id\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: Id\n  nameWithType: SspiSecurityToken.Id\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.Id\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.ImpersonationLevel\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: ImpersonationLevel\n  nameWithType: SspiSecurityToken.ImpersonationLevel\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.ImpersonationLevel\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.NetworkCredential\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: NetworkCredential\n  nameWithType: SspiSecurityToken.NetworkCredential\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.NetworkCredential\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.SecurityKeys\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: SecurityKeys\n  nameWithType: SspiSecurityToken.SecurityKeys\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.SecurityKeys\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<SecurityKey>\n  nameWithType: ReadOnlyCollection<SecurityKey>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Tokens.SecurityKey\n    name: SecurityKey\n    nameWithType: SecurityKey\n    fullName: SecurityKey\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidFrom\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: ValidFrom\n  nameWithType: SspiSecurityToken.ValidFrom\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidFrom\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidTo\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: ValidTo\n  nameWithType: SspiSecurityToken.ValidTo\n  fullName: System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidTo\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.#ctor*\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: SspiSecurityToken\n  nameWithType: SspiSecurityToken.SspiSecurityToken\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowNtlm*\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: AllowNtlm\n  nameWithType: SspiSecurityToken.AllowNtlm\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowUnauthenticatedCallers*\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: AllowUnauthenticatedCallers\n  nameWithType: SspiSecurityToken.AllowUnauthenticatedCallers\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.ExtractGroupsForWindowsAccounts*\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: ExtractGroupsForWindowsAccounts\n  nameWithType: SspiSecurityToken.ExtractGroupsForWindowsAccounts\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.Id*\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: Id\n  nameWithType: SspiSecurityToken.Id\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.ImpersonationLevel*\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: ImpersonationLevel\n  nameWithType: SspiSecurityToken.ImpersonationLevel\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.NetworkCredential*\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: NetworkCredential\n  nameWithType: SspiSecurityToken.NetworkCredential\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.SecurityKeys*\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: SecurityKeys\n  nameWithType: SspiSecurityToken.SecurityKeys\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidFrom*\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: ValidFrom\n  nameWithType: SspiSecurityToken.ValidFrom\n- uid: System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidTo*\n  parent: System.ServiceModel.Security.Tokens.SspiSecurityToken\n  isExternal: false\n  name: ValidTo\n  nameWithType: SspiSecurityToken.ValidTo\n"}