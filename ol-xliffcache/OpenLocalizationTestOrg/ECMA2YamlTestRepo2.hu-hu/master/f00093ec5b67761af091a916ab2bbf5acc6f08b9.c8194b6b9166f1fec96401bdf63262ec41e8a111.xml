{"nodes":[{"pos":[465,602],"content":"Represents a link between an event provider and an event log that the provider publishes events into. This object cannot be instantiated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a link between an event provider and an event log that the provider publishes events into. This object cannot be instantiated.","pos":[0,137],"nodes":[{"content":"Represents a link between an event provider and an event log that the provider publishes events into.","pos":[0,101]},{"content":"This object cannot be instantiated.","pos":[102,137]}]}]},{"pos":[1157,1198],"content":"Gets the localized name of the event log.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the localized name of the event log.","pos":[0,41]}]},{"pos":[1314,1381],"content":"Returns a string that contains the localized name of the event log.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string that contains the localized name of the event log.","pos":[0,67]}]},{"pos":[1892,2064],"content":"Gets a Boolean value that determines whether the event log is imported, rather than defined in the event provider. An imported event log is defined in a different provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a Boolean value that determines whether the event log is imported, rather than defined in the event provider. An imported event log is defined in a different provider.","pos":[0,172],"nodes":[{"content":"Gets a Boolean value that determines whether the event log is imported, rather than defined in the event provider.","pos":[0,114]},{"content":"An imported event log is defined in a different provider.","pos":[115,172]}]}]},{"pos":[2178,2429],"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the event log is imported by the event provider, and returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the event log is not imported by the event provider.","needQuote":true,"needEscape":true,"source":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the event log is imported by the event provider, and returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the event log is not imported by the event provider."},{"pos":[2924,2997],"content":"Gets the non-localized name of the event log associated with this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the non-localized name of the event log associated with this object.","pos":[0,73]}]},{"pos":[3109,3208],"content":"Returns a string that contains the non-localized name of the event log associated with this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string that contains the non-localized name of the event log associated with this object.","pos":[0,99]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink\n  id: EventLogLink\n  children:\n  - System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName\n  - System.Diagnostics.Eventing.Reader.EventLogLink.IsImported\n  - System.Diagnostics.Eventing.Reader.EventLogLink.LogName\n  langs:\n  - csharp\n  name: EventLogLink\n  nameWithType: EventLogLink\n  fullName: System.Diagnostics.Eventing.Reader.EventLogLink\n  type: Class\n  summary: Represents a link between an event provider and an event log that the provider publishes events into. This object cannot be instantiated.\n  syntax:\n    content: public sealed class EventLogLink\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName\n  id: DisplayName\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  langs:\n  - csharp\n  name: DisplayName\n  nameWithType: EventLogLink.DisplayName\n  fullName: System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets the localized name of the event log.\n  syntax:\n    content: public string DisplayName { get; }\n    return:\n      type: System.String\n      description: Returns a string that contains the localized name of the event log.\n  overload: System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.IsImported\n  id: IsImported\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  langs:\n  - csharp\n  name: IsImported\n  nameWithType: EventLogLink.IsImported\n  fullName: System.Diagnostics.Eventing.Reader.EventLogLink.IsImported\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets a Boolean value that determines whether the event log is imported, rather than defined in the event provider. An imported event log is defined in a different provider.\n  syntax:\n    content: public bool IsImported { get; }\n    return:\n      type: System.Boolean\n      description: Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the event log is imported by the event provider, and returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the event log is not imported by the event provider.\n  overload: System.Diagnostics.Eventing.Reader.EventLogLink.IsImported*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.LogName\n  id: LogName\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  langs:\n  - csharp\n  name: LogName\n  nameWithType: EventLogLink.LogName\n  fullName: System.Diagnostics.Eventing.Reader.EventLogLink.LogName\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets the non-localized name of the event log associated with this object.\n  syntax:\n    content: public string LogName { get; }\n    return:\n      type: System.String\n      description: Returns a string that contains the non-localized name of the event log associated with this object.\n  overload: System.Diagnostics.Eventing.Reader.EventLogLink.LogName*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  isExternal: false\n  name: DisplayName\n  nameWithType: EventLogLink.DisplayName\n  fullName: System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.IsImported\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  isExternal: false\n  name: IsImported\n  nameWithType: EventLogLink.IsImported\n  fullName: System.Diagnostics.Eventing.Reader.EventLogLink.IsImported\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.LogName\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  isExternal: false\n  name: LogName\n  nameWithType: EventLogLink.LogName\n  fullName: System.Diagnostics.Eventing.Reader.EventLogLink.LogName\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName*\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  isExternal: false\n  name: DisplayName\n  nameWithType: EventLogLink.DisplayName\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.IsImported*\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  isExternal: false\n  name: IsImported\n  nameWithType: EventLogLink.IsImported\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.LogName*\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  isExternal: false\n  name: LogName\n  nameWithType: EventLogLink.LogName\n"}