{"nodes":[{"pos":[1010,1070],"content":"Represents the configuration for the token issuance request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the configuration for the token issuance request.","pos":[0,60]}]},{"pos":[1083,2460],"content":"The Scope class encapsulates information about the relying party (RP) associated with a security token request (RST). This information is used by implementations of the <xref:System.IdentityModel.SecurityTokenService> class (STS) in the token issuance pipeline to return a response (RSTR) to a security token request (RST).       Scope objects contain information about the address of the RP, the encrypting and signing credentials to be used with the issued security token, and whether the token itself or symmetric keys issued with the token should be encrypted. By default, both the token and symmetric keys are encrypted. You can extend the Scope class to carry additional information about the request, such as token types accepted by the RP, default token lifetime, maximum token lifetime, algorithm suites used by the RP, and so on; however, the information encapsulated in this class should not vary for individual requests.       The token issuance pipeline is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method and this method invokes the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method to get the configuration for the RST. You must implement a <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method in your custom STS and return a Scope object appropriate for the RP and your STS implementation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Scope class encapsulates information about the relying party (RP) associated with a security token request (RST). This information is used by implementations of the <xref:System.IdentityModel.SecurityTokenService> class (STS) in the token issuance pipeline to return a response (RSTR) to a security token request (RST).       Scope objects contain information about the address of the RP, the encrypting and signing credentials to be used with the issued security token, and whether the token itself or symmetric keys issued with the token should be encrypted. By default, both the token and symmetric keys are encrypted. You can extend the Scope class to carry additional information about the request, such as token types accepted by the RP, default token lifetime, maximum token lifetime, algorithm suites used by the RP, and so on; however, the information encapsulated in this class should not vary for individual requests.       The token issuance pipeline is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method and this method invokes the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method to get the configuration for the RST. You must implement a <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method in your custom STS and return a Scope object appropriate for the RP and your STS implementation.","pos":[0,1373],"nodes":[{"content":"The Scope class encapsulates information about the relying party (RP) associated with a security token request (RST).","pos":[0,117]},{"content":"This information is used by implementations of the &lt;xref:System.IdentityModel.SecurityTokenService&gt; class (STS) in the token issuance pipeline to return a response (RSTR) to a security token request (RST).","pos":[118,323],"source":" This information is used by implementations of the <xref:System.IdentityModel.SecurityTokenService> class (STS) in the token issuance pipeline to return a response (RSTR) to a security token request (RST)."},{"content":"Scope objects contain information about the address of the RP, the encrypting and signing credentials to be used with the issued security token, and whether the token itself or symmetric keys issued with the token should be encrypted.","pos":[330,564]},{"content":"By default, both the token and symmetric keys are encrypted.","pos":[565,625]},{"content":"You can extend the Scope class to carry additional information about the request, such as token types accepted by the RP, default token lifetime, maximum token lifetime, algorithm suites used by the RP, and so on; however, the information encapsulated in this class should not vary for individual requests.","pos":[626,932]},{"content":"The token issuance pipeline is implemented in the &lt;xref:System.IdentityModel.SecurityTokenService.Issue%2A&gt; method and this method invokes the &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; method to get the configuration for the RST.","pos":[939,1187],"source":"       The token issuance pipeline is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method and this method invokes the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method to get the configuration for the RST."},{"content":"You must implement a &lt;xref:System.IdentityModel.SecurityTokenService.GetScope%2A&gt; method in your custom STS and return a Scope object appropriate for the RP and your STS implementation.","pos":[1188,1373],"source":" You must implement a <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method in your custom STS and return a Scope object appropriate for the RP and your STS implementation."}]}]},{"pos":[2908,2996],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Scope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Scope\"></xref> class."},{"pos":[3009,3679],"content":"The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.      |Property|Value.|   |--------------|------------|   |<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|`null` .|   |<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|   |<xref:System.IdentityModel.Scope.Properties%2A>|An empty dictionary.|   |<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|   |<xref:System.IdentityModel.Scope.SigningCredentials%2A>|`null`.|   |<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|   |<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following table shows the initial property values for the new &lt;xref:System.IdentityModel.Scope&gt; instance.","pos":[0,109],"source":"The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance."},{"content":"|Property|Value.|   |--------------|------------|   |&lt;xref:System.IdentityModel.Scope.AppliesToAddress%2A&gt;|<ph id=\"ph1\">`null`</ph> .|   |&lt;xref:System.IdentityModel.Scope.EncryptingCredentials%2A&gt;|<ph id=\"ph2\">`null`</ph>.|   |&lt;xref:System.IdentityModel.Scope.Properties%2A&gt;|An empty dictionary.|   |&lt;xref:System.IdentityModel.Scope.ReplyToAddress%2A&gt;|<ph id=\"ph3\">`null`</ph>.|   |&lt;xref:System.IdentityModel.Scope.SigningCredentials%2A&gt;|<ph id=\"ph4\">`null`</ph>.|   |&lt;xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt;|<ph id=\"ph5\">`true`</ph>.|   |&lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt;|<ph id=\"ph6\">`true`</ph>.|","pos":[115,660],"source":"      |Property|Value.|   |--------------|------------|   |<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|`null` .|   |<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|   |<xref:System.IdentityModel.Scope.Properties%2A>|An empty dictionary.|   |<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|   |<xref:System.IdentityModel.Scope.SigningCredentials%2A>|`null`.|   |<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|   |<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|"}]},{"pos":[4182,4307],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Scope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified appliesTo address.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Scope\"></xref> class with the specified appliesTo address."},{"pos":[4320,5028],"content":"The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.      |Property|Value.|   |--------------|------------|   |<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|The value of the `appliesToAddress` parameter.|   |<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|   |<xref:System.IdentityModel.Scope.Properties%2A>|An empty dictionary.|   |<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|   |<xref:System.IdentityModel.Scope.SigningCredentials%2A>|`null`.|   |<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|   |<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following table shows the initial property values for the new &lt;xref:System.IdentityModel.Scope&gt; instance.","pos":[0,109],"source":"The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance."},{"content":"|Property|Value.|   |--------------|------------|   |&lt;xref:System.IdentityModel.Scope.AppliesToAddress%2A&gt;|The value of the <ph id=\"ph1\">`appliesToAddress`</ph> parameter.|   |&lt;xref:System.IdentityModel.Scope.EncryptingCredentials%2A&gt;|<ph id=\"ph2\">`null`</ph>.|   |&lt;xref:System.IdentityModel.Scope.Properties%2A&gt;|An empty dictionary.|   |&lt;xref:System.IdentityModel.Scope.ReplyToAddress%2A&gt;|<ph id=\"ph3\">`null`</ph>.|   |&lt;xref:System.IdentityModel.Scope.SigningCredentials%2A&gt;|<ph id=\"ph4\">`null`</ph>.|   |&lt;xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt;|<ph id=\"ph5\">`true`</ph>.|   |&lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt;|<ph id=\"ph6\">`true`</ph>.|","pos":[115,698],"source":"      |Property|Value.|   |--------------|------------|   |<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|The value of the `appliesToAddress` parameter.|   |<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|   |<xref:System.IdentityModel.Scope.Properties%2A>|An empty dictionary.|   |<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|   |<xref:System.IdentityModel.Scope.SigningCredentials%2A>|`null`.|   |<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|   |<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|"}]},{"pos":[5181,5249],"content":"The appliesTo address of the relying party. This is typically a URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The appliesTo address of the relying party. This is typically a URI.","pos":[0,68],"nodes":[{"content":"The appliesTo address of the relying party.","pos":[0,43]},{"content":"This is typically a URI.","pos":[44,68]}]}]},{"pos":[5858,6010],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Scope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified appliesTo address and encrypting credentials.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Scope\"></xref> class with the specified appliesTo address and encrypting credentials."},{"pos":[6023,6772],"content":"The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.      |Property|Value.|   |--------------|------------|   |<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|The value of the `appliesToAddress` parameter.|   |<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|   |<xref:System.IdentityModel.Scope.Properties%2A>|An empty dictionary.|   |<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|   |<xref:System.IdentityModel.Scope.SigningCredentials%2A>|The value of the `signingCredentials` parameter.|   |<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|   |<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following table shows the initial property values for the new &lt;xref:System.IdentityModel.Scope&gt; instance.","pos":[0,109],"source":"The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance."},{"content":"|Property|Value.|   |--------------|------------|   |&lt;xref:System.IdentityModel.Scope.AppliesToAddress%2A&gt;|The value of the <ph id=\"ph1\">`appliesToAddress`</ph> parameter.|   |&lt;xref:System.IdentityModel.Scope.EncryptingCredentials%2A&gt;|<ph id=\"ph2\">`null`</ph>.|   |&lt;xref:System.IdentityModel.Scope.Properties%2A&gt;|An empty dictionary.|   |&lt;xref:System.IdentityModel.Scope.ReplyToAddress%2A&gt;|<ph id=\"ph3\">`null`</ph>.|   |&lt;xref:System.IdentityModel.Scope.SigningCredentials%2A&gt;|The value of the <ph id=\"ph4\">`signingCredentials`</ph> parameter.|   |&lt;xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt;|<ph id=\"ph5\">`true`</ph>.|   |&lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt;|<ph id=\"ph6\">`true`</ph>.|","pos":[115,739],"source":"      |Property|Value.|   |--------------|------------|   |<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|The value of the `appliesToAddress` parameter.|   |<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|   |<xref:System.IdentityModel.Scope.Properties%2A>|An empty dictionary.|   |<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|   |<xref:System.IdentityModel.Scope.SigningCredentials%2A>|The value of the `signingCredentials` parameter.|   |<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|   |<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|"}]},{"pos":[6998,7066],"content":"The appliesTo address of the relying party. This is typically a URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The appliesTo address of the relying party. This is typically a URI.","pos":[0,68],"nodes":[{"content":"The appliesTo address of the relying party.","pos":[0,43]},{"content":"This is typically a URI.","pos":[44,68]}]}]},{"pos":[7180,7229],"content":"The encrypting credentials for the relying party.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encrypting credentials for the relying party.","pos":[0,49]}]},{"pos":[7823,7972],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Scope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified appliesTo address and signing credentials.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Scope\"></xref> class with the specified appliesTo address and signing credentials."},{"pos":[7985,8734],"content":"The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.      |Property|Value.|   |--------------|------------|   |<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|The value of the `appliesToAddress` parameter.|   |<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|   |<xref:System.IdentityModel.Scope.Properties%2A>|An empty dictionary.|   |<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|   |<xref:System.IdentityModel.Scope.SigningCredentials%2A>|The value of the `signingCredentials` parameter.|   |<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|   |<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following table shows the initial property values for the new &lt;xref:System.IdentityModel.Scope&gt; instance.","pos":[0,109],"source":"The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance."},{"content":"|Property|Value.|   |--------------|------------|   |&lt;xref:System.IdentityModel.Scope.AppliesToAddress%2A&gt;|The value of the <ph id=\"ph1\">`appliesToAddress`</ph> parameter.|   |&lt;xref:System.IdentityModel.Scope.EncryptingCredentials%2A&gt;|<ph id=\"ph2\">`null`</ph>.|   |&lt;xref:System.IdentityModel.Scope.Properties%2A&gt;|An empty dictionary.|   |&lt;xref:System.IdentityModel.Scope.ReplyToAddress%2A&gt;|<ph id=\"ph3\">`null`</ph>.|   |&lt;xref:System.IdentityModel.Scope.SigningCredentials%2A&gt;|The value of the <ph id=\"ph4\">`signingCredentials`</ph> parameter.|   |&lt;xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt;|<ph id=\"ph5\">`true`</ph>.|   |&lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt;|<ph id=\"ph6\">`true`</ph>.|","pos":[115,739],"source":"      |Property|Value.|   |--------------|------------|   |<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|The value of the `appliesToAddress` parameter.|   |<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|   |<xref:System.IdentityModel.Scope.Properties%2A>|An empty dictionary.|   |<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|   |<xref:System.IdentityModel.Scope.SigningCredentials%2A>|The value of the `signingCredentials` parameter.|   |<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|   |<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|"}]},{"pos":[8954,9022],"content":"The appliesTo address of the relying party. This is typically a URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The appliesTo address of the relying party. This is typically a URI.","pos":[0,68],"nodes":[{"content":"The appliesTo address of the relying party.","pos":[0,43]},{"content":"This is typically a URI.","pos":[44,68]}]}]},{"pos":[9130,9176],"content":"The signing credentials for the relying party.","needQuote":true,"needEscape":true,"nodes":[{"content":"The signing credentials for the relying party.","pos":[0,46]}]},{"pos":[9936,10110],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Scope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified appliesTo address, signing credentials, and encrypting credentials.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Scope\"></xref> class with the specified appliesTo address, signing credentials, and encrypting credentials."},{"pos":[10123,10914],"content":"The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.      |Property|Value|   |--------------|-----------|   |<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|The value of the `appliesToAddress` parameter.|   |<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|The value of the `encryptingCredentials` parameter.|   |<xref:System.IdentityModel.Scope.Properties%2A>|An empty dictionary.|   |<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|   |<xref:System.IdentityModel.Scope.SigningCredentials%2A>|The value of the `signingCredentials` parameter.|   |<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|   |<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following table shows the initial property values for the new &lt;xref:System.IdentityModel.Scope&gt; instance.","pos":[0,109],"source":"The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance."},{"content":"|Property|Value|   |--------------|-----------|   |&lt;xref:System.IdentityModel.Scope.AppliesToAddress%2A&gt;|The value of the <ph id=\"ph1\">`appliesToAddress`</ph> parameter.|   |&lt;xref:System.IdentityModel.Scope.EncryptingCredentials%2A&gt;|The value of the <ph id=\"ph2\">`encryptingCredentials`</ph> parameter.|   |&lt;xref:System.IdentityModel.Scope.Properties%2A&gt;|An empty dictionary.|   |&lt;xref:System.IdentityModel.Scope.ReplyToAddress%2A&gt;|<ph id=\"ph3\">`null`</ph>.|   |&lt;xref:System.IdentityModel.Scope.SigningCredentials%2A&gt;|The value of the <ph id=\"ph4\">`signingCredentials`</ph> parameter.|   |&lt;xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt;|<ph id=\"ph5\">`true`</ph>.|   |&lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt;|<ph id=\"ph6\">`true`</ph>.|","pos":[115,781],"source":"      |Property|Value|   |--------------|-----------|   |<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|The value of the `appliesToAddress` parameter.|   |<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|The value of the `encryptingCredentials` parameter.|   |<xref:System.IdentityModel.Scope.Properties%2A>|An empty dictionary.|   |<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|   |<xref:System.IdentityModel.Scope.SigningCredentials%2A>|The value of the `signingCredentials` parameter.|   |<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|   |<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|"}]},{"pos":[11207,11275],"content":"The appliesTo address of the relying party. This is typically a URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The appliesTo address of the relying party. This is typically a URI.","pos":[0,68],"nodes":[{"content":"The appliesTo address of the relying party.","pos":[0,43]},{"content":"This is typically a URI.","pos":[44,68]}]}]},{"pos":[11383,11429],"content":"The signing credentials for the relying party.","needQuote":true,"needEscape":true,"nodes":[{"content":"The signing credentials for the relying party.","pos":[0,46]}]},{"pos":[11543,11592],"content":"The encrypting credentials for the relying party.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encrypting credentials for the relying party.","pos":[0,49]}]},{"pos":[12031,12087],"content":"Gets or sets the appliesTo address of the relying party.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the appliesTo address of the relying party.","pos":[0,56]}]},{"pos":[12221,12289],"content":"The appliesTo address of the relying party. This is typically a URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The appliesTo address of the relying party. This is typically a URI.","pos":[0,68],"nodes":[{"content":"The appliesTo address of the relying party.","pos":[0,43]},{"content":"This is typically a URI.","pos":[44,68]}]}]},{"pos":[12764,12826],"content":"Gets or sets the encrypting credentials for the relying party.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the encrypting credentials for the relying party.","pos":[0,62]}]},{"pos":[12838,13160],"content":"If the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> property is `true`, the credentials are used to encrypt issued security tokens. If the <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> property is `true`, the credentials are used to encrypt symmetric keys issued with security tokens.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the &lt;xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A&gt; property is <ph id=\"ph1\">`true`</ph>, the credentials are used to encrypt issued security tokens.","pos":[0,147],"source":"If the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> property is `true`, the credentials are used to encrypt issued security tokens."},{"content":"If the &lt;xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A&gt; property is <ph id=\"ph1\">`true`</ph>, the credentials are used to encrypt symmetric keys issued with security tokens.","pos":[148,322],"source":" If the <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> property is `true`, the credentials are used to encrypt symmetric keys issued with security tokens."}]},{"pos":[13378,13438],"content":"The encrypting credentials to be used for the relying party.","needQuote":true,"needEscape":true,"nodes":[{"content":"The encrypting credentials to be used for the relying party.","pos":[0,60]}]},{"pos":[13863,13908],"content":"Gets the properties bag to extend the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the properties bag to extend the object.","pos":[0,45]}]},{"pos":[14130,14149],"content":"The properties bag.","needQuote":true,"needEscape":true,"nodes":[{"content":"The properties bag.","pos":[0,19]}]},{"pos":[14583,14637],"content":"Gets or sets the replyTo address of the relying party.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the replyTo address of the relying party.","pos":[0,54]}]},{"pos":[14769,14835],"content":"The replyTo address of the relying party. This is typically a URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The replyTo address of the relying party. This is typically a URI.","pos":[0,66],"nodes":[{"content":"The replyTo address of the relying party.","pos":[0,41]},{"content":"This is typically a URI.","pos":[42,66]}]}]},{"pos":[15293,15352],"content":"Gets or sets the signing credentials for the relying party.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the signing credentials for the relying party.","pos":[0,59]}]},{"pos":[15561,15618],"content":"The signing credentials to be used for the relying party.","needQuote":true,"needEscape":true,"nodes":[{"content":"The signing credentials to be used for the relying party.","pos":[0,57]}]},{"pos":[16140,16224],"content":"Gets or sets a value that indicates whether issued symmetric keys must be encrypted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether issued symmetric keys must be encrypted.","pos":[0,84]}]},{"pos":[16236,16420],"content":"If the SymmetricKeyEncryptionRequired property is <ph id=\"ph1\">`true`</ph>, symmetric keys are encrypted using the credentials in the &lt;xref:System.IdentityModel.Scope.EncryptingCredentials%2A&gt; property.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If the SymmetricKeyEncryptionRequired property is `true`, symmetric keys are encrypted using the credentials in the <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> property."},{"pos":[16567,16816],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if symmetric keys must be encrypted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if symmetric keys must be encrypted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,172],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if symmetric keys must be encrypted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[173,249],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[17315,17400],"content":"Gets or sets a value that indicates whether issued security tokens must be encrypted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether issued security tokens must be encrypted.","pos":[0,85]}]},{"pos":[17412,17590],"content":"If the TokenEncryptionRequired property is <ph id=\"ph1\">`true`</ph>, security tokens are encrypted using the credentials in the &lt;xref:System.IdentityModel.Scope.EncryptingCredentials%2A&gt; property.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If the TokenEncryptionRequired property is `true`, security tokens are encrypted using the credentials in the <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> property."},{"pos":[17730,17980],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if security tokens must be encrypted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if security tokens must be encrypted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,173],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if security tokens must be encrypted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[174,250],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Scope\n  id: Scope\n  children:\n  - System.IdentityModel.Scope.#ctor\n  - System.IdentityModel.Scope.#ctor(System.String)\n  - System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)\n  - System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)\n  - System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)\n  - System.IdentityModel.Scope.AppliesToAddress\n  - System.IdentityModel.Scope.EncryptingCredentials\n  - System.IdentityModel.Scope.Properties\n  - System.IdentityModel.Scope.ReplyToAddress\n  - System.IdentityModel.Scope.SigningCredentials\n  - System.IdentityModel.Scope.SymmetricKeyEncryptionRequired\n  - System.IdentityModel.Scope.TokenEncryptionRequired\n  langs:\n  - csharp\n  name: Scope\n  nameWithType: Scope\n  fullName: System.IdentityModel.Scope\n  type: Class\n  summary: Represents the configuration for the token issuance request.\n  remarks: \"The Scope class encapsulates information about the relying party (RP) associated with a security token request (RST). This information is used by implementations of the <xref:System.IdentityModel.SecurityTokenService> class (STS) in the token issuance pipeline to return a response (RSTR) to a security token request (RST).  \\n  \\n Scope objects contain information about the address of the RP, the encrypting and signing credentials to be used with the issued security token, and whether the token itself or symmetric keys issued with the token should be encrypted. By default, both the token and symmetric keys are encrypted. You can extend the Scope class to carry additional information about the request, such as token types accepted by the RP, default token lifetime, maximum token lifetime, algorithm suites used by the RP, and so on; however, the information encapsulated in this class should not vary for individual requests.  \\n  \\n The token issuance pipeline is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method and this method invokes the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method to get the configuration for the RST. You must implement a <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method in your custom STS and return a Scope object appropriate for the RP and your STS implementation.\"\n  syntax:\n    content: public class Scope\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Scope.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Scope\n  langs:\n  - csharp\n  name: Scope()\n  nameWithType: Scope.Scope()\n  fullName: System.IdentityModel.Scope.Scope()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Scope\"></xref> class.\n  remarks: \"The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.  \\n  \\n|Property|Value.|  \\n|--------------|------------|  \\n|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|`null` .|  \\n|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|  \\n|<xref:System.IdentityModel.Scope.Properties%2A>|An empty dictionary.|  \\n|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  \\n|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|`null`.|  \\n|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  \\n|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|\"\n  syntax:\n    content: public Scope ();\n    parameters: []\n  overload: System.IdentityModel.Scope.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Scope.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IdentityModel.Scope\n  langs:\n  - csharp\n  name: Scope(String)\n  nameWithType: Scope.Scope(String)\n  fullName: System.IdentityModel.Scope.Scope(String)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Scope\"></xref> class with the specified appliesTo address.\n  remarks: \"The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.  \\n  \\n|Property|Value.|  \\n|--------------|------------|  \\n|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|The value of the `appliesToAddress` parameter.|  \\n|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|  \\n|<xref:System.IdentityModel.Scope.Properties%2A>|An empty dictionary.|  \\n|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  \\n|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|`null`.|  \\n|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  \\n|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|\"\n  syntax:\n    content: public Scope (string appliesToAddress);\n    parameters:\n    - id: appliesToAddress\n      type: System.String\n      description: The appliesTo address of the relying party. This is typically a URI.\n  overload: System.IdentityModel.Scope.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)\n  id: '#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)'\n  parent: System.IdentityModel.Scope\n  langs:\n  - csharp\n  name: Scope(String,EncryptingCredentials)\n  nameWithType: Scope.Scope(String,EncryptingCredentials)\n  fullName: System.IdentityModel.Scope.Scope(String,EncryptingCredentials)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Scope\"></xref> class with the specified appliesTo address and encrypting credentials.\n  remarks: \"The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.  \\n  \\n|Property|Value.|  \\n|--------------|------------|  \\n|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|The value of the `appliesToAddress` parameter.|  \\n|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|  \\n|<xref:System.IdentityModel.Scope.Properties%2A>|An empty dictionary.|  \\n|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  \\n|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|The value of the `signingCredentials` parameter.|  \\n|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  \\n|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|\"\n  syntax:\n    content: public Scope (string appliesToAddress, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);\n    parameters:\n    - id: appliesToAddress\n      type: System.String\n      description: The appliesTo address of the relying party. This is typically a URI.\n    - id: encryptingCredentials\n      type: System.IdentityModel.Tokens.EncryptingCredentials\n      description: The encrypting credentials for the relying party.\n  overload: System.IdentityModel.Scope.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)\n  id: '#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)'\n  parent: System.IdentityModel.Scope\n  langs:\n  - csharp\n  name: Scope(String,SigningCredentials)\n  nameWithType: Scope.Scope(String,SigningCredentials)\n  fullName: System.IdentityModel.Scope.Scope(String,SigningCredentials)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Scope\"></xref> class with the specified appliesTo address and signing credentials.\n  remarks: \"The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.  \\n  \\n|Property|Value.|  \\n|--------------|------------|  \\n|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|The value of the `appliesToAddress` parameter.|  \\n|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|  \\n|<xref:System.IdentityModel.Scope.Properties%2A>|An empty dictionary.|  \\n|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  \\n|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|The value of the `signingCredentials` parameter.|  \\n|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  \\n|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|\"\n  syntax:\n    content: public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials);\n    parameters:\n    - id: appliesToAddress\n      type: System.String\n      description: The appliesTo address of the relying party. This is typically a URI.\n    - id: signingCredentials\n      type: System.IdentityModel.Tokens.SigningCredentials\n      description: The signing credentials for the relying party.\n  overload: System.IdentityModel.Scope.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)\n  id: '#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)'\n  parent: System.IdentityModel.Scope\n  langs:\n  - csharp\n  name: Scope(String,SigningCredentials,EncryptingCredentials)\n  nameWithType: Scope.Scope(String,SigningCredentials,EncryptingCredentials)\n  fullName: System.IdentityModel.Scope.Scope(String,SigningCredentials,EncryptingCredentials)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Scope\"></xref> class with the specified appliesTo address, signing credentials, and encrypting credentials.\n  remarks: \"The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|The value of the `appliesToAddress` parameter.|  \\n|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|The value of the `encryptingCredentials` parameter.|  \\n|<xref:System.IdentityModel.Scope.Properties%2A>|An empty dictionary.|  \\n|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  \\n|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|The value of the `signingCredentials` parameter.|  \\n|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  \\n|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|\"\n  syntax:\n    content: public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);\n    parameters:\n    - id: appliesToAddress\n      type: System.String\n      description: The appliesTo address of the relying party. This is typically a URI.\n    - id: signingCredentials\n      type: System.IdentityModel.Tokens.SigningCredentials\n      description: The signing credentials for the relying party.\n    - id: encryptingCredentials\n      type: System.IdentityModel.Tokens.EncryptingCredentials\n      description: The encrypting credentials for the relying party.\n  overload: System.IdentityModel.Scope.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Scope.AppliesToAddress\n  id: AppliesToAddress\n  parent: System.IdentityModel.Scope\n  langs:\n  - csharp\n  name: AppliesToAddress\n  nameWithType: Scope.AppliesToAddress\n  fullName: System.IdentityModel.Scope.AppliesToAddress\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets or sets the appliesTo address of the relying party.\n  syntax:\n    content: public virtual string AppliesToAddress { get; set; }\n    return:\n      type: System.String\n      description: The appliesTo address of the relying party. This is typically a URI.\n  overload: System.IdentityModel.Scope.AppliesToAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Scope.EncryptingCredentials\n  id: EncryptingCredentials\n  parent: System.IdentityModel.Scope\n  langs:\n  - csharp\n  name: EncryptingCredentials\n  nameWithType: Scope.EncryptingCredentials\n  fullName: System.IdentityModel.Scope.EncryptingCredentials\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets or sets the encrypting credentials for the relying party.\n  remarks: If the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> property is `true`, the credentials are used to encrypt issued security tokens. If the <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> property is `true`, the credentials are used to encrypt symmetric keys issued with security tokens.\n  syntax:\n    content: public virtual System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials { get; set; }\n    return:\n      type: System.IdentityModel.Tokens.EncryptingCredentials\n      description: The encrypting credentials to be used for the relying party.\n  overload: System.IdentityModel.Scope.EncryptingCredentials*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Scope.Properties\n  id: Properties\n  parent: System.IdentityModel.Scope\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: Scope.Properties\n  fullName: System.IdentityModel.Scope.Properties\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets the properties bag to extend the object.\n  syntax:\n    content: public virtual System.Collections.Generic.Dictionary<string,object> Properties { get; }\n    return:\n      type: System.Collections.Generic.Dictionary{System.String,System.Object}\n      description: The properties bag.\n  overload: System.IdentityModel.Scope.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Scope.ReplyToAddress\n  id: ReplyToAddress\n  parent: System.IdentityModel.Scope\n  langs:\n  - csharp\n  name: ReplyToAddress\n  nameWithType: Scope.ReplyToAddress\n  fullName: System.IdentityModel.Scope.ReplyToAddress\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets or sets the replyTo address of the relying party.\n  syntax:\n    content: public virtual string ReplyToAddress { get; set; }\n    return:\n      type: System.String\n      description: The replyTo address of the relying party. This is typically a URI.\n  overload: System.IdentityModel.Scope.ReplyToAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Scope.SigningCredentials\n  id: SigningCredentials\n  parent: System.IdentityModel.Scope\n  langs:\n  - csharp\n  name: SigningCredentials\n  nameWithType: Scope.SigningCredentials\n  fullName: System.IdentityModel.Scope.SigningCredentials\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets or sets the signing credentials for the relying party.\n  syntax:\n    content: public virtual System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }\n    return:\n      type: System.IdentityModel.Tokens.SigningCredentials\n      description: The signing credentials to be used for the relying party.\n  overload: System.IdentityModel.Scope.SigningCredentials*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired\n  id: SymmetricKeyEncryptionRequired\n  parent: System.IdentityModel.Scope\n  langs:\n  - csharp\n  name: SymmetricKeyEncryptionRequired\n  nameWithType: Scope.SymmetricKeyEncryptionRequired\n  fullName: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets or sets a value that indicates whether issued symmetric keys must be encrypted.\n  remarks: If the SymmetricKeyEncryptionRequired property is `true`, symmetric keys are encrypted using the credentials in the <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> property.\n  syntax:\n    content: public virtual bool SymmetricKeyEncryptionRequired { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if symmetric keys must be encrypted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Scope.TokenEncryptionRequired\n  id: TokenEncryptionRequired\n  parent: System.IdentityModel.Scope\n  langs:\n  - csharp\n  name: TokenEncryptionRequired\n  nameWithType: Scope.TokenEncryptionRequired\n  fullName: System.IdentityModel.Scope.TokenEncryptionRequired\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets or sets a value that indicates whether issued security tokens must be encrypted.\n  remarks: If the TokenEncryptionRequired property is `true`, security tokens are encrypted using the credentials in the <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> property.\n  syntax:\n    content: public virtual bool TokenEncryptionRequired { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if security tokens must be encrypted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.IdentityModel.Scope.TokenEncryptionRequired*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.IdentityModel.Scope.#ctor\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: Scope()\n  nameWithType: Scope.Scope()\n  fullName: System.IdentityModel.Scope.Scope()\n- uid: System.IdentityModel.Scope.#ctor(System.String)\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: Scope(String)\n  nameWithType: Scope.Scope(String)\n  fullName: System.IdentityModel.Scope.Scope(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: Scope(String,EncryptingCredentials)\n  nameWithType: Scope.Scope(String,EncryptingCredentials)\n  fullName: System.IdentityModel.Scope.Scope(String,EncryptingCredentials)\n- uid: System.IdentityModel.Tokens.EncryptingCredentials\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: EncryptingCredentials\n  nameWithType: EncryptingCredentials\n  fullName: System.IdentityModel.Tokens.EncryptingCredentials\n- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: Scope(String,SigningCredentials)\n  nameWithType: Scope.Scope(String,SigningCredentials)\n  fullName: System.IdentityModel.Scope.Scope(String,SigningCredentials)\n- uid: System.IdentityModel.Tokens.SigningCredentials\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SigningCredentials\n  nameWithType: SigningCredentials\n  fullName: System.IdentityModel.Tokens.SigningCredentials\n- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: Scope(String,SigningCredentials,EncryptingCredentials)\n  nameWithType: Scope.Scope(String,SigningCredentials,EncryptingCredentials)\n  fullName: System.IdentityModel.Scope.Scope(String,SigningCredentials,EncryptingCredentials)\n- uid: System.IdentityModel.Scope.AppliesToAddress\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: AppliesToAddress\n  nameWithType: Scope.AppliesToAddress\n  fullName: System.IdentityModel.Scope.AppliesToAddress\n- uid: System.IdentityModel.Scope.EncryptingCredentials\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: EncryptingCredentials\n  nameWithType: Scope.EncryptingCredentials\n  fullName: System.IdentityModel.Scope.EncryptingCredentials\n- uid: System.IdentityModel.Scope.Properties\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: Properties\n  nameWithType: Scope.Properties\n  fullName: System.IdentityModel.Scope.Properties\n- uid: System.Collections.Generic.Dictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: Dictionary<String,Object>\n  nameWithType: Dictionary<String,Object>\n  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.Dictionary`2\n    name: Dictionary\n    nameWithType: Dictionary\n    fullName: Dictionary<System.String,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Scope.ReplyToAddress\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: ReplyToAddress\n  nameWithType: Scope.ReplyToAddress\n  fullName: System.IdentityModel.Scope.ReplyToAddress\n- uid: System.IdentityModel.Scope.SigningCredentials\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: SigningCredentials\n  nameWithType: Scope.SigningCredentials\n  fullName: System.IdentityModel.Scope.SigningCredentials\n- uid: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: SymmetricKeyEncryptionRequired\n  nameWithType: Scope.SymmetricKeyEncryptionRequired\n  fullName: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Scope.TokenEncryptionRequired\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: TokenEncryptionRequired\n  nameWithType: Scope.TokenEncryptionRequired\n  fullName: System.IdentityModel.Scope.TokenEncryptionRequired\n- uid: System.IdentityModel.Scope.#ctor*\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: Scope\n  nameWithType: Scope.Scope\n- uid: System.IdentityModel.Scope.AppliesToAddress*\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: AppliesToAddress\n  nameWithType: Scope.AppliesToAddress\n- uid: System.IdentityModel.Scope.EncryptingCredentials*\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: EncryptingCredentials\n  nameWithType: Scope.EncryptingCredentials\n- uid: System.IdentityModel.Scope.Properties*\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: Properties\n  nameWithType: Scope.Properties\n- uid: System.IdentityModel.Scope.ReplyToAddress*\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: ReplyToAddress\n  nameWithType: Scope.ReplyToAddress\n- uid: System.IdentityModel.Scope.SigningCredentials*\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: SigningCredentials\n  nameWithType: Scope.SigningCredentials\n- uid: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired*\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: SymmetricKeyEncryptionRequired\n  nameWithType: Scope.SymmetricKeyEncryptionRequired\n- uid: System.IdentityModel.Scope.TokenEncryptionRequired*\n  parent: System.IdentityModel.Scope\n  isExternal: false\n  name: TokenEncryptionRequired\n  nameWithType: Scope.TokenEncryptionRequired\n"}