{"nodes":[{"pos":[1157,1218],"content":"Represents configuration information for a rule-based import.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents configuration information for a rule-based import.","pos":[0,61]}]},{"pos":[1866,1988],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Composition.Registration.ImportBuilder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Registration.ImportBuilder\"></xref> class."},{"pos":[2674,2729],"content":"Specifies that the import should allow a default value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the import should allow a default value.","pos":[0,55]}]},{"pos":[2961,2999],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[3655,3704],"content":"Specifies that the import should be recomposable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the import should be recomposable.","pos":[0,49]}]},{"pos":[3942,3980],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[4670,4736],"content":"Specifies that the import should be under the given contract name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the import should be under the given contract name.","pos":[0,66]}]},{"pos":[4950,4968],"content":"The contract name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract name.","pos":[0,18]}]},{"pos":[5073,5111],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[5317,5407],"content":"<ph id=\"ph1\">&lt;code&gt;contractName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>contractName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5502,5547],"content":"<ph id=\"ph1\">&lt;code&gt;contractName&lt;/code&gt;</ph> is an empty string.","needQuote":true,"needEscape":true,"source":"<code>contractName</code> is an empty string."},{"pos":[6117,6178],"content":"Specifies that the import should use the given contract type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the import should use the given contract type.","pos":[0,61]}]},{"pos":[6372,6397],"content":"The contract type to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract type to use.","pos":[0,25]}]},{"pos":[6502,6540],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[6746,6828],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7591,7603],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8257,8292],"content":"Specifies the import's cardinality.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the import's cardinality.","pos":[0,35]}]},{"pos":[8492,8750],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to specify a multiple import; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to specify a single import. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to specify a multiple import; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to specify a single import.","pos":[0,181],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to specify a multiple import; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to specify a single import."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[182,258],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[8855,8893],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[9705,9753],"content":"Specifies the import's required creation policy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the import's required creation policy.","pos":[0,48]}]},{"pos":[10072,10112],"content":"The creation policy the import requires.","needQuote":true,"needEscape":true,"nodes":[{"content":"The creation policy the import requires.","pos":[0,40]}]},{"pos":[10217,10255],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[10993,11071],"content":"Specifies a value that specifies the scopes this import can be satisfied from.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a value that specifies the scopes this import can be satisfied from.","pos":[0,78]}]},{"pos":[11338,11405],"content":"A value that specifies the scopes the import can be satisfied from.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that specifies the scopes the import can be satisfied from.","pos":[0,67]}]},{"pos":[11510,11548],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder\n  id: ImportBuilder\n  children:\n  - System.ComponentModel.Composition.Registration.ImportBuilder.#ctor\n  - System.ComponentModel.Composition.Registration.ImportBuilder.AllowDefault\n  - System.ComponentModel.Composition.Registration.ImportBuilder.AllowRecomposition\n  - System.ComponentModel.Composition.Registration.ImportBuilder.AsContractName(System.String)\n  - System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType(System.Type)\n  - System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType``1\n  - System.ComponentModel.Composition.Registration.ImportBuilder.AsMany(System.Boolean)\n  - System.ComponentModel.Composition.Registration.ImportBuilder.RequiredCreationPolicy(System.ComponentModel.Composition.CreationPolicy)\n  - System.ComponentModel.Composition.Registration.ImportBuilder.Source(System.ComponentModel.Composition.ImportSource)\n  langs:\n  - csharp\n  name: ImportBuilder\n  nameWithType: ImportBuilder\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder\n  type: Class\n  summary: Represents configuration information for a rule-based import.\n  syntax:\n    content: public sealed class ImportBuilder\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  langs:\n  - csharp\n  name: ImportBuilder()\n  nameWithType: ImportBuilder.ImportBuilder()\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder.ImportBuilder()\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Registration.ImportBuilder\"></xref> class.\n  syntax:\n    content: public ImportBuilder ();\n    parameters: []\n  overload: System.ComponentModel.Composition.Registration.ImportBuilder.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.AllowDefault\n  id: AllowDefault\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  langs:\n  - csharp\n  name: AllowDefault()\n  nameWithType: ImportBuilder.AllowDefault()\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder.AllowDefault()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that the import should allow a default value.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.ImportBuilder AllowDefault ();\n    parameters: []\n    return:\n      type: System.ComponentModel.Composition.Registration.ImportBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.ImportBuilder.AllowDefault*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.AllowRecomposition\n  id: AllowRecomposition\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  langs:\n  - csharp\n  name: AllowRecomposition()\n  nameWithType: ImportBuilder.AllowRecomposition()\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder.AllowRecomposition()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that the import should be recomposable.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.ImportBuilder AllowRecomposition ();\n    parameters: []\n    return:\n      type: System.ComponentModel.Composition.Registration.ImportBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.ImportBuilder.AllowRecomposition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.AsContractName(System.String)\n  id: AsContractName(System.String)\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  langs:\n  - csharp\n  name: AsContractName(String)\n  nameWithType: ImportBuilder.AsContractName(String)\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder.AsContractName(String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that the import should be under the given contract name.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.ImportBuilder AsContractName (string contractName);\n    parameters:\n    - id: contractName\n      type: System.String\n      description: The contract name.\n    return:\n      type: System.ComponentModel.Composition.Registration.ImportBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.ImportBuilder.AsContractName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>contractName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>contractName</code> is an empty string.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType(System.Type)\n  id: AsContractType(System.Type)\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  langs:\n  - csharp\n  name: AsContractType(Type)\n  nameWithType: ImportBuilder.AsContractType(Type)\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType(Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that the import should use the given contract type.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.ImportBuilder AsContractType (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The contract type to use.\n    return:\n      type: System.ComponentModel.Composition.Registration.ImportBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType``1\n  id: AsContractType``1\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  langs:\n  - csharp\n  name: AsContractType()\n  nameWithType: ImportBuilder.AsContractType()\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.ImportBuilder AsContractType<T> ();\n    parameters: []\n    return:\n      type: System.ComponentModel.Composition.Registration.ImportBuilder\n      description: To be added.\n  overload: System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.AsMany(System.Boolean)\n  id: AsMany(System.Boolean)\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  langs:\n  - csharp\n  name: AsMany(Boolean)\n  nameWithType: ImportBuilder.AsMany(Boolean)\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder.AsMany(Boolean)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies the import's cardinality.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.ImportBuilder AsMany (bool isMany = true);\n    parameters:\n    - id: isMany\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to specify a multiple import; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to specify a single import. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n    return:\n      type: System.ComponentModel.Composition.Registration.ImportBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.ImportBuilder.AsMany*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.RequiredCreationPolicy(System.ComponentModel.Composition.CreationPolicy)\n  id: RequiredCreationPolicy(System.ComponentModel.Composition.CreationPolicy)\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  langs:\n  - csharp\n  name: RequiredCreationPolicy(CreationPolicy)\n  nameWithType: ImportBuilder.RequiredCreationPolicy(CreationPolicy)\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder.RequiredCreationPolicy(CreationPolicy)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies the import's required creation policy.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.ImportBuilder RequiredCreationPolicy (System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy);\n    parameters:\n    - id: requiredCreationPolicy\n      type: System.ComponentModel.Composition.CreationPolicy\n      description: The creation policy the import requires.\n    return:\n      type: System.ComponentModel.Composition.Registration.ImportBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.ImportBuilder.RequiredCreationPolicy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.Source(System.ComponentModel.Composition.ImportSource)\n  id: Source(System.ComponentModel.Composition.ImportSource)\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  langs:\n  - csharp\n  name: Source(ImportSource)\n  nameWithType: ImportBuilder.Source(ImportSource)\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder.Source(ImportSource)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a value that specifies the scopes this import can be satisfied from.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.ImportBuilder Source (System.ComponentModel.Composition.ImportSource source);\n    parameters:\n    - id: source\n      type: System.ComponentModel.Composition.ImportSource\n      description: A value that specifies the scopes the import can be satisfied from.\n    return:\n      type: System.ComponentModel.Composition.Registration.ImportBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.ImportBuilder.Source*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.#ctor\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  isExternal: false\n  name: ImportBuilder()\n  nameWithType: ImportBuilder.ImportBuilder()\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder.ImportBuilder()\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.AllowDefault\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  isExternal: false\n  name: AllowDefault()\n  nameWithType: ImportBuilder.AllowDefault()\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder.AllowDefault()\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder\n  parent: System.ComponentModel.Composition.Registration\n  isExternal: false\n  name: ImportBuilder\n  nameWithType: ImportBuilder\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.AllowRecomposition\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  isExternal: false\n  name: AllowRecomposition()\n  nameWithType: ImportBuilder.AllowRecomposition()\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder.AllowRecomposition()\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.AsContractName(System.String)\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  isExternal: false\n  name: AsContractName(String)\n  nameWithType: ImportBuilder.AsContractName(String)\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder.AsContractName(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType(System.Type)\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  isExternal: false\n  name: AsContractType(Type)\n  nameWithType: ImportBuilder.AsContractType(Type)\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType``1\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  isExternal: false\n  name: AsContractType()\n  nameWithType: ImportBuilder.AsContractType()\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType()\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.AsMany(System.Boolean)\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  isExternal: false\n  name: AsMany(Boolean)\n  nameWithType: ImportBuilder.AsMany(Boolean)\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder.AsMany(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.RequiredCreationPolicy(System.ComponentModel.Composition.CreationPolicy)\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  isExternal: false\n  name: RequiredCreationPolicy(CreationPolicy)\n  nameWithType: ImportBuilder.RequiredCreationPolicy(CreationPolicy)\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder.RequiredCreationPolicy(CreationPolicy)\n- uid: System.ComponentModel.Composition.CreationPolicy\n  parent: System.ComponentModel.Composition\n  isExternal: false\n  name: CreationPolicy\n  nameWithType: CreationPolicy\n  fullName: System.ComponentModel.Composition.CreationPolicy\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.Source(System.ComponentModel.Composition.ImportSource)\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  isExternal: false\n  name: Source(ImportSource)\n  nameWithType: ImportBuilder.Source(ImportSource)\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder.Source(ImportSource)\n- uid: System.ComponentModel.Composition.ImportSource\n  parent: System.ComponentModel.Composition\n  isExternal: false\n  name: ImportSource\n  nameWithType: ImportSource\n  fullName: System.ComponentModel.Composition.ImportSource\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.#ctor*\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  isExternal: false\n  name: ImportBuilder\n  nameWithType: ImportBuilder.ImportBuilder\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.AllowDefault*\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  isExternal: false\n  name: AllowDefault\n  nameWithType: ImportBuilder.AllowDefault\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.AllowRecomposition*\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  isExternal: false\n  name: AllowRecomposition\n  nameWithType: ImportBuilder.AllowRecomposition\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.AsContractName*\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  isExternal: false\n  name: AsContractName\n  nameWithType: ImportBuilder.AsContractName\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType*\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  isExternal: false\n  name: AsContractType\n  nameWithType: ImportBuilder.AsContractType\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType<T>*\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  isExternal: false\n  name: AsContractType<T>\n  nameWithType: ImportBuilder.AsContractType<T>\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.AsMany*\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  isExternal: false\n  name: AsMany\n  nameWithType: ImportBuilder.AsMany\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.RequiredCreationPolicy*\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  isExternal: false\n  name: RequiredCreationPolicy\n  nameWithType: ImportBuilder.RequiredCreationPolicy\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder.Source*\n  parent: System.ComponentModel.Composition.Registration.ImportBuilder\n  isExternal: false\n  name: Source\n  nameWithType: ImportBuilder.Source\n"}