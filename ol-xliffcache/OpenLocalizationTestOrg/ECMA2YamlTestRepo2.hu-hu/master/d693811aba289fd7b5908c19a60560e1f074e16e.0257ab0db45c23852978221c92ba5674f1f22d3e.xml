{"nodes":[{"pos":[1075,1183],"content":"Defines the identity permission for the zone from which the code originates. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the identity permission for the zone from which the code originates. This class cannot be inherited.","pos":[0,108],"nodes":[{"content":"Defines the identity permission for the zone from which the code originates.","pos":[0,76]},{"content":"This class cannot be inherited.","pos":[77,108]}]}]},{"pos":[1196,4018],"content":"This permission can determine whether calling code is from a certain zone. Zones are configured according to the Microsoft Internet Explorer options, and are mapped from URL by Internet Explorer's IInternetSecurityManager and related APIs. Only exact zone matches are defined for the permission; a URL can only belong to one zone.      -   Local intranet zone: The Local intranet zone is used for content located on a company's intranet. Because the servers are within a company's firewall, content on the intranet is assigned a higher level of trust.      -   Trusted sites zone: The Trusted sites zone is used for content located on Web sites that are considered more reputable or trustworthy than other sites on the Internet. Users can use this zone to assign a higher level of trust to specific Internet sites. The URLs of these trusted Web sites need to be mapped into this zone by the user. By default, sites in the Trusted sites zone receive no higher trust than those in the Internet zone. A user or company needs to change the level of trust granted to this zone if they want the sites it contains to be given a higher level of trust.      -   Internet zone: The Internet zone is used for the Web sites on the Internet that do not belong to another zone. The default settings allow code downloaded from these sites only minimal access to resources on the user's computer. Web sites that are not mapped into other zones automatically fall into this zone.      -   Restricted sites zone: The Restricted sites zone is used for Web sites that contain content that could cause, or could have previously caused, problems when downloaded. This zone could be used to prevent code downloaded from these sites from running on the user's computer. The URLs of these untrusted Web sites need to be mapped into this zone by the user.      -   Local Machine zone: The Local Machine zone is an implicit zone that is used for content that exists on the user's computer. The content found on the user's computer, except for content cached by Internet Explorer on the local system, is treated with a very high level of trust.      > [!IMPORTANT] >  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used.   >    >  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This permission can determine whether calling code is from a certain zone.","pos":[0,74]},{"content":"Zones are configured according to the Microsoft Internet Explorer options, and are mapped from URL by Internet Explorer's IInternetSecurityManager and related APIs.","pos":[75,239]},{"content":"Only exact zone matches are defined for the permission; a URL can only belong to one zone.","pos":[240,330]},{"content":"-   Local intranet zone: The Local intranet zone is used for content located on a company's intranet.","pos":[336,437]},{"content":"Because the servers are within a company's firewall, content on the intranet is assigned a higher level of trust.","pos":[438,551]},{"content":"-   Trusted sites zone: The Trusted sites zone is used for content located on Web sites that are considered more reputable or trustworthy than other sites on the Internet.","pos":[557,728]},{"content":"Users can use this zone to assign a higher level of trust to specific Internet sites.","pos":[729,814]},{"content":"The URLs of these trusted Web sites need to be mapped into this zone by the user.","pos":[815,896]},{"content":"By default, sites in the Trusted sites zone receive no higher trust than those in the Internet zone.","pos":[897,997]},{"content":"A user or company needs to change the level of trust granted to this zone if they want the sites it contains to be given a higher level of trust.","pos":[998,1143]},{"content":"-   Internet zone: The Internet zone is used for the Web sites on the Internet that do not belong to another zone.","pos":[1149,1263]},{"content":"The default settings allow code downloaded from these sites only minimal access to resources on the user's computer.","pos":[1264,1380]},{"content":"Web sites that are not mapped into other zones automatically fall into this zone.","pos":[1381,1462]},{"content":"-   Restricted sites zone: The Restricted sites zone is used for Web sites that contain content that could cause, or could have previously caused, problems when downloaded.","pos":[1468,1640]},{"content":"This zone could be used to prevent code downloaded from these sites from running on the user's computer.","pos":[1641,1745]},{"content":"The URLs of these untrusted Web sites need to be mapped into this zone by the user.","pos":[1746,1829]},{"content":"-   Local Machine zone: The Local Machine zone is an implicit zone that is used for content that exists on the user's computer.","pos":[1835,1962]},{"content":"The content found on the user's computer, except for content cached by Internet Explorer on the local system, is treated with a very high level of trust.","pos":[1963,2116]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  Starting with the <ph id=\"ph2\">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>, identity permissions are not used.","pos":[2122,2253],"source":"      > [!IMPORTANT] >  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used."},{"content":"&gt;    &gt;  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted.","pos":[2256,2407],"source":"   >    >  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted."},{"content":"That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria.","pos":[2408,2557]},{"content":"Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust.","pos":[2558,2692]},{"content":"This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.","pos":[2693,2807]}]},{"pos":[5478,5674],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.ZoneIdentityPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.ZoneIdentityPermission\"></xref> class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref>."},{"pos":[5687,6922],"content":"Creates either a fully restricted (`None`) or `Unrestricted` permission.      > [!NOTE] >  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface. That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.       In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Creates either a fully restricted (<ph id=\"ph1\">`None`</ph>) or <ph id=\"ph2\">`Unrestricted`</ph> permission.","pos":[0,72],"source":"Creates either a fully restricted (`None`) or `Unrestricted` permission."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an &lt;xref:System.Security.Permissions.PermissionState&gt; permission state value.","pos":[78,245],"source":"      > [!NOTE] >  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState> permission state value."},{"content":"Starting with the .NET Framework version 2.0, identity permissions can have any permission state value.","pos":[246,349]},{"content":"This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; interface.","pos":[350,540],"source":" This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface."},{"content":"That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.","pos":[541,680]},{"content":"In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted.","pos":[687,830]},{"content":"That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria.","pos":[831,980]},{"content":"Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust.","pos":[981,1115]},{"content":"This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.","pos":[1116,1230]}]},{"pos":[7490,7573],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."},{"pos":[7752,7874],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">state</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid value of <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>."},{"pos":[8437,8590],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.ZoneIdentityPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class to represent the specified zone identity.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.ZoneIdentityPermission\"></xref> class to represent the specified zone identity."},{"pos":[9139,9159],"content":"The zone identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zone identifier.","pos":[0,20]}]},{"pos":[9650,9714],"content":"Creates and returns an identical copy of the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns an identical copy of the current permission.","pos":[0,64]}]},{"pos":[9726,9816],"content":"A copy of a permission represents the same access to resources as the original permission.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A copy of a permission represents the same access to resources as the original permission.","pos":[0,90]}]},{"pos":[9983,10016],"content":"A copy of the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current permission.","pos":[0,33]}]},{"pos":[10632,10702],"content":"Reconstructs a permission with a specified state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs a permission with a specified state from an XML encoding.","pos":[0,70]}]},{"pos":[10887,10941],"content":"The XML encoding to use to reconstruct the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML encoding to use to reconstruct the permission.","pos":[0,54]}]},{"pos":[11130,11225],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>esd</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11321,11469],"content":"The <code>esd</code> parameter is not a valid permission element.       -or-       The <code>esd</code> parameter's version number is not valid.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid permission element.","pos":[0,65],"source":"The <code>esd</code> parameter is not a valid permission element."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter's version number is not valid.","pos":[72,144],"source":"       -or-       The <code>esd</code> parameter's version number is not valid."}]},{"pos":[11990,12103],"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,113]}]},{"pos":[12116,12508],"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection.       The intersection of two identical <xref:System.Security.Permissions.ZoneIdentityPermission> objects is the same permission. Any other combination results in a permission that is `null`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common.","pos":[0,118]},{"content":"Only a demand that passes both original permissions will pass the intersection.","pos":[119,198]},{"content":"The intersection of two identical &lt;xref:System.Security.Permissions.ZoneIdentityPermission&gt; objects is the same permission.","pos":[205,328],"source":"       The intersection of two identical <xref:System.Security.Permissions.ZoneIdentityPermission> objects is the same permission."},{"content":"Any other combination results in a permission that is <ph id=\"ph1\">`null`</ph>.","pos":[329,390],"source":" Any other combination results in a permission that is `null`."}]},{"pos":[12717,12826],"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","pos":[0,109],"nodes":[{"content":"A permission to intersect with the current permission.","pos":[0,54]},{"content":"It must be of the same type as the current permission.","pos":[55,109]}]}]},{"pos":[12898,13117],"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the intersection of the current permission and the specified permission.","pos":[0,105]},{"content":"This new permission is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the intersection is empty.","pos":[106,219],"source":" This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty."}]},{"pos":[13300,13456],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and is not of the same type as the current permission.","needQuote":true,"needEscape":true,"source":"The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission."},{"pos":[13981,14063],"content":"Determines whether the current permission is a subset of the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the current permission is a subset of the specified permission.","pos":[0,82]}]},{"pos":[14075,14265],"content":"The current permission is a subset of the specified permission if the two permissions are equal or if the current permission represents the <xref:System.Security.SecurityZone> security zone.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The current permission is a subset of the specified permission if the two permissions are equal or if the current permission represents the &lt;xref:System.Security.SecurityZone&gt; security zone.","pos":[0,190],"source":"The current permission is a subset of the specified permission if the two permissions are equal or if the current permission represents the <xref:System.Security.SecurityZone> security zone."}]},{"pos":[14451,14581],"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","pos":[0,130],"nodes":[{"content":"A permission that is to be tested for the subset relationship.","pos":[0,62]},{"content":"This permission must be of the same type as the current permission.","pos":[63,130]}]}]},{"pos":[14640,14842],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission is a subset of the specified permission; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15026,15301],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, this permission does not represent the <bpt id=\"p3\">&lt;xref href=\"System.Security.SecurityZone\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> security zone, and the specified permission is not equal to the current permission.","needQuote":true,"needEscape":true,"source":"The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this permission does not represent the <xref href=\"System.Security.SecurityZone\"></xref> security zone, and the specified permission is not equal to the current permission."},{"pos":[15741,15862],"content":"Gets or sets the zone represented by the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.ZoneIdentityPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the zone represented by the current <xref href=\"System.Security.Permissions.ZoneIdentityPermission\"></xref>."},{"pos":[16021,16089],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.SecurityZone\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.SecurityZone\"></xref> values."},{"pos":[16275,16369],"content":"The parameter value is not a valid value of <bpt id=\"p1\">&lt;xref href=\"System.Security.SecurityZone\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The parameter value is not a valid value of <xref href=\"System.Security.SecurityZone\"></xref>."},{"pos":[16778,16842],"content":"Creates an XML encoding of the permission and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML encoding of the permission and its current state.","pos":[0,64]}]},{"pos":[17018,17085],"content":"An XML encoding of the permission, including any state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML encoding of the permission, including any state information.","pos":[0,67]}]},{"pos":[17672,17766],"content":"Creates a permission that is the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a permission that is the union of the current permission and the specified permission.","pos":[0,94]}]},{"pos":[17779,18865],"content":"The result of a call to Union is a permission that represents the security zone represented by both the current permission and the specified permission. Any demand that passes either permission passes their union. The union of two identical <xref:System.Security.Permissions.ZoneIdentityPermission> objects is the same permission. The union of a null permission and a <xref:System.Security.Permissions.ZoneIdentityPermission> permission is the permission that is not null.       Note that a<xref:System.Security.Permissions.ZoneIdentityPermission> object representing a <xref:System.Security.SecurityZone> security zone is treated as a null permission and handled as a special case. The union of a <xref:System.Security.Permissions.ZoneIdentityPermission> object representing the <xref:System.Security.SecurityZone> security zone and a null permission is null. The union of two different zone identity permissions results in an <xref:System.ArgumentException> exception being thrown when neither of the two permissions represents the <xref:System.Security.SecurityZone> security zone.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The result of a call to Union is a permission that represents the security zone represented by both the current permission and the specified permission. Any demand that passes either permission passes their union. The union of two identical <xref:System.Security.Permissions.ZoneIdentityPermission> objects is the same permission. The union of a null permission and a <xref:System.Security.Permissions.ZoneIdentityPermission> permission is the permission that is not null.       Note that a<xref:System.Security.Permissions.ZoneIdentityPermission> object representing a <xref:System.Security.SecurityZone> security zone is treated as a null permission and handled as a special case. The union of a <xref:System.Security.Permissions.ZoneIdentityPermission> object representing the <xref:System.Security.SecurityZone> security zone and a null permission is null. The union of two different zone identity permissions results in an <xref:System.ArgumentException> exception being thrown when neither of the two permissions represents the <xref:System.Security.SecurityZone> security zone.","pos":[0,1084],"nodes":[{"content":"The result of a call to Union is a permission that represents the security zone represented by both the current permission and the specified permission.","pos":[0,152]},{"content":"Any demand that passes either permission passes their union.","pos":[153,213]},{"content":"The union of two identical &lt;xref:System.Security.Permissions.ZoneIdentityPermission&gt; objects is the same permission.","pos":[214,330],"source":" The union of two identical <xref:System.Security.Permissions.ZoneIdentityPermission> objects is the same permission."},{"content":"The union of a null permission and a &lt;xref:System.Security.Permissions.ZoneIdentityPermission&gt; permission is the permission that is not null.","pos":[331,472],"source":" The union of a null permission and a <xref:System.Security.Permissions.ZoneIdentityPermission> permission is the permission that is not null."},{"content":"Note that a&lt;xref:System.Security.Permissions.ZoneIdentityPermission&gt; object representing a &lt;xref:System.Security.SecurityZone&gt; security zone is treated as a null permission and handled as a special case.","pos":[479,682],"source":"       Note that a<xref:System.Security.Permissions.ZoneIdentityPermission> object representing a <xref:System.Security.SecurityZone> security zone is treated as a null permission and handled as a special case."},{"content":"The union of a &lt;xref:System.Security.Permissions.ZoneIdentityPermission&gt; object representing the &lt;xref:System.Security.SecurityZone&gt; security zone and a null permission is null.","pos":[683,860],"source":" The union of a <xref:System.Security.Permissions.ZoneIdentityPermission> object representing the <xref:System.Security.SecurityZone> security zone and a null permission is null."},{"content":"The union of two different zone identity permissions results in an &lt;xref:System.ArgumentException&gt; exception being thrown when neither of the two permissions represents the &lt;xref:System.Security.SecurityZone&gt; security zone.","pos":[861,1084],"source":" The union of two different zone identity permissions results in an <xref:System.ArgumentException> exception being thrown when neither of the two permissions represents the <xref:System.Security.SecurityZone> security zone."}]}]},{"pos":[19070,19177],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]},{"pos":[19249,19347],"content":"A new permission that represents the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]},{"pos":[19527,19861],"content":"The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission.       -or-       The two permissions are not equal and the current permission does not represent the <xref href=\"System.Security.SecurityZone\"></xref> security zone.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and is not of the same type as the current permission.","pos":[0,156],"source":"The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission."},{"content":"-or-       The two permissions are not equal and the current permission does not represent the <bpt id=\"p1\">&lt;xref href=\"System.Security.SecurityZone\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security zone.","pos":[163,322],"source":"       -or-       The two permissions are not equal and the current permission does not represent the <xref href=\"System.Security.SecurityZone\"></xref> security zone."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.ZoneIdentityPermission\n  id: ZoneIdentityPermission\n  children:\n  - System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)\n  - System.Security.Permissions.ZoneIdentityPermission.Copy\n  - System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.ZoneIdentityPermission.SecurityZone\n  - System.Security.Permissions.ZoneIdentityPermission.ToXml\n  - System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: ZoneIdentityPermission\n  nameWithType: ZoneIdentityPermission\n  fullName: System.Security.Permissions.ZoneIdentityPermission\n  type: Class\n  summary: Defines the identity permission for the zone from which the code originates. This class cannot be inherited.\n  remarks: \"This permission can determine whether calling code is from a certain zone. Zones are configured according to the Microsoft Internet Explorer options, and are mapped from URL by Internet Explorer's IInternetSecurityManager and related APIs. Only exact zone matches are defined for the permission; a URL can only belong to one zone.  \\n  \\n-   Local intranet zone: The Local intranet zone is used for content located on a company's intranet. Because the servers are within a company's firewall, content on the intranet is assigned a higher level of trust.  \\n  \\n-   Trusted sites zone: The Trusted sites zone is used for content located on Web sites that are considered more reputable or trustworthy than other sites on the Internet. Users can use this zone to assign a higher level of trust to specific Internet sites. The URLs of these trusted Web sites need to be mapped into this zone by the user. By default, sites in the Trusted sites zone receive no higher trust than those in the Internet zone. A user or company needs to change the level of trust granted to this zone if they want the sites it contains to be given a higher level of trust.  \\n  \\n-   Internet zone: The Internet zone is used for the Web sites on the Internet that do not belong to another zone. The default settings allow code downloaded from these sites only minimal access to resources on the user's computer. Web sites that are not mapped into other zones automatically fall into this zone.  \\n  \\n-   Restricted sites zone: The Restricted sites zone is used for Web sites that contain content that could cause, or could have previously caused, problems when downloaded. This zone could be used to prevent code downloaded from these sites from running on the user's computer. The URLs of these untrusted Web sites need to be mapped into this zone by the user.  \\n  \\n-   Local Machine zone: The Local Machine zone is an implicit zone that is used for content that exists on the user's computer. The content found on the user's computer, except for content cached by Internet Explorer on the local system, is treated with a very high level of trust.  \\n  \\n> [!IMPORTANT]\\n>  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used.  \\n>   \\n>  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class ZoneIdentityPermission : System.Security.CodeAccessPermission\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements: []\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net462\n- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  langs:\n  - csharp\n  name: ZoneIdentityPermission(PermissionState)\n  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.ZoneIdentityPermission\"></xref> class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  remarks: \"Creates either a fully restricted (`None`) or `Unrestricted` permission.  \\n  \\n> [!NOTE]\\n>  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface. That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.  \\n  \\n In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.\"\n  example:\n  - \"The following example shows the use of the ZoneIdentityPermission constructor.  \\n  \\n [!code-vb[System.Security.Permissions.ZoneIdentityPermission#7](~/add/codesnippet/visualbasic/15a7f59e-a46d-4cbf-89a9-_1.vb)]\\n [!code-cs[System.Security.Permissions.ZoneIdentityPermission#7](~/add/codesnippet/csharp/15a7f59e-a46d-4cbf-89a9-_1.cs)]\"\n  syntax:\n    content: public ZoneIdentityPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Security.Permissions.ZoneIdentityPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)\n  id: '#ctor(System.Security.SecurityZone)'\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  langs:\n  - csharp\n  name: ZoneIdentityPermission(SecurityZone)\n  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.ZoneIdentityPermission\"></xref> class to represent the specified zone identity.\n  remarks: ''\n  example:\n  - \"The following example shows the use of the ZoneIdentityPermission constructor.  \\n  \\n [!code-vb[System.Security.Permissions.ZoneIdentityPermission#8](~/add/codesnippet/visualbasic/66b125e0-a7cf-4ec2-89f3-_1.vb)]\\n [!code-cs[System.Security.Permissions.ZoneIdentityPermission#8](~/add/codesnippet/csharp/66b125e0-a7cf-4ec2-89f3-_1.cs)]\"\n  syntax:\n    content: public ZoneIdentityPermission (System.Security.SecurityZone zone);\n    parameters:\n    - id: zone\n      type: System.Security.SecurityZone\n      description: The zone identifier.\n  overload: System.Security.Permissions.ZoneIdentityPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.ZoneIdentityPermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: ZoneIdentityPermission.Copy()\n  fullName: System.Security.Permissions.ZoneIdentityPermission.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates and returns an identical copy of the current permission.\n  remarks: A copy of a permission represents the same access to resources as the original permission.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission.\n  overload: System.Security.Permissions.ZoneIdentityPermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: ZoneIdentityPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Reconstructs a permission with a specified state from an XML encoding.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement esd);\n    parameters:\n    - id: esd\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the permission.\n  overload: System.Security.Permissions.ZoneIdentityPermission.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>esd</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>esd</code> parameter is not a valid permission element.  \\n  \\n -or-  \\n  \\n The <code>esd</code> parameter's version number is not valid.\"\n  platform:\n  - net462\n- uid: System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: ZoneIdentityPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.\n  remarks: \"The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection.  \\n  \\n The intersection of two identical <xref:System.Security.Permissions.ZoneIdentityPermission> objects is the same permission. Any other combination results in a permission that is `null`.\"\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.\n  overload: System.Security.Permissions.ZoneIdentityPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission.\n  platform:\n  - net462\n- uid: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: ZoneIdentityPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Determines whether the current permission is a subset of the specified permission.\n  remarks: The current permission is a subset of the specified permission if the two permissions are equal or if the current permission represents the <xref:System.Security.SecurityZone> security zone.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, this permission does not represent the <xref href=\"System.Security.SecurityZone\"></xref> security zone, and the specified permission is not equal to the current permission.\n  platform:\n  - net462\n- uid: System.Security.Permissions.ZoneIdentityPermission.SecurityZone\n  id: SecurityZone\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  langs:\n  - csharp\n  name: SecurityZone\n  nameWithType: ZoneIdentityPermission.SecurityZone\n  fullName: System.Security.Permissions.ZoneIdentityPermission.SecurityZone\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets the zone represented by the current <xref href=\"System.Security.Permissions.ZoneIdentityPermission\"></xref>.\n  syntax:\n    content: public System.Security.SecurityZone SecurityZone { get; set; }\n    return:\n      type: System.Security.SecurityZone\n      description: One of the <xref href=\"System.Security.SecurityZone\"></xref> values.\n  overload: System.Security.Permissions.ZoneIdentityPermission.SecurityZone*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The parameter value is not a valid value of <xref href=\"System.Security.SecurityZone\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Permissions.ZoneIdentityPermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: ZoneIdentityPermission.ToXml()\n  fullName: System.Security.Permissions.ZoneIdentityPermission.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates an XML encoding of the permission and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the permission, including any state information.\n  overload: System.Security.Permissions.ZoneIdentityPermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: ZoneIdentityPermission.Union(IPermission)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates a permission that is the union of the current permission and the specified permission.\n  remarks: \"The result of a call to Union is a permission that represents the security zone represented by both the current permission and the specified permission. Any demand that passes either permission passes their union. The union of two identical <xref:System.Security.Permissions.ZoneIdentityPermission> objects is the same permission. The union of a null permission and a <xref:System.Security.Permissions.ZoneIdentityPermission> permission is the permission that is not null.  \\n  \\n Note that a<xref:System.Security.Permissions.ZoneIdentityPermission> object representing a <xref:System.Security.SecurityZone> security zone is treated as a null permission and handled as a special case. The union of a <xref:System.Security.Permissions.ZoneIdentityPermission> object representing the <xref:System.Security.SecurityZone> security zone and a null permission is null. The union of two different zone identity permissions results in an <xref:System.ArgumentException> exception being thrown when neither of the two permissions represents the <xref:System.Security.SecurityZone> security zone.\"\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Security.Permissions.ZoneIdentityPermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>target</code> parameter is not <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> and is not of the same type as the current permission.  \\n  \\n -or-  \\n  \\n The two permissions are not equal and the current permission does not represent the <xref href=\\\"System.Security.SecurityZone\\\"></xref> security zone.\"\n  platform:\n  - net462\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: ZoneIdentityPermission(PermissionState)\n  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: ZoneIdentityPermission(SecurityZone)\n  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)\n- uid: System.Security.SecurityZone\n  parent: System.Security\n  isExternal: false\n  name: SecurityZone\n  nameWithType: SecurityZone\n  fullName: System.Security.SecurityZone\n- uid: System.Security.Permissions.ZoneIdentityPermission.Copy\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: ZoneIdentityPermission.Copy()\n  fullName: System.Security.Permissions.ZoneIdentityPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: ZoneIdentityPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: ZoneIdentityPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.Intersect(IPermission)\n- uid: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: ZoneIdentityPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.ZoneIdentityPermission.SecurityZone\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: SecurityZone\n  nameWithType: ZoneIdentityPermission.SecurityZone\n  fullName: System.Security.Permissions.ZoneIdentityPermission.SecurityZone\n- uid: System.Security.Permissions.ZoneIdentityPermission.ToXml\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: ZoneIdentityPermission.ToXml()\n  fullName: System.Security.Permissions.ZoneIdentityPermission.ToXml()\n- uid: System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: ZoneIdentityPermission.Union(IPermission)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.Union(IPermission)\n- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor*\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: ZoneIdentityPermission\n  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission\n- uid: System.Security.Permissions.ZoneIdentityPermission.Copy*\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: Copy\n  nameWithType: ZoneIdentityPermission.Copy\n- uid: System.Security.Permissions.ZoneIdentityPermission.FromXml*\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: ZoneIdentityPermission.FromXml\n- uid: System.Security.Permissions.ZoneIdentityPermission.Intersect*\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: ZoneIdentityPermission.Intersect\n- uid: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf*\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: ZoneIdentityPermission.IsSubsetOf\n- uid: System.Security.Permissions.ZoneIdentityPermission.SecurityZone*\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: SecurityZone\n  nameWithType: ZoneIdentityPermission.SecurityZone\n- uid: System.Security.Permissions.ZoneIdentityPermission.ToXml*\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: ZoneIdentityPermission.ToXml\n- uid: System.Security.Permissions.ZoneIdentityPermission.Union*\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: Union\n  nameWithType: ZoneIdentityPermission.Union\n"}