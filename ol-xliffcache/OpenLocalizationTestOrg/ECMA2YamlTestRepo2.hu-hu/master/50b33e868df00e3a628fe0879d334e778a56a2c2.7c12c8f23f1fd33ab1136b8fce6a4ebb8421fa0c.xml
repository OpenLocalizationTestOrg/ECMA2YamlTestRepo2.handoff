{"nodes":[{"pos":[1085,1321],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that validates a <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> by using a configured &lt;xref:System.Web.Security.MembershipProvider&gt;.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.UserNameSecurityTokenHandler\"></xref> that validates a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> by using a configured <xref:System.Web.Security.MembershipProvider>."},{"pos":[4585,4803],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the default membership provider that is configured for the application.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\"></xref> class that uses the default membership provider that is configured for the application."},{"pos":[5115,5180],"content":"No default membership provider is configured for the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"No default membership provider is configured for the application.","pos":[0,65]}]},{"pos":[5950,6131],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the specified membership provider.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\"></xref> class that uses the specified membership provider."},{"pos":[6357,6407],"content":"The membership provider to use to validate tokens.","needQuote":true,"needEscape":true,"nodes":[{"content":"The membership provider to use to validate tokens.","pos":[0,50]}]},{"pos":[7100,7334],"content":"Gets a value that indicates whether the current instance can validate security tokens of type <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the current instance can validate security tokens of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,165],"source":"Gets a value that indicates whether the current instance can validate security tokens of type <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>."},{"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[166,234],"source":" Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[7463,7728],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the token handler can validate user name security tokens; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the token handler can validate user name security tokens; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,196],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the token handler can validate user name security tokens; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[197,265],"source":" Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[8552,8588],"content":"Loads custom configuration from XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"Loads custom configuration from XML.","pos":[0,36]}]},{"pos":[8805,8829],"content":"The custom XML elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"The custom XML elements.","pos":[0,24]}]},{"pos":[9550,9649],"content":"Gets the <xref:System.Web.Security.MembershipProvider> that is configured for the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Web.Security.MembershipProvider&gt; that is configured for the current instance.","pos":[0,99],"source":"Gets the <xref:System.Web.Security.MembershipProvider> that is configured for the current instance."}]},{"pos":[9834,9869],"content":"The configured membership provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configured membership provider.","pos":[0,35]}]},{"pos":[10689,10798],"content":"Validates the specified security token by using the configured <xref:System.Web.Security.MembershipProvider>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates the specified security token by using the configured &lt;xref:System.Web.Security.MembershipProvider&gt;.","pos":[0,109],"source":"Validates the specified security token by using the configured <xref:System.Web.Security.MembershipProvider>."}]},{"pos":[10810,10985],"content":"The configured membership provider is referenced through the <xref:System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.MembershipProvider%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The configured membership provider is referenced through the &lt;xref:System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.MembershipProvider%2A&gt; property.","pos":[0,175],"source":"The configured membership provider is referenced through the <xref:System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.MembershipProvider%2A> property."}]},{"pos":[11284,11319],"content":"The security token to be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security token to be validated.","pos":[0,35]}]},{"pos":[11452,11499],"content":"The identities that are contained in the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identities that are contained in the token.","pos":[0,47]}]},{"pos":[11719,11802],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11897,12009],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is not an instance of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>token</code> is not an instance of <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>."},{"pos":[12176,12279],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> failed validation with the configured <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>token</code> failed validation with the configured <xref:System.Web.Security.MembershipProvider>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  id: MembershipUserNameSecurityTokenHandler\n  children:\n  - System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.#ctor\n  - System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.#ctor(System.Web.Security.MembershipProvider)\n  - System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.CanValidateToken\n  - System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.MembershipProvider\n  - System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  langs:\n  - csharp\n  name: MembershipUserNameSecurityTokenHandler\n  nameWithType: MembershipUserNameSecurityTokenHandler\n  fullName: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  type: Class\n  summary: A <xref href=\"System.IdentityModel.Tokens.UserNameSecurityTokenHandler\"></xref> that validates a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> by using a configured <xref:System.Web.Security.MembershipProvider>.\n  syntax:\n    content: 'public class MembershipUserNameSecurityTokenHandler : System.IdentityModel.Tokens.UserNameSecurityTokenHandler'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityTokenHandler\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  langs:\n  - csharp\n  name: MembershipUserNameSecurityTokenHandler()\n  nameWithType: MembershipUserNameSecurityTokenHandler.MembershipUserNameSecurityTokenHandler()\n  fullName: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.MembershipUserNameSecurityTokenHandler()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\"></xref> class that uses the default membership provider that is configured for the application.\n  syntax:\n    content: public MembershipUserNameSecurityTokenHandler ();\n    parameters: []\n  overload: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.#ctor*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No default membership provider is configured for the application.\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.#ctor(System.Web.Security.MembershipProvider)\n  id: '#ctor(System.Web.Security.MembershipProvider)'\n  parent: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  langs:\n  - csharp\n  name: MembershipUserNameSecurityTokenHandler(MembershipProvider)\n  nameWithType: MembershipUserNameSecurityTokenHandler.MembershipUserNameSecurityTokenHandler(MembershipProvider)\n  fullName: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.MembershipUserNameSecurityTokenHandler(MembershipProvider)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\"></xref> class that uses the specified membership provider.\n  syntax:\n    content: public MembershipUserNameSecurityTokenHandler (System.Web.Security.MembershipProvider provider);\n    parameters:\n    - id: provider\n      type: System.Web.Security.MembershipProvider\n      description: The membership provider to use to validate tokens.\n  overload: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.CanValidateToken\n  id: CanValidateToken\n  parent: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  langs:\n  - csharp\n  name: CanValidateToken\n  nameWithType: MembershipUserNameSecurityTokenHandler.CanValidateToken\n  fullName: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.CanValidateToken\n  type: Property\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services.Tokens\n  summary: Gets a value that indicates whether the current instance can validate security tokens of type <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  syntax:\n    content: public override bool CanValidateToken { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the token handler can validate user name security tokens; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.CanValidateToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  id: LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  langs:\n  - csharp\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: MembershipUserNameSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n  fullName: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services.Tokens\n  summary: Loads custom configuration from XML.\n  syntax:\n    content: public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);\n    parameters:\n    - id: customConfigElements\n      type: System.Xml.XmlNodeList\n      description: The custom XML elements.\n  overload: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.LoadCustomConfiguration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.MembershipProvider\n  id: MembershipProvider\n  parent: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  langs:\n  - csharp\n  name: MembershipProvider\n  nameWithType: MembershipUserNameSecurityTokenHandler.MembershipProvider\n  fullName: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.MembershipProvider\n  type: Property\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services.Tokens\n  summary: Gets the <xref:System.Web.Security.MembershipProvider> that is configured for the current instance.\n  syntax:\n    content: public System.Web.Security.MembershipProvider MembershipProvider { get; set; }\n    return:\n      type: System.Web.Security.MembershipProvider\n      description: The configured membership provider.\n  overload: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.MembershipProvider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  langs:\n  - csharp\n  name: ValidateToken(SecurityToken)\n  nameWithType: MembershipUserNameSecurityTokenHandler.ValidateToken(SecurityToken)\n  fullName: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.ValidateToken(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services.Tokens\n  summary: Validates the specified security token by using the configured <xref:System.Web.Security.MembershipProvider>.\n  remarks: The configured membership provider is referenced through the <xref:System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.MembershipProvider%2A> property.\n  syntax:\n    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The security token to be validated.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n      description: The identities that are contained in the token.\n  overload: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.ValidateToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>token</code> is not an instance of <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>.\n  - type: System.IdentityModel.Tokens.SecurityTokenValidationException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException\n    description: <code>token</code> failed validation with the configured <xref:System.Web.Security.MembershipProvider>.\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  isExternal: false\n  name: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.IdentityModel.Tokens.SecurityTokenValidationException\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenValidationException\n  nameWithType: SecurityTokenValidationException\n  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException\n- uid: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.#ctor\n  parent: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  isExternal: false\n  name: MembershipUserNameSecurityTokenHandler()\n  nameWithType: MembershipUserNameSecurityTokenHandler.MembershipUserNameSecurityTokenHandler()\n  fullName: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.MembershipUserNameSecurityTokenHandler()\n- uid: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.#ctor(System.Web.Security.MembershipProvider)\n  parent: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  isExternal: false\n  name: MembershipUserNameSecurityTokenHandler(MembershipProvider)\n  nameWithType: MembershipUserNameSecurityTokenHandler.MembershipUserNameSecurityTokenHandler(MembershipProvider)\n  fullName: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.MembershipUserNameSecurityTokenHandler(MembershipProvider)\n- uid: System.Web.Security.MembershipProvider\n  parent: System.Web.Security\n  isExternal: true\n  name: MembershipProvider\n  nameWithType: MembershipProvider\n  fullName: System.Web.Security.MembershipProvider\n- uid: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.CanValidateToken\n  parent: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: MembershipUserNameSecurityTokenHandler.CanValidateToken\n  fullName: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.CanValidateToken\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  isExternal: false\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: MembershipUserNameSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n  fullName: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n- uid: System.Xml.XmlNodeList\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeList\n  nameWithType: XmlNodeList\n  fullName: System.Xml.XmlNodeList\n- uid: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.MembershipProvider\n  parent: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  isExternal: false\n  name: MembershipProvider\n  nameWithType: MembershipUserNameSecurityTokenHandler.MembershipProvider\n  fullName: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.MembershipProvider\n- uid: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  isExternal: false\n  name: ValidateToken(SecurityToken)\n  nameWithType: MembershipUserNameSecurityTokenHandler.ValidateToken(SecurityToken)\n  fullName: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.ValidateToken(SecurityToken)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<ClaimsIdentity>\n  nameWithType: ReadOnlyCollection<ClaimsIdentity>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Claims.ClaimsIdentity\n    name: ClaimsIdentity\n    nameWithType: ClaimsIdentity\n    fullName: ClaimsIdentity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.#ctor*\n  parent: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  isExternal: false\n  name: MembershipUserNameSecurityTokenHandler\n  nameWithType: MembershipUserNameSecurityTokenHandler.MembershipUserNameSecurityTokenHandler\n- uid: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.CanValidateToken*\n  parent: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: MembershipUserNameSecurityTokenHandler.CanValidateToken\n- uid: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.LoadCustomConfiguration*\n  parent: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  isExternal: false\n  name: LoadCustomConfiguration\n  nameWithType: MembershipUserNameSecurityTokenHandler.LoadCustomConfiguration\n- uid: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.MembershipProvider*\n  parent: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  isExternal: false\n  name: MembershipProvider\n  nameWithType: MembershipUserNameSecurityTokenHandler.MembershipProvider\n- uid: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler.ValidateToken*\n  parent: System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  isExternal: false\n  name: ValidateToken\n  nameWithType: MembershipUserNameSecurityTokenHandler.ValidateToken\n"}