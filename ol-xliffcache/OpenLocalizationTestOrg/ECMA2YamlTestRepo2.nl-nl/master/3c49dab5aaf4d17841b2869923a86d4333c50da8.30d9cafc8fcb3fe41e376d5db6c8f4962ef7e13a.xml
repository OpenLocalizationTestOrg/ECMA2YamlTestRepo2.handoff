{"nodes":[{"pos":[571,625],"content":"Represents a labeled statement or a stand-alone label.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a labeled statement or a stand-alone label.","pos":[0,54]}]},{"pos":[638,1312],"content":"CodeLabeledStatement represents a label and optionally, an associated statement. A label can be used to indicate the target of a <xref:System.CodeDom.CodeGotoStatement>.       The <xref:System.CodeDom.CodeLabeledStatement.Statement%2A> property is optional. To create only a label, leave the <xref:System.CodeDom.CodeLabeledStatement.Statement%2A> property uninitialized.      > [!NOTE] >  Not all languages support `goto` statements and labels, so you should test wheter a code generator supports `goto` statements and labels by calling the <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> method with the <xref:System.CodeDom.Compiler.GeneratorSupport> flag.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"CodeLabeledStatement represents a label and optionally, an associated statement.","pos":[0,80]},{"content":"A label can be used to indicate the target of a &lt;xref:System.CodeDom.CodeGotoStatement&gt;.","pos":[81,169],"source":" A label can be used to indicate the target of a <xref:System.CodeDom.CodeGotoStatement>."},{"content":"The &lt;xref:System.CodeDom.CodeLabeledStatement.Statement%2A&gt; property is optional.","pos":[176,257],"source":"       The <xref:System.CodeDom.CodeLabeledStatement.Statement%2A> property is optional."},{"content":"To create only a label, leave the &lt;xref:System.CodeDom.CodeLabeledStatement.Statement%2A&gt; property uninitialized.","pos":[258,371],"source":" To create only a label, leave the <xref:System.CodeDom.CodeLabeledStatement.Statement%2A> property uninitialized."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Not all languages support <ph id=\"ph2\">`goto`</ph> statements and labels, so you should test wheter a code generator supports <ph id=\"ph3\">`goto`</ph> statements and labels by calling the &lt;xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt; method with the &lt;xref:System.CodeDom.Compiler.GeneratorSupport&gt; flag.","pos":[377,669],"source":"      > [!NOTE] >  Not all languages support `goto` statements and labels, so you should test wheter a code generator supports `goto` statements and labels by calling the <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> method with the <xref:System.CodeDom.Compiler.GeneratorSupport> flag."}]},{"pos":[2757,2854],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeLabeledStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeLabeledStatement\"></xref> class."},{"pos":[3447,3575],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeLabeledStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified label name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeLabeledStatement\"></xref> class using the specified label name."},{"pos":[3720,3742],"content":"The name of the label.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the label.","pos":[0,22]}]},{"pos":[4361,4503],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeLabeledStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified label name and statement.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeLabeledStatement\"></xref> class using the specified label name and statement."},{"pos":[4688,4710],"content":"The name of the label.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the label.","pos":[0,22]}]},{"pos":[4791,4873],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to associate with the label.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.CodeDom.CodeStatement\"></xref> to associate with the label."},{"pos":[5288,5323],"content":"Gets or sets the name of the label.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the label.","pos":[0,35]}]},{"pos":[5438,5460],"content":"The name of the label.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the label.","pos":[0,22]}]},{"pos":[5895,5942],"content":"Gets or sets the optional associated statement.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the optional associated statement.","pos":[0,47]}]},{"pos":[5954,6087],"content":"If this property is not set, the <xref:System.CodeDom.CodeLabeledStatement> represents only a label, rather than a labeled statement.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If this property is not set, the &lt;xref:System.CodeDom.CodeLabeledStatement&gt; represents only a label, rather than a labeled statement.","pos":[0,133],"source":"If this property is not set, the <xref:System.CodeDom.CodeLabeledStatement> represents only a label, rather than a labeled statement."}]},{"pos":[6243,6350],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the statement associated with the label.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeStatement\"></xref> that indicates the statement associated with the label."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeLabeledStatement\n  id: CodeLabeledStatement\n  children:\n  - System.CodeDom.CodeLabeledStatement.#ctor\n  - System.CodeDom.CodeLabeledStatement.#ctor(System.String)\n  - System.CodeDom.CodeLabeledStatement.#ctor(System.String,System.CodeDom.CodeStatement)\n  - System.CodeDom.CodeLabeledStatement.Label\n  - System.CodeDom.CodeLabeledStatement.Statement\n  langs:\n  - csharp\n  name: CodeLabeledStatement\n  nameWithType: CodeLabeledStatement\n  fullName: System.CodeDom.CodeLabeledStatement\n  type: Class\n  summary: Represents a labeled statement or a stand-alone label.\n  remarks: \"CodeLabeledStatement represents a label and optionally, an associated statement. A label can be used to indicate the target of a <xref:System.CodeDom.CodeGotoStatement>.  \\n  \\n The <xref:System.CodeDom.CodeLabeledStatement.Statement%2A> property is optional. To create only a label, leave the <xref:System.CodeDom.CodeLabeledStatement.Statement%2A> property uninitialized.  \\n  \\n> [!NOTE]\\n>  Not all languages support `goto` statements and labels, so you should test wheter a code generator supports `goto` statements and labels by calling the <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> method with the <xref:System.CodeDom.Compiler.GeneratorSupport> flag.\"\n  example:\n  - \"The following example code demonstrates use of a <xref:System.CodeDom.CodeGotoStatement> and a CodeLabeledStatement to redirect program flow.  \\n  \\n [!code-cpp[CodeGotoStatementExample#2](~/add/codesnippet/cpp/t-system.codedom.codelab_1.cpp)]\\n [!code-cs[CodeGotoStatementExample#2](~/add/codesnippet/csharp/t-system.codedom.codelab_1.cs)]\\n [!code-vb[CodeGotoStatementExample#2](~/add/codesnippet/visualbasic/t-system.codedom.codelab_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeLabeledStatement : System.CodeDom.CodeStatement\n  inheritance:\n  - System.Object\n  - System.CodeDom.CodeObject\n  - System.CodeDom.CodeStatement\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.CodeObject.UserData\n  - System.CodeDom.CodeStatement.EndDirectives\n  - System.CodeDom.CodeStatement.LinePragma\n  - System.CodeDom.CodeStatement.StartDirectives\n  platform:\n  - net462\n- uid: System.CodeDom.CodeLabeledStatement.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeLabeledStatement\n  langs:\n  - csharp\n  name: CodeLabeledStatement()\n  nameWithType: CodeLabeledStatement.CodeLabeledStatement()\n  fullName: System.CodeDom.CodeLabeledStatement.CodeLabeledStatement()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeLabeledStatement\"></xref> class.\n  syntax:\n    content: public CodeLabeledStatement ();\n    parameters: []\n  overload: System.CodeDom.CodeLabeledStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeLabeledStatement.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.CodeDom.CodeLabeledStatement\n  langs:\n  - csharp\n  name: CodeLabeledStatement(String)\n  nameWithType: CodeLabeledStatement.CodeLabeledStatement(String)\n  fullName: System.CodeDom.CodeLabeledStatement.CodeLabeledStatement(String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeLabeledStatement\"></xref> class using the specified label name.\n  syntax:\n    content: public CodeLabeledStatement (string label);\n    parameters:\n    - id: label\n      type: System.String\n      description: The name of the label.\n  overload: System.CodeDom.CodeLabeledStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeLabeledStatement.#ctor(System.String,System.CodeDom.CodeStatement)\n  id: '#ctor(System.String,System.CodeDom.CodeStatement)'\n  parent: System.CodeDom.CodeLabeledStatement\n  langs:\n  - csharp\n  name: CodeLabeledStatement(String,CodeStatement)\n  nameWithType: CodeLabeledStatement.CodeLabeledStatement(String,CodeStatement)\n  fullName: System.CodeDom.CodeLabeledStatement.CodeLabeledStatement(String,CodeStatement)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeLabeledStatement\"></xref> class using the specified label name and statement.\n  syntax:\n    content: public CodeLabeledStatement (string label, System.CodeDom.CodeStatement statement);\n    parameters:\n    - id: label\n      type: System.String\n      description: The name of the label.\n    - id: statement\n      type: System.CodeDom.CodeStatement\n      description: The <xref href=\"System.CodeDom.CodeStatement\"></xref> to associate with the label.\n  overload: System.CodeDom.CodeLabeledStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeLabeledStatement.Label\n  id: Label\n  parent: System.CodeDom.CodeLabeledStatement\n  langs:\n  - csharp\n  name: Label\n  nameWithType: CodeLabeledStatement.Label\n  fullName: System.CodeDom.CodeLabeledStatement.Label\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the name of the label.\n  syntax:\n    content: public string Label { get; set; }\n    return:\n      type: System.String\n      description: The name of the label.\n  overload: System.CodeDom.CodeLabeledStatement.Label*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeLabeledStatement.Statement\n  id: Statement\n  parent: System.CodeDom.CodeLabeledStatement\n  langs:\n  - csharp\n  name: Statement\n  nameWithType: CodeLabeledStatement.Statement\n  fullName: System.CodeDom.CodeLabeledStatement.Statement\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the optional associated statement.\n  remarks: If this property is not set, the <xref:System.CodeDom.CodeLabeledStatement> represents only a label, rather than a labeled statement.\n  syntax:\n    content: public System.CodeDom.CodeStatement Statement { get; set; }\n    return:\n      type: System.CodeDom.CodeStatement\n      description: A <xref href=\"System.CodeDom.CodeStatement\"></xref> that indicates the statement associated with the label.\n  overload: System.CodeDom.CodeLabeledStatement.Statement*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.CodeDom.CodeStatement\n  isExternal: false\n  name: System.CodeDom.CodeStatement\n- uid: System.CodeDom.CodeLabeledStatement.#ctor\n  parent: System.CodeDom.CodeLabeledStatement\n  isExternal: false\n  name: CodeLabeledStatement()\n  nameWithType: CodeLabeledStatement.CodeLabeledStatement()\n  fullName: System.CodeDom.CodeLabeledStatement.CodeLabeledStatement()\n- uid: System.CodeDom.CodeLabeledStatement.#ctor(System.String)\n  parent: System.CodeDom.CodeLabeledStatement\n  isExternal: false\n  name: CodeLabeledStatement(String)\n  nameWithType: CodeLabeledStatement.CodeLabeledStatement(String)\n  fullName: System.CodeDom.CodeLabeledStatement.CodeLabeledStatement(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.CodeDom.CodeLabeledStatement.#ctor(System.String,System.CodeDom.CodeStatement)\n  parent: System.CodeDom.CodeLabeledStatement\n  isExternal: false\n  name: CodeLabeledStatement(String,CodeStatement)\n  nameWithType: CodeLabeledStatement.CodeLabeledStatement(String,CodeStatement)\n  fullName: System.CodeDom.CodeLabeledStatement.CodeLabeledStatement(String,CodeStatement)\n- uid: System.CodeDom.CodeLabeledStatement.Label\n  parent: System.CodeDom.CodeLabeledStatement\n  isExternal: false\n  name: Label\n  nameWithType: CodeLabeledStatement.Label\n  fullName: System.CodeDom.CodeLabeledStatement.Label\n- uid: System.CodeDom.CodeLabeledStatement.Statement\n  parent: System.CodeDom.CodeLabeledStatement\n  isExternal: false\n  name: Statement\n  nameWithType: CodeLabeledStatement.Statement\n  fullName: System.CodeDom.CodeLabeledStatement.Statement\n- uid: System.CodeDom.CodeLabeledStatement.#ctor*\n  parent: System.CodeDom.CodeLabeledStatement\n  isExternal: false\n  name: CodeLabeledStatement\n  nameWithType: CodeLabeledStatement.CodeLabeledStatement\n- uid: System.CodeDom.CodeLabeledStatement.Label*\n  parent: System.CodeDom.CodeLabeledStatement\n  isExternal: false\n  name: Label\n  nameWithType: CodeLabeledStatement.Label\n- uid: System.CodeDom.CodeLabeledStatement.Statement*\n  parent: System.CodeDom.CodeLabeledStatement\n  isExternal: false\n  name: Statement\n  nameWithType: CodeLabeledStatement.Statement\n"}