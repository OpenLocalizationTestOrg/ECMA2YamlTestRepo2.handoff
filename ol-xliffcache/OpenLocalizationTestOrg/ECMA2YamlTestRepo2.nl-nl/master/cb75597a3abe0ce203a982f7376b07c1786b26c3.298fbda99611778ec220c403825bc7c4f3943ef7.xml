{"nodes":[{"pos":[645,704],"content":"Specifies the permitted access to registry keys and values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the permitted access to registry keys and values.","pos":[0,59]}]},{"pos":[717,1344],"content":"RegistryPermissionAccess values are independent; rights to one type of access do not imply rights to another. For instance, `Write` permission does not imply permission to `Read` or `Create`.      > [!NOTE] >  Although NoAccess and AllAccess appear in RegistryPermissionAccess, they are not valid for use as the parameter for <xref:System.Security.Permissions.RegistryPermission.GetPathList%2A> because they describe no registry variable access types or all registry variable access types, respectively, and <xref:System.Security.Permissions.RegistryPermission.GetPathList%2A> expects a single registry variable access type.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"RegistryPermissionAccess values are independent; rights to one type of access do not imply rights to another.","pos":[0,109]},{"content":"For instance, <ph id=\"ph1\">`Write`</ph> permission does not imply permission to <ph id=\"ph2\">`Read`</ph> or <ph id=\"ph3\">`Create`</ph>.","pos":[110,191],"source":" For instance, `Write` permission does not imply permission to `Read` or `Create`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Although NoAccess and AllAccess appear in RegistryPermissionAccess, they are not valid for use as the parameter for &lt;xref:System.Security.Permissions.RegistryPermission.GetPathList%2A&gt; because they describe no registry variable access types or all registry variable access types, respectively, and &lt;xref:System.Security.Permissions.RegistryPermission.GetPathList%2A&gt; expects a single registry variable access type.","pos":[197,624],"source":"      > [!NOTE] >  Although NoAccess and AllAccess appear in RegistryPermissionAccess, they are not valid for use as the parameter for <xref:System.Security.Permissions.RegistryPermission.GetPathList%2A> because they describe no registry variable access types or all registry variable access types, respectively, and <xref:System.Security.Permissions.RegistryPermission.GetPathList%2A> expects a single registry variable access type."}]},{"pos":[1954,2275],"content":"Create, Read, and Write access to registry variables. AllAccess represents multiple RegistryPermissionAccess values and causes an <xref:System.ArgumentException> when used as the <code>access</code> parameter for the <xref:System.Security.Permissions.RegistryPermission.GetPathList*> method, which expects a single value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Create, Read, and Write access to registry variables.","pos":[0,53]},{"content":"AllAccess represents multiple RegistryPermissionAccess values and causes an &lt;xref:System.ArgumentException&gt; when used as the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">access</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter for the &lt;xref:System.Security.Permissions.RegistryPermission.GetPathList*&gt; method, which expects a single value.","pos":[54,321],"source":" AllAccess represents multiple RegistryPermissionAccess values and causes an <xref:System.ArgumentException> when used as the <code>access</code> parameter for the <xref:System.Security.Permissions.RegistryPermission.GetPathList*> method, which expects a single value."}]},{"pos":[2405,2417],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2849,2885],"content":"Create access to registry variables.","needQuote":true,"needEscape":true,"nodes":[{"content":"Create access to registry variables.","pos":[0,36]}]},{"pos":[3012,3024],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3466,3734],"content":"No access to registry variables. NoAccess represents no valid RegistryPermissionAccess values and causes an <xref:System.ArgumentException> when used as the parameter for <xref:System.Security.Permissions.RegistryPermission.GetPathList*>, which expects a single value.","needQuote":true,"needEscape":true,"nodes":[{"content":"No access to registry variables. NoAccess represents no valid RegistryPermissionAccess values and causes an <xref:System.ArgumentException> when used as the parameter for <xref:System.Security.Permissions.RegistryPermission.GetPathList*>, which expects a single value.","pos":[0,268],"nodes":[{"content":"No access to registry variables.","pos":[0,32]},{"content":"NoAccess represents no valid RegistryPermissionAccess values and causes an &lt;xref:System.ArgumentException&gt; when used as the parameter for &lt;xref:System.Security.Permissions.RegistryPermission.GetPathList*&gt;, which expects a single value.","pos":[33,268],"source":" NoAccess represents no valid RegistryPermissionAccess values and causes an <xref:System.ArgumentException> when used as the parameter for <xref:System.Security.Permissions.RegistryPermission.GetPathList*>, which expects a single value."}]}]},{"pos":[3863,3875],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4297,4331],"content":"Read access to registry variables.","needQuote":true,"needEscape":true,"nodes":[{"content":"Read access to registry variables.","pos":[0,34]}]},{"pos":[4456,4468],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4895,4930],"content":"Write access to registry variables.","needQuote":true,"needEscape":true,"nodes":[{"content":"Write access to registry variables.","pos":[0,35]}]},{"pos":[5056,5068],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.RegistryPermissionAccess\n  id: RegistryPermissionAccess\n  children:\n  - System.Security.Permissions.RegistryPermissionAccess.AllAccess\n  - System.Security.Permissions.RegistryPermissionAccess.Create\n  - System.Security.Permissions.RegistryPermissionAccess.NoAccess\n  - System.Security.Permissions.RegistryPermissionAccess.Read\n  - System.Security.Permissions.RegistryPermissionAccess.Write\n  langs:\n  - csharp\n  name: RegistryPermissionAccess\n  nameWithType: RegistryPermissionAccess\n  fullName: System.Security.Permissions.RegistryPermissionAccess\n  type: Enum\n  summary: Specifies the permitted access to registry keys and values.\n  remarks: \"RegistryPermissionAccess values are independent; rights to one type of access do not imply rights to another. For instance, `Write` permission does not imply permission to `Read` or `Create`.  \\n  \\n> [!NOTE]\\n>  Although NoAccess and AllAccess appear in RegistryPermissionAccess, they are not valid for use as the parameter for <xref:System.Security.Permissions.RegistryPermission.GetPathList%2A> because they describe no registry variable access types or all registry variable access types, respectively, and <xref:System.Security.Permissions.RegistryPermission.GetPathList%2A> expects a single registry variable access type.\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum RegistryPermissionAccess\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Security.Permissions.RegistryPermissionAccess.AllAccess\n  id: AllAccess\n  parent: System.Security.Permissions.RegistryPermissionAccess\n  langs:\n  - csharp\n  name: AllAccess\n  nameWithType: RegistryPermissionAccess.AllAccess\n  fullName: System.Security.Permissions.RegistryPermissionAccess.AllAccess\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Create, Read, and Write access to registry variables. AllAccess represents multiple RegistryPermissionAccess values and causes an <xref:System.ArgumentException> when used as the <code>access</code> parameter for the <xref:System.Security.Permissions.RegistryPermission.GetPathList*> method, which expects a single value.\n  syntax:\n    content: AllAccess\n    return:\n      type: System.Security.Permissions.RegistryPermissionAccess\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.RegistryPermissionAccess.Create\n  id: Create\n  parent: System.Security.Permissions.RegistryPermissionAccess\n  langs:\n  - csharp\n  name: Create\n  nameWithType: RegistryPermissionAccess.Create\n  fullName: System.Security.Permissions.RegistryPermissionAccess.Create\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Create access to registry variables.\n  syntax:\n    content: Create\n    return:\n      type: System.Security.Permissions.RegistryPermissionAccess\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.RegistryPermissionAccess.NoAccess\n  id: NoAccess\n  parent: System.Security.Permissions.RegistryPermissionAccess\n  langs:\n  - csharp\n  name: NoAccess\n  nameWithType: RegistryPermissionAccess.NoAccess\n  fullName: System.Security.Permissions.RegistryPermissionAccess.NoAccess\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: No access to registry variables. NoAccess represents no valid RegistryPermissionAccess values and causes an <xref:System.ArgumentException> when used as the parameter for <xref:System.Security.Permissions.RegistryPermission.GetPathList*>, which expects a single value.\n  syntax:\n    content: NoAccess\n    return:\n      type: System.Security.Permissions.RegistryPermissionAccess\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.RegistryPermissionAccess.Read\n  id: Read\n  parent: System.Security.Permissions.RegistryPermissionAccess\n  langs:\n  - csharp\n  name: Read\n  nameWithType: RegistryPermissionAccess.Read\n  fullName: System.Security.Permissions.RegistryPermissionAccess.Read\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Read access to registry variables.\n  syntax:\n    content: Read\n    return:\n      type: System.Security.Permissions.RegistryPermissionAccess\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.RegistryPermissionAccess.Write\n  id: Write\n  parent: System.Security.Permissions.RegistryPermissionAccess\n  langs:\n  - csharp\n  name: Write\n  nameWithType: RegistryPermissionAccess.Write\n  fullName: System.Security.Permissions.RegistryPermissionAccess.Write\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Write access to registry variables.\n  syntax:\n    content: Write\n    return:\n      type: System.Security.Permissions.RegistryPermissionAccess\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Security.Permissions.RegistryPermissionAccess.AllAccess\n  parent: System.Security.Permissions.RegistryPermissionAccess\n  isExternal: false\n  name: AllAccess\n  nameWithType: RegistryPermissionAccess.AllAccess\n  fullName: System.Security.Permissions.RegistryPermissionAccess.AllAccess\n- uid: System.Security.Permissions.RegistryPermissionAccess\n  parent: System.Security.Permissions\n  isExternal: false\n  name: RegistryPermissionAccess\n  nameWithType: RegistryPermissionAccess\n  fullName: System.Security.Permissions.RegistryPermissionAccess\n- uid: System.Security.Permissions.RegistryPermissionAccess.Create\n  parent: System.Security.Permissions.RegistryPermissionAccess\n  isExternal: false\n  name: Create\n  nameWithType: RegistryPermissionAccess.Create\n  fullName: System.Security.Permissions.RegistryPermissionAccess.Create\n- uid: System.Security.Permissions.RegistryPermissionAccess.NoAccess\n  parent: System.Security.Permissions.RegistryPermissionAccess\n  isExternal: false\n  name: NoAccess\n  nameWithType: RegistryPermissionAccess.NoAccess\n  fullName: System.Security.Permissions.RegistryPermissionAccess.NoAccess\n- uid: System.Security.Permissions.RegistryPermissionAccess.Read\n  parent: System.Security.Permissions.RegistryPermissionAccess\n  isExternal: false\n  name: Read\n  nameWithType: RegistryPermissionAccess.Read\n  fullName: System.Security.Permissions.RegistryPermissionAccess.Read\n- uid: System.Security.Permissions.RegistryPermissionAccess.Write\n  parent: System.Security.Permissions.RegistryPermissionAccess\n  isExternal: false\n  name: Write\n  nameWithType: RegistryPermissionAccess.Write\n  fullName: System.Security.Permissions.RegistryPermissionAccess.Write\n"}