{"nodes":[{"pos":[1721,1974],"content":"Represents a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation that provides security token serializers based on the <bpt id=\"p2\">&lt;xref href=\"System.ServiceModel.Description.ServiceCredentials\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> configured on the service.","needQuote":true,"needEscape":true,"source":"Represents a <xref href=\"System.IdentityModel.Selectors.SecurityTokenManager\"></xref> implementation that provides security token serializers based on the <xref href=\"System.ServiceModel.Description.ServiceCredentials\"></xref> configured on the service."},{"pos":[1986,2161],"content":"This class creates instances of the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class. There is one instance of this class for each service channel listener.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class creates instances of the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class. There is one instance of this class for each service channel listener.","pos":[0,175],"nodes":[{"content":"This class creates instances of the &lt;xref:System.IdentityModel.Selectors.SecurityTokenSerializer&gt; class.","pos":[0,104],"source":"This class creates instances of the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class."},{"content":"There is one instance of this class for each service channel listener.","pos":[105,175]}]}]},{"pos":[3613,3837],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class based on the <bpt id=\"p2\">&lt;xref href=\"System.ServiceModel.Description.ServiceCredentials\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> passed in.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\"></xref> class based on the <xref href=\"System.ServiceModel.Description.ServiceCredentials\"></xref> passed in."},{"pos":[4083,4107],"content":"The service credentials.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service credentials.","pos":[0,24]}]},{"pos":[5413,5508],"content":"Creates a secure conversation token authenticator based on the property requirements passed in.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a secure conversation token authenticator based on the property requirements passed in.","pos":[0,95]}]},{"pos":[6009,6076],"content":"Represents security property requirements specific to the listener.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents security property requirements specific to the listener.","pos":[0,67]}]},{"pos":[6157,6336],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the bootstrap tokens should be preserved; Otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the bootstrap tokens should be preserved; Otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6443,6574],"content":"A security token resolver object that can retrieve security tokens or keys when you have a key identifier or key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"A security token resolver object that can retrieve security tokens or keys when you have a key identifier or key identifier clause.","pos":[0,131]}]},{"pos":[6676,6707],"content":"A security token authenticator.","needQuote":true,"needEscape":true,"nodes":[{"content":"A security token authenticator.","pos":[0,31]}]},{"pos":[7831,7960],"content":"Creates a security token authenticator based on the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates a security token authenticator based on the <xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"></xref>."},{"pos":[7972,8547],"content":"An `outOfBand` token resolver can optionally be returned by the method, which is used by the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] security processor to resolve tokens that are not in the SOAP message when processing security. The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> that is returned by this method validates tokens and extracts claims. One <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> is created for each class derived from <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <ph id=\"ph1\">`outOfBand`</ph> token resolver can optionally be returned by the method, which is used by the <ph id=\"ph2\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> security processor to resolve tokens that are not in the SOAP message when processing security.","pos":[0,247],"source":"An `outOfBand` token resolver can optionally be returned by the method, which is used by the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] security processor to resolve tokens that are not in the SOAP message when processing security."},{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt; that is returned by this method validates tokens and extracts claims.","pos":[248,386],"source":" The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> that is returned by this method validates tokens and extracts claims."},{"content":"One &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt; is created for each class derived from &lt;xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement&gt;.","pos":[387,575],"source":" One <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> is created for each class derived from <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>."}]},{"pos":[9256,9287],"content":"The security token requirement.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security token requirement.","pos":[0,31]}]},{"pos":[9405,9556],"content":"When this method returns, contains a <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref>. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,111],"source":"When this method returns, contains a <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref>."},{"content":"This parameter is passed uninitialized.","pos":[112,151]}]},{"pos":[9658,9691],"content":"The security token authenticator.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security token authenticator.","pos":[0,33]}]},{"pos":[9922,10016],"content":"<ph id=\"ph1\">&lt;code&gt;tokenRequirement&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>tokenRequirement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10119,10226],"content":"A security token authenticator cannot be created for the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\"> tokenRequirement</ph><ept id=\"p1\">&lt;/code&gt;</ept> that was passed in.","needQuote":true,"needEscape":true,"source":"A security token authenticator cannot be created for the <code> tokenRequirement</code> that was passed in."},{"pos":[11010,11134],"content":"Creates a security token provider based on the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates a security token provider based on the <xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"></xref>."},{"pos":[11146,11489],"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class is responsible for obtaining tokens for a given <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>. Optionally, token providers can support renewing and canceling tokens as well. The token provider can cache tokens if it is configured to do so.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class is responsible for obtaining tokens for a given <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>. Optionally, token providers can support renewing and canceling tokens as well. The token provider can cache tokens if it is configured to do so.","pos":[0,343],"nodes":[{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; class is responsible for obtaining tokens for a given &lt;xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement&gt;.","pos":[0,198],"source":"The <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class is responsible for obtaining tokens for a given <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>."},{"content":"Optionally, token providers can support renewing and canceling tokens as well.","pos":[199,277]},{"content":"The token provider can cache tokens if it is configured to do so.","pos":[278,343]}]}]},{"pos":[12108,12139],"content":"The security token requirement.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security token requirement.","pos":[0,31]}]},{"pos":[12236,12264],"content":"The security token provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security token provider.","pos":[0,28]}]},{"pos":[12490,12579],"content":"<ph id=\"ph1\">&lt;code&gt;requirement&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>requirement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12682,12778],"content":"A security token provider cannot be created for the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">requirement</ph><ept id=\"p1\">&lt;/code&gt;</ept> that was passed in.","needQuote":true,"needEscape":true,"source":"A security token provider cannot be created for the <code>requirement</code> that was passed in."},{"pos":[13552,13634],"content":"Creates a security token serializer based on the security token version passed in.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a security token serializer based on the security token version passed in.","pos":[0,82]}]},{"pos":[13646,14151],"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used for writing and reading security tokens and security token references. When deserializing the token from XML, the returned token must be able to perform cryptographic operations. The token serializer must be able to do enough validation to ensure that the token can do cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding, and so on) but should defer application trust decisions to the authenticator.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used for writing and reading security tokens and security token references. When deserializing the token from XML, the returned token must be able to perform cryptographic operations. The token serializer must be able to do enough validation to ensure that the token can do cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding, and so on) but should defer application trust decisions to the authenticator.","pos":[0,505],"nodes":[{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenSerializer&gt; is used for writing and reading security tokens and security token references.","pos":[0,144],"source":"The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used for writing and reading security tokens and security token references."},{"content":"When deserializing the token from XML, the returned token must be able to perform cryptographic operations.","pos":[145,252]},{"content":"The token serializer must be able to do enough validation to ensure that the token can do cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding, and so on) but should defer application trust decisions to the authenticator.","pos":[253,505]}]}]},{"pos":[14456,14490],"content":"The version of the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The version of the security token.","pos":[0,34]}]},{"pos":[14589,14619],"content":"The security token serializer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security token serializer.","pos":[0,30]}]},{"pos":[14847,14942],"content":"A security token serializer cannot be created for the  <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">version</ph><ept id=\"p1\">&lt;/code&gt;</ept> that was passed in.","needQuote":true,"needEscape":true,"source":"A security token serializer cannot be created for the  <code>version</code> that was passed in."},{"pos":[15676,15769],"content":"Gets the <xref:System.ServiceModel.EndpointIdentity> based on the security token requirement.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.ServiceModel.EndpointIdentity&gt; based on the security token requirement.","pos":[0,93],"source":"Gets the <xref:System.ServiceModel.EndpointIdentity> based on the security token requirement."}]},{"pos":[15781,15981],"content":"This method is called by the <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure to obtain the &lt;xref:System.ServiceModel.EndpointIdentity&gt; that corresponds to a service endpoint.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This method is called by the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] infrastructure to obtain the <xref:System.ServiceModel.EndpointIdentity> that corresponds to a service endpoint."},{"pos":[16281,16312],"content":"The security token requirement.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security token requirement.","pos":[0,31]}]},{"pos":[16393,16615],"content":"The endpoint identity that corresponds to the <code>tokenRequirement</code>. <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned if an identity cannot be created from the <code>tokenRequirement</code>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The endpoint identity that corresponds to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">tokenRequirement</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,76],"source":"The endpoint identity that corresponds to the <code>tokenRequirement</code>."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is returned if an identity cannot be created from the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">tokenRequirement</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","pos":[77,222],"source":"<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned if an identity cannot be created from the <code>tokenRequirement</code>."}]},{"pos":[16831,16925],"content":"<ph id=\"ph1\">&lt;code&gt;tokenRequirement&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>tokenRequirement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[17734,17807],"content":"Determines whether the security token requirement is for an issued token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the security token requirement is for an issued token.","pos":[0,73]}]},{"pos":[18075,18106],"content":"The security token requirement.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security token requirement.","pos":[0,31]}]},{"pos":[18165,18358],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the security token requirement is for an issued token; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the security token requirement is for an issued token; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19038,19113],"content":"Gets the service credentials used to construct this instance of this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the service credentials used to construct this instance of this class.","pos":[0,75]}]},{"pos":[19125,19293],"content":"The <xref:System.ServiceModel.Description.ServiceCredentials> object enables you to configure service credentials as well as service credential authentication settings.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.ServiceModel.Description.ServiceCredentials&gt; object enables you to configure service credentials as well as service credential authentication settings.","pos":[0,168],"source":"The <xref:System.ServiceModel.Description.ServiceCredentials> object enables you to configure service credentials as well as service credential authentication settings."}]},{"pos":[19497,19521],"content":"The service credentials.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service credentials.","pos":[0,24]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  id: ServiceCredentialsSecurityTokenManager\n  children:\n  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)\n  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)\n  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)\n  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)\n  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials\n  langs:\n  - csharp\n  name: ServiceCredentialsSecurityTokenManager\n  nameWithType: ServiceCredentialsSecurityTokenManager\n  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  type: Class\n  summary: Represents a <xref href=\"System.IdentityModel.Selectors.SecurityTokenManager\"></xref> implementation that provides security token serializers based on the <xref href=\"System.ServiceModel.Description.ServiceCredentials\"></xref> configured on the service.\n  remarks: This class creates instances of the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class. There is one instance of this class for each service channel listener.\n  example:\n  - \"The following code shows how to override this class to create a customized Service Credentials Token Manager.  \\n  \\n [!code-vb[c_CustomCredentials#5](~/add/codesnippet/visualbasic/t-system.servicemodel.se_12_1.vb)]\\n [!code-cs[c_CustomCredentials#5](~/add/codesnippet/csharp/t-system.servicemodel.se_12_1.cs)]\"\n  syntax:\n    content: 'public class ServiceCredentialsSecurityTokenManager : System.IdentityModel.Selectors.SecurityTokenManager, System.ServiceModel.Security.IEndpointIdentityProvider'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Selectors.SecurityTokenManager\n  implements:\n  - System.ServiceModel.Security.IEndpointIdentityProvider\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)\n  id: '#ctor(System.ServiceModel.Description.ServiceCredentials)'\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  langs:\n  - csharp\n  name: ServiceCredentialsSecurityTokenManager(ServiceCredentials)\n  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager(ServiceCredentials)\n  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager(ServiceCredentials)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\"></xref> class based on the <xref href=\"System.ServiceModel.Description.ServiceCredentials\"></xref> passed in.\n  syntax:\n    content: public ServiceCredentialsSecurityTokenManager (System.ServiceModel.Description.ServiceCredentials parent);\n    parameters:\n    - id: parent\n      type: System.ServiceModel.Description.ServiceCredentials\n      description: The service credentials.\n  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)\n  id: CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  langs:\n  - csharp\n  name: CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)\n  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)\n  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Creates a secure conversation token authenticator based on the property requirements passed in.\n  syntax:\n    content: protected System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecureConversationTokenAuthenticator (System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement recipientRequirement, bool preserveBootstrapTokens, out System.IdentityModel.Selectors.SecurityTokenResolver sctResolver);\n    parameters:\n    - id: recipientRequirement\n      type: System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement\n      description: Represents security property requirements specific to the listener.\n    - id: preserveBootstrapTokens\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the bootstrap tokens should be preserved; Otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: sctResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: A security token resolver object that can retrieve security tokens or keys when you have a key identifier or key identifier clause.\n    return:\n      type: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n      description: A security token authenticator.\n  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)\n  id: CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  langs:\n  - csharp\n  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)\n  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)\n  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Creates a security token authenticator based on the <xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"></xref>.\n  remarks: An `outOfBand` token resolver can optionally be returned by the method, which is used by the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] security processor to resolve tokens that are not in the SOAP message when processing security. The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> that is returned by this method validates tokens and extracts claims. One <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> is created for each class derived from <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.\n  example:\n  - \"The following code is an example of how to override this method.  \\n  \\n [!code-cs[c_CustomTokenAuthenticator#2](~/add/codesnippet/csharp/b70d167c-ca6e-4160-bfdd-_1.cs)]\\n [!code-vb[c_CustomTokenAuthenticator#2](~/add/codesnippet/visualbasic/b70d167c-ca6e-4160-bfdd-_1.vb)]\"\n  syntax:\n    content: public override System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);\n    parameters:\n    - id: tokenRequirement\n      type: System.IdentityModel.Selectors.SecurityTokenRequirement\n      description: The security token requirement.\n    - id: outOfBandTokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: When this method returns, contains a <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref>. This parameter is passed uninitialized.\n    return:\n      type: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n      description: The security token authenticator.\n  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>tokenRequirement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: A security token authenticator cannot be created for the <code> tokenRequirement</code> that was passed in.\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  id: CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  langs:\n  - csharp\n  name: CreateSecurityTokenProvider(SecurityTokenRequirement)\n  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)\n  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Creates a security token provider based on the <xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"></xref>.\n  remarks: The <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class is responsible for obtaining tokens for a given <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>. Optionally, token providers can support renewing and canceling tokens as well. The token provider can cache tokens if it is configured to do so.\n  example:\n  - \"The following code shows how to override this method.  \\n  \\n [!code-vb[ClientCredentialsSecurityTokenManager#4](~/add/codesnippet/visualbasic/399fa5ca-8ab5-4dd6-bfe8-_1.vb)]\\n [!code-cs[ClientCredentialsSecurityTokenManager#4](~/add/codesnippet/csharp/399fa5ca-8ab5-4dd6-bfe8-_1.cs)]\"\n  syntax:\n    content: public override System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);\n    parameters:\n    - id: requirement\n      type: System.IdentityModel.Selectors.SecurityTokenRequirement\n      description: The security token requirement.\n    return:\n      type: System.IdentityModel.Selectors.SecurityTokenProvider\n      description: The security token provider.\n  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>requirement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: A security token provider cannot be created for the <code>requirement</code> that was passed in.\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)\n  id: CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  langs:\n  - csharp\n  name: CreateSecurityTokenSerializer(SecurityTokenVersion)\n  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)\n  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Creates a security token serializer based on the security token version passed in.\n  remarks: The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used for writing and reading security tokens and security token references. When deserializing the token from XML, the returned token must be able to perform cryptographic operations. The token serializer must be able to do enough validation to ensure that the token can do cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding, and so on) but should defer application trust decisions to the authenticator.\n  syntax:\n    content: public override System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);\n    parameters:\n    - id: version\n      type: System.IdentityModel.Selectors.SecurityTokenVersion\n      description: The version of the security token.\n    return:\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: The security token serializer.\n  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: A security token serializer cannot be created for the  <code>version</code> that was passed in.\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  id: GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  langs:\n  - csharp\n  name: GetIdentityOfSelf(SecurityTokenRequirement)\n  nameWithType: ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(SecurityTokenRequirement)\n  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(SecurityTokenRequirement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the <xref:System.ServiceModel.EndpointIdentity> based on the security token requirement.\n  remarks: This method is called by the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] infrastructure to obtain the <xref:System.ServiceModel.EndpointIdentity> that corresponds to a service endpoint.\n  syntax:\n    content: public virtual System.ServiceModel.EndpointIdentity GetIdentityOfSelf (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);\n    parameters:\n    - id: tokenRequirement\n      type: System.IdentityModel.Selectors.SecurityTokenRequirement\n      description: The security token requirement.\n    return:\n      type: System.ServiceModel.EndpointIdentity\n      description: The endpoint identity that corresponds to the <code>tokenRequirement</code>. <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned if an identity cannot be created from the <code>tokenRequirement</code>.\n  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>tokenRequirement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  id: IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  langs:\n  - csharp\n  name: IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)\n  nameWithType: ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)\n  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Determines whether the security token requirement is for an issued token.\n  syntax:\n    content: protected bool IsIssuedSecurityTokenRequirement (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);\n    parameters:\n    - id: requirement\n      type: System.IdentityModel.Selectors.SecurityTokenRequirement\n      description: The security token requirement.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the security token requirement is for an issued token; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials\n  id: ServiceCredentials\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  langs:\n  - csharp\n  name: ServiceCredentials\n  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentials\n  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the service credentials used to construct this instance of this class.\n  remarks: The <xref:System.ServiceModel.Description.ServiceCredentials> object enables you to configure service credentials as well as service credential authentication settings.\n  syntax:\n    content: public System.ServiceModel.Description.ServiceCredentials ServiceCredentials { get; }\n    return:\n      type: System.ServiceModel.Description.ServiceCredentials\n      description: The service credentials.\n  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Selectors.SecurityTokenManager\n  isExternal: false\n  name: System.IdentityModel.Selectors.SecurityTokenManager\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  isExternal: false\n  name: ServiceCredentialsSecurityTokenManager(ServiceCredentials)\n  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager(ServiceCredentials)\n  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager(ServiceCredentials)\n- uid: System.ServiceModel.Description.ServiceCredentials\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: ServiceCredentials\n  nameWithType: ServiceCredentials\n  fullName: System.ServiceModel.Description.ServiceCredentials\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  isExternal: false\n  name: CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)\n  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)\n  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenAuthenticator\n  nameWithType: SecurityTokenAuthenticator\n  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n- uid: System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement\n  parent: System.ServiceModel.Security.Tokens\n  isExternal: false\n  name: RecipientServiceModelSecurityTokenRequirement\n  nameWithType: RecipientServiceModelSecurityTokenRequirement\n  fullName: System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenResolver\n  nameWithType: SecurityTokenResolver\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  isExternal: false\n  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)\n  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)\n  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenRequirement\n  nameWithType: SecurityTokenRequirement\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  isExternal: false\n  name: CreateSecurityTokenProvider(SecurityTokenRequirement)\n  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)\n  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenProvider\n  nameWithType: SecurityTokenProvider\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  isExternal: false\n  name: CreateSecurityTokenSerializer(SecurityTokenVersion)\n  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)\n  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)\n- uid: System.IdentityModel.Selectors.SecurityTokenSerializer\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenSerializer\n  nameWithType: SecurityTokenSerializer\n  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer\n- uid: System.IdentityModel.Selectors.SecurityTokenVersion\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenVersion\n  nameWithType: SecurityTokenVersion\n  fullName: System.IdentityModel.Selectors.SecurityTokenVersion\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  isExternal: false\n  name: GetIdentityOfSelf(SecurityTokenRequirement)\n  nameWithType: ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(SecurityTokenRequirement)\n  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(SecurityTokenRequirement)\n- uid: System.ServiceModel.EndpointIdentity\n  parent: System.ServiceModel\n  isExternal: true\n  name: EndpointIdentity\n  nameWithType: EndpointIdentity\n  fullName: System.ServiceModel.EndpointIdentity\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  isExternal: false\n  name: IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)\n  nameWithType: ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)\n  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  isExternal: false\n  name: ServiceCredentials\n  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentials\n  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor*\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  isExternal: false\n  name: ServiceCredentialsSecurityTokenManager\n  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator*\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  isExternal: false\n  name: CreateSecureConversationTokenAuthenticator\n  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator*\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  isExternal: false\n  name: CreateSecurityTokenAuthenticator\n  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider*\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  isExternal: false\n  name: CreateSecurityTokenProvider\n  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer*\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  isExternal: false\n  name: CreateSecurityTokenSerializer\n  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf*\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  isExternal: false\n  name: GetIdentityOfSelf\n  nameWithType: ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement*\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  isExternal: false\n  name: IsIssuedSecurityTokenRequirement\n  nameWithType: ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement\n- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials*\n  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager\n  isExternal: false\n  name: ServiceCredentials\n  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentials\n"}