{"nodes":[{"pos":[338,479],"content":"An immutable class that implements the basic functionality for the Query, Insert, Update, Delete, and function invocation command tree types.","needQuote":true,"needEscape":true,"nodes":[{"content":"An immutable class that implements the basic functionality for the Query, Insert, Update, Delete, and function invocation command tree types.","pos":[0,141]}]},{"pos":[491,642],"content":"A DbCommandTree is an abstract class that is used to represent queries, Data Manipulation Language (DML) operations and function/procedure invocations.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A DbCommandTree is an abstract class that is used to represent queries, Data Manipulation Language (DML) operations and function/procedure invocations.","pos":[0,151]}]},{"pos":[1194,1351],"content":"Gets the name and corresponding type of each parameter that can be referenced within this <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbCommandTree\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the name and corresponding type of each parameter that can be referenced within this <xref href=\"System.Data.Common.CommandTrees.DbCommandTree\"></xref>."},{"pos":[1698,1850],"content":"The name and corresponding type of each parameter that can be referenced within this <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbCommandTree\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The name and corresponding type of each parameter that can be referenced within this <xref href=\"System.Data.Common.CommandTrees.DbCommandTree\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DbCommandTree\n  id: DbCommandTree\n  children:\n  - System.Data.Common.CommandTrees.DbCommandTree.Parameters\n  langs:\n  - csharp\n  name: DbCommandTree\n  nameWithType: DbCommandTree\n  fullName: System.Data.Common.CommandTrees.DbCommandTree\n  type: Class\n  summary: An immutable class that implements the basic functionality for the Query, Insert, Update, Delete, and function invocation command tree types.\n  remarks: A DbCommandTree is an abstract class that is used to represent queries, Data Manipulation Language (DML) operations and function/procedure invocations.\n  syntax:\n    content: public abstract class DbCommandTree\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbCommandTree.Parameters\n  id: Parameters\n  parent: System.Data.Common.CommandTrees.DbCommandTree\n  langs:\n  - csharp\n  name: Parameters\n  nameWithType: DbCommandTree.Parameters\n  fullName: System.Data.Common.CommandTrees.DbCommandTree.Parameters\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets the name and corresponding type of each parameter that can be referenced within this <xref href=\"System.Data.Common.CommandTrees.DbCommandTree\"></xref>.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Metadata.Edm.TypeUsage>> Parameters { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Metadata.Edm.TypeUsage}}\n      description: The name and corresponding type of each parameter that can be referenced within this <xref href=\"System.Data.Common.CommandTrees.DbCommandTree\"></xref>.\n  overload: System.Data.Common.CommandTrees.DbCommandTree.Parameters*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Common.CommandTrees.DbCommandTree.Parameters\n  parent: System.Data.Common.CommandTrees.DbCommandTree\n  isExternal: false\n  name: Parameters\n  nameWithType: DbCommandTree.Parameters\n  fullName: System.Data.Common.CommandTrees.DbCommandTree.Parameters\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Metadata.Edm.TypeUsage}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<KeyValuePair<String,TypeUsage>>\n  nameWithType: IEnumerable<KeyValuePair<String,TypeUsage>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Metadata.Edm.TypeUsage>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Metadata.Edm.TypeUsage>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.String,System.Data.Metadata.Edm.TypeUsage>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Data.Metadata.Edm.TypeUsage\n    name: TypeUsage\n    nameWithType: TypeUsage\n    fullName: TypeUsage\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DbCommandTree.Parameters*\n  parent: System.Data.Common.CommandTrees.DbCommandTree\n  isExternal: false\n  name: Parameters\n  nameWithType: DbCommandTree.Parameters\n"}