{"nodes":[{"pos":[1317,1403],"content":"Specifies the base class for all XML Web service client proxies created using ASP.NET.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the base class for all XML Web service client proxies created using ASP.NET.","pos":[0,86]}]},{"pos":[1416,2667],"content":"The properties of the WebClientProtocol class are used to control the behavior of the transport used to transmit the XML Web service request and response. The properties on this class map to properties found on <xref:System.Net.WebRequest>. Instances of classes deriving from <xref:System.Net.WebRequest>, such as <xref:System.Net.HttpWebRequest>, are used as the transport mechanism for XML Web services created using ASP.NET.       To communicate with an XML Web service, you must create a proxy class deriving indirectly or directly from WebClientProtocol for the XML Web service you want to call. Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description. Since WebClientProtocol is the base class for your client proxy, you will find its properties on your proxy classes. These properties are useful for controlling the request behavior of the underlying transport. For instance, use the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property for calling authenticated XML Web services. Many of the WebClientProtocol properties are used to initialize the <xref:System.Net.WebRequest> object that is used to make the Web request.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The properties of the WebClientProtocol class are used to control the behavior of the transport used to transmit the XML Web service request and response. The properties on this class map to properties found on <xref:System.Net.WebRequest>. Instances of classes deriving from <xref:System.Net.WebRequest>, such as <xref:System.Net.HttpWebRequest>, are used as the transport mechanism for XML Web services created using ASP.NET.       To communicate with an XML Web service, you must create a proxy class deriving indirectly or directly from WebClientProtocol for the XML Web service you want to call. Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description. Since WebClientProtocol is the base class for your client proxy, you will find its properties on your proxy classes. These properties are useful for controlling the request behavior of the underlying transport. For instance, use the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property for calling authenticated XML Web services. Many of the WebClientProtocol properties are used to initialize the <xref:System.Net.WebRequest> object that is used to make the Web request.","pos":[0,1249],"nodes":[{"content":"The properties of the WebClientProtocol class are used to control the behavior of the transport used to transmit the XML Web service request and response.","pos":[0,154]},{"content":"The properties on this class map to properties found on &lt;xref:System.Net.WebRequest&gt;.","pos":[155,240],"source":" The properties on this class map to properties found on <xref:System.Net.WebRequest>."},{"content":"Instances of classes deriving from &lt;xref:System.Net.WebRequest&gt;, such as &lt;xref:System.Net.HttpWebRequest&gt;, are used as the transport mechanism for XML Web services created using ASP.NET.","pos":[241,427],"source":" Instances of classes deriving from <xref:System.Net.WebRequest>, such as <xref:System.Net.HttpWebRequest>, are used as the transport mechanism for XML Web services created using ASP.NET."},{"content":"To communicate with an XML Web service, you must create a proxy class deriving indirectly or directly from WebClientProtocol for the XML Web service you want to call.","pos":[434,600]},{"content":"Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description.","pos":[601,751]},{"content":"Since WebClientProtocol is the base class for your client proxy, you will find its properties on your proxy classes.","pos":[752,868]},{"content":"These properties are useful for controlling the request behavior of the underlying transport.","pos":[869,962]},{"content":"For instance, use the &lt;xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A&gt; property for calling authenticated XML Web services.","pos":[963,1107],"source":" For instance, use the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property for calling authenticated XML Web services."},{"content":"Many of the WebClientProtocol properties are used to initialize the &lt;xref:System.Net.WebRequest&gt; object that is used to make the Web request.","pos":[1108,1249],"source":" Many of the WebClientProtocol properties are used to initialize the <xref:System.Net.WebRequest> object that is used to make the Web request."}]}]},{"pos":[4937,5046],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.Protocols.WebClientProtocol\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.WebClientProtocol\"></xref> class."},{"pos":[6061,6108],"content":"Cancels a request to an XML Web service method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Cancels a request to an XML Web service method.","pos":[0,47]}]},{"pos":[6784,6844],"content":"Add an instance of the client protocol handler to the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Add an instance of the client protocol handler to the cache.","pos":[0,60]}]},{"pos":[7002,7057],"content":"The <xref:System.Type> of the client protocol handler..","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the client protocol handler..","pos":[0,55],"source":"The <xref:System.Type> of the client protocol handler.."}]},{"pos":[7119,7172],"content":"The client protocol handler to be added to the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"The client protocol handler to be added to the cache.","pos":[0,53]}]},{"pos":[7735,7797],"content":"Gets or sets the name of the connection group for the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the connection group for the request.","pos":[0,62]}]},{"pos":[7809,7978],"content":"The ConnectionGroupName property enables you to associate a request to a connection group. For more details, see <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ConnectionGroupName property enables you to associate a request to a connection group. For more details, see <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>.","pos":[0,169],"nodes":[{"content":"The ConnectionGroupName property enables you to associate a request to a connection group.","pos":[0,90]},{"content":"For more details, see &lt;xref:System.Net.HttpWebRequest.ConnectionGroupName%2A&gt;.","pos":[91,169],"source":" For more details, see <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>."}]}]},{"pos":[8107,8177],"content":"The name of the connection group. The default is <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the connection group. The default is <xref:System.String>.","pos":[0,70],"nodes":[{"content":"The name of the connection group.","pos":[0,33]},{"content":"The default is &lt;xref:System.String&gt;.","pos":[34,70],"source":" The default is <xref:System.String>."}]}]},{"pos":[8709,8785],"content":"Gets or sets security credentials for XML Web service client authentication.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets security credentials for XML Web service client authentication.","pos":[0,76]}]},{"pos":[8798,9473],"content":"When using the `Credentials` property, a XML Web service client must instantiate a class implementing <xref:System.Net.ICredentials>, such as <xref:System.Net.NetworkCredential>, and then set the client credentials specific to the authentication mechanism. The <xref:System.Net.NetworkCredential> class can be used to set authentication credentials using the basic, digest, NTLM and Kerberos authentication mechanisms.       When the Credentials property is set to <xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName> then the client negotiates with the server to do Kerberos and/or NTLM authentication depending on how the server is configured.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When using the <ph id=\"ph1\">`Credentials`</ph> property, a XML Web service client must instantiate a class implementing &lt;xref:System.Net.ICredentials&gt;, such as &lt;xref:System.Net.NetworkCredential&gt;, and then set the client credentials specific to the authentication mechanism.","pos":[0,256],"source":"When using the `Credentials` property, a XML Web service client must instantiate a class implementing <xref:System.Net.ICredentials>, such as <xref:System.Net.NetworkCredential>, and then set the client credentials specific to the authentication mechanism."},{"content":"The &lt;xref:System.Net.NetworkCredential&gt; class can be used to set authentication credentials using the basic, digest, NTLM and Kerberos authentication mechanisms.","pos":[257,418],"source":" The <xref:System.Net.NetworkCredential> class can be used to set authentication credentials using the basic, digest, NTLM and Kerberos authentication mechanisms."},{"content":"When the Credentials property is set to &lt;xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName&gt; then the client negotiates with the server to do Kerberos and/or NTLM authentication depending on how the server is configured.","pos":[425,673],"source":"       When the Credentials property is set to <xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName> then the client negotiates with the server to do Kerberos and/or NTLM authentication depending on how the server is configured."}]},{"pos":[10474,10540],"content":"The <xref:System.Net.ICredentials> for the XML Web service client.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Net.ICredentials&gt; for the XML Web service client.","pos":[0,66],"source":"The <xref:System.Net.ICredentials> for the XML Web service client."}]},{"pos":[11111,11172],"content":"Gets an instance of a client protocol handler from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an instance of a client protocol handler from the cache.","pos":[0,61]}]},{"pos":[11320,11404],"content":"The <xref:System.Type> of the client protocol handler to be returned from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the client protocol handler to be returned from the cache.","pos":[0,84],"source":"The <xref:System.Type> of the client protocol handler to be returned from the cache."}]},{"pos":[11462,11518],"content":"An instance of a client protocol handler from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of a client protocol handler from the cache.","pos":[0,56]}]},{"pos":[12090,12350],"content":"Creates a <xref:System.Net.WebRequest> instance for the specified <code>uri</code>. This protected method is called by the XML Web service client infrastructure to get a new <xref:System.Net.WebRequest> transport object to transmit the XML Web service request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a &lt;xref:System.Net.WebRequest&gt; instance for the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">uri</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,83],"source":"Creates a <xref:System.Net.WebRequest> instance for the specified <code>uri</code>."},{"content":"This protected method is called by the XML Web service client infrastructure to get a new &lt;xref:System.Net.WebRequest&gt; transport object to transmit the XML Web service request.","pos":[84,260],"source":" This protected method is called by the XML Web service client infrastructure to get a new <xref:System.Net.WebRequest> transport object to transmit the XML Web service request."}]},{"pos":[12362,12546],"content":"This method can be overridden to customize the <xref:System.Net.WebRequest> object before the XML Web service request is made. For example you could add a custom header to the request.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method can be overridden to customize the <xref:System.Net.WebRequest> object before the XML Web service request is made. For example you could add a custom header to the request.","pos":[0,184],"nodes":[{"content":"This method can be overridden to customize the &lt;xref:System.Net.WebRequest&gt; object before the XML Web service request is made.","pos":[0,126],"source":"This method can be overridden to customize the <xref:System.Net.WebRequest> object before the XML Web service request is made."},{"content":"For example you could add a custom header to the request.","pos":[127,184]}]}]},{"pos":[12707,12783],"content":"The <xref:System.Uri> to use when creating the <xref:System.Net.WebRequest>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Uri&gt; to use when creating the &lt;xref:System.Net.WebRequest&gt;.","pos":[0,76],"source":"The <xref:System.Uri> to use when creating the <xref:System.Net.WebRequest>."}]},{"pos":[12849,12891],"content":"The <xref:System.Net.WebRequest> instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Net.WebRequest&gt; instance.","pos":[0,42],"source":"The <xref:System.Net.WebRequest> instance."}]},{"pos":[13091,13186],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">uri</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>uri</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13715,13790],"content":"Returns a response from a synchronous request to an XML Web service method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a response from a synchronous request to an XML Web service method.","pos":[0,75]}]},{"pos":[13990,14048],"content":"The <xref:System.Net.WebRequest> to get the response from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Net.WebRequest&gt; to get the response from.","pos":[0,58],"source":"The <xref:System.Net.WebRequest> to get the response from."}]},{"pos":[14115,14182],"content":"A response from a synchronous request to an XML Web service method.","needQuote":true,"needEscape":true,"nodes":[{"content":"A response from a synchronous request to an XML Web service method.","pos":[0,67]}]},{"pos":[14365,14473],"content":"If <xref:System.Web.Services.Protocols.WebClientProtocol.Abort*> is invoked prior to calling GetWebResponse.","needQuote":true,"needEscape":true,"nodes":[{"content":"If &lt;xref:System.Web.Services.Protocols.WebClientProtocol.Abort*&gt; is invoked prior to calling GetWebResponse.","pos":[0,108],"source":"If <xref:System.Web.Services.Protocols.WebClientProtocol.Abort*> is invoked prior to calling GetWebResponse."}]},{"pos":[15081,15301],"content":"Returns a response from an asynchronous request to an XML Web service method. This protected method is called by the XML Web service client infrastructure to get the response from an asynchronous XML Web service request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a response from an asynchronous request to an XML Web service method. This protected method is called by the XML Web service client infrastructure to get the response from an asynchronous XML Web service request.","pos":[0,220],"nodes":[{"content":"Returns a response from an asynchronous request to an XML Web service method.","pos":[0,77]},{"content":"This protected method is called by the XML Web service client infrastructure to get the response from an asynchronous XML Web service request.","pos":[78,220]}]}]},{"pos":[15522,15580],"content":"The <xref:System.Net.WebRequest> to get the response from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Net.WebRequest&gt; to get the response from.","pos":[0,58],"source":"The <xref:System.Net.WebRequest> to get the response from."}]},{"pos":[15649,15772],"content":"The <xref:System.IAsyncResult> to pass to <xref:System.Net.HttpWebRequest.EndGetResponse*> when the response has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; to pass to &lt;xref:System.Net.HttpWebRequest.EndGetResponse*&gt; when the response has completed.","pos":[0,123],"source":"The <xref:System.IAsyncResult> to pass to <xref:System.Net.HttpWebRequest.EndGetResponse*> when the response has completed."}]},{"pos":[15839,15908],"content":"A response from an asynchronous request to an XML Web service method.","needQuote":true,"needEscape":true,"nodes":[{"content":"A response from an asynchronous request to an XML Web service method.","pos":[0,69]}]},{"pos":[16091,16255],"content":"If &lt;xref:System.Web.Services.Protocols.WebClientProtocol.Abort<bpt id=\"p1\">*</bpt>&gt; is invoked prior to calling &lt;xref:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse<ept id=\"p1\">*</ept>&gt;.","needQuote":true,"needEscape":true,"source":"If <xref:System.Web.Services.Protocols.WebClientProtocol.Abort*> is invoked prior to calling <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse*>."},{"pos":[16709,16760],"content":"Gets or sets whether pre-authentication is enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets whether pre-authentication is enabled.","pos":[0,51]}]},{"pos":[16773,17757],"content":"When a client requests a resource without using credentials, the server challenges the request and indicates what authentication schemes it supports. The client chooses an authentication scheme and sends the appropriate `WWW-authenticate` header to the server. When PreAuthenticate is `true`, the `WWW-authenticate` header is sent with all subsequent requests.       When PreAuthenticate is `false`, a request is made to the XML Web service method without initially attempting to authenticate the user. If the XML Web service allows anonymous access, then the XML Web service method is executed. If anonymous access is disallowed, a 401 HTTP return code is sent back to the client. In response, the <xref:System.Web.Services.Protocols.WebClientProtocol> class returns authentication credentials to the Web server. If the client is authenticated and subsequently authorized to access the XML Web service, the XML Web service method is executed; otherwise the client is denied access.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When a client requests a resource without using credentials, the server challenges the request and indicates what authentication schemes it supports.","pos":[0,149]},{"content":"The client chooses an authentication scheme and sends the appropriate <ph id=\"ph1\">`WWW-authenticate`</ph> header to the server.","pos":[150,260],"source":" The client chooses an authentication scheme and sends the appropriate `WWW-authenticate` header to the server."},{"content":"When PreAuthenticate is <ph id=\"ph1\">`true`</ph>, the <ph id=\"ph2\">`WWW-authenticate`</ph> header is sent with all subsequent requests.","pos":[261,360],"source":" When PreAuthenticate is `true`, the `WWW-authenticate` header is sent with all subsequent requests."},{"content":"When PreAuthenticate is <ph id=\"ph1\">`false`</ph>, a request is made to the XML Web service method without initially attempting to authenticate the user.","pos":[367,502],"source":"       When PreAuthenticate is `false`, a request is made to the XML Web service method without initially attempting to authenticate the user."},{"content":"If the XML Web service allows anonymous access, then the XML Web service method is executed.","pos":[503,595]},{"content":"If anonymous access is disallowed, a 401 HTTP return code is sent back to the client.","pos":[596,681]},{"content":"In response, the &lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt; class returns authentication credentials to the Web server.","pos":[682,813],"source":" In response, the <xref:System.Web.Services.Protocols.WebClientProtocol> class returns authentication credentials to the Web server."},{"content":"If the client is authenticated and subsequently authorized to access the XML Web service, the XML Web service method is executed; otherwise the client is denied access.","pos":[814,982]}]},{"pos":[17882,18129],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to pre-authenticate the request; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to pre-authenticate the request; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,168],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to pre-authenticate the request; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[169,247],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[18677,18764],"content":"The <xref:System.Text.Encoding> used to make the client request to the XML Web service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Text.Encoding&gt; used to make the client request to the XML Web service.","pos":[0,87],"source":"The <xref:System.Text.Encoding> used to make the client request to the XML Web service."}]},{"pos":[18777,19344],"content":"The RequestEncoding determines the encoding for the request message. The <xref:System.Net.WebRequest.ContentType%2A> of the request will be annotated with the encoding value.       Classes deriving from <xref:System.Web.Services.Protocols.WebClientProtocol> support a particular protocol, such as <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> does for SOAP, set this property to conform to encoding requirements for the specific protocol. For example, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> sets the default encoding to UTF-8.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RequestEncoding determines the encoding for the request message. The <xref:System.Net.WebRequest.ContentType%2A> of the request will be annotated with the encoding value.       Classes deriving from <xref:System.Web.Services.Protocols.WebClientProtocol> support a particular protocol, such as <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> does for SOAP, set this property to conform to encoding requirements for the specific protocol. For example, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> sets the default encoding to UTF-8.","pos":[0,565],"nodes":[{"content":"The RequestEncoding determines the encoding for the request message.","pos":[0,68]},{"content":"The &lt;xref:System.Net.WebRequest.ContentType%2A&gt; of the request will be annotated with the encoding value.","pos":[69,174],"source":" The <xref:System.Net.WebRequest.ContentType%2A> of the request will be annotated with the encoding value."},{"content":"Classes deriving from &lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt; support a particular protocol, such as &lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt; does for SOAP, set this property to conform to encoding requirements for the specific protocol.","pos":[181,452],"source":"       Classes deriving from <xref:System.Web.Services.Protocols.WebClientProtocol> support a particular protocol, such as <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> does for SOAP, set this property to conform to encoding requirements for the specific protocol."},{"content":"For example, the &lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt; sets the default encoding to UTF-8.","pos":[453,565],"source":" For example, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> sets the default encoding to UTF-8."}]}]},{"pos":[20264,20462],"content":"The character encoding for the client request. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which uses the default encoding for the underlying transport and protocol.","needQuote":true,"needEscape":true,"nodes":[{"content":"The character encoding for the client request.","pos":[0,46]},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which uses the default encoding for the underlying transport and protocol.","pos":[47,198],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which uses the default encoding for the underlying transport and protocol."}]},{"pos":[20970,21104],"content":"Indicates the time an XML Web service client waits for the reply to a synchronous XML Web service request to arrive (in milliseconds).","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates the time an XML Web service client waits for the reply to a synchronous XML Web service request to arrive (in milliseconds).","pos":[0,134]}]},{"pos":[21116,21418],"content":"Setting the Timeout property to <xref:System.Threading.Timeout.Infinite?displayProperty=fullName> indicates that the request does not time out. Even though an XML Web service client can set the Timeout property to not time out, the Web server can still cause the request to time out on the server side.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Setting the Timeout property to <xref:System.Threading.Timeout.Infinite?displayProperty=fullName> indicates that the request does not time out. Even though an XML Web service client can set the Timeout property to not time out, the Web server can still cause the request to time out on the server side.","pos":[0,302],"nodes":[{"content":"Setting the Timeout property to &lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt; indicates that the request does not time out.","pos":[0,143],"source":"Setting the Timeout property to <xref:System.Threading.Timeout.Infinite?displayProperty=fullName> indicates that the request does not time out."},{"content":"Even though an XML Web service client can set the Timeout property to not time out, the Web server can still cause the request to time out on the server side.","pos":[144,302]}]}]},{"pos":[22074,22186],"content":"The time out, in milliseconds, for synchronous calls to the XML Web service. The default is 100000 milliseconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time out, in milliseconds, for synchronous calls to the XML Web service. The default is 100000 milliseconds.","pos":[0,112],"nodes":[{"content":"The time out, in milliseconds, for synchronous calls to the XML Web service.","pos":[0,76]},{"content":"The default is 100000 milliseconds.","pos":[77,112]}]}]},{"pos":[22666,22740],"content":"Gets or sets the base URL of the XML Web service the client is requesting.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the base URL of the XML Web service the client is requesting.","pos":[0,74]}]},{"pos":[22753,23393],"content":"Proxy classes generated using Wsdl.exe will set a default Url property for the client to use. The default Url is determined by the location attribute found in the service description from which the proxy class was generated.       Derived classes supporting specific protocols, such as <xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> might add extra information to Url to make the XML Web service request.       The Url property can be changed to refer to any XML Web service that implements the same service description that the proxy class was generated from.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Proxy classes generated using Wsdl.exe will set a default Url property for the client to use. The default Url is determined by the location attribute found in the service description from which the proxy class was generated.       Derived classes supporting specific protocols, such as <xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> might add extra information to Url to make the XML Web service request.       The Url property can be changed to refer to any XML Web service that implements the same service description that the proxy class was generated from.","pos":[0,636],"nodes":[{"content":"Proxy classes generated using Wsdl.exe will set a default Url property for the client to use.","pos":[0,93]},{"content":"The default Url is determined by the location attribute found in the service description from which the proxy class was generated.","pos":[94,224]},{"content":"Derived classes supporting specific protocols, such as &lt;xref:System.Web.Services.Protocols.HttpGetClientProtocol&gt; and &lt;xref:System.Web.Services.Protocols.HttpPostClientProtocol&gt; might add extra information to Url to make the XML Web service request.","pos":[231,480],"source":"       Derived classes supporting specific protocols, such as <xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> might add extra information to Url to make the XML Web service request."},{"content":"The Url property can be changed to refer to any XML Web service that implements the same service description that the proxy class was generated from.","pos":[487,636]}]}]},{"pos":[24002,24100],"content":"The base URL of the XML Web service the client is requesting. The default is <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base URL of the XML Web service the client is requesting. The default is <xref:System.String>.","pos":[0,98],"nodes":[{"content":"The base URL of the XML Web service the client is requesting.","pos":[0,61]},{"content":"The default is &lt;xref:System.String&gt;.","pos":[62,98],"source":" The default is <xref:System.String>."}]}]},{"pos":[24666,24914],"content":"Gets or sets a value that indicates whether to set the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials*> property to the value of the &lt;xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName&gt; property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether to set the &lt;xref:System.Web.Services.Protocols.WebClientProtocol.Credentials*&gt; property to the value of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property.","pos":[0,248],"source":"Gets or sets a value that indicates whether to set the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials*> property to the value of the &lt;xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName&gt; property."}]},{"pos":[25044,25331],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the Credentials property is set to the value of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the Credentials property is set to the value of the &lt;xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName&gt; property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Services.Protocols.WebClientProtocol\n  id: WebClientProtocol\n  children:\n  - System.Web.Services.Protocols.WebClientProtocol.#ctor\n  - System.Web.Services.Protocols.WebClientProtocol.Abort\n  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)\n  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName\n  - System.Web.Services.Protocols.WebClientProtocol.Credentials\n  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)\n  - System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)\n  - System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)\n  - System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate\n  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding\n  - System.Web.Services.Protocols.WebClientProtocol.Timeout\n  - System.Web.Services.Protocols.WebClientProtocol.Url\n  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials\n  langs:\n  - csharp\n  name: WebClientProtocol\n  nameWithType: WebClientProtocol\n  fullName: System.Web.Services.Protocols.WebClientProtocol\n  type: Class\n  summary: Specifies the base class for all XML Web service client proxies created using ASP.NET.\n  remarks: \"The properties of the WebClientProtocol class are used to control the behavior of the transport used to transmit the XML Web service request and response. The properties on this class map to properties found on <xref:System.Net.WebRequest>. Instances of classes deriving from <xref:System.Net.WebRequest>, such as <xref:System.Net.HttpWebRequest>, are used as the transport mechanism for XML Web services created using ASP.NET.  \\n  \\n To communicate with an XML Web service, you must create a proxy class deriving indirectly or directly from WebClientProtocol for the XML Web service you want to call. Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description. Since WebClientProtocol is the base class for your client proxy, you will find its properties on your proxy classes. These properties are useful for controlling the request behavior of the underlying transport. For instance, use the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property for calling authenticated XML Web services. Many of the WebClientProtocol properties are used to initialize the <xref:System.Net.WebRequest> object that is used to make the Web request.\"\n  example:\n  - \"The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form sets proxy information and client credentials on the proxy class prior to calling the remote XML Web service method.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[Classic WebClientProtocol Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_0_1.aspx)]\\n [!code-vb[Classic WebClientProtocol Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_0_1.aspx)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class WebClientProtocol : System.ComponentModel.Component\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.WebClientProtocol.#ctor\n  id: '#ctor'\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: WebClientProtocol()\n  nameWithType: WebClientProtocol.WebClientProtocol()\n  fullName: System.Web.Services.Protocols.WebClientProtocol.WebClientProtocol()\n  type: Constructor\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.WebClientProtocol\"></xref> class.\n  remarks: ''\n  example:\n  - >-\n    [!code-cs[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/add/codesnippet/csharp/m-system.web.services.pr_11_1.cs)]\n     [!code-cpp[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/add/codesnippet/cpp/m-system.web.services.pr_11_1.cpp)]\n     [!code-vb[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/add/codesnippet/visualbasic/m-system.web.services.pr_11_1.vb)]\n  syntax:\n    content: protected WebClientProtocol ();\n    parameters: []\n  overload: System.Web.Services.Protocols.WebClientProtocol.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.WebClientProtocol.Abort\n  id: Abort\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: Abort()\n  nameWithType: WebClientProtocol.Abort()\n  fullName: System.Web.Services.Protocols.WebClientProtocol.Abort()\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Cancels a request to an XML Web service method.\n  syntax:\n    content: public virtual void Abort ();\n    parameters: []\n  overload: System.Web.Services.Protocols.WebClientProtocol.Abort*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)\n  id: AddToCache(System.Type,System.Object)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: AddToCache(Type,Object)\n  nameWithType: WebClientProtocol.AddToCache(Type,Object)\n  fullName: System.Web.Services.Protocols.WebClientProtocol.AddToCache(Type,Object)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Add an instance of the client protocol handler to the cache.\n  syntax:\n    content: protected static void AddToCache (Type type, object value);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref:System.Type> of the client protocol handler..\n    - id: value\n      type: System.Object\n      description: The client protocol handler to be added to the cache.\n  overload: System.Web.Services.Protocols.WebClientProtocol.AddToCache*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName\n  id: ConnectionGroupName\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: ConnectionGroupName\n  nameWithType: WebClientProtocol.ConnectionGroupName\n  fullName: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets the name of the connection group for the request.\n  remarks: The ConnectionGroupName property enables you to associate a request to a connection group. For more details, see <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>.\n  syntax:\n    content: public string ConnectionGroupName { get; set; }\n    return:\n      type: System.String\n      description: The name of the connection group. The default is <xref:System.String>.\n  overload: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials\n  id: Credentials\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: Credentials\n  nameWithType: WebClientProtocol.Credentials\n  fullName: System.Web.Services.Protocols.WebClientProtocol.Credentials\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets security credentials for XML Web service client authentication.\n  remarks: \"When using the `Credentials` property, a XML Web service client must instantiate a class implementing <xref:System.Net.ICredentials>, such as <xref:System.Net.NetworkCredential>, and then set the client credentials specific to the authentication mechanism. The <xref:System.Net.NetworkCredential> class can be used to set authentication credentials using the basic, digest, NTLM and Kerberos authentication mechanisms.  \\n  \\n When the Credentials property is set to <xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName> then the client negotiates with the server to do Kerberos and/or NTLM authentication depending on how the server is configured.\"\n  example:\n  - \"The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form explicitly sets authentication credentials using the `Credentials` property. The user name, password and domain are passed into the constructor for the <xref:System.Net.NetworkCredential> class.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see.  \\n  \\n [!code-vb[Classic WebClientProtocol.Credentials Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_41_1.aspx)]\\n [!code-cs[Classic WebClientProtocol.Credentials Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_41_1.aspx)]\"\n  syntax:\n    content: public System.Net.ICredentials Credentials { get; set; }\n    return:\n      type: System.Net.ICredentials\n      description: The <xref:System.Net.ICredentials> for the XML Web service client.\n  overload: System.Web.Services.Protocols.WebClientProtocol.Credentials*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)\n  id: GetFromCache(System.Type)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: GetFromCache(Type)\n  nameWithType: WebClientProtocol.GetFromCache(Type)\n  fullName: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(Type)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets an instance of a client protocol handler from the cache.\n  syntax:\n    content: protected static object GetFromCache (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref:System.Type> of the client protocol handler to be returned from the cache.\n    return:\n      type: System.Object\n      description: An instance of a client protocol handler from the cache.\n  overload: System.Web.Services.Protocols.WebClientProtocol.GetFromCache*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)\n  id: GetWebRequest(System.Uri)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: GetWebRequest(Uri)\n  nameWithType: WebClientProtocol.GetWebRequest(Uri)\n  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(Uri)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Creates a <xref:System.Net.WebRequest> instance for the specified <code>uri</code>. This protected method is called by the XML Web service client infrastructure to get a new <xref:System.Net.WebRequest> transport object to transmit the XML Web service request.\n  remarks: This method can be overridden to customize the <xref:System.Net.WebRequest> object before the XML Web service request is made. For example you could add a custom header to the request.\n  syntax:\n    content: protected virtual System.Net.WebRequest GetWebRequest (Uri uri);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The <xref:System.Uri> to use when creating the <xref:System.Net.WebRequest>.\n    return:\n      type: System.Net.WebRequest\n      description: The <xref:System.Net.WebRequest> instance.\n  overload: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <code>uri</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)\n  id: GetWebResponse(System.Net.WebRequest)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: GetWebResponse(WebRequest)\n  nameWithType: WebClientProtocol.GetWebResponse(WebRequest)\n  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(WebRequest)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Returns a response from a synchronous request to an XML Web service method.\n  syntax:\n    content: protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);\n    parameters:\n    - id: request\n      type: System.Net.WebRequest\n      description: The <xref:System.Net.WebRequest> to get the response from.\n    return:\n      type: System.Net.WebResponse\n      description: A response from a synchronous request to an XML Web service method.\n  overload: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse*\n  exceptions:\n  - type: System.Net.WebException\n    commentId: T:System.Net.WebException\n    description: If <xref:System.Web.Services.Protocols.WebClientProtocol.Abort*> is invoked prior to calling GetWebResponse.\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  id: GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: GetWebResponse(WebRequest,IAsyncResult)\n  nameWithType: WebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)\n  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Returns a response from an asynchronous request to an XML Web service method. This protected method is called by the XML Web service client infrastructure to get the response from an asynchronous XML Web service request.\n  syntax:\n    content: protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);\n    parameters:\n    - id: request\n      type: System.Net.WebRequest\n      description: The <xref:System.Net.WebRequest> to get the response from.\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> to pass to <xref:System.Net.HttpWebRequest.EndGetResponse*> when the response has completed.\n    return:\n      type: System.Net.WebResponse\n      description: A response from an asynchronous request to an XML Web service method.\n  overload: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse*\n  exceptions:\n  - type: System.Net.WebException\n    commentId: T:System.Net.WebException\n    description: If <xref:System.Web.Services.Protocols.WebClientProtocol.Abort*> is invoked prior to calling <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse*>.\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate\n  id: PreAuthenticate\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: PreAuthenticate\n  nameWithType: WebClientProtocol.PreAuthenticate\n  fullName: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets whether pre-authentication is enabled.\n  remarks: \"When a client requests a resource without using credentials, the server challenges the request and indicates what authentication schemes it supports. The client chooses an authentication scheme and sends the appropriate `WWW-authenticate` header to the server. When PreAuthenticate is `true`, the `WWW-authenticate` header is sent with all subsequent requests.  \\n  \\n When PreAuthenticate is `false`, a request is made to the XML Web service method without initially attempting to authenticate the user. If the XML Web service allows anonymous access, then the XML Web service method is executed. If anonymous access is disallowed, a 401 HTTP return code is sent back to the client. In response, the <xref:System.Web.Services.Protocols.WebClientProtocol> class returns authentication credentials to the Web server. If the client is authenticated and subsequently authorized to access the XML Web service, the XML Web service method is executed; otherwise the client is denied access.\"\n  syntax:\n    content: public bool PreAuthenticate { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to pre-authenticate the request; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding\n  id: RequestEncoding\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: RequestEncoding\n  nameWithType: WebClientProtocol.RequestEncoding\n  fullName: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: The <xref:System.Text.Encoding> used to make the client request to the XML Web service.\n  remarks: \"The RequestEncoding determines the encoding for the request message. The <xref:System.Net.WebRequest.ContentType%2A> of the request will be annotated with the encoding value.  \\n  \\n Classes deriving from <xref:System.Web.Services.Protocols.WebClientProtocol> support a particular protocol, such as <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> does for SOAP, set this property to conform to encoding requirements for the specific protocol. For example, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> sets the default encoding to UTF-8.\"\n  example:\n  - \"The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form explicitly sets RequestEncoding to UTF-8.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[Classic WebClientProtocol.RequestEncoding Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_59_1.aspx)]\\n [!code-cs[Classic WebClientProtocol.RequestEncoding Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_59_1.aspx)]\"\n  syntax:\n    content: public System.Text.Encoding RequestEncoding { get; set; }\n    return:\n      type: System.Text.Encoding\n      description: The character encoding for the client request. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which uses the default encoding for the underlying transport and protocol.\n  overload: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout\n  id: Timeout\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: Timeout\n  nameWithType: WebClientProtocol.Timeout\n  fullName: System.Web.Services.Protocols.WebClientProtocol.Timeout\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Indicates the time an XML Web service client waits for the reply to a synchronous XML Web service request to arrive (in milliseconds).\n  remarks: Setting the Timeout property to <xref:System.Threading.Timeout.Infinite?displayProperty=fullName> indicates that the request does not time out. Even though an XML Web service client can set the Timeout property to not time out, the Web server can still cause the request to time out on the server side.\n  example:\n  - \"The following example sets the `Timeout` value to 15000 (15 seconds) for the synchronous call to the `Add` XML Web service method within the `Math` XML Web service.  \\n  \\n [!code-cs[Classic WebClientProtocol.Timeout Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_35_1.cs)]\\n [!code-cpp[Classic WebClientProtocol.Timeout Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_35_1.cpp)]\\n [!code-vb[Classic WebClientProtocol.Timeout Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_35_1.vb)]\"\n  syntax:\n    content: public int Timeout { get; set; }\n    return:\n      type: System.Int32\n      description: The time out, in milliseconds, for synchronous calls to the XML Web service. The default is 100000 milliseconds.\n  overload: System.Web.Services.Protocols.WebClientProtocol.Timeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.WebClientProtocol.Url\n  id: Url\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: Url\n  nameWithType: WebClientProtocol.Url\n  fullName: System.Web.Services.Protocols.WebClientProtocol.Url\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets the base URL of the XML Web service the client is requesting.\n  remarks: \"Proxy classes generated using Wsdl.exe will set a default Url property for the client to use. The default Url is determined by the location attribute found in the service description from which the proxy class was generated.  \\n  \\n Derived classes supporting specific protocols, such as <xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> might add extra information to Url to make the XML Web service request.  \\n  \\n The Url property can be changed to refer to any XML Web service that implements the same service description that the proxy class was generated from.\"\n  example:\n  - \"The following example changes the Url property for the `math` XML Web service to the Web server named `http:// www.contoso.com`.  \\n  \\n [!code-cs[Classic WebClientProtocol.Url Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_49_1.cs)]\\n [!code-vb[Classic WebClientProtocol.Url Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_49_1.vb)]\\n [!code-cpp[Classic WebClientProtocol.Url Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_49_1.cpp)]\"\n  syntax:\n    content: public string Url { get; set; }\n    return:\n      type: System.String\n      description: The base URL of the XML Web service the client is requesting. The default is <xref:System.String>.\n  overload: System.Web.Services.Protocols.WebClientProtocol.Url*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials\n  id: UseDefaultCredentials\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: UseDefaultCredentials\n  nameWithType: WebClientProtocol.UseDefaultCredentials\n  fullName: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets a value that indicates whether to set the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials*> property to the value of the &lt;xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName&gt; property.\n  syntax:\n    content: public bool UseDefaultCredentials { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the Credentials property is set to the value of the &lt;xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName&gt; property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.Component\n  isExternal: false\n  name: System.ComponentModel.Component\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Net.WebException\n  isExternal: true\n  name: System.Net.WebException\n- uid: System.Web.Services.Protocols.WebClientProtocol.#ctor\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: WebClientProtocol()\n  nameWithType: WebClientProtocol.WebClientProtocol()\n  fullName: System.Web.Services.Protocols.WebClientProtocol.WebClientProtocol()\n- uid: System.Web.Services.Protocols.WebClientProtocol.Abort\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Abort()\n  nameWithType: WebClientProtocol.Abort()\n  fullName: System.Web.Services.Protocols.WebClientProtocol.Abort()\n- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: AddToCache(Type,Object)\n  nameWithType: WebClientProtocol.AddToCache(Type,Object)\n  fullName: System.Web.Services.Protocols.WebClientProtocol.AddToCache(Type,Object)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: ConnectionGroupName\n  nameWithType: WebClientProtocol.ConnectionGroupName\n  fullName: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Credentials\n  nameWithType: WebClientProtocol.Credentials\n  fullName: System.Web.Services.Protocols.WebClientProtocol.Credentials\n- uid: System.Net.ICredentials\n  parent: System.Net\n  isExternal: true\n  name: ICredentials\n  nameWithType: ICredentials\n  fullName: System.Net.ICredentials\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: GetFromCache(Type)\n  nameWithType: WebClientProtocol.GetFromCache(Type)\n  fullName: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(Type)\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: GetWebRequest(Uri)\n  nameWithType: WebClientProtocol.GetWebRequest(Uri)\n  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(Uri)\n- uid: System.Net.WebRequest\n  parent: System.Net\n  isExternal: true\n  name: WebRequest\n  nameWithType: WebRequest\n  fullName: System.Net.WebRequest\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: GetWebResponse(WebRequest)\n  nameWithType: WebClientProtocol.GetWebResponse(WebRequest)\n  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(WebRequest)\n- uid: System.Net.WebResponse\n  parent: System.Net\n  isExternal: true\n  name: WebResponse\n  nameWithType: WebResponse\n  fullName: System.Net.WebResponse\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: GetWebResponse(WebRequest,IAsyncResult)\n  nameWithType: WebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)\n  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: PreAuthenticate\n  nameWithType: WebClientProtocol.PreAuthenticate\n  fullName: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: RequestEncoding\n  nameWithType: WebClientProtocol.RequestEncoding\n  fullName: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: true\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Timeout\n  nameWithType: WebClientProtocol.Timeout\n  fullName: System.Web.Services.Protocols.WebClientProtocol.Timeout\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Services.Protocols.WebClientProtocol.Url\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Url\n  nameWithType: WebClientProtocol.Url\n  fullName: System.Web.Services.Protocols.WebClientProtocol.Url\n- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: UseDefaultCredentials\n  nameWithType: WebClientProtocol.UseDefaultCredentials\n  fullName: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials\n- uid: System.Web.Services.Protocols.WebClientProtocol.#ctor*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: WebClientProtocol\n  nameWithType: WebClientProtocol.WebClientProtocol\n- uid: System.Web.Services.Protocols.WebClientProtocol.Abort*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Abort\n  nameWithType: WebClientProtocol.Abort\n- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: AddToCache\n  nameWithType: WebClientProtocol.AddToCache\n- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: ConnectionGroupName\n  nameWithType: WebClientProtocol.ConnectionGroupName\n- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Credentials\n  nameWithType: WebClientProtocol.Credentials\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: GetFromCache\n  nameWithType: WebClientProtocol.GetFromCache\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: GetWebRequest\n  nameWithType: WebClientProtocol.GetWebRequest\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: GetWebResponse\n  nameWithType: WebClientProtocol.GetWebResponse\n- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: PreAuthenticate\n  nameWithType: WebClientProtocol.PreAuthenticate\n- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: RequestEncoding\n  nameWithType: WebClientProtocol.RequestEncoding\n- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Timeout\n  nameWithType: WebClientProtocol.Timeout\n- uid: System.Web.Services.Protocols.WebClientProtocol.Url*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Url\n  nameWithType: WebClientProtocol.Url\n- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: UseDefaultCredentials\n  nameWithType: WebClientProtocol.UseDefaultCredentials\n"}