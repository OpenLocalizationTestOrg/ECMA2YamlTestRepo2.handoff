{"nodes":[{"pos":[965,997],"content":"Represents a Range header value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a Range header value.","pos":[0,32]}]},{"pos":[2915,3017],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.RangeHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> class."},{"pos":[3795,3915],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.RangeHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a byte range.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> class with a byte range."},{"pos":[4581,4625],"content":"The position at which to start sending data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position at which to start sending data.","pos":[0,44]}]},{"pos":[4700,4743],"content":"The position at which to stop sending data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position at which to stop sending data.","pos":[0,43]}]},{"pos":[4933,5056],"content":"<ph id=\"ph1\">&lt;code&gt;from&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;code&gt;to&lt;/code&gt;</ph>       -or-       <ph id=\"ph3\">&lt;code&gt;from&lt;/code&gt;</ph> or <ph id=\"ph4\">&lt;code&gt;to&lt;/code&gt;</ph> is less than 0.","needQuote":false,"needEscape":true,"source":"<code>from</code> is greater than <code>to</code>       -or-       <code>from</code> or <code>to</code> is less than 0."},{"pos":[5486,5633],"content":"Determines whether the specified &lt;xref:System.Object&gt; is equal to the current <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.RangeHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref:System.Object> is equal to the current <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> object."},{"pos":[5774,5820],"content":"The object to compare with the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare with the current object.","pos":[0,46]}]},{"pos":[5879,6084],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified &lt;xref:System.Object&gt; is equal to the current object; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref:System.Object> is equal to the current object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6568,6670],"content":"Serves as a hash function for an <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.RangeHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Serves as a hash function for an <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> object."},{"pos":[6683,6949],"content":"A hash code is a numeric value that is used to identify an object during equality testing. It can also serve as an index for an object in a collection.       The GetHashCode method is suitable for use in hashing algorithms and data structures such as a hash table.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A hash code is a numeric value that is used to identify an object during equality testing. It can also serve as an index for an object in a collection.       The GetHashCode method is suitable for use in hashing algorithms and data structures such as a hash table.","pos":[0,264],"nodes":[{"content":"A hash code is a numeric value that is used to identify an object during equality testing.","pos":[0,90]},{"content":"It can also serve as an index for an object in a collection.","pos":[91,151]},{"content":"The GetHashCode method is suitable for use in hashing algorithms and data structures such as a hash table.","pos":[158,264]}]}]},{"pos":[7085,7120],"content":"A hash code for the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A hash code for the current object.","pos":[0,35]}]},{"pos":[7627,7722],"content":"Converts a string to an <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.RangeHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Converts a string to an <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> instance."},{"pos":[7900,7956],"content":"A string that represents range header value information.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents range header value information.","pos":[0,56]}]},{"pos":[8041,8114],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.RangeHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> instance."},{"pos":[8291,8386],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> reference.","needQuote":true,"needEscape":true,"source":"<code>input</code> is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference."},{"pos":[8477,8540],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is not valid range header value information.","needQuote":true,"needEscape":true,"source":"<code>input</code> is not valid range header value information."},{"pos":[8917,9021],"content":"Gets the ranges specified from the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.RangeHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the ranges specified from the <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> object."},{"pos":[9281,9370],"content":"The ranges from the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.RangeHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The ranges from the <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> object."},{"pos":[9928,10050],"content":"Creates a new object that is a copy of the current <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.RangeHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Creates a new object that is a copy of the current <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> instance."},{"pos":[10178,10209],"content":"A copy of the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current instance.","pos":[0,31]}]},{"pos":[10695,10809],"content":"Returns a string that represents the current <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.RangeHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns a string that represents the current <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> object."},{"pos":[10945,10989],"content":"A string that represents the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents the current object.","pos":[0,44]}]},{"pos":[11643,11754],"content":"Determines whether a string is valid <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.RangeHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> information.","needQuote":true,"needEscape":true,"source":"Determines whether a string is valid <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> information."},{"pos":[11957,11979],"content":"he string to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"he string to validate.","pos":[0,22]}]},{"pos":[12074,12162],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.RangeHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> version of the string.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> version of the string."},{"pos":[12221,12471],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p2\">&lt;/code&gt;</ept> is valid <bpt id=\"p3\">&lt;xref href=\"System.Net.Http.Headers.AuthenticationHeaderValue\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> information; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>input</code> is valid <xref href=\"System.Net.Http.Headers.AuthenticationHeaderValue\"></xref> information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12918,13010],"content":"Gets the unit from the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.RangeHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the unit from the <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> object."},{"pos":[13124,13211],"content":"The unit from the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.RangeHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The unit from the <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Http.Headers.RangeHeaderValue\n  id: RangeHeaderValue\n  children:\n  - System.Net.Http.Headers.RangeHeaderValue.#ctor\n  - System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})\n  - System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)\n  - System.Net.Http.Headers.RangeHeaderValue.GetHashCode\n  - System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)\n  - System.Net.Http.Headers.RangeHeaderValue.Ranges\n  - System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone\n  - System.Net.Http.Headers.RangeHeaderValue.ToString\n  - System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)\n  - System.Net.Http.Headers.RangeHeaderValue.Unit\n  langs:\n  - csharp\n  name: RangeHeaderValue\n  nameWithType: RangeHeaderValue\n  fullName: System.Net.Http.Headers.RangeHeaderValue\n  type: Class\n  summary: Represents a Range header value.\n  remarks: \"The RangeHeaderValue class provides support for the Range header as defined in [RFC 2616](http://go.microsoft.com/fwlink/?LinkID=241642) by the IETF.  \\n  \\n Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity. However, not all clients and servers need to support byte-range operations.  \\n  \\n The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity. Servers are not required to support Range header requests.  \\n  \\n An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:  \\n  \\n `Range: bytes=0-99\\\\r\\\\n\\\\r\\\\n`  \\n  \\n A HTTP server indicates support for Range headers with the Accept-Ranges header. An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:  \\n  \\n `Accept-Ranges: bytes\\\\r\\\\n\\\\r\\\\n`  \\n  \\n If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers. An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:  \\n  \\n `Accept-Ranges: none\\\\r\\\\n\\\\r\\\\n`\"\n  syntax:\n    content: 'public class RangeHeaderValue : ICloneable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ICloneable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.RangeHeaderValue.#ctor\n  id: '#ctor'\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  langs:\n  - csharp\n  name: RangeHeaderValue()\n  nameWithType: RangeHeaderValue.RangeHeaderValue()\n  fullName: System.Net.Http.Headers.RangeHeaderValue.RangeHeaderValue()\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Initializes a new instance of the <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> class.\n  syntax:\n    content: public RangeHeaderValue ();\n    parameters: []\n  overload: System.Net.Http.Headers.RangeHeaderValue.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})\n  id: '#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})'\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  langs:\n  - csharp\n  name: RangeHeaderValue(Nullable<Int64>,Nullable<Int64>)\n  nameWithType: RangeHeaderValue.RangeHeaderValue(Nullable<Int64>,Nullable<Int64>)\n  fullName: System.Net.Http.Headers.RangeHeaderValue.RangeHeaderValue(Nullable<Int64>,Nullable<Int64>)\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Initializes a new instance of the <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> class with a byte range.\n  remarks: \"This  constructor initializes a new instance of the <xref:System.Net.Http.Headers.RangeHeaderValue> class with a Range header containing a specified byte range.  \\n  \\n An example of a Range header with a byte range in an HTTP protocol request that requests the first 100 bytes would be would be the following:  \\n  \\n `Range: bytes=0-99\\\\r\\\\n\\\\r\\\\n`  \\n  \\n For this example, the `from` parameter would be specified as 0 and the `to` parameter would be specified as 99.\"\n  syntax:\n    content: public RangeHeaderValue (Nullable<long> from, Nullable<long> to);\n    parameters:\n    - id: from\n      type: System.Nullable{System.Int64}\n      description: The position at which to start sending data.\n    - id: to\n      type: System.Nullable{System.Int64}\n      description: The position at which to stop sending data.\n  overload: System.Net.Http.Headers.RangeHeaderValue.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>from</code> is greater than <code>to</code>  \\n  \\n -or-  \\n  \\n <code>from</code> or <code>to</code> is less than 0.\"\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: RangeHeaderValue.Equals(Object)\n  fullName: System.Net.Http.Headers.RangeHeaderValue.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Determines whether the specified <xref:System.Object> is equal to the current <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with the current object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref:System.Object> is equal to the current object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.RangeHeaderValue.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.RangeHeaderValue.GetHashCode\n  id: GetHashCode\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: RangeHeaderValue.GetHashCode()\n  fullName: System.Net.Http.Headers.RangeHeaderValue.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Serves as a hash function for an <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> object.\n  remarks: \"A hash code is a numeric value that is used to identify an object during equality testing. It can also serve as an index for an object in a collection.  \\n  \\n The GetHashCode method is suitable for use in hashing algorithms and data structures such as a hash table.\"\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current object.\n  overload: System.Net.Http.Headers.RangeHeaderValue.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: RangeHeaderValue.Parse(String)\n  fullName: System.Net.Http.Headers.RangeHeaderValue.Parse(String)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Converts a string to an <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> instance.\n  syntax:\n    content: public static System.Net.Http.Headers.RangeHeaderValue Parse (string input);\n    parameters:\n    - id: input\n      type: System.String\n      description: A string that represents range header value information.\n    return:\n      type: System.Net.Http.Headers.RangeHeaderValue\n      description: A <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> instance.\n  overload: System.Net.Http.Headers.RangeHeaderValue.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>input</code> is not valid range header value information.\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.RangeHeaderValue.Ranges\n  id: Ranges\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  langs:\n  - csharp\n  name: Ranges\n  nameWithType: RangeHeaderValue.Ranges\n  fullName: System.Net.Http.Headers.RangeHeaderValue.Ranges\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Gets the ranges specified from the <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> object.\n  syntax:\n    content: public System.Collections.Generic.ICollection<System.Net.Http.Headers.RangeItemHeaderValue> Ranges { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.Net.Http.Headers.RangeItemHeaderValue}\n      description: The ranges from the <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> object.\n  overload: System.Net.Http.Headers.RangeHeaderValue.Ranges*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone\n  id: System#ICloneable#Clone\n  isEii: true\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  langs:\n  - csharp\n  name: System.ICloneable.Clone()\n  nameWithType: RangeHeaderValue.System.ICloneable.Clone()\n  fullName: System.Net.Http.Headers.RangeHeaderValue.System.ICloneable.Clone()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Creates a new object that is a copy of the current <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> instance.\n  syntax:\n    content: object ICloneable.Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A copy of the current instance.\n  overload: System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.RangeHeaderValue.ToString\n  id: ToString\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: RangeHeaderValue.ToString()\n  fullName: System.Net.Http.Headers.RangeHeaderValue.ToString()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Returns a string that represents the current <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> object.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current object.\n  overload: System.Net.Http.Headers.RangeHeaderValue.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)\n  id: TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  langs:\n  - csharp\n  name: TryParse(String,RangeHeaderValue)\n  nameWithType: RangeHeaderValue.TryParse(String,RangeHeaderValue)\n  fullName: System.Net.Http.Headers.RangeHeaderValue.TryParse(String,RangeHeaderValue)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Determines whether a string is valid <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> information.\n  syntax:\n    content: public static bool TryParse (string input, out System.Net.Http.Headers.RangeHeaderValue parsedValue);\n    parameters:\n    - id: input\n      type: System.String\n      description: he string to validate.\n    - id: parsedValue\n      type: System.Net.Http.Headers.RangeHeaderValue\n      description: The <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> version of the string.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>input</code> is valid <xref href=\"System.Net.Http.Headers.AuthenticationHeaderValue\"></xref> information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.RangeHeaderValue.TryParse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.RangeHeaderValue.Unit\n  id: Unit\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  langs:\n  - csharp\n  name: Unit\n  nameWithType: RangeHeaderValue.Unit\n  fullName: System.Net.Http.Headers.RangeHeaderValue.Unit\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Gets the unit from the <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> object.\n  syntax:\n    content: public string Unit { get; set; }\n    return:\n      type: System.String\n      description: The unit from the <xref href=\"System.Net.Http.Headers.RangeHeaderValue\"></xref> object.\n  overload: System.Net.Http.Headers.RangeHeaderValue.Unit*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.FormatException\n  isExternal: true\n  name: System.FormatException\n- uid: System.Net.Http.Headers.RangeHeaderValue.#ctor\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: RangeHeaderValue()\n  nameWithType: RangeHeaderValue.RangeHeaderValue()\n  fullName: System.Net.Http.Headers.RangeHeaderValue.RangeHeaderValue()\n- uid: System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: RangeHeaderValue(Nullable<Int64>,Nullable<Int64>)\n  nameWithType: RangeHeaderValue.RangeHeaderValue(Nullable<Int64>,Nullable<Int64>)\n  fullName: System.Net.Http.Headers.RangeHeaderValue.RangeHeaderValue(Nullable<Int64>,Nullable<Int64>)\n- uid: System.Nullable{System.Int64}\n  parent: System\n  isExternal: true\n  name: Nullable<Int64>\n  nameWithType: Nullable<Int64>\n  fullName: System.Nullable<System.Int64>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Int64>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    nameWithType: Int64\n    fullName: Int64\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: RangeHeaderValue.Equals(Object)\n  fullName: System.Net.Http.Headers.RangeHeaderValue.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Http.Headers.RangeHeaderValue.GetHashCode\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: RangeHeaderValue.GetHashCode()\n  fullName: System.Net.Http.Headers.RangeHeaderValue.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: Parse(String)\n  nameWithType: RangeHeaderValue.Parse(String)\n  fullName: System.Net.Http.Headers.RangeHeaderValue.Parse(String)\n- uid: System.Net.Http.Headers.RangeHeaderValue\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: RangeHeaderValue\n  nameWithType: RangeHeaderValue\n  fullName: System.Net.Http.Headers.RangeHeaderValue\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.Http.Headers.RangeHeaderValue.Ranges\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: Ranges\n  nameWithType: RangeHeaderValue.Ranges\n  fullName: System.Net.Http.Headers.RangeHeaderValue.Ranges\n- uid: System.Collections.Generic.ICollection{System.Net.Http.Headers.RangeItemHeaderValue}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<RangeItemHeaderValue>\n  nameWithType: ICollection<RangeItemHeaderValue>\n  fullName: System.Collections.Generic.ICollection<System.Net.Http.Headers.RangeItemHeaderValue>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<System.Net.Http.Headers.RangeItemHeaderValue>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.Http.Headers.RangeItemHeaderValue\n    name: RangeItemHeaderValue\n    nameWithType: RangeItemHeaderValue\n    fullName: RangeItemHeaderValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: System.ICloneable.Clone()\n  nameWithType: RangeHeaderValue.System.ICloneable.Clone()\n  fullName: System.Net.Http.Headers.RangeHeaderValue.System.ICloneable.Clone()\n- uid: System.Net.Http.Headers.RangeHeaderValue.ToString\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: ToString()\n  nameWithType: RangeHeaderValue.ToString()\n  fullName: System.Net.Http.Headers.RangeHeaderValue.ToString()\n- uid: System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: TryParse(String,RangeHeaderValue)\n  nameWithType: RangeHeaderValue.TryParse(String,RangeHeaderValue)\n  fullName: System.Net.Http.Headers.RangeHeaderValue.TryParse(String,RangeHeaderValue)\n- uid: System.Net.Http.Headers.RangeHeaderValue.Unit\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: Unit\n  nameWithType: RangeHeaderValue.Unit\n  fullName: System.Net.Http.Headers.RangeHeaderValue.Unit\n- uid: System.Net.Http.Headers.RangeHeaderValue.#ctor*\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: RangeHeaderValue\n  nameWithType: RangeHeaderValue.RangeHeaderValue\n- uid: System.Net.Http.Headers.RangeHeaderValue.Equals*\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: Equals\n  nameWithType: RangeHeaderValue.Equals\n- uid: System.Net.Http.Headers.RangeHeaderValue.GetHashCode*\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: GetHashCode\n  nameWithType: RangeHeaderValue.GetHashCode\n- uid: System.Net.Http.Headers.RangeHeaderValue.Parse*\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: Parse\n  nameWithType: RangeHeaderValue.Parse\n- uid: System.Net.Http.Headers.RangeHeaderValue.Ranges*\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: Ranges\n  nameWithType: RangeHeaderValue.Ranges\n- uid: System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone*\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: System.ICloneable.Clone\n  nameWithType: RangeHeaderValue.System.ICloneable.Clone\n- uid: System.Net.Http.Headers.RangeHeaderValue.ToString*\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: ToString\n  nameWithType: RangeHeaderValue.ToString\n- uid: System.Net.Http.Headers.RangeHeaderValue.TryParse*\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: TryParse\n  nameWithType: RangeHeaderValue.TryParse\n- uid: System.Net.Http.Headers.RangeHeaderValue.Unit*\n  parent: System.Net.Http.Headers.RangeHeaderValue\n  isExternal: false\n  name: Unit\n  nameWithType: RangeHeaderValue.Unit\n"}