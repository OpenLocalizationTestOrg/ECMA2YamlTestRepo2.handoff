{"nodes":[{"pos":[679,824],"content":"Defines a compensatable version of the <xref href=\"System.Workflow.Activities.SequenceActivity\"></xref> activity. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines a compensatable version of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.SequenceActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> activity.","pos":[0,113],"source":"Defines a compensatable version of the <xref href=\"System.Workflow.Activities.SequenceActivity\"></xref> activity."},{"content":"This class cannot be inherited.","pos":[114,145]}]},{"pos":[837,1044],"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       CompensatableSequenceActivity implements the &lt;xref:System.Workflow.ComponentModel.ICompensatableActivity&gt; interface.","needQuote":false,"needEscape":true,"extradata":"MT","source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       CompensatableSequenceActivity implements the <xref:System.Workflow.ComponentModel.ICompensatableActivity> interface."},{"pos":[10426,10544],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.CompensatableSequenceActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.CompensatableSequenceActivity\"></xref> class."},{"pos":[11298,11447],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.CompensatableSequenceActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the name of the activity.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.CompensatableSequenceActivity\"></xref> class using the name of the activity."},{"pos":[11599,11637],"content":"The user-defined name of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user-defined name of the activity.","pos":[0,38]}]},{"pos":[12676,12791],"content":"Executes the activity using the <xref:System.Workflow.ComponentModel.ICompensatableActivity.Compensate*> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"Executes the activity using the &lt;xref:System.Workflow.ComponentModel.ICompensatableActivity.Compensate*&gt; interface.","pos":[0,115],"source":"Executes the activity using the <xref:System.Workflow.ComponentModel.ICompensatableActivity.Compensate*> interface."}]},{"pos":[13110,13148],"content":"The execution context of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The execution context of the activity.","pos":[0,38]}]},{"pos":[13247,13362],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> after the operation has been tried.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> after the operation has been tried."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.CompensatableSequenceActivity\n  id: CompensatableSequenceActivity\n  children:\n  - System.Workflow.Activities.CompensatableSequenceActivity.#ctor\n  - System.Workflow.Activities.CompensatableSequenceActivity.#ctor(System.String)\n  - System.Workflow.Activities.CompensatableSequenceActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)\n  langs:\n  - csharp\n  name: CompensatableSequenceActivity\n  nameWithType: CompensatableSequenceActivity\n  fullName: System.Workflow.Activities.CompensatableSequenceActivity\n  type: Class\n  summary: Defines a compensatable version of the <xref href=\"System.Workflow.Activities.SequenceActivity\"></xref> activity. This class cannot be inherited.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n CompensatableSequenceActivity implements the <xref:System.Workflow.ComponentModel.ICompensatableActivity> interface.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.SequenceDesigner), typeof(System.ComponentModel.Design.IDesigner))]\n\n      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]\n\n      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.CompensatableSequenceActivity), \"Resources.Sequence.png\")]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      public sealed class CompensatableSequenceActivity : System.Workflow.Activities.SequenceActivity, System.Workflow.ComponentModel.ICompensatableActivity\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  - System.Workflow.ComponentModel.CompositeActivity\n  - System.Workflow.Activities.SequenceActivity\n  implements:\n  - System.Workflow.ComponentModel.ICompensatableActivity\n  inheritedMembers:\n  - System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.CompositeActivity.Activities\n  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CompensatableSequenceActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.CompensatableSequenceActivity\n  langs:\n  - csharp\n  name: CompensatableSequenceActivity()\n  nameWithType: CompensatableSequenceActivity.CompensatableSequenceActivity()\n  fullName: System.Workflow.Activities.CompensatableSequenceActivity.CompensatableSequenceActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.CompensatableSequenceActivity\"></xref> class.\n  syntax:\n    content: public CompensatableSequenceActivity ();\n    parameters: []\n  overload: System.Workflow.Activities.CompensatableSequenceActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CompensatableSequenceActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.CompensatableSequenceActivity\n  langs:\n  - csharp\n  name: CompensatableSequenceActivity(String)\n  nameWithType: CompensatableSequenceActivity.CompensatableSequenceActivity(String)\n  fullName: System.Workflow.Activities.CompensatableSequenceActivity.CompensatableSequenceActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.CompensatableSequenceActivity\"></xref> class using the name of the activity.\n  syntax:\n    content: public CompensatableSequenceActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-defined name of the activity.\n  overload: System.Workflow.Activities.CompensatableSequenceActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CompensatableSequenceActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)\n  isEii: true\n  parent: System.Workflow.Activities.CompensatableSequenceActivity\n  langs:\n  - csharp\n  name: System.Workflow.ComponentModel.ICompensatableActivity.Compensate(ActivityExecutionContext)\n  nameWithType: CompensatableSequenceActivity.System.Workflow.ComponentModel.ICompensatableActivity.Compensate(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.CompensatableSequenceActivity.System.Workflow.ComponentModel.ICompensatableActivity.Compensate(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Executes the activity using the <xref:System.Workflow.ComponentModel.ICompensatableActivity.Compensate*> interface.\n  syntax:\n    content: System.Workflow.ComponentModel.ActivityExecutionStatus ICompensatableActivity.Compensate (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The execution context of the activity.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> after the operation has been tried.\n  overload: System.Workflow.Activities.CompensatableSequenceActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.Activities.SequenceActivity\n  isExternal: false\n  name: System.Workflow.Activities.SequenceActivity\n- uid: System.Workflow.Activities.CompensatableSequenceActivity.#ctor\n  parent: System.Workflow.Activities.CompensatableSequenceActivity\n  isExternal: false\n  name: CompensatableSequenceActivity()\n  nameWithType: CompensatableSequenceActivity.CompensatableSequenceActivity()\n  fullName: System.Workflow.Activities.CompensatableSequenceActivity.CompensatableSequenceActivity()\n- uid: System.Workflow.Activities.CompensatableSequenceActivity.#ctor(System.String)\n  parent: System.Workflow.Activities.CompensatableSequenceActivity\n  isExternal: false\n  name: CompensatableSequenceActivity(String)\n  nameWithType: CompensatableSequenceActivity.CompensatableSequenceActivity(String)\n  fullName: System.Workflow.Activities.CompensatableSequenceActivity.CompensatableSequenceActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.CompensatableSequenceActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.CompensatableSequenceActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.ICompensatableActivity.Compensate(ActivityExecutionContext)\n  nameWithType: CompensatableSequenceActivity.System.Workflow.ComponentModel.ICompensatableActivity.Compensate(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.CompensatableSequenceActivity.System.Workflow.ComponentModel.ICompensatableActivity.Compensate(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatus\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatus\n  nameWithType: ActivityExecutionStatus\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus\n- uid: System.Workflow.ComponentModel.ActivityExecutionContext\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionContext\n  nameWithType: ActivityExecutionContext\n  fullName: System.Workflow.ComponentModel.ActivityExecutionContext\n- uid: System.Workflow.Activities.CompensatableSequenceActivity.#ctor*\n  parent: System.Workflow.Activities.CompensatableSequenceActivity\n  isExternal: false\n  name: CompensatableSequenceActivity\n  nameWithType: CompensatableSequenceActivity.CompensatableSequenceActivity\n- uid: System.Workflow.Activities.CompensatableSequenceActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate*\n  parent: System.Workflow.Activities.CompensatableSequenceActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.ICompensatableActivity.Compensate\n  nameWithType: CompensatableSequenceActivity.System.Workflow.ComponentModel.ICompensatableActivity.Compensate\n"}