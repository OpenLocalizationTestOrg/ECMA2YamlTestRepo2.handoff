{"nodes":[{"pos":[694,838],"content":"A type converter that is used to construct a <bpt id=\"p1\">&lt;xref href=\"System.Windows.TemplateBindingExtension\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from an instance during serialization.","needQuote":true,"needEscape":true,"source":"A type converter that is used to construct a <xref href=\"System.Windows.TemplateBindingExtension\"></xref> from an instance during serialization."},{"pos":[851,938],"content":"<bpt id=\"p1\">&lt;a name=\"XAMLTextUsage_TemplateBindingExtensionConverter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage","needQuote":false,"needEscape":true,"extradata":"MT","source":"<a name=\"XAMLTextUsage_TemplateBindingExtensionConverter\"></a>    ## XAML Text Usage"},{"pos":[5163,5273],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.TemplateBindingExtensionConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.TemplateBindingExtensionConverter\"></xref> class."},{"pos":[6091,6196],"content":"Returns whether this converter can convert the object to the specified type, using the specified context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns whether this converter can convert the object to the specified type, using the specified context.","pos":[0,105]}]},{"pos":[6442,6557],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that provides a format context."},{"pos":[6627,6671],"content":"The desired type of the conversion's output.","needQuote":true,"needEscape":true,"nodes":[{"content":"The desired type of the conversion's output.","pos":[0,44]}]},{"pos":[6730,7117],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the requested conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Only a <code>destinationType</code> of <xref href=\"System.ComponentModel.Design.Serialization.InstanceDescriptor\"></xref> will return <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this converter can perform the requested conversion; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,191],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the requested conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"Only a <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationType</ph><ept id=\"p1\">&lt;/code&gt;</ept> of <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Design.Serialization.InstanceDescriptor\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will return <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[192,387],"source":" Only a <code>destinationType</code> of <xref href=\"System.ComponentModel.Design.Serialization.InstanceDescriptor\"></xref> will return <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[7991,8045],"content":"Converts the given value object to the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the given value object to the specified type.","pos":[0,54]}]},{"pos":[8057,8407],"content":"Only a `destinationType` of <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> will return a value originating from this implementation. Any other type provided for `destinationType` will cause this method to call base, which will result in no usable converted value and only serves for basic validation of the remaining parameters.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Only a <ph id=\"ph1\">`destinationType`</ph> of &lt;xref:System.ComponentModel.Design.Serialization.InstanceDescriptor&gt; will return a value originating from this implementation.","pos":[0,154],"source":"Only a `destinationType` of <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> will return a value originating from this implementation."},{"content":"Any other type provided for <ph id=\"ph1\">`destinationType`</ph> will cause this method to call base, which will result in no usable converted value and only serves for basic validation of the remaining parameters.","pos":[155,350],"source":" Any other type provided for `destinationType` will cause this method to call base, which will result in no usable converted value and only serves for basic validation of the remaining parameters."}]},{"pos":[8708,8823],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that provides a format context."},{"pos":[8906,9018],"content":"A <xref:System.Globalization.CultureInfo> object. If a null reference is passed, the current culture is assumed.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.Globalization.CultureInfo> object. If a null reference is passed, the current culture is assumed.","pos":[0,112],"nodes":[{"content":"A &lt;xref:System.Globalization.CultureInfo&gt; object.","pos":[0,49],"source":"A <xref:System.Globalization.CultureInfo> object."},{"content":"If a null reference is passed, the current culture is assumed.","pos":[50,112]}]}]},{"pos":[9080,9101],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[9171,9202],"content":"The desired type to convert to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The desired type to convert to.","pos":[0,31]}]},{"pos":[9260,9280],"content":"The converted value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The converted value.","pos":[0,20]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.TemplateBindingExtensionConverter\n  id: TemplateBindingExtensionConverter\n  children:\n  - System.Windows.TemplateBindingExtensionConverter.#ctor\n  - System.Windows.TemplateBindingExtensionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.TemplateBindingExtensionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: TemplateBindingExtensionConverter\n  nameWithType: TemplateBindingExtensionConverter\n  fullName: System.Windows.TemplateBindingExtensionConverter\n  type: Class\n  summary: A type converter that is used to construct a <xref href=\"System.Windows.TemplateBindingExtension\"></xref> from an instance during serialization.\n  remarks: \"<a name=\\\"XAMLTextUsage_TemplateBindingExtensionConverter\\\"></a>   \\n## XAML Text Usage\"\n  syntax:\n    content: 'public class TemplateBindingExtensionConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  platform:\n  - net462\n- uid: System.Windows.TemplateBindingExtensionConverter.#ctor\n  id: '#ctor'\n  parent: System.Windows.TemplateBindingExtensionConverter\n  langs:\n  - csharp\n  name: TemplateBindingExtensionConverter()\n  nameWithType: TemplateBindingExtensionConverter.TemplateBindingExtensionConverter()\n  fullName: System.Windows.TemplateBindingExtensionConverter.TemplateBindingExtensionConverter()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.TemplateBindingExtensionConverter\"></xref> class.\n  syntax:\n    content: public TemplateBindingExtensionConverter ();\n    parameters: []\n  overload: System.Windows.TemplateBindingExtensionConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.TemplateBindingExtensionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.TemplateBindingExtensionConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: TemplateBindingExtensionConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Windows.TemplateBindingExtensionConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns whether this converter can convert the object to the specified type, using the specified context.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that provides a format context.\n    - id: destinationType\n      type: System.Type\n      description: The desired type of the conversion's output.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the requested conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Only a <code>destinationType</code> of <xref href=\"System.ComponentModel.Design.Serialization.InstanceDescriptor\"></xref> will return <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.TemplateBindingExtensionConverter.CanConvertTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.TemplateBindingExtensionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.TemplateBindingExtensionConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: TemplateBindingExtensionConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Windows.TemplateBindingExtensionConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Converts the given value object to the specified type.\n  remarks: Only a `destinationType` of <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> will return a value originating from this implementation. Any other type provided for `destinationType` will cause this method to call base, which will result in no usable converted value and only serves for basic validation of the remaining parameters.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref:System.Globalization.CultureInfo> object. If a null reference is passed, the current culture is assumed.\n    - id: value\n      type: System.Object\n      description: The value to convert.\n    - id: destinationType\n      type: System.Type\n      description: The desired type to convert to.\n    return:\n      type: System.Object\n      description: The converted value.\n  overload: System.Windows.TemplateBindingExtensionConverter.ConvertTo*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.Windows.TemplateBindingExtensionConverter.#ctor\n  parent: System.Windows.TemplateBindingExtensionConverter\n  isExternal: false\n  name: TemplateBindingExtensionConverter()\n  nameWithType: TemplateBindingExtensionConverter.TemplateBindingExtensionConverter()\n  fullName: System.Windows.TemplateBindingExtensionConverter.TemplateBindingExtensionConverter()\n- uid: System.Windows.TemplateBindingExtensionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.TemplateBindingExtensionConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: TemplateBindingExtensionConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Windows.TemplateBindingExtensionConverter.CanConvertTo(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.TemplateBindingExtensionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.TemplateBindingExtensionConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: TemplateBindingExtensionConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Windows.TemplateBindingExtensionConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.TemplateBindingExtensionConverter.#ctor*\n  parent: System.Windows.TemplateBindingExtensionConverter\n  isExternal: false\n  name: TemplateBindingExtensionConverter\n  nameWithType: TemplateBindingExtensionConverter.TemplateBindingExtensionConverter\n- uid: System.Windows.TemplateBindingExtensionConverter.CanConvertTo*\n  parent: System.Windows.TemplateBindingExtensionConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: TemplateBindingExtensionConverter.CanConvertTo\n- uid: System.Windows.TemplateBindingExtensionConverter.ConvertTo*\n  parent: System.Windows.TemplateBindingExtensionConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: TemplateBindingExtensionConverter.ConvertTo\n"}