{"nodes":[{"pos":[768,872],"content":"Creates a Digital Signature Algorithm (<bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) signature.","needQuote":true,"needEscape":true,"source":"Creates a Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature."},{"pos":[2196,2308],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DSASignatureFormatter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureFormatter\"></xref> class."},{"pos":[3091,3226],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DSASignatureFormatter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified key.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureFormatter\"></xref> class with the specified key."},{"pos":[3858,3981],"content":"The instance of the Digital Signature Algorithm (<bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) that holds the key.","needQuote":true,"needEscape":true,"source":"The instance of the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) that holds the key."},{"pos":[4168,4249],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[4757,4894],"content":"Creates the Digital Signature Algorithm (<bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) PKCS #1 signature for the specified data.","needQuote":false,"needEscape":true,"source":"Creates the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) PKCS #1 signature for the specified data."},{"pos":[4907,5040],"content":"The resulting signature data can be verified by using <xref:System.Security.Cryptography.DSASignatureDeformatter.VerifySignature%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The resulting signature data can be verified by using &lt;xref:System.Security.Cryptography.DSASignatureDeformatter.VerifySignature%2A&gt;.","pos":[0,133],"source":"The resulting signature data can be verified by using <xref:System.Security.Cryptography.DSASignatureDeformatter.VerifySignature%2A>."}]},{"pos":[5599,5621],"content":"The data to be signed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data to be signed.","pos":[0,22]}]},{"pos":[5679,5724],"content":"The digital signature for the specified data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The digital signature for the specified data.","pos":[0,45]}]},{"pos":[5921,6006],"content":"<ph id=\"ph1\">&lt;code&gt;rgbHash&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>rgbHash</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6194,6376],"content":"The OID is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       The DSA key is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The OID is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,72],"source":"The OID is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       The DSA key is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[79,166],"source":"       -or-       The DSA key is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[6889,7030],"content":"Specifies the hash algorithm for the Digital Signature Algorithm (<bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) signature formatter.","needQuote":true,"needEscape":true,"source":"Specifies the hash algorithm for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature formatter."},{"pos":[7602,7668],"content":"The name of the hash algorithm to use for the signature formatter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the hash algorithm to use for the signature formatter.","pos":[0,66]}]},{"pos":[7950,8075],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">strName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not map to the <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.SHA1\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> hash algorithm.","needQuote":true,"needEscape":true,"source":"The <code>strName</code> parameter does not map to the <xref href=\"System.Security.Cryptography.SHA1\"></xref> hash algorithm."},{"pos":[8646,8787],"content":"Specifies the key to be used for the Digital Signature Algorithm (<bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) signature formatter.","needQuote":true,"needEscape":true,"source":"Specifies the key to be used for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature formatter."},{"pos":[9005,9094],"content":"The instance of <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that holds the key.","needQuote":true,"needEscape":true,"source":"The instance of <xref href=\"System.Security.Cryptography.DSA\"></xref> that holds the key."},{"pos":[9282,9363],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.DSASignatureFormatter\n  id: DSASignatureFormatter\n  children:\n  - System.Security.Cryptography.DSASignatureFormatter.#ctor\n  - System.Security.Cryptography.DSASignatureFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  - System.Security.Cryptography.DSASignatureFormatter.CreateSignature(System.Byte[])\n  - System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm(System.String)\n  - System.Security.Cryptography.DSASignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  langs:\n  - csharp\n  name: DSASignatureFormatter\n  nameWithType: DSASignatureFormatter\n  fullName: System.Security.Cryptography.DSASignatureFormatter\n  type: Class\n  summary: Creates a Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[System.Security.Cryptography.DSASignatureFormatter#1](~/add/codesnippet/cpp/t-system.security.crypto_43_1.cpp)]\n     [!code-cs[System.Security.Cryptography.DSASignatureFormatter#1](~/add/codesnippet/csharp/t-system.security.crypto_43_1.cs)]\n     [!code-vb[System.Security.Cryptography.DSASignatureFormatter#1](~/add/codesnippet/visualbasic/t-system.security.crypto_43_1.vb)]\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class DSASignatureFormatter : System.Security.Cryptography.AsymmetricSignatureFormatter\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsymmetricSignatureFormatter\n  implements: []\n  inheritedMembers:\n  - System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DSASignatureFormatter.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  langs:\n  - csharp\n  name: DSASignatureFormatter()\n  nameWithType: DSASignatureFormatter.DSASignatureFormatter()\n  fullName: System.Security.Cryptography.DSASignatureFormatter.DSASignatureFormatter()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureFormatter\"></xref> class.\n  syntax:\n    content: public DSASignatureFormatter ();\n    parameters: []\n  overload: System.Security.Cryptography.DSASignatureFormatter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DSASignatureFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: '#ctor(System.Security.Cryptography.AsymmetricAlgorithm)'\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  langs:\n  - csharp\n  name: DSASignatureFormatter(AsymmetricAlgorithm)\n  nameWithType: DSASignatureFormatter.DSASignatureFormatter(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.DSASignatureFormatter.DSASignatureFormatter(AsymmetricAlgorithm)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureFormatter\"></xref> class with the specified key.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[System.Security.Cryptography.DSASignatureFormatter#1](~/add/codesnippet/cpp/a7c18e52-6af6-472f-bd00-_1.cpp)]\n     [!code-cs[System.Security.Cryptography.DSASignatureFormatter#1](~/add/codesnippet/csharp/a7c18e52-6af6-472f-bd00-_1.cs)]\n     [!code-vb[System.Security.Cryptography.DSASignatureFormatter#1](~/add/codesnippet/visualbasic/a7c18e52-6af6-472f-bd00-_1.vb)]\n  syntax:\n    content: public DSASignatureFormatter (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: The instance of the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) that holds the key.\n  overload: System.Security.Cryptography.DSASignatureFormatter.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DSASignatureFormatter.CreateSignature(System.Byte[])\n  id: CreateSignature(System.Byte[])\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  langs:\n  - csharp\n  name: CreateSignature(Byte[])\n  nameWithType: DSASignatureFormatter.CreateSignature(Byte[])\n  fullName: System.Security.Cryptography.DSASignatureFormatter.CreateSignature(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: 'Creates the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) PKCS #1 signature for the specified data.'\n  remarks: The resulting signature data can be verified by using <xref:System.Security.Cryptography.DSASignatureDeformatter.VerifySignature%2A>.\n  example:\n  - >-\n    [!code-cpp[System.Security.Cryptography.DSASignatureFormatter#1](~/add/codesnippet/cpp/7b62d7a7-26c3-4cd8-9db3-_1.cpp)]\n     [!code-cs[System.Security.Cryptography.DSASignatureFormatter#1](~/add/codesnippet/csharp/7b62d7a7-26c3-4cd8-9db3-_1.cs)]\n     [!code-vb[System.Security.Cryptography.DSASignatureFormatter#1](~/add/codesnippet/visualbasic/7b62d7a7-26c3-4cd8-9db3-_1.vb)]\n  syntax:\n    content: public override byte[] CreateSignature (byte[] rgbHash);\n    parameters:\n    - id: rgbHash\n      type: System.Byte[]\n      description: The data to be signed.\n    return:\n      type: System.Byte[]\n      description: The digital signature for the specified data.\n  overload: System.Security.Cryptography.DSASignatureFormatter.CreateSignature*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>rgbHash</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException\n    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException\n    description: \"The OID is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The DSA key is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm(System.String)\n  id: SetHashAlgorithm(System.String)\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  langs:\n  - csharp\n  name: SetHashAlgorithm(String)\n  nameWithType: DSASignatureFormatter.SetHashAlgorithm(String)\n  fullName: System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Specifies the hash algorithm for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature formatter.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[System.Security.Cryptography.DSASignatureFormatter#1](~/add/codesnippet/cpp/22c076b4-72c5-4086-a7c2-_1.cpp)]\n     [!code-cs[System.Security.Cryptography.DSASignatureFormatter#1](~/add/codesnippet/csharp/22c076b4-72c5-4086-a7c2-_1.cs)]\n     [!code-vb[System.Security.Cryptography.DSASignatureFormatter#1](~/add/codesnippet/visualbasic/22c076b4-72c5-4086-a7c2-_1.vb)]\n  syntax:\n    content: public override void SetHashAlgorithm (string strName);\n    parameters:\n    - id: strName\n      type: System.String\n      description: The name of the hash algorithm to use for the signature formatter.\n  overload: System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException\n    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException\n    description: The <code>strName</code> parameter does not map to the <xref href=\"System.Security.Cryptography.SHA1\"></xref> hash algorithm.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DSASignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  langs:\n  - csharp\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: DSASignatureFormatter.SetKey(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.DSASignatureFormatter.SetKey(AsymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Specifies the key to be used for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature formatter.\n  syntax:\n    content: public override void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: The instance of <xref href=\"System.Security.Cryptography.DSA\"></xref> that holds the key.\n  overload: System.Security.Cryptography.DSASignatureFormatter.SetKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter\n  isExternal: false\n  name: System.Security.Cryptography.AsymmetricSignatureFormatter\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicUnexpectedOperationException\n  nameWithType: CryptographicUnexpectedOperationException\n  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException\n- uid: System.Security.Cryptography.DSASignatureFormatter.#ctor\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  isExternal: false\n  name: DSASignatureFormatter()\n  nameWithType: DSASignatureFormatter.DSASignatureFormatter()\n  fullName: System.Security.Cryptography.DSASignatureFormatter.DSASignatureFormatter()\n- uid: System.Security.Cryptography.DSASignatureFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  isExternal: false\n  name: DSASignatureFormatter(AsymmetricAlgorithm)\n  nameWithType: DSASignatureFormatter.DSASignatureFormatter(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.DSASignatureFormatter.DSASignatureFormatter(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.DSASignatureFormatter.CreateSignature(System.Byte[])\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  isExternal: false\n  name: CreateSignature(Byte[])\n  nameWithType: DSASignatureFormatter.CreateSignature(Byte[])\n  fullName: System.Security.Cryptography.DSASignatureFormatter.CreateSignature(Byte[])\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm(System.String)\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  isExternal: false\n  name: SetHashAlgorithm(String)\n  nameWithType: DSASignatureFormatter.SetHashAlgorithm(String)\n  fullName: System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.DSASignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  isExternal: false\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: DSASignatureFormatter.SetKey(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.DSASignatureFormatter.SetKey(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.DSASignatureFormatter.#ctor*\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  isExternal: false\n  name: DSASignatureFormatter\n  nameWithType: DSASignatureFormatter.DSASignatureFormatter\n- uid: System.Security.Cryptography.DSASignatureFormatter.CreateSignature*\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  isExternal: false\n  name: CreateSignature\n  nameWithType: DSASignatureFormatter.CreateSignature\n- uid: System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm*\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  isExternal: false\n  name: SetHashAlgorithm\n  nameWithType: DSASignatureFormatter.SetHashAlgorithm\n- uid: System.Security.Cryptography.DSASignatureFormatter.SetKey*\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  isExternal: false\n  name: SetKey\n  nameWithType: DSASignatureFormatter.SetKey\n"}