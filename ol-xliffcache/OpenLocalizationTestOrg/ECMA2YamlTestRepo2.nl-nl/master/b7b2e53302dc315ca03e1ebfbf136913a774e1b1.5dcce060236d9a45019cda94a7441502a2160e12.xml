{"nodes":[{"pos":[640,737],"content":"Provides data for the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ListView.ItemUpdating\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Provides data for the <xref href=\"System.Web.UI.WebControls.ListView.ItemUpdating\"></xref> event."},{"pos":[750,2378],"content":"The <xref:System.Web.UI.WebControls.ListView> control raises the <xref:System.Web.UI.WebControls.ListView.ItemUpdating> event when the <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> method is called or when an item's Update button is clicked, but before the <xref:System.Web.UI.WebControls.ListView> control updates the item. (An Update button is a button whose `CommandName` property set to \"Update\".) This enables you to provide an event-handling method that performs a custom routine whenever this event occurs, such as canceling the update operation.       A ListViewUpdateEventArgs object is passed to the event-handling method. This object enables you to determine the index of the current item, and to specify that the update operation should be canceled. To cancel the update operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the ListViewUpdateEventArgs object to `true`. You can also work with the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys%2A>, <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A>, and <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A> collections before the values are passed to the data source. A typical way to use these collections is to validate or to HTML-encode the values that are supplied by the user before these values are stored in the data source. This can help prevent script-injection attacks.       For a list of initial property values for an instance of the ListViewUpdateEventArgs class, see the <xref:System.Web.UI.WebControls.ListViewSelectEventArgs.%23ctor%2A> constructor.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.ListView&gt; control raises the &lt;xref:System.Web.UI.WebControls.ListView.ItemUpdating&gt; event when the &lt;xref:System.Web.UI.WebControls.ListView.UpdateItem%2A&gt; method is called or when an item's Update button is clicked, but before the &lt;xref:System.Web.UI.WebControls.ListView&gt; control updates the item.","pos":[0,334],"source":"The <xref:System.Web.UI.WebControls.ListView> control raises the <xref:System.Web.UI.WebControls.ListView.ItemUpdating> event when the <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> method is called or when an item's Update button is clicked, but before the <xref:System.Web.UI.WebControls.ListView> control updates the item."},{"content":"(An Update button is a button whose <ph id=\"ph1\">`CommandName`</ph> property set to \"Update\".) This enables you to provide an event-handling method that performs a custom routine whenever this event occurs, such as canceling the update operation.","pos":[335,563],"source":" (An Update button is a button whose `CommandName` property set to \"Update\".) This enables you to provide an event-handling method that performs a custom routine whenever this event occurs, such as canceling the update operation."},{"content":"A ListViewUpdateEventArgs object is passed to the event-handling method.","pos":[570,642]},{"content":"This object enables you to determine the index of the current item, and to specify that the update operation should be canceled.","pos":[643,771]},{"content":"To cancel the update operation, set the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the ListViewUpdateEventArgs object to <ph id=\"ph1\">`true`</ph>.","pos":[772,924],"source":" To cancel the update operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the ListViewUpdateEventArgs object to `true`."},{"content":"You can also work with the &lt;xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys%2A&gt;, &lt;xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A&gt;, and &lt;xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A&gt; collections before the values are passed to the data source.","pos":[925,1223],"source":" You can also work with the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys%2A>, <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A>, and <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A> collections before the values are passed to the data source."},{"content":"A typical way to use these collections is to validate or to HTML-encode the values that are supplied by the user before these values are stored in the data source.","pos":[1224,1387]},{"content":"This can help prevent script-injection attacks.","pos":[1388,1435]},{"content":"For a list of initial property values for an instance of the ListViewUpdateEventArgs class, see the &lt;xref:System.Web.UI.WebControls.ListViewSelectEventArgs.%23ctor%2A&gt; constructor.","pos":[1442,1622],"source":"       For a list of initial property values for an instance of the ListViewUpdateEventArgs class, see the <xref:System.Web.UI.WebControls.ListViewSelectEventArgs.%23ctor%2A> constructor."}]},{"pos":[3893,4004],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.ListViewUpdateEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.ListViewUpdateEventArgs\"></xref> class."},{"pos":[4017,4624],"content":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs> class, using the specified item index.      > [!NOTE] >  This constructor is primarily used by control developers when they raise events.       The following table shows the initial property value for an instance of the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs> class.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.ItemIndex%2A>|The value that is contained in the `itemIndex` parameter.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this constructor to initialize a new instance of the &lt;xref:System.Web.UI.WebControls.ListViewUpdateEventArgs&gt; class, using the specified item index.","pos":[0,152],"source":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs> class, using the specified item index."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This constructor is primarily used by control developers when they raise events.","pos":[158,251],"source":"      > [!NOTE] >  This constructor is primarily used by control developers when they raise events."},{"content":"The following table shows the initial property value for an instance of the &lt;xref:System.Web.UI.WebControls.ListViewUpdateEventArgs&gt; class.","pos":[258,397],"source":"       The following table shows the initial property value for an instance of the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs> class."},{"content":"|Property|Initial value|   |--------------|-------------------|   |&lt;xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.ItemIndex%2A&gt;|The value that is contained in the <ph id=\"ph1\">`itemIndex`</ph> parameter.|","pos":[403,598],"source":"      |Property|Initial value|   |--------------|-------------------|   |<xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.ItemIndex%2A>|The value that is contained in the `itemIndex` parameter.|"}]},{"pos":[4777,4813],"content":"The index of the item being updated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the item being updated.","pos":[0,36]}]},{"pos":[5333,5387],"content":"Gets the index of the data item that is being updated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the index of the data item that is being updated.","pos":[0,54]}]},{"pos":[5399,5793],"content":"Use the ItemIndex property to determine the index of the <xref:System.Web.UI.WebControls.ListViewDataItem> object that contains the data item that is being updated. The item index is often used to retrieve the item from the <xref:System.Web.UI.WebControls.ListView.Items%2A> collection of the <xref:System.Web.UI.WebControls.ListView> control, which enables you to access the item's properties.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the ItemIndex property to determine the index of the <xref:System.Web.UI.WebControls.ListViewDataItem> object that contains the data item that is being updated. The item index is often used to retrieve the item from the <xref:System.Web.UI.WebControls.ListView.Items%2A> collection of the <xref:System.Web.UI.WebControls.ListView> control, which enables you to access the item's properties.","pos":[0,394],"nodes":[{"content":"Use the ItemIndex property to determine the index of the &lt;xref:System.Web.UI.WebControls.ListViewDataItem&gt; object that contains the data item that is being updated.","pos":[0,164],"source":"Use the ItemIndex property to determine the index of the <xref:System.Web.UI.WebControls.ListViewDataItem> object that contains the data item that is being updated."},{"content":"The item index is often used to retrieve the item from the &lt;xref:System.Web.UI.WebControls.ListView.Items%2A&gt; collection of the &lt;xref:System.Web.UI.WebControls.ListView&gt; control, which enables you to access the item's properties.","pos":[165,394],"source":" The item index is often used to retrieve the item from the <xref:System.Web.UI.WebControls.ListView.Items%2A> collection of the <xref:System.Web.UI.WebControls.ListView> control, which enables you to access the item's properties."}]}]},{"pos":[5903,5952],"content":"The index of the data item that is being updated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the data item that is being updated.","pos":[0,49]}]},{"pos":[6451,6548],"content":"Gets a dictionary of field name/value pairs that represent the key or keys of the item to update.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a dictionary of field name/value pairs that represent the key or keys of the item to update.","pos":[0,97]}]},{"pos":[6561,7919],"content":"When the <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> property of a <xref:System.Web.UI.WebControls.ListView> control is set, use the Keys property (dictionary) to access the value of the primary key in the item to update.      > [!NOTE] >  To access the values of the non-key fields, use the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A> or <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A> properties. The <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A> property contains the updated values, and the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A> property contains the original values.       The Keys dictionary is automatically populated with the name/value pairs of the field or fields specified in the <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> property. If multiple fields form the primary key, a separate entry is added to the Keys dictionary for every key field.       To determine the name of a key field, use the <xref:System.Collections.DictionaryEntry.Key%2A?displayProperty=fullName> property of a <xref:System.Collections.DictionaryEntry> object that is contained in the Keys dictionary. To determine the value of a key field, use the <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the &lt;xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A&gt; property of a &lt;xref:System.Web.UI.WebControls.ListView&gt; control is set, use the Keys property (dictionary) to access the value of the primary key in the item to update.","pos":[0,235],"source":"When the <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> property of a <xref:System.Web.UI.WebControls.ListView> control is set, use the Keys property (dictionary) to access the value of the primary key in the item to update."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To access the values of the non-key fields, use the &lt;xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A&gt; or &lt;xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A&gt; properties.","pos":[241,460],"source":"      > [!NOTE] >  To access the values of the non-key fields, use the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A> or <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A> properties."},{"content":"The &lt;xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A&gt; property contains the updated values, and the &lt;xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A&gt; property contains the original values.","pos":[461,689],"source":" The <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A> property contains the updated values, and the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A> property contains the original values."},{"content":"The Keys dictionary is automatically populated with the name/value pairs of the field or fields specified in the &lt;xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A&gt; property.","pos":[696,876],"source":"       The Keys dictionary is automatically populated with the name/value pairs of the field or fields specified in the <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> property."},{"content":"If multiple fields form the primary key, a separate entry is added to the Keys dictionary for every key field.","pos":[877,987]},{"content":"To determine the name of a key field, use the &lt;xref:System.Collections.DictionaryEntry.Key%2A?displayProperty=fullName&gt; property of a &lt;xref:System.Collections.DictionaryEntry&gt; object that is contained in the Keys dictionary.","pos":[994,1218],"source":"       To determine the name of a key field, use the <xref:System.Collections.DictionaryEntry.Key%2A?displayProperty=fullName> property of a <xref:System.Collections.DictionaryEntry> object that is contained in the Keys dictionary."},{"content":"To determine the value of a key field, use the &lt;xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName&gt; property.","pos":[1219,1351],"source":" To determine the value of a key field, use the <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> property."}]},{"pos":[8833,8913],"content":"The field name/value pairs that represent the key or keys of the item to update.","needQuote":true,"needEscape":true,"nodes":[{"content":"The field name/value pairs that represent the key or keys of the item to update.","pos":[0,80]}]},{"pos":[9432,9505],"content":"Gets a dictionary that contains the revised values of the item to update.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a dictionary that contains the revised values of the item to update.","pos":[0,73]}]},{"pos":[9518,10643],"content":"Use the NewValues property (dictionary) to access the values of the revised non-key fields in the item to update.      > [!NOTE] >  The primary key field or fields are included in this dictionary if the primary key value or values are being updated. To access the original values of the primary key field or fields, use the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys%2A> property. To access the original values of the non-key fields in the item, use the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A> property.       The NewValues property is automatically populated with the name/value pairs of the revised fields in the item. A separate entry is added to the NewValues property for every field in the item.       To determine the field name of an entry, use the <xref:System.Collections.DictionaryEntry.Key%2A?displayProperty=fullName> property of a <xref:System.Collections.DictionaryEntry> object that is contained in the NewValues dictionary. To determine the value of an entry, use the <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the NewValues property (dictionary) to access the values of the revised non-key fields in the item to update.","pos":[0,113]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The primary key field or fields are included in this dictionary if the primary key value or values are being updated.","pos":[119,249],"source":"      > [!NOTE] >  The primary key field or fields are included in this dictionary if the primary key value or values are being updated."},{"content":"To access the original values of the primary key field or fields, use the &lt;xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys%2A&gt; property.","pos":[250,398],"source":" To access the original values of the primary key field or fields, use the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys%2A> property."},{"content":"To access the original values of the non-key fields in the item, use the &lt;xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A&gt; property.","pos":[399,551],"source":" To access the original values of the non-key fields in the item, use the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A> property."},{"content":"The NewValues property is automatically populated with the name/value pairs of the revised fields in the item.","pos":[558,668]},{"content":"A separate entry is added to the NewValues property for every field in the item.","pos":[669,749]},{"content":"To determine the field name of an entry, use the &lt;xref:System.Collections.DictionaryEntry.Key%2A?displayProperty=fullName&gt; property of a &lt;xref:System.Collections.DictionaryEntry&gt; object that is contained in the NewValues dictionary.","pos":[756,988],"source":"       To determine the field name of an entry, use the <xref:System.Collections.DictionaryEntry.Key%2A?displayProperty=fullName> property of a <xref:System.Collections.DictionaryEntry> object that is contained in the NewValues dictionary."},{"content":"To determine the value of an entry, use the &lt;xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName&gt; property.","pos":[989,1118],"source":" To determine the value of an entry, use the <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> property."}]},{"pos":[11392,11433],"content":"The revised values of the item to update.","needQuote":true,"needEscape":true,"nodes":[{"content":"The revised values of the item to update.","pos":[0,41]}]},{"pos":[11957,12031],"content":"Gets a dictionary that contains the original values of the item to update.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a dictionary that contains the original values of the item to update.","pos":[0,74]}]},{"pos":[12044,13115],"content":"Use the OldValues property (dictionary) to access the original values of the fields in the item to update. This dictionary contains all fields in the item except the key fields.      > [!NOTE] >  You can access the key fields of the item by using the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys%2A> property. To access the revised values of the non-key fields in the item, use the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A> property.       The OldValues property is automatically populated with the original values of all the fields in the item. A separate entry is added to the OldValues property for every field in the item.       To determine the field name of an entry, use the <xref:System.Collections.DictionaryEntry.Key%2A?displayProperty=fullName> property of a <xref:System.Collections.DictionaryEntry?displayProperty=fullName> object that is contained in the OldValues dictionary. To determine the value of an entry, use the <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the OldValues property (dictionary) to access the original values of the fields in the item to update.","pos":[0,106]},{"content":"This dictionary contains all fields in the item except the key fields.","pos":[107,177]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You can access the key fields of the item by using the &lt;xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys%2A&gt; property.","pos":[183,325],"source":"      > [!NOTE] >  You can access the key fields of the item by using the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys%2A> property."},{"content":"To access the revised values of the non-key fields in the item, use the &lt;xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A&gt; property.","pos":[326,477],"source":" To access the revised values of the non-key fields in the item, use the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A> property."},{"content":"The OldValues property is automatically populated with the original values of all the fields in the item.","pos":[484,589]},{"content":"A separate entry is added to the OldValues property for every field in the item.","pos":[590,670]},{"content":"To determine the field name of an entry, use the &lt;xref:System.Collections.DictionaryEntry.Key%2A?displayProperty=fullName&gt; property of a &lt;xref:System.Collections.DictionaryEntry?displayProperty=fullName&gt; object that is contained in the OldValues dictionary.","pos":[677,934],"source":"       To determine the field name of an entry, use the <xref:System.Collections.DictionaryEntry.Key%2A?displayProperty=fullName> property of a <xref:System.Collections.DictionaryEntry?displayProperty=fullName> object that is contained in the OldValues dictionary."},{"content":"To determine the value of an entry, use the &lt;xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName&gt; property.","pos":[935,1064],"source":" To determine the value of an entry, use the <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> property."}]},{"pos":[13309,13351],"content":"The original values of the item to update.","needQuote":true,"needEscape":true,"nodes":[{"content":"The original values of the item to update.","pos":[0,42]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.ListViewUpdateEventArgs\n  id: ListViewUpdateEventArgs\n  children:\n  - System.Web.UI.WebControls.ListViewUpdateEventArgs.#ctor(System.Int32)\n  - System.Web.UI.WebControls.ListViewUpdateEventArgs.ItemIndex\n  - System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys\n  - System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues\n  - System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues\n  langs:\n  - csharp\n  name: ListViewUpdateEventArgs\n  nameWithType: ListViewUpdateEventArgs\n  fullName: System.Web.UI.WebControls.ListViewUpdateEventArgs\n  type: Class\n  summary: Provides data for the <xref href=\"System.Web.UI.WebControls.ListView.ItemUpdating\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.ListView> control raises the <xref:System.Web.UI.WebControls.ListView.ItemUpdating> event when the <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> method is called or when an item's Update button is clicked, but before the <xref:System.Web.UI.WebControls.ListView> control updates the item. (An Update button is a button whose `CommandName` property set to \\\"Update\\\".) This enables you to provide an event-handling method that performs a custom routine whenever this event occurs, such as canceling the update operation.  \\n  \\n A ListViewUpdateEventArgs object is passed to the event-handling method. This object enables you to determine the index of the current item, and to specify that the update operation should be canceled. To cancel the update operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the ListViewUpdateEventArgs object to `true`. You can also work with the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys%2A>, <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A>, and <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A> collections before the values are passed to the data source. A typical way to use these collections is to validate or to HTML-encode the values that are supplied by the user before these values are stored in the data source. This can help prevent script-injection attacks.  \\n  \\n For a list of initial property values for an instance of the ListViewUpdateEventArgs class, see the <xref:System.Web.UI.WebControls.ListViewSelectEventArgs.%23ctor%2A> constructor.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A> property to make sure that the user has supplied all values before the data source is updated.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdating#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_92_1.aspx)]\\n [!code-cs[System.Web.UI.WebControls.ListView.ItemUpdating#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_92_1.aspx)]\"\n  syntax:\n    content: 'public class ListViewUpdateEventArgs : System.ComponentModel.CancelEventArgs'\n  inheritance:\n  - System.ComponentModel.CancelEventArgs\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.ListViewUpdateEventArgs.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Web.UI.WebControls.ListViewUpdateEventArgs\n  langs:\n  - csharp\n  name: ListViewUpdateEventArgs(Int32)\n  nameWithType: ListViewUpdateEventArgs.ListViewUpdateEventArgs(Int32)\n  fullName: System.Web.UI.WebControls.ListViewUpdateEventArgs.ListViewUpdateEventArgs(Int32)\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.ListViewUpdateEventArgs\"></xref> class.\n  remarks: \"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs> class, using the specified item index.  \\n  \\n> [!NOTE]\\n>  This constructor is primarily used by control developers when they raise events.  \\n  \\n The following table shows the initial property value for an instance of the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs> class.  \\n  \\n|Property|Initial value|  \\n|--------------|-------------------|  \\n|<xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.ItemIndex%2A>|The value that is contained in the `itemIndex` parameter.|\"\n  syntax:\n    content: public ListViewUpdateEventArgs (int itemIndex);\n    parameters:\n    - id: itemIndex\n      type: System.Int32\n      description: The index of the item being updated.\n  overload: System.Web.UI.WebControls.ListViewUpdateEventArgs.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.ListViewUpdateEventArgs.ItemIndex\n  id: ItemIndex\n  parent: System.Web.UI.WebControls.ListViewUpdateEventArgs\n  langs:\n  - csharp\n  name: ItemIndex\n  nameWithType: ListViewUpdateEventArgs.ItemIndex\n  fullName: System.Web.UI.WebControls.ListViewUpdateEventArgs.ItemIndex\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets the index of the data item that is being updated.\n  remarks: Use the ItemIndex property to determine the index of the <xref:System.Web.UI.WebControls.ListViewDataItem> object that contains the data item that is being updated. The item index is often used to retrieve the item from the <xref:System.Web.UI.WebControls.ListView.Items%2A> collection of the <xref:System.Web.UI.WebControls.ListView> control, which enables you to access the item's properties.\n  syntax:\n    content: public int ItemIndex { get; }\n    return:\n      type: System.Int32\n      description: The index of the data item that is being updated.\n  overload: System.Web.UI.WebControls.ListViewUpdateEventArgs.ItemIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys\n  id: Keys\n  parent: System.Web.UI.WebControls.ListViewUpdateEventArgs\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: ListViewUpdateEventArgs.Keys\n  fullName: System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets a dictionary of field name/value pairs that represent the key or keys of the item to update.\n  remarks: \"When the <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> property of a <xref:System.Web.UI.WebControls.ListView> control is set, use the Keys property (dictionary) to access the value of the primary key in the item to update.  \\n  \\n> [!NOTE]\\n>  To access the values of the non-key fields, use the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A> or <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A> properties. The <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A> property contains the updated values, and the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A> property contains the original values.  \\n  \\n The Keys dictionary is automatically populated with the name/value pairs of the field or fields specified in the <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> property. If multiple fields form the primary key, a separate entry is added to the Keys dictionary for every key field.  \\n  \\n To determine the name of a key field, use the <xref:System.Collections.DictionaryEntry.Key%2A?displayProperty=fullName> property of a <xref:System.Collections.DictionaryEntry> object that is contained in the Keys dictionary. To determine the value of a key field, use the <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> property.\"\n  example:\n  - \"The following example shows how to use the Keys property to access the value of the key field for the record being updated.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_867_1.aspx)]\\n [!code-cs[System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_867_1.aspx)]\"\n  syntax:\n    content: public System.Collections.Specialized.IOrderedDictionary Keys { get; }\n    return:\n      type: System.Collections.Specialized.IOrderedDictionary\n      description: The field name/value pairs that represent the key or keys of the item to update.\n  overload: System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues\n  id: NewValues\n  parent: System.Web.UI.WebControls.ListViewUpdateEventArgs\n  langs:\n  - csharp\n  name: NewValues\n  nameWithType: ListViewUpdateEventArgs.NewValues\n  fullName: System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets a dictionary that contains the revised values of the item to update.\n  remarks: \"Use the NewValues property (dictionary) to access the values of the revised non-key fields in the item to update.  \\n  \\n> [!NOTE]\\n>  The primary key field or fields are included in this dictionary if the primary key value or values are being updated. To access the original values of the primary key field or fields, use the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys%2A> property. To access the original values of the non-key fields in the item, use the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A> property.  \\n  \\n The NewValues property is automatically populated with the name/value pairs of the revised fields in the item. A separate entry is added to the NewValues property for every field in the item.  \\n  \\n To determine the field name of an entry, use the <xref:System.Collections.DictionaryEntry.Key%2A?displayProperty=fullName> property of a <xref:System.Collections.DictionaryEntry> object that is contained in the NewValues dictionary. To determine the value of an entry, use the <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> property.\"\n  example:\n  - \"The following example shows how to use the NewValues property to make sure that the user has supplied all values before the data source is updated. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs> class.  \\n  \\n [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdating#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_642_1.aspx)]\\n [!code-cs[System.Web.UI.WebControls.ListView.ItemUpdating#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_642_1.aspx)]\"\n  syntax:\n    content: public System.Collections.Specialized.IOrderedDictionary NewValues { get; }\n    return:\n      type: System.Collections.Specialized.IOrderedDictionary\n      description: The revised values of the item to update.\n  overload: System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues\n  id: OldValues\n  parent: System.Web.UI.WebControls.ListViewUpdateEventArgs\n  langs:\n  - csharp\n  name: OldValues\n  nameWithType: ListViewUpdateEventArgs.OldValues\n  fullName: System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets a dictionary that contains the original values of the item to update.\n  remarks: \"Use the OldValues property (dictionary) to access the original values of the fields in the item to update. This dictionary contains all fields in the item except the key fields.  \\n  \\n> [!NOTE]\\n>  You can access the key fields of the item by using the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys%2A> property. To access the revised values of the non-key fields in the item, use the <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A> property.  \\n  \\n The OldValues property is automatically populated with the original values of all the fields in the item. A separate entry is added to the OldValues property for every field in the item.  \\n  \\n To determine the field name of an entry, use the <xref:System.Collections.DictionaryEntry.Key%2A?displayProperty=fullName> property of a <xref:System.Collections.DictionaryEntry?displayProperty=fullName> object that is contained in the OldValues dictionary. To determine the value of an entry, use the <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> property.\"\n  syntax:\n    content: public System.Collections.Specialized.IOrderedDictionary OldValues { get; }\n    return:\n      type: System.Collections.Specialized.IOrderedDictionary\n      description: The original values of the item to update.\n  overload: System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.CancelEventArgs\n  isExternal: false\n  name: System.ComponentModel.CancelEventArgs\n- uid: System.Web.UI.WebControls.ListViewUpdateEventArgs.#ctor(System.Int32)\n  parent: System.Web.UI.WebControls.ListViewUpdateEventArgs\n  isExternal: false\n  name: ListViewUpdateEventArgs(Int32)\n  nameWithType: ListViewUpdateEventArgs.ListViewUpdateEventArgs(Int32)\n  fullName: System.Web.UI.WebControls.ListViewUpdateEventArgs.ListViewUpdateEventArgs(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.UI.WebControls.ListViewUpdateEventArgs.ItemIndex\n  parent: System.Web.UI.WebControls.ListViewUpdateEventArgs\n  isExternal: false\n  name: ItemIndex\n  nameWithType: ListViewUpdateEventArgs.ItemIndex\n  fullName: System.Web.UI.WebControls.ListViewUpdateEventArgs.ItemIndex\n- uid: System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys\n  parent: System.Web.UI.WebControls.ListViewUpdateEventArgs\n  isExternal: false\n  name: Keys\n  nameWithType: ListViewUpdateEventArgs.Keys\n  fullName: System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys\n- uid: System.Collections.Specialized.IOrderedDictionary\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: IOrderedDictionary\n  nameWithType: IOrderedDictionary\n  fullName: System.Collections.Specialized.IOrderedDictionary\n- uid: System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues\n  parent: System.Web.UI.WebControls.ListViewUpdateEventArgs\n  isExternal: false\n  name: NewValues\n  nameWithType: ListViewUpdateEventArgs.NewValues\n  fullName: System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues\n- uid: System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues\n  parent: System.Web.UI.WebControls.ListViewUpdateEventArgs\n  isExternal: false\n  name: OldValues\n  nameWithType: ListViewUpdateEventArgs.OldValues\n  fullName: System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues\n- uid: System.Web.UI.WebControls.ListViewUpdateEventArgs.#ctor*\n  parent: System.Web.UI.WebControls.ListViewUpdateEventArgs\n  isExternal: false\n  name: ListViewUpdateEventArgs\n  nameWithType: ListViewUpdateEventArgs.ListViewUpdateEventArgs\n- uid: System.Web.UI.WebControls.ListViewUpdateEventArgs.ItemIndex*\n  parent: System.Web.UI.WebControls.ListViewUpdateEventArgs\n  isExternal: false\n  name: ItemIndex\n  nameWithType: ListViewUpdateEventArgs.ItemIndex\n- uid: System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys*\n  parent: System.Web.UI.WebControls.ListViewUpdateEventArgs\n  isExternal: false\n  name: Keys\n  nameWithType: ListViewUpdateEventArgs.Keys\n- uid: System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues*\n  parent: System.Web.UI.WebControls.ListViewUpdateEventArgs\n  isExternal: false\n  name: NewValues\n  nameWithType: ListViewUpdateEventArgs.NewValues\n- uid: System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues*\n  parent: System.Web.UI.WebControls.ListViewUpdateEventArgs\n  isExternal: false\n  name: OldValues\n  nameWithType: ListViewUpdateEventArgs.OldValues\n"}