{"nodes":[{"pos":[1584,1622],"content":"Specifies security token requirements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies security token requirements.","pos":[0,38]}]},{"pos":[1634,2798],"content":"Application code typically does not need to use the SecurityTokenRequirement class, unless a custom security token, security token manager, security token provider, or security token authenticator are created. The SecurityTokenRequirement class is used by a security token manager to specify what is required of a security token, such as the key size, key type, and how the key can be used. When a security token can be identified that matches the specified criteria, a <xref:System.IdentityModel.Selectors.SecurityTokenProvider> and <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> can be obtained to provide security tokens for outgoing SOAP messages and to authenticate security tokens for incoming SOAP messages, respectively. For example, the default security token manager for outgoing SOAP messages has the <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29> method that takes a SecurityTokenRequirement parameter that can be called to obtain a security token provider that matches the criteria specified in the security token requirement.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Application code typically does not need to use the SecurityTokenRequirement class, unless a custom security token, security token manager, security token provider, or security token authenticator are created. The SecurityTokenRequirement class is used by a security token manager to specify what is required of a security token, such as the key size, key type, and how the key can be used. When a security token can be identified that matches the specified criteria, a <xref:System.IdentityModel.Selectors.SecurityTokenProvider> and <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> can be obtained to provide security tokens for outgoing SOAP messages and to authenticate security tokens for incoming SOAP messages, respectively. For example, the default security token manager for outgoing SOAP messages has the <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29> method that takes a SecurityTokenRequirement parameter that can be called to obtain a security token provider that matches the criteria specified in the security token requirement.","pos":[0,1164],"nodes":[{"content":"Application code typically does not need to use the SecurityTokenRequirement class, unless a custom security token, security token manager, security token provider, or security token authenticator are created.","pos":[0,209]},{"content":"The SecurityTokenRequirement class is used by a security token manager to specify what is required of a security token, such as the key size, key type, and how the key can be used.","pos":[210,390]},{"content":"When a security token can be identified that matches the specified criteria, a &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; and &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt; can be obtained to provide security tokens for outgoing SOAP messages and to authenticate security tokens for incoming SOAP messages, respectively.","pos":[391,746],"source":" When a security token can be identified that matches the specified criteria, a <xref:System.IdentityModel.Selectors.SecurityTokenProvider> and <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> can be obtained to provide security tokens for outgoing SOAP messages and to authenticate security tokens for incoming SOAP messages, respectively."},{"content":"For example, the default security token manager for outgoing SOAP messages has the &lt;xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29&gt; method that takes a SecurityTokenRequirement parameter that can be called to obtain a security token provider that matches the criteria specified in the security token requirement.","pos":[747,1164],"source":" For example, the default security token manager for outgoing SOAP messages has the <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29> method that takes a SecurityTokenRequirement parameter that can be called to obtain a security token provider that matches the criteria specified in the security token requirement."}]}]},{"pos":[4537,4654],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"></xref> class."},{"pos":[5502,5514],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5565,5577],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6210,6263],"content":"Gets a value of the token property if it is optional.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value of the token property if it is optional.","pos":[0,53]}]},{"pos":[6398,6428],"content":"A value of the token property.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value of the token property.","pos":[0,30]}]},{"pos":[6985,7060],"content":"Gets or sets the required size of the key associated with a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the required size of the key associated with a security token.","pos":[0,75]}]},{"pos":[7072,7445],"content":"The value of the KeySize property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values. The value of the KeySize property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the KeySize property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values. The value of the KeySize property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A> property.","pos":[0,373],"nodes":[{"content":"The value of the KeySize property can also be accessed by getting the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A&gt; property, which is a collection of property values.","pos":[0,198],"source":"The value of the KeySize property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values."},{"content":"The value of the KeySize property is stored at the index matching the value of the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A&gt; property.","pos":[199,373],"source":" The value of the KeySize property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A> property."}]}]},{"pos":[7558,7645],"content":"The size of the key, in bits, associated with a security token. The default value is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the key, in bits, associated with a security token. The default value is 0.","pos":[0,87],"nodes":[{"content":"The size of the key, in bits, associated with a security token.","pos":[0,63]},{"content":"The default value is 0.","pos":[64,87]}]}]},{"pos":[7851,7902],"content":"The KeySize property is set to a value less than 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The KeySize property is set to a value less than 0.","pos":[0,51]}]},{"pos":[8389,8621],"content":"Gets a value that specifies the name of the index in the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties<bpt id=\"p1\">*</bpt>&gt; collection for the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize<ept id=\"p1\">*</ept>&gt; property.","needQuote":true,"needEscape":true,"source":"Gets a value that specifies the name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize*> property."},{"pos":[8633,8754],"content":"To set the required key size, use the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To set the required key size, use the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize%2A&gt; property.","pos":[0,121],"source":"To set the required key size, use the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize%2A> property."}]},{"pos":[8881,9085],"content":"The name of the index in the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties<bpt id=\"p1\">*</bpt>&gt; collection for the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize<ept id=\"p1\">*</ept>&gt; property.","needQuote":true,"needEscape":true,"source":"The name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize*> property."},{"pos":[9634,9722],"content":"Gets or sets the type of key (asymmetric or symmetric) associated with a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the type of key (asymmetric or symmetric) associated with a security token.","pos":[0,88]}]},{"pos":[9734,10107],"content":"The value of the KeyType property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values. The value of the KeyType property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the KeyType property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values. The value of the KeyType property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A> property.","pos":[0,373],"nodes":[{"content":"The value of the KeyType property can also be accessed by getting the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A&gt; property, which is a collection of property values.","pos":[0,198],"source":"The value of the KeyType property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values."},{"content":"The value of the KeyType property is stored at the index matching the value of the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A&gt; property.","pos":[199,373],"source":" The value of the KeyType property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A> property."}]}]},{"pos":[10291,10547],"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyType\"></xref> that specifies the type of key (asymmetric or symmetric) associated with a security token. The default value is <xref uid=\"langword_csharp_SymmetricKey\" name=\"SymmetricKey\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the type of key (asymmetric or symmetric) associated with a security token.","pos":[0,157],"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyType\"></xref> that specifies the type of key (asymmetric or symmetric) associated with a security token."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SymmetricKey\" name=\"SymmetricKey\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[158,256],"source":" The default value is <xref uid=\"langword_csharp_SymmetricKey\" name=\"SymmetricKey\" href=\"\"></xref>."}]},{"pos":[11128,11360],"content":"Gets a value that specifies the name of the index in the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties<bpt id=\"p1\">*</bpt>&gt; collection for the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType<ept id=\"p1\">*</ept>&gt; property.","needQuote":true,"needEscape":true,"source":"Gets a value that specifies the name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType*> property."},{"pos":[11372,11493],"content":"To set the required key type, use the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To set the required key type, use the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A&gt; property.","pos":[0,121],"source":"To set the required key type, use the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A> property."}]},{"pos":[11620,11824],"content":"The name of the index in the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties<bpt id=\"p1\">*</bpt>&gt; collection for the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType<ept id=\"p1\">*</ept>&gt; property.","needQuote":true,"needEscape":true,"source":"The name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType*> property."},{"pos":[12378,12471],"content":"Gets or sets a value that specifies how the key associated with a security token can be used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies how the key associated with a security token can be used.","pos":[0,93]}]},{"pos":[12483,12859],"content":"The value of the KeyUsage property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values. The value of the KeyUsage property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of the KeyUsage property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values. The value of the KeyUsage property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A> property.","pos":[0,376],"nodes":[{"content":"The value of the KeyUsage property can also be accessed by getting the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A&gt; property, which is a collection of property values.","pos":[0,199],"source":"The value of the KeyUsage property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values."},{"content":"The value of the KeyUsage property is stored at the index matching the value of the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A&gt; property.","pos":[200,376],"source":" The value of the KeyUsage property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A> property."}]}]},{"pos":[13046,13274],"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyUsage\"></xref> that specifies how the key associated with a security token can be used. The default value is <xref href=\"System.IdentityModel.Tokens.SecurityKeyUsage\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyUsage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies how the key associated with a security token can be used.","pos":[0,140],"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyUsage\"></xref> that specifies how the key associated with a security token can be used."},{"content":"The default value is <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyUsage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[141,228],"source":" The default value is <xref href=\"System.IdentityModel.Tokens.SecurityKeyUsage\"></xref>."}]},{"pos":[13861,14094],"content":"Gets a value that specifies the name of the index in the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties<bpt id=\"p1\">*</bpt>&gt; collection for the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage<ept id=\"p1\">*</ept>&gt; property.","needQuote":true,"needEscape":true,"source":"Gets a value that specifies the name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage*> property."},{"pos":[14106,14232],"content":"To set the key usage requirement, use the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To set the key usage requirement, use the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage%2A&gt; property.","pos":[0,126],"source":"To set the key usage requirement, use the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage%2A> property."}]},{"pos":[14360,14565],"content":"The name of the index in the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties<bpt id=\"p1\">*</bpt>&gt; collection for the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage<ept id=\"p1\">*</ept>&gt; property.","needQuote":true,"needEscape":true,"source":"The name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage*> property."},{"pos":[15190,15371],"content":"Gets the name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for a property that specifies the peer authentication method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the index in the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*&gt; collection for a property that specifies the peer authentication method.","pos":[0,181],"source":"Gets the name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for a property that specifies the peer authentication method."}]},{"pos":[15383,15813],"content":"To add the capability to set the peer authentication mode, derive a class from <xref:System.IdentityModel.Selectors.SecurityTokenRequirement> and expose a property or constructor. Within the constructor or property add the peer authentication mode to the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> collection using the value of the PeerAuthenticationMode property as an index into the collection.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To add the capability to set the peer authentication mode, derive a class from <xref:System.IdentityModel.Selectors.SecurityTokenRequirement> and expose a property or constructor. Within the constructor or property add the peer authentication mode to the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> collection using the value of the PeerAuthenticationMode property as an index into the collection.","pos":[0,430],"nodes":[{"content":"To add the capability to set the peer authentication mode, derive a class from &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement&gt; and expose a property or constructor.","pos":[0,179],"source":"To add the capability to set the peer authentication mode, derive a class from <xref:System.IdentityModel.Selectors.SecurityTokenRequirement> and expose a property or constructor."},{"content":"Within the constructor or property add the peer authentication mode to the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A&gt; collection using the value of the PeerAuthenticationMode property as an index into the collection.","pos":[180,430],"source":" Within the constructor or property add the peer authentication mode to the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> collection using the value of the PeerAuthenticationMode property as an index into the collection."}]}]},{"pos":[15947,16123],"content":"The name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for a property that specifies the peer authentication method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the index in the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*&gt; collection for a property that specifies the peer authentication method.","pos":[0,176],"source":"The name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for a property that specifies the peer authentication method."}]},{"pos":[16694,16843],"content":"Gets a collection of the non-static properties for the current <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets a collection of the non-static properties for the current <xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"></xref> instance."},{"pos":[16855,17286],"content":"Use the values of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A> properties as indexes into the collection to get a specific property value.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the values of the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A&gt;, &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A&gt;, &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A&gt;, &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A&gt; properties as indexes into the collection to get a specific property value.","pos":[0,431],"source":"Use the values of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A> properties as indexes into the collection to get a specific property value."}]},{"pos":[17502,17719],"content":"An <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id=\"ph2\">&amp;gt;</ph> that contains a collection of the non-static properties for the current <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"An &lt;xref:System.Collections.Generic.IDictionary%602&gt; that contains a collection of the non-static properties for the current <xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"></xref> instance."},{"pos":[18353,18491],"content":"Gets or sets a value that indicates whether the security token must be capable of performing cryptographic operations, such as encryption.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the security token must be capable of performing cryptographic operations, such as encryption.","pos":[0,138]}]},{"pos":[18504,19133],"content":"Some security tokens, such as the <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, are not secure enough to perform cryptographic operations and should only be used for authentication.       The value of the RequireCryptographicToken property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values. The value of the RequireCryptographicToken property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Some security tokens, such as the <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, are not secure enough to perform cryptographic operations and should only be used for authentication.       The value of the RequireCryptographicToken property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values. The value of the RequireCryptographicToken property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty%2A> property.","pos":[0,627],"nodes":[{"content":"Some security tokens, such as the &lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt;, are not secure enough to perform cryptographic operations and should only be used for authentication.","pos":[0,193],"source":"Some security tokens, such as the <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, are not secure enough to perform cryptographic operations and should only be used for authentication."},{"content":"The value of the RequireCryptographicToken property can also be accessed by getting the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A&gt; property, which is a collection of property values.","pos":[200,416],"source":"       The value of the RequireCryptographicToken property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values."},{"content":"The value of the RequireCryptographicToken property is stored at the index matching the value of the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty%2A&gt; property.","pos":[417,627],"source":" The value of the RequireCryptographicToken property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty%2A> property."}]}]},{"pos":[19268,19560],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the security token must be capable of performing cryptographic operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the security token must be capable of performing cryptographic operations; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,213],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the security token must be capable of performing cryptographic operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[214,292],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[20249,20476],"content":"Gets the name of the index in the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties<bpt id=\"p1\">*</bpt>&gt; collection for the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken<ept id=\"p1\">*</ept>&gt; property.","needQuote":true,"needEscape":true,"source":"Gets the name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken*> property."},{"pos":[20621,20843],"content":"The name of the index in the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties<bpt id=\"p1\">*</bpt>&gt; collection for the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken<ept id=\"p1\">*</ept>&gt; property.","needQuote":true,"needEscape":true,"source":"The name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken*> property."},{"pos":[21420,21466],"content":"Gets or sets the required security token type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the required security token type.","pos":[0,46]}]},{"pos":[21479,21988],"content":"Use one of the static properties of the <xref:System.IdentityModel.Tokens.SecurityTokenTypes> class to set this property.       The value of the TokenType property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values. The value of the TokenType property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use one of the static properties of the <xref:System.IdentityModel.Tokens.SecurityTokenTypes> class to set this property.       The value of the TokenType property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values. The value of the TokenType property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A> property.","pos":[0,507],"nodes":[{"content":"Use one of the static properties of the &lt;xref:System.IdentityModel.Tokens.SecurityTokenTypes&gt; class to set this property.","pos":[0,121],"source":"Use one of the static properties of the <xref:System.IdentityModel.Tokens.SecurityTokenTypes> class to set this property."},{"content":"The value of the TokenType property can also be accessed by getting the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A&gt; property, which is a collection of property values.","pos":[128,328],"source":"       The value of the TokenType property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values."},{"content":"The value of the TokenType property is stored at the index matching the value of the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A&gt; property.","pos":[329,507],"source":" The value of the TokenType property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A> property."}]}]},{"pos":[22108,22141],"content":"The required security token type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The required security token type.","pos":[0,33]}]},{"pos":[22734,22968],"content":"Gets a value that specifies the name of the index in the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties<bpt id=\"p1\">*</bpt>&gt; collection for the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType<ept id=\"p1\">*</ept>&gt; property.","needQuote":true,"needEscape":true,"source":"Gets a value that specifies the name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType*> property."},{"pos":[22980,23114],"content":"To set the required security token type, use the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To set the required security token type, use the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType%2A&gt; property.","pos":[0,134],"source":"To set the required security token type, use the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType%2A> property."}]},{"pos":[23243,23449],"content":"The name of the index in the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties<bpt id=\"p1\">*</bpt>&gt; collection for the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType<ept id=\"p1\">*</ept>&gt; property.","needQuote":true,"needEscape":true,"source":"The name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType*> property."},{"pos":[24297,24309],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24365,24377],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24436,24448],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement\n  id: SecurityTokenRequirement\n  children:\n  - System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor\n  - System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty``1(System.String)\n  - System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty\n  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize\n  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty\n  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType\n  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty\n  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage\n  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty\n  - System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode\n  - System.IdentityModel.Selectors.SecurityTokenRequirement.Properties\n  - System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken\n  - System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty\n  - System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType\n  - System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty\n  - System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty``1(System.String,``0@)\n  langs:\n  - csharp\n  name: SecurityTokenRequirement\n  nameWithType: SecurityTokenRequirement\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement\n  type: Class\n  summary: Specifies security token requirements.\n  remarks: Application code typically does not need to use the SecurityTokenRequirement class, unless a custom security token, security token manager, security token provider, or security token authenticator are created. The SecurityTokenRequirement class is used by a security token manager to specify what is required of a security token, such as the key size, key type, and how the key can be used. When a security token can be identified that matches the specified criteria, a <xref:System.IdentityModel.Selectors.SecurityTokenProvider> and <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> can be obtained to provide security tokens for outgoing SOAP messages and to authenticate security tokens for incoming SOAP messages, respectively. For example, the default security token manager for outgoing SOAP messages has the <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29> method that takes a SecurityTokenRequirement parameter that can be called to obtain a security token provider that matches the criteria specified in the security token requirement.\n  example:\n  - \"<xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>  \\n  \\n <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>  \\n  \\n <xref:System.IdentityModel.Selectors.SecurityTokenProvider>  \\n  \\n <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>  \\n  \\n <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator%28System.IdentityModel.Selectors.SecurityTokenRequirement%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%40%29>  \\n  \\n <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>  \\n  \\n <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator%28System.IdentityModel.Selectors.SecurityTokenRequirement%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%40%29>  \\n  \\n <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>\"\n  syntax:\n    content: public class SecurityTokenRequirement\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  langs:\n  - csharp\n  name: SecurityTokenRequirement()\n  nameWithType: SecurityTokenRequirement.SecurityTokenRequirement()\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.SecurityTokenRequirement()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"></xref> class.\n  syntax:\n    content: public SecurityTokenRequirement ();\n    parameters: []\n  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty``1(System.String)\n  id: GetProperty``1(System.String)\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  langs:\n  - csharp\n  name: GetProperty(String)\n  nameWithType: SecurityTokenRequirement.GetProperty(String)\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  syntax:\n    content: public TValue GetProperty<TValue> (string propertyName);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: To be added.\n    return:\n      type: TValue\n      description: To be added.\n  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty<TValue>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty\n  id: IsOptionalTokenProperty\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  langs:\n  - csharp\n  name: IsOptionalTokenProperty\n  nameWithType: SecurityTokenRequirement.IsOptionalTokenProperty\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets a value of the token property if it is optional.\n  syntax:\n    content: public static string IsOptionalTokenProperty { get; }\n    return:\n      type: System.String\n      description: A value of the token property.\n  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize\n  id: KeySize\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  langs:\n  - csharp\n  name: KeySize\n  nameWithType: SecurityTokenRequirement.KeySize\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets or sets the required size of the key associated with a security token.\n  remarks: The value of the KeySize property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values. The value of the KeySize property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A> property.\n  syntax:\n    content: public int KeySize { get; set; }\n    return:\n      type: System.Int32\n      description: The size of the key, in bits, associated with a security token. The default value is 0.\n  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The KeySize property is set to a value less than 0.\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty\n  id: KeySizeProperty\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  langs:\n  - csharp\n  name: KeySizeProperty\n  nameWithType: SecurityTokenRequirement.KeySizeProperty\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets a value that specifies the name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize*> property.\n  remarks: To set the required key size, use the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize%2A> property.\n  syntax:\n    content: public static string KeySizeProperty { get; }\n    return:\n      type: System.String\n      description: The name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize*> property.\n  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType\n  id: KeyType\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  langs:\n  - csharp\n  name: KeyType\n  nameWithType: SecurityTokenRequirement.KeyType\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets or sets the type of key (asymmetric or symmetric) associated with a security token.\n  remarks: The value of the KeyType property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values. The value of the KeyType property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A> property.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityKeyType KeyType { get; set; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyType\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyType\"></xref> that specifies the type of key (asymmetric or symmetric) associated with a security token. The default value is <xref uid=\"langword_csharp_SymmetricKey\" name=\"SymmetricKey\" href=\"\"></xref>.\n  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty\n  id: KeyTypeProperty\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  langs:\n  - csharp\n  name: KeyTypeProperty\n  nameWithType: SecurityTokenRequirement.KeyTypeProperty\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets a value that specifies the name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType*> property.\n  remarks: To set the required key type, use the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A> property.\n  syntax:\n    content: public static string KeyTypeProperty { get; }\n    return:\n      type: System.String\n      description: The name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType*> property.\n  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage\n  id: KeyUsage\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  langs:\n  - csharp\n  name: KeyUsage\n  nameWithType: SecurityTokenRequirement.KeyUsage\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets or sets a value that specifies how the key associated with a security token can be used.\n  remarks: The value of the KeyUsage property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values. The value of the KeyUsage property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A> property.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityKeyUsage KeyUsage { get; set; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyUsage\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyUsage\"></xref> that specifies how the key associated with a security token can be used. The default value is <xref href=\"System.IdentityModel.Tokens.SecurityKeyUsage\"></xref>.\n  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty\n  id: KeyUsageProperty\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  langs:\n  - csharp\n  name: KeyUsageProperty\n  nameWithType: SecurityTokenRequirement.KeyUsageProperty\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets a value that specifies the name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage*> property.\n  remarks: To set the key usage requirement, use the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage%2A> property.\n  syntax:\n    content: public static string KeyUsageProperty { get; }\n    return:\n      type: System.String\n      description: The name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage*> property.\n  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode\n  id: PeerAuthenticationMode\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  langs:\n  - csharp\n  name: PeerAuthenticationMode\n  nameWithType: SecurityTokenRequirement.PeerAuthenticationMode\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets the name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for a property that specifies the peer authentication method.\n  remarks: To add the capability to set the peer authentication mode, derive a class from <xref:System.IdentityModel.Selectors.SecurityTokenRequirement> and expose a property or constructor. Within the constructor or property add the peer authentication mode to the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> collection using the value of the PeerAuthenticationMode property as an index into the collection.\n  syntax:\n    content: public static string PeerAuthenticationMode { get; }\n    return:\n      type: System.String\n      description: The name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for a property that specifies the peer authentication method.\n  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties\n  id: Properties\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: SecurityTokenRequirement.Properties\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets a collection of the non-static properties for the current <xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"></xref> instance.\n  remarks: Use the values of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A> properties as indexes into the collection to get a specific property value.\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,object> Properties { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: An &lt;xref:System.Collections.Generic.IDictionary%602&gt; that contains a collection of the non-static properties for the current <xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"></xref> instance.\n  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken\n  id: RequireCryptographicToken\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  langs:\n  - csharp\n  name: RequireCryptographicToken\n  nameWithType: SecurityTokenRequirement.RequireCryptographicToken\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets or sets a value that indicates whether the security token must be capable of performing cryptographic operations, such as encryption.\n  remarks: \"Some security tokens, such as the <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, are not secure enough to perform cryptographic operations and should only be used for authentication.  \\n  \\n The value of the RequireCryptographicToken property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values. The value of the RequireCryptographicToken property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty%2A> property.\"\n  syntax:\n    content: public bool RequireCryptographicToken { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the security token must be capable of performing cryptographic operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty\n  id: RequireCryptographicTokenProperty\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  langs:\n  - csharp\n  name: RequireCryptographicTokenProperty\n  nameWithType: SecurityTokenRequirement.RequireCryptographicTokenProperty\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets the name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken*> property.\n  syntax:\n    content: public static string RequireCryptographicTokenProperty { get; }\n    return:\n      type: System.String\n      description: The name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken*> property.\n  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType\n  id: TokenType\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  langs:\n  - csharp\n  name: TokenType\n  nameWithType: SecurityTokenRequirement.TokenType\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets or sets the required security token type.\n  remarks: \"Use one of the static properties of the <xref:System.IdentityModel.Tokens.SecurityTokenTypes> class to set this property.  \\n  \\n The value of the TokenType property can also be accessed by getting the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> property, which is a collection of property values. The value of the TokenType property is stored at the index matching the value of the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A> property.\"\n  syntax:\n    content: public string TokenType { get; set; }\n    return:\n      type: System.String\n      description: The required security token type.\n  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty\n  id: TokenTypeProperty\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  langs:\n  - csharp\n  name: TokenTypeProperty\n  nameWithType: SecurityTokenRequirement.TokenTypeProperty\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets a value that specifies the name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType*> property.\n  remarks: To set the required security token type, use the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType%2A> property.\n  syntax:\n    content: public static string TokenTypeProperty { get; }\n    return:\n      type: System.String\n      description: The name of the index in the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*> collection for the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType*> property.\n  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty``1(System.String,``0@)\n  id: TryGetProperty``1(System.String,``0@)\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  langs:\n  - csharp\n  name: TryGetProperty(String,TValue)\n  nameWithType: SecurityTokenRequirement.TryGetProperty(String,TValue)\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty(String,TValue)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  syntax:\n    content: public bool TryGetProperty<TValue> (string propertyName, out TValue result);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: To be added.\n    - id: result\n      type: TValue\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty<TValue>*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: SecurityTokenRequirement()\n  nameWithType: SecurityTokenRequirement.SecurityTokenRequirement()\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.SecurityTokenRequirement()\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty``1(System.String)\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: GetProperty(String)\n  nameWithType: SecurityTokenRequirement.GetProperty(String)\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty(String)\n- uid: TValue\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: IsOptionalTokenProperty\n  nameWithType: SecurityTokenRequirement.IsOptionalTokenProperty\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: KeySize\n  nameWithType: SecurityTokenRequirement.KeySize\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: KeySizeProperty\n  nameWithType: SecurityTokenRequirement.KeySizeProperty\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: KeyType\n  nameWithType: SecurityTokenRequirement.KeyType\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType\n- uid: System.IdentityModel.Tokens.SecurityKeyType\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyType\n  nameWithType: SecurityKeyType\n  fullName: System.IdentityModel.Tokens.SecurityKeyType\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: KeyTypeProperty\n  nameWithType: SecurityTokenRequirement.KeyTypeProperty\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: KeyUsage\n  nameWithType: SecurityTokenRequirement.KeyUsage\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage\n- uid: System.IdentityModel.Tokens.SecurityKeyUsage\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyUsage\n  nameWithType: SecurityKeyUsage\n  fullName: System.IdentityModel.Tokens.SecurityKeyUsage\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: KeyUsageProperty\n  nameWithType: SecurityTokenRequirement.KeyUsageProperty\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: PeerAuthenticationMode\n  nameWithType: SecurityTokenRequirement.PeerAuthenticationMode\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: Properties\n  nameWithType: SecurityTokenRequirement.Properties\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.String,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: RequireCryptographicToken\n  nameWithType: SecurityTokenRequirement.RequireCryptographicToken\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: RequireCryptographicTokenProperty\n  nameWithType: SecurityTokenRequirement.RequireCryptographicTokenProperty\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: TokenType\n  nameWithType: SecurityTokenRequirement.TokenType\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: TokenTypeProperty\n  nameWithType: SecurityTokenRequirement.TokenTypeProperty\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty``1(System.String,``0@)\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: TryGetProperty(String,TValue)\n  nameWithType: SecurityTokenRequirement.TryGetProperty(String,TValue)\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty(String,TValue)\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor*\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: SecurityTokenRequirement\n  nameWithType: SecurityTokenRequirement.SecurityTokenRequirement\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty<TValue>*\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: GetProperty<TValue>\n  nameWithType: SecurityTokenRequirement.GetProperty<TValue>\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty*\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: IsOptionalTokenProperty\n  nameWithType: SecurityTokenRequirement.IsOptionalTokenProperty\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize*\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: KeySize\n  nameWithType: SecurityTokenRequirement.KeySize\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty*\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: KeySizeProperty\n  nameWithType: SecurityTokenRequirement.KeySizeProperty\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType*\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: KeyType\n  nameWithType: SecurityTokenRequirement.KeyType\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty*\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: KeyTypeProperty\n  nameWithType: SecurityTokenRequirement.KeyTypeProperty\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage*\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: KeyUsage\n  nameWithType: SecurityTokenRequirement.KeyUsage\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty*\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: KeyUsageProperty\n  nameWithType: SecurityTokenRequirement.KeyUsageProperty\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode*\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: PeerAuthenticationMode\n  nameWithType: SecurityTokenRequirement.PeerAuthenticationMode\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: Properties\n  nameWithType: SecurityTokenRequirement.Properties\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken*\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: RequireCryptographicToken\n  nameWithType: SecurityTokenRequirement.RequireCryptographicToken\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty*\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: RequireCryptographicTokenProperty\n  nameWithType: SecurityTokenRequirement.RequireCryptographicTokenProperty\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType*\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: TokenType\n  nameWithType: SecurityTokenRequirement.TokenType\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty*\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: TokenTypeProperty\n  nameWithType: SecurityTokenRequirement.TokenTypeProperty\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty<TValue>*\n  parent: System.IdentityModel.Selectors.SecurityTokenRequirement\n  isExternal: false\n  name: TryGetProperty<TValue>\n  nameWithType: SecurityTokenRequirement.TryGetProperty<TValue>\n"}