{"nodes":[{"pos":[1403,1651],"content":"Provides a <bpt id=\"p1\">&lt;xref href=\"System.Windows.WeakEventManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation so that you can use the \"weak event listener\" pattern to attach listeners for the &lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt; event.","needQuote":true,"needEscape":true,"source":"Provides a <xref href=\"System.Windows.WeakEventManager\"></xref> implementation so that you can use the \"weak event listener\" pattern to attach listeners for the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event."},{"pos":[1663,1900],"content":"In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>. You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>. You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events.","pos":[0,237],"nodes":[{"content":"In order to be listeners in this pattern, your listener objects must implement &lt;xref:System.Windows.IWeakEventListener&gt;.","pos":[0,120],"source":"In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>."},{"content":"You do not need to implement &lt;xref:System.Windows.IWeakEventListener&gt; on the class that is the source of the events.","pos":[121,237],"source":" You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events."}]}]},{"pos":[4416,4586],"content":"Adds the specified event handler, which is called when specified source raises the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified event handler, which is called when specified source raises the &lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt; event.","pos":[0,170],"source":"Adds the specified event handler, which is called when specified source raises the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event."}]},{"pos":[4913,5038],"content":"The source object that the raises the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The source object that the raises the &lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt; event.","pos":[0,125],"source":"The source object that the raises the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event."}]},{"pos":[5173,5290],"content":"The delegate that handles the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The delegate that handles the &lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt; event.","pos":[0,117],"source":"The delegate that handles the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event."}]},{"pos":[6185,6331],"content":"Adds the specified listener to the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event of the specified source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified listener to the &lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt; event of the specified source.","pos":[0,146],"source":"Adds the specified listener to the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event of the specified source."}]},{"pos":[6616,6642],"content":"The object with the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object with the event.","pos":[0,26]}]},{"pos":[6727,6759],"content":"The object to add as a listener.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to add as a listener.","pos":[0,32]}]},{"pos":[7364,7500],"content":"Returns a new object to contain listeners to the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a new object to contain listeners to the &lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt; event.","pos":[0,136],"source":"Returns a new object to contain listeners to the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event."}]},{"pos":[7715,7843],"content":"A new object to contain listeners to the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new object to contain listeners to the &lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt; event.","pos":[0,128],"source":"A new object to contain listeners to the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event."}]},{"pos":[8939,9001],"content":"Removes the specified event handler from the specified source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified event handler from the specified source.","pos":[0,62]}]},{"pos":[9331,9456],"content":"The source object that the raises the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The source object that the raises the &lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt; event.","pos":[0,125],"source":"The source object that the raises the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event."}]},{"pos":[9591,9708],"content":"The delegate that handles the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The delegate that handles the &lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt; event.","pos":[0,117],"source":"The delegate that handles the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event."}]},{"pos":[10621,10772],"content":"Removes the specified listener from the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event of the specified source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified listener from the &lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt; event of the specified source.","pos":[0,151],"source":"Removes the specified listener from the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event of the specified source."}]},{"pos":[11060,11086],"content":"The object with the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object with the event.","pos":[0,26]}]},{"pos":[11171,11194],"content":"The listener to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The listener to remove.","pos":[0,23]}]},{"pos":[11845,11981],"content":"Begins listening for the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event on the specified source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins listening for the &lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt; event on the specified source.","pos":[0,136],"source":"Begins listening for the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event on the specified source."}]},{"pos":[12139,12165],"content":"The object with the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object with the event.","pos":[0,26]}]},{"pos":[12811,12946],"content":"Stops listening for the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event on the specified source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stops listening for the &lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt; event on the specified source.","pos":[0,135],"source":"Stops listening for the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event on the specified source."}]},{"pos":[13103,13129],"content":"The object with the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object with the event.","pos":[0,26]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Specialized.CollectionChangedEventManager\n  id: CollectionChangedEventManager\n  children:\n  - System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})\n  - System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)\n  - System.Collections.Specialized.CollectionChangedEventManager.NewListenerList\n  - System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})\n  - System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)\n  - System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)\n  - System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)\n  langs:\n  - csharp\n  name: CollectionChangedEventManager\n  nameWithType: CollectionChangedEventManager\n  fullName: System.Collections.Specialized.CollectionChangedEventManager\n  type: Class\n  summary: Provides a <xref href=\"System.Windows.WeakEventManager\"></xref> implementation so that you can use the \"weak event listener\" pattern to attach listeners for the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event.\n  remarks: In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>. You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events.\n  syntax:\n    content: 'public class CollectionChangedEventManager : System.Windows.WeakEventManager'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.WeakEventManager\n  implements: []\n  inheritedMembers:\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  - System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)\n  - System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)\n  - System.Windows.WeakEventManager.GetCurrentManager(System.Type)\n  - System.Windows.WeakEventManager.Item(System.Object)\n  - System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)\n  - System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)\n  - System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)\n  - System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)\n  - System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)\n  - System.Windows.WeakEventManager.ReadLock\n  - System.Windows.WeakEventManager.Remove(System.Object)\n  - System.Windows.WeakEventManager.ScheduleCleanup\n  - System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)\n  - System.Windows.WeakEventManager.WriteLock\n  platform:\n  - net462\n- uid: System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})\n  id: AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  langs:\n  - csharp\n  name: AddHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)\n  nameWithType: CollectionChangedEventManager.AddHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)\n  fullName: System.Collections.Specialized.CollectionChangedEventManager.AddHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Collections.Specialized\n  summary: Adds the specified event handler, which is called when specified source raises the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event.\n  syntax:\n    content: public static void AddHandler (System.Collections.Specialized.INotifyCollectionChanged source, EventHandler<System.Collections.Specialized.NotifyCollectionChangedEventArgs> handler);\n    parameters:\n    - id: source\n      type: System.Collections.Specialized.INotifyCollectionChanged\n      description: The source object that the raises the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event.\n    - id: handler\n      type: System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs}\n      description: The delegate that handles the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event.\n  overload: System.Collections.Specialized.CollectionChangedEventManager.AddHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)\n  id: AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  langs:\n  - csharp\n  name: AddListener(INotifyCollectionChanged,IWeakEventListener)\n  nameWithType: CollectionChangedEventManager.AddListener(INotifyCollectionChanged,IWeakEventListener)\n  fullName: System.Collections.Specialized.CollectionChangedEventManager.AddListener(INotifyCollectionChanged,IWeakEventListener)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Collections.Specialized\n  summary: Adds the specified listener to the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event of the specified source.\n  syntax:\n    content: public static void AddListener (System.Collections.Specialized.INotifyCollectionChanged source, System.Windows.IWeakEventListener listener);\n    parameters:\n    - id: source\n      type: System.Collections.Specialized.INotifyCollectionChanged\n      description: The object with the event.\n    - id: listener\n      type: System.Windows.IWeakEventListener\n      description: The object to add as a listener.\n  overload: System.Collections.Specialized.CollectionChangedEventManager.AddListener*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.CollectionChangedEventManager.NewListenerList\n  id: NewListenerList\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  langs:\n  - csharp\n  name: NewListenerList()\n  nameWithType: CollectionChangedEventManager.NewListenerList()\n  fullName: System.Collections.Specialized.CollectionChangedEventManager.NewListenerList()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Collections.Specialized\n  summary: Returns a new object to contain listeners to the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event.\n  syntax:\n    content: protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();\n    parameters: []\n    return:\n      type: System.Windows.WeakEventManager.ListenerList\n      description: A new object to contain listeners to the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event.\n  overload: System.Collections.Specialized.CollectionChangedEventManager.NewListenerList*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})\n  id: RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  langs:\n  - csharp\n  name: RemoveHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)\n  nameWithType: CollectionChangedEventManager.RemoveHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)\n  fullName: System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Collections.Specialized\n  summary: Removes the specified event handler from the specified source.\n  syntax:\n    content: public static void RemoveHandler (System.Collections.Specialized.INotifyCollectionChanged source, EventHandler<System.Collections.Specialized.NotifyCollectionChangedEventArgs> handler);\n    parameters:\n    - id: source\n      type: System.Collections.Specialized.INotifyCollectionChanged\n      description: The source object that the raises the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event.\n    - id: handler\n      type: System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs}\n      description: The delegate that handles the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event.\n  overload: System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)\n  id: RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  langs:\n  - csharp\n  name: RemoveListener(INotifyCollectionChanged,IWeakEventListener)\n  nameWithType: CollectionChangedEventManager.RemoveListener(INotifyCollectionChanged,IWeakEventListener)\n  fullName: System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(INotifyCollectionChanged,IWeakEventListener)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Collections.Specialized\n  summary: Removes the specified listener from the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event of the specified source.\n  syntax:\n    content: public static void RemoveListener (System.Collections.Specialized.INotifyCollectionChanged source, System.Windows.IWeakEventListener listener);\n    parameters:\n    - id: source\n      type: System.Collections.Specialized.INotifyCollectionChanged\n      description: The object with the event.\n    - id: listener\n      type: System.Windows.IWeakEventListener\n      description: The listener to remove.\n  overload: System.Collections.Specialized.CollectionChangedEventManager.RemoveListener*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)\n  id: StartListening(System.Object)\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  langs:\n  - csharp\n  name: StartListening(Object)\n  nameWithType: CollectionChangedEventManager.StartListening(Object)\n  fullName: System.Collections.Specialized.CollectionChangedEventManager.StartListening(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Collections.Specialized\n  summary: Begins listening for the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event on the specified source.\n  syntax:\n    content: protected override void StartListening (object source);\n    parameters:\n    - id: source\n      type: System.Object\n      description: The object with the event.\n  overload: System.Collections.Specialized.CollectionChangedEventManager.StartListening*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)\n  id: StopListening(System.Object)\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  langs:\n  - csharp\n  name: StopListening(Object)\n  nameWithType: CollectionChangedEventManager.StopListening(Object)\n  fullName: System.Collections.Specialized.CollectionChangedEventManager.StopListening(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Collections.Specialized\n  summary: Stops listening for the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event on the specified source.\n  syntax:\n    content: protected override void StopListening (object source);\n    parameters:\n    - id: source\n      type: System.Object\n      description: The object with the event.\n  overload: System.Collections.Specialized.CollectionChangedEventManager.StopListening*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.WeakEventManager\n  isExternal: false\n  name: System.Windows.WeakEventManager\n- uid: System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  isExternal: false\n  name: AddHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)\n  nameWithType: CollectionChangedEventManager.AddHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)\n  fullName: System.Collections.Specialized.CollectionChangedEventManager.AddHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)\n- uid: System.Collections.Specialized.INotifyCollectionChanged\n  parent: System.Collections.Specialized\n  isExternal: true\n  name: INotifyCollectionChanged\n  nameWithType: INotifyCollectionChanged\n  fullName: System.Collections.Specialized.INotifyCollectionChanged\n- uid: System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<NotifyCollectionChangedEventArgs>\n  nameWithType: EventHandler<NotifyCollectionChangedEventArgs>\n  fullName: System.EventHandler<System.Collections.Specialized.NotifyCollectionChangedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<System.Collections.Specialized.NotifyCollectionChangedEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs\n    name: NotifyCollectionChangedEventArgs\n    nameWithType: NotifyCollectionChangedEventArgs\n    fullName: NotifyCollectionChangedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  isExternal: false\n  name: AddListener(INotifyCollectionChanged,IWeakEventListener)\n  nameWithType: CollectionChangedEventManager.AddListener(INotifyCollectionChanged,IWeakEventListener)\n  fullName: System.Collections.Specialized.CollectionChangedEventManager.AddListener(INotifyCollectionChanged,IWeakEventListener)\n- uid: System.Windows.IWeakEventListener\n  parent: System.Windows\n  isExternal: false\n  name: IWeakEventListener\n  nameWithType: IWeakEventListener\n  fullName: System.Windows.IWeakEventListener\n- uid: System.Collections.Specialized.CollectionChangedEventManager.NewListenerList\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  isExternal: false\n  name: NewListenerList()\n  nameWithType: CollectionChangedEventManager.NewListenerList()\n  fullName: System.Collections.Specialized.CollectionChangedEventManager.NewListenerList()\n- uid: System.Windows.WeakEventManager.ListenerList\n  parent: System.Windows\n  isExternal: false\n  name: WeakEventManager+ListenerList\n  nameWithType: WeakEventManager+ListenerList\n  fullName: System.Windows.WeakEventManager+ListenerList\n- uid: System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  isExternal: false\n  name: RemoveHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)\n  nameWithType: CollectionChangedEventManager.RemoveHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)\n  fullName: System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)\n- uid: System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  isExternal: false\n  name: RemoveListener(INotifyCollectionChanged,IWeakEventListener)\n  nameWithType: CollectionChangedEventManager.RemoveListener(INotifyCollectionChanged,IWeakEventListener)\n  fullName: System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(INotifyCollectionChanged,IWeakEventListener)\n- uid: System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  isExternal: false\n  name: StartListening(Object)\n  nameWithType: CollectionChangedEventManager.StartListening(Object)\n  fullName: System.Collections.Specialized.CollectionChangedEventManager.StartListening(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  isExternal: false\n  name: StopListening(Object)\n  nameWithType: CollectionChangedEventManager.StopListening(Object)\n  fullName: System.Collections.Specialized.CollectionChangedEventManager.StopListening(Object)\n- uid: System.Collections.Specialized.CollectionChangedEventManager.AddHandler*\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  isExternal: false\n  name: AddHandler\n  nameWithType: CollectionChangedEventManager.AddHandler\n- uid: System.Collections.Specialized.CollectionChangedEventManager.AddListener*\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  isExternal: false\n  name: AddListener\n  nameWithType: CollectionChangedEventManager.AddListener\n- uid: System.Collections.Specialized.CollectionChangedEventManager.NewListenerList*\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  isExternal: false\n  name: NewListenerList\n  nameWithType: CollectionChangedEventManager.NewListenerList\n- uid: System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler*\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  isExternal: false\n  name: RemoveHandler\n  nameWithType: CollectionChangedEventManager.RemoveHandler\n- uid: System.Collections.Specialized.CollectionChangedEventManager.RemoveListener*\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  isExternal: false\n  name: RemoveListener\n  nameWithType: CollectionChangedEventManager.RemoveListener\n- uid: System.Collections.Specialized.CollectionChangedEventManager.StartListening*\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  isExternal: false\n  name: StartListening\n  nameWithType: CollectionChangedEventManager.StartListening\n- uid: System.Collections.Specialized.CollectionChangedEventManager.StopListening*\n  parent: System.Collections.Specialized.CollectionChangedEventManager\n  isExternal: false\n  name: StopListening\n  nameWithType: CollectionChangedEventManager.StopListening\n"}