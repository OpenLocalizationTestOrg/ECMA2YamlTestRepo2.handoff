{"nodes":[{"pos":[662,718],"content":"Identifies the nature of the code in an executable file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the nature of the code in an executable file.","pos":[0,56]}]},{"pos":[731,1022],"content":"To obtain this value for a module, use the <xref:System.Reflection.Module.GetPEKind%2A?displayProperty=fullName> method.      > [!NOTE] >  This enumeration corresponds to the `CorPEKind` enumeration in the unmanaged reflection API, which is accessed by the unmanaged `GetPEKind` function.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"To obtain this value for a module, use the &lt;xref:System.Reflection.Module.GetPEKind%2A?displayProperty=fullName&gt; method.","pos":[0,120],"source":"To obtain this value for a module, use the <xref:System.Reflection.Module.GetPEKind%2A?displayProperty=fullName> method."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This enumeration corresponds to the <ph id=\"ph2\">`CorPEKind`</ph> enumeration in the unmanaged reflection API, which is accessed by the unmanaged <ph id=\"ph3\">`GetPEKind`</ph> function.","pos":[126,288],"source":"      > [!NOTE] >  This enumeration corresponds to the `CorPEKind` enumeration in the unmanaged reflection API, which is accessed by the unmanaged `GetPEKind` function."}]},{"pos":[1572,1709],"content":"The executable contains only Microsoft intermediate language (MSIL), and is therefore neutral with respect to 32-bit or 64-bit platforms.","needQuote":true,"needEscape":true,"nodes":[{"content":"The executable contains only Microsoft intermediate language (MSIL), and is therefore neutral with respect to 32-bit or 64-bit platforms.","pos":[0,137]}]},{"pos":[1825,1837],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2330,2386],"content":"The file is not in portable executable (PE) file format.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file is not in portable executable (PE) file format.","pos":[0,56]}]},{"pos":[2523,2535],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2933,2975],"content":"The executable requires a 64-bit platform.","needQuote":true,"needEscape":true,"nodes":[{"content":"The executable requires a 64-bit platform.","pos":[0,42]}]},{"pos":[3093,3105],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3533,3626],"content":"The executable is platform-agnostic but should be run on a 32-bit platform whenever possible.","needQuote":true,"needEscape":true,"nodes":[{"content":"The executable is platform-agnostic but should be run on a 32-bit platform whenever possible.","pos":[0,93]}]},{"pos":[3750,3762],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4185,4308],"content":"The executable can be run on a 32-bit platform, or in the 32-bit Windows on Windows (WOW) environment on a 64-bit platform.","needQuote":true,"needEscape":true,"nodes":[{"content":"The executable can be run on a 32-bit platform, or in the 32-bit Windows on Windows (WOW) environment on a 64-bit platform.","pos":[0,123]}]},{"pos":[4431,4443],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4871,4915],"content":"The executable contains pure unmanaged code.","needQuote":true,"needEscape":true,"nodes":[{"content":"The executable contains pure unmanaged code.","pos":[0,44]}]},{"pos":[5039,5051],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.PortableExecutableKinds\n  id: PortableExecutableKinds\n  children:\n  - System.Reflection.PortableExecutableKinds.ILOnly\n  - System.Reflection.PortableExecutableKinds.NotAPortableExecutableImage\n  - System.Reflection.PortableExecutableKinds.PE32Plus\n  - System.Reflection.PortableExecutableKinds.Preferred32Bit\n  - System.Reflection.PortableExecutableKinds.Required32Bit\n  - System.Reflection.PortableExecutableKinds.Unmanaged32Bit\n  langs:\n  - csharp\n  name: PortableExecutableKinds\n  nameWithType: PortableExecutableKinds\n  fullName: System.Reflection.PortableExecutableKinds\n  type: Enum\n  summary: Identifies the nature of the code in an executable file.\n  remarks: \"To obtain this value for a module, use the <xref:System.Reflection.Module.GetPEKind%2A?displayProperty=fullName> method.  \\n  \\n> [!NOTE]\\n>  This enumeration corresponds to the `CorPEKind` enumeration in the unmanaged reflection API, which is accessed by the unmanaged `GetPEKind` function.\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum PortableExecutableKinds\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Reflection.PortableExecutableKinds.ILOnly\n  id: ILOnly\n  parent: System.Reflection.PortableExecutableKinds\n  langs:\n  - csharp\n  name: ILOnly\n  nameWithType: PortableExecutableKinds.ILOnly\n  fullName: System.Reflection.PortableExecutableKinds.ILOnly\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: The executable contains only Microsoft intermediate language (MSIL), and is therefore neutral with respect to 32-bit or 64-bit platforms.\n  syntax:\n    content: ILOnly\n    return:\n      type: System.Reflection.PortableExecutableKinds\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.PortableExecutableKinds.NotAPortableExecutableImage\n  id: NotAPortableExecutableImage\n  parent: System.Reflection.PortableExecutableKinds\n  langs:\n  - csharp\n  name: NotAPortableExecutableImage\n  nameWithType: PortableExecutableKinds.NotAPortableExecutableImage\n  fullName: System.Reflection.PortableExecutableKinds.NotAPortableExecutableImage\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: The file is not in portable executable (PE) file format.\n  syntax:\n    content: NotAPortableExecutableImage\n    return:\n      type: System.Reflection.PortableExecutableKinds\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.PortableExecutableKinds.PE32Plus\n  id: PE32Plus\n  parent: System.Reflection.PortableExecutableKinds\n  langs:\n  - csharp\n  name: PE32Plus\n  nameWithType: PortableExecutableKinds.PE32Plus\n  fullName: System.Reflection.PortableExecutableKinds.PE32Plus\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: The executable requires a 64-bit platform.\n  syntax:\n    content: PE32Plus\n    return:\n      type: System.Reflection.PortableExecutableKinds\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.PortableExecutableKinds.Preferred32Bit\n  id: Preferred32Bit\n  parent: System.Reflection.PortableExecutableKinds\n  langs:\n  - csharp\n  name: Preferred32Bit\n  nameWithType: PortableExecutableKinds.Preferred32Bit\n  fullName: System.Reflection.PortableExecutableKinds.Preferred32Bit\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: The executable is platform-agnostic but should be run on a 32-bit platform whenever possible.\n  syntax:\n    content: Preferred32Bit\n    return:\n      type: System.Reflection.PortableExecutableKinds\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.PortableExecutableKinds.Required32Bit\n  id: Required32Bit\n  parent: System.Reflection.PortableExecutableKinds\n  langs:\n  - csharp\n  name: Required32Bit\n  nameWithType: PortableExecutableKinds.Required32Bit\n  fullName: System.Reflection.PortableExecutableKinds.Required32Bit\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: The executable can be run on a 32-bit platform, or in the 32-bit Windows on Windows (WOW) environment on a 64-bit platform.\n  syntax:\n    content: Required32Bit\n    return:\n      type: System.Reflection.PortableExecutableKinds\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.PortableExecutableKinds.Unmanaged32Bit\n  id: Unmanaged32Bit\n  parent: System.Reflection.PortableExecutableKinds\n  langs:\n  - csharp\n  name: Unmanaged32Bit\n  nameWithType: PortableExecutableKinds.Unmanaged32Bit\n  fullName: System.Reflection.PortableExecutableKinds.Unmanaged32Bit\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: The executable contains pure unmanaged code.\n  syntax:\n    content: Unmanaged32Bit\n    return:\n      type: System.Reflection.PortableExecutableKinds\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Reflection.PortableExecutableKinds.ILOnly\n  parent: System.Reflection.PortableExecutableKinds\n  isExternal: false\n  name: ILOnly\n  nameWithType: PortableExecutableKinds.ILOnly\n  fullName: System.Reflection.PortableExecutableKinds.ILOnly\n- uid: System.Reflection.PortableExecutableKinds\n  parent: System.Reflection\n  isExternal: false\n  name: PortableExecutableKinds\n  nameWithType: PortableExecutableKinds\n  fullName: System.Reflection.PortableExecutableKinds\n- uid: System.Reflection.PortableExecutableKinds.NotAPortableExecutableImage\n  parent: System.Reflection.PortableExecutableKinds\n  isExternal: false\n  name: NotAPortableExecutableImage\n  nameWithType: PortableExecutableKinds.NotAPortableExecutableImage\n  fullName: System.Reflection.PortableExecutableKinds.NotAPortableExecutableImage\n- uid: System.Reflection.PortableExecutableKinds.PE32Plus\n  parent: System.Reflection.PortableExecutableKinds\n  isExternal: false\n  name: PE32Plus\n  nameWithType: PortableExecutableKinds.PE32Plus\n  fullName: System.Reflection.PortableExecutableKinds.PE32Plus\n- uid: System.Reflection.PortableExecutableKinds.Preferred32Bit\n  parent: System.Reflection.PortableExecutableKinds\n  isExternal: false\n  name: Preferred32Bit\n  nameWithType: PortableExecutableKinds.Preferred32Bit\n  fullName: System.Reflection.PortableExecutableKinds.Preferred32Bit\n- uid: System.Reflection.PortableExecutableKinds.Required32Bit\n  parent: System.Reflection.PortableExecutableKinds\n  isExternal: false\n  name: Required32Bit\n  nameWithType: PortableExecutableKinds.Required32Bit\n  fullName: System.Reflection.PortableExecutableKinds.Required32Bit\n- uid: System.Reflection.PortableExecutableKinds.Unmanaged32Bit\n  parent: System.Reflection.PortableExecutableKinds\n  isExternal: false\n  name: Unmanaged32Bit\n  nameWithType: PortableExecutableKinds.Unmanaged32Bit\n  fullName: System.Reflection.PortableExecutableKinds.Unmanaged32Bit\n"}