{"nodes":[{"pos":[1219,1317],"content":"Represents the wst:RequestSecurityTokenResponse element, which is used to return a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the wst:RequestSecurityTokenResponse element, which is used to return a security token.","pos":[0,98]}]},{"pos":[1330,2690],"content":"The wst:RequestSecurityTokenResponse element (message) contains the parameters and properties in the response sent by a security token service (STS) to a security token request (RST) made by a client. The response message (or element) is abbreviated as RSTR. The <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenRequest> class contains properties that represent the elements of the RSTR. An RSTR can form a response to a request that corresponds to any of the request bindings defined by WS-Trust; for example, the Issuance binding, the Renewal binding, the Validate binding, or the Cancel binding. Many of the properties in the RequestSecurityTokenResponse class correspond to elements that are present only in specific kinds of responses as defined by these bindings. Depending on the kind of response a particular RequestSecurityTokenResponse object represents or the parameters present in the specific response that it represents, some properties of the object may be `null`.       Requests arrive at the STS in a message that contains a wst:RequestSecurityToken element (RST). This message is represented by the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> class.       For more information about the element that this class represents, see the version of the WS-Trust specification that applies to your scenario.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The wst:RequestSecurityTokenResponse element (message) contains the parameters and properties in the response sent by a security token service (STS) to a security token request (RST) made by a client.","pos":[0,200]},{"content":"The response message (or element) is abbreviated as RSTR.","pos":[201,258]},{"content":"The &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenRequest&gt; class contains properties that represent the elements of the RSTR.","pos":[259,403],"source":" The <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenRequest> class contains properties that represent the elements of the RSTR."},{"content":"An RSTR can form a response to a request that corresponds to any of the request bindings defined by WS-Trust; for example, the Issuance binding, the Renewal binding, the Validate binding, or the Cancel binding.","pos":[404,614]},{"content":"Many of the properties in the RequestSecurityTokenResponse class correspond to elements that are present only in specific kinds of responses as defined by these bindings.","pos":[615,785]},{"content":"Depending on the kind of response a particular RequestSecurityTokenResponse object represents or the parameters present in the specific response that it represents, some properties of the object may be <ph id=\"ph1\">`null`</ph>.","pos":[786,995],"source":" Depending on the kind of response a particular RequestSecurityTokenResponse object represents or the parameters present in the specific response that it represents, some properties of the object may be `null`."},{"content":"Requests arrive at the STS in a message that contains a wst:RequestSecurityToken element (RST).","pos":[1002,1097]},{"content":"This message is represented by the &lt;xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&gt; class.","pos":[1098,1206],"source":" This message is represented by the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> class."},{"content":"For more information about the element that this class represents, see the version of the WS-Trust specification that applies to your scenario.","pos":[1213,1356]}]},{"pos":[4939,5068],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> class."},{"pos":[5080,5140],"content":"This constructor is usually used by the receiver of an RSTR.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor is usually used by the receiver of an RSTR.","pos":[0,60]}]},{"pos":[6043,6218],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class based on the specified request message (RST) .","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> class based on the specified request message (RST) ."},{"pos":[6231,6905],"content":"This constructor is usually used by the sender of an RSTR. The following properties are set from the request message: <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context%2A>, <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType%2A>, <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits%2A> (if the key is symmetric), and <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A>.      > [!NOTE] >  When working in a Challenge/Response environment the RequestType is used within the wst:RequestSecurityTokenResponse context to establish processing rules on a response coming back for a given challenge.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor is usually used by the sender of an RSTR.","pos":[0,58]},{"content":"The following properties are set from the request message: &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context%2A&gt;, &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType%2A&gt;, &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits%2A&gt; (if the key is symmetric), and &lt;xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A&gt;.","pos":[59,449],"source":" The following properties are set from the request message: <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context%2A>, <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType%2A>, <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits%2A> (if the key is symmetric), and <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A>."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When working in a Challenge/Response environment the RequestType is used within the wst:RequestSecurityTokenResponse context to establish processing rules on a response coming back for a given challenge.","pos":[455,671],"source":"      > [!NOTE] >  When working in a Challenge/Response environment the RequestType is used within the wst:RequestSecurityTokenResponse context to establish processing rules on a response coming back for a given challenge."}]},{"pos":[7150,7261],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.WSTrustMessage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the request (RST).","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.WSTrustMessage\"></xref> that represents the request (RST)."},{"pos":[7465,7550],"content":"<ph id=\"ph1\">&lt;code&gt;message&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>message</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8045,8149],"content":"Gets or sets the flag that determines if the RSTR is the final message and should be serialized as such.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the flag that determines if the RSTR is the final message and should be serialized as such.","pos":[0,104]}]},{"pos":[8161,8409],"content":"This flag only has an effect when the version of WS-Trust provides rules for serializing the final RSTR in a message flow. For example, WS-Trust 1.3 requires the final RSTR to be enclosed within a wst:RequestSecurityTokenResponseCollection element.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This flag only has an effect when the version of WS-Trust provides rules for serializing the final RSTR in a message flow. For example, WS-Trust 1.3 requires the final RSTR to be enclosed within a wst:RequestSecurityTokenResponseCollection element.","pos":[0,248],"nodes":[{"content":"This flag only has an effect when the version of WS-Trust provides rules for serializing the final RSTR in a message flow.","pos":[0,122]},{"content":"For example, WS-Trust 1.3 requires the final RSTR to be enclosed within a wst:RequestSecurityTokenResponseCollection element.","pos":[123,248]}]}]},{"pos":[8525,8693],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the RSTR is the final message; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the RSTR is the final message; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9389,9483],"content":"Gets or sets the security token reference when the requested token is attached to the message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the security token reference when the requested token is attached to the message.","pos":[0,94]}]},{"pos":[9495,9712],"content":"Represents the contents of the wst:RequestedAttachedReference element. This optional element is specified to indicate how to reference the returned token when that token doesn't support references using URI fragments.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Represents the contents of the wst:RequestedAttachedReference element. This optional element is specified to indicate how to reference the returned token when that token doesn't support references using URI fragments.","pos":[0,217],"nodes":[{"content":"Represents the contents of the wst:RequestedAttachedReference element.","pos":[0,70]},{"content":"This optional element is specified to indicate how to reference the returned token when that token doesn't support references using URI fragments.","pos":[71,217]}]}]},{"pos":[9939,10046],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the reference.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> that contains the reference."},{"pos":[10726,10805],"content":"Gets or sets the optional element used to return the proof of possession token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the optional element used to return the proof of possession token.","pos":[0,79]}]},{"pos":[10817,10872],"content":"Represents the contents of the wst:RequestedProofToken.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Represents the contents of the wst:RequestedProofToken.","pos":[0,55]}]},{"pos":[11098,11212],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestedProofToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the proof token.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestedProofToken\"></xref> that represents the proof token."},{"pos":[11900,11978],"content":"Gets or sets the optional element used to return the requested security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the optional element used to return the requested security token.","pos":[0,78]}]},{"pos":[11990,12056],"content":"Represents the contents of the wst:RequestedSecurityToken element.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Represents the contents of the wst:RequestedSecurityToken element.","pos":[0,66]}]},{"pos":[12291,12411],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken\"></xref> that represents the security token."},{"pos":[13107,13160],"content":"Gets or sets the wst:RequestedTokenCancelled element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the wst:RequestedTokenCancelled element.","pos":[0,53]}]},{"pos":[13172,13462],"content":"If the RequestedTokenCancelled property is `true` then the response contains a wst:RequestedTokenCancelled element, which indicates that the Cancel request succeeded and the token was cancelled. If it is `false`, the element was not included in the response and the token was not cancelled.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the RequestedTokenCancelled property is <ph id=\"ph1\">`true`</ph> then the response contains a wst:RequestedTokenCancelled element, which indicates that the Cancel request succeeded and the token was cancelled.","pos":[0,194],"source":"If the RequestedTokenCancelled property is `true` then the response contains a wst:RequestedTokenCancelled element, which indicates that the Cancel request succeeded and the token was cancelled."},{"content":"If it is <ph id=\"ph1\">`false`</ph>, the element was not included in the response and the token was not cancelled.","pos":[195,290],"source":" If it is `false`, the element was not included in the response and the token was not cancelled."}]},{"pos":[13594,13756],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the token was cancelled; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the token was cancelled; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14478,14576],"content":"Gets or sets the security token reference when the requested token is not attached to the message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the security token reference when the requested token is not attached to the message.","pos":[0,98]}]},{"pos":[14588,14789],"content":"Represents the contents of the wst:RequestedUnattachedReference element. This optional element is specified to indicate how to reference the returned token when that token is not placed in the message.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Represents the contents of the wst:RequestedUnattachedReference element. This optional element is specified to indicate how to reference the returned token when that token is not placed in the message.","pos":[0,201],"nodes":[{"content":"Represents the contents of the wst:RequestedUnattachedReference element.","pos":[0,72]},{"content":"This optional element is specified to indicate how to reference the returned token when that token is not placed in the message.","pos":[73,201]}]}]},{"pos":[15018,15125],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the reference.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> that contains the reference."},{"pos":[15742,15790],"content":"Gets or sets the wst:Status element in the RSTR.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the wst:Status element in the RSTR.","pos":[0,48]}]},{"pos":[15977,16113],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Protocols.WSTrust.Status\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains status information for a WS-Trust Validation request.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Protocols.WSTrust.Status\"></xref> that contains status information for a WS-Trust Validation request."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  id: RequestSecurityTokenResponse\n  children:\n  - System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.#ctor\n  - System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.#ctor(System.IdentityModel.Protocols.WSTrust.WSTrustMessage)\n  - System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.IsFinal\n  - System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedAttachedReference\n  - System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedProofToken\n  - System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedSecurityToken\n  - System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedTokenCancelled\n  - System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedUnattachedReference\n  - System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.Status\n  langs:\n  - csharp\n  name: RequestSecurityTokenResponse\n  nameWithType: RequestSecurityTokenResponse\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  type: Class\n  summary: Represents the wst:RequestSecurityTokenResponse element, which is used to return a security token.\n  remarks: \"The wst:RequestSecurityTokenResponse element (message) contains the parameters and properties in the response sent by a security token service (STS) to a security token request (RST) made by a client. The response message (or element) is abbreviated as RSTR. The <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenRequest> class contains properties that represent the elements of the RSTR. An RSTR can form a response to a request that corresponds to any of the request bindings defined by WS-Trust; for example, the Issuance binding, the Renewal binding, the Validate binding, or the Cancel binding. Many of the properties in the RequestSecurityTokenResponse class correspond to elements that are present only in specific kinds of responses as defined by these bindings. Depending on the kind of response a particular RequestSecurityTokenResponse object represents or the parameters present in the specific response that it represents, some properties of the object may be `null`.  \\n  \\n Requests arrive at the STS in a message that contains a wst:RequestSecurityToken element (RST). This message is represented by the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> class.  \\n  \\n For more information about the element that this class represents, see the version of the WS-Trust specification that applies to your scenario.\"\n  syntax:\n    content: 'public class RequestSecurityTokenResponse : System.IdentityModel.Protocols.WSTrust.WSTrustMessage'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.OpenObject\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.OpenObject.Properties\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType\n  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  langs:\n  - csharp\n  name: RequestSecurityTokenResponse()\n  nameWithType: RequestSecurityTokenResponse.RequestSecurityTokenResponse()\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestSecurityTokenResponse()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> class.\n  remarks: This constructor is usually used by the receiver of an RSTR.\n  syntax:\n    content: public RequestSecurityTokenResponse ();\n    parameters: []\n  overload: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.#ctor(System.IdentityModel.Protocols.WSTrust.WSTrustMessage)\n  id: '#ctor(System.IdentityModel.Protocols.WSTrust.WSTrustMessage)'\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  langs:\n  - csharp\n  name: RequestSecurityTokenResponse(WSTrustMessage)\n  nameWithType: RequestSecurityTokenResponse.RequestSecurityTokenResponse(WSTrustMessage)\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestSecurityTokenResponse(WSTrustMessage)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\"></xref> class based on the specified request message (RST) .\n  remarks: \"This constructor is usually used by the sender of an RSTR. The following properties are set from the request message: <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context%2A>, <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType%2A>, <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits%2A> (if the key is symmetric), and <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A>.  \\n  \\n> [!NOTE]\\n>  When working in a Challenge/Response environment the RequestType is used within the wst:RequestSecurityTokenResponse context to establish processing rules on a response coming back for a given challenge.\"\n  syntax:\n    content: public RequestSecurityTokenResponse (System.IdentityModel.Protocols.WSTrust.WSTrustMessage message);\n    parameters:\n    - id: message\n      type: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.WSTrustMessage\"></xref> that represents the request (RST).\n  overload: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>message</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.IsFinal\n  id: IsFinal\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  langs:\n  - csharp\n  name: IsFinal\n  nameWithType: RequestSecurityTokenResponse.IsFinal\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.IsFinal\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the flag that determines if the RSTR is the final message and should be serialized as such.\n  remarks: This flag only has an effect when the version of WS-Trust provides rules for serializing the final RSTR in a message flow. For example, WS-Trust 1.3 requires the final RSTR to be enclosed within a wst:RequestSecurityTokenResponseCollection element.\n  syntax:\n    content: public bool IsFinal { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the RSTR is the final message; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.IsFinal*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedAttachedReference\n  id: RequestedAttachedReference\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  langs:\n  - csharp\n  name: RequestedAttachedReference\n  nameWithType: RequestSecurityTokenResponse.RequestedAttachedReference\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedAttachedReference\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the security token reference when the requested token is attached to the message.\n  remarks: Represents the contents of the wst:RequestedAttachedReference element. This optional element is specified to indicate how to reference the returned token when that token doesn't support references using URI fragments.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityKeyIdentifierClause RequestedAttachedReference { get; set; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> that contains the reference.\n  overload: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedAttachedReference*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedProofToken\n  id: RequestedProofToken\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  langs:\n  - csharp\n  name: RequestedProofToken\n  nameWithType: RequestSecurityTokenResponse.RequestedProofToken\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedProofToken\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the optional element used to return the proof of possession token.\n  remarks: Represents the contents of the wst:RequestedProofToken.\n  syntax:\n    content: public System.IdentityModel.Protocols.WSTrust.RequestedProofToken RequestedProofToken { get; set; }\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestedProofToken\"></xref> that represents the proof token.\n  overload: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedProofToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedSecurityToken\n  id: RequestedSecurityToken\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  langs:\n  - csharp\n  name: RequestedSecurityToken\n  nameWithType: RequestSecurityTokenResponse.RequestedSecurityToken\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedSecurityToken\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the optional element used to return the requested security token.\n  remarks: Represents the contents of the wst:RequestedSecurityToken element.\n  syntax:\n    content: public System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken RequestedSecurityToken { get; set; }\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken\"></xref> that represents the security token.\n  overload: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedSecurityToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedTokenCancelled\n  id: RequestedTokenCancelled\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  langs:\n  - csharp\n  name: RequestedTokenCancelled\n  nameWithType: RequestSecurityTokenResponse.RequestedTokenCancelled\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedTokenCancelled\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the wst:RequestedTokenCancelled element.\n  remarks: If the RequestedTokenCancelled property is `true` then the response contains a wst:RequestedTokenCancelled element, which indicates that the Cancel request succeeded and the token was cancelled. If it is `false`, the element was not included in the response and the token was not cancelled.\n  syntax:\n    content: public bool RequestedTokenCancelled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the token was cancelled; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedTokenCancelled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedUnattachedReference\n  id: RequestedUnattachedReference\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  langs:\n  - csharp\n  name: RequestedUnattachedReference\n  nameWithType: RequestSecurityTokenResponse.RequestedUnattachedReference\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedUnattachedReference\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the security token reference when the requested token is not attached to the message.\n  remarks: Represents the contents of the wst:RequestedUnattachedReference element. This optional element is specified to indicate how to reference the returned token when that token is not placed in the message.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityKeyIdentifierClause RequestedUnattachedReference { get; set; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> that contains the reference.\n  overload: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedUnattachedReference*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.Status\n  id: Status\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  langs:\n  - csharp\n  name: Status\n  nameWithType: RequestSecurityTokenResponse.Status\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.Status\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Protocols.WSTrust\n  summary: Gets or sets the wst:Status element in the RSTR.\n  syntax:\n    content: public System.IdentityModel.Protocols.WSTrust.Status Status { get; set; }\n    return:\n      type: System.IdentityModel.Protocols.WSTrust.Status\n      description: A <xref href=\"System.IdentityModel.Protocols.WSTrust.Status\"></xref> that contains status information for a WS-Trust Validation request.\n  overload: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.Status*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n  isExternal: false\n  name: System.IdentityModel.Protocols.WSTrust.WSTrustMessage\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.#ctor\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  isExternal: false\n  name: RequestSecurityTokenResponse()\n  nameWithType: RequestSecurityTokenResponse.RequestSecurityTokenResponse()\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestSecurityTokenResponse()\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.#ctor(System.IdentityModel.Protocols.WSTrust.WSTrustMessage)\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  isExternal: false\n  name: RequestSecurityTokenResponse(WSTrustMessage)\n  nameWithType: RequestSecurityTokenResponse.RequestSecurityTokenResponse(WSTrustMessage)\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestSecurityTokenResponse(WSTrustMessage)\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.IsFinal\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  isExternal: false\n  name: IsFinal\n  nameWithType: RequestSecurityTokenResponse.IsFinal\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.IsFinal\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedAttachedReference\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  isExternal: false\n  name: RequestedAttachedReference\n  nameWithType: RequestSecurityTokenResponse.RequestedAttachedReference\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedAttachedReference\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedProofToken\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  isExternal: false\n  name: RequestedProofToken\n  nameWithType: RequestSecurityTokenResponse.RequestedProofToken\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedProofToken\n- uid: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n  parent: System.IdentityModel.Protocols.WSTrust\n  isExternal: false\n  name: RequestedProofToken\n  nameWithType: RequestedProofToken\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestedProofToken\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedSecurityToken\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  isExternal: false\n  name: RequestedSecurityToken\n  nameWithType: RequestSecurityTokenResponse.RequestedSecurityToken\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedSecurityToken\n- uid: System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken\n  parent: System.IdentityModel.Protocols.WSTrust\n  isExternal: false\n  name: RequestedSecurityToken\n  nameWithType: RequestedSecurityToken\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedTokenCancelled\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  isExternal: false\n  name: RequestedTokenCancelled\n  nameWithType: RequestSecurityTokenResponse.RequestedTokenCancelled\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedTokenCancelled\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedUnattachedReference\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  isExternal: false\n  name: RequestedUnattachedReference\n  nameWithType: RequestSecurityTokenResponse.RequestedUnattachedReference\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedUnattachedReference\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.Status\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  isExternal: false\n  name: Status\n  nameWithType: RequestSecurityTokenResponse.Status\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.Status\n- uid: System.IdentityModel.Protocols.WSTrust.Status\n  parent: System.IdentityModel.Protocols.WSTrust\n  isExternal: false\n  name: Status\n  nameWithType: Status\n  fullName: System.IdentityModel.Protocols.WSTrust.Status\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.#ctor*\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  isExternal: false\n  name: RequestSecurityTokenResponse\n  nameWithType: RequestSecurityTokenResponse.RequestSecurityTokenResponse\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.IsFinal*\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  isExternal: false\n  name: IsFinal\n  nameWithType: RequestSecurityTokenResponse.IsFinal\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedAttachedReference*\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  isExternal: false\n  name: RequestedAttachedReference\n  nameWithType: RequestSecurityTokenResponse.RequestedAttachedReference\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedProofToken*\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  isExternal: false\n  name: RequestedProofToken\n  nameWithType: RequestSecurityTokenResponse.RequestedProofToken\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedSecurityToken*\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  isExternal: false\n  name: RequestedSecurityToken\n  nameWithType: RequestSecurityTokenResponse.RequestedSecurityToken\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedTokenCancelled*\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  isExternal: false\n  name: RequestedTokenCancelled\n  nameWithType: RequestSecurityTokenResponse.RequestedTokenCancelled\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.RequestedUnattachedReference*\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  isExternal: false\n  name: RequestedUnattachedReference\n  nameWithType: RequestSecurityTokenResponse.RequestedUnattachedReference\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.Status*\n  parent: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  isExternal: false\n  name: Status\n  nameWithType: RequestSecurityTokenResponse.Status\n"}