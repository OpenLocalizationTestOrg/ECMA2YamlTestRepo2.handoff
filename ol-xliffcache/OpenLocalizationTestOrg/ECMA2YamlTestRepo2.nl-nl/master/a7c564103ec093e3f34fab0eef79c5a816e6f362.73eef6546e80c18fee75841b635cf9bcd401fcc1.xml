{"nodes":[{"pos":[1454,1543],"content":"When implemented, this interface specifies a contract for a security context token cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented, this interface specifies a contract for a security context token cache.","pos":[0,89]}]},{"pos":[2376,2434],"content":"Adds a security context security token to the token cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a security context security token to the token cache.","pos":[0,58]}]},{"pos":[2683,2773],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"></xref>."},{"pos":[3425,3459],"content":"Clears the token cache of content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the token cache of content.","pos":[0,34]}]},{"pos":[4257,4348],"content":"Gets a collection of security context security token IDs that match a specified context ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of security context security token IDs that match a specified context ID.","pos":[0,91]}]},{"pos":[4622,4656],"content":"The specified security context ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified security context ID.","pos":[0,34]}]},{"pos":[4808,4919],"content":"A generic collection of <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>s.","needQuote":true,"needEscape":true,"source":"A generic collection of <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"></xref>s."},{"pos":[5693,5788],"content":"Gets the security context security token ID that matches a specified context ID and generation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the security context security token ID that matches a specified context ID and generation.","pos":[0,95]}]},{"pos":[6047,6081],"content":"The specified security context ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified security context ID.","pos":[0,34]}]},{"pos":[6154,6214],"content":"A <xref:System.Xml.UniqueId> that represents the generation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Xml.UniqueId&gt; that represents the generation.","pos":[0,60],"source":"A <xref:System.Xml.UniqueId> that represents the generation."}]},{"pos":[6323,6422],"content":"The matching <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The matching <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"></xref>."},{"pos":[7160,7224],"content":"Removes all tokens from the cache that match a given context ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all tokens from the cache that match a given context ID.","pos":[0,64]}]},{"pos":[7398,7432],"content":"The specified security context ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified security context ID.","pos":[0,34]}]},{"pos":[8224,8304],"content":"Removes the token from the cache that matches a given context ID and generation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the token from the cache that matches a given context ID and generation.","pos":[0,80]}]},{"pos":[8506,8540],"content":"The specified security context ID.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified security context ID.","pos":[0,34]}]},{"pos":[8613,8673],"content":"A <xref:System.Xml.UniqueId> that represents the generation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Xml.UniqueId&gt; that represents the generation.","pos":[0,60],"source":"A <xref:System.Xml.UniqueId> that represents the generation."}]},{"pos":[9544,9578],"content":"Tries to add a token to the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Tries to add a token to the cache.","pos":[0,34]}]},{"pos":[9830,9920],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"></xref>."},{"pos":[9979,10164],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the token was added successfully to the cache; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the token was added successfully to the cache; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10379,10462],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10557,10607],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> date or time is outside limits.","needQuote":true,"needEscape":true,"source":"<code>token</code> date or time is outside limits."},{"pos":[11477,11530],"content":"Updates the expiration date for a token in the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates the expiration date for a token in the cache.","pos":[0,53]}]},{"pos":[11822,11912],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"></xref>."},{"pos":[11985,12018],"content":"The new expiration time and date.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new expiration time and date.","pos":[0,33]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  id: ISecurityContextSecurityTokenCache\n  children:\n  - System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)\n  - System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts\n  - System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts(System.Xml.UniqueId)\n  - System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)\n  - System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts(System.Xml.UniqueId)\n  - System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)\n  - System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)\n  - System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)\n  langs:\n  - csharp\n  name: ISecurityContextSecurityTokenCache\n  nameWithType: ISecurityContextSecurityTokenCache\n  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  type: Interface\n  summary: When implemented, this interface specifies a contract for a security context token cache.\n  syntax:\n    content: public interface ISecurityContextSecurityTokenCache\n  implements: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)\n  id: AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  langs:\n  - csharp\n  name: AddContext(SecurityContextSecurityToken)\n  nameWithType: ISecurityContextSecurityTokenCache.AddContext(SecurityContextSecurityToken)\n  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext(SecurityContextSecurityToken)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Adds a security context security token to the token cache.\n  syntax:\n    content: public void AddContext (System.ServiceModel.Security.Tokens.SecurityContextSecurityToken token);\n    parameters:\n    - id: token\n      type: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\n      description: The <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"></xref>.\n  overload: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts\n  id: ClearContexts\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  langs:\n  - csharp\n  name: ClearContexts()\n  nameWithType: ISecurityContextSecurityTokenCache.ClearContexts()\n  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Clears the token cache of content.\n  syntax:\n    content: public void ClearContexts ();\n    parameters: []\n  overload: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts(System.Xml.UniqueId)\n  id: GetAllContexts(System.Xml.UniqueId)\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  langs:\n  - csharp\n  name: GetAllContexts(UniqueId)\n  nameWithType: ISecurityContextSecurityTokenCache.GetAllContexts(UniqueId)\n  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts(UniqueId)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets a collection of security context security token IDs that match a specified context ID.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Security.Tokens.SecurityContextSecurityToken> GetAllContexts (System.Xml.UniqueId contextId);\n    parameters:\n    - id: contextId\n      type: System.Xml.UniqueId\n      description: The specified security context ID.\n    return:\n      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.Tokens.SecurityContextSecurityToken}\n      description: A generic collection of <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"></xref>s.\n  overload: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)\n  id: GetContext(System.Xml.UniqueId,System.Xml.UniqueId)\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  langs:\n  - csharp\n  name: GetContext(UniqueId,UniqueId)\n  nameWithType: ISecurityContextSecurityTokenCache.GetContext(UniqueId,UniqueId)\n  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext(UniqueId,UniqueId)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets the security context security token ID that matches a specified context ID and generation.\n  syntax:\n    content: public System.ServiceModel.Security.Tokens.SecurityContextSecurityToken GetContext (System.Xml.UniqueId contextId, System.Xml.UniqueId generation);\n    parameters:\n    - id: contextId\n      type: System.Xml.UniqueId\n      description: The specified security context ID.\n    - id: generation\n      type: System.Xml.UniqueId\n      description: A <xref:System.Xml.UniqueId> that represents the generation.\n    return:\n      type: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\n      description: The matching <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"></xref>.\n  overload: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts(System.Xml.UniqueId)\n  id: RemoveAllContexts(System.Xml.UniqueId)\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  langs:\n  - csharp\n  name: RemoveAllContexts(UniqueId)\n  nameWithType: ISecurityContextSecurityTokenCache.RemoveAllContexts(UniqueId)\n  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts(UniqueId)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Removes all tokens from the cache that match a given context ID.\n  syntax:\n    content: public void RemoveAllContexts (System.Xml.UniqueId contextId);\n    parameters:\n    - id: contextId\n      type: System.Xml.UniqueId\n      description: The specified security context ID.\n  overload: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)\n  id: RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  langs:\n  - csharp\n  name: RemoveContext(UniqueId,UniqueId)\n  nameWithType: ISecurityContextSecurityTokenCache.RemoveContext(UniqueId,UniqueId)\n  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext(UniqueId,UniqueId)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Removes the token from the cache that matches a given context ID and generation.\n  syntax:\n    content: public void RemoveContext (System.Xml.UniqueId contextId, System.Xml.UniqueId generation);\n    parameters:\n    - id: contextId\n      type: System.Xml.UniqueId\n      description: The specified security context ID.\n    - id: generation\n      type: System.Xml.UniqueId\n      description: A <xref:System.Xml.UniqueId> that represents the generation.\n  overload: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)\n  id: TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  langs:\n  - csharp\n  name: TryAddContext(SecurityContextSecurityToken)\n  nameWithType: ISecurityContextSecurityTokenCache.TryAddContext(SecurityContextSecurityToken)\n  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext(SecurityContextSecurityToken)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Tries to add a token to the cache.\n  syntax:\n    content: public bool TryAddContext (System.ServiceModel.Security.Tokens.SecurityContextSecurityToken token);\n    parameters:\n    - id: token\n      type: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\n      description: The <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the token was added successfully to the cache; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>token</code> date or time is outside limits.\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)\n  id: UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  langs:\n  - csharp\n  name: UpdateContextCachingTime(SecurityContextSecurityToken,DateTime)\n  nameWithType: ISecurityContextSecurityTokenCache.UpdateContextCachingTime(SecurityContextSecurityToken,DateTime)\n  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime(SecurityContextSecurityToken,DateTime)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Updates the expiration date for a token in the cache.\n  syntax:\n    content: public void UpdateContextCachingTime (System.ServiceModel.Security.Tokens.SecurityContextSecurityToken context, DateTime expirationTime);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\n      description: The <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\"></xref>.\n    - id: expirationTime\n      type: System.DateTime\n      description: The new expiration time and date.\n  overload: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  isExternal: false\n  name: AddContext(SecurityContextSecurityToken)\n  nameWithType: ISecurityContextSecurityTokenCache.AddContext(SecurityContextSecurityToken)\n  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext(SecurityContextSecurityToken)\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\n  parent: System.ServiceModel.Security.Tokens\n  isExternal: false\n  name: SecurityContextSecurityToken\n  nameWithType: SecurityContextSecurityToken\n  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  isExternal: false\n  name: ClearContexts()\n  nameWithType: ISecurityContextSecurityTokenCache.ClearContexts()\n  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts()\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts(System.Xml.UniqueId)\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  isExternal: false\n  name: GetAllContexts(UniqueId)\n  nameWithType: ISecurityContextSecurityTokenCache.GetAllContexts(UniqueId)\n  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts(UniqueId)\n- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.Tokens.SecurityContextSecurityToken}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<SecurityContextSecurityToken>\n  nameWithType: Collection<SecurityContextSecurityToken>\n  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Security.Tokens.SecurityContextSecurityToken>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.ServiceModel.Security.Tokens.SecurityContextSecurityToken>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\n    name: SecurityContextSecurityToken\n    nameWithType: SecurityContextSecurityToken\n    fullName: SecurityContextSecurityToken\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.UniqueId\n  parent: System.Xml\n  isExternal: true\n  name: UniqueId\n  nameWithType: UniqueId\n  fullName: System.Xml.UniqueId\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  isExternal: false\n  name: GetContext(UniqueId,UniqueId)\n  nameWithType: ISecurityContextSecurityTokenCache.GetContext(UniqueId,UniqueId)\n  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext(UniqueId,UniqueId)\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts(System.Xml.UniqueId)\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  isExternal: false\n  name: RemoveAllContexts(UniqueId)\n  nameWithType: ISecurityContextSecurityTokenCache.RemoveAllContexts(UniqueId)\n  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts(UniqueId)\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  isExternal: false\n  name: RemoveContext(UniqueId,UniqueId)\n  nameWithType: ISecurityContextSecurityTokenCache.RemoveContext(UniqueId,UniqueId)\n  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext(UniqueId,UniqueId)\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  isExternal: false\n  name: TryAddContext(SecurityContextSecurityToken)\n  nameWithType: ISecurityContextSecurityTokenCache.TryAddContext(SecurityContextSecurityToken)\n  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext(SecurityContextSecurityToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  isExternal: false\n  name: UpdateContextCachingTime(SecurityContextSecurityToken,DateTime)\n  nameWithType: ISecurityContextSecurityTokenCache.UpdateContextCachingTime(SecurityContextSecurityToken,DateTime)\n  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime(SecurityContextSecurityToken,DateTime)\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext*\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  isExternal: false\n  name: AddContext\n  nameWithType: ISecurityContextSecurityTokenCache.AddContext\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts*\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  isExternal: false\n  name: ClearContexts\n  nameWithType: ISecurityContextSecurityTokenCache.ClearContexts\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts*\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  isExternal: false\n  name: GetAllContexts\n  nameWithType: ISecurityContextSecurityTokenCache.GetAllContexts\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext*\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  isExternal: false\n  name: GetContext\n  nameWithType: ISecurityContextSecurityTokenCache.GetContext\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts*\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  isExternal: false\n  name: RemoveAllContexts\n  nameWithType: ISecurityContextSecurityTokenCache.RemoveAllContexts\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext*\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  isExternal: false\n  name: RemoveContext\n  nameWithType: ISecurityContextSecurityTokenCache.RemoveContext\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext*\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  isExternal: false\n  name: TryAddContext\n  nameWithType: ISecurityContextSecurityTokenCache.TryAddContext\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime*\n  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  isExternal: false\n  name: UpdateContextCachingTime\n  nameWithType: ISecurityContextSecurityTokenCache.UpdateContextCachingTime\n"}