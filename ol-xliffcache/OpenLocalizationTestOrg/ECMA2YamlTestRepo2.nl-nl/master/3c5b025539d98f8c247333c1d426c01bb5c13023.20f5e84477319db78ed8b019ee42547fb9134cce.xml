{"nodes":[{"pos":[1245,1272],"content":"Contains policy assertions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains policy assertions.","pos":[0,27]}]},{"pos":[1285,1583],"content":"Use the PolicyAssertionCollection class to group together policy assertions and to enumerate or modify a group of assertions.       The PolicyAssertionCollection is used most frequently as a return value for the methods of the <xref:System.ServiceModel.Description.PolicyConversionContext> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the PolicyAssertionCollection class to group together policy assertions and to enumerate or modify a group of assertions.       The PolicyAssertionCollection is used most frequently as a return value for the methods of the <xref:System.ServiceModel.Description.PolicyConversionContext> class.","pos":[0,296],"nodes":[{"content":"Use the PolicyAssertionCollection class to group together policy assertions and to enumerate or modify a group of assertions.","pos":[0,125]},{"content":"The PolicyAssertionCollection is used most frequently as a return value for the methods of the &lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt; class.","pos":[132,296],"source":"       The PolicyAssertionCollection is used most frequently as a return value for the methods of the <xref:System.ServiceModel.Description.PolicyConversionContext> class."}]}]},{"pos":[2333,2452],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.PolicyAssertionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Description.PolicyAssertionCollection\"></xref> class."},{"pos":[3335,3525],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.PolicyAssertionCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified <bpt id=\"p2\">&lt;xref href=\"System.Xml.XmlElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Description.PolicyAssertionCollection\"></xref> class using the specified <xref href=\"System.Xml.XmlElement\"></xref> objects."},{"pos":[3784,3835],"content":"The policy assertions the collection is to contain.","needQuote":true,"needEscape":true,"nodes":[{"content":"The policy assertions the collection is to contain.","pos":[0,51]}]},{"pos":[4489,4583],"content":"Returns a value that indicates whether the collection contains the specified policy assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the collection contains the specified policy assertion.","pos":[0,94]}]},{"pos":[4750,4783],"content":"The name of the policy assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the policy assertion.","pos":[0,33]}]},{"pos":[4852,4890],"content":"The namespace of the policy assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace of the policy assertion.","pos":[0,38]}]},{"pos":[4949,5143],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the collection contains the specified policy assertion; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection contains the specified policy assertion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5780,5819],"content":"Returns the specified policy assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the specified policy assertion.","pos":[0,39]}]},{"pos":[5999,6038],"content":"The local name of the policy assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local name of the policy assertion.","pos":[0,39]}]},{"pos":[6107,6145],"content":"The namespace of the policy assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace of the policy assertion.","pos":[0,38]}]},{"pos":[6211,6340],"content":"The specified policy assertion, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the assertion cannot be found.","needQuote":true,"needEscape":true,"source":"The specified policy assertion, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the assertion cannot be found."},{"pos":[6988,7028],"content":"Returns all specified policy assertions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns all specified policy assertions.","pos":[0,40]}]},{"pos":[7254,7293],"content":"The local name of the policy assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local name of the policy assertion.","pos":[0,39]}]},{"pos":[7362,7400],"content":"The namespace of the policy assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace of the policy assertion.","pos":[0,38]}]},{"pos":[7509,7600],"content":"A collection of all policy assertions that match the specification, or an empty collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of all policy assertions that match the specification, or an empty collection.","pos":[0,91]}]},{"pos":[8289,8369],"content":"Inserts a specified policy assertion into the collection at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inserts a specified policy assertion into the collection at the specified index.","pos":[0,80]}]},{"pos":[8545,8581],"content":"The index at which to insert <ph id=\"ph1\">`item`</ph>.","needQuote":true,"needEscape":true,"source":"The index at which to insert `item`."},{"pos":[8650,8724],"content":"The policy assertion to insert at `index`. The assertion must not be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The policy assertion to insert at <ph id=\"ph1\">`index`</ph>.","pos":[0,42],"source":"The policy assertion to insert at `index`."},{"content":"The assertion must not be null.","pos":[43,74]}]},{"pos":[9373,9432],"content":"Removes the specified policy assertion from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the specified policy assertion from the collection.","pos":[0,59]}]},{"pos":[9614,9653],"content":"The local name of the policy assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local name of the policy assertion.","pos":[0,39]}]},{"pos":[9722,9760],"content":"The namespace of the policy assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace of the policy assertion.","pos":[0,38]}]},{"pos":[9826,9998],"content":"The policy assertion that was removed from the collection or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the policy assertion was not in the collection.","needQuote":true,"needEscape":true,"source":"The policy assertion that was removed from the collection or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the policy assertion was not in the collection."},{"pos":[10658,10732],"content":"Removes all policy assertions that match the specified name and namespace.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all policy assertions that match the specified name and namespace.","pos":[0,74]}]},{"pos":[10960,10999],"content":"The local name of the policy assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local name of the policy assertion.","pos":[0,39]}]},{"pos":[11068,11106],"content":"The namespace of the policy assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The namespace of the policy assertion.","pos":[0,38]}]},{"pos":[11215,11356],"content":"A collection of all removed policy assertions or an empty collection if no assertions were found that match the specified name and namespace.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of all removed policy assertions or an empty collection if no assertions were found that match the specified name and namespace.","pos":[0,141]}]},{"pos":[12032,12117],"content":"Replaces the policy assertion at a specified index with a specified policy assertion.","needQuote":true,"needEscape":true,"nodes":[{"content":"Replaces the policy assertion at a specified index with a specified policy assertion.","pos":[0,85]}]},{"pos":[12290,12339],"content":"The index that contains the assertion to replace.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index that contains the assertion to replace.","pos":[0,49]}]},{"pos":[12408,12505],"content":"The policy assertion to replace the assertion already at `index`. The assertion must not be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The policy assertion to replace the assertion already at <ph id=\"ph1\">`index`</ph>.","pos":[0,65],"source":"The policy assertion to replace the assertion already at `index`."},{"content":"The assertion must not be null.","pos":[66,97]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Description.PolicyAssertionCollection\n  id: PolicyAssertionCollection\n  children:\n  - System.ServiceModel.Description.PolicyAssertionCollection.#ctor\n  - System.ServiceModel.Description.PolicyAssertionCollection.#ctor(System.Collections.Generic.IEnumerable{System.Xml.XmlElement})\n  - System.ServiceModel.Description.PolicyAssertionCollection.Contains(System.String,System.String)\n  - System.ServiceModel.Description.PolicyAssertionCollection.Find(System.String,System.String)\n  - System.ServiceModel.Description.PolicyAssertionCollection.FindAll(System.String,System.String)\n  - System.ServiceModel.Description.PolicyAssertionCollection.InsertItem(System.Int32,System.Xml.XmlElement)\n  - System.ServiceModel.Description.PolicyAssertionCollection.Remove(System.String,System.String)\n  - System.ServiceModel.Description.PolicyAssertionCollection.RemoveAll(System.String,System.String)\n  - System.ServiceModel.Description.PolicyAssertionCollection.SetItem(System.Int32,System.Xml.XmlElement)\n  langs:\n  - csharp\n  name: PolicyAssertionCollection\n  nameWithType: PolicyAssertionCollection\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection\n  type: Class\n  summary: Contains policy assertions.\n  remarks: \"Use the PolicyAssertionCollection class to group together policy assertions and to enumerate or modify a group of assertions.  \\n  \\n The PolicyAssertionCollection is used most frequently as a return value for the methods of the <xref:System.ServiceModel.Description.PolicyConversionContext> class.\"\n  syntax:\n    content: 'public class PolicyAssertionCollection : System.Collections.ObjectModel.Collection<System.Xml.XmlElement>'\n  inheritance:\n  - System.Collections.ObjectModel.Collection`1\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  langs:\n  - csharp\n  name: PolicyAssertionCollection()\n  nameWithType: PolicyAssertionCollection.PolicyAssertionCollection()\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection.PolicyAssertionCollection()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Description.PolicyAssertionCollection\"></xref> class.\n  syntax:\n    content: public PolicyAssertionCollection ();\n    parameters: []\n  overload: System.ServiceModel.Description.PolicyAssertionCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.#ctor(System.Collections.Generic.IEnumerable{System.Xml.XmlElement})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Xml.XmlElement})'\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  langs:\n  - csharp\n  name: PolicyAssertionCollection(IEnumerable<XmlElement>)\n  nameWithType: PolicyAssertionCollection.PolicyAssertionCollection(IEnumerable<XmlElement>)\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection.PolicyAssertionCollection(IEnumerable<XmlElement>)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Description.PolicyAssertionCollection\"></xref> class using the specified <xref href=\"System.Xml.XmlElement\"></xref> objects.\n  syntax:\n    content: public PolicyAssertionCollection (System.Collections.Generic.IEnumerable<System.Xml.XmlElement> elements);\n    parameters:\n    - id: elements\n      type: System.Collections.Generic.IEnumerable{System.Xml.XmlElement}\n      description: The policy assertions the collection is to contain.\n  overload: System.ServiceModel.Description.PolicyAssertionCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.Contains(System.String,System.String)\n  id: Contains(System.String,System.String)\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  langs:\n  - csharp\n  name: Contains(String,String)\n  nameWithType: PolicyAssertionCollection.Contains(String,String)\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection.Contains(String,String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Returns a value that indicates whether the collection contains the specified policy assertion.\n  syntax:\n    content: public bool Contains (string localName, string namespaceUri);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The name of the policy assertion.\n    - id: namespaceUri\n      type: System.String\n      description: The namespace of the policy assertion.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection contains the specified policy assertion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Description.PolicyAssertionCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.Find(System.String,System.String)\n  id: Find(System.String,System.String)\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  langs:\n  - csharp\n  name: Find(String,String)\n  nameWithType: PolicyAssertionCollection.Find(String,String)\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection.Find(String,String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Returns the specified policy assertion.\n  syntax:\n    content: public System.Xml.XmlElement Find (string localName, string namespaceUri);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The local name of the policy assertion.\n    - id: namespaceUri\n      type: System.String\n      description: The namespace of the policy assertion.\n    return:\n      type: System.Xml.XmlElement\n      description: The specified policy assertion, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the assertion cannot be found.\n  overload: System.ServiceModel.Description.PolicyAssertionCollection.Find*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.FindAll(System.String,System.String)\n  id: FindAll(System.String,System.String)\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  langs:\n  - csharp\n  name: FindAll(String,String)\n  nameWithType: PolicyAssertionCollection.FindAll(String,String)\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection.FindAll(String,String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Returns all specified policy assertions.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Xml.XmlElement> FindAll (string localName, string namespaceUri);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The local name of the policy assertion.\n    - id: namespaceUri\n      type: System.String\n      description: The namespace of the policy assertion.\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Xml.XmlElement}\n      description: A collection of all policy assertions that match the specification, or an empty collection.\n  overload: System.ServiceModel.Description.PolicyAssertionCollection.FindAll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.InsertItem(System.Int32,System.Xml.XmlElement)\n  id: InsertItem(System.Int32,System.Xml.XmlElement)\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  langs:\n  - csharp\n  name: InsertItem(Int32,XmlElement)\n  nameWithType: PolicyAssertionCollection.InsertItem(Int32,XmlElement)\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection.InsertItem(Int32,XmlElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Inserts a specified policy assertion into the collection at the specified index.\n  syntax:\n    content: protected override void InsertItem (int index, System.Xml.XmlElement item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index at which to insert `item`.\n    - id: item\n      type: System.Xml.XmlElement\n      description: The policy assertion to insert at `index`. The assertion must not be null.\n  overload: System.ServiceModel.Description.PolicyAssertionCollection.InsertItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.Remove(System.String,System.String)\n  id: Remove(System.String,System.String)\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  langs:\n  - csharp\n  name: Remove(String,String)\n  nameWithType: PolicyAssertionCollection.Remove(String,String)\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection.Remove(String,String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Removes the specified policy assertion from the collection.\n  syntax:\n    content: public System.Xml.XmlElement Remove (string localName, string namespaceUri);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The local name of the policy assertion.\n    - id: namespaceUri\n      type: System.String\n      description: The namespace of the policy assertion.\n    return:\n      type: System.Xml.XmlElement\n      description: The policy assertion that was removed from the collection or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the policy assertion was not in the collection.\n  overload: System.ServiceModel.Description.PolicyAssertionCollection.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.RemoveAll(System.String,System.String)\n  id: RemoveAll(System.String,System.String)\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  langs:\n  - csharp\n  name: RemoveAll(String,String)\n  nameWithType: PolicyAssertionCollection.RemoveAll(String,String)\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection.RemoveAll(String,String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Removes all policy assertions that match the specified name and namespace.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Xml.XmlElement> RemoveAll (string localName, string namespaceUri);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The local name of the policy assertion.\n    - id: namespaceUri\n      type: System.String\n      description: The namespace of the policy assertion.\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Xml.XmlElement}\n      description: A collection of all removed policy assertions or an empty collection if no assertions were found that match the specified name and namespace.\n  overload: System.ServiceModel.Description.PolicyAssertionCollection.RemoveAll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.SetItem(System.Int32,System.Xml.XmlElement)\n  id: SetItem(System.Int32,System.Xml.XmlElement)\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  langs:\n  - csharp\n  name: SetItem(Int32,XmlElement)\n  nameWithType: PolicyAssertionCollection.SetItem(Int32,XmlElement)\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection.SetItem(Int32,XmlElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Replaces the policy assertion at a specified index with a specified policy assertion.\n  syntax:\n    content: protected override void SetItem (int index, System.Xml.XmlElement item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index that contains the assertion to replace.\n    - id: item\n      type: System.Xml.XmlElement\n      description: The policy assertion to replace the assertion already at `index`. The assertion must not be null.\n  overload: System.ServiceModel.Description.PolicyAssertionCollection.SetItem*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: System.Collections.ObjectModel.Collection<System.Xml.XmlElement>\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.#ctor\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  isExternal: false\n  name: PolicyAssertionCollection()\n  nameWithType: PolicyAssertionCollection.PolicyAssertionCollection()\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection.PolicyAssertionCollection()\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.#ctor(System.Collections.Generic.IEnumerable{System.Xml.XmlElement})\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  isExternal: false\n  name: PolicyAssertionCollection(IEnumerable<XmlElement>)\n  nameWithType: PolicyAssertionCollection.PolicyAssertionCollection(IEnumerable<XmlElement>)\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection.PolicyAssertionCollection(IEnumerable<XmlElement>)\n- uid: System.Collections.Generic.IEnumerable{System.Xml.XmlElement}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<XmlElement>\n  nameWithType: IEnumerable<XmlElement>\n  fullName: System.Collections.Generic.IEnumerable<System.Xml.XmlElement>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Xml.XmlElement>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.XmlElement\n    name: XmlElement\n    nameWithType: XmlElement\n    fullName: XmlElement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.Contains(System.String,System.String)\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  isExternal: false\n  name: Contains(String,String)\n  nameWithType: PolicyAssertionCollection.Contains(String,String)\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection.Contains(String,String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.Find(System.String,System.String)\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  isExternal: false\n  name: Find(String,String)\n  nameWithType: PolicyAssertionCollection.Find(String,String)\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection.Find(String,String)\n- uid: System.Xml.XmlElement\n  parent: System.Xml\n  isExternal: false\n  name: XmlElement\n  nameWithType: XmlElement\n  fullName: System.Xml.XmlElement\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.FindAll(System.String,System.String)\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  isExternal: false\n  name: FindAll(String,String)\n  nameWithType: PolicyAssertionCollection.FindAll(String,String)\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection.FindAll(String,String)\n- uid: System.Collections.ObjectModel.Collection{System.Xml.XmlElement}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<XmlElement>\n  nameWithType: Collection<XmlElement>\n  fullName: System.Collections.ObjectModel.Collection<System.Xml.XmlElement>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Xml.XmlElement>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.XmlElement\n    name: XmlElement\n    nameWithType: XmlElement\n    fullName: XmlElement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.InsertItem(System.Int32,System.Xml.XmlElement)\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  isExternal: false\n  name: InsertItem(Int32,XmlElement)\n  nameWithType: PolicyAssertionCollection.InsertItem(Int32,XmlElement)\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection.InsertItem(Int32,XmlElement)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.Remove(System.String,System.String)\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  isExternal: false\n  name: Remove(String,String)\n  nameWithType: PolicyAssertionCollection.Remove(String,String)\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection.Remove(String,String)\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.RemoveAll(System.String,System.String)\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  isExternal: false\n  name: RemoveAll(String,String)\n  nameWithType: PolicyAssertionCollection.RemoveAll(String,String)\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection.RemoveAll(String,String)\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.SetItem(System.Int32,System.Xml.XmlElement)\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  isExternal: false\n  name: SetItem(Int32,XmlElement)\n  nameWithType: PolicyAssertionCollection.SetItem(Int32,XmlElement)\n  fullName: System.ServiceModel.Description.PolicyAssertionCollection.SetItem(Int32,XmlElement)\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.#ctor*\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  isExternal: false\n  name: PolicyAssertionCollection\n  nameWithType: PolicyAssertionCollection.PolicyAssertionCollection\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.Contains*\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  isExternal: false\n  name: Contains\n  nameWithType: PolicyAssertionCollection.Contains\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.Find*\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  isExternal: false\n  name: Find\n  nameWithType: PolicyAssertionCollection.Find\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.FindAll*\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  isExternal: false\n  name: FindAll\n  nameWithType: PolicyAssertionCollection.FindAll\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.InsertItem*\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  isExternal: false\n  name: InsertItem\n  nameWithType: PolicyAssertionCollection.InsertItem\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.Remove*\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  isExternal: false\n  name: Remove\n  nameWithType: PolicyAssertionCollection.Remove\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.RemoveAll*\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  isExternal: false\n  name: RemoveAll\n  nameWithType: PolicyAssertionCollection.RemoveAll\n- uid: System.ServiceModel.Description.PolicyAssertionCollection.SetItem*\n  parent: System.ServiceModel.Description.PolicyAssertionCollection\n  isExternal: false\n  name: SetItem\n  nameWithType: PolicyAssertionCollection.SetItem\n"}