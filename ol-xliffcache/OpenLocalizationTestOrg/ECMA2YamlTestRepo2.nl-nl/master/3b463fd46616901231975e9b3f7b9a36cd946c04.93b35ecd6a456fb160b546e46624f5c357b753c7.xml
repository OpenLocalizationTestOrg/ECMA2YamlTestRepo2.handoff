{"nodes":[{"pos":[1078,1276],"content":"Represents a key identifier clause that identifies a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security token using the X.509 certificate's subject key identifier extension.","needQuote":true,"needEscape":true,"source":"Represents a key identifier clause that identifies a <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> security token using the X.509 certificate's subject key identifier extension."},{"pos":[1289,2724],"content":"Typically, the X509SubjectKeyIdentifierClause does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. Use the <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause> class to reference a <xref:System.IdentityModel.Tokens.X509SecurityToken> security token using the X.509 certificate's subject key identifier extension. The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier%2A> method returns the subject key identifier extension.       [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] supports the following types of security token references for <xref:System.IdentityModel.Tokens.X509SecurityToken> security tokens.      -   <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>      -   <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>      -   X509SubjectKeyIdentifierClause       <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Typically, the X509SubjectKeyIdentifierClause does not need to be used, other than when a custom security token service is created.","pos":[0,131]},{"content":"When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.","pos":[132,277]},{"content":"Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message.","pos":[278,500]},{"content":"These references typically affirm the authenticity of the issued security token.","pos":[501,581]},{"content":"Use the &lt;xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause&gt; class to reference a &lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt; security token using the X.509 certificate's subject key identifier extension.","pos":[582,811],"source":" Use the <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause> class to reference a <xref:System.IdentityModel.Tokens.X509SecurityToken> security token using the X.509 certificate's subject key identifier extension."},{"content":"The &lt;xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier%2A&gt; method returns the subject key identifier extension.","pos":[812,965],"source":" The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier%2A> method returns the subject key identifier extension."},{"content":"<ph id=\"ph1\">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> supports the following types of security token references for &lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt; security tokens.","pos":[972,1155],"source":"[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] supports the following types of security token references for <xref:System.IdentityModel.Tokens.X509SecurityToken> security tokens."},{"content":"-   &lt;xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause&gt;      -   &lt;xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&gt;      -   X509SubjectKeyIdentifierClause       &lt;xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause&gt;","pos":[1161,1425],"source":"      -   <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>      -   <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>      -   X509SubjectKeyIdentifierClause       <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>"}]},{"pos":[4491,4654],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified subject key identifier.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\"></xref> class using the specified subject key identifier."},{"pos":[4805,4877],"content":"An array of <xref:System.Byte> that contains the subject key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Byte&gt; that contains the subject key identifier.","pos":[0,72],"source":"An array of <xref:System.Byte> that contains the subject key identifier."}]},{"pos":[5072,5153],"content":"<ph id=\"ph1\">&lt;code&gt;ski&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>ski</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5822,5933],"content":"Gets a value that indicates whether a key identifier clause can be created for the specified X.509 certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether a key identifier clause can be created for the specified X.509 certificate.","pos":[0,111]}]},{"pos":[5945,6127],"content":"A key identifier clause can be created when the <ph id=\"ph1\">`certificate`</ph> parameter contains the &lt;xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension&gt; extension.","needQuote":true,"needEscape":true,"extradata":"MT","source":"A key identifier clause can be created when the `certificate` parameter contains the <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> extension."},{"pos":[6394,6517],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the X.509 certificate.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that contains the X.509 certificate."},{"pos":[6576,6783],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a key identifier clause can be created for <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">certificate</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a key identifier clause can be created for <code>certificate</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6986,7075],"content":"<ph id=\"ph1\">&lt;code&gt;certificate&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>certificate</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7638,7670],"content":"Gets the subject key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the subject key identifier.","pos":[0,32]}]},{"pos":[7816,7888],"content":"An array of <xref:System.Byte> that contains the subject key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of &lt;xref:System.Byte&gt; that contains the subject key identifier.","pos":[0,72],"source":"An array of <xref:System.Byte> that contains the subject key identifier."}]},{"pos":[8644,8791],"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the key identifier of the specified X.509 certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the key identifier of the specified X.509 certificate.","pos":[0,147]}]},{"pos":[8803,8963],"content":"The Matches method compares the <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> extension for the two X.509 certificates.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Matches method compares the &lt;xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension&gt; extension for the two X.509 certificates.","pos":[0,160],"source":"The Matches method compares the <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> extension for the two X.509 certificates."}]},{"pos":[9217,9351],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the X.509 certificate to compare.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that contains the X.509 certificate to compare."},{"pos":[9410,9634],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">certificate</ph><ept id=\"p2\">&lt;/code&gt;</ept> has the same subject key identifier as the current instance; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>certificate</code> has the same subject key identifier as the current instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9831,9920],"content":"<ph id=\"ph1\">&lt;code&gt;certificate&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>certificate</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10388,10440],"content":"Returns a string that represents the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string that represents the current object.","pos":[0,52]}]},{"pos":[10452,10507],"content":"The ToString method returns the subject key identifier.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ToString method returns the subject key identifier.","pos":[0,55]}]},{"pos":[10643,10701],"content":"A <xref:System.String> that represents the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that represents the current object.","pos":[0,58],"source":"A <xref:System.String> that represents the current object."}]},{"pos":[11681,11751],"content":"Creates a key identifier clause using the specified X.509 certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a key identifier clause using the specified X.509 certificate.","pos":[0,70]}]},{"pos":[11763,11936],"content":"A <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> key identifier clause can be created for the X.509 certificate when it contains a subject key identifier.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A &lt;xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&gt; key identifier clause can be created for the X.509 certificate when it contains a subject key identifier.","pos":[0,173],"source":"A <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> key identifier clause can be created for the X.509 certificate when it contains a subject key identifier."}]},{"pos":[12287,12414],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create the key identifier clause for.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> to create the key identifier clause for."},{"pos":[12535,12734],"content":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\"></xref> that represents the key identifier clause. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the key identifier clause.","pos":[0,159],"source":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\"></xref> that represents the key identifier clause."},{"content":"This parameter is passed uninitialized.","pos":[160,199]}]},{"pos":[12793,13009],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when a key identifier clause can be created for the specified X.509 certificate; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a key identifier clause can be created for the specified X.509 certificate; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13212,13301],"content":"<ph id=\"ph1\">&lt;code&gt;certificate&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>certificate</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  id: X509SubjectKeyIdentifierClause\n  children:\n  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])\n  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier\n  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString\n  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)\n  langs:\n  - csharp\n  name: X509SubjectKeyIdentifierClause\n  nameWithType: X509SubjectKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  type: Class\n  summary: Represents a key identifier clause that identifies a <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> security token using the X.509 certificate's subject key identifier extension.\n  remarks: \"Typically, the X509SubjectKeyIdentifierClause does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. Use the <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause> class to reference a <xref:System.IdentityModel.Tokens.X509SecurityToken> security token using the X.509 certificate's subject key identifier extension. The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier%2A> method returns the subject key identifier extension.  \\n  \\n [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] supports the following types of security token references for <xref:System.IdentityModel.Tokens.X509SecurityToken> security tokens.  \\n  \\n-   <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  \\n  \\n-   <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  \\n  \\n-   X509SubjectKeyIdentifierClause  \\n  \\n <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>\"\n  syntax:\n    content: 'public class X509SubjectKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  langs:\n  - csharp\n  name: X509SubjectKeyIdentifierClause(Byte[])\n  nameWithType: X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])\n  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\"></xref> class using the specified subject key identifier.\n  syntax:\n    content: public X509SubjectKeyIdentifierClause (byte[] ski);\n    parameters:\n    - id: ski\n      type: System.Byte[]\n      description: An array of <xref:System.Byte> that contains the subject key identifier.\n  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>ski</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  langs:\n  - csharp\n  name: CanCreateFrom(X509Certificate2)\n  nameWithType: X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)\n  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether a key identifier clause can be created for the specified X.509 certificate.\n  remarks: A key identifier clause can be created when the `certificate` parameter contains the <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> extension.\n  syntax:\n    content: public static bool CanCreateFrom (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that contains the X.509 certificate.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a key identifier clause can be created for <code>certificate</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>certificate</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier\n  id: GetX509SubjectKeyIdentifier\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  langs:\n  - csharp\n  name: GetX509SubjectKeyIdentifier()\n  nameWithType: X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()\n  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the subject key identifier.\n  syntax:\n    content: public byte[] GetX509SubjectKeyIdentifier ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: An array of <xref:System.Byte> that contains the subject key identifier.\n  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  langs:\n  - csharp\n  name: Matches(X509Certificate2)\n  nameWithType: X509SubjectKeyIdentifierClause.Matches(X509Certificate2)\n  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(X509Certificate2)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the key identifier for this instance is equivalent to the key identifier of the specified X.509 certificate.\n  remarks: The Matches method compares the <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> extension for the two X.509 certificates.\n  syntax:\n    content: public bool Matches (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that contains the X.509 certificate to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>certificate</code> has the same subject key identifier as the current instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>certificate</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString\n  id: ToString\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: X509SubjectKeyIdentifierClause.ToString()\n  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a string that represents the current object.\n  remarks: The ToString method returns the subject key identifier.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref:System.String> that represents the current object.\n  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)\n  id: TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  langs:\n  - csharp\n  name: TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)\n  nameWithType: X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Creates a key identifier clause using the specified X.509 certificate.\n  remarks: A <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> key identifier clause can be created for the X.509 certificate when it contains a subject key identifier.\n  syntax:\n    content: public static bool TryCreateFrom (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, out System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause keyIdentifierClause);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> to create the key identifier clause for.\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n      description: When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\"></xref> that represents the key identifier clause. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> when a key identifier clause can be created for the specified X.509 certificate; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>certificate</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: X509SubjectKeyIdentifierClause(Byte[])\n  nameWithType: X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])\n  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: CanCreateFrom(X509Certificate2)\n  nameWithType: X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)\n  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  nameWithType: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: GetX509SubjectKeyIdentifier()\n  nameWithType: X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()\n  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: Matches(X509Certificate2)\n  nameWithType: X509SubjectKeyIdentifierClause.Matches(X509Certificate2)\n  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(X509Certificate2)\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: ToString()\n  nameWithType: X509SubjectKeyIdentifierClause.ToString()\n  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)\n  nameWithType: X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: X509SubjectKeyIdentifierClause\n  nameWithType: X509SubjectKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor*\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: X509SubjectKeyIdentifierClause\n  nameWithType: X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom*\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: CanCreateFrom\n  nameWithType: X509SubjectKeyIdentifierClause.CanCreateFrom\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier*\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: GetX509SubjectKeyIdentifier\n  nameWithType: X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches*\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: Matches\n  nameWithType: X509SubjectKeyIdentifierClause.Matches\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString*\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: ToString\n  nameWithType: X509SubjectKeyIdentifierClause.ToString\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom*\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: TryCreateFrom\n  nameWithType: X509SubjectKeyIdentifierClause.TryCreateFrom\n"}