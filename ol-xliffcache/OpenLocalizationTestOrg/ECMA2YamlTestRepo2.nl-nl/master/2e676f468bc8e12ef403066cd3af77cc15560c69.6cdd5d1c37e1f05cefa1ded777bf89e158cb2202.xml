{"nodes":[{"pos":[1440,1568],"content":"Represents a collection of <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects for a <bpt id=\"p2\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Represents a collection of <xref href=\"System.Data.DataColumn\"></xref> objects for a <xref href=\"System.Data.DataTable\"></xref>."},{"pos":[1581,2395],"content":"The DataColumnCollection defines the schema of a <xref:System.Data.DataTable>, and determines what kind of data each <xref:System.Data.DataColumn> can contain. You can access the DataColumnCollection through the <xref:System.Data.DataTable.Columns%2A> property of the <xref:System.Data.DataTable> object.       The DataColumnCollection uses the <xref:System.Data.DataColumnCollection.Add%2A> and <xref:System.Data.DataColumnCollection.Remove%2A> methods to insert and delete <xref:System.Data.DataColumn> objects. Use the <xref:System.Data.InternalDataCollectionBase.Count%2A> property to determine how many <xref:System.Data.DataColumn> objects are in the collection. Use the <xref:System.Data.DataColumnCollection.Contains%2A> method to verify whether a specified index or column name exists in the collection.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The DataColumnCollection defines the schema of a <xref:System.Data.DataTable>, and determines what kind of data each <xref:System.Data.DataColumn> can contain. You can access the DataColumnCollection through the <xref:System.Data.DataTable.Columns%2A> property of the <xref:System.Data.DataTable> object.       The DataColumnCollection uses the <xref:System.Data.DataColumnCollection.Add%2A> and <xref:System.Data.DataColumnCollection.Remove%2A> methods to insert and delete <xref:System.Data.DataColumn> objects. Use the <xref:System.Data.InternalDataCollectionBase.Count%2A> property to determine how many <xref:System.Data.DataColumn> objects are in the collection. Use the <xref:System.Data.DataColumnCollection.Contains%2A> method to verify whether a specified index or column name exists in the collection.","pos":[0,812],"nodes":[{"content":"The DataColumnCollection defines the schema of a &lt;xref:System.Data.DataTable&gt;, and determines what kind of data each &lt;xref:System.Data.DataColumn&gt; can contain.","pos":[0,159],"source":"The DataColumnCollection defines the schema of a <xref:System.Data.DataTable>, and determines what kind of data each <xref:System.Data.DataColumn> can contain."},{"content":"You can access the DataColumnCollection through the &lt;xref:System.Data.DataTable.Columns%2A&gt; property of the &lt;xref:System.Data.DataTable&gt; object.","pos":[160,304],"source":" You can access the DataColumnCollection through the <xref:System.Data.DataTable.Columns%2A> property of the <xref:System.Data.DataTable> object."},{"content":"The DataColumnCollection uses the &lt;xref:System.Data.DataColumnCollection.Add%2A&gt; and &lt;xref:System.Data.DataColumnCollection.Remove%2A&gt; methods to insert and delete &lt;xref:System.Data.DataColumn&gt; objects.","pos":[311,513],"source":"       The DataColumnCollection uses the <xref:System.Data.DataColumnCollection.Add%2A> and <xref:System.Data.DataColumnCollection.Remove%2A> methods to insert and delete <xref:System.Data.DataColumn> objects."},{"content":"Use the &lt;xref:System.Data.InternalDataCollectionBase.Count%2A&gt; property to determine how many &lt;xref:System.Data.DataColumn&gt; objects are in the collection.","pos":[514,668],"source":" Use the <xref:System.Data.InternalDataCollectionBase.Count%2A> property to determine how many <xref:System.Data.DataColumn> objects are in the collection."},{"content":"Use the &lt;xref:System.Data.DataColumnCollection.Contains%2A&gt; method to verify whether a specified index or column name exists in the collection.","pos":[669,812],"source":" Use the <xref:System.Data.DataColumnCollection.Contains%2A> method to verify whether a specified index or column name exists in the collection."}]}]},{"pos":[4093,4224],"content":"Creates and adds a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the <bpt id=\"p2\">&lt;xref href=\"System.Data.DataColumnCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and adds a <xref href=\"System.Data.DataColumn\"></xref> object to the <xref href=\"System.Data.DataColumnCollection\"></xref>."},{"pos":[4237,4470],"content":"A default name (\"Column1\", \"Column2\", and so on) is given to the column.       If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A default name (\"Column1\", \"Column2\", and so on) is given to the column.       If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.","pos":[0,227],"nodes":[{"content":"A default name (\"Column1\", \"Column2\", and so on) is given to the column.","pos":[0,72]},{"content":"If the collection is successfully changed by adding or removing columns, the &lt;xref:System.Data.DataColumnCollection.CollectionChanged&gt; event occurs.","pos":[79,227],"source":"       If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs."}]}]},{"pos":[4927,4989],"content":"The newly created <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The newly created <xref href=\"System.Data.DataColumn\"></xref>."},{"pos":[5464,5607],"content":"Creates and adds the specified <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the <bpt id=\"p2\">&lt;xref href=\"System.Data.DataColumnCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and adds the specified <xref href=\"System.Data.DataColumn\"></xref> object to the <xref href=\"System.Data.DataColumnCollection\"></xref>."},{"pos":[5619,5767],"content":"If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the collection is successfully changed by adding or removing columns, the &lt;xref:System.Data.DataColumnCollection.CollectionChanged&gt; event occurs.","pos":[0,148],"source":"If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs."}]},{"pos":[6183,6238],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.DataColumn\"></xref> to add."},{"pos":[6405,6503],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">column</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>column</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6598,6670],"content":"The column already belongs to this collection, or to another collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The column already belongs to this collection, or to another collection.","pos":[0,72]}]},{"pos":[6785,6885],"content":"The collection already has a column with the specified name. (The comparison is not case-sensitive.)","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection already has a column with the specified name. (The comparison is not case-sensitive.)","pos":[0,100],"nodes":[{"content":"The collection already has a column with the specified name.","pos":[0,60]},{"content":"(The comparison is not case-sensitive.)","pos":[61,100]}]}]},{"pos":[7008,7147],"content":"The expression is invalid. See the <xref:System.Data.DataColumn.Expression*> property for more information about how to create expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression is invalid. See the <xref:System.Data.DataColumn.Expression*> property for more information about how to create expressions.","pos":[0,139],"nodes":[{"content":"The expression is invalid.","pos":[0,26]},{"content":"See the &lt;xref:System.Data.DataColumn.Expression*&gt; property for more information about how to create expressions.","pos":[27,139],"source":" See the <xref:System.Data.DataColumn.Expression*> property for more information about how to create expressions."}]}]},{"pos":[7525,7684],"content":"Creates and adds a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that has the specified name to the <bpt id=\"p2\">&lt;xref href=\"System.Data.DataColumnCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and adds a <xref href=\"System.Data.DataColumn\"></xref> object that has the specified name to the <xref href=\"System.Data.DataColumnCollection\"></xref>."},{"pos":[7697,8253],"content":"By default, the <xref:System.Data.DataColumn.DataType%2A> for the new column is `string`.       If `null` or an empty string (\"\") is passed in for the name, a default name (\"Column1\", \"Column2\", and so on) is given to the column.       Use the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a column with the proposed name already exists in the collection.       If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, the &lt;xref:System.Data.DataColumn.DataType%2A&gt; for the new column is <ph id=\"ph1\">`string`</ph>.","pos":[0,89],"source":"By default, the <xref:System.Data.DataColumn.DataType%2A> for the new column is `string`."},{"content":"If <ph id=\"ph1\">`null`</ph> or an empty string (\"\") is passed in for the name, a default name (\"Column1\", \"Column2\", and so on) is given to the column.","pos":[96,229],"source":"       If `null` or an empty string (\"\") is passed in for the name, a default name (\"Column1\", \"Column2\", and so on) is given to the column."},{"content":"Use the &lt;xref:System.Data.DataColumnCollection.Contains%2A&gt; method to determine whether a column with the proposed name already exists in the collection.","pos":[236,389],"source":"       Use the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a column with the proposed name already exists in the collection."},{"content":"If the collection is successfully changed by adding or removing columns, the &lt;xref:System.Data.DataColumnCollection.CollectionChanged&gt; event occurs.","pos":[396,544],"source":"       If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs."}]},{"pos":[8723,8746],"content":"The name of the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the column.","pos":[0,23]}]},{"pos":[8813,8875],"content":"The newly created <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The newly created <xref href=\"System.Data.DataColumn\"></xref>."},{"pos":[9054,9154],"content":"The collection already has a column with the specified name. (The comparison is not case-sensitive.)","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection already has a column with the specified name. (The comparison is not case-sensitive.)","pos":[0,100],"nodes":[{"content":"The collection already has a column with the specified name.","pos":[0,60]},{"content":"(The comparison is not case-sensitive.)","pos":[61,100]}]}]},{"pos":[9571,9739],"content":"Creates and adds a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that has the specified name and type to the <bpt id=\"p2\">&lt;xref href=\"System.Data.DataColumnCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and adds a <xref href=\"System.Data.DataColumn\"></xref> object that has the specified name and type to the <xref href=\"System.Data.DataColumnCollection\"></xref>."},{"pos":[9752,10210],"content":"If `null` or an empty string (\"\") is passed in for the name, a default name (\"Column1\", \"Column2\", and so on) is given to the column.       Use the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a column with the proposed name already exists in the collection.       If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If <ph id=\"ph1\">`null`</ph> or an empty string (\"\") is passed in for the name, a default name (\"Column1\", \"Column2\", and so on) is given to the column.","pos":[0,133],"source":"If `null` or an empty string (\"\") is passed in for the name, a default name (\"Column1\", \"Column2\", and so on) is given to the column."},{"content":"Use the &lt;xref:System.Data.DataColumnCollection.Contains%2A&gt; method to determine whether a column with the proposed name already exists in the collection.","pos":[140,293],"source":"       Use the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a column with the proposed name already exists in the collection."},{"content":"If the collection is successfully changed by adding or removing columns, the &lt;xref:System.Data.DataColumnCollection.CollectionChanged&gt; event occurs.","pos":[300,448],"source":"       If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs."}]},{"pos":[10690,10770],"content":"The <xref:System.Data.DataColumn.ColumnName*> to use when you create the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Data.DataColumn.ColumnName*&gt; to use when you create the column.","pos":[0,80],"source":"The <xref:System.Data.DataColumn.ColumnName*> to use when you create the column."}]},{"pos":[10829,10891],"content":"The <xref:System.Data.DataColumn.DataType*> of the new column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Data.DataColumn.DataType*&gt; of the new column.","pos":[0,62],"source":"The <xref:System.Data.DataColumn.DataType*> of the new column."}]},{"pos":[10958,11020],"content":"The newly created <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The newly created <xref href=\"System.Data.DataColumn\"></xref>."},{"pos":[11199,11299],"content":"The collection already has a column with the specified name. (The comparison is not case-sensitive.)","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection already has a column with the specified name. (The comparison is not case-sensitive.)","pos":[0,100],"nodes":[{"content":"The collection already has a column with the specified name.","pos":[0,60]},{"content":"(The comparison is not case-sensitive.)","pos":[61,100]}]}]},{"pos":[11422,11561],"content":"The expression is invalid. See the <xref:System.Data.DataColumn.Expression*> property for more information about how to create expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression is invalid. See the <xref:System.Data.DataColumn.Expression*> property for more information about how to create expressions.","pos":[0,139],"nodes":[{"content":"The expression is invalid.","pos":[0,26]},{"content":"See the &lt;xref:System.Data.DataColumn.Expression*&gt; property for more information about how to create expressions.","pos":[27,139],"source":" See the <xref:System.Data.DataColumn.Expression*> property for more information about how to create expressions."}]}]},{"pos":[12027,12208],"content":"Creates and adds a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that has the specified name, type, and expression to the <bpt id=\"p2\">&lt;xref href=\"System.Data.DataColumnCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and adds a <xref href=\"System.Data.DataColumn\"></xref> object that has the specified name, type, and expression to the <xref href=\"System.Data.DataColumnCollection\"></xref>."},{"pos":[12221,12679],"content":"If `null` or an empty string (\"\") is passed in for the name, a default name (\"Column1\", \"Column2\", and so on) is given to the column.       Use the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a column with the proposed name already exists in the collection.       If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If <ph id=\"ph1\">`null`</ph> or an empty string (\"\") is passed in for the name, a default name (\"Column1\", \"Column2\", and so on) is given to the column.","pos":[0,133],"source":"If `null` or an empty string (\"\") is passed in for the name, a default name (\"Column1\", \"Column2\", and so on) is given to the column."},{"content":"Use the &lt;xref:System.Data.DataColumnCollection.Contains%2A&gt; method to determine whether a column with the proposed name already exists in the collection.","pos":[140,293],"source":"       Use the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a column with the proposed name already exists in the collection."},{"content":"If the collection is successfully changed by adding or removing columns, the &lt;xref:System.Data.DataColumnCollection.CollectionChanged&gt; event occurs.","pos":[300,448],"source":"       If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs."}]},{"pos":[13178,13221],"content":"The name to use when you create the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name to use when you create the column.","pos":[0,43]}]},{"pos":[13280,13342],"content":"The <xref:System.Data.DataColumn.DataType*> of the new column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Data.DataColumn.DataType*&gt; of the new column.","pos":[0,62],"source":"The <xref:System.Data.DataColumn.DataType*> of the new column."}]},{"pos":[13409,13492],"content":"The expression to assign to the <xref:System.Data.DataColumn.Expression*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression to assign to the &lt;xref:System.Data.DataColumn.Expression*&gt; property.","pos":[0,83],"source":"The expression to assign to the <xref:System.Data.DataColumn.Expression*> property."}]},{"pos":[13559,13621],"content":"The newly created <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The newly created <xref href=\"System.Data.DataColumn\"></xref>."},{"pos":[13800,13900],"content":"The collection already has a column with the specified name. (The comparison is not case-sensitive.)","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection already has a column with the specified name. (The comparison is not case-sensitive.)","pos":[0,100],"nodes":[{"content":"The collection already has a column with the specified name.","pos":[0,60]},{"content":"(The comparison is not case-sensitive.)","pos":[61,100]}]}]},{"pos":[14023,14162],"content":"The expression is invalid. See the <xref:System.Data.DataColumn.Expression*> property for more information about how to create expressions.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression is invalid. See the <xref:System.Data.DataColumn.Expression*> property for more information about how to create expressions.","pos":[0,139],"nodes":[{"content":"The expression is invalid.","pos":[0,26]},{"content":"See the &lt;xref:System.Data.DataColumn.Expression*&gt; property for more information about how to create expressions.","pos":[27,139],"source":" See the <xref:System.Data.DataColumn.Expression*> property for more information about how to create expressions."}]}]},{"pos":[14605,14721],"content":"Copies the elements of the specified <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> array to the end of the collection.","needQuote":true,"needEscape":true,"source":"Copies the elements of the specified <xref href=\"System.Data.DataColumn\"></xref> array to the end of the collection."},{"pos":[14892,14982],"content":"The array of <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to add to the collection.","needQuote":true,"needEscape":true,"source":"The array of <xref href=\"System.Data.DataColumn\"></xref> objects to add to the collection."},{"pos":[15492,15560],"content":"Checks whether a specific column can be removed from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Checks whether a specific column can be removed from the collection.","pos":[0,68]}]},{"pos":[15573,16029],"content":"The CanRemove method performs several checks before returning a `true` or `false` result. This includes the following: whether the column exists, belongs to the table, or is involved in a constraint or relation.       Use the CanRemove method before you try to remove any column from a collection. You can also use the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column exists before you try to remove it.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CanRemove method performs several checks before returning a <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph> result.","pos":[0,89],"source":"The CanRemove method performs several checks before returning a `true` or `false` result."},{"content":"This includes the following: whether the column exists, belongs to the table, or is involved in a constraint or relation.","pos":[90,211]},{"content":"Use the CanRemove method before you try to remove any column from a collection.","pos":[218,297]},{"content":"You can also use the &lt;xref:System.Data.DataColumnCollection.Contains%2A&gt; method to determine whether a particular column exists before you try to remove it.","pos":[298,454],"source":" You can also use the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column exists before you try to remove it."}]},{"pos":[16817,16881],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the collection.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.DataColumn\"></xref> in the collection."},{"pos":[16941,17396],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the column can be removed. <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if,      -   The <code>column</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.      -   The column does not belong to this collection.      -   The column is part of a relationship.      -   Another column's expression depends on this column.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the column can be removed.","pos":[0,90],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the column can be removed."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if,      -   The <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">column</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[91,265],"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if,      -   The <code>column</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-   The column does not belong to this collection.","pos":[271,321]},{"content":"-   The column is part of a relationship.","pos":[327,368]},{"content":"-   Another column's expression depends on this column.","pos":[374,429]}]},{"pos":[17810,17847],"content":"Clears the collection of any columns.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the collection of any columns.","pos":[0,37]}]},{"pos":[17859,18007],"content":"If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the collection is successfully changed by adding or removing columns, the &lt;xref:System.Data.DataColumnCollection.CollectionChanged&gt; event occurs.","pos":[0,148],"source":"If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs."}]},{"pos":[18864,18946],"content":"Occurs when the columns collection changes, either by adding or removing a column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the columns collection changes, either by adding or removing a column.","pos":[0,82]}]},{"pos":[18958,19139],"content":"Use the <xref:System.Data.DataColumnCollection.Contains%2A> and <xref:System.Data.DataColumnCollection.CanRemove%2A> methods to determine whether a column exists and can be removed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the &lt;xref:System.Data.DataColumnCollection.Contains%2A&gt; and &lt;xref:System.Data.DataColumnCollection.CanRemove%2A&gt; methods to determine whether a column exists and can be removed.","pos":[0,181],"source":"Use the <xref:System.Data.DataColumnCollection.Contains%2A> and <xref:System.Data.DataColumnCollection.CanRemove%2A> methods to determine whether a column exists and can be removed."}]},{"pos":[19715,19727],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20147,20219],"content":"Checks whether the collection contains a column with the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Checks whether the collection contains a column with the specified name.","pos":[0,72]}]},{"pos":[20231,20547],"content":"Use the Contains method to confirm the existence of a column before you perform additional operations on the column. The method returns `false` when two or more columns have the same name but different namespaces. The call does not succeed if there is any ambiguity when matching a column name to exactly one column.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the Contains method to confirm the existence of a column before you perform additional operations on the column.","pos":[0,116]},{"content":"The method returns <ph id=\"ph1\">`false`</ph> when two or more columns have the same name but different namespaces.","pos":[117,213],"source":" The method returns `false` when two or more columns have the same name but different namespaces."},{"content":"The call does not succeed if there is any ambiguity when matching a column name to exactly one column.","pos":[214,316]}]},{"pos":[21160,21232],"content":"The <xref:System.Data.DataColumn.ColumnName*> of the column to look for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Data.DataColumn.ColumnName*&gt; of the column to look for.","pos":[0,72],"source":"The <xref:System.Data.DataColumn.ColumnName*> of the column to look for."}]},{"pos":[21291,21461],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a column exists with this name; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a column exists with this name; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22010,22110],"content":"Copies the entire collection into an existing array, starting at a specified index within the array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the entire collection into an existing array, starting at a specified index within the array.","pos":[0,100]}]},{"pos":[22286,22378],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to copy the collection into.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Data.DataColumn\"></xref> objects to copy the collection into."},{"pos":[22439,22463],"content":"The index to start from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index to start from.","pos":[0,24]}]},{"pos":[22961,23006],"content":"Gets the index of a column specified by name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the index of a column specified by name.","pos":[0,45]}]},{"pos":[23018,23059],"content":"The IndexOf method is not case-sensitive.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IndexOf method is not case-sensitive.","pos":[0,41]}]},{"pos":[23748,23781],"content":"The name of the column to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the column to return.","pos":[0,33]}]},{"pos":[23838,23925],"content":"The index of the column specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">column</ph><ept id=\"p1\">&lt;/code&gt;</ept> if it is found; otherwise, -1.","needQuote":true,"needEscape":true,"source":"The index of the column specified by <code>column</code> if it is found; otherwise, -1."},{"pos":[24394,24479],"content":"Gets the index of the column with the specific name (the name is not case sensitive).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the index of the column with the specific name (the name is not case sensitive).","pos":[0,85]}]},{"pos":[24625,24656],"content":"The name of the column to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the column to find.","pos":[0,31]}]},{"pos":[24713,24826],"content":"The zero-based index of the column with the specified name, or -1 if the column does not exist in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the column with the specified name, or -1 if the column does not exist in the collection.","pos":[0,113]}]},{"pos":[25277,25373],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the collection at the specified index.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.DataColumn\"></xref> from the collection at the specified index."},{"pos":[25385,25541],"content":"The <xref:System.Data.DataColumnCollection.Contains%2A> method can be used to test for the existence of a column. This is useful before you try to use Item.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Data.DataColumnCollection.Contains%2A> method can be used to test for the existence of a column. This is useful before you try to use Item.","pos":[0,156],"nodes":[{"content":"The &lt;xref:System.Data.DataColumnCollection.Contains%2A&gt; method can be used to test for the existence of a column.","pos":[0,113],"source":"The <xref:System.Data.DataColumnCollection.Contains%2A> method can be used to test for the existence of a column."},{"content":"This is useful before you try to use Item.","pos":[114,156]}]}]},{"pos":[26256,26301],"content":"The zero-based index of the column to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the column to return.","pos":[0,45]}]},{"pos":[26368,26439],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at the specified index.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.DataColumn\"></xref> at the specified index."},{"pos":[26613,26683],"content":"The index value is greater than the number of items in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index value is greater than the number of items in the collection.","pos":[0,70]}]},{"pos":[27068,27165],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the collection with the specified name.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.DataColumn\"></xref> from the collection with the specified name."},{"pos":[27177,27594],"content":"<xref:System.Data.DataColumnCollection.Item%2A> is conditionally case-sensitive when it searches for column names. For example, if one <xref:System.Data.DataColumn> is named \"mydatacolumn\" and another is named \"Mydatacolumn\", a string used to search for one of the columns is regarded as case-sensitive. However, if \"mydatacolumn\" exists and \"Mydatacolumn\" does not, the search string is regarded as case-insensitive.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"<xref:System.Data.DataColumnCollection.Item%2A> is conditionally case-sensitive when it searches for column names. For example, if one <xref:System.Data.DataColumn> is named \"mydatacolumn\" and another is named \"Mydatacolumn\", a string used to search for one of the columns is regarded as case-sensitive. However, if \"mydatacolumn\" exists and \"Mydatacolumn\" does not, the search string is regarded as case-insensitive.","pos":[0,417],"nodes":[{"content":"&lt;xref:System.Data.DataColumnCollection.Item%2A&gt; is conditionally case-sensitive when it searches for column names.","pos":[0,114],"source":"<xref:System.Data.DataColumnCollection.Item%2A> is conditionally case-sensitive when it searches for column names."},{"content":"For example, if one &lt;xref:System.Data.DataColumn&gt; is named \"mydatacolumn\" and another is named \"Mydatacolumn\", a string used to search for one of the columns is regarded as case-sensitive.","pos":[115,303],"source":" For example, if one <xref:System.Data.DataColumn> is named \"mydatacolumn\" and another is named \"Mydatacolumn\", a string used to search for one of the columns is regarded as case-sensitive."},{"content":"However, if \"mydatacolumn\" exists and \"Mydatacolumn\" does not, the search string is regarded as case-insensitive.","pos":[304,417]}]}]},{"pos":[28242,28312],"content":"The <xref:System.Data.DataColumn.ColumnName*> of the column to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Data.DataColumn.ColumnName*&gt; of the column to return.","pos":[0,70],"source":"The <xref:System.Data.DataColumn.ColumnName*> of the column to return."}]},{"pos":[28379,28596],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the collection with the specified &lt;xref:System.Data.DataColumn.ColumnName*&gt;; otherwise a null value if the <bpt id=\"p2\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> does not exist.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.DataColumn\"></xref> in the collection with the specified <xref:System.Data.DataColumn.ColumnName*>; otherwise a null value if the <xref href=\"System.Data.DataColumn\"></xref> does not exist."},{"pos":[29141,29153],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29644,29737],"content":"Removes the specified <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object from the collection.","needQuote":true,"needEscape":true,"source":"Removes the specified <xref href=\"System.Data.DataColumn\"></xref> object from the collection."},{"pos":[29749,29897],"content":"If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the collection is successfully changed by adding or removing columns, the &lt;xref:System.Data.DataColumnCollection.CollectionChanged&gt; event occurs.","pos":[0,148],"source":"If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs."}]},{"pos":[30712,30770],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remove.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.DataColumn\"></xref> to remove."},{"pos":[30940,31038],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">column</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>column</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[31134,31312],"content":"The column does not belong to this collection.       -Or-       The column is part of a relationship.       -Or-       Another column's expression depends on this column.","needQuote":false,"needEscape":true,"nodes":[{"content":"The column does not belong to this collection.       -Or-       The column is part of a relationship.       -Or-       Another column's expression depends on this column.","pos":[0,170],"nodes":[{"content":"The column does not belong to this collection.","pos":[0,46]},{"content":"-Or-       The column is part of a relationship.","pos":[53,101]},{"content":"-Or-       Another column's expression depends on this column.","pos":[108,170]}]}]},{"pos":[31706,31817],"content":"Removes the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that has the specified name from the collection.","needQuote":true,"needEscape":true,"source":"Removes the <xref href=\"System.Data.DataColumn\"></xref> object that has the specified name from the collection."},{"pos":[31829,31977],"content":"If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the collection is successfully changed by adding or removing columns, the &lt;xref:System.Data.DataColumnCollection.CollectionChanged&gt; event occurs.","pos":[0,148],"source":"If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs."}]},{"pos":[32777,32810],"content":"The name of the column to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the column to remove.","pos":[0,33]}]},{"pos":[32972,33034],"content":"The collection does not have a column with the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection does not have a column with the specified name.","pos":[0,62]}]},{"pos":[33432,33494],"content":"Removes the column at the specified index from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the column at the specified index from the collection.","pos":[0,62]}]},{"pos":[33506,33654],"content":"If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the collection is successfully changed by adding or removing columns, the &lt;xref:System.Data.DataColumnCollection.CollectionChanged&gt; event occurs.","pos":[0,148],"source":"If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs."}]},{"pos":[34285,34319],"content":"The index of the column to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the column to remove.","pos":[0,34]}]},{"pos":[34483,34544],"content":"The collection does not have a column at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection does not have a column at the specified index.","pos":[0,61]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.DataColumnCollection\n  id: DataColumnCollection\n  children:\n  - System.Data.DataColumnCollection.Add\n  - System.Data.DataColumnCollection.Add(System.Data.DataColumn)\n  - System.Data.DataColumnCollection.Add(System.String)\n  - System.Data.DataColumnCollection.Add(System.String,System.Type)\n  - System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)\n  - System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])\n  - System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)\n  - System.Data.DataColumnCollection.Clear\n  - System.Data.DataColumnCollection.CollectionChanged\n  - System.Data.DataColumnCollection.Contains(System.String)\n  - System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)\n  - System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)\n  - System.Data.DataColumnCollection.IndexOf(System.String)\n  - System.Data.DataColumnCollection.Item(System.Int32)\n  - System.Data.DataColumnCollection.Item(System.String)\n  - System.Data.DataColumnCollection.List\n  - System.Data.DataColumnCollection.Remove(System.Data.DataColumn)\n  - System.Data.DataColumnCollection.Remove(System.String)\n  - System.Data.DataColumnCollection.RemoveAt(System.Int32)\n  langs:\n  - csharp\n  name: DataColumnCollection\n  nameWithType: DataColumnCollection\n  fullName: System.Data.DataColumnCollection\n  type: Class\n  summary: Represents a collection of <xref href=\"System.Data.DataColumn\"></xref> objects for a <xref href=\"System.Data.DataTable\"></xref>.\n  remarks: \"The DataColumnCollection defines the schema of a <xref:System.Data.DataTable>, and determines what kind of data each <xref:System.Data.DataColumn> can contain. You can access the DataColumnCollection through the <xref:System.Data.DataTable.Columns%2A> property of the <xref:System.Data.DataTable> object.  \\n  \\n The DataColumnCollection uses the <xref:System.Data.DataColumnCollection.Add%2A> and <xref:System.Data.DataColumnCollection.Remove%2A> methods to insert and delete <xref:System.Data.DataColumn> objects. Use the <xref:System.Data.InternalDataCollectionBase.Count%2A> property to determine how many <xref:System.Data.DataColumn> objects are in the collection. Use the <xref:System.Data.DataColumnCollection.Contains%2A> method to verify whether a specified index or column name exists in the collection.\"\n  example:\n  - \"The following example iterates through a collection of <xref:System.Data.DataColumn> objects and prints various properties of each column in the collection.  \\n  \\n [!code-cs[Classic WebData DataColumnCollection Example#1](~/add/codesnippet/csharp/t-system.data.datacolumn_1.cs)]\\n [!code-vb[Classic WebData DataColumnCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.datacolumn_1.vb)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultEvent(\"CollectionChanged\")]\n\n      [System.ComponentModel.Editor(\"Microsoft.VSDesigner.Data.Design.ColumnsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\", \"System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      public sealed class DataColumnCollection : System.Data.InternalDataCollectionBase\n  inheritance:\n  - System.Object\n  - System.Data.InternalDataCollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)\n  - System.Data.InternalDataCollectionBase.Count\n  - System.Data.InternalDataCollectionBase.GetEnumerator\n  - System.Data.InternalDataCollectionBase.IsReadOnly\n  - System.Data.InternalDataCollectionBase.IsSynchronized\n  - System.Data.InternalDataCollectionBase.SyncRoot\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.Add\n  id: Add\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: Add()\n  nameWithType: DataColumnCollection.Add()\n  fullName: System.Data.DataColumnCollection.Add()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Creates and adds a <xref href=\"System.Data.DataColumn\"></xref> object to the <xref href=\"System.Data.DataColumnCollection\"></xref>.\n  remarks: \"A default name (\\\"Column1\\\", \\\"Column2\\\", and so on) is given to the column.  \\n  \\n If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.\"\n  example:\n  - \"The following example creates and adds a new <xref:System.Data.DataColumn> to the <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \\n  \\n [!code-vb[Classic WebData DataColumnCollection.Add5 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_9_1.vb)]\"\n  syntax:\n    content: public System.Data.DataColumn Add ();\n    parameters: []\n    return:\n      type: System.Data.DataColumn\n      description: The newly created <xref href=\"System.Data.DataColumn\"></xref>.\n  overload: System.Data.DataColumnCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.Add(System.Data.DataColumn)\n  id: Add(System.Data.DataColumn)\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: Add(DataColumn)\n  nameWithType: DataColumnCollection.Add(DataColumn)\n  fullName: System.Data.DataColumnCollection.Add(DataColumn)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Creates and adds the specified <xref href=\"System.Data.DataColumn\"></xref> object to the <xref href=\"System.Data.DataColumnCollection\"></xref>.\n  remarks: If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.\n  example:\n  - \"The following example adds a <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection>.  \\n  \\n [!code-vb[Classic WebData DataColumnCollection.Add Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_2_1.vb)]\"\n  syntax:\n    content: public void Add (System.Data.DataColumn column);\n    parameters:\n    - id: column\n      type: System.Data.DataColumn\n      description: The <xref href=\"System.Data.DataColumn\"></xref> to add.\n  overload: System.Data.DataColumnCollection.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>column</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The column already belongs to this collection, or to another collection.\n  - type: System.Data.DuplicateNameException\n    commentId: T:System.Data.DuplicateNameException\n    description: The collection already has a column with the specified name. (The comparison is not case-sensitive.)\n  - type: System.Data.InvalidExpressionException\n    commentId: T:System.Data.InvalidExpressionException\n    description: The expression is invalid. See the <xref:System.Data.DataColumn.Expression*> property for more information about how to create expressions.\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.Add(System.String)\n  id: Add(System.String)\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: Add(String)\n  nameWithType: DataColumnCollection.Add(String)\n  fullName: System.Data.DataColumnCollection.Add(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Creates and adds a <xref href=\"System.Data.DataColumn\"></xref> object that has the specified name to the <xref href=\"System.Data.DataColumnCollection\"></xref>.\n  remarks: \"By default, the <xref:System.Data.DataColumn.DataType%2A> for the new column is `string`.  \\n  \\n If `null` or an empty string (\\\"\\\") is passed in for the name, a default name (\\\"Column1\\\", \\\"Column2\\\", and so on) is given to the column.  \\n  \\n Use the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a column with the proposed name already exists in the collection.  \\n  \\n If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.\"\n  example:\n  - \"The following example creates and adds a new <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \\n  \\n [!code-vb[Classic WebData DataColumnCollection.Add4 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_11_1.vb)]\"\n  syntax:\n    content: public System.Data.DataColumn Add (string columnName);\n    parameters:\n    - id: columnName\n      type: System.String\n      description: The name of the column.\n    return:\n      type: System.Data.DataColumn\n      description: The newly created <xref href=\"System.Data.DataColumn\"></xref>.\n  overload: System.Data.DataColumnCollection.Add*\n  exceptions:\n  - type: System.Data.DuplicateNameException\n    commentId: T:System.Data.DuplicateNameException\n    description: The collection already has a column with the specified name. (The comparison is not case-sensitive.)\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.Add(System.String,System.Type)\n  id: Add(System.String,System.Type)\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: Add(String,Type)\n  nameWithType: DataColumnCollection.Add(String,Type)\n  fullName: System.Data.DataColumnCollection.Add(String,Type)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Creates and adds a <xref href=\"System.Data.DataColumn\"></xref> object that has the specified name and type to the <xref href=\"System.Data.DataColumnCollection\"></xref>.\n  remarks: \"If `null` or an empty string (\\\"\\\") is passed in for the name, a default name (\\\"Column1\\\", \\\"Column2\\\", and so on) is given to the column.  \\n  \\n Use the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a column with the proposed name already exists in the collection.  \\n  \\n If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.\"\n  example:\n  - \"The following example creates and adds a new <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \\n  \\n [!code-vb[Classic WebData DataColumnCollection.Add2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_7_1.vb)]\"\n  syntax:\n    content: public System.Data.DataColumn Add (string columnName, Type type);\n    parameters:\n    - id: columnName\n      type: System.String\n      description: The <xref:System.Data.DataColumn.ColumnName*> to use when you create the column.\n    - id: type\n      type: System.Type\n      description: The <xref:System.Data.DataColumn.DataType*> of the new column.\n    return:\n      type: System.Data.DataColumn\n      description: The newly created <xref href=\"System.Data.DataColumn\"></xref>.\n  overload: System.Data.DataColumnCollection.Add*\n  exceptions:\n  - type: System.Data.DuplicateNameException\n    commentId: T:System.Data.DuplicateNameException\n    description: The collection already has a column with the specified name. (The comparison is not case-sensitive.)\n  - type: System.Data.InvalidExpressionException\n    commentId: T:System.Data.InvalidExpressionException\n    description: The expression is invalid. See the <xref:System.Data.DataColumn.Expression*> property for more information about how to create expressions.\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)\n  id: Add(System.String,System.Type,System.String)\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: Add(String,Type,String)\n  nameWithType: DataColumnCollection.Add(String,Type,String)\n  fullName: System.Data.DataColumnCollection.Add(String,Type,String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Creates and adds a <xref href=\"System.Data.DataColumn\"></xref> object that has the specified name, type, and expression to the <xref href=\"System.Data.DataColumnCollection\"></xref>.\n  remarks: \"If `null` or an empty string (\\\"\\\") is passed in for the name, a default name (\\\"Column1\\\", \\\"Column2\\\", and so on) is given to the column.  \\n  \\n Use the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a column with the proposed name already exists in the collection.  \\n  \\n If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.\"\n  example:\n  - \"The following example creates and adds a new <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \\n  \\n [!code-vb[Classic WebData DataColumnCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_5_1.vb)]\"\n  syntax:\n    content: public System.Data.DataColumn Add (string columnName, Type type, string expression);\n    parameters:\n    - id: columnName\n      type: System.String\n      description: The name to use when you create the column.\n    - id: type\n      type: System.Type\n      description: The <xref:System.Data.DataColumn.DataType*> of the new column.\n    - id: expression\n      type: System.String\n      description: The expression to assign to the <xref:System.Data.DataColumn.Expression*> property.\n    return:\n      type: System.Data.DataColumn\n      description: The newly created <xref href=\"System.Data.DataColumn\"></xref>.\n  overload: System.Data.DataColumnCollection.Add*\n  exceptions:\n  - type: System.Data.DuplicateNameException\n    commentId: T:System.Data.DuplicateNameException\n    description: The collection already has a column with the specified name. (The comparison is not case-sensitive.)\n  - type: System.Data.InvalidExpressionException\n    commentId: T:System.Data.InvalidExpressionException\n    description: The expression is invalid. See the <xref:System.Data.DataColumn.Expression*> property for more information about how to create expressions.\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])\n  id: AddRange(System.Data.DataColumn[])\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: AddRange(DataColumn[])\n  nameWithType: DataColumnCollection.AddRange(DataColumn[])\n  fullName: System.Data.DataColumnCollection.AddRange(DataColumn[])\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Copies the elements of the specified <xref href=\"System.Data.DataColumn\"></xref> array to the end of the collection.\n  syntax:\n    content: public void AddRange (System.Data.DataColumn[] columns);\n    parameters:\n    - id: columns\n      type: System.Data.DataColumn[]\n      description: The array of <xref href=\"System.Data.DataColumn\"></xref> objects to add to the collection.\n  overload: System.Data.DataColumnCollection.AddRange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)\n  id: CanRemove(System.Data.DataColumn)\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: CanRemove(DataColumn)\n  nameWithType: DataColumnCollection.CanRemove(DataColumn)\n  fullName: System.Data.DataColumnCollection.CanRemove(DataColumn)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Checks whether a specific column can be removed from the collection.\n  remarks: \"The CanRemove method performs several checks before returning a `true` or `false` result. This includes the following: whether the column exists, belongs to the table, or is involved in a constraint or relation.  \\n  \\n Use the CanRemove method before you try to remove any column from a collection. You can also use the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column exists before you try to remove it.\"\n  example:\n  - \"The following example first uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column is found in the collection. If found, the CanRemove method tests whether the column can be removed. If so, the column is removed with the <xref:System.Data.DataColumnCollection.Remove%2A> method.  \\n  \\n [!code-vb[Classic WebData DataColumnCollection.CanRemove Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_16_1.vb)]\\n [!code-cs[Classic WebData DataColumnCollection.CanRemove Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_16_1.cs)]\"\n  syntax:\n    content: public bool CanRemove (System.Data.DataColumn column);\n    parameters:\n    - id: column\n      type: System.Data.DataColumn\n      description: A <xref href=\"System.Data.DataColumn\"></xref> in the collection.\n    return:\n      type: System.Boolean\n      description: \"<xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> if the column can be removed. <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref> if,  \\n  \\n-   The <code>column</code> parameter is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n-   The column does not belong to this collection.  \\n  \\n-   The column is part of a relationship.  \\n  \\n-   Another column's expression depends on this column.\"\n  overload: System.Data.DataColumnCollection.CanRemove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.Clear\n  id: Clear\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: DataColumnCollection.Clear()\n  fullName: System.Data.DataColumnCollection.Clear()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Clears the collection of any columns.\n  remarks: If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.\n  example:\n  - \"The following example clears the columns collection.  \\n  \\n [!code-cs[Classic WebData DataColumnCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_0_1.cs)]\\n [!code-vb[Classic WebData DataColumnCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_0_1.vb)]\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Data.DataColumnCollection.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.CollectionChanged\n  id: CollectionChanged\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: CollectionChanged\n  nameWithType: DataColumnCollection.CollectionChanged\n  fullName: System.Data.DataColumnCollection.CollectionChanged\n  type: Event\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Occurs when the columns collection changes, either by adding or removing a column.\n  remarks: Use the <xref:System.Data.DataColumnCollection.Contains%2A> and <xref:System.Data.DataColumnCollection.CanRemove%2A> methods to determine whether a column exists and can be removed.\n  example:\n  - \"The following example adds an event handler for the CollectionChanged event.  \\n  \\n [!code-cs[Classic WebData DataColumnCollection.CollectionChanged Example#1](~/add/codesnippet/csharp/e-system.data.datacolumn_1.cs)]\\n [!code-vb[Classic WebData DataColumnCollection.CollectionChanged Example#1](~/add/codesnippet/visualbasic/e-system.data.datacolumn_1.vb)]\"\n  syntax:\n    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;\n    return:\n      type: System.ComponentModel.CollectionChangeEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.Contains(System.String)\n  id: Contains(System.String)\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: Contains(String)\n  nameWithType: DataColumnCollection.Contains(String)\n  fullName: System.Data.DataColumnCollection.Contains(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Checks whether the collection contains a column with the specified name.\n  remarks: Use the Contains method to confirm the existence of a column before you perform additional operations on the column. The method returns `false` when two or more columns have the same name but different namespaces. The call does not succeed if there is any ambiguity when matching a column name to exactly one column.\n  example:\n  - \"The following example uses the Contains method and the <xref:System.Data.DataColumnCollection.CanRemove%2A> method to determine whether the column can be removed. If so, the column is removed.  \\n  \\n [!code-vb[Classic WebData DataColumnCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_3_1.vb)]\\n [!code-cs[Classic WebData DataColumnCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_3_1.cs)]\"\n  syntax:\n    content: public bool Contains (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref:System.Data.DataColumn.ColumnName*> of the column to look for.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a column exists with this name; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.DataColumnCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)\n  id: CopyTo(System.Data.DataColumn[],System.Int32)\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: CopyTo(DataColumn[],Int32)\n  nameWithType: DataColumnCollection.CopyTo(DataColumn[],Int32)\n  fullName: System.Data.DataColumnCollection.CopyTo(DataColumn[],Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Copies the entire collection into an existing array, starting at a specified index within the array.\n  syntax:\n    content: public void CopyTo (System.Data.DataColumn[] array, int index);\n    parameters:\n    - id: array\n      type: System.Data.DataColumn[]\n      description: An array of <xref href=\"System.Data.DataColumn\"></xref> objects to copy the collection into.\n    - id: index\n      type: System.Int32\n      description: The index to start from.\n  overload: System.Data.DataColumnCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)\n  id: IndexOf(System.Data.DataColumn)\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: IndexOf(DataColumn)\n  nameWithType: DataColumnCollection.IndexOf(DataColumn)\n  fullName: System.Data.DataColumnCollection.IndexOf(DataColumn)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the index of a column specified by name.\n  remarks: The IndexOf method is not case-sensitive.\n  example:\n  - \"The following example uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a specified column exists in a <xref:System.Data.DataColumnCollection>. If so, the IndexOf method returns the index of the column.  \\n  \\n [!code-vb[Classic WebData DataColumnCollection.IndexOf Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_14_1.vb)]\\n [!code-cs[Classic WebData DataColumnCollection.IndexOf Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_14_1.cs)]\"\n  syntax:\n    content: public int IndexOf (System.Data.DataColumn column);\n    parameters:\n    - id: column\n      type: System.Data.DataColumn\n      description: The name of the column to return.\n    return:\n      type: System.Int32\n      description: The index of the column specified by <code>column</code> if it is found; otherwise, -1.\n  overload: System.Data.DataColumnCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.IndexOf(System.String)\n  id: IndexOf(System.String)\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: IndexOf(String)\n  nameWithType: DataColumnCollection.IndexOf(String)\n  fullName: System.Data.DataColumnCollection.IndexOf(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the index of the column with the specific name (the name is not case sensitive).\n  syntax:\n    content: public int IndexOf (string columnName);\n    parameters:\n    - id: columnName\n      type: System.String\n      description: The name of the column to find.\n    return:\n      type: System.Int32\n      description: The zero-based index of the column with the specified name, or -1 if the column does not exist in the collection.\n  overload: System.Data.DataColumnCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: DataColumnCollection.Item(Int32)\n  fullName: System.Data.DataColumnCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the <xref href=\"System.Data.DataColumn\"></xref> from the collection at the specified index.\n  remarks: The <xref:System.Data.DataColumnCollection.Contains%2A> method can be used to test for the existence of a column. This is useful before you try to use Item.\n  example:\n  - \"The following example uses the Item property to print the <xref:System.Data.DataColumn.ColumnName%2A> value of a <xref:System.Data.DataColumn> object specified by index. The example uses the <xref:System.Data.DataTable> that is contained by a System.Windows.Forms.DataGrid control.  \\n  \\n [!code-cs[Classic WebData DataColumnCollection.this Example#1](~/add/codesnippet/csharp/p-system.data.datacolumn_11_1.cs)]\\n [!code-vb[Classic WebData DataColumnCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datacolumn_11_1.vb)]\"\n  syntax:\n    content: public System.Data.DataColumn this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the column to return.\n    return:\n      type: System.Data.DataColumn\n      description: The <xref href=\"System.Data.DataColumn\"></xref> at the specified index.\n  overload: System.Data.DataColumnCollection.Item*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: The index value is greater than the number of items in the collection.\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: DataColumnCollection.Item(String)\n  fullName: System.Data.DataColumnCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Gets the <xref href=\"System.Data.DataColumn\"></xref> from the collection with the specified name.\n  remarks: <xref:System.Data.DataColumnCollection.Item%2A> is conditionally case-sensitive when it searches for column names. For example, if one <xref:System.Data.DataColumn> is named \"mydatacolumn\" and another is named \"Mydatacolumn\", a string used to search for one of the columns is regarded as case-sensitive. However, if \"mydatacolumn\" exists and \"Mydatacolumn\" does not, the search string is regarded as case-insensitive.\n  example:\n  - \"The following example uses the <xref:System.Data.DataColumnCollection.Item%2A> property to print the <xref:System.Data.DataColumn.DataType%2A> value of a <xref:System.Data.DataColumn> object specified by index.  \\n  \\n [!code-vb[Classic WebData DataColumnCollection.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.datacolumn_14_1.vb)]\\n [!code-cs[Classic WebData DataColumnCollection.this1 Example#1](~/add/codesnippet/csharp/p-system.data.datacolumn_14_1.cs)]\"\n  syntax:\n    content: public System.Data.DataColumn this[string name] { get; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref:System.Data.DataColumn.ColumnName*> of the column to return.\n    return:\n      type: System.Data.DataColumn\n      description: The <xref href=\"System.Data.DataColumn\"></xref> in the collection with the specified <xref:System.Data.DataColumn.ColumnName*>; otherwise a null value if the <xref href=\"System.Data.DataColumn\"></xref> does not exist.\n  overload: System.Data.DataColumnCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.List\n  id: List\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: List\n  nameWithType: DataColumnCollection.List\n  fullName: System.Data.DataColumnCollection.List\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  syntax:\n    content: protected override System.Collections.ArrayList List { get; }\n    return:\n      type: System.Collections.ArrayList\n      description: To be added.\n  overload: System.Data.DataColumnCollection.List*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.Remove(System.Data.DataColumn)\n  id: Remove(System.Data.DataColumn)\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: Remove(DataColumn)\n  nameWithType: DataColumnCollection.Remove(DataColumn)\n  fullName: System.Data.DataColumnCollection.Remove(DataColumn)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Removes the specified <xref href=\"System.Data.DataColumn\"></xref> object from the collection.\n  remarks: If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.\n  example:\n  - \"The following example uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a named column exists. If so, the <xref:System.Data.DataColumnCollection.Item%2A> property returns the column. The <xref:System.Data.DataColumnCollection.CanRemove%2A> method then checks whether the column can be removed; if so, the Remove method removes it.  \\n  \\n [!code-cs[Classic WebData DataColumnCollection.Remove Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_10_1.cs)]\\n [!code-vb[Classic WebData DataColumnCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_10_1.vb)]\"\n  syntax:\n    content: public void Remove (System.Data.DataColumn column);\n    parameters:\n    - id: column\n      type: System.Data.DataColumn\n      description: The <xref href=\"System.Data.DataColumn\"></xref> to remove.\n  overload: System.Data.DataColumnCollection.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>column</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The column does not belong to this collection.  \\n  \\n -Or-  \\n  \\n The column is part of a relationship.  \\n  \\n -Or-  \\n  \\n Another column's expression depends on this column.\"\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: DataColumnCollection.Remove(String)\n  fullName: System.Data.DataColumnCollection.Remove(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Removes the <xref href=\"System.Data.DataColumn\"></xref> object that has the specified name from the collection.\n  remarks: If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.\n  example:\n  - \"The following example first uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column is found in the collection. If it is found, the <xref:System.Data.DataColumnCollection.CanRemove%2A> method tests whether the column can be removed. If so, the column is removed with the <xref:System.Data.DataColumnCollection.Remove%2A> method.  \\n  \\n [!code-cs[Classic WebData DataColumnCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_12_1.cs)]\\n [!code-vb[Classic WebData DataColumnCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_12_1.vb)]\"\n  syntax:\n    content: public void Remove (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the column to remove.\n  overload: System.Data.DataColumnCollection.Remove*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The collection does not have a column with the specified name.\n  platform:\n  - net462\n- uid: System.Data.DataColumnCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Data.DataColumnCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: DataColumnCollection.RemoveAt(Int32)\n  fullName: System.Data.DataColumnCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Removes the column at the specified index from the collection.\n  remarks: If the collection is successfully changed by adding or removing columns, the <xref:System.Data.DataColumnCollection.CollectionChanged> event occurs.\n  example:\n  - \"The following example first uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column is found in the collection. If it is found, the <xref:System.Data.DataColumnCollection.CanRemove%2A> method tests whether the column can be removed. If so, the column is removed with the RemoveAt method.  \\n  \\n [!code-vb[Classic WebData DataColumnCollection.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_4_1.vb)]\"\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the column to remove.\n  overload: System.Data.DataColumnCollection.RemoveAt*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The collection does not have a column at the specified index.\n  platform:\n  - net462\nreferences:\n- uid: System.Data.InternalDataCollectionBase\n  isExternal: false\n  name: System.Data.InternalDataCollectionBase\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Data.DuplicateNameException\n  parent: System.Data\n  isExternal: false\n  name: DuplicateNameException\n  nameWithType: DuplicateNameException\n  fullName: System.Data.DuplicateNameException\n- uid: System.Data.InvalidExpressionException\n  parent: System.Data\n  isExternal: false\n  name: InvalidExpressionException\n  nameWithType: InvalidExpressionException\n  fullName: System.Data.InvalidExpressionException\n- uid: System.IndexOutOfRangeException\n  isExternal: true\n  name: System.IndexOutOfRangeException\n- uid: System.Data.DataColumnCollection.Add\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: Add()\n  nameWithType: DataColumnCollection.Add()\n  fullName: System.Data.DataColumnCollection.Add()\n- uid: System.Data.DataColumn\n  parent: System.Data\n  isExternal: false\n  name: DataColumn\n  nameWithType: DataColumn\n  fullName: System.Data.DataColumn\n- uid: System.Data.DataColumnCollection.Add(System.Data.DataColumn)\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: Add(DataColumn)\n  nameWithType: DataColumnCollection.Add(DataColumn)\n  fullName: System.Data.DataColumnCollection.Add(DataColumn)\n- uid: System.Data.DataColumnCollection.Add(System.String)\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: Add(String)\n  nameWithType: DataColumnCollection.Add(String)\n  fullName: System.Data.DataColumnCollection.Add(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.DataColumnCollection.Add(System.String,System.Type)\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: Add(String,Type)\n  nameWithType: DataColumnCollection.Add(String,Type)\n  fullName: System.Data.DataColumnCollection.Add(String,Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: Add(String,Type,String)\n  nameWithType: DataColumnCollection.Add(String,Type,String)\n  fullName: System.Data.DataColumnCollection.Add(String,Type,String)\n- uid: System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: AddRange(DataColumn[])\n  nameWithType: DataColumnCollection.AddRange(DataColumn[])\n  fullName: System.Data.DataColumnCollection.AddRange(DataColumn[])\n- uid: System.Data.DataColumn[]\n  parent: System.Data\n  isExternal: false\n  name: DataColumn\n  nameWithType: DataColumn\n  fullName: System.Data.DataColumn[]\n  spec.csharp:\n  - uid: System.Data.DataColumn\n    name: DataColumn\n    nameWithType: DataColumn\n    fullName: DataColumn[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: CanRemove(DataColumn)\n  nameWithType: DataColumnCollection.CanRemove(DataColumn)\n  fullName: System.Data.DataColumnCollection.CanRemove(DataColumn)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.DataColumnCollection.Clear\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: DataColumnCollection.Clear()\n  fullName: System.Data.DataColumnCollection.Clear()\n- uid: System.Data.DataColumnCollection.CollectionChanged\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: CollectionChanged\n  nameWithType: DataColumnCollection.CollectionChanged\n  fullName: System.Data.DataColumnCollection.CollectionChanged\n- uid: System.ComponentModel.CollectionChangeEventHandler\n  parent: System.ComponentModel\n  isExternal: false\n  name: CollectionChangeEventHandler\n  nameWithType: CollectionChangeEventHandler\n  fullName: System.ComponentModel.CollectionChangeEventHandler\n- uid: System.Data.DataColumnCollection.Contains(System.String)\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: Contains(String)\n  nameWithType: DataColumnCollection.Contains(String)\n  fullName: System.Data.DataColumnCollection.Contains(String)\n- uid: System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: CopyTo(DataColumn[],Int32)\n  nameWithType: DataColumnCollection.CopyTo(DataColumn[],Int32)\n  fullName: System.Data.DataColumnCollection.CopyTo(DataColumn[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: IndexOf(DataColumn)\n  nameWithType: DataColumnCollection.IndexOf(DataColumn)\n  fullName: System.Data.DataColumnCollection.IndexOf(DataColumn)\n- uid: System.Data.DataColumnCollection.IndexOf(System.String)\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: IndexOf(String)\n  nameWithType: DataColumnCollection.IndexOf(String)\n  fullName: System.Data.DataColumnCollection.IndexOf(String)\n- uid: System.Data.DataColumnCollection.Item(System.Int32)\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: DataColumnCollection.Item(Int32)\n  fullName: System.Data.DataColumnCollection.Item(Int32)\n- uid: System.Data.DataColumnCollection.Item(System.String)\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: DataColumnCollection.Item(String)\n  fullName: System.Data.DataColumnCollection.Item(String)\n- uid: System.Data.DataColumnCollection.List\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: List\n  nameWithType: DataColumnCollection.List\n  fullName: System.Data.DataColumnCollection.List\n- uid: System.Collections.ArrayList\n  parent: System.Collections\n  isExternal: false\n  name: ArrayList\n  nameWithType: ArrayList\n  fullName: System.Collections.ArrayList\n- uid: System.Data.DataColumnCollection.Remove(System.Data.DataColumn)\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: Remove(DataColumn)\n  nameWithType: DataColumnCollection.Remove(DataColumn)\n  fullName: System.Data.DataColumnCollection.Remove(DataColumn)\n- uid: System.Data.DataColumnCollection.Remove(System.String)\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: Remove(String)\n  nameWithType: DataColumnCollection.Remove(String)\n  fullName: System.Data.DataColumnCollection.Remove(String)\n- uid: System.Data.DataColumnCollection.RemoveAt(System.Int32)\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: DataColumnCollection.RemoveAt(Int32)\n  fullName: System.Data.DataColumnCollection.RemoveAt(Int32)\n- uid: System.Data.DataColumnCollection.Add*\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: Add\n  nameWithType: DataColumnCollection.Add\n- uid: System.Data.DataColumnCollection.AddRange*\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: AddRange\n  nameWithType: DataColumnCollection.AddRange\n- uid: System.Data.DataColumnCollection.CanRemove*\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: CanRemove\n  nameWithType: DataColumnCollection.CanRemove\n- uid: System.Data.DataColumnCollection.Clear*\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: Clear\n  nameWithType: DataColumnCollection.Clear\n- uid: System.Data.DataColumnCollection.Contains*\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: Contains\n  nameWithType: DataColumnCollection.Contains\n- uid: System.Data.DataColumnCollection.CopyTo*\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: DataColumnCollection.CopyTo\n- uid: System.Data.DataColumnCollection.IndexOf*\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: DataColumnCollection.IndexOf\n- uid: System.Data.DataColumnCollection.Item*\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: Item\n  nameWithType: DataColumnCollection.Item\n- uid: System.Data.DataColumnCollection.List*\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: List\n  nameWithType: DataColumnCollection.List\n- uid: System.Data.DataColumnCollection.Remove*\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: Remove\n  nameWithType: DataColumnCollection.Remove\n- uid: System.Data.DataColumnCollection.RemoveAt*\n  parent: System.Data.DataColumnCollection\n  isExternal: false\n  name: RemoveAt\n  nameWithType: DataColumnCollection.RemoveAt\n"}