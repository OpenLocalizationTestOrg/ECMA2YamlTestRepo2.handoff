{"nodes":[{"pos":[502,541],"content":"Represents a scope URI for an endpoint.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a scope URI for an endpoint.","pos":[0,39]}]},{"pos":[4625,4739],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Discovery.Configuration.ScopeElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.ServiceModel.Discovery.Configuration.ScopeElement\"></xref> class."},{"pos":[5573,5585],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6133,6160],"content":"Gets or sets the scope URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the scope URI.","pos":[0,27]}]},{"pos":[6269,6283],"content":"The scope URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The scope URI.","pos":[0,14]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Discovery.Configuration.ScopeElement\n  id: ScopeElement\n  children:\n  - System.ServiceModel.Discovery.Configuration.ScopeElement.#ctor\n  - System.ServiceModel.Discovery.Configuration.ScopeElement.Properties\n  - System.ServiceModel.Discovery.Configuration.ScopeElement.Scope\n  langs:\n  - csharp\n  name: ScopeElement\n  nameWithType: ScopeElement\n  fullName: System.ServiceModel.Discovery.Configuration.ScopeElement\n  type: Class\n  summary: Represents a scope URI for an endpoint.\n  remarks: \"This class is used to represent a scope URI in configuration files. The following example shows how it is used in a configuration file.  \\n  \\n```  \\n<endpointBehaviors>  \\n    <behavior name=\\\"ep1Behavior\\\">  \\n        <endpointDiscovery>  \\n            <scopes>  \\n                <add scope=\\\"http://www.microsoft.com/building42/floor1\\\"/>  \\n                <add scope=\\\"ldap:///ou=engineeringo=examplecomc=us\\\"/>  \\n                <add scope=\\\"mailto:vipulm@microsoft.com\\\"/>  \\n             </scopes>  \\n        </endpointDiscovery>  \\n    </behavior>  \\n</endpointBehaviors>  \\n```  \\n  \\n Each of the items under the \\\\<scopes> element correspond to a ScopeElement.\"\n  syntax:\n    content: 'public sealed class ScopeElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.Configuration.ScopeElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Discovery.Configuration.ScopeElement\n  langs:\n  - csharp\n  name: ScopeElement()\n  nameWithType: ScopeElement.ScopeElement()\n  fullName: System.ServiceModel.Discovery.Configuration.ScopeElement.ScopeElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery.Configuration\n  summary: Creates a new instance of the <xref href=\"System.ServiceModel.Discovery.Configuration.ScopeElement\"></xref> class.\n  syntax:\n    content: public ScopeElement ();\n    parameters: []\n  overload: System.ServiceModel.Discovery.Configuration.ScopeElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.Configuration.ScopeElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Discovery.Configuration.ScopeElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: ScopeElement.Properties\n  fullName: System.ServiceModel.Discovery.Configuration.ScopeElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.ServiceModel.Discovery.Configuration.ScopeElement.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Discovery.Configuration.ScopeElement.Scope\n  id: Scope\n  parent: System.ServiceModel.Discovery.Configuration.ScopeElement\n  langs:\n  - csharp\n  name: Scope\n  nameWithType: ScopeElement.Scope\n  fullName: System.ServiceModel.Discovery.Configuration.ScopeElement.Scope\n  type: Property\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery.Configuration\n  summary: Gets or sets the scope URI.\n  syntax:\n    content: public Uri Scope { get; set; }\n    return:\n      type: System.Uri\n      description: The scope URI.\n  overload: System.ServiceModel.Discovery.Configuration.ScopeElement.Scope*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.ServiceModel.Discovery.Configuration.ScopeElement.#ctor\n  parent: System.ServiceModel.Discovery.Configuration.ScopeElement\n  isExternal: false\n  name: ScopeElement()\n  nameWithType: ScopeElement.ScopeElement()\n  fullName: System.ServiceModel.Discovery.Configuration.ScopeElement.ScopeElement()\n- uid: System.ServiceModel.Discovery.Configuration.ScopeElement.Properties\n  parent: System.ServiceModel.Discovery.Configuration.ScopeElement\n  isExternal: false\n  name: Properties\n  nameWithType: ScopeElement.Properties\n  fullName: System.ServiceModel.Discovery.Configuration.ScopeElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Discovery.Configuration.ScopeElement.Scope\n  parent: System.ServiceModel.Discovery.Configuration.ScopeElement\n  isExternal: false\n  name: Scope\n  nameWithType: ScopeElement.Scope\n  fullName: System.ServiceModel.Discovery.Configuration.ScopeElement.Scope\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.Discovery.Configuration.ScopeElement.#ctor*\n  parent: System.ServiceModel.Discovery.Configuration.ScopeElement\n  isExternal: false\n  name: ScopeElement\n  nameWithType: ScopeElement.ScopeElement\n- uid: System.ServiceModel.Discovery.Configuration.ScopeElement.Properties*\n  parent: System.ServiceModel.Discovery.Configuration.ScopeElement\n  isExternal: false\n  name: Properties\n  nameWithType: ScopeElement.Properties\n- uid: System.ServiceModel.Discovery.Configuration.ScopeElement.Scope*\n  parent: System.ServiceModel.Discovery.Configuration.ScopeElement\n  isExternal: false\n  name: Scope\n  nameWithType: ScopeElement.Scope\n"}