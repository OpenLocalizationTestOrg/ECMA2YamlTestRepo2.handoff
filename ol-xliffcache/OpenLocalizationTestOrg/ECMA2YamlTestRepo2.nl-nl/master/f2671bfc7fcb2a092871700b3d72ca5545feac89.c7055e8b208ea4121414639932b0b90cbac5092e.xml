{"nodes":[{"pos":[905,917],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[958,970],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3235,3247],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3313,3325],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3407,3419],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4137,4149],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5072,5084],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5150,5162],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5244,5256],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5963,5975],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6677,6689],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.WeakEventManager`2\n  id: WeakEventManager`2\n  children:\n  - System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})\n  - System.Windows.WeakEventManager`2.NewListenerList\n  - System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})\n  - System.Windows.WeakEventManager`2.StartListening(System.Object)\n  - System.Windows.WeakEventManager`2.StopListening(System.Object)\n  langs:\n  - csharp\n  name: WeakEventManager<TEventSource,TEventArgs>\n  nameWithType: WeakEventManager<TEventSource,TEventArgs>\n  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>\n  type: Class\n  syntax:\n    content: 'public class WeakEventManager<TEventSource,TEventArgs> : System.Windows.WeakEventManager where TEventArgs : EventArgs'\n    typeParameters:\n    - id: TEventSource\n      description: To be added.\n    - id: TEventArgs\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.WeakEventManager\n  implements: []\n  inheritedMembers:\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  - System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)\n  - System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)\n  - System.Windows.WeakEventManager.GetCurrentManager(System.Type)\n  - System.Windows.WeakEventManager.Item(System.Object)\n  - System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)\n  - System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)\n  - System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)\n  - System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)\n  - System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)\n  - System.Windows.WeakEventManager.ReadLock\n  - System.Windows.WeakEventManager.Remove(System.Object)\n  - System.Windows.WeakEventManager.ScheduleCleanup\n  - System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)\n  - System.Windows.WeakEventManager.WriteLock\n  platform:\n  - net462\n- uid: System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})\n  id: AddHandler(`0,System.String,System.EventHandler{`1})\n  parent: System.Windows.WeakEventManager`2\n  langs:\n  - csharp\n  name: AddHandler(TEventSource,String,EventHandler<TEventArgs>)\n  nameWithType: WeakEventManager<TEventSource,TEventArgs>.AddHandler(TEventSource,String,EventHandler<TEventArgs>)\n  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.AddHandler(TEventSource,String,EventHandler<TEventArgs>)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  syntax:\n    content: public static void AddHandler (TEventSource source, string eventName, EventHandler<TEventArgs> handler);\n    parameters:\n    - id: source\n      type: TEventSource\n      description: To be added.\n    - id: eventName\n      type: System.String\n      description: To be added.\n    - id: handler\n      type: System.EventHandler{TEventArgs}\n      description: To be added.\n  overload: System.Windows.WeakEventManager`2.AddHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.WeakEventManager`2.NewListenerList\n  id: NewListenerList\n  parent: System.Windows.WeakEventManager`2\n  langs:\n  - csharp\n  name: NewListenerList()\n  nameWithType: WeakEventManager<TEventSource,TEventArgs>.NewListenerList()\n  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.NewListenerList()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  syntax:\n    content: protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();\n    parameters: []\n    return:\n      type: System.Windows.WeakEventManager.ListenerList\n      description: To be added.\n  overload: System.Windows.WeakEventManager`2.NewListenerList*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})\n  id: RemoveHandler(`0,System.String,System.EventHandler{`1})\n  parent: System.Windows.WeakEventManager`2\n  langs:\n  - csharp\n  name: RemoveHandler(TEventSource,String,EventHandler<TEventArgs>)\n  nameWithType: WeakEventManager<TEventSource,TEventArgs>.RemoveHandler(TEventSource,String,EventHandler<TEventArgs>)\n  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.RemoveHandler(TEventSource,String,EventHandler<TEventArgs>)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  syntax:\n    content: public static void RemoveHandler (TEventSource source, string eventName, EventHandler<TEventArgs> handler);\n    parameters:\n    - id: source\n      type: TEventSource\n      description: To be added.\n    - id: eventName\n      type: System.String\n      description: To be added.\n    - id: handler\n      type: System.EventHandler{TEventArgs}\n      description: To be added.\n  overload: System.Windows.WeakEventManager`2.RemoveHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.WeakEventManager`2.StartListening(System.Object)\n  id: StartListening(System.Object)\n  parent: System.Windows.WeakEventManager`2\n  langs:\n  - csharp\n  name: StartListening(Object)\n  nameWithType: WeakEventManager<TEventSource,TEventArgs>.StartListening(Object)\n  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.StartListening(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  syntax:\n    content: protected override void StartListening (object source);\n    parameters:\n    - id: source\n      type: System.Object\n      description: To be added.\n  overload: System.Windows.WeakEventManager`2.StartListening*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.WeakEventManager`2.StopListening(System.Object)\n  id: StopListening(System.Object)\n  parent: System.Windows.WeakEventManager`2\n  langs:\n  - csharp\n  name: StopListening(Object)\n  nameWithType: WeakEventManager<TEventSource,TEventArgs>.StopListening(Object)\n  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.StopListening(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  syntax:\n    content: protected override void StopListening (object source);\n    parameters:\n    - id: source\n      type: System.Object\n      description: To be added.\n  overload: System.Windows.WeakEventManager`2.StopListening*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.WeakEventManager\n  isExternal: false\n  name: System.Windows.WeakEventManager\n- uid: System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})\n  parent: System.Windows.WeakEventManager`2\n  isExternal: false\n  name: AddHandler(TEventSource,String,EventHandler<TEventArgs>)\n  nameWithType: WeakEventManager<TEventSource,TEventArgs>.AddHandler(TEventSource,String,EventHandler<TEventArgs>)\n  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.AddHandler(TEventSource,String,EventHandler<TEventArgs>)\n- uid: TEventSource\n  isExternal: true\n  name: TEventSource\n  nameWithType: TEventSource\n  fullName: TEventSource\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.EventHandler{TEventArgs}\n  parent: System\n  isExternal: true\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: EventHandler<TEventArgs>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TEventArgs\n    name: TEventArgs\n    nameWithType: TEventArgs\n    fullName: TEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.WeakEventManager`2.NewListenerList\n  parent: System.Windows.WeakEventManager`2\n  isExternal: false\n  name: NewListenerList()\n  nameWithType: WeakEventManager<TEventSource,TEventArgs>.NewListenerList()\n  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.NewListenerList()\n- uid: System.Windows.WeakEventManager.ListenerList\n  parent: System.Windows\n  isExternal: false\n  name: WeakEventManager+ListenerList\n  nameWithType: WeakEventManager+ListenerList\n  fullName: System.Windows.WeakEventManager+ListenerList\n- uid: System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})\n  parent: System.Windows.WeakEventManager`2\n  isExternal: false\n  name: RemoveHandler(TEventSource,String,EventHandler<TEventArgs>)\n  nameWithType: WeakEventManager<TEventSource,TEventArgs>.RemoveHandler(TEventSource,String,EventHandler<TEventArgs>)\n  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.RemoveHandler(TEventSource,String,EventHandler<TEventArgs>)\n- uid: System.Windows.WeakEventManager`2.StartListening(System.Object)\n  parent: System.Windows.WeakEventManager`2\n  isExternal: false\n  name: StartListening(Object)\n  nameWithType: WeakEventManager<TEventSource,TEventArgs>.StartListening(Object)\n  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.StartListening(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.WeakEventManager`2.StopListening(System.Object)\n  parent: System.Windows.WeakEventManager`2\n  isExternal: false\n  name: StopListening(Object)\n  nameWithType: WeakEventManager<TEventSource,TEventArgs>.StopListening(Object)\n  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.StopListening(Object)\n- uid: System.Windows.WeakEventManager`2.AddHandler*\n  parent: System.Windows.WeakEventManager`2\n  isExternal: false\n  name: AddHandler\n  nameWithType: WeakEventManager<TEventSource,TEventArgs>.AddHandler\n- uid: System.Windows.WeakEventManager`2.NewListenerList*\n  parent: System.Windows.WeakEventManager`2\n  isExternal: false\n  name: NewListenerList\n  nameWithType: WeakEventManager<TEventSource,TEventArgs>.NewListenerList\n- uid: System.Windows.WeakEventManager`2.RemoveHandler*\n  parent: System.Windows.WeakEventManager`2\n  isExternal: false\n  name: RemoveHandler\n  nameWithType: WeakEventManager<TEventSource,TEventArgs>.RemoveHandler\n- uid: System.Windows.WeakEventManager`2.StartListening*\n  parent: System.Windows.WeakEventManager`2\n  isExternal: false\n  name: StartListening\n  nameWithType: WeakEventManager<TEventSource,TEventArgs>.StartListening\n- uid: System.Windows.WeakEventManager`2.StopListening*\n  parent: System.Windows.WeakEventManager`2\n  isExternal: false\n  name: StopListening\n  nameWithType: WeakEventManager<TEventSource,TEventArgs>.StopListening\n"}