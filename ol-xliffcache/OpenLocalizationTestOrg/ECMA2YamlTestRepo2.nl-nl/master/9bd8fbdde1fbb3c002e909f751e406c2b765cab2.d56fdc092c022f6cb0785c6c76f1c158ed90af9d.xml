{"nodes":[{"pos":[1172,1209],"content":"Represents a collection of designers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a collection of designers.","pos":[0,37]}]},{"pos":[1221,1287],"content":"This collection object can store references to a set of designers.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This collection object can store references to a set of designers.","pos":[0,66]}]},{"pos":[2476,2630],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.DesignerCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that contains the specified set of designers.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignerCollection\"></xref> class that contains the specified set of designers."},{"pos":[2810,2866],"content":"A list that contains the collection of designers to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"A list that contains the collection of designers to add.","pos":[0,56]}]},{"pos":[3528,3675],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.DesignerCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that contains the specified designers.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignerCollection\"></xref> class that contains the specified designers."},{"pos":[3687,3789],"content":"Creates a new designer collection from an array of designers. The collection does not clone the array.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Creates a new designer collection from an array of designers. The collection does not clone the array.","pos":[0,102],"nodes":[{"content":"Creates a new designer collection from an array of designers.","pos":[0,61]},{"content":"The collection does not clone the array.","pos":[62,102]}]}]},{"pos":[4009,4102],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to store.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> objects to store."},{"pos":[4577,4624],"content":"Gets the number of designers in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of designers in the collection.","pos":[0,47]}]},{"pos":[5148,5190],"content":"The number of designers in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of designers in the collection.","pos":[0,42]}]},{"pos":[5709,5751],"content":"Gets a new enumerator for this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a new enumerator for this collection.","pos":[0,42]}]},{"pos":[5924,5996],"content":"An <xref:System.Collections.IEnumerator> that enumerates the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerator&gt; that enumerates the collection.","pos":[0,72],"source":"An <xref:System.Collections.IEnumerator> that enumerates the collection."}]},{"pos":[6523,6564],"content":"Gets the designer at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the designer at the specified index.","pos":[0,41]}]},{"pos":[6747,6783],"content":"The index of the designer to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the designer to return.","pos":[0,36]}]},{"pos":[6870,6906],"content":"The designer at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The designer at the specified index.","pos":[0,36]}]},{"pos":[7645,7761],"content":"Copies the elements of the collection to an <xref:System.Array>, starting at a particular <xref:System.Array> index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the elements of the collection to an &lt;xref:System.Array&gt;, starting at a particular &lt;xref:System.Array&gt; index.","pos":[0,116],"source":"Copies the elements of the collection to an <xref:System.Array>, starting at a particular <xref:System.Array> index."}]},{"pos":[7911,8069],"content":"The one-dimensional <xref:System.Array> that is the destination of the elements copied from collection. The <xref:System.Array> must have zero-based indexing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The one-dimensional <xref:System.Array> that is the destination of the elements copied from collection. The <xref:System.Array> must have zero-based indexing.","pos":[0,158],"nodes":[{"content":"The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from collection.","pos":[0,103],"source":"The one-dimensional <xref:System.Array> that is the destination of the elements copied from collection."},{"content":"The &lt;xref:System.Array&gt; must have zero-based indexing.","pos":[104,158],"source":" The <xref:System.Array> must have zero-based indexing."}]}]},{"pos":[8130,8186],"content":"The zero-based index in <ph id=\"ph1\">`array`</ph> at which copying begins.","needQuote":true,"needEscape":true,"source":"The zero-based index in `array` at which copying begins."},{"pos":[8862,8918],"content":"Gets the number of elements contained in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of elements contained in the collection.","pos":[0,56]}]},{"pos":[9048,9099],"content":"The number of elements contained in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of elements contained in the collection.","pos":[0,51]}]},{"pos":[9819,9933],"content":"Gets a value indicating whether access to the <xref:System.Collections.ICollection> is synchronized (thread safe).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether access to the &lt;xref:System.Collections.ICollection&gt; is synchronized (thread safe).","pos":[0,114],"source":"Gets a value indicating whether access to the <xref:System.Collections.ICollection> is synchronized (thread safe)."}]},{"pos":[10075,10296],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if access to the &lt;xref:System.Collections.ICollection&gt; is synchronized (thread safe); otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the <xref:System.Collections.ICollection> is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10995,11067],"content":"Gets an object that can be used to synchronize access to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an object that can be used to synchronize access to the collection.","pos":[0,72]}]},{"pos":[11204,11271],"content":"An object that can be used to synchronize access to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that can be used to synchronize access to the collection.","pos":[0,67]}]},{"pos":[11993,12035],"content":"Gets a new enumerator for this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a new enumerator for this collection.","pos":[0,42]}]},{"pos":[12213,12285],"content":"An <xref:System.Collections.IEnumerator> that enumerates the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerator&gt; that enumerates the collection.","pos":[0,72],"source":"An <xref:System.Collections.IEnumerator> that enumerates the collection."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.DesignerCollection\n  id: DesignerCollection\n  children:\n  - System.ComponentModel.Design.DesignerCollection.#ctor(System.Collections.IList)\n  - System.ComponentModel.Design.DesignerCollection.#ctor(System.ComponentModel.Design.IDesignerHost[])\n  - System.ComponentModel.Design.DesignerCollection.Count\n  - System.ComponentModel.Design.DesignerCollection.GetEnumerator\n  - System.ComponentModel.Design.DesignerCollection.Item(System.Int32)\n  - System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#Count\n  - System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#IsSynchronized\n  - System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#SyncRoot\n  - System.ComponentModel.Design.DesignerCollection.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  name: DesignerCollection\n  nameWithType: DesignerCollection\n  fullName: System.ComponentModel.Design.DesignerCollection\n  type: Class\n  summary: Represents a collection of designers.\n  remarks: This collection object can store references to a set of designers.\n  example:\n  - \"The following code example creates a DesignerCollection initialized with a specified array of <xref:System.ComponentModel.Design.IDesignerHost> objects.  \\n  \\n [!code-vb[DesignerCollectionExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._100_1.vb)]\\n [!code-cs[DesignerCollectionExample#1](~/add/codesnippet/csharp/t-system.componentmodel._100_1.cs)]\\n [!code-cpp[DesignerCollectionExample#1](~/add/codesnippet/cpp/t-system.componentmodel._100_1.cpp)]\"\n  syntax:\n    content: 'public class DesignerCollection : System.Collections.ICollection'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignerCollection.#ctor(System.Collections.IList)\n  id: '#ctor(System.Collections.IList)'\n  parent: System.ComponentModel.Design.DesignerCollection\n  langs:\n  - csharp\n  name: DesignerCollection(IList)\n  nameWithType: DesignerCollection.DesignerCollection(IList)\n  fullName: System.ComponentModel.Design.DesignerCollection.DesignerCollection(IList)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignerCollection\"></xref> class that contains the specified set of designers.\n  syntax:\n    content: public DesignerCollection (System.Collections.IList designers);\n    parameters:\n    - id: designers\n      type: System.Collections.IList\n      description: A list that contains the collection of designers to add.\n  overload: System.ComponentModel.Design.DesignerCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignerCollection.#ctor(System.ComponentModel.Design.IDesignerHost[])\n  id: '#ctor(System.ComponentModel.Design.IDesignerHost[])'\n  parent: System.ComponentModel.Design.DesignerCollection\n  langs:\n  - csharp\n  name: DesignerCollection(IDesignerHost[])\n  nameWithType: DesignerCollection.DesignerCollection(IDesignerHost[])\n  fullName: System.ComponentModel.Design.DesignerCollection.DesignerCollection(IDesignerHost[])\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignerCollection\"></xref> class that contains the specified designers.\n  remarks: Creates a new designer collection from an array of designers. The collection does not clone the array.\n  syntax:\n    content: public DesignerCollection (System.ComponentModel.Design.IDesignerHost[] designers);\n    parameters:\n    - id: designers\n      type: System.ComponentModel.Design.IDesignerHost[]\n      description: An array of <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> objects to store.\n  overload: System.ComponentModel.Design.DesignerCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignerCollection.Count\n  id: Count\n  parent: System.ComponentModel.Design.DesignerCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: DesignerCollection.Count\n  fullName: System.ComponentModel.Design.DesignerCollection.Count\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets the number of designers in the collection.\n  remarks: ''\n  example:\n  - \"The following code example gets the number of elements in the collection.  \\n  \\n [!code-vb[DesignerCollectionExample#2](~/add/codesnippet/visualbasic/p-system.componentmodel._31_1.vb)]\\n [!code-cs[DesignerCollectionExample#2](~/add/codesnippet/csharp/p-system.componentmodel._31_1.cs)]\\n [!code-cpp[DesignerCollectionExample#2](~/add/codesnippet/cpp/p-system.componentmodel._31_1.cpp)]\"\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of designers in the collection.\n  overload: System.ComponentModel.Design.DesignerCollection.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignerCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.ComponentModel.Design.DesignerCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: DesignerCollection.GetEnumerator()\n  fullName: System.ComponentModel.Design.DesignerCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets a new enumerator for this collection.\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> that enumerates the collection.\n  overload: System.ComponentModel.Design.DesignerCollection.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignerCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.ComponentModel.Design.DesignerCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: DesignerCollection.Item(Int32)\n  fullName: System.ComponentModel.Design.DesignerCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets the designer at the specified index.\n  syntax:\n    content: public virtual System.ComponentModel.Design.IDesignerHost this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the designer to return.\n    return:\n      type: System.ComponentModel.Design.IDesignerHost\n      description: The designer at the specified index.\n  overload: System.ComponentModel.Design.DesignerCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.ComponentModel.Design.DesignerCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: DesignerCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.ComponentModel.Design.DesignerCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Copies the elements of the collection to an <xref:System.Array>, starting at a particular <xref:System.Array> index.\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional <xref:System.Array> that is the destination of the elements copied from collection. The <xref:System.Array> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in `array` at which copying begins.\n  overload: System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#Count\n  id: System#Collections#ICollection#Count\n  isEii: true\n  parent: System.ComponentModel.Design.DesignerCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.Count\n  nameWithType: DesignerCollection.System.Collections.ICollection.Count\n  fullName: System.ComponentModel.Design.DesignerCollection.System.Collections.ICollection.Count\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets the number of elements contained in the collection.\n  syntax:\n    content: int System.Collections.ICollection.Count { get; }\n    return:\n      type: System.Int32\n      description: The number of elements contained in the collection.\n  overload: System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.ComponentModel.Design.DesignerCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: DesignerCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.ComponentModel.Design.DesignerCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets a value indicating whether access to the <xref:System.Collections.ICollection> is synchronized (thread safe).\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the <xref:System.Collections.ICollection> is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.ComponentModel.Design.DesignerCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: DesignerCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.ComponentModel.Design.DesignerCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets an object that can be used to synchronize access to the collection.\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the collection.\n  overload: System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignerCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.ComponentModel.Design.DesignerCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: DesignerCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.ComponentModel.Design.DesignerCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets a new enumerator for this collection.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> that enumerates the collection.\n  overload: System.ComponentModel.Design.DesignerCollection.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ComponentModel.Design.DesignerCollection.#ctor(System.Collections.IList)\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: DesignerCollection(IList)\n  nameWithType: DesignerCollection.DesignerCollection(IList)\n  fullName: System.ComponentModel.Design.DesignerCollection.DesignerCollection(IList)\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: true\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.ComponentModel.Design.DesignerCollection.#ctor(System.ComponentModel.Design.IDesignerHost[])\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: DesignerCollection(IDesignerHost[])\n  nameWithType: DesignerCollection.DesignerCollection(IDesignerHost[])\n  fullName: System.ComponentModel.Design.DesignerCollection.DesignerCollection(IDesignerHost[])\n- uid: System.ComponentModel.Design.IDesignerHost[]\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: IDesignerHost\n  nameWithType: IDesignerHost\n  fullName: System.ComponentModel.Design.IDesignerHost[]\n  spec.csharp:\n  - uid: System.ComponentModel.Design.IDesignerHost\n    name: IDesignerHost\n    nameWithType: IDesignerHost\n    fullName: IDesignerHost[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.Design.DesignerCollection.Count\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: Count\n  nameWithType: DesignerCollection.Count\n  fullName: System.ComponentModel.Design.DesignerCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.Design.DesignerCollection.GetEnumerator\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: DesignerCollection.GetEnumerator()\n  fullName: System.ComponentModel.Design.DesignerCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.ComponentModel.Design.DesignerCollection.Item(System.Int32)\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: DesignerCollection.Item(Int32)\n  fullName: System.ComponentModel.Design.DesignerCollection.Item(Int32)\n- uid: System.ComponentModel.Design.IDesignerHost\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: IDesignerHost\n  nameWithType: IDesignerHost\n  fullName: System.ComponentModel.Design.IDesignerHost\n- uid: System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: DesignerCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.ComponentModel.Design.DesignerCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#Count\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: DesignerCollection.System.Collections.ICollection.Count\n  fullName: System.ComponentModel.Design.DesignerCollection.System.Collections.ICollection.Count\n- uid: System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: DesignerCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.ComponentModel.Design.DesignerCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#SyncRoot\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: DesignerCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.ComponentModel.Design.DesignerCollection.System.Collections.ICollection.SyncRoot\n- uid: System.ComponentModel.Design.DesignerCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: DesignerCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.ComponentModel.Design.DesignerCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.ComponentModel.Design.DesignerCollection.#ctor*\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: DesignerCollection\n  nameWithType: DesignerCollection.DesignerCollection\n- uid: System.ComponentModel.Design.DesignerCollection.Count*\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: Count\n  nameWithType: DesignerCollection.Count\n- uid: System.ComponentModel.Design.DesignerCollection.GetEnumerator*\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: DesignerCollection.GetEnumerator\n- uid: System.ComponentModel.Design.DesignerCollection.Item*\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: Item\n  nameWithType: DesignerCollection.Item\n- uid: System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#CopyTo*\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: DesignerCollection.System.Collections.ICollection.CopyTo\n- uid: System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#Count*\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: DesignerCollection.System.Collections.ICollection.Count\n- uid: System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#IsSynchronized*\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: DesignerCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#SyncRoot*\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: DesignerCollection.System.Collections.ICollection.SyncRoot\n- uid: System.ComponentModel.Design.DesignerCollection.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.ComponentModel.Design.DesignerCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: DesignerCollection.System.Collections.IEnumerable.GetEnumerator\n"}