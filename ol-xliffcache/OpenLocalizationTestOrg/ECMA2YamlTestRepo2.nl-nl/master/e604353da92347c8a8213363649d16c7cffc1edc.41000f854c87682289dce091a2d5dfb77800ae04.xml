{"nodes":[{"pos":[699,815],"content":"Imports metadata into &lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName&gt; objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Imports metadata into <ph id=\"ph1\">&amp;lt;</ph>xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> objects.","pos":[0,116],"source":"Imports metadata into &lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName&gt; objects."}]},{"pos":[828,3441],"content":"Use an implementation of the MetadataImporter abstract class to import service metadata. Types that derive from the MetadataImporter class implement support for importing metadata formats that take advantage of the WS-Policy import logic in [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)].       A MetadataImporter implementation collects the policy expressions attached to the service metadata in a <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=fullName> object. The MetadataImporter then processes the policies as part of importing the metadata by calling the implementations of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> interface in the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> property.       You can add support for importing new policy assertions to a MetadataImporter by adding your own implementation of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> interface to the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> property on a MetadataImporter instance. Alternatively, you can register your policy import extension in your application configuration file.       The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> type is the implementation of the MetadataImporter abstract class included with [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]. The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> type imports WSDL metadata with attached policies that are bundled in a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName> object.       You can add support for importing WSDL extensions by implementing the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> interface and then adding your implementation to the <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=fullName> property on your <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> instance. The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> can also load implementations of the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> interface registered in your application configuration file.      > [!NOTE] >  Because the MetadataImporter constructor is internal, you cannot derive from MetadataImporter in this version.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use an implementation of the MetadataImporter abstract class to import service metadata.","pos":[0,88]},{"content":"Types that derive from the MetadataImporter class implement support for importing metadata formats that take advantage of the WS-Policy import logic in <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph>.","pos":[89,300],"source":" Types that derive from the MetadataImporter class implement support for importing metadata formats that take advantage of the WS-Policy import logic in [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]."},{"content":"A MetadataImporter implementation collects the policy expressions attached to the service metadata in a &lt;xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=fullName&gt; object.","pos":[307,506],"source":"       A MetadataImporter implementation collects the policy expressions attached to the service metadata in a <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=fullName> object."},{"content":"The MetadataImporter then processes the policies as part of importing the metadata by calling the implementations of the &lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName&gt; interface in the &lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName&gt; property.","pos":[507,848],"source":" The MetadataImporter then processes the policies as part of importing the metadata by calling the implementations of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> interface in the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> property."},{"content":"You can add support for importing new policy assertions to a MetadataImporter by adding your own implementation of the &lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName&gt; interface to the &lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName&gt; property on a MetadataImporter instance.","pos":[855,1225],"source":"       You can add support for importing new policy assertions to a MetadataImporter by adding your own implementation of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> interface to the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> property on a MetadataImporter instance."},{"content":"Alternatively, you can register your policy import extension in your application configuration file.","pos":[1226,1326]},{"content":"The &lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt; type is the implementation of the MetadataImporter abstract class included with <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph>.","pos":[1333,1553],"source":"       The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> type is the implementation of the MetadataImporter abstract class included with [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]."},{"content":"The &lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt; type imports WSDL metadata with attached policies that are bundled in a &lt;xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName&gt; object.","pos":[1554,1790],"source":" The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> type imports WSDL metadata with attached policies that are bundled in a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName> object."},{"content":"You can add support for importing WSDL extensions by implementing the &lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName&gt; interface and then adding your implementation to the &lt;xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=fullName&gt; property on your &lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt; instance.","pos":[1797,2209],"source":"       You can add support for importing WSDL extensions by implementing the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> interface and then adding your implementation to the <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=fullName> property on your <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> instance."},{"content":"The &lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt; can also load implementations of the &lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName&gt; interface registered in your application configuration file.","pos":[2210,2473],"source":" The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> can also load implementations of the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> interface registered in your application configuration file."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Because the MetadataImporter constructor is internal, you cannot derive from MetadataImporter in this version.","pos":[2479,2602],"source":"      > [!NOTE] >  Because the MetadataImporter constructor is internal, you cannot derive from MetadataImporter in this version."}]},{"pos":[4465,4542],"content":"Gets a value that indicates whether there were errors importing the metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether there were errors importing the metadata.","pos":[0,77]}]},{"pos":[4554,4642],"content":"Always check the Errors property after importing metadata and before using the metadata.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Always check the Errors property after importing metadata and before using the metadata.","pos":[0,88]}]},{"pos":[4930,5031],"content":"A collection of <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.MetadataConversionError\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"A collection of <xref href=\"System.ServiceModel.Description.MetadataConversionError\"></xref> objects."},{"pos":[5594,5691],"content":"When overridden in a derived class, returns a collection of contracts imported from the metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns a collection of contracts imported from the metadata.","pos":[0,97]}]},{"pos":[6006,6047],"content":"The contracts imported from the metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contracts imported from the metadata.","pos":[0,41]}]},{"pos":[6622,6696],"content":"When overridden in a derived class, returns all endpoints in the metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns all endpoints in the metadata.","pos":[0,74]}]},{"pos":[6708,7332],"content":"Implement the ImportAllEndpoints method to return all endpoints in the imported metadata. Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information. To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName> object using <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Implement the ImportAllEndpoints method to return all endpoints in the imported metadata. Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information. To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName> object using <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.","pos":[0,624],"nodes":[{"content":"Implement the ImportAllEndpoints method to return all endpoints in the imported metadata.","pos":[0,89]},{"content":"Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information.","pos":[90,264]},{"content":"To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new &lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName&gt; object using &lt;xref:System.ServiceModel.Description.ContractDescription.GetContract%2A&gt;.","pos":[265,624],"source":" To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName> object using <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>."}]}]},{"pos":[7573,7715],"content":"A collection of &lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName&gt; objects that are published by a service.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of <ph id=\"ph1\">&amp;lt;</ph>xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> objects that are published by a service.","pos":[0,142],"source":"A collection of &lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName&gt; objects that are published by a service."}]},{"pos":[8266,8335],"content":"Gets a dictionary of contracts by name that the importer knows about.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a dictionary of contracts by name that the importer knows about.","pos":[0,69]}]},{"pos":[8347,8481],"content":"Use the KnownContracts property to add or remove contract descriptions and their associated XML names that the importer can reference.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the KnownContracts property to add or remove contract descriptions and their associated XML names that the importer can reference.","pos":[0,134]}]},{"pos":[8817,8872],"content":"A dictionary of contracts listed by XML qualified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A dictionary of contracts listed by XML qualified name.","pos":[0,55]}]},{"pos":[9459,9550],"content":"Gets a collection of policy importers that the importer calls to process policy assertions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of policy importers that the importer calls to process policy assertions.","pos":[0,91]}]},{"pos":[9562,9698],"content":"Use the PolicyImportExtensions property to add or remove policy importers that are invoked to process policy assertions in the metadata.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the PolicyImportExtensions property to add or remove policy importers that are invoked to process policy assertions in the metadata.","pos":[0,136]}]},{"pos":[10014,10160],"content":"A collection of policy importers that the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.MetadataImporter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> uses to process policy assertions.","needQuote":true,"needEscape":true,"source":"A collection of policy importers that the <xref href=\"System.ServiceModel.Description.MetadataImporter\"></xref> uses to process policy assertions."},{"pos":[10670,10741],"content":"Gets or sets a collection of objects used in the importing of metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a collection of objects used in the importing of metadata.","pos":[0,71]}]},{"pos":[10753,10837],"content":"Use the <ph id=\"ph1\">`State`</ph> property to add or remove objects used in the importing of metadata.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Use the `State` property to add or remove objects used in the importing of metadata."},{"pos":[11382,11420],"content":"A dictionary of objects keyed by type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A dictionary of objects keyed by type.","pos":[0,38]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Description.MetadataImporter\n  id: MetadataImporter\n  children:\n  - System.ServiceModel.Description.MetadataImporter.Errors\n  - System.ServiceModel.Description.MetadataImporter.ImportAllContracts\n  - System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints\n  - System.ServiceModel.Description.MetadataImporter.KnownContracts\n  - System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions\n  - System.ServiceModel.Description.MetadataImporter.State\n  langs:\n  - csharp\n  name: MetadataImporter\n  nameWithType: MetadataImporter\n  fullName: System.ServiceModel.Description.MetadataImporter\n  type: Class\n  summary: Imports metadata into &lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName&gt; objects.\n  remarks: \"Use an implementation of the MetadataImporter abstract class to import service metadata. Types that derive from the MetadataImporter class implement support for importing metadata formats that take advantage of the WS-Policy import logic in [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)].  \\n  \\n A MetadataImporter implementation collects the policy expressions attached to the service metadata in a <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=fullName> object. The MetadataImporter then processes the policies as part of importing the metadata by calling the implementations of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> interface in the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> property.  \\n  \\n You can add support for importing new policy assertions to a MetadataImporter by adding your own implementation of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> interface to the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> property on a MetadataImporter instance. Alternatively, you can register your policy import extension in your application configuration file.  \\n  \\n The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> type is the implementation of the MetadataImporter abstract class included with [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]. The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> type imports WSDL metadata with attached policies that are bundled in a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName> object.  \\n  \\n You can add support for importing WSDL extensions by implementing the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> interface and then adding your implementation to the <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=fullName> property on your <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> instance. The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> can also load implementations of the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> interface registered in your application configuration file.  \\n  \\n> [!NOTE]\\n>  Because the MetadataImporter constructor is internal, you cannot derive from MetadataImporter in this version.\"\n  example:\n  - \"The following example shows the use of the <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> derived class to import metadata using custom state, checking the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property, compiling imported metadata to managed types and saving the result to a code file.  \\n  \\n [!code-cs[C_CustomWSDLExtensions#8](~/add/codesnippet/csharp/c_customwsdlextensions.client/client.cs#8)]\"\n  syntax:\n    content: public abstract class MetadataImporter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataImporter.Errors\n  id: Errors\n  parent: System.ServiceModel.Description.MetadataImporter\n  langs:\n  - csharp\n  name: Errors\n  nameWithType: MetadataImporter.Errors\n  fullName: System.ServiceModel.Description.MetadataImporter.Errors\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Gets a value that indicates whether there were errors importing the metadata.\n  remarks: Always check the Errors property after importing metadata and before using the metadata.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Description.MetadataConversionError> Errors { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.MetadataConversionError}\n      description: A collection of <xref href=\"System.ServiceModel.Description.MetadataConversionError\"></xref> objects.\n  overload: System.ServiceModel.Description.MetadataImporter.Errors*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataImporter.ImportAllContracts\n  id: ImportAllContracts\n  parent: System.ServiceModel.Description.MetadataImporter\n  langs:\n  - csharp\n  name: ImportAllContracts()\n  nameWithType: MetadataImporter.ImportAllContracts()\n  fullName: System.ServiceModel.Description.MetadataImporter.ImportAllContracts()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: When overridden in a derived class, returns a collection of contracts imported from the metadata.\n  syntax:\n    content: public abstract System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ContractDescription> ImportAllContracts ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ContractDescription}\n      description: The contracts imported from the metadata.\n  overload: System.ServiceModel.Description.MetadataImporter.ImportAllContracts*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints\n  id: ImportAllEndpoints\n  parent: System.ServiceModel.Description.MetadataImporter\n  langs:\n  - csharp\n  name: ImportAllEndpoints()\n  nameWithType: MetadataImporter.ImportAllEndpoints()\n  fullName: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: When overridden in a derived class, returns all endpoints in the metadata.\n  remarks: Implement the ImportAllEndpoints method to return all endpoints in the imported metadata. Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information. To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName> object using <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.\n  syntax:\n    content: public abstract System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Description.ServiceEndpointCollection\n      description: A collection of &lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName&gt; objects that are published by a service.\n  overload: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataImporter.KnownContracts\n  id: KnownContracts\n  parent: System.ServiceModel.Description.MetadataImporter\n  langs:\n  - csharp\n  name: KnownContracts\n  nameWithType: MetadataImporter.KnownContracts\n  fullName: System.ServiceModel.Description.MetadataImporter.KnownContracts\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Gets a dictionary of contracts by name that the importer knows about.\n  remarks: Use the KnownContracts property to add or remove contract descriptions and their associated XML names that the importer can reference.\n  syntax:\n    content: public System.Collections.Generic.Dictionary<System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription> KnownContracts { get; }\n    return:\n      type: System.Collections.Generic.Dictionary{System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription}\n      description: A dictionary of contracts listed by XML qualified name.\n  overload: System.ServiceModel.Description.MetadataImporter.KnownContracts*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions\n  id: PolicyImportExtensions\n  parent: System.ServiceModel.Description.MetadataImporter\n  langs:\n  - csharp\n  name: PolicyImportExtensions\n  nameWithType: MetadataImporter.PolicyImportExtensions\n  fullName: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Gets a collection of policy importers that the importer calls to process policy assertions.\n  remarks: Use the PolicyImportExtensions property to add or remove policy importers that are invoked to process policy assertions in the metadata.\n  syntax:\n    content: public System.Collections.Generic.KeyedByTypeCollection<System.ServiceModel.Description.IPolicyImportExtension> PolicyImportExtensions { get; }\n    return:\n      type: System.Collections.Generic.KeyedByTypeCollection{System.ServiceModel.Description.IPolicyImportExtension}\n      description: A collection of policy importers that the <xref href=\"System.ServiceModel.Description.MetadataImporter\"></xref> uses to process policy assertions.\n  overload: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.MetadataImporter.State\n  id: State\n  parent: System.ServiceModel.Description.MetadataImporter\n  langs:\n  - csharp\n  name: State\n  nameWithType: MetadataImporter.State\n  fullName: System.ServiceModel.Description.MetadataImporter.State\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Gets or sets a collection of objects used in the importing of metadata.\n  remarks: Use the `State` property to add or remove objects used in the importing of metadata.\n  example:\n  - \"The following example shows the use of the State property to add a custom <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=fullName> to import data structures in a particular way.  \\n  \\n [!code-cs[C_CustomWSDLExtensions#8](~/add/codesnippet/csharp/c_customwsdlextensions.client/client.cs#8)]\"\n  syntax:\n    content: public System.Collections.Generic.Dictionary<object,object> State { get; }\n    return:\n      type: System.Collections.Generic.Dictionary{System.Object,System.Object}\n      description: A dictionary of objects keyed by type.\n  overload: System.ServiceModel.Description.MetadataImporter.State*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ServiceModel.Description.MetadataImporter.Errors\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: Errors\n  nameWithType: MetadataImporter.Errors\n  fullName: System.ServiceModel.Description.MetadataImporter.Errors\n- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.MetadataConversionError}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<MetadataConversionError>\n  nameWithType: Collection<MetadataConversionError>\n  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.MetadataConversionError>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.ServiceModel.Description.MetadataConversionError>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Description.MetadataConversionError\n    name: MetadataConversionError\n    nameWithType: MetadataConversionError\n    fullName: MetadataConversionError\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Description.MetadataImporter.ImportAllContracts\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: ImportAllContracts()\n  nameWithType: MetadataImporter.ImportAllContracts()\n  fullName: System.ServiceModel.Description.MetadataImporter.ImportAllContracts()\n- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ContractDescription}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<ContractDescription>\n  nameWithType: Collection<ContractDescription>\n  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ContractDescription>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.ServiceModel.Description.ContractDescription>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Description.ContractDescription\n    name: ContractDescription\n    nameWithType: ContractDescription\n    fullName: ContractDescription\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: ImportAllEndpoints()\n  nameWithType: MetadataImporter.ImportAllEndpoints()\n  fullName: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints()\n- uid: System.ServiceModel.Description.ServiceEndpointCollection\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: ServiceEndpointCollection\n  nameWithType: ServiceEndpointCollection\n  fullName: System.ServiceModel.Description.ServiceEndpointCollection\n- uid: System.ServiceModel.Description.MetadataImporter.KnownContracts\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: KnownContracts\n  nameWithType: MetadataImporter.KnownContracts\n  fullName: System.ServiceModel.Description.MetadataImporter.KnownContracts\n- uid: System.Collections.Generic.Dictionary{System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: Dictionary<XmlQualifiedName,ContractDescription>\n  nameWithType: Dictionary<XmlQualifiedName,ContractDescription>\n  fullName: System.Collections.Generic.Dictionary<System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription>\n  spec.csharp:\n  - uid: System.Collections.Generic.Dictionary`2\n    name: Dictionary\n    nameWithType: Dictionary\n    fullName: Dictionary<System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.XmlQualifiedName\n    name: XmlQualifiedName\n    nameWithType: XmlQualifiedName\n    fullName: XmlQualifiedName\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.ServiceModel.Description.ContractDescription\n    name: ContractDescription\n    nameWithType: ContractDescription\n    fullName: ContractDescription\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: PolicyImportExtensions\n  nameWithType: MetadataImporter.PolicyImportExtensions\n  fullName: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions\n- uid: System.Collections.Generic.KeyedByTypeCollection{System.ServiceModel.Description.IPolicyImportExtension}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyedByTypeCollection<IPolicyImportExtension>\n  nameWithType: KeyedByTypeCollection<IPolicyImportExtension>\n  fullName: System.Collections.Generic.KeyedByTypeCollection<System.ServiceModel.Description.IPolicyImportExtension>\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyedByTypeCollection`1\n    name: KeyedByTypeCollection\n    nameWithType: KeyedByTypeCollection\n    fullName: KeyedByTypeCollection<System.ServiceModel.Description.IPolicyImportExtension>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Description.IPolicyImportExtension\n    name: IPolicyImportExtension\n    nameWithType: IPolicyImportExtension\n    fullName: IPolicyImportExtension\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Description.MetadataImporter.State\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: State\n  nameWithType: MetadataImporter.State\n  fullName: System.ServiceModel.Description.MetadataImporter.State\n- uid: System.Collections.Generic.Dictionary{System.Object,System.Object}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: Dictionary<Object,Object>\n  nameWithType: Dictionary<Object,Object>\n  fullName: System.Collections.Generic.Dictionary<System.Object,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.Dictionary`2\n    name: Dictionary\n    nameWithType: Dictionary\n    fullName: Dictionary<System.Object,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Description.MetadataImporter.Errors*\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: Errors\n  nameWithType: MetadataImporter.Errors\n- uid: System.ServiceModel.Description.MetadataImporter.ImportAllContracts*\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: ImportAllContracts\n  nameWithType: MetadataImporter.ImportAllContracts\n- uid: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints*\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: ImportAllEndpoints\n  nameWithType: MetadataImporter.ImportAllEndpoints\n- uid: System.ServiceModel.Description.MetadataImporter.KnownContracts*\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: KnownContracts\n  nameWithType: MetadataImporter.KnownContracts\n- uid: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions*\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: PolicyImportExtensions\n  nameWithType: MetadataImporter.PolicyImportExtensions\n- uid: System.ServiceModel.Description.MetadataImporter.State*\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: State\n  nameWithType: MetadataImporter.State\n"}