{"nodes":[{"pos":[2717,2809],"content":"Represents a security token provider that handles security tokens for a SOAP message sender.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a security token provider that handles security tokens for a SOAP message sender.","pos":[0,92]}]},{"pos":[2822,4614],"content":"Use the SecurityTokenProvider class when custom security tokens are required. The role of a security token provider is to get a security token when a SOAP message is sent by a client and a security token is used to authenticate the client or to protect the SOAP message. Specifically, the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> method is called to get a security token. The security token provider can also be called to cancel and renew a security using the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> methods.       Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenManager> class implement the <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A> method to determine which security token provider is required for a given security token.       The <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> and <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> classes provide the default implementations for built-in security token types. For custom security token scenarios, you must derive a class from one of the <xref:System.IdentityModel.Selectors.SecurityTokenManager>, <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>, or <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> classes and provide the functionality to create the security token provider, security token authenticator, and security token serializer for the custom security token. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] creating a custom token, see [How to: Create a Custom Token](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the SecurityTokenProvider class when custom security tokens are required.","pos":[0,77]},{"content":"The role of a security token provider is to get a security token when a SOAP message is sent by a client and a security token is used to authenticate the client or to protect the SOAP message.","pos":[78,270]},{"content":"Specifically, the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A&gt; method is called to get a security token.","pos":[271,402],"source":" Specifically, the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> method is called to get a security token."},{"content":"The security token provider can also be called to cancel and renew a security using the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A&gt; and &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A&gt; methods.","pos":[403,652],"source":" The security token provider can also be called to cancel and renew a security using the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> methods."},{"content":"Classes that derive from the &lt;xref:System.IdentityModel.Selectors.SecurityTokenManager&gt; class implement the &lt;xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A&gt; method to determine which security token provider is required for a given security token.","pos":[659,946],"source":"       Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenManager> class implement the <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A> method to determine which security token provider is required for a given security token."},{"content":"The &lt;xref:System.ServiceModel.ClientCredentialsSecurityTokenManager&gt; and &lt;xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager&gt; classes provide the default implementations for built-in security token types.","pos":[953,1179],"source":"       The <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> and <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> classes provide the default implementations for built-in security token types."},{"content":"For custom security token scenarios, you must derive a class from one of the &lt;xref:System.IdentityModel.Selectors.SecurityTokenManager&gt;, &lt;xref:System.ServiceModel.ClientCredentialsSecurityTokenManager&gt;, or &lt;xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager&gt; classes and provide the functionality to create the security token provider, security token authenticator, and security token serializer for the custom security token.","pos":[1180,1628],"source":" For custom security token scenarios, you must derive a class from one of the <xref:System.IdentityModel.Selectors.SecurityTokenManager>, <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>, or <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> classes and provide the functionality to create the security token provider, security token authenticator, and security token serializer for the custom security token."},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> creating a custom token, see <bpt id=\"p1\">[</bpt>How to: Create a Custom Token<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1629,1788],"source":"[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] creating a custom token, see [How to: Create a Custom Token](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[5459,5573],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.SecurityTokenProvider\"></xref> class."},{"pos":[6541,6601],"content":"Begins an asynchronous operation to cancel a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins an asynchronous operation to cancel a security token.","pos":[0,60]}]},{"pos":[6613,6766],"content":"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.","pos":[0,153]}]},{"pos":[7015,7121],"content":"A <xref:System.TimeSpan> that specifies the timeout value for the message that cancels the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that cancels the security token.","pos":[0,106],"source":"A <xref:System.TimeSpan> that specifies the timeout value for the message that cancels the security token."}]},{"pos":[7211,7288],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to cancel.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to cancel."},{"pos":[7360,7482],"content":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous close operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous close operation.","pos":[0,122],"source":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous close operation."}]},{"pos":[7544,7666],"content":"An object, specified by the application, that contains state information associated with the asynchronous close operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous close operation.","pos":[0,122]}]},{"pos":[7730,7811],"content":"The <xref:System.IAsyncResult> that references the asynchronous cancel operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous cancel operation.","pos":[0,81],"source":"The <xref:System.IAsyncResult> that references the asynchronous cancel operation."}]},{"pos":[8732,8792],"content":"Begins an asynchronous operation to cancel a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins an asynchronous operation to cancel a security token.","pos":[0,60]}]},{"pos":[8804,8957],"content":"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.","pos":[0,153]}]},{"pos":[9221,9327],"content":"A <xref:System.TimeSpan> that specifies the timeout value for the message that cancels the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that cancels the security token.","pos":[0,106],"source":"A <xref:System.TimeSpan> that specifies the timeout value for the message that cancels the security token."}]},{"pos":[9417,9494],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to cancel.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to cancel."},{"pos":[9566,9688],"content":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous close operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous close operation.","pos":[0,122],"source":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous close operation."}]},{"pos":[9750,9872],"content":"An object, specified by the application, that contains state information associated with the asynchronous close operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous close operation.","pos":[0,122]}]},{"pos":[9936,10017],"content":"The <xref:System.IAsyncResult> that references the asynchronous cancel operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous cancel operation.","pos":[0,81],"source":"The <xref:System.IAsyncResult> that references the asynchronous cancel operation."}]},{"pos":[10781,10838],"content":"Begins an asynchronous operation to get a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins an asynchronous operation to get a security token.","pos":[0,57]}]},{"pos":[10850,10973],"content":"The BeginGetToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The BeginGetToken method calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A&gt; method.","pos":[0,123],"source":"The BeginGetToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A> method."}]},{"pos":[11170,11273],"content":"A <xref:System.TimeSpan> that specifies the timeout value for the message that gets the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that gets the security token.","pos":[0,103],"source":"A <xref:System.TimeSpan> that specifies the timeout value for the message that gets the security token."}]},{"pos":[11345,11467],"content":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous close operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous close operation.","pos":[0,122],"source":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous close operation."}]},{"pos":[11529,11651],"content":"An object, specified by the application, that contains state information associated with the asynchronous close operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous close operation.","pos":[0,122]}]},{"pos":[11715,11795],"content":"The <xref:System.IAsyncResult> that references the asynchronous close operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous close operation.","pos":[0,80],"source":"The <xref:System.IAsyncResult> that references the asynchronous close operation."}]},{"pos":[12572,12629],"content":"Begins an asynchronous operation to get a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins an asynchronous operation to get a security token.","pos":[0,57]}]},{"pos":[12642,13204],"content":"When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the BeginGetTokenCore method, unless you must provide your own asynchronous implementation.       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A> method calls the BeginGetTokenCore method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the BeginGetTokenCore method, unless you must provide your own asynchronous implementation.       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A> method calls the BeginGetTokenCore method.","pos":[0,560],"nodes":[{"content":"When you inherit from the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; class you are not required to override the asynchronous methods, as the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; base class provides asynchronous support based upon the synchronous methods.","pos":[0,294],"source":"When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods."},{"content":"Therefore, you are not required to override the BeginGetTokenCore method, unless you must provide your own asynchronous implementation.","pos":[295,430]},{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A&gt; method calls the BeginGetTokenCore method.","pos":[437,560],"source":"       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A> method calls the BeginGetTokenCore method."}]}]},{"pos":[13417,13520],"content":"A <xref:System.TimeSpan> that specifies the timeout value for the message that gets the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that gets the security token.","pos":[0,103],"source":"A <xref:System.TimeSpan> that specifies the timeout value for the message that gets the security token."}]},{"pos":[13592,13714],"content":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous close operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous close operation.","pos":[0,122],"source":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous close operation."}]},{"pos":[13776,13898],"content":"An object, specified by the application, that contains state information associated with the asynchronous close operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous close operation.","pos":[0,122]}]},{"pos":[13962,14036],"content":"The <xref:System.IAsyncResult> that references the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous operation.","pos":[0,74],"source":"The <xref:System.IAsyncResult> that references the asynchronous operation."}]},{"pos":[14933,14995],"content":"Begins an asynchronous operation that renews a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins an asynchronous operation that renews a security token.","pos":[0,62]}]},{"pos":[15007,15134],"content":"The BeginRenewToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The BeginRenewToken method calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A&gt; method.","pos":[0,127],"source":"The BeginRenewToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A> method."}]},{"pos":[15393,15498],"content":"A <xref:System.TimeSpan> that specifies the timeout value for the message that renews the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that renews the security token.","pos":[0,105],"source":"A <xref:System.TimeSpan> that specifies the timeout value for the message that renews the security token."}]},{"pos":[15599,15675],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to renew.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to renew."},{"pos":[15747,15869],"content":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous close operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous close operation.","pos":[0,122],"source":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous close operation."}]},{"pos":[15931,16053],"content":"An object, specified by the application, that contains state information associated with the asynchronous close operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous close operation.","pos":[0,122]}]},{"pos":[16117,16191],"content":"The <xref:System.IAsyncResult> that references the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous operation.","pos":[0,74],"source":"The <xref:System.IAsyncResult> that references the asynchronous operation."}]},{"pos":[17106,17168],"content":"Begins an asynchronous operation that renews a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins an asynchronous operation that renews a security token.","pos":[0,62]}]},{"pos":[17181,17749],"content":"When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the BeginRenewTokenCore method, unless you must provide your own asynchronous implementation.       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A> method calls the BeginRenewTokenCore method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the BeginRenewTokenCore method, unless you must provide your own asynchronous implementation.       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A> method calls the BeginRenewTokenCore method.","pos":[0,566],"nodes":[{"content":"When you inherit from the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; class you are not required to override the asynchronous methods, as the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; base class provides asynchronous support based upon the synchronous methods.","pos":[0,294],"source":"When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods."},{"content":"Therefore, you are not required to override the BeginRenewTokenCore method, unless you must provide your own asynchronous implementation.","pos":[295,432]},{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A&gt; method calls the BeginRenewTokenCore method.","pos":[439,566],"source":"       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A> method calls the BeginRenewTokenCore method."}]}]},{"pos":[18024,18129],"content":"A <xref:System.TimeSpan> that specifies the timeout value for the message that renews the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that renews the security token.","pos":[0,105],"source":"A <xref:System.TimeSpan> that specifies the timeout value for the message that renews the security token."}]},{"pos":[18230,18306],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to renew.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to renew."},{"pos":[18378,18500],"content":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous close operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.AsyncCallback&gt; delegate that receives notification of the completion of the asynchronous close operation.","pos":[0,122],"source":"The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous close operation."}]},{"pos":[18562,18684],"content":"An object, specified by the application, that contains state information associated with the asynchronous close operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous close operation.","pos":[0,122]}]},{"pos":[18748,18822],"content":"The <xref:System.IAsyncResult> that references the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that references the asynchronous operation.","pos":[0,74],"source":"The <xref:System.IAsyncResult> that references the asynchronous operation."}]},{"pos":[19568,19593],"content":"Cancels a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Cancels a security token.","pos":[0,25]}]},{"pos":[19606,19883],"content":"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.       The CancelToken method calls <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.       The CancelToken method calls <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A> method.","pos":[0,275],"nodes":[{"content":"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.","pos":[0,153]},{"content":"The CancelToken method calls &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A&gt; method.","pos":[160,275],"source":"       The CancelToken method calls <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A> method."}]}]},{"pos":[20082,20188],"content":"A <xref:System.TimeSpan> that specifies the timeout value for the message that cancels the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that cancels the security token.","pos":[0,106],"source":"A <xref:System.TimeSpan> that specifies the timeout value for the message that cancels the security token."}]},{"pos":[20278,20355],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to cancel.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to cancel."},{"pos":[21113,21138],"content":"Cancels a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Cancels a security token.","pos":[0,25]}]},{"pos":[21151,21636],"content":"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> method calls CancelTokenCore method.       When the CancelTokenCore method is overridden and the security token passed into the token parameter cannot be canceled, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> method calls CancelTokenCore method.       When the CancelTokenCore method is overridden and the security token passed into the token parameter cannot be canceled, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception.","pos":[0,481],"nodes":[{"content":"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.","pos":[0,153]},{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A&gt; method calls CancelTokenCore method.","pos":[160,275],"source":"       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> method calls CancelTokenCore method."},{"content":"When the CancelTokenCore method is overridden and the security token passed into the token parameter cannot be canceled, throw the &lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt; exception.","pos":[282,481],"source":"       When the CancelTokenCore method is overridden and the security token passed into the token parameter cannot be canceled, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception."}]}]},{"pos":[21850,21956],"content":"A <xref:System.TimeSpan> that specifies the timeout value for the message that cancels the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that cancels the security token.","pos":[0,106],"source":"A <xref:System.TimeSpan> that specifies the timeout value for the message that cancels the security token."}]},{"pos":[22046,22123],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to cancel.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to cancel."},{"pos":[22774,22837],"content":"Completes an asynchronous operation to cancel a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Completes an asynchronous operation to cancel a security token.","pos":[0,63]}]},{"pos":[22850,23133],"content":"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.       The EndCancelToken method calls <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.       The EndCancelToken method calls <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A> method.","pos":[0,281],"nodes":[{"content":"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.","pos":[0,153]},{"content":"The EndCancelToken method calls &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A&gt; method.","pos":[160,281],"source":"       The EndCancelToken method calls <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A> method."}]}]},{"pos":[23292,23442],"content":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*&gt; method.","pos":[0,150],"source":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*> method."}]},{"pos":[24112,24175],"content":"Completes an asynchronous operation to cancel a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Completes an asynchronous operation to cancel a security token.","pos":[0,63]}]},{"pos":[24188,24911],"content":"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.       When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the EndCancelTokenCore method, unless you must provide your own asynchronous implementation.       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A> method calls EndCancelTokenCore method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.       When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the EndCancelTokenCore method, unless you must provide your own asynchronous implementation.       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A> method calls EndCancelTokenCore method.","pos":[0,719],"nodes":[{"content":"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.","pos":[0,153]},{"content":"When you inherit from the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; class you are not required to override the asynchronous methods, as the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; base class provides asynchronous support based upon the synchronous methods.","pos":[160,454],"source":"       When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods."},{"content":"Therefore, you are not required to override the EndCancelTokenCore method, unless you must provide your own asynchronous implementation.","pos":[455,591]},{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A&gt; method calls EndCancelTokenCore method.","pos":[598,719],"source":"       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A> method calls EndCancelTokenCore method."}]}]},{"pos":[25085,25239],"content":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*&gt; method.","pos":[0,154],"source":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*> method."}]},{"pos":[25878,25938],"content":"Completes an asynchronous operation to get a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Completes an asynchronous operation to get a security token.","pos":[0,60]}]},{"pos":[25950,26069],"content":"The EndGetToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The EndGetToken method calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A&gt; method.","pos":[0,119],"source":"The EndGetToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A> method."}]},{"pos":[26261,26408],"content":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*&gt; method.","pos":[0,147],"source":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*> method."}]},{"pos":[26494,26596],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the security token."},{"pos":[27248,27308],"content":"Completes an asynchronous operation to get a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Completes an asynchronous operation to get a security token.","pos":[0,60]}]},{"pos":[27321,27877],"content":"When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the EndGetTokenCore method, unless you must provide your own asynchronous implementation.       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A> method calls the EndGetTokenCore method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the EndGetTokenCore method, unless you must provide your own asynchronous implementation.       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A> method calls the EndGetTokenCore method.","pos":[0,554],"nodes":[{"content":"When you inherit from the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; class you are not required to override the asynchronous methods, as the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; base class provides asynchronous support based upon the synchronous methods.","pos":[0,294],"source":"When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods."},{"content":"Therefore, you are not required to override the EndGetTokenCore method, unless you must provide your own asynchronous implementation.","pos":[295,428]},{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A&gt; method calls the EndGetTokenCore method.","pos":[435,554],"source":"       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A> method calls the EndGetTokenCore method."}]}]},{"pos":[28085,28236],"content":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*&gt; method.","pos":[0,151],"source":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*> method."}]},{"pos":[28322,28424],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the security token."},{"pos":[29070,29132],"content":"Completes an asynchronous operation to renew a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Completes an asynchronous operation to renew a security token.","pos":[0,62]}]},{"pos":[29144,29267],"content":"The EndRenewToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The EndRenewToken method calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A&gt; method.","pos":[0,123],"source":"The EndRenewToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A> method."}]},{"pos":[29461,29610],"content":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*&gt; method.","pos":[0,149],"source":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*> method."}]},{"pos":[29696,29814],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token that is renewed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the security token that is renewed."},{"pos":[30478,30542],"content":"Completes an asynchronous operation to renew the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Completes an asynchronous operation to renew the security token.","pos":[0,64]}]},{"pos":[30555,31117],"content":"When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the EndRenewTokenCore method, unless you must provide your own asynchronous implementation.       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A> method calls the EndRenewTokenCore method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the EndRenewTokenCore method, unless you must provide your own asynchronous implementation.       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A> method calls the EndRenewTokenCore method.","pos":[0,560],"nodes":[{"content":"When you inherit from the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; class you are not required to override the asynchronous methods, as the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; base class provides asynchronous support based upon the synchronous methods.","pos":[0,294],"source":"When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods."},{"content":"Therefore, you are not required to override the EndRenewTokenCore method, unless you must provide your own asynchronous implementation.","pos":[295,430]},{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A&gt; method calls the EndRenewTokenCore method.","pos":[437,560],"source":"       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A> method calls the EndRenewTokenCore method."}]}]},{"pos":[31327,31480],"content":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; that is returned by a call to the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*&gt; method.","pos":[0,153],"source":"The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*> method."}]},{"pos":[31566,31684],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token that is renewed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the security token that is renewed."},{"pos":[32287,32309],"content":"Gets a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a security token.","pos":[0,22]}]},{"pos":[32322,33159],"content":"The GetToken method is called by the <xref:System.ServiceModel.Description.ClientCredentials> class when a client sends a SOAP message and a security token is required.       The GetToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A> method.       In most cases the `timeout` parameter is not used by derived classes of <xref:System.IdentityModel.Selectors.SecurityTokenProvider> such as <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider>. However, sometimes retrieving a security token involves distributed messaging. An example is <xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider> used in a federated service. In these cases the `timeout` parameter is used to avoid exceptions caused by network failures, message loss, and other error conditions.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetToken method is called by the &lt;xref:System.ServiceModel.Description.ClientCredentials&gt; class when a client sends a SOAP message and a security token is required.","pos":[0,168],"source":"The GetToken method is called by the <xref:System.ServiceModel.Description.ClientCredentials> class when a client sends a SOAP message and a security token is required."},{"content":"The GetToken method calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A&gt; method.","pos":[175,288],"source":"       The GetToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A> method."},{"content":"In most cases the <ph id=\"ph1\">`timeout`</ph> parameter is not used by derived classes of &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; such as &lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider&gt;.","pos":[295,503],"source":"       In most cases the `timeout` parameter is not used by derived classes of <xref:System.IdentityModel.Selectors.SecurityTokenProvider> such as <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider>."},{"content":"However, sometimes retrieving a security token involves distributed messaging.","pos":[504,582]},{"content":"An example is &lt;xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider&gt; used in a federated service.","pos":[583,696],"source":" An example is <xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider> used in a federated service."},{"content":"In these cases the <ph id=\"ph1\">`timeout`</ph> parameter is used to avoid exceptions caused by network failures, message loss, and other error conditions.","pos":[697,833],"source":" In these cases the `timeout` parameter is used to avoid exceptions caused by network failures, message loss, and other error conditions."}]},{"pos":[33343,33446],"content":"A <xref:System.TimeSpan> that specifies the timeout value for the message that gets the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that gets the security token.","pos":[0,103],"source":"A <xref:System.TimeSpan> that specifies the timeout value for the message that gets the security token."}]},{"pos":[33532,33641],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token to get.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the security token to get."},{"pos":[34255,34277],"content":"Gets a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a security token.","pos":[0,22]}]},{"pos":[34290,34848],"content":"When the GetTokenCore method is overridden and the security token passed into the token parameter cannot be obtained, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception.       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> method is called by the <xref:System.ServiceModel.Description.ClientCredentials> class when a client sends a SOAP message and a security token is required.       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> method calls the GetTokenCore method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the GetTokenCore method is overridden and the security token passed into the token parameter cannot be obtained, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception.       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> method is called by the <xref:System.ServiceModel.Description.ClientCredentials> class when a client sends a SOAP message and a security token is required.       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> method calls the GetTokenCore method.","pos":[0,554],"nodes":[{"content":"When the GetTokenCore method is overridden and the security token passed into the token parameter cannot be obtained, throw the &lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt; exception.","pos":[0,196],"source":"When the GetTokenCore method is overridden and the security token passed into the token parameter cannot be obtained, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception."},{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A&gt; method is called by the &lt;xref:System.ServiceModel.Description.ClientCredentials&gt; class when a client sends a SOAP message and a security token is required.","pos":[203,434],"source":"       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> method is called by the <xref:System.ServiceModel.Description.ClientCredentials> class when a client sends a SOAP message and a security token is required."},{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A&gt; method calls the GetTokenCore method.","pos":[441,554],"source":"       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> method calls the GetTokenCore method."}]}]},{"pos":[35264,35367],"content":"A <xref:System.TimeSpan> that specifies the timeout value for the message that gets the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that gets the security token.","pos":[0,103],"source":"A <xref:System.TimeSpan> that specifies the timeout value for the message that gets the security token."}]},{"pos":[35453,35562],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token to get.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the security token to get."},{"pos":[36296,36320],"content":"Renews a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Renews a security token.","pos":[0,24]}]},{"pos":[36333,36581],"content":"An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.       The RenewToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.       The RenewToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A> method.","pos":[0,246],"nodes":[{"content":"An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.","pos":[0,122]},{"content":"The RenewToken method calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A&gt; method.","pos":[129,246],"source":"       The RenewToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A> method."}]}]},{"pos":[36827,36932],"content":"A <xref:System.TimeSpan> that specifies the timeout value for the message that renews the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that renews the security token.","pos":[0,105],"source":"A <xref:System.TimeSpan> that specifies the timeout value for the message that renews the security token."}]},{"pos":[37033,37109],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to renew.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to renew."},{"pos":[37195,37313],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token that is renewed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the security token that is renewed."},{"pos":[38065,38089],"content":"Renews a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Renews a security token.","pos":[0,24]}]},{"pos":[38102,38556],"content":"An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.       When the RenewTokenCore method is overridden and the security token passed into the token parameter cannot be renewed, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception.       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> method calls the RenewTokenCore method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.       When the RenewTokenCore method is overridden and the security token passed into the token parameter cannot be renewed, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception.       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> method calls the RenewTokenCore method.","pos":[0,450],"nodes":[{"content":"An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.","pos":[0,122]},{"content":"When the RenewTokenCore method is overridden and the security token passed into the token parameter cannot be renewed, throw the &lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt; exception.","pos":[129,326],"source":"       When the RenewTokenCore method is overridden and the security token passed into the token parameter cannot be renewed, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception."},{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A&gt; method calls the RenewTokenCore method.","pos":[333,450],"source":"       The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> method calls the RenewTokenCore method."}]}]},{"pos":[38817,38922],"content":"A <xref:System.TimeSpan> that specifies the timeout value for the message that renews the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.TimeSpan&gt; that specifies the timeout value for the message that renews the security token.","pos":[0,105],"source":"A <xref:System.TimeSpan> that specifies the timeout value for the message that renews the security token."}]},{"pos":[39023,39099],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to renew.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to renew."},{"pos":[39185,39303],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the security token that is renewed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the security token that is renewed."},{"pos":[39926,39998],"content":"Gets a value that indicates whether the security token can be cancelled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the security token can be cancelled.","pos":[0,72]}]},{"pos":[40010,40163],"content":"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.","pos":[0,153]}]},{"pos":[40300,40554],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the security token can be cancelled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the security token can be cancelled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,175],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the security token can be cancelled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[176,254],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[41163,41231],"content":"Gets a value that indicates whether the security token is renewable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the security token is renewable.","pos":[0,68]}]},{"pos":[41243,41365],"content":"An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.","pos":[0,122]}]},{"pos":[41497,41749],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the security token can be renewed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the security token can be renewed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,173],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the security token can be renewed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[174,252],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider\n  id: SecurityTokenProvider\n  children:\n  - System.IdentityModel.Selectors.SecurityTokenProvider.#ctor\n  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)\n  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)\n  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)\n  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)\n  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)\n  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)\n  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)\n  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)\n  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)\n  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)\n  - System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)\n  - System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)\n  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation\n  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal\n  langs:\n  - csharp\n  name: SecurityTokenProvider\n  nameWithType: SecurityTokenProvider\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider\n  type: Class\n  summary: Represents a security token provider that handles security tokens for a SOAP message sender.\n  remarks: \"Use the SecurityTokenProvider class when custom security tokens are required. The role of a security token provider is to get a security token when a SOAP message is sent by a client and a security token is used to authenticate the client or to protect the SOAP message. Specifically, the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> method is called to get a security token. The security token provider can also be called to cancel and renew a security using the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> methods.  \\n  \\n Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenManager> class implement the <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A> method to determine which security token provider is required for a given security token.  \\n  \\n The <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> and <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> classes provide the default implementations for built-in security token types. For custom security token scenarios, you must derive a class from one of the <xref:System.IdentityModel.Selectors.SecurityTokenManager>, <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>, or <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> classes and provide the functionality to create the security token provider, security token authenticator, and security token serializer for the custom security token. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] creating a custom token, see [How to: Create a Custom Token](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - >-\n    [!code-vb[SecurityTokenProvider#0](~/add/codesnippet/visualbasic/t-system.identitymodel.s_9_1.vb)]\n     [!code-cs[SecurityTokenProvider#0](~/add/codesnippet/csharp/t-system.identitymodel.s_9_1.cs)]\n  syntax:\n    content: public abstract class SecurityTokenProvider\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: SecurityTokenProvider()\n  nameWithType: SecurityTokenProvider.SecurityTokenProvider()\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenProvider()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.SecurityTokenProvider\"></xref> class.\n  syntax:\n    content: protected SecurityTokenProvider ();\n    parameters: []\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)\n  id: BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)\n  nameWithType: SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Begins an asynchronous operation to cancel a security token.\n  remarks: A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.\n  syntax:\n    content: public IAsyncResult BeginCancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that specifies the timeout value for the message that cancels the security token.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to cancel.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous close operation.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous close operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous cancel operation.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)\n  id: BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)\n  nameWithType: SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Begins an asynchronous operation to cancel a security token.\n  remarks: A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.\n  syntax:\n    content: protected virtual IAsyncResult BeginCancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that specifies the timeout value for the message that cancels the security token.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to cancel.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous close operation.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous close operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous cancel operation.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: BeginGetToken(TimeSpan,AsyncCallback,Object)\n  nameWithType: SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Begins an asynchronous operation to get a security token.\n  remarks: The BeginGetToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A> method.\n  syntax:\n    content: public IAsyncResult BeginGetToken (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that specifies the timeout value for the message that gets the security token.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous close operation.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous close operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous close operation.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: BeginGetTokenCore(TimeSpan,AsyncCallback,Object)\n  nameWithType: SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Begins an asynchronous operation to get a security token.\n  remarks: \"When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the BeginGetTokenCore method, unless you must provide your own asynchronous implementation.  \\n  \\n The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A> method calls the BeginGetTokenCore method.\"\n  syntax:\n    content: protected virtual IAsyncResult BeginGetTokenCore (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that specifies the timeout value for the message that gets the security token.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous close operation.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous close operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous operation.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)\n  id: BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)\n  nameWithType: SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Begins an asynchronous operation that renews a security token.\n  remarks: The BeginRenewToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A> method.\n  syntax:\n    content: public IAsyncResult BeginRenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that specifies the timeout value for the message that renews the security token.\n    - id: tokenToBeRenewed\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to renew.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous close operation.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous close operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous operation.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)\n  id: BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)\n  nameWithType: SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Begins an asynchronous operation that renews a security token.\n  remarks: \"When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the BeginRenewTokenCore method, unless you must provide your own asynchronous implementation.  \\n  \\n The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A> method calls the BeginRenewTokenCore method.\"\n  syntax:\n    content: protected virtual IAsyncResult BeginRenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that specifies the timeout value for the message that renews the security token.\n    - id: tokenToBeRenewed\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to renew.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref:System.AsyncCallback> delegate that receives notification of the completion of the asynchronous close operation.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous close operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that references the asynchronous operation.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)\n  id: CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: CancelToken(TimeSpan,SecurityToken)\n  nameWithType: SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Cancels a security token.\n  remarks: \"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.  \\n  \\n The CancelToken method calls <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A> method.\"\n  syntax:\n    content: public void CancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that specifies the timeout value for the message that cancels the security token.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to cancel.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)\n  id: CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: CancelTokenCore(TimeSpan,SecurityToken)\n  nameWithType: SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Cancels a security token.\n  remarks: \"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.  \\n  \\n The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> method calls CancelTokenCore method.  \\n  \\n When the CancelTokenCore method is overridden and the security token passed into the token parameter cannot be canceled, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception.\"\n  syntax:\n    content: protected virtual void CancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that specifies the timeout value for the message that cancels the security token.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to cancel.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)\n  id: EndCancelToken(System.IAsyncResult)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: EndCancelToken(IAsyncResult)\n  nameWithType: SecurityTokenProvider.EndCancelToken(IAsyncResult)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Completes an asynchronous operation to cancel a security token.\n  remarks: \"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.  \\n  \\n The EndCancelToken method calls <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A> method.\"\n  syntax:\n    content: public void EndCancelToken (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*> method.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)\n  id: EndCancelTokenCore(System.IAsyncResult)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: EndCancelTokenCore(IAsyncResult)\n  nameWithType: SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Completes an asynchronous operation to cancel a security token.\n  remarks: \"A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.  \\n  \\n When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the EndCancelTokenCore method, unless you must provide your own asynchronous implementation.  \\n  \\n The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A> method calls EndCancelTokenCore method.\"\n  syntax:\n    content: protected virtual void EndCancelTokenCore (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*> method.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)\n  id: EndGetToken(System.IAsyncResult)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: EndGetToken(IAsyncResult)\n  nameWithType: SecurityTokenProvider.EndGetToken(IAsyncResult)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Completes an asynchronous operation to get a security token.\n  remarks: The EndGetToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A> method.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityToken EndGetToken (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*> method.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the security token.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)\n  id: EndGetTokenCore(System.IAsyncResult)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: EndGetTokenCore(IAsyncResult)\n  nameWithType: SecurityTokenProvider.EndGetTokenCore(IAsyncResult)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Completes an asynchronous operation to get a security token.\n  remarks: \"When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the EndGetTokenCore method, unless you must provide your own asynchronous implementation.  \\n  \\n The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A> method calls the EndGetTokenCore method.\"\n  syntax:\n    content: protected virtual System.IdentityModel.Tokens.SecurityToken EndGetTokenCore (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*> method.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the security token.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)\n  id: EndRenewToken(System.IAsyncResult)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: EndRenewToken(IAsyncResult)\n  nameWithType: SecurityTokenProvider.EndRenewToken(IAsyncResult)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Completes an asynchronous operation to renew a security token.\n  remarks: The EndRenewToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A> method.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityToken EndRenewToken (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*> method.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the security token that is renewed.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)\n  id: EndRenewTokenCore(System.IAsyncResult)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: EndRenewTokenCore(IAsyncResult)\n  nameWithType: SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Completes an asynchronous operation to renew the security token.\n  remarks: \"When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the EndRenewTokenCore method, unless you must provide your own asynchronous implementation.  \\n  \\n The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A> method calls the EndRenewTokenCore method.\"\n  syntax:\n    content: protected virtual System.IdentityModel.Tokens.SecurityToken EndRenewTokenCore (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> that is returned by a call to the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*> method.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the security token that is renewed.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)\n  id: GetToken(System.TimeSpan)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: GetToken(TimeSpan)\n  nameWithType: SecurityTokenProvider.GetToken(TimeSpan)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(TimeSpan)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets a security token.\n  remarks: \"The GetToken method is called by the <xref:System.ServiceModel.Description.ClientCredentials> class when a client sends a SOAP message and a security token is required.  \\n  \\n The GetToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A> method.  \\n  \\n In most cases the `timeout` parameter is not used by derived classes of <xref:System.IdentityModel.Selectors.SecurityTokenProvider> such as <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider>. However, sometimes retrieving a security token involves distributed messaging. An example is <xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider> used in a federated service. In these cases the `timeout` parameter is used to avoid exceptions caused by network failures, message loss, and other error conditions.\"\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityToken GetToken (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that specifies the timeout value for the message that gets the security token.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the security token to get.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)\n  id: GetTokenCore(System.TimeSpan)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: GetTokenCore(TimeSpan)\n  nameWithType: SecurityTokenProvider.GetTokenCore(TimeSpan)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(TimeSpan)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets a security token.\n  remarks: \"When the GetTokenCore method is overridden and the security token passed into the token parameter cannot be obtained, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception.  \\n  \\n The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> method is called by the <xref:System.ServiceModel.Description.ClientCredentials> class when a client sends a SOAP message and a security token is required.  \\n  \\n The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> method calls the GetTokenCore method.\"\n  example:\n  - >-\n    [!code-vb[SecurityTokenProvider#1](~/add/codesnippet/visualbasic/501effc0-dded-4b3b-893a-_1.vb)]\n     [!code-cs[SecurityTokenProvider#1](~/add/codesnippet/csharp/501effc0-dded-4b3b-893a-_1.cs)]\n  syntax:\n    content: protected abstract System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that specifies the timeout value for the message that gets the security token.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the security token to get.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)\n  id: RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: RenewToken(TimeSpan,SecurityToken)\n  nameWithType: SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Renews a security token.\n  remarks: \"An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.  \\n  \\n The RenewToken method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A> method.\"\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityToken RenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that specifies the timeout value for the message that renews the security token.\n    - id: tokenToBeRenewed\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to renew.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the security token that is renewed.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)\n  id: RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: RenewTokenCore(TimeSpan,SecurityToken)\n  nameWithType: SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Renews a security token.\n  remarks: \"An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.  \\n  \\n When the RenewTokenCore method is overridden and the security token passed into the token parameter cannot be renewed, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception.  \\n  \\n The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> method calls the RenewTokenCore method.\"\n  syntax:\n    content: protected virtual System.IdentityModel.Tokens.SecurityToken RenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: A <xref:System.TimeSpan> that specifies the timeout value for the message that renews the security token.\n    - id: tokenToBeRenewed\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to renew.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the security token that is renewed.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation\n  id: SupportsTokenCancellation\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: SupportsTokenCancellation\n  nameWithType: SecurityTokenProvider.SupportsTokenCancellation\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets a value that indicates whether the security token can be cancelled.\n  remarks: A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.\n  syntax:\n    content: public virtual bool SupportsTokenCancellation { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the security token can be cancelled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal\n  id: SupportsTokenRenewal\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  langs:\n  - csharp\n  name: SupportsTokenRenewal\n  nameWithType: SecurityTokenProvider.SupportsTokenRenewal\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets a value that indicates whether the security token is renewable.\n  remarks: An issued security token that is renewable allows a client to renew it when the security token is about to or has expired.\n  syntax:\n    content: public virtual bool SupportsTokenRenewal { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the security token can be renewed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: SecurityTokenProvider()\n  nameWithType: SecurityTokenProvider.SecurityTokenProvider()\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenProvider()\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)\n  nameWithType: SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)\n  nameWithType: SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: BeginGetToken(TimeSpan,AsyncCallback,Object)\n  nameWithType: SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: BeginGetTokenCore(TimeSpan,AsyncCallback,Object)\n  nameWithType: SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)\n  nameWithType: SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)\n  nameWithType: SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: CancelToken(TimeSpan,SecurityToken)\n  nameWithType: SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: CancelTokenCore(TimeSpan,SecurityToken)\n  nameWithType: SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: EndCancelToken(IAsyncResult)\n  nameWithType: SecurityTokenProvider.EndCancelToken(IAsyncResult)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(IAsyncResult)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: EndCancelTokenCore(IAsyncResult)\n  nameWithType: SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: EndGetToken(IAsyncResult)\n  nameWithType: SecurityTokenProvider.EndGetToken(IAsyncResult)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(IAsyncResult)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: EndGetTokenCore(IAsyncResult)\n  nameWithType: SecurityTokenProvider.EndGetTokenCore(IAsyncResult)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(IAsyncResult)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: EndRenewToken(IAsyncResult)\n  nameWithType: SecurityTokenProvider.EndRenewToken(IAsyncResult)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(IAsyncResult)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: EndRenewTokenCore(IAsyncResult)\n  nameWithType: SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: GetToken(TimeSpan)\n  nameWithType: SecurityTokenProvider.GetToken(TimeSpan)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(TimeSpan)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: GetTokenCore(TimeSpan)\n  nameWithType: SecurityTokenProvider.GetTokenCore(TimeSpan)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(TimeSpan)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: RenewToken(TimeSpan,SecurityToken)\n  nameWithType: SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: RenewTokenCore(TimeSpan,SecurityToken)\n  nameWithType: SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: SupportsTokenCancellation\n  nameWithType: SecurityTokenProvider.SupportsTokenCancellation\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: SupportsTokenRenewal\n  nameWithType: SecurityTokenProvider.SupportsTokenRenewal\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: SecurityTokenProvider\n  nameWithType: SecurityTokenProvider.SecurityTokenProvider\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: BeginCancelToken\n  nameWithType: SecurityTokenProvider.BeginCancelToken\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: BeginCancelTokenCore\n  nameWithType: SecurityTokenProvider.BeginCancelTokenCore\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: BeginGetToken\n  nameWithType: SecurityTokenProvider.BeginGetToken\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: BeginGetTokenCore\n  nameWithType: SecurityTokenProvider.BeginGetTokenCore\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: BeginRenewToken\n  nameWithType: SecurityTokenProvider.BeginRenewToken\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: BeginRenewTokenCore\n  nameWithType: SecurityTokenProvider.BeginRenewTokenCore\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: CancelToken\n  nameWithType: SecurityTokenProvider.CancelToken\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: CancelTokenCore\n  nameWithType: SecurityTokenProvider.CancelTokenCore\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: EndCancelToken\n  nameWithType: SecurityTokenProvider.EndCancelToken\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: EndCancelTokenCore\n  nameWithType: SecurityTokenProvider.EndCancelTokenCore\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: EndGetToken\n  nameWithType: SecurityTokenProvider.EndGetToken\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: EndGetTokenCore\n  nameWithType: SecurityTokenProvider.EndGetTokenCore\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: EndRenewToken\n  nameWithType: SecurityTokenProvider.EndRenewToken\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: EndRenewTokenCore\n  nameWithType: SecurityTokenProvider.EndRenewTokenCore\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: GetToken\n  nameWithType: SecurityTokenProvider.GetToken\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: GetTokenCore\n  nameWithType: SecurityTokenProvider.GetTokenCore\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: RenewToken\n  nameWithType: SecurityTokenProvider.RenewToken\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: RenewTokenCore\n  nameWithType: SecurityTokenProvider.RenewTokenCore\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: SupportsTokenCancellation\n  nameWithType: SecurityTokenProvider.SupportsTokenCancellation\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal*\n  parent: System.IdentityModel.Selectors.SecurityTokenProvider\n  isExternal: false\n  name: SupportsTokenRenewal\n  nameWithType: SecurityTokenProvider.SupportsTokenRenewal\n"}