{"nodes":[{"pos":[1197,1297],"content":"Defines partial-trust access to the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Defines partial-trust access to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> class."},{"pos":[1310,2024],"content":"The TypeDescriptorPermission class defines access to the following methods on the <xref:System.ComponentModel.TypeDescriptor> class.      -   <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>      -   <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>      -   <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>      -   <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TypeDescriptorPermission class defines access to the following methods on the <xref:System.ComponentModel.TypeDescriptor> class.      -   <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>      -   <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>      -   <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>      -   <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>","pos":[0,706],"nodes":[{"content":"The TypeDescriptorPermission class defines access to the following methods on the &lt;xref:System.ComponentModel.TypeDescriptor&gt; class.","pos":[0,132],"source":"The TypeDescriptorPermission class defines access to the following methods on the <xref:System.ComponentModel.TypeDescriptor> class."},{"content":"-   &lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;      -   &lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;      -   &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;      -   &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;","pos":[138,706],"source":"      -   <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>      -   <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>      -   <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>      -   <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>"}]}]},{"pos":[3540,3654],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.TypeDescriptorPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.TypeDescriptorPermission\"></xref> class."},{"pos":[3870,4100],"content":"The <xref href=\"System.Security.Permissions.PermissionState\"></xref> to request. Only <xref href=\"System.Security.Permissions.PermissionState\"></xref> and <xref href=\"System.Security.Permissions.PermissionState\"></xref> are valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to request.","pos":[0,80],"source":"The <xref href=\"System.Security.Permissions.PermissionState\"></xref> to request."},{"content":"Only <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> are valid.","pos":[81,230],"source":" Only <xref href=\"System.Security.Permissions.PermissionState\"></xref> and <xref href=\"System.Security.Permissions.PermissionState\"></xref> are valid."}]},{"pos":[4281,4482],"content":"<code>state</code> is not a valid permission state. Only <xref href=\"System.Security.Permissions.PermissionState\"></xref> and <xref href=\"System.Security.Permissions.PermissionState\"></xref> are valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;state&lt;/code&gt;</ph> is not a valid permission state.","pos":[0,51],"source":"<code>state</code> is not a valid permission state."},{"content":"Only <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> are valid.","pos":[52,201],"source":" Only <xref href=\"System.Security.Permissions.PermissionState\"></xref> and <xref href=\"System.Security.Permissions.PermissionState\"></xref> are valid."}]},{"pos":[5166,5316],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.TypeDescriptorPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified permission flags.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.TypeDescriptorPermission\"></xref> class with the specified permission flags."},{"pos":[5558,5590],"content":"The permission flags to request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The permission flags to request.","pos":[0,32]}]},{"pos":[6089,6197],"content":"When implemented by a derived class, creates and returns an identical copy of the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented by a derived class, creates and returns an identical copy of the current permission object.","pos":[0,108]}]},{"pos":[6364,6404],"content":"A copy of the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current permission object.","pos":[0,40]}]},{"pos":[6903,7023],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the type descriptor.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags\"></xref> for the type descriptor."},{"pos":[7233,7340],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the type descriptor.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags\"></xref> for the type descriptor."},{"pos":[7965,8076],"content":"When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.","pos":[0,111]}]},{"pos":[8285,8344],"content":"The XML encoding to use to reconstruct the security object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML encoding to use to reconstruct the security object.","pos":[0,59]}]},{"pos":[8961,9111],"content":"When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,150]}]},{"pos":[9319,9428],"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","pos":[0,109],"nodes":[{"content":"A permission to intersect with the current permission.","pos":[0,54]},{"content":"It must be of the same type as the current permission.","pos":[55,109]}]}]},{"pos":[9500,9719],"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the intersection of the current permission and the specified permission.","pos":[0,105]},{"content":"This new permission is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the intersection is empty.","pos":[106,219],"source":" This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty."}]},{"pos":[10343,10462],"content":"When implemented by a derived class, determines whether the current permission is a subset of the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented by a derived class, determines whether the current permission is a subset of the specified permission.","pos":[0,119]}]},{"pos":[10648,10778],"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","pos":[0,130],"nodes":[{"content":"A permission that is to be tested for the subset relationship.","pos":[0,62]},{"content":"This permission must be of the same type as the current permission.","pos":[63,130]}]}]},{"pos":[10837,11039],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission is a subset of the specified permission; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11593,11691],"content":"Gets a value that indicates whether the type descriptor may be called from partially trusted code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the type descriptor may be called from partially trusted code.","pos":[0,98]}]},{"pos":[11823,12131],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Security.Permissions.TypeDescriptorPermission.Flags*&gt; property is set to <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Security.Permissions.TypeDescriptorPermission.Flags*> property is set to <xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12644,12749],"content":"When overridden in a derived class, creates an XML encoding of the security object and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, creates an XML encoding of the security object and its current state.","pos":[0,105]}]},{"pos":[12925,12997],"content":"An XML encoding of the security object, including any state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML encoding of the security object, including any state information.","pos":[0,72]}]},{"pos":[13592,13722],"content":"When overridden in a derived class, creates a permission that is the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, creates a permission that is the union of the current permission and the specified permission.","pos":[0,130]}]},{"pos":[13926,14033],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]},{"pos":[14105,14203],"content":"A new permission that represents the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.TypeDescriptorPermission\n  id: TypeDescriptorPermission\n  children:\n  - System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)\n  - System.Security.Permissions.TypeDescriptorPermission.Copy\n  - System.Security.Permissions.TypeDescriptorPermission.Flags\n  - System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted\n  - System.Security.Permissions.TypeDescriptorPermission.ToXml\n  - System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: TypeDescriptorPermission\n  nameWithType: TypeDescriptorPermission\n  fullName: System.Security.Permissions.TypeDescriptorPermission\n  type: Class\n  summary: Defines partial-trust access to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> class.\n  remarks: \"The TypeDescriptorPermission class defines access to the following methods on the <xref:System.ComponentModel.TypeDescriptor> class.  \\n  \\n-   <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>  \\n  \\n-   <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>  \\n  \\n-   <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>  \\n  \\n-   <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>\"\n  syntax:\n    content: 'public sealed class TypeDescriptorPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net462\n- uid: System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: TypeDescriptorPermission(PermissionState)\n  nameWithType: TypeDescriptorPermission.TypeDescriptorPermission(PermissionState)\n  fullName: System.Security.Permissions.TypeDescriptorPermission.TypeDescriptorPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.TypeDescriptorPermission\"></xref> class.\n  syntax:\n    content: public TypeDescriptorPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: The <xref href=\"System.Security.Permissions.PermissionState\"></xref> to request. Only <xref href=\"System.Security.Permissions.PermissionState\"></xref> and <xref href=\"System.Security.Permissions.PermissionState\"></xref> are valid.\n  overload: System.Security.Permissions.TypeDescriptorPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>state</code> is not a valid permission state. Only <xref href=\"System.Security.Permissions.PermissionState\"></xref> and <xref href=\"System.Security.Permissions.PermissionState\"></xref> are valid.\n  platform:\n  - net462\n- uid: System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)\n  id: '#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)'\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: TypeDescriptorPermission(TypeDescriptorPermissionFlags)\n  nameWithType: TypeDescriptorPermission.TypeDescriptorPermission(TypeDescriptorPermissionFlags)\n  fullName: System.Security.Permissions.TypeDescriptorPermission.TypeDescriptorPermission(TypeDescriptorPermissionFlags)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.TypeDescriptorPermission\"></xref> class with the specified permission flags.\n  syntax:\n    content: public TypeDescriptorPermission (System.Security.Permissions.TypeDescriptorPermissionFlags flag);\n    parameters:\n    - id: flag\n      type: System.Security.Permissions.TypeDescriptorPermissionFlags\n      description: The permission flags to request.\n  overload: System.Security.Permissions.TypeDescriptorPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.TypeDescriptorPermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: TypeDescriptorPermission.Copy()\n  fullName: System.Security.Permissions.TypeDescriptorPermission.Copy()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: When implemented by a derived class, creates and returns an identical copy of the current permission object.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission object.\n  overload: System.Security.Permissions.TypeDescriptorPermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.TypeDescriptorPermission.Flags\n  id: Flags\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: TypeDescriptorPermission.Flags\n  fullName: System.Security.Permissions.TypeDescriptorPermission.Flags\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Gets or sets the <xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags\"></xref> for the type descriptor.\n  syntax:\n    content: public System.Security.Permissions.TypeDescriptorPermissionFlags Flags { get; set; }\n    return:\n      type: System.Security.Permissions.TypeDescriptorPermissionFlags\n      description: The <xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags\"></xref> for the type descriptor.\n  overload: System.Security.Permissions.TypeDescriptorPermission.Flags*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: TypeDescriptorPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.TypeDescriptorPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the security object.\n  overload: System.Security.Permissions.TypeDescriptorPermission.FromXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: TypeDescriptorPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.TypeDescriptorPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.\n  overload: System.Security.Permissions.TypeDescriptorPermission.Intersect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: TypeDescriptorPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: When implemented by a derived class, determines whether the current permission is a subset of the specified permission.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: TypeDescriptorPermission.IsUnrestricted()\n  fullName: System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Gets a value that indicates whether the type descriptor may be called from partially trusted code.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Security.Permissions.TypeDescriptorPermission.Flags*> property is set to <xref href=\"System.Security.Permissions.TypeDescriptorPermissionFlags\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.TypeDescriptorPermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: TypeDescriptorPermission.ToXml()\n  fullName: System.Security.Permissions.TypeDescriptorPermission.ToXml()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: When overridden in a derived class, creates an XML encoding of the security object and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the security object, including any state information.\n  overload: System.Security.Permissions.TypeDescriptorPermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: TypeDescriptorPermission.Union(IPermission)\n  fullName: System.Security.Permissions.TypeDescriptorPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: When overridden in a derived class, creates a permission that is the union of the current permission and the specified permission.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Security.Permissions.TypeDescriptorPermission.Union*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: TypeDescriptorPermission(PermissionState)\n  nameWithType: TypeDescriptorPermission.TypeDescriptorPermission(PermissionState)\n  fullName: System.Security.Permissions.TypeDescriptorPermission.TypeDescriptorPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: TypeDescriptorPermission(TypeDescriptorPermissionFlags)\n  nameWithType: TypeDescriptorPermission.TypeDescriptorPermission(TypeDescriptorPermissionFlags)\n  fullName: System.Security.Permissions.TypeDescriptorPermission.TypeDescriptorPermission(TypeDescriptorPermissionFlags)\n- uid: System.Security.Permissions.TypeDescriptorPermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: TypeDescriptorPermissionFlags\n  nameWithType: TypeDescriptorPermissionFlags\n  fullName: System.Security.Permissions.TypeDescriptorPermissionFlags\n- uid: System.Security.Permissions.TypeDescriptorPermission.Copy\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: TypeDescriptorPermission.Copy()\n  fullName: System.Security.Permissions.TypeDescriptorPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.TypeDescriptorPermission.Flags\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: Flags\n  nameWithType: TypeDescriptorPermission.Flags\n  fullName: System.Security.Permissions.TypeDescriptorPermission.Flags\n- uid: System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: TypeDescriptorPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.TypeDescriptorPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: TypeDescriptorPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.TypeDescriptorPermission.Intersect(IPermission)\n- uid: System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: TypeDescriptorPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: TypeDescriptorPermission.IsUnrestricted()\n  fullName: System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted()\n- uid: System.Security.Permissions.TypeDescriptorPermission.ToXml\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: TypeDescriptorPermission.ToXml()\n  fullName: System.Security.Permissions.TypeDescriptorPermission.ToXml()\n- uid: System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: TypeDescriptorPermission.Union(IPermission)\n  fullName: System.Security.Permissions.TypeDescriptorPermission.Union(IPermission)\n- uid: System.Security.Permissions.TypeDescriptorPermission.#ctor*\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: TypeDescriptorPermission\n  nameWithType: TypeDescriptorPermission.TypeDescriptorPermission\n- uid: System.Security.Permissions.TypeDescriptorPermission.Copy*\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: Copy\n  nameWithType: TypeDescriptorPermission.Copy\n- uid: System.Security.Permissions.TypeDescriptorPermission.Flags*\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: Flags\n  nameWithType: TypeDescriptorPermission.Flags\n- uid: System.Security.Permissions.TypeDescriptorPermission.FromXml*\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: TypeDescriptorPermission.FromXml\n- uid: System.Security.Permissions.TypeDescriptorPermission.Intersect*\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: TypeDescriptorPermission.Intersect\n- uid: System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf*\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: TypeDescriptorPermission.IsSubsetOf\n- uid: System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted*\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: TypeDescriptorPermission.IsUnrestricted\n- uid: System.Security.Permissions.TypeDescriptorPermission.ToXml*\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: TypeDescriptorPermission.ToXml\n- uid: System.Security.Permissions.TypeDescriptorPermission.Union*\n  parent: System.Security.Permissions.TypeDescriptorPermission\n  isExternal: false\n  name: Union\n  nameWithType: TypeDescriptorPermission.Union\n"}