{"nodes":[{"pos":[10942,11132],"content":"Displays the values of a data source in a table where each column represents a field and each row represents a record. The GridView control enables you to select, sort, and edit these items.","needQuote":true,"needEscape":true,"nodes":[{"content":"Displays the values of a data source in a table where each column represents a field and each row represents a record. The GridView control enables you to select, sort, and edit these items.","pos":[0,190],"nodes":[{"content":"Displays the values of a data source in a table where each column represents a field and each row represents a record.","pos":[0,118]},{"content":"The GridView control enables you to select, sort, and edit these items.","pos":[119,190]}]}]},{"pos":[11145,43442],"content":"In this topic:      -   [Introduction](#introduction)      -   [Column Fields](#column_fields)      -   [Binding to Data](#binding_to_data)      -   [Data Operations](#data_operations)      -   [Customizing the User Interface](#customizing_the_user_interface)      -   [Events](#events)      -   [Accessibility](#accessibility)      -   [Declarative Syntax](#declarative_syntax)      <a name=\"introduction\"></a>    ## Introduction    The GridView control is used to display the values of a data source in a table. Each column represents a field, while each row represents a record. The GridView control supports the following features:      -   Binding to data source controls, such as <xref:System.Web.UI.WebControls.SqlDataSource>.      -   Built-in sort capabilities.      -   Built-in update and delete capabilities.      -   Built-in paging capabilities.      -   Built-in row selection capabilities.      -   Programmatic access to the GridView object model to dynamically set properties, handle events, and so on.      -   Multiple key fields.      -   Multiple data fields for the hyperlink columns.      -   Customizable appearance through themes and styles.      -   To learn about the other data-bound controls that are available in ASP.NET, see [Data-Bound Web Server Controls](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  If you are familiar with the <xref:System.Web.UI.WebControls.DataGrid> control from the .NET Framework version 1.0, the GridView control is the successor to the <xref:System.Web.UI.WebControls.DataGrid> control.      <a name=\"column_fields\"></a>    ## Column Fields    Each column in the GridView control is represented by a <xref:System.Web.UI.WebControls.DataControlField> object. By default, the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property is set to `true`, which creates an <xref:System.Web.UI.WebControls.AutoGeneratedField> object for each field in the data source. Each field is then rendered as a column in the GridView control in the order that each field appears in the data source.       You can also manually control which column fields appear in the GridView control by setting the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property to `false` and then defining your own column field collection. Different column field types determine the behavior of the columns in the control. The following table lists the different column field types that can be used.      |Column field type|Description|   |-----------------------|-----------------|   |<xref:System.Web.UI.WebControls.BoundField>|Displays the value of a field in a data source. This is the default column type of the GridView control.|   |<xref:System.Web.UI.WebControls.ButtonField>|Displays a command button for each item in the GridView control. This enables you to create a column of custom button controls, such as the Add or the Remove button.|   |<xref:System.Web.UI.WebControls.CheckBoxField>|Displays a check box for each item in the GridView control. This column field type is commonly used to display fields with a Boolean value.|   |<xref:System.Web.UI.WebControls.CommandField>|Displays predefined command buttons to perform select, edit, or delete operations.|   |<xref:System.Web.UI.WebControls.HyperLinkField>|Displays the value of a field in a data source as a hyperlink. This column field type enables you to bind a second field to the hyperlink's URL.|   |<xref:System.Web.UI.WebControls.ImageField>|Displays an image for each item in the GridView control.|   |<xref:System.Web.UI.WebControls.TemplateField>|Displays user-defined content for each item in the GridView control according to a specified template. This column field type enables you to create a custom column field.|       To define a column field collection declaratively, first add opening and closing `<Columns>` tags between the opening and closing tags of the GridView control. Next, list the column fields that you want to include between the opening and closing `<Columns>` tags. The columns specified are added to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection in the order listed. The <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection stores all the column fields in the control and enables you to programmatically manage the column fields in the GridView control.       Explicitly declared column fields can be displayed in combination with automatically generated column fields. When both are used, explicitly declared column fields are rendered first, followed by the automatically generated column fields.      > [!NOTE] >  Automatically generated column fields are not added to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection.      <a name=\"binding_to_data\"></a>    ## Binding to Data    The GridView control can be bound to a data source control (such as the <xref:System.Web.UI.WebControls.SqlDataSource> control or <xref:System.Web.UI.WebControls.ObjectDataSource> control) or to any data source collection that implements the <xref:System.Collections.IEnumerable?displayProperty=fullName> interface, such as <xref:System.Data.DataView?displayProperty=fullName>, <xref:System.Collections.ArrayList?displayProperty=fullName>, <xref:System.Collections.Generic.List%601?displayProperty=fullName>, or other collection types. Use one of the following methods to bind the GridView control to the appropriate data source type:      -   To bind to a data source control, set the <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property of the GridView control to the <xref:System.Web.UI.Control.ID%2A> value of the data source control. The GridView control automatically binds to the specified data source control and can take advantage of the data source control's capabilities to perform sorting, updating, deleting, and paging. This is the preferred method to bind to data.      -   To bind to a data source that implements the <xref:System.Collections.IEnumerable?displayProperty=fullName> interface, programmatically set the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> property of the GridView control to the data source and then call the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method. When using this method, the GridView control does not provide built-in sort, update, delete, and paging functionality. You need to provide this functionality by using the appropriate event.       For more information about data binding, see [ASP.NET Data Access Content Map](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2).      > [!NOTE] >  This control can be used to display user input, which might include malicious client script. Check any information that is sent from a client for executable script, SQL statements, or other code before displaying it in your application. Whenever possible, it is strongly recommended that values are HTML-encoded before they are displayed in this control (the <xref:System.Web.UI.WebControls.BoundField> class HTML-encodes values by default). ASP.NET provides an input request validation feature to block script and HTML in user input. Validation server controls are also provided to assess user input. For more information, see [Introduction to the Validation Controls](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190).      <a name=\"data_operations\"></a>    ## Data Operations    The GridView control provides many built-in capabilities that allow the user to sort, update, delete, select, and page through items in the control. When the GridView control is bound to a data source control, the GridView control can take advantage of the data source control's capabilities and provide automatic sort, update, and delete functionality.      > [!NOTE] >  The GridView control can provide support for sorting, updating, and deleting with other types of data sources. However, you will need to provide an appropriate event handler with the implementation for these operations.       Sorting allows the user to sort the items in the GridView control with respect to a specific column by clicking on the column's header. To enable sorting, set the <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> property to `true`.       The automatic updating, deleting, and selection functionalities are enabled when a button in a <xref:System.Web.UI.WebControls.ButtonField> or <xref:System.Web.UI.WebControls.TemplateField> column field, with a command name of \"Edit\", \"Delete\", and \"Select\", respectively, is clicked. The GridView control can automatically add a <xref:System.Web.UI.WebControls.CommandField> column field with an Edit, Delete, or Select button if the <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A>, <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>, or <xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A> property is set to `true`, respectively.      > [!NOTE] >  Inserting records into the data source is not directly supported by the GridView control. However, it is possible to insert records by using the GridView control in conjunction with the `DetailsView` or `FormView` control. For more information, see <xref:System.Web.UI.WebControls.DetailsView> or <xref:System.Web.UI.WebControls.FormView>, respectively.       Instead of displaying all the records in the data source at the same time, the GridView control can automatically break the records up into pages. To enable paging, set the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`.      > [!NOTE] >  The GridView control is re-created on postback based on the information that is stored in <xref:System.Web.UI.PageStatePersister.ViewState%2A>. If the GridView control includes a <xref:System.Web.UI.WebControls.TemplateField> or a <xref:System.Web.UI.WebControls.CommandField> with the <xref:System.Web.UI.WebControls.CommandField.CausesValidation%2A> property set to `true`, then the <xref:System.Web.UI.Page.EnableViewState%2A> property must also be set to `true` to ensure that concurrent data operations, such as updates and deletes, apply to the appropriate row.      <a name=\"customizing_the_user_interface\"></a>    ## Customizing the User Interface    You can customize the appearance of the GridView control by setting the style properties for the different parts of the control. The following table lists the different style properties.      |Style property|Description|   |--------------------|-----------------|   |<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>|The style settings for the alternating data rows in the GridView control. When this property is set, the data rows are displayed alternating between the <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> settings and the <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> settings.|   |<xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>|The style settings for the row being edited in the GridView control.|   |<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>|The style settings for the empty data row displayed in the GridView control when the data source does not contain any records.|   |<xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>|The style settings for the footer row of the GridView control.|   |<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>|The style settings for the header row of the GridView control.|   |<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>|The style settings for the pager row of the GridView control.|   |<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>|The style settings for the data rows in the GridView control. When the <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> property is also set, the data rows are displayed alternating between the <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> settings and the <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> settings.|   |<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>|The style settings for the selected row in the GridView control.|   |<xref:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle%2A>|The style setting for the data column the data is sorted by in the GridView control. When this style is set, the style (for example, highlighted column) is applied to cells when the data is sorted in ascending order.|   |<xref:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle%2A>|The style setting for the data column the data is sorted by in the GridView control. When this style is set, an arrow indicating the data is sorted ascending is placed on the header of the GridView control when the data is sorted in ascending order.|   |<xref:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle%2A>|The style setting for the data column the data is sorted by in the GridView control. When this style is set, the style (for example, highlighted column) is applied to cells when the data is sorted in descending order.|   |<xref:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle%2A>|The style setting for the data column the data is sorted by in the GridView control. When this style is set, an arrow pointing down is placed on the header of the GridView when the data is sorted in descending order.|       You can also show or hide different parts of the control. The following table lists the properties that control which parts are shown or hidden.      |Property|Description|   |--------------|-----------------|   |<xref:System.Web.UI.WebControls.GridView.ShowFooter%2A>|Shows or hides the footer section of the GridView control.|   |<xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>|Shows or hides the header section of the GridView control.|      <a name=\"events\"></a>    ## Events    The GridView control provides several events that you can program against. This enables you to run a custom routine whenever an event occurs. The following table lists the events that are supported by the GridView control.      |Event|Description|   |-----------|-----------------|   |<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>|Occurs when one of the pager buttons is clicked, but after the GridView control handles the paging operation. This event is commonly used when you need to perform a task after the user navigates to a different page in the control.|   |<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>|Occurs when one of the pager buttons is clicked, but before the GridView control handles the paging operation. This event is often used to cancel the paging operation.|   |<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>|Occurs when a row's Cancel button is clicked, but before the GridView control exits edit mode. This event is often used to stop the canceling operation.|   |<xref:System.Web.UI.WebControls.GridView.RowCommand>|Occurs when a button is clicked in the GridView control. This event is often used to perform a task when a button is clicked in the control.|   |<xref:System.Web.UI.WebControls.GridView.RowCreated>|Occurs when a new row is created in the GridView control. This event is often used to modify the contents of a row when the row is created.|   |<xref:System.Web.UI.WebControls.GridView.RowDataBound>|Occurs when a data row is bound to data in the GridView control. This event is often used to modify the contents of a row when the row is bound to data.|   |<xref:System.Web.UI.WebControls.GridView.RowDeleted>|Occurs when a row's Delete button is clicked, but after the GridView control deletes the record from the data source. This event is often used to check the results of the delete operation.|   |<xref:System.Web.UI.WebControls.GridView.RowDeleting>|Occurs when a row's Delete button is clicked, but before the GridView control deletes the record from the data source. This event is often used to cancel the deleting operation.|   |<xref:System.Web.UI.WebControls.GridView.RowEditing>|Occurs when a row's Edit button is clicked, but before the GridView control enters edit mode. This event is often used to cancel the editing operation.|   |<xref:System.Web.UI.WebControls.GridView.RowUpdated>|Occurs when a row's Update button is clicked, but after the GridView control updates the row. This event is often used to check the results of the update operation.|   |<xref:System.Web.UI.WebControls.GridView.RowUpdating>|Occurs when a row's Update button is clicked, but before the GridView control updates the row. This event is often used to cancel the updating operation.|   |<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|Occurs when a row's Select button is clicked, but after the GridView control handles the select operation. This event is often used to perform a task after a row is selected in the control.|   |<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>|Occurs when a row's Select button is clicked, but before the GridView control handles the select operation. This event is often used to cancel the selection operation.|   |<xref:System.Web.UI.WebControls.GridView.Sorted>|Occurs when the hyperlink to sort a column is clicked, but after the GridView control handles the sort operation. This event is commonly used to perform a task after the user clicks a hyperlink to sort a column.|   |<xref:System.Web.UI.WebControls.GridView.Sorting>|Occurs when the hyperlink to sort a column is clicked, but before the GridView control handles the sort operation. This event is often used to cancel the sorting operation or to perform a custom sorting routine.|      <a name=\"accessibility\"></a>    ## Accessibility    For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md).      <a name=\"declarative_syntax\"></a>    ## Declarative Syntax      ```   <asp:GridView       AccessKey=\"string\"       AllowPaging=\"True|False\"       AllowSorting=\"True|False\"       AutoGenerateColumns=\"True|False\"       AutoGenerateDeleteButton=\"True|False\"       AutoGenerateEditButton=\"True|False\"       AutoGenerateSelectButton=\"True|False\"       BackColor=\"color name|#dddddd\"       BackImageUrl=\"uri\"       BorderColor=\"color name|#dddddd\"       BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset\"       BorderWidth=\"size\"       Caption=\"string\"       CaptionAlign=\"NotSet|Top|Bottom|Left|Right\"       CellPadding=\"integer\"       CellSpacing=\"integer\"       CssClass=\"string\"       DataKeyNames=\"string\"       DataMember=\"string\"       DataSource=\"string\"       DataSourceID=\"string\"       EditIndex=\"integer\"       EmptyDataText=\"string\"       Enabled=\"True|False\"       EnableSortingAndPagingCallbacks=\"True|False\"       EnableTheming=\"True|False\"       EnableViewState=\"True|False\"       Font-Bold=\"True|False\"       Font-Italic=\"True|False\"       Font-Names=\"string\"       Font-Overline=\"True|False\"       Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large\"       Font-Strikeout=\"True|False\"       Font-Underline=\"True|False\"       ForeColor=\"color name|#dddddd\"       GridLines=\"None|Horizontal|Vertical|Both\"       Height=\"size\"       HorizontalAlign=\"NotSet|Left|Center|Right|Justify\"       ID=\"string\"       OnDataBinding=\"DataBinding event handler\"       OnDataBound=\"DataBound event handler\"       OnDisposed=\"Disposed event handler\"       OnInit=\"Init event handler\"       OnLoad=\"Load event handler\"       OnPageIndexChanged=\"PageIndexChanged event handler\"       OnPageIndexChanging=\"PageIndexChanging event handler\"       OnPreRender=\"PreRender event handler\"       OnRowCancelingEdit=\"RowCancelingEdit event handler\"       OnRowCommand=\"RowCommand event handler\"       OnRowCreated=\"RowCreated event handler\"       OnRowDataBound=\"RowDataBound event handler\"       OnRowDeleted=\"RowDeleted event handler\"       OnRowDeleting=\"RowDeleting event handler\"       OnRowEditing=\"RowEditing event handler\"       OnRowUpdated=\"RowUpdated event handler\"       OnRowUpdating=\"RowUpdating event handler\"       OnSelectedIndexChanged=\"SelectedIndexChanged event handler\"       OnSelectedIndexChanging=\"SelectedIndexChanging event handler\"       OnSorted=\"Sorted event handler\"       OnSorting=\"Sorting event handler\"       OnUnload=\"Unload event handler\"       PageIndex=\"integer\"       PagerSettings-FirstPageImageUrl=\"uri\"       PagerSettings-FirstPageText=\"string\"       PagerSettings-LastPageImageUrl=\"uri\"       PagerSettings-LastPageText=\"string\"       PagerSettings-Mode=\"NextPrevious|Numeric|NextPreviousFirstLast|           NumericFirstLast\"       PagerSettings-NextPageImageUrl=\"uri\"       PagerSettings-NextPageText=\"string\"       PagerSettings-PageButtonCount=\"integer\"       PagerSettings-Position=\"Bottom|Top|TopAndBottom\"       PagerSettings-PreviousPageImageUrl=\"uri\"       PagerSettings-PreviousPageText=\"string\"       PagerSettings-Visible=\"True|False\"       PageSize=\"integer\"       RowHeaderColumn=\"string\"       runat=\"server\"       SelectedIndex=\"integer\"       ShowFooter=\"True|False\"       ShowHeader=\"True|False\"       SkinID=\"string\"       Style=\"string\"       TabIndex=\"integer\"       ToolTip=\"string\"       UseAccessibleHeader=\"True|False\"       Visible=\"True|False\"       Width=\"size\"   >           <AlternatingRowStyle />           <Columns>                   <asp:BoundField                       AccessibleHeaderText=\"string\"                       ApplyFormatInEditMode=\"True|False\"                       ConvertEmptyStringToNull=\"True|False\"                       DataField=\"string\"                       DataFormatString=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       HtmlEncode=\"True|False\"                       InsertVisible=\"True|False\"                       NullDisplayText=\"string\"                       ReadOnly=\"True|False\"                       ShowHeader=\"True|False\"                       SortExpression=\"string\"                       Visible=\"True|False\"   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:BoundField>                   <asp:ButtonField                       AccessibleHeaderText=\"string\"                       ButtonType=\"Button|Image|Link\"                       CausesValidation=\"True|False\"                       CommandName=\"string\"                       DataTextField=\"string\"                       DataTextFormatString=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       ImageUrl=\"uri\"                       InsertVisible=\"True|False\"                       ShowHeader=\"True|False\"                       SortExpression=\"string\"                       Text=\"string\"                       ValidationGroup=\"string\"                       Visible=\"True|False\"   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:ButtonField>                   <asp:CheckBoxField                       AccessibleHeaderText=\"string\"                       DataField=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       InsertVisible=\"True|False\"                       ReadOnly=\"True|False\"                       ShowHeader=\"True|False\"                       SortExpression=\"string\"                       Text=\"string\"                       Visible=\"True|False\"   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:CheckBoxField>                   <asp:CommandField                       AccessibleHeaderText=\"string\"                       ButtonType=\"Button|Image|Link\"                       CancelImageUrl=\"uri\"                       CancelText=\"string\"                       CausesValidation=\"True|False\"                       DeleteImageUrl=\"uri\"                       DeleteText=\"string\"                       EditImageUrl=\"uri\"                       EditText=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       InsertImageUrl=\"uri\"                       InsertText=\"string\"                       InsertVisible=\"True|False\"                       NewImageUrl=\"uri\"                       NewText=\"string\"                       SelectImageUrl=\"uri\"                       SelectText=\"string\"                       ShowCancelButton=\"True|False\"                       ShowDeleteButton=\"True|False\"                       ShowEditButton=\"True|False\"                       ShowHeader=\"True|False\"                       ShowInsertButton=\"True|False\"                       ShowSelectButton=\"True|False\"                       SortExpression=\"string\"                       UpdateImageUrl=\"uri\"                       UpdateText=\"string\"                       ValidationGroup=\"string\"                       Visible=\"True|False\"   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:CommandField>                   <asp:DynamicField                       AccessibleHeaderText=\"string\"                       ApplyFormatInEditMode=\"True|False\"                       ConvertEmptyStringToNull=\"True|False\"                       DataField=\"string\"                       DataFormatString=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       HtmlEncode=\"True|False\"                       InsertVisible=\"True|False\"                       NullDisplayText=\"string\"                       ShowHeader=\"True|False\"                       UIHint=\"string\"                       Visible=\"True|False\"   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:DynamicField>                   <asp:HyperLinkField                       AccessibleHeaderText=\"string\"                       DataNavigateUrlFields=\"string\"                       DataNavigateUrlFormatString=\"string\"                       DataTextField=\"string\"                       DataTextFormatString=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       InsertVisible=\"True|False\"                       NavigateUrl=\"uri\"                       ShowHeader=\"True|False\"                       SortExpression=\"string\"                       Target=\"string|_blank|_parent|_search|_self|_top\"                       Text=\"string\"                       Visible=\"True|False\"   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:HyperLinkField>                   <asp:ImageField                       AccessibleHeaderText=\"string\"                       AlternateText=\"string\"                       ConvertEmptyStringToNull=\"True|False\"                       DataAlternateTextField=\"string\"                       DataAlternateTextFormatString=\"string\"                       DataImageUrlField=\"string\"                       DataImageUrlFormatString=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       InsertVisible=\"True|False\"                       NullDisplayText=\"string\"                       NullImageUrl=\"uri\"                       ReadOnly=\"True|False\"                       ShowHeader=\"True|False\"                       SortExpression=\"string\"                       Visible=\"True|False\"   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:ImageField>                   <asp:TemplateField                       AccessibleHeaderText=\"string\"                       ConvertEmptyStringToNull=\"True|False\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       InsertVisible=\"True|False\"                       ShowHeader=\"True|False\"                       SortExpression=\"string\"                       Visible=\"True|False\"   >                               <ControlStyle />                               <FooterStyle />                               <HeaderStyle />                               <ItemStyle />                           <AlternatingItemTemplate>                               <!-- child controls -->                           </AlternatingItemTemplate>                           <EditItemTemplate>                               <!-- child controls -->                           </EditItemTemplate>                           <FooterTemplate>                               <!-- child controls -->                           </FooterTemplate>                           <HeaderTemplate>                               <!-- child controls -->                           </HeaderTemplate>                           <InsertItemTemplate>                               <!-- child controls -->                           </InsertItemTemplate>                           <ItemTemplate>                               <!-- child controls -->                           </ItemTemplate>                   </asp:TemplateField>           </Columns>           <EditRowStyle />           <EmptyDataRowStyle />           <EmptyDataTemplate>               <!-- child controls -->           </EmptyDataTemplate>           <FooterStyle />           <HeaderStyle />           <PagerSettings               FirstPageImageUrl=\"uri\"               FirstPageText=\"string\"               LastPageImageUrl=\"uri\"               LastPageText=\"string\"               Mode=\"NextPrevious|Numeric|NextPreviousFirstLast|                   NumericFirstLast\"               NextPageImageUrl=\"uri\"               NextPageText=\"string\"               OnPropertyChanged=\"PropertyChanged event handler\"               PageButtonCount=\"integer\"               Position=\"Bottom|Top|TopAndBottom\"               PreviousPageImageUrl=\"uri\"               PreviousPageText=\"string\"               Visible=\"True|False\"           />           <PagerStyle />           <PagerTemplate>               <!-- child controls -->           </PagerTemplate>           <RowStyle />           <SelectedRowStyle />   </asp:GridView>   ```","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"In this topic:      -   <bpt id=\"p1\">[</bpt>Introduction<ept id=\"p1\">](#introduction)</ept><ph id=\"ph1\">      -   </ph><bpt id=\"p2\">[</bpt>Column Fields<ept id=\"p2\">](#column_fields)</ept><ph id=\"ph2\">      -   </ph><bpt id=\"p3\">[</bpt>Binding to Data<ept id=\"p3\">](#binding_to_data)</ept><ph id=\"ph3\">      -   </ph><bpt id=\"p4\">[</bpt>Data Operations<ept id=\"p4\">](#data_operations)</ept><ph id=\"ph4\">      -   </ph><bpt id=\"p5\">[</bpt>Customizing the User Interface<ept id=\"p5\">](#customizing_the_user_interface)</ept><ph id=\"ph5\">      -   </ph><bpt id=\"p6\">[</bpt>Events<ept id=\"p6\">](#events)</ept><ph id=\"ph6\">      -   </ph><bpt id=\"p7\">[</bpt>Accessibility<ept id=\"p7\">](#accessibility)</ept><ph id=\"ph7\">      -   </ph><bpt id=\"p8\">[</bpt>Declarative Syntax<ept id=\"p8\">](#declarative_syntax)</ept>      <bpt id=\"p9\">&lt;a name=\"introduction\"&gt;</bpt><ept id=\"p9\">&lt;/a&gt;</ept>    ## Introduction    The GridView control is used to display the values of a data source in a table.","pos":[0,513],"source":"In this topic:      -   [Introduction](#introduction)      -   [Column Fields](#column_fields)      -   [Binding to Data](#binding_to_data)      -   [Data Operations](#data_operations)      -   [Customizing the User Interface](#customizing_the_user_interface)      -   [Events](#events)      -   [Accessibility](#accessibility)      -   [Declarative Syntax](#declarative_syntax)      <a name=\"introduction\"></a>    ## Introduction    The GridView control is used to display the values of a data source in a table."},{"content":"Each column represents a field, while each row represents a record.","pos":[514,581]},{"content":"The GridView control supports the following features:      -   Binding to data source controls, such as &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;.","pos":[582,733],"source":" The GridView control supports the following features:      -   Binding to data source controls, such as <xref:System.Web.UI.WebControls.SqlDataSource>."},{"content":"-   Built-in sort capabilities.","pos":[739,770]},{"content":"-   Built-in update and delete capabilities.","pos":[776,820]},{"content":"-   Built-in paging capabilities.","pos":[826,859]},{"content":"-   Built-in row selection capabilities.","pos":[865,905]},{"content":"-   Programmatic access to the GridView object model to dynamically set properties, handle events, and so on.","pos":[911,1020]},{"content":"-   Multiple key fields.","pos":[1026,1050]},{"content":"-   Multiple data fields for the hyperlink columns.","pos":[1056,1107]},{"content":"-   Customizable appearance through themes and styles.","pos":[1113,1167]},{"content":"-   To learn about the other data-bound controls that are available in ASP.NET, see <bpt id=\"p1\">[</bpt>Data-Bound Web Server Controls<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1173,1329],"source":"      -   To learn about the other data-bound controls that are available in ASP.NET, see [Data-Bound Web Server Controls](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If you are familiar with the &lt;xref:System.Web.UI.WebControls.DataGrid&gt; control from the .NET Framework version 1.0, the GridView control is the successor to the &lt;xref:System.Web.UI.WebControls.DataGrid&gt; control.","pos":[1335,1559],"source":"      > [!NOTE] >  If you are familiar with the <xref:System.Web.UI.WebControls.DataGrid> control from the .NET Framework version 1.0, the GridView control is the successor to the <xref:System.Web.UI.WebControls.DataGrid> control."},{"content":"<bpt id=\"p1\">&lt;a name=\"column_fields\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Column Fields    Each column in the GridView control is represented by a &lt;xref:System.Web.UI.WebControls.DataControlField&gt; object.","pos":[1565,1730],"source":"<a name=\"column_fields\"></a>    ## Column Fields    Each column in the GridView control is represented by a <xref:System.Web.UI.WebControls.DataControlField> object."},{"content":"By default, the &lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>, which creates an &lt;xref:System.Web.UI.WebControls.AutoGeneratedField&gt; object for each field in the data source.","pos":[1731,1949],"source":" By default, the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property is set to `true`, which creates an <xref:System.Web.UI.WebControls.AutoGeneratedField> object for each field in the data source."},{"content":"Each field is then rendered as a column in the GridView control in the order that each field appears in the data source.","pos":[1950,2070]},{"content":"You can also manually control which column fields appear in the GridView control by setting the &lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt; property to <ph id=\"ph1\">`false`</ph> and then defining your own column field collection.","pos":[2077,2309],"source":"       You can also manually control which column fields appear in the GridView control by setting the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property to `false` and then defining your own column field collection."},{"content":"Different column field types determine the behavior of the columns in the control.","pos":[2310,2392]},{"content":"The following table lists the different column field types that can be used.","pos":[2393,2469]},{"content":"|Column field type|Description|   |-----------------------|-----------------|   |&lt;xref:System.Web.UI.WebControls.BoundField&gt;|Displays the value of a field in a data source.","pos":[2475,2647],"source":"      |Column field type|Description|   |-----------------------|-----------------|   |<xref:System.Web.UI.WebControls.BoundField>|Displays the value of a field in a data source."},{"content":"This is the default column type of the GridView control.|   |&lt;xref:System.Web.UI.WebControls.ButtonField&gt;|Displays a command button for each item in the GridView control.","pos":[2648,2818],"source":" This is the default column type of the GridView control.|   |<xref:System.Web.UI.WebControls.ButtonField>|Displays a command button for each item in the GridView control."},{"content":"This enables you to create a column of custom button controls, such as the Add or the Remove button.|   |&lt;xref:System.Web.UI.WebControls.CheckBoxField&gt;|Displays a check box for each item in the GridView control.","pos":[2819,3030],"source":" This enables you to create a column of custom button controls, such as the Add or the Remove button.|   |<xref:System.Web.UI.WebControls.CheckBoxField>|Displays a check box for each item in the GridView control."},{"content":"This column field type is commonly used to display fields with a Boolean value.|   |&lt;xref:System.Web.UI.WebControls.CommandField&gt;|Displays predefined command buttons to perform select, edit, or delete operations.|   |&lt;xref:System.Web.UI.WebControls.HyperLinkField&gt;|Displays the value of a field in a data source as a hyperlink.","pos":[3031,3358],"source":" This column field type is commonly used to display fields with a Boolean value.|   |<xref:System.Web.UI.WebControls.CommandField>|Displays predefined command buttons to perform select, edit, or delete operations.|   |<xref:System.Web.UI.WebControls.HyperLinkField>|Displays the value of a field in a data source as a hyperlink."},{"content":"This column field type enables you to bind a second field to the hyperlink's URL.|   |&lt;xref:System.Web.UI.WebControls.ImageField&gt;|Displays an image for each item in the GridView control.|   |&lt;xref:System.Web.UI.WebControls.TemplateField&gt;|Displays user-defined content for each item in the GridView control according to a specified template.","pos":[3359,3699],"source":" This column field type enables you to bind a second field to the hyperlink's URL.|   |<xref:System.Web.UI.WebControls.ImageField>|Displays an image for each item in the GridView control.|   |<xref:System.Web.UI.WebControls.TemplateField>|Displays user-defined content for each item in the GridView control according to a specified template."},{"content":"This column field type enables you to create a custom column field.|       To define a column field collection declaratively, first add opening and closing <ph id=\"ph1\">`&lt;Columns&gt;`</ph> tags between the opening and closing tags of the GridView control.","pos":[3700,3934],"source":" This column field type enables you to create a custom column field.|       To define a column field collection declaratively, first add opening and closing `<Columns>` tags between the opening and closing tags of the GridView control."},{"content":"Next, list the column fields that you want to include between the opening and closing <ph id=\"ph1\">`&lt;Columns&gt;`</ph> tags.","pos":[3935,4038],"source":" Next, list the column fields that you want to include between the opening and closing `<Columns>` tags."},{"content":"The columns specified are added to the &lt;xref:System.Web.UI.WebControls.GridView.Columns%2A&gt; collection in the order listed.","pos":[4039,4162],"source":" The columns specified are added to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection in the order listed."},{"content":"The &lt;xref:System.Web.UI.WebControls.GridView.Columns%2A&gt; collection stores all the column fields in the control and enables you to programmatically manage the column fields in the GridView control.","pos":[4163,4360],"source":" The <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection stores all the column fields in the control and enables you to programmatically manage the column fields in the GridView control."},{"content":"Explicitly declared column fields can be displayed in combination with automatically generated column fields.","pos":[4367,4476]},{"content":"When both are used, explicitly declared column fields are rendered first, followed by the automatically generated column fields.","pos":[4477,4605]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Automatically generated column fields are not added to the &lt;xref:System.Web.UI.WebControls.GridView.Columns%2A&gt; collection.","pos":[4611,4747],"source":"      > [!NOTE] >  Automatically generated column fields are not added to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection."},{"content":"<bpt id=\"p1\">&lt;a name=\"binding_to_data\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Binding to Data    The GridView control can be bound to a data source control (such as the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control or &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control) or to any data source collection that implements the &lt;xref:System.Collections.IEnumerable?displayProperty=fullName&gt; interface, such as &lt;xref:System.Data.DataView?displayProperty=fullName&gt;, &lt;xref:System.Collections.ArrayList?displayProperty=fullName&gt;, &lt;xref:System.Collections.Generic.List%601?displayProperty=fullName&gt;, or other collection types.","pos":[4753,5344],"source":"<a name=\"binding_to_data\"></a>    ## Binding to Data    The GridView control can be bound to a data source control (such as the <xref:System.Web.UI.WebControls.SqlDataSource> control or <xref:System.Web.UI.WebControls.ObjectDataSource> control) or to any data source collection that implements the <xref:System.Collections.IEnumerable?displayProperty=fullName> interface, such as <xref:System.Data.DataView?displayProperty=fullName>, <xref:System.Collections.ArrayList?displayProperty=fullName>, <xref:System.Collections.Generic.List%601?displayProperty=fullName>, or other collection types."},{"content":"Use one of the following methods to bind the GridView control to the appropriate data source type:      -   To bind to a data source control, set the &lt;xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A&gt; property of the GridView control to the &lt;xref:System.Web.UI.Control.ID%2A&gt; value of the data source control.","pos":[5345,5669],"source":" Use one of the following methods to bind the GridView control to the appropriate data source type:      -   To bind to a data source control, set the <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property of the GridView control to the <xref:System.Web.UI.Control.ID%2A> value of the data source control."},{"content":"The GridView control automatically binds to the specified data source control and can take advantage of the data source control's capabilities to perform sorting, updating, deleting, and paging.","pos":[5670,5864]},{"content":"This is the preferred method to bind to data.","pos":[5865,5910]},{"content":"-   To bind to a data source that implements the &lt;xref:System.Collections.IEnumerable?displayProperty=fullName&gt; interface, programmatically set the &lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A&gt; property of the GridView control to the data source and then call the &lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt; method.","pos":[5916,6275],"source":"      -   To bind to a data source that implements the <xref:System.Collections.IEnumerable?displayProperty=fullName> interface, programmatically set the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> property of the GridView control to the data source and then call the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method."},{"content":"When using this method, the GridView control does not provide built-in sort, update, delete, and paging functionality.","pos":[6276,6394]},{"content":"You need to provide this functionality by using the appropriate event.","pos":[6395,6465]},{"content":"For more information about data binding, see <bpt id=\"p1\">[</bpt>ASP.NET Data Access Content Map<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2)</ept>.","pos":[6472,6621],"source":"       For more information about data binding, see [ASP.NET Data Access Content Map](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This control can be used to display user input, which might include malicious client script.","pos":[6627,6732],"source":"      > [!NOTE] >  This control can be used to display user input, which might include malicious client script."},{"content":"Check any information that is sent from a client for executable script, SQL statements, or other code before displaying it in your application.","pos":[6733,6876]},{"content":"Whenever possible, it is strongly recommended that values are HTML-encoded before they are displayed in this control (the &lt;xref:System.Web.UI.WebControls.BoundField&gt; class HTML-encodes values by default).","pos":[6877,7081],"source":" Whenever possible, it is strongly recommended that values are HTML-encoded before they are displayed in this control (the <xref:System.Web.UI.WebControls.BoundField> class HTML-encodes values by default)."},{"content":"ASP.NET provides an input request validation feature to block script and HTML in user input.","pos":[7082,7174]},{"content":"Validation server controls are also provided to assess user input.","pos":[7175,7241]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Introduction to the Validation Controls<ept id=\"p1\">](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)</ept>.","pos":[7242,7380],"source":" For more information, see [Introduction to the Validation Controls](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)."},{"content":"<bpt id=\"p1\">&lt;a name=\"data_operations\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Data Operations    The GridView control provides many built-in capabilities that allow the user to sort, update, delete, select, and page through items in the control.","pos":[7386,7590],"source":"<a name=\"data_operations\"></a>    ## Data Operations    The GridView control provides many built-in capabilities that allow the user to sort, update, delete, select, and page through items in the control."},{"content":"When the GridView control is bound to a data source control, the GridView control can take advantage of the data source control's capabilities and provide automatic sort, update, and delete functionality.","pos":[7591,7795]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The GridView control can provide support for sorting, updating, and deleting with other types of data sources.","pos":[7801,7924],"source":"      > [!NOTE] >  The GridView control can provide support for sorting, updating, and deleting with other types of data sources."},{"content":"However, you will need to provide an appropriate event handler with the implementation for these operations.","pos":[7925,8033]},{"content":"Sorting allows the user to sort the items in the GridView control with respect to a specific column by clicking on the column's header.","pos":[8040,8175]},{"content":"To enable sorting, set the &lt;xref:System.Web.UI.WebControls.GridView.AllowSorting%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[8176,8280],"source":" To enable sorting, set the <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> property to `true`."},{"content":"The automatic updating, deleting, and selection functionalities are enabled when a button in a &lt;xref:System.Web.UI.WebControls.ButtonField&gt; or &lt;xref:System.Web.UI.WebControls.TemplateField&gt; column field, with a command name of \"Edit\", \"Delete\", and \"Select\", respectively, is clicked.","pos":[8287,8571],"source":"       The automatic updating, deleting, and selection functionalities are enabled when a button in a <xref:System.Web.UI.WebControls.ButtonField> or <xref:System.Web.UI.WebControls.TemplateField> column field, with a command name of \"Edit\", \"Delete\", and \"Select\", respectively, is clicked."},{"content":"The GridView control can automatically add a &lt;xref:System.Web.UI.WebControls.CommandField&gt; column field with an Edit, Delete, or Select button if the &lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A&gt;, &lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A&gt;, or &lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>, respectively.","pos":[8572,8975],"source":" The GridView control can automatically add a <xref:System.Web.UI.WebControls.CommandField> column field with an Edit, Delete, or Select button if the <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A>, <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>, or <xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A> property is set to `true`, respectively."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Inserting records into the data source is not directly supported by the GridView control.","pos":[8981,9083],"source":"      > [!NOTE] >  Inserting records into the data source is not directly supported by the GridView control."},{"content":"However, it is possible to insert records by using the GridView control in conjunction with the <ph id=\"ph1\">`DetailsView`</ph> or <ph id=\"ph2\">`FormView`</ph> control.","pos":[9084,9216],"source":" However, it is possible to insert records by using the GridView control in conjunction with the `DetailsView` or `FormView` control."},{"content":"For more information, see &lt;xref:System.Web.UI.WebControls.DetailsView&gt; or &lt;xref:System.Web.UI.WebControls.FormView&gt;, respectively.","pos":[9217,9347],"source":" For more information, see <xref:System.Web.UI.WebControls.DetailsView> or <xref:System.Web.UI.WebControls.FormView>, respectively."},{"content":"Instead of displaying all the records in the data source at the same time, the GridView control can automatically break the records up into pages.","pos":[9354,9500]},{"content":"To enable paging, set the &lt;xref:System.Web.UI.WebControls.GridView.AllowPaging%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[9501,9603],"source":" To enable paging, set the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The GridView control is re-created on postback based on the information that is stored in &lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt;.","pos":[9609,9765],"source":"      > [!NOTE] >  The GridView control is re-created on postback based on the information that is stored in <xref:System.Web.UI.PageStatePersister.ViewState%2A>."},{"content":"If the GridView control includes a &lt;xref:System.Web.UI.WebControls.TemplateField&gt; or a &lt;xref:System.Web.UI.WebControls.CommandField&gt; with the &lt;xref:System.Web.UI.WebControls.CommandField.CausesValidation%2A&gt; property set to <ph id=\"ph1\">`true`</ph>, then the &lt;xref:System.Web.UI.Page.EnableViewState%2A&gt; property must also be set to <ph id=\"ph2\">`true`</ph> to ensure that concurrent data operations, such as updates and deletes, apply to the appropriate row.","pos":[9766,10189],"source":" If the GridView control includes a <xref:System.Web.UI.WebControls.TemplateField> or a <xref:System.Web.UI.WebControls.CommandField> with the <xref:System.Web.UI.WebControls.CommandField.CausesValidation%2A> property set to `true`, then the <xref:System.Web.UI.Page.EnableViewState%2A> property must also be set to `true` to ensure that concurrent data operations, such as updates and deletes, apply to the appropriate row."},{"content":"<bpt id=\"p1\">&lt;a name=\"customizing_the_user_interface\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Customizing the User Interface    You can customize the appearance of the GridView control by setting the style properties for the different parts of the control.","pos":[10195,10409],"source":"<a name=\"customizing_the_user_interface\"></a>    ## Customizing the User Interface    You can customize the appearance of the GridView control by setting the style properties for the different parts of the control."},{"content":"The following table lists the different style properties.","pos":[10410,10467]},{"content":"|Style property|Description|   |--------------------|-----------------|   |&lt;xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A&gt;|The style settings for the alternating data rows in the GridView control.","pos":[10473,10686],"source":"      |Style property|Description|   |--------------------|-----------------|   |<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>|The style settings for the alternating data rows in the GridView control."},{"content":"When this property is set, the data rows are displayed alternating between the &lt;xref:System.Web.UI.WebControls.GridView.RowStyle%2A&gt; settings and the &lt;xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A&gt; settings.|   |&lt;xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A&gt;|The style settings for the row being edited in the GridView control.|   |&lt;xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A&gt;|The style settings for the empty data row displayed in the GridView control when the data source does not contain any records.|   |&lt;xref:System.Web.UI.WebControls.GridView.FooterStyle%2A&gt;|The style settings for the footer row of the GridView control.|   |&lt;xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A&gt;|The style settings for the header row of the GridView control.|   |&lt;xref:System.Web.UI.WebControls.GridView.PagerStyle%2A&gt;|The style settings for the pager row of the GridView control.|   |&lt;xref:System.Web.UI.WebControls.GridView.RowStyle%2A&gt;|The style settings for the data rows in the GridView control.","pos":[10687,11726],"source":" When this property is set, the data rows are displayed alternating between the <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> settings and the <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> settings.|   |<xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>|The style settings for the row being edited in the GridView control.|   |<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>|The style settings for the empty data row displayed in the GridView control when the data source does not contain any records.|   |<xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>|The style settings for the footer row of the GridView control.|   |<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>|The style settings for the header row of the GridView control.|   |<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>|The style settings for the pager row of the GridView control.|   |<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>|The style settings for the data rows in the GridView control."},{"content":"When the &lt;xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A&gt; property is also set, the data rows are displayed alternating between the &lt;xref:System.Web.UI.WebControls.GridView.RowStyle%2A&gt; settings and the &lt;xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A&gt; settings.|   |&lt;xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A&gt;|The style settings for the selected row in the GridView control.|   |&lt;xref:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle%2A&gt;|The style setting for the data column the data is sorted by in the GridView control.","pos":[11727,12310],"source":" When the <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> property is also set, the data rows are displayed alternating between the <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> settings and the <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> settings.|   |<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>|The style settings for the selected row in the GridView control.|   |<xref:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle%2A>|The style setting for the data column the data is sorted by in the GridView control."},{"content":"When this style is set, the style (for example, highlighted column) is applied to cells when the data is sorted in ascending order.|   |&lt;xref:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle%2A&gt;|The style setting for the data column the data is sorted by in the GridView control.","pos":[12311,12603],"source":" When this style is set, the style (for example, highlighted column) is applied to cells when the data is sorted in ascending order.|   |<xref:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle%2A>|The style setting for the data column the data is sorted by in the GridView control."},{"content":"When this style is set, an arrow indicating the data is sorted ascending is placed on the header of the GridView control when the data is sorted in ascending order.|   |&lt;xref:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle%2A&gt;|The style setting for the data column the data is sorted by in the GridView control.","pos":[12604,12928],"source":" When this style is set, an arrow indicating the data is sorted ascending is placed on the header of the GridView control when the data is sorted in ascending order.|   |<xref:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle%2A>|The style setting for the data column the data is sorted by in the GridView control."},{"content":"When this style is set, the style (for example, highlighted column) is applied to cells when the data is sorted in descending order.|   |&lt;xref:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle%2A&gt;|The style setting for the data column the data is sorted by in the GridView control.","pos":[12929,13223],"source":" When this style is set, the style (for example, highlighted column) is applied to cells when the data is sorted in descending order.|   |<xref:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle%2A>|The style setting for the data column the data is sorted by in the GridView control."},{"content":"When this style is set, an arrow pointing down is placed on the header of the GridView when the data is sorted in descending order.|       You can also show or hide different parts of the control.","pos":[13224,13420]},{"content":"The following table lists the properties that control which parts are shown or hidden.","pos":[13421,13507]},{"content":"|Property|Description|   |--------------|-----------------|   |&lt;xref:System.Web.UI.WebControls.GridView.ShowFooter%2A&gt;|Shows or hides the footer section of the GridView control.|   |&lt;xref:System.Web.UI.WebControls.GridView.ShowHeader%2A&gt;|Shows or hides the header section of the GridView control.|      <bpt id=\"p1\">&lt;a name=\"events\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Events    The GridView control provides several events that you can program against.","pos":[13513,13928],"source":"      |Property|Description|   |--------------|-----------------|   |<xref:System.Web.UI.WebControls.GridView.ShowFooter%2A>|Shows or hides the footer section of the GridView control.|   |<xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>|Shows or hides the header section of the GridView control.|      <a name=\"events\"></a>    ## Events    The GridView control provides several events that you can program against."},{"content":"This enables you to run a custom routine whenever an event occurs.","pos":[13929,13995]},{"content":"The following table lists the events that are supported by the GridView control.","pos":[13996,14076]},{"content":"|Event|Description|   |-----------|-----------------|   |&lt;xref:System.Web.UI.WebControls.GridView.PageIndexChanged&gt;|Occurs when one of the pager buttons is clicked, but after the GridView control handles the paging operation.","pos":[14082,14307],"source":"      |Event|Description|   |-----------|-----------------|   |<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>|Occurs when one of the pager buttons is clicked, but after the GridView control handles the paging operation."},{"content":"This event is commonly used when you need to perform a task after the user navigates to a different page in the control.|   |&lt;xref:System.Web.UI.WebControls.GridView.PageIndexChanging&gt;|Occurs when one of the pager buttons is clicked, but before the GridView control handles the paging operation.","pos":[14308,14603],"source":" This event is commonly used when you need to perform a task after the user navigates to a different page in the control.|   |<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>|Occurs when one of the pager buttons is clicked, but before the GridView control handles the paging operation."},{"content":"This event is often used to cancel the paging operation.|   |&lt;xref:System.Web.UI.WebControls.GridView.RowCancelingEdit&gt;|Occurs when a row's Cancel button is clicked, but before the GridView control exits edit mode.","pos":[14604,14818],"source":" This event is often used to cancel the paging operation.|   |<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>|Occurs when a row's Cancel button is clicked, but before the GridView control exits edit mode."},{"content":"This event is often used to stop the canceling operation.|   |&lt;xref:System.Web.UI.WebControls.GridView.RowCommand&gt;|Occurs when a button is clicked in the GridView control.","pos":[14819,14990],"source":" This event is often used to stop the canceling operation.|   |<xref:System.Web.UI.WebControls.GridView.RowCommand>|Occurs when a button is clicked in the GridView control."},{"content":"This event is often used to perform a task when a button is clicked in the control.|   |&lt;xref:System.Web.UI.WebControls.GridView.RowCreated&gt;|Occurs when a new row is created in the GridView control.","pos":[14991,15189],"source":" This event is often used to perform a task when a button is clicked in the control.|   |<xref:System.Web.UI.WebControls.GridView.RowCreated>|Occurs when a new row is created in the GridView control."},{"content":"This event is often used to modify the contents of a row when the row is created.|   |&lt;xref:System.Web.UI.WebControls.GridView.RowDataBound&gt;|Occurs when a data row is bound to data in the GridView control.","pos":[15190,15395],"source":" This event is often used to modify the contents of a row when the row is created.|   |<xref:System.Web.UI.WebControls.GridView.RowDataBound>|Occurs when a data row is bound to data in the GridView control."},{"content":"This event is often used to modify the contents of a row when the row is bound to data.|   |&lt;xref:System.Web.UI.WebControls.GridView.RowDeleted&gt;|Occurs when a row's Delete button is clicked, but after the GridView control deletes the record from the data source.","pos":[15396,15658],"source":" This event is often used to modify the contents of a row when the row is bound to data.|   |<xref:System.Web.UI.WebControls.GridView.RowDeleted>|Occurs when a row's Delete button is clicked, but after the GridView control deletes the record from the data source."},{"content":"This event is often used to check the results of the delete operation.|   |&lt;xref:System.Web.UI.WebControls.GridView.RowDeleting&gt;|Occurs when a row's Delete button is clicked, but before the GridView control deletes the record from the data source.","pos":[15659,15906],"source":" This event is often used to check the results of the delete operation.|   |<xref:System.Web.UI.WebControls.GridView.RowDeleting>|Occurs when a row's Delete button is clicked, but before the GridView control deletes the record from the data source."},{"content":"This event is often used to cancel the deleting operation.|   |&lt;xref:System.Web.UI.WebControls.GridView.RowEditing&gt;|Occurs when a row's Edit button is clicked, but before the GridView control enters edit mode.","pos":[15907,16116],"source":" This event is often used to cancel the deleting operation.|   |<xref:System.Web.UI.WebControls.GridView.RowEditing>|Occurs when a row's Edit button is clicked, but before the GridView control enters edit mode."},{"content":"This event is often used to cancel the editing operation.|   |&lt;xref:System.Web.UI.WebControls.GridView.RowUpdated&gt;|Occurs when a row's Update button is clicked, but after the GridView control updates the row.","pos":[16117,16325],"source":" This event is often used to cancel the editing operation.|   |<xref:System.Web.UI.WebControls.GridView.RowUpdated>|Occurs when a row's Update button is clicked, but after the GridView control updates the row."},{"content":"This event is often used to check the results of the update operation.|   |&lt;xref:System.Web.UI.WebControls.GridView.RowUpdating&gt;|Occurs when a row's Update button is clicked, but before the GridView control updates the row.","pos":[16326,16549],"source":" This event is often used to check the results of the update operation.|   |<xref:System.Web.UI.WebControls.GridView.RowUpdating>|Occurs when a row's Update button is clicked, but before the GridView control updates the row."},{"content":"This event is often used to cancel the updating operation.|   |&lt;xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged&gt;|Occurs when a row's Select button is clicked, but after the GridView control handles the select operation.","pos":[16550,16782],"source":" This event is often used to cancel the updating operation.|   |<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|Occurs when a row's Select button is clicked, but after the GridView control handles the select operation."},{"content":"This event is often used to perform a task after a row is selected in the control.|   |&lt;xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging&gt;|Occurs when a row's Select button is clicked, but before the GridView control handles the select operation.","pos":[16783,17041],"source":" This event is often used to perform a task after a row is selected in the control.|   |<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>|Occurs when a row's Select button is clicked, but before the GridView control handles the select operation."},{"content":"This event is often used to cancel the selection operation.|   |&lt;xref:System.Web.UI.WebControls.GridView.Sorted&gt;|Occurs when the hyperlink to sort a column is clicked, but after the GridView control handles the sort operation.","pos":[17042,17268],"source":" This event is often used to cancel the selection operation.|   |<xref:System.Web.UI.WebControls.GridView.Sorted>|Occurs when the hyperlink to sort a column is clicked, but after the GridView control handles the sort operation."},{"content":"This event is commonly used to perform a task after the user clicks a hyperlink to sort a column.|   |&lt;xref:System.Web.UI.WebControls.GridView.Sorting&gt;|Occurs when the hyperlink to sort a column is clicked, but before the GridView control handles the sort operation.","pos":[17269,17535],"source":" This event is commonly used to perform a task after the user clicks a hyperlink to sort a column.|   |<xref:System.Web.UI.WebControls.GridView.Sorting>|Occurs when the hyperlink to sort a column is clicked, but before the GridView control handles the sort operation."},{"content":"This event is often used to cancel the sorting operation or to perform a custom sorting routine.|      <bpt id=\"p1\">&lt;a name=\"accessibility\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Accessibility    For information about how to configure this control so that it generates markup that conforms to accessibility standards, see <bpt id=\"p2\">[</bpt>Accessibility in Visual Studio and ASP.NET<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p3\">[</bpt>ASP.NET Controls and Accessibility<ept id=\"p3\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[17536,17981],"source":" This event is often used to cancel the sorting operation or to perform a custom sorting routine.|      <a name=\"accessibility\"></a>    ## Accessibility    For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"declarative_syntax\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Declarative Syntax      <ph id=\"ph1\">```   &lt;asp:GridView       AccessKey=\"string\"       AllowPaging=\"True|False\"       AllowSorting=\"True|False\"       AutoGenerateColumns=\"True|False\"       AutoGenerateDeleteButton=\"True|False\"       AutoGenerateEditButton=\"True|False\"       AutoGenerateSelectButton=\"True|False\"       BackColor=\"color name|#dddddd\"       BackImageUrl=\"uri\"       BorderColor=\"color name|#dddddd\"       BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset\"       BorderWidth=\"size\"       Caption=\"string\"       CaptionAlign=\"NotSet|Top|Bottom|Left|Right\"       CellPadding=\"integer\"       CellSpacing=\"integer\"       CssClass=\"string\"       DataKeyNames=\"string\"       DataMember=\"string\"       DataSource=\"string\"       DataSourceID=\"string\"       EditIndex=\"integer\"       EmptyDataText=\"string\"       Enabled=\"True|False\"       EnableSortingAndPagingCallbacks=\"True|False\"       EnableTheming=\"True|False\"       EnableViewState=\"True|False\"       Font-Bold=\"True|False\"       Font-Italic=\"True|False\"       Font-Names=\"string\"       Font-Overline=\"True|False\"       Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large\"       Font-Strikeout=\"True|False\"       Font-Underline=\"True|False\"       ForeColor=\"color name|#dddddd\"       GridLines=\"None|Horizontal|Vertical|Both\"       Height=\"size\"       HorizontalAlign=\"NotSet|Left|Center|Right|Justify\"       ID=\"string\"       OnDataBinding=\"DataBinding event handler\"       OnDataBound=\"DataBound event handler\"       OnDisposed=\"Disposed event handler\"       OnInit=\"Init event handler\"       OnLoad=\"Load event handler\"       OnPageIndexChanged=\"PageIndexChanged event handler\"       OnPageIndexChanging=\"PageIndexChanging event handler\"       OnPreRender=\"PreRender event handler\"       OnRowCancelingEdit=\"RowCancelingEdit event handler\"       OnRowCommand=\"RowCommand event handler\"       OnRowCreated=\"RowCreated event handler\"       OnRowDataBound=\"RowDataBound event handler\"       OnRowDeleted=\"RowDeleted event handler\"       OnRowDeleting=\"RowDeleting event handler\"       OnRowEditing=\"RowEditing event handler\"       OnRowUpdated=\"RowUpdated event handler\"       OnRowUpdating=\"RowUpdating event handler\"       OnSelectedIndexChanged=\"SelectedIndexChanged event handler\"       OnSelectedIndexChanging=\"SelectedIndexChanging event handler\"       OnSorted=\"Sorted event handler\"       OnSorting=\"Sorting event handler\"       OnUnload=\"Unload event handler\"       PageIndex=\"integer\"       PagerSettings-FirstPageImageUrl=\"uri\"       PagerSettings-FirstPageText=\"string\"       PagerSettings-LastPageImageUrl=\"uri\"       PagerSettings-LastPageText=\"string\"       PagerSettings-Mode=\"NextPrevious|Numeric|NextPreviousFirstLast|           NumericFirstLast\"       PagerSettings-NextPageImageUrl=\"uri\"       PagerSettings-NextPageText=\"string\"       PagerSettings-PageButtonCount=\"integer\"       PagerSettings-Position=\"Bottom|Top|TopAndBottom\"       PagerSettings-PreviousPageImageUrl=\"uri\"       PagerSettings-PreviousPageText=\"string\"       PagerSettings-Visible=\"True|False\"       PageSize=\"integer\"       RowHeaderColumn=\"string\"       runat=\"server\"       SelectedIndex=\"integer\"       ShowFooter=\"True|False\"       ShowHeader=\"True|False\"       SkinID=\"string\"       Style=\"string\"       TabIndex=\"integer\"       ToolTip=\"string\"       UseAccessibleHeader=\"True|False\"       Visible=\"True|False\"       Width=\"size\"   &gt;           &lt;AlternatingRowStyle /&gt;           &lt;Columns&gt;                   &lt;asp:BoundField                       AccessibleHeaderText=\"string\"                       ApplyFormatInEditMode=\"True|False\"                       ConvertEmptyStringToNull=\"True|False\"                       DataField=\"string\"                       DataFormatString=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       HtmlEncode=\"True|False\"                       InsertVisible=\"True|False\"                       NullDisplayText=\"string\"                       ReadOnly=\"True|False\"                       ShowHeader=\"True|False\"                       SortExpression=\"string\"                       Visible=\"True|False\"   &gt;                           &lt;ControlStyle /&gt;                           &lt;FooterStyle /&gt;                           &lt;HeaderStyle /&gt;                           &lt;ItemStyle /&gt;                   &lt;/asp:BoundField&gt;                   &lt;asp:ButtonField                       AccessibleHeaderText=\"string\"                       ButtonType=\"Button|Image|Link\"                       CausesValidation=\"True|False\"                       CommandName=\"string\"                       DataTextField=\"string\"                       DataTextFormatString=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       ImageUrl=\"uri\"                       InsertVisible=\"True|False\"                       ShowHeader=\"True|False\"                       SortExpression=\"string\"                       Text=\"string\"                       ValidationGroup=\"string\"                       Visible=\"True|False\"   &gt;                           &lt;ControlStyle /&gt;                           &lt;FooterStyle /&gt;                           &lt;HeaderStyle /&gt;                           &lt;ItemStyle /&gt;                   &lt;/asp:ButtonField&gt;                   &lt;asp:CheckBoxField                       AccessibleHeaderText=\"string\"                       DataField=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       InsertVisible=\"True|False\"                       ReadOnly=\"True|False\"                       ShowHeader=\"True|False\"                       SortExpression=\"string\"                       Text=\"string\"                       Visible=\"True|False\"   &gt;                           &lt;ControlStyle /&gt;                           &lt;FooterStyle /&gt;                           &lt;HeaderStyle /&gt;                           &lt;ItemStyle /&gt;                   &lt;/asp:CheckBoxField&gt;                   &lt;asp:CommandField                       AccessibleHeaderText=\"string\"                       ButtonType=\"Button|Image|Link\"                       CancelImageUrl=\"uri\"                       CancelText=\"string\"                       CausesValidation=\"True|False\"                       DeleteImageUrl=\"uri\"                       DeleteText=\"string\"                       EditImageUrl=\"uri\"                       EditText=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       InsertImageUrl=\"uri\"                       InsertText=\"string\"                       InsertVisible=\"True|False\"                       NewImageUrl=\"uri\"                       NewText=\"string\"                       SelectImageUrl=\"uri\"                       SelectText=\"string\"                       ShowCancelButton=\"True|False\"                       ShowDeleteButton=\"True|False\"                       ShowEditButton=\"True|False\"                       ShowHeader=\"True|False\"                       ShowInsertButton=\"True|False\"                       ShowSelectButton=\"True|False\"                       SortExpression=\"string\"                       UpdateImageUrl=\"uri\"                       UpdateText=\"string\"                       ValidationGroup=\"string\"                       Visible=\"True|False\"   &gt;                           &lt;ControlStyle /&gt;                           &lt;FooterStyle /&gt;                           &lt;HeaderStyle /&gt;                           &lt;ItemStyle /&gt;                   &lt;/asp:CommandField&gt;                   &lt;asp:DynamicField                       AccessibleHeaderText=\"string\"                       ApplyFormatInEditMode=\"True|False\"                       ConvertEmptyStringToNull=\"True|False\"                       DataField=\"string\"                       DataFormatString=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       HtmlEncode=\"True|False\"                       InsertVisible=\"True|False\"                       NullDisplayText=\"string\"                       ShowHeader=\"True|False\"                       UIHint=\"string\"                       Visible=\"True|False\"   &gt;                           &lt;ControlStyle /&gt;                           &lt;FooterStyle /&gt;                           &lt;HeaderStyle /&gt;                           &lt;ItemStyle /&gt;                   &lt;/asp:DynamicField&gt;                   &lt;asp:HyperLinkField                       AccessibleHeaderText=\"string\"                       DataNavigateUrlFields=\"string\"                       DataNavigateUrlFormatString=\"string\"                       DataTextField=\"string\"                       DataTextFormatString=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       InsertVisible=\"True|False\"                       NavigateUrl=\"uri\"                       ShowHeader=\"True|False\"                       SortExpression=\"string\"                       Target=\"string|_blank|_parent|_search|_self|_top\"                       Text=\"string\"                       Visible=\"True|False\"   &gt;                           &lt;ControlStyle /&gt;                           &lt;FooterStyle /&gt;                           &lt;HeaderStyle /&gt;                           &lt;ItemStyle /&gt;                   &lt;/asp:HyperLinkField&gt;                   &lt;asp:ImageField                       AccessibleHeaderText=\"string\"                       AlternateText=\"string\"                       ConvertEmptyStringToNull=\"True|False\"                       DataAlternateTextField=\"string\"                       DataAlternateTextFormatString=\"string\"                       DataImageUrlField=\"string\"                       DataImageUrlFormatString=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       InsertVisible=\"True|False\"                       NullDisplayText=\"string\"                       NullImageUrl=\"uri\"                       ReadOnly=\"True|False\"                       ShowHeader=\"True|False\"                       SortExpression=\"string\"                       Visible=\"True|False\"   &gt;                           &lt;ControlStyle /&gt;                           &lt;FooterStyle /&gt;                           &lt;HeaderStyle /&gt;                           &lt;ItemStyle /&gt;                   &lt;/asp:ImageField&gt;                   &lt;asp:TemplateField                       AccessibleHeaderText=\"string\"                       ConvertEmptyStringToNull=\"True|False\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       InsertVisible=\"True|False\"                       ShowHeader=\"True|False\"                       SortExpression=\"string\"                       Visible=\"True|False\"   &gt;                               &lt;ControlStyle /&gt;                               &lt;FooterStyle /&gt;                               &lt;HeaderStyle /&gt;                               &lt;ItemStyle /&gt;                           &lt;AlternatingItemTemplate&gt;                               &lt;!-- child controls --&gt;                           &lt;/AlternatingItemTemplate&gt;                           &lt;EditItemTemplate&gt;                               &lt;!-- child controls --&gt;                           &lt;/EditItemTemplate&gt;                           &lt;FooterTemplate&gt;                               &lt;!-- child controls --&gt;                           &lt;/FooterTemplate&gt;                           &lt;HeaderTemplate&gt;                               &lt;!-- child controls --&gt;                           &lt;/HeaderTemplate&gt;                           &lt;InsertItemTemplate&gt;                               &lt;!-- child controls --&gt;                           &lt;/InsertItemTemplate&gt;                           &lt;ItemTemplate&gt;                               &lt;!-- child controls --&gt;                           &lt;/ItemTemplate&gt;                   &lt;/asp:TemplateField&gt;           &lt;/Columns&gt;           &lt;EditRowStyle /&gt;           &lt;EmptyDataRowStyle /&gt;           &lt;EmptyDataTemplate&gt;               &lt;!-- child controls --&gt;           &lt;/EmptyDataTemplate&gt;           &lt;FooterStyle /&gt;           &lt;HeaderStyle /&gt;           &lt;PagerSettings               FirstPageImageUrl=\"uri\"               FirstPageText=\"string\"               LastPageImageUrl=\"uri\"               LastPageText=\"string\"               Mode=\"NextPrevious|Numeric|NextPreviousFirstLast|                   NumericFirstLast\"               NextPageImageUrl=\"uri\"               NextPageText=\"string\"               OnPropertyChanged=\"PropertyChanged event handler\"               PageButtonCount=\"integer\"               Position=\"Bottom|Top|TopAndBottom\"               PreviousPageImageUrl=\"uri\"               PreviousPageText=\"string\"               Visible=\"True|False\"           /&gt;           &lt;PagerStyle /&gt;           &lt;PagerTemplate&gt;               &lt;!-- child controls --&gt;           &lt;/PagerTemplate&gt;           &lt;RowStyle /&gt;           &lt;SelectedRowStyle /&gt;   &lt;/asp:GridView&gt;   ```</ph>","pos":[17987,31339],"source":"<a name=\"declarative_syntax\"></a>    ## Declarative Syntax      ```   <asp:GridView       AccessKey=\"string\"       AllowPaging=\"True|False\"       AllowSorting=\"True|False\"       AutoGenerateColumns=\"True|False\"       AutoGenerateDeleteButton=\"True|False\"       AutoGenerateEditButton=\"True|False\"       AutoGenerateSelectButton=\"True|False\"       BackColor=\"color name|#dddddd\"       BackImageUrl=\"uri\"       BorderColor=\"color name|#dddddd\"       BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset\"       BorderWidth=\"size\"       Caption=\"string\"       CaptionAlign=\"NotSet|Top|Bottom|Left|Right\"       CellPadding=\"integer\"       CellSpacing=\"integer\"       CssClass=\"string\"       DataKeyNames=\"string\"       DataMember=\"string\"       DataSource=\"string\"       DataSourceID=\"string\"       EditIndex=\"integer\"       EmptyDataText=\"string\"       Enabled=\"True|False\"       EnableSortingAndPagingCallbacks=\"True|False\"       EnableTheming=\"True|False\"       EnableViewState=\"True|False\"       Font-Bold=\"True|False\"       Font-Italic=\"True|False\"       Font-Names=\"string\"       Font-Overline=\"True|False\"       Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large\"       Font-Strikeout=\"True|False\"       Font-Underline=\"True|False\"       ForeColor=\"color name|#dddddd\"       GridLines=\"None|Horizontal|Vertical|Both\"       Height=\"size\"       HorizontalAlign=\"NotSet|Left|Center|Right|Justify\"       ID=\"string\"       OnDataBinding=\"DataBinding event handler\"       OnDataBound=\"DataBound event handler\"       OnDisposed=\"Disposed event handler\"       OnInit=\"Init event handler\"       OnLoad=\"Load event handler\"       OnPageIndexChanged=\"PageIndexChanged event handler\"       OnPageIndexChanging=\"PageIndexChanging event handler\"       OnPreRender=\"PreRender event handler\"       OnRowCancelingEdit=\"RowCancelingEdit event handler\"       OnRowCommand=\"RowCommand event handler\"       OnRowCreated=\"RowCreated event handler\"       OnRowDataBound=\"RowDataBound event handler\"       OnRowDeleted=\"RowDeleted event handler\"       OnRowDeleting=\"RowDeleting event handler\"       OnRowEditing=\"RowEditing event handler\"       OnRowUpdated=\"RowUpdated event handler\"       OnRowUpdating=\"RowUpdating event handler\"       OnSelectedIndexChanged=\"SelectedIndexChanged event handler\"       OnSelectedIndexChanging=\"SelectedIndexChanging event handler\"       OnSorted=\"Sorted event handler\"       OnSorting=\"Sorting event handler\"       OnUnload=\"Unload event handler\"       PageIndex=\"integer\"       PagerSettings-FirstPageImageUrl=\"uri\"       PagerSettings-FirstPageText=\"string\"       PagerSettings-LastPageImageUrl=\"uri\"       PagerSettings-LastPageText=\"string\"       PagerSettings-Mode=\"NextPrevious|Numeric|NextPreviousFirstLast|           NumericFirstLast\"       PagerSettings-NextPageImageUrl=\"uri\"       PagerSettings-NextPageText=\"string\"       PagerSettings-PageButtonCount=\"integer\"       PagerSettings-Position=\"Bottom|Top|TopAndBottom\"       PagerSettings-PreviousPageImageUrl=\"uri\"       PagerSettings-PreviousPageText=\"string\"       PagerSettings-Visible=\"True|False\"       PageSize=\"integer\"       RowHeaderColumn=\"string\"       runat=\"server\"       SelectedIndex=\"integer\"       ShowFooter=\"True|False\"       ShowHeader=\"True|False\"       SkinID=\"string\"       Style=\"string\"       TabIndex=\"integer\"       ToolTip=\"string\"       UseAccessibleHeader=\"True|False\"       Visible=\"True|False\"       Width=\"size\"   >           <AlternatingRowStyle />           <Columns>                   <asp:BoundField                       AccessibleHeaderText=\"string\"                       ApplyFormatInEditMode=\"True|False\"                       ConvertEmptyStringToNull=\"True|False\"                       DataField=\"string\"                       DataFormatString=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       HtmlEncode=\"True|False\"                       InsertVisible=\"True|False\"                       NullDisplayText=\"string\"                       ReadOnly=\"True|False\"                       ShowHeader=\"True|False\"                       SortExpression=\"string\"                       Visible=\"True|False\"   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:BoundField>                   <asp:ButtonField                       AccessibleHeaderText=\"string\"                       ButtonType=\"Button|Image|Link\"                       CausesValidation=\"True|False\"                       CommandName=\"string\"                       DataTextField=\"string\"                       DataTextFormatString=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       ImageUrl=\"uri\"                       InsertVisible=\"True|False\"                       ShowHeader=\"True|False\"                       SortExpression=\"string\"                       Text=\"string\"                       ValidationGroup=\"string\"                       Visible=\"True|False\"   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:ButtonField>                   <asp:CheckBoxField                       AccessibleHeaderText=\"string\"                       DataField=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       InsertVisible=\"True|False\"                       ReadOnly=\"True|False\"                       ShowHeader=\"True|False\"                       SortExpression=\"string\"                       Text=\"string\"                       Visible=\"True|False\"   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:CheckBoxField>                   <asp:CommandField                       AccessibleHeaderText=\"string\"                       ButtonType=\"Button|Image|Link\"                       CancelImageUrl=\"uri\"                       CancelText=\"string\"                       CausesValidation=\"True|False\"                       DeleteImageUrl=\"uri\"                       DeleteText=\"string\"                       EditImageUrl=\"uri\"                       EditText=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       InsertImageUrl=\"uri\"                       InsertText=\"string\"                       InsertVisible=\"True|False\"                       NewImageUrl=\"uri\"                       NewText=\"string\"                       SelectImageUrl=\"uri\"                       SelectText=\"string\"                       ShowCancelButton=\"True|False\"                       ShowDeleteButton=\"True|False\"                       ShowEditButton=\"True|False\"                       ShowHeader=\"True|False\"                       ShowInsertButton=\"True|False\"                       ShowSelectButton=\"True|False\"                       SortExpression=\"string\"                       UpdateImageUrl=\"uri\"                       UpdateText=\"string\"                       ValidationGroup=\"string\"                       Visible=\"True|False\"   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:CommandField>                   <asp:DynamicField                       AccessibleHeaderText=\"string\"                       ApplyFormatInEditMode=\"True|False\"                       ConvertEmptyStringToNull=\"True|False\"                       DataField=\"string\"                       DataFormatString=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       HtmlEncode=\"True|False\"                       InsertVisible=\"True|False\"                       NullDisplayText=\"string\"                       ShowHeader=\"True|False\"                       UIHint=\"string\"                       Visible=\"True|False\"   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:DynamicField>                   <asp:HyperLinkField                       AccessibleHeaderText=\"string\"                       DataNavigateUrlFields=\"string\"                       DataNavigateUrlFormatString=\"string\"                       DataTextField=\"string\"                       DataTextFormatString=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       InsertVisible=\"True|False\"                       NavigateUrl=\"uri\"                       ShowHeader=\"True|False\"                       SortExpression=\"string\"                       Target=\"string|_blank|_parent|_search|_self|_top\"                       Text=\"string\"                       Visible=\"True|False\"   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:HyperLinkField>                   <asp:ImageField                       AccessibleHeaderText=\"string\"                       AlternateText=\"string\"                       ConvertEmptyStringToNull=\"True|False\"                       DataAlternateTextField=\"string\"                       DataAlternateTextFormatString=\"string\"                       DataImageUrlField=\"string\"                       DataImageUrlFormatString=\"string\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       InsertVisible=\"True|False\"                       NullDisplayText=\"string\"                       NullImageUrl=\"uri\"                       ReadOnly=\"True|False\"                       ShowHeader=\"True|False\"                       SortExpression=\"string\"                       Visible=\"True|False\"   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:ImageField>                   <asp:TemplateField                       AccessibleHeaderText=\"string\"                       ConvertEmptyStringToNull=\"True|False\"                       FooterText=\"string\"                       HeaderImageUrl=\"uri\"                       HeaderText=\"string\"                       InsertVisible=\"True|False\"                       ShowHeader=\"True|False\"                       SortExpression=\"string\"                       Visible=\"True|False\"   >                               <ControlStyle />                               <FooterStyle />                               <HeaderStyle />                               <ItemStyle />                           <AlternatingItemTemplate>                               <!-- child controls -->                           </AlternatingItemTemplate>                           <EditItemTemplate>                               <!-- child controls -->                           </EditItemTemplate>                           <FooterTemplate>                               <!-- child controls -->                           </FooterTemplate>                           <HeaderTemplate>                               <!-- child controls -->                           </HeaderTemplate>                           <InsertItemTemplate>                               <!-- child controls -->                           </InsertItemTemplate>                           <ItemTemplate>                               <!-- child controls -->                           </ItemTemplate>                   </asp:TemplateField>           </Columns>           <EditRowStyle />           <EmptyDataRowStyle />           <EmptyDataTemplate>               <!-- child controls -->           </EmptyDataTemplate>           <FooterStyle />           <HeaderStyle />           <PagerSettings               FirstPageImageUrl=\"uri\"               FirstPageText=\"string\"               LastPageImageUrl=\"uri\"               LastPageText=\"string\"               Mode=\"NextPrevious|Numeric|NextPreviousFirstLast|                   NumericFirstLast\"               NextPageImageUrl=\"uri\"               NextPageText=\"string\"               OnPropertyChanged=\"PropertyChanged event handler\"               PageButtonCount=\"integer\"               Position=\"Bottom|Top|TopAndBottom\"               PreviousPageImageUrl=\"uri\"               PreviousPageText=\"string\"               Visible=\"True|False\"           />           <PagerStyle />           <PagerTemplate>               <!-- child controls -->           </PagerTemplate>           <RowStyle />           <SelectedRowStyle />   </asp:GridView>   ```"}]},{"pos":[55520,55616],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> class."},{"pos":[55628,56076],"content":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.GridView> class. To dynamically add a <xref:System.Web.UI.WebControls.GridView> control to a page, create a new <xref:System.Web.UI.WebControls.GridView> object, set its properties, and then add it to the <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> collection of a container control, such as <xref:System.Web.UI.WebControls.PlaceHolder>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.GridView> class. To dynamically add a <xref:System.Web.UI.WebControls.GridView> control to a page, create a new <xref:System.Web.UI.WebControls.GridView> object, set its properties, and then add it to the <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> collection of a container control, such as <xref:System.Web.UI.WebControls.PlaceHolder>.","pos":[0,448],"nodes":[{"content":"Use this constructor to initialize a new instance of the &lt;xref:System.Web.UI.WebControls.GridView&gt; class.","pos":[0,105],"source":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.GridView> class."},{"content":"To dynamically add a &lt;xref:System.Web.UI.WebControls.GridView&gt; control to a page, create a new &lt;xref:System.Web.UI.WebControls.GridView&gt; object, set its properties, and then add it to the &lt;xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName&gt; collection of a container control, such as &lt;xref:System.Web.UI.WebControls.PlaceHolder&gt;.","pos":[106,448],"source":" To dynamically add a <xref:System.Web.UI.WebControls.GridView> control to a page, create a new <xref:System.Web.UI.WebControls.GridView> object, set its properties, and then add it to the <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> collection of a container control, such as <xref:System.Web.UI.WebControls.PlaceHolder>."}]}]},{"pos":[56964,57033],"content":"Gets or sets a value that indicates whether custom paging is enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether custom paging is enabled.","pos":[0,69]}]},{"pos":[57046,58432],"content":"Paging enables you to display the contents of the <xref:System.Web.UI.WebControls.GridView> control in chunks. The number of items on a page is determined by the <xref:System.Web.UI.WebControls.GridView.PageSize%2A> property. Normally, every row in the data source is read every time the <xref:System.Web.UI.WebControls.GridView> control moves to a different page. This can consume a lot of resources when the total number of items in the data source is very large. Custom paging allows you to read just the items you need for a single page from the data source.       To enable custom paging, set both the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> and AllowCustomPaging properties to `true`. In a handler for the <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> event, set the <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> property to the new page index value, set the <xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A> property to the total number of items in the data source, set the data source to return only the rows needed for the current page, and call the <xref:System.Web.UI.WebControls.GridView.DataBind%2A> method. The <xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A> property enables the control to determine the total number of pages; this value is normally determined automatically by reading all of the items.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Paging enables you to display the contents of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control in chunks.","pos":[0,110],"source":"Paging enables you to display the contents of the <xref:System.Web.UI.WebControls.GridView> control in chunks."},{"content":"The number of items on a page is determined by the &lt;xref:System.Web.UI.WebControls.GridView.PageSize%2A&gt; property.","pos":[111,225],"source":" The number of items on a page is determined by the <xref:System.Web.UI.WebControls.GridView.PageSize%2A> property."},{"content":"Normally, every row in the data source is read every time the &lt;xref:System.Web.UI.WebControls.GridView&gt; control moves to a different page.","pos":[226,364],"source":" Normally, every row in the data source is read every time the <xref:System.Web.UI.WebControls.GridView> control moves to a different page."},{"content":"This can consume a lot of resources when the total number of items in the data source is very large.","pos":[365,465]},{"content":"Custom paging allows you to read just the items you need for a single page from the data source.","pos":[466,562]},{"content":"To enable custom paging, set both the &lt;xref:System.Web.UI.WebControls.GridView.AllowPaging%2A&gt; and AllowCustomPaging properties to <ph id=\"ph1\">`true`</ph>.","pos":[569,707],"source":"       To enable custom paging, set both the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> and AllowCustomPaging properties to `true`."},{"content":"In a handler for the &lt;xref:System.Web.UI.WebControls.GridView.PageIndexChanging&gt; event, set the &lt;xref:System.Web.UI.WebControls.GridView.PageIndex%2A&gt; property to the new page index value, set the &lt;xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A&gt; property to the total number of items in the data source, set the data source to return only the rows needed for the current page, and call the &lt;xref:System.Web.UI.WebControls.GridView.DataBind%2A&gt; method.","pos":[708,1172],"source":" In a handler for the <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> event, set the <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> property to the new page index value, set the <xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A> property to the total number of items in the data source, set the data source to return only the rows needed for the current page, and call the <xref:System.Web.UI.WebControls.GridView.DataBind%2A> method."},{"content":"The &lt;xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A&gt; property enables the control to determine the total number of pages; this value is normally determined automatically by reading all of the items.","pos":[1173,1384],"source":" The <xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A> property enables the control to determine the total number of pages; this value is normally determined automatically by reading all of the items."}]},{"pos":[58567,58810],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if custom paging is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if custom paging is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,164],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if custom paging is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[165,243],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[59266,59336],"content":"Gets or sets a value indicating whether the paging feature is enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the paging feature is enabled.","pos":[0,70]}]},{"pos":[59349,63397],"content":"Instead of displaying all the records in the data source at the same time, the <xref:System.Web.UI.WebControls.GridView> control can automatically break the records up into pages. If the data source supports the paging capability, the <xref:System.Web.UI.WebControls.GridView> control can take advantage of that and provide built-in paging functionality. The paging feature can be used with any data source object that supports the <xref:System.Collections.ICollection?displayProperty=fullName> interface or a data source that supports paging capability.       To enable the paging feature, set the AllowPaging property to `true`. By default, the <xref:System.Web.UI.WebControls.GridView> control displays 10 records on a page at a time. You can change the number of records displayed on a page by setting the <xref:System.Web.UI.WebControls.GridView.PageSize%2A> property. To determine the total number of pages required to display the data source contents, use the <xref:System.Web.UI.WebControls.GridView.PageCount%2A> property. You can determine the index of the currently displayed page by using the <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> property.       When paging is enabled, an additional row called the pager row is automatically displayed in the <xref:System.Web.UI.WebControls.GridView> control. The pager row contains controls that allow the user to navigate to the other pages. You can control the settings of the pager row (such as the pager display mode, the number of page links to display at a time, and the pager control's text labels) by using the <xref:System.Web.UI.WebControls.GridView.PagerSettings%2A> property. The pager row can be displayed at the top, bottom, or both the top and bottom of the control by setting the <xref:System.Web.UI.WebControls.PagerSettings.Position%2A> property. You can also select from one of four built-in pager display modes by setting the <xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> property. The following table describes the built-in display modes.      |Mode|Description|   |----------|-----------------|   |`PagerButton.NextPrevious`|A set of pagination controls consisting of previous and next buttons.|   |`PagerButton.NextPreviousFirstLast`|A set of pagination controls consisting of previous, next, first, and last buttons.|   |`PagerButton.Numeric`|A set of pagination controls consisting of numbered link buttons to access pages directly. This is the default mode.|   |`PagerButton.NumericFirstLast`|A set of pagination controls consisting of numbered and first and last link buttons.|       To control the appearance of the pager row (including its background color, font color, and position), use the <xref:System.Web.UI.WebControls.GridView.PagerStyle%2A> property.      > [!NOTE] >  The <xref:System.Web.UI.WebControls.GridView> control automatically hides the pager row when the data source contains only one page of records.       The <xref:System.Web.UI.WebControls.GridView> control also enables you to define a custom template for the pager row. For more information about creating a custom pager row template, see <xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A>.       The <xref:System.Web.UI.WebControls.GridView> control provides several events that you can use to perform a custom action when paging occurs. The following table lists the available events.      |Event|Description|   |-----------|-----------------|   |<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>|Occurs when one of the pager buttons is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation. This event is commonly used when you need to perform a task after the user navigates to a different page in the control.|   |<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>|Occurs when one of the pager buttons is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation. This event is often used to cancel the paging operation.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Instead of displaying all the records in the data source at the same time, the &lt;xref:System.Web.UI.WebControls.GridView&gt; control can automatically break the records up into pages.","pos":[0,179],"source":"Instead of displaying all the records in the data source at the same time, the <xref:System.Web.UI.WebControls.GridView> control can automatically break the records up into pages."},{"content":"If the data source supports the paging capability, the &lt;xref:System.Web.UI.WebControls.GridView&gt; control can take advantage of that and provide built-in paging functionality.","pos":[180,354],"source":" If the data source supports the paging capability, the <xref:System.Web.UI.WebControls.GridView> control can take advantage of that and provide built-in paging functionality."},{"content":"The paging feature can be used with any data source object that supports the &lt;xref:System.Collections.ICollection?displayProperty=fullName&gt; interface or a data source that supports paging capability.","pos":[355,554],"source":" The paging feature can be used with any data source object that supports the <xref:System.Collections.ICollection?displayProperty=fullName> interface or a data source that supports paging capability."},{"content":"To enable the paging feature, set the AllowPaging property to <ph id=\"ph1\">`true`</ph>.","pos":[561,630],"source":"       To enable the paging feature, set the AllowPaging property to `true`."},{"content":"By default, the &lt;xref:System.Web.UI.WebControls.GridView&gt; control displays 10 records on a page at a time.","pos":[631,737],"source":" By default, the <xref:System.Web.UI.WebControls.GridView> control displays 10 records on a page at a time."},{"content":"You can change the number of records displayed on a page by setting the &lt;xref:System.Web.UI.WebControls.GridView.PageSize%2A&gt; property.","pos":[738,873],"source":" You can change the number of records displayed on a page by setting the <xref:System.Web.UI.WebControls.GridView.PageSize%2A> property."},{"content":"To determine the total number of pages required to display the data source contents, use the &lt;xref:System.Web.UI.WebControls.GridView.PageCount%2A&gt; property.","pos":[874,1031],"source":" To determine the total number of pages required to display the data source contents, use the <xref:System.Web.UI.WebControls.GridView.PageCount%2A> property."},{"content":"You can determine the index of the currently displayed page by using the &lt;xref:System.Web.UI.WebControls.GridView.PageIndex%2A&gt; property.","pos":[1032,1169],"source":" You can determine the index of the currently displayed page by using the <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> property."},{"content":"When paging is enabled, an additional row called the pager row is automatically displayed in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[1176,1323],"source":"       When paging is enabled, an additional row called the pager row is automatically displayed in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The pager row contains controls that allow the user to navigate to the other pages.","pos":[1324,1407]},{"content":"You can control the settings of the pager row (such as the pager display mode, the number of page links to display at a time, and the pager control's text labels) by using the &lt;xref:System.Web.UI.WebControls.GridView.PagerSettings%2A&gt; property.","pos":[1408,1652],"source":" You can control the settings of the pager row (such as the pager display mode, the number of page links to display at a time, and the pager control's text labels) by using the <xref:System.Web.UI.WebControls.GridView.PagerSettings%2A> property."},{"content":"The pager row can be displayed at the top, bottom, or both the top and bottom of the control by setting the &lt;xref:System.Web.UI.WebControls.PagerSettings.Position%2A&gt; property.","pos":[1653,1829],"source":" The pager row can be displayed at the top, bottom, or both the top and bottom of the control by setting the <xref:System.Web.UI.WebControls.PagerSettings.Position%2A> property."},{"content":"You can also select from one of four built-in pager display modes by setting the &lt;xref:System.Web.UI.WebControls.PagerSettings.Mode%2A&gt; property.","pos":[1830,1975],"source":" You can also select from one of four built-in pager display modes by setting the <xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> property."},{"content":"The following table describes the built-in display modes.","pos":[1976,2033]},{"content":"|Mode|Description|   |----------|-----------------|   |<ph id=\"ph1\">`PagerButton.NextPrevious`</ph>|A set of pagination controls consisting of previous and next buttons.|   |<ph id=\"ph2\">`PagerButton.NextPreviousFirstLast`</ph>|A set of pagination controls consisting of previous, next, first, and last buttons.|   |<ph id=\"ph3\">`PagerButton.Numeric`</ph>|A set of pagination controls consisting of numbered link buttons to access pages directly.","pos":[2039,2431],"source":"      |Mode|Description|   |----------|-----------------|   |`PagerButton.NextPrevious`|A set of pagination controls consisting of previous and next buttons.|   |`PagerButton.NextPreviousFirstLast`|A set of pagination controls consisting of previous, next, first, and last buttons.|   |`PagerButton.Numeric`|A set of pagination controls consisting of numbered link buttons to access pages directly."},{"content":"This is the default mode.|   |<ph id=\"ph1\">`PagerButton.NumericFirstLast`</ph>|A set of pagination controls consisting of numbered and first and last link buttons.|       To control the appearance of the pager row (including its background color, font color, and position), use the &lt;xref:System.Web.UI.WebControls.GridView.PagerStyle%2A&gt; property.","pos":[2432,2761],"source":" This is the default mode.|   |`PagerButton.NumericFirstLast`|A set of pagination controls consisting of numbered and first and last link buttons.|       To control the appearance of the pager row (including its background color, font color, and position), use the <xref:System.Web.UI.WebControls.GridView.PagerStyle%2A> property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Web.UI.WebControls.GridView&gt; control automatically hides the pager row when the data source contains only one page of records.","pos":[2767,2923],"source":"      > [!NOTE] >  The <xref:System.Web.UI.WebControls.GridView> control automatically hides the pager row when the data source contains only one page of records."},{"content":"The &lt;xref:System.Web.UI.WebControls.GridView&gt; control also enables you to define a custom template for the pager row.","pos":[2930,3047],"source":"       The <xref:System.Web.UI.WebControls.GridView> control also enables you to define a custom template for the pager row."},{"content":"For more information about creating a custom pager row template, see &lt;xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A&gt;.","pos":[3048,3176],"source":" For more information about creating a custom pager row template, see <xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A>."},{"content":"The &lt;xref:System.Web.UI.WebControls.GridView&gt; control provides several events that you can use to perform a custom action when paging occurs.","pos":[3183,3324],"source":"       The <xref:System.Web.UI.WebControls.GridView> control provides several events that you can use to perform a custom action when paging occurs."},{"content":"The following table lists the available events.","pos":[3325,3372]},{"content":"|Event|Description|   |-----------|-----------------|   |&lt;xref:System.Web.UI.WebControls.GridView.PageIndexChanged&gt;|Occurs when one of the pager buttons is clicked, but after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control handles the paging operation.","pos":[3378,3636],"source":"      |Event|Description|   |-----------|-----------------|   |<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>|Occurs when one of the pager buttons is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation."},{"content":"This event is commonly used when you need to perform a task after the user navigates to a different page in the control.|   |&lt;xref:System.Web.UI.WebControls.GridView.PageIndexChanging&gt;|Occurs when one of the pager buttons is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control handles the paging operation.","pos":[3637,3965],"source":" This event is commonly used when you need to perform a task after the user navigates to a different page in the control.|   |<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>|Occurs when one of the pager buttons is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation."},{"content":"This event is often used to cancel the paging operation.|","pos":[3966,4023]}]},{"pos":[63922,64170],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the paging feature is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the paging feature is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,169],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the paging feature is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[170,248],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[64625,64696],"content":"Gets or sets a value indicating whether the sorting feature is enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the sorting feature is enabled.","pos":[0,71]}]},{"pos":[64709,67943],"content":"When a data source control that supports sorting is bound to the <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.GridView> control can take advantage of the data source control's capabilities and provide automatic sorting functionality. When the <xref:System.Web.UI.WebControls.GridView> control is bound to a data source by setting the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> property programmatically, you must provide the sorting functionality by using the <xref:System.Web.UI.WebControls.GridView.Sorting> event.      > [!NOTE] >  Different data sources have different requirements for enabling their sorting capabilities. To determine the requirements, see the documentation for the specific data source.       To enable sorting, set the AllowSorting property to `true`. When sorting is enabled, the heading text for each column field with its <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> property set is displayed as a link button.      > [!NOTE] >  The <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> property for an automatically generated columns field is automatically populated. If you define your own columns through the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection, you must set the <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> property for each column; otherwise, the column will not display the link button in the header.       Clicking the link button for a column causes the items in the <xref:System.Web.UI.WebControls.GridView> control to be sorted based on the sort expression. Typically, the sort expression is simply the name of the field displayed in the column, which causes the <xref:System.Web.UI.WebControls.GridView> control to sort with respect to that column. To sort by multiple fields, use a sort expression that contains a comma-separated list of field names. You can determine the sort expression that the <xref:System.Web.UI.WebControls.GridView> control is applying by using the <xref:System.Web.UI.WebControls.GridView.SortExpression%2A> property. Clicking a column's link button repeatedly toggles the sort direction between ascending and descending order. To determine the current sort direction, use the <xref:System.Web.UI.WebControls.GridView.SortDirection%2A> property.       The <xref:System.Web.UI.WebControls.GridView> control provides several events that you can use to perform a custom action when sorting occurs. The following table lists the available events.      |Event|Description|   |-----------|-----------------|   |<xref:System.Web.UI.WebControls.GridView.Sorted>|Occurs when the hyperlink to sort a column is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the sort operation. This event is commonly used to perform a task after the user clicks a hyperlink to sort a column.|   |<xref:System.Web.UI.WebControls.GridView.Sorting>|Occurs when the hyperlink to sort a column is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the sort operation. This event is often used to cancel the sorting operation or to perform a custom sorting routine.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When a data source control that supports sorting is bound to the &lt;xref:System.Web.UI.WebControls.GridView&gt; control, the &lt;xref:System.Web.UI.WebControls.GridView&gt; control can take advantage of the data source control's capabilities and provide automatic sorting functionality.","pos":[0,275],"source":"When a data source control that supports sorting is bound to the <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.GridView> control can take advantage of the data source control's capabilities and provide automatic sorting functionality."},{"content":"When the &lt;xref:System.Web.UI.WebControls.GridView&gt; control is bound to a data source by setting the &lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A&gt; property programmatically, you must provide the sorting functionality by using the &lt;xref:System.Web.UI.WebControls.GridView.Sorting&gt; event.","pos":[276,583],"source":" When the <xref:System.Web.UI.WebControls.GridView> control is bound to a data source by setting the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> property programmatically, you must provide the sorting functionality by using the <xref:System.Web.UI.WebControls.GridView.Sorting> event."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Different data sources have different requirements for enabling their sorting capabilities.","pos":[589,693],"source":"      > [!NOTE] >  Different data sources have different requirements for enabling their sorting capabilities."},{"content":"To determine the requirements, see the documentation for the specific data source.","pos":[694,776]},{"content":"To enable sorting, set the AllowSorting property to <ph id=\"ph1\">`true`</ph>.","pos":[783,842],"source":"       To enable sorting, set the AllowSorting property to `true`."},{"content":"When sorting is enabled, the heading text for each column field with its &lt;xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A&gt; property set is displayed as a link button.","pos":[843,1027],"source":" When sorting is enabled, the heading text for each column field with its <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> property set is displayed as a link button."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A&gt; property for an automatically generated columns field is automatically populated.","pos":[1033,1199],"source":"      > [!NOTE] >  The <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> property for an automatically generated columns field is automatically populated."},{"content":"If you define your own columns through the &lt;xref:System.Web.UI.WebControls.GridView.Columns%2A&gt; collection, you must set the &lt;xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A&gt; property for each column; otherwise, the column will not display the link button in the header.","pos":[1200,1488],"source":" If you define your own columns through the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection, you must set the <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> property for each column; otherwise, the column will not display the link button in the header."},{"content":"Clicking the link button for a column causes the items in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control to be sorted based on the sort expression.","pos":[1495,1649],"source":"       Clicking the link button for a column causes the items in the <xref:System.Web.UI.WebControls.GridView> control to be sorted based on the sort expression."},{"content":"Typically, the sort expression is simply the name of the field displayed in the column, which causes the &lt;xref:System.Web.UI.WebControls.GridView&gt; control to sort with respect to that column.","pos":[1650,1841],"source":" Typically, the sort expression is simply the name of the field displayed in the column, which causes the <xref:System.Web.UI.WebControls.GridView> control to sort with respect to that column."},{"content":"To sort by multiple fields, use a sort expression that contains a comma-separated list of field names.","pos":[1842,1944]},{"content":"You can determine the sort expression that the &lt;xref:System.Web.UI.WebControls.GridView&gt; control is applying by using the &lt;xref:System.Web.UI.WebControls.GridView.SortExpression%2A&gt; property.","pos":[1945,2136],"source":" You can determine the sort expression that the <xref:System.Web.UI.WebControls.GridView> control is applying by using the <xref:System.Web.UI.WebControls.GridView.SortExpression%2A> property."},{"content":"Clicking a column's link button repeatedly toggles the sort direction between ascending and descending order.","pos":[2137,2246]},{"content":"To determine the current sort direction, use the &lt;xref:System.Web.UI.WebControls.GridView.SortDirection%2A&gt; property.","pos":[2247,2364],"source":" To determine the current sort direction, use the <xref:System.Web.UI.WebControls.GridView.SortDirection%2A> property."},{"content":"The &lt;xref:System.Web.UI.WebControls.GridView&gt; control provides several events that you can use to perform a custom action when sorting occurs.","pos":[2371,2513],"source":"       The <xref:System.Web.UI.WebControls.GridView> control provides several events that you can use to perform a custom action when sorting occurs."},{"content":"The following table lists the available events.","pos":[2514,2561]},{"content":"|Event|Description|   |-----------|-----------------|   |&lt;xref:System.Web.UI.WebControls.GridView.Sorted&gt;|Occurs when the hyperlink to sort a column is clicked, but after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control handles the sort operation.","pos":[2567,2819],"source":"      |Event|Description|   |-----------|-----------------|   |<xref:System.Web.UI.WebControls.GridView.Sorted>|Occurs when the hyperlink to sort a column is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the sort operation."},{"content":"This event is commonly used to perform a task after the user clicks a hyperlink to sort a column.|   |&lt;xref:System.Web.UI.WebControls.GridView.Sorting&gt;|Occurs when the hyperlink to sort a column is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control handles the sort operation.","pos":[2820,3119],"source":" This event is commonly used to perform a task after the user clicks a hyperlink to sort a column.|   |<xref:System.Web.UI.WebControls.GridView.Sorting>|Occurs when the hyperlink to sort a column is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the sort operation."},{"content":"This event is often used to cancel the sorting operation or to perform a custom sorting routine.|","pos":[3120,3217]}]},{"pos":[69125,69374],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the sorting feature is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the sorting feature is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,170],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the sorting feature is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[171,249],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[69865,70091],"content":"Gets a reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableItemStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that enables you to set the appearance of alternating data rows in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets a reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> object that enables you to set the appearance of alternating data rows in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[70104,71310],"content":"Use the AlternatingRowStyle property to control the appearance of alternating data rows in a <xref:System.Web.UI.WebControls.GridView> control. When this property is set, the data rows are displayed alternating between the <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> settings and the AlternatingRowStyle settings. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns. The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `AlternatingRowStyle-ForeColor`).      -   Nest an `<AlternatingRowStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control.       The properties can also be set programmatically in the form `Property.Subproperty` (for example, `AlternatingRowStyle.ForeColor`). Common settings usually include a custom background color, foreground color, and font properties.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the AlternatingRowStyle property to control the appearance of alternating data rows in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,143],"source":"Use the AlternatingRowStyle property to control the appearance of alternating data rows in a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"When this property is set, the data rows are displayed alternating between the &lt;xref:System.Web.UI.WebControls.GridView.RowStyle%2A&gt; settings and the AlternatingRowStyle settings.","pos":[144,323],"source":" When this property is set, the data rows are displayed alternating between the <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> settings and the AlternatingRowStyle settings."},{"content":"This property is read-only; however, you can set the properties of the &lt;xref:System.Web.UI.WebControls.TableItemStyle&gt; object it returns.","pos":[324,461],"source":" This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns."},{"content":"The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control in the form <ph id=\"ph1\">`Property-Subproperty`</ph>, where <ph id=\"ph2\">`Subproperty`</ph> is a property of the &lt;xref:System.Web.UI.WebControls.TableItemStyle&gt; object (for example, <ph id=\"ph3\">`AlternatingRowStyle-ForeColor`</ph>).","pos":[462,821],"source":" The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `AlternatingRowStyle-ForeColor`)."},{"content":"-   Nest an <ph id=\"ph1\">`&lt;AlternatingRowStyle&gt;`</ph> element between the opening and closing tags of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[827,965],"source":"      -   Nest an `<AlternatingRowStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The properties can also be set programmatically in the form <ph id=\"ph1\">`Property.Subproperty`</ph> (for example, <ph id=\"ph2\">`AlternatingRowStyle.ForeColor`</ph>).","pos":[972,1102],"source":"       The properties can also be set programmatically in the form `Property.Subproperty` (for example, `AlternatingRowStyle.ForeColor`)."},{"content":"Common settings usually include a custom background color, foreground color, and font properties.","pos":[1103,1200]}]},{"pos":[71911,72112],"content":"A reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableItemStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the style of alternating data rows in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"A reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> that represents the style of alternating data rows in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[72610,72723],"content":"Gets or sets a value indicating whether bound fields are automatically created for each field in the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether bound fields are automatically created for each field in the data source.","pos":[0,113]}]},{"pos":[72736,75518],"content":"When the AutoGenerateColumns property is set to `true`, an <xref:System.Web.UI.WebControls.AutoGeneratedField> object is automatically created for each field in the data source. Each field is then displayed as a column in the <xref:System.Web.UI.WebControls.GridView> control in the order that the fields appear in the data source. This option provides a convenient way to display every field in the data source; however, you have limited control of how an automatically generated column field is displayed or behaves.       Instead of letting the <xref:System.Web.UI.WebControls.GridView> control automatically generate the column fields, you can manually define the column fields by setting the AutoGenerateColumns property to `false` and then creating a custom `Columns` collection. In addition to bound column fields, you can also display a button column field, a check box column field, a command field, a hyperlink column field, an image field, or a column field based on your own custom-defined template.       You can also combine explicitly declared column fields with automatically generated column fields. When both are used, explicitly declared column fields are rendered first, followed by the automatically generated column fields. Automatically generated bound column fields are not added to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection. For more information, see <xref:System.Web.UI.WebControls.GridView.Columns%2A>.       If you set this property to `true` and set the <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> property to a model type, <xref:System.Web.DynamicData.DynamicField> controls are generated. If you do not set the <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> property, <xref:System.Web.UI.WebControls.BoundField> controls are generated. If you do not want <xref:System.Web.DynamicData.DynamicField> controls, you have the following options:      -   Set the <xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A> property to `null` in the `Page_Load` event handler. In that case, <xref:System.Web.UI.WebControls.BoundField> controls are generated.      -   Write custom code to automatically generate fields by creating and assigning your own <xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A> class and assigning an instance of it to the control.      -   Set AutoGenerateColumns to `false`. In that case, no fields are generated, and you must manually specify fields using controls such as <xref:System.Web.UI.WebControls.BoundField> or <xref:System.Web.UI.WebControls.ImageField>.      -   Do not set the <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> property. In that case, <xref:System.Web.UI.WebControls.BoundField> controls are generated.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the AutoGenerateColumns property is set to <ph id=\"ph1\">`true`</ph>, an &lt;xref:System.Web.UI.WebControls.AutoGeneratedField&gt; object is automatically created for each field in the data source.","pos":[0,177],"source":"When the AutoGenerateColumns property is set to `true`, an <xref:System.Web.UI.WebControls.AutoGeneratedField> object is automatically created for each field in the data source."},{"content":"Each field is then displayed as a column in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control in the order that the fields appear in the data source.","pos":[178,331],"source":" Each field is then displayed as a column in the <xref:System.Web.UI.WebControls.GridView> control in the order that the fields appear in the data source."},{"content":"This option provides a convenient way to display every field in the data source; however, you have limited control of how an automatically generated column field is displayed or behaves.","pos":[332,518]},{"content":"Instead of letting the &lt;xref:System.Web.UI.WebControls.GridView&gt; control automatically generate the column fields, you can manually define the column fields by setting the AutoGenerateColumns property to <ph id=\"ph1\">`false`</ph> and then creating a custom <ph id=\"ph2\">`Columns`</ph> collection.","pos":[525,785],"source":"       Instead of letting the <xref:System.Web.UI.WebControls.GridView> control automatically generate the column fields, you can manually define the column fields by setting the AutoGenerateColumns property to `false` and then creating a custom `Columns` collection."},{"content":"In addition to bound column fields, you can also display a button column field, a check box column field, a command field, a hyperlink column field, an image field, or a column field based on your own custom-defined template.","pos":[786,1011]},{"content":"You can also combine explicitly declared column fields with automatically generated column fields.","pos":[1018,1116]},{"content":"When both are used, explicitly declared column fields are rendered first, followed by the automatically generated column fields.","pos":[1117,1245]},{"content":"Automatically generated bound column fields are not added to the &lt;xref:System.Web.UI.WebControls.GridView.Columns%2A&gt; collection.","pos":[1246,1375],"source":" Automatically generated bound column fields are not added to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection."},{"content":"For more information, see &lt;xref:System.Web.UI.WebControls.GridView.Columns%2A&gt;.","pos":[1376,1455],"source":" For more information, see <xref:System.Web.UI.WebControls.GridView.Columns%2A>."},{"content":"If you set this property to <ph id=\"ph1\">`true`</ph> and set the &lt;xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A&gt; property to a model type, &lt;xref:System.Web.DynamicData.DynamicField&gt; controls are generated.","pos":[1462,1663],"source":"       If you set this property to `true` and set the <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> property to a model type, <xref:System.Web.DynamicData.DynamicField> controls are generated."},{"content":"If you do not set the &lt;xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A&gt; property, &lt;xref:System.Web.UI.WebControls.BoundField&gt; controls are generated.","pos":[1664,1825],"source":" If you do not set the <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> property, <xref:System.Web.UI.WebControls.BoundField> controls are generated."},{"content":"If you do not want &lt;xref:System.Web.DynamicData.DynamicField&gt; controls, you have the following options:      -   Set the &lt;xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A&gt; property to <ph id=\"ph1\">`null`</ph> in the <ph id=\"ph2\">`Page_Load`</ph> event handler.","pos":[1826,2061],"source":" If you do not want <xref:System.Web.DynamicData.DynamicField> controls, you have the following options:      -   Set the <xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A> property to `null` in the `Page_Load` event handler."},{"content":"In that case, &lt;xref:System.Web.UI.WebControls.BoundField&gt; controls are generated.","pos":[2062,2143],"source":" In that case, <xref:System.Web.UI.WebControls.BoundField> controls are generated."},{"content":"-   Write custom code to automatically generate fields by creating and assigning your own &lt;xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A&gt; class and assigning an instance of it to the control.","pos":[2149,2354],"source":"      -   Write custom code to automatically generate fields by creating and assigning your own <xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A> class and assigning an instance of it to the control."},{"content":"-   Set AutoGenerateColumns to <ph id=\"ph1\">`false`</ph>.","pos":[2360,2399],"source":"      -   Set AutoGenerateColumns to `false`."},{"content":"In that case, no fields are generated, and you must manually specify fields using controls such as &lt;xref:System.Web.UI.WebControls.BoundField&gt; or &lt;xref:System.Web.UI.WebControls.ImageField&gt;.","pos":[2400,2590],"source":" In that case, no fields are generated, and you must manually specify fields using controls such as <xref:System.Web.UI.WebControls.BoundField> or <xref:System.Web.UI.WebControls.ImageField>."},{"content":"-   Do not set the &lt;xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A&gt; property.","pos":[2596,2686],"source":"      -   Do not set the <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> property."},{"content":"In that case, &lt;xref:System.Web.UI.WebControls.BoundField&gt; controls are generated.","pos":[2687,2768],"source":" In that case, <xref:System.Web.UI.WebControls.BoundField> controls are generated."}]},{"pos":[76084,76368],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically create bound fields for each field in the data source; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to automatically create bound fields for each field in the data source; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,207],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically create bound fields for each field in the data source; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[208,284],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[76891,77137],"content":"Gets or sets a value indicating whether a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.CommandField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> field column with a Delete button for each data row is automatically added to a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether a <xref href=\"System.Web.UI.WebControls.CommandField\"></xref> field column with a Delete button for each data row is automatically added to a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[77150,79023],"content":"When a data source control that supports deleting is bound to a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.GridView> control can take advantage of the data source control's capabilities and provide automatic deleting functionality.      > [!NOTE] >  For a data source control to delete data, it must be configured to delete data. To configure a data source control to delete records, see the documentation for the specific data source control.       When the AutoGenerateDeleteButton property is set to `true`, a column (represented by a <xref:System.Web.UI.WebControls.CommandField> object) with a Delete button for each data row is automatically added to the <xref:System.Web.UI.WebControls.GridView> control. Clicking the Delete button for a row permanently removes that record from the data source.      > [!NOTE] >  You must also set the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property to identify the key field or fields of the data source for the automatic deleting feature to work.       The <xref:System.Web.UI.WebControls.GridView> control provides several events that you can use to perform a custom action when a row is deleted. The following table lists the available events.      |Event|Description|   |-----------|-----------------|   |<xref:System.Web.UI.WebControls.GridView.RowDeleted>|Occurs when a row's Delete button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control deletes the record from the data source. This event is often used to check the results of the delete operation.|   |<xref:System.Web.UI.WebControls.GridView.RowDeleting>|Occurs when a row's Delete button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control deletes the record from the data source. This event is often used to cancel the deleting operation.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When a data source control that supports deleting is bound to a &lt;xref:System.Web.UI.WebControls.GridView&gt; control, the &lt;xref:System.Web.UI.WebControls.GridView&gt; control can take advantage of the data source control's capabilities and provide automatic deleting functionality.","pos":[0,275],"source":"When a data source control that supports deleting is bound to a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.GridView> control can take advantage of the data source control's capabilities and provide automatic deleting functionality."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  For a data source control to delete data, it must be configured to delete data.","pos":[281,373],"source":"      > [!NOTE] >  For a data source control to delete data, it must be configured to delete data."},{"content":"To configure a data source control to delete records, see the documentation for the specific data source control.","pos":[374,487]},{"content":"When the AutoGenerateDeleteButton property is set to <ph id=\"ph1\">`true`</ph>, a column (represented by a &lt;xref:System.Web.UI.WebControls.CommandField&gt; object) with a Delete button for each data row is automatically added to the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[494,755],"source":"       When the AutoGenerateDeleteButton property is set to `true`, a column (represented by a <xref:System.Web.UI.WebControls.CommandField> object) with a Delete button for each data row is automatically added to the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"Clicking the Delete button for a row permanently removes that record from the data source.","pos":[756,846]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You must also set the &lt;xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A&gt; property to identify the key field or fields of the data source for the automatic deleting feature to work.","pos":[852,1052],"source":"      > [!NOTE] >  You must also set the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property to identify the key field or fields of the data source for the automatic deleting feature to work."},{"content":"The &lt;xref:System.Web.UI.WebControls.GridView&gt; control provides several events that you can use to perform a custom action when a row is deleted.","pos":[1059,1203],"source":"       The <xref:System.Web.UI.WebControls.GridView> control provides several events that you can use to perform a custom action when a row is deleted."},{"content":"The following table lists the available events.","pos":[1204,1251]},{"content":"|Event|Description|   |-----------|-----------------|   |&lt;xref:System.Web.UI.WebControls.GridView.RowDeleted&gt;|Occurs when a row's Delete button is clicked, but after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control deletes the record from the data source.","pos":[1257,1517],"source":"      |Event|Description|   |-----------|-----------------|   |<xref:System.Web.UI.WebControls.GridView.RowDeleted>|Occurs when a row's Delete button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control deletes the record from the data source."},{"content":"This event is often used to check the results of the delete operation.|   |&lt;xref:System.Web.UI.WebControls.GridView.RowDeleting&gt;|Occurs when a row's Delete button is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control deletes the record from the data source.","pos":[1518,1798],"source":" This event is often used to check the results of the delete operation.|   |<xref:System.Web.UI.WebControls.GridView.RowDeleting>|Occurs when a row's Delete button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control deletes the record from the data source."},{"content":"This event is often used to cancel the deleting operation.|","pos":[1799,1858]}]},{"pos":[79558,79908],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically add a <xref href=\"System.Web.UI.WebControls.CommandField\"></xref> field column with a Delete button for each data row; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to automatically add a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.CommandField\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> field column with a Delete button for each data row; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,271],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically add a <xref href=\"System.Web.UI.WebControls.CommandField\"></xref> field column with a Delete button for each data row; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[272,350],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[80426,80671],"content":"Gets or sets a value indicating whether a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.CommandField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> field column with an Edit button for each data row is automatically added to a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether a <xref href=\"System.Web.UI.WebControls.CommandField\"></xref> field column with an Edit button for each data row is automatically added to a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[80684,84628],"content":"When a data source control that supports updating is bound to a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.GridView> control can take advantage of the data source control's capabilities and provide automatic updating functionality.      > [!NOTE] >  For a data source control to update data, it must be configured to update data. To configure a data source control to update records, see the documentation for the specific data source control.       When the AutoGenerateEditButton property is set to `true`, a column (represented by a <xref:System.Web.UI.WebControls.CommandField> object) with an Edit button for each data row is automatically added to the <xref:System.Web.UI.WebControls.GridView> control. Clicking an Edit button for a row puts that row in edit mode. When a row is in edit mode, each column field in the row that is not read-only displays the appropriate input control, such as a <xref:System.Web.UI.WebControls.TextBox> control, for the field's data type. This allows the user to modify the field's value.       When clicked, the Edit button is also replaced with an Update button and a Cancel button. Clicking the Update button updates the row in the data source with any value changes and returns the row to display mode. Clicking the Cancel button abandons any value changes and returns the row to display mode.      > [!NOTE] >  You can programmatically put a row in edit mode by setting the <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> property with the index of the row. To programmatically exit edit mode, set the <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> property to -1.       When using the built-in updating functionality, you must set the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property with a comma-separated list of field names to identify the primary key field or fields of the data source; otherwise, the built-in updating functionality will not be able to update the correct record. When using automatically generated field columns (by setting the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property to `true`), the <xref:System.Web.UI.WebControls.GridView> control automatically ensures that the automatically generated field columns that correspond to the field or fields specified in the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property are read-only.       You can control the appearance of a row that is in edit mode by using the <xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A> property. Common settings usually include a custom background color, foreground color, and font properties.       The <xref:System.Web.UI.WebControls.GridView> control provides several events that you can use to perform a custom action when a row is updated. The following table lists the available events.      |Event|Description|   |-----------|-----------------|   |<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>|Occurs when a row's Cancel button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control cancels out of edit mode. This event is often used to stop the canceling operation.|   |<xref:System.Web.UI.WebControls.GridView.RowEditing>|Occurs when a row's Edit button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control enters edit mode. This event is often used to cancel the editing operation.|   |<xref:System.Web.UI.WebControls.GridView.RowUpdated>|Occurs when a row's Update button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control updates the row. This event is often used to check the results of the update operation.|   |<xref:System.Web.UI.WebControls.GridView.RowUpdating>|Occurs when a row's Update button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control updates the row. This event is often used to cancel the updating operation.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When a data source control that supports updating is bound to a &lt;xref:System.Web.UI.WebControls.GridView&gt; control, the &lt;xref:System.Web.UI.WebControls.GridView&gt; control can take advantage of the data source control's capabilities and provide automatic updating functionality.","pos":[0,275],"source":"When a data source control that supports updating is bound to a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.GridView> control can take advantage of the data source control's capabilities and provide automatic updating functionality."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  For a data source control to update data, it must be configured to update data.","pos":[281,373],"source":"      > [!NOTE] >  For a data source control to update data, it must be configured to update data."},{"content":"To configure a data source control to update records, see the documentation for the specific data source control.","pos":[374,487]},{"content":"When the AutoGenerateEditButton property is set to <ph id=\"ph1\">`true`</ph>, a column (represented by a &lt;xref:System.Web.UI.WebControls.CommandField&gt; object) with an Edit button for each data row is automatically added to the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[494,752],"source":"       When the AutoGenerateEditButton property is set to `true`, a column (represented by a <xref:System.Web.UI.WebControls.CommandField> object) with an Edit button for each data row is automatically added to the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"Clicking an Edit button for a row puts that row in edit mode.","pos":[753,814]},{"content":"When a row is in edit mode, each column field in the row that is not read-only displays the appropriate input control, such as a &lt;xref:System.Web.UI.WebControls.TextBox&gt; control, for the field's data type.","pos":[815,1020],"source":" When a row is in edit mode, each column field in the row that is not read-only displays the appropriate input control, such as a <xref:System.Web.UI.WebControls.TextBox> control, for the field's data type."},{"content":"This allows the user to modify the field's value.","pos":[1021,1070]},{"content":"When clicked, the Edit button is also replaced with an Update button and a Cancel button.","pos":[1077,1166]},{"content":"Clicking the Update button updates the row in the data source with any value changes and returns the row to display mode.","pos":[1167,1288]},{"content":"Clicking the Cancel button abandons any value changes and returns the row to display mode.","pos":[1289,1379]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You can programmatically put a row in edit mode by setting the &lt;xref:System.Web.UI.WebControls.GridView.EditIndex%2A&gt; property with the index of the row.","pos":[1385,1551],"source":"      > [!NOTE] >  You can programmatically put a row in edit mode by setting the <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> property with the index of the row."},{"content":"To programmatically exit edit mode, set the &lt;xref:System.Web.UI.WebControls.GridView.EditIndex%2A&gt; property to -1.","pos":[1552,1666],"source":" To programmatically exit edit mode, set the <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> property to -1."},{"content":"When using the built-in updating functionality, you must set the &lt;xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A&gt; property with a comma-separated list of field names to identify the primary key field or fields of the data source; otherwise, the built-in updating functionality will not be able to update the correct record.","pos":[1673,2005],"source":"       When using the built-in updating functionality, you must set the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property with a comma-separated list of field names to identify the primary key field or fields of the data source; otherwise, the built-in updating functionality will not be able to update the correct record."},{"content":"When using automatically generated field columns (by setting the &lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt; property to <ph id=\"ph1\">`true`</ph>), the &lt;xref:System.Web.UI.WebControls.GridView&gt; control automatically ensures that the automatically generated field columns that correspond to the field or fields specified in the &lt;xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A&gt; property are read-only.","pos":[2006,2417],"source":" When using automatically generated field columns (by setting the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property to `true`), the <xref:System.Web.UI.WebControls.GridView> control automatically ensures that the automatically generated field columns that correspond to the field or fields specified in the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property are read-only."},{"content":"You can control the appearance of a row that is in edit mode by using the &lt;xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A&gt; property.","pos":[2424,2565],"source":"       You can control the appearance of a row that is in edit mode by using the <xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A> property."},{"content":"Common settings usually include a custom background color, foreground color, and font properties.","pos":[2566,2663]},{"content":"The &lt;xref:System.Web.UI.WebControls.GridView&gt; control provides several events that you can use to perform a custom action when a row is updated.","pos":[2670,2814],"source":"       The <xref:System.Web.UI.WebControls.GridView> control provides several events that you can use to perform a custom action when a row is updated."},{"content":"The following table lists the available events.","pos":[2815,2862]},{"content":"|Event|Description|   |-----------|-----------------|   |&lt;xref:System.Web.UI.WebControls.GridView.RowCancelingEdit&gt;|Occurs when a row's Cancel button is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control cancels out of edit mode.","pos":[2868,3120],"source":"      |Event|Description|   |-----------|-----------------|   |<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>|Occurs when a row's Cancel button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control cancels out of edit mode."},{"content":"This event is often used to stop the canceling operation.|   |&lt;xref:System.Web.UI.WebControls.GridView.RowEditing&gt;|Occurs when a row's Edit button is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control enters edit mode.","pos":[3121,3362],"source":" This event is often used to stop the canceling operation.|   |<xref:System.Web.UI.WebControls.GridView.RowEditing>|Occurs when a row's Edit button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control enters edit mode."},{"content":"This event is often used to cancel the editing operation.|   |&lt;xref:System.Web.UI.WebControls.GridView.RowUpdated&gt;|Occurs when a row's Update button is clicked, but after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control updates the row.","pos":[3363,3604],"source":" This event is often used to cancel the editing operation.|   |<xref:System.Web.UI.WebControls.GridView.RowUpdated>|Occurs when a row's Update button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control updates the row."},{"content":"This event is often used to check the results of the update operation.|   |&lt;xref:System.Web.UI.WebControls.GridView.RowUpdating&gt;|Occurs when a row's Update button is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control updates the row.","pos":[3605,3861],"source":" This event is often used to check the results of the update operation.|   |<xref:System.Web.UI.WebControls.GridView.RowUpdating>|Occurs when a row's Update button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control updates the row."},{"content":"This event is often used to cancel the updating operation.|","pos":[3862,3921]}]},{"pos":[85160,85509],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically add a <xref href=\"System.Web.UI.WebControls.CommandField\"></xref> field column with an Edit button for each data row; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to automatically add a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.CommandField\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> field column with an Edit button for each data row; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,270],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically add a <xref href=\"System.Web.UI.WebControls.CommandField\"></xref> field column with an Edit button for each data row; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[271,349],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[86035,86281],"content":"Gets or sets a value indicating whether a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.CommandField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> field column with a Select button for each data row is automatically added to a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether a <xref href=\"System.Web.UI.WebControls.CommandField\"></xref> field column with a Select button for each data row is automatically added to a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[86294,88577],"content":"When the AutoGenerateSelectButton property is set to `true`, a column (represented by a <xref:System.Web.UI.WebControls.CommandField> object) with a Select button for each data row is automatically added to the <xref:System.Web.UI.WebControls.GridView> control. Clicking the Select button for a row selects that row in the control, which sets the <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> property to the index of the row. To retrieve the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the selected row, use the <xref:System.Web.UI.WebControls.GridView.SelectedRow%2A> property. You can also get the primary key value for the selected record by using the <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> property. The <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> property contains the values of the key fields specified in the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property.      > [!NOTE] >  You can programmatically select a row by setting the <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> property. To cancel the selection of a row, set the <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> property to -1.       You can control the appearance of the selected row by using the <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> property. Common settings usually include a custom background color, foreground color, and font properties.       The <xref:System.Web.UI.WebControls.GridView> control provides several events that you can use to perform a custom action when a row is selected. The following table lists the available events.      |Event|Description|   |-----------|-----------------|   |<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|Occurs when a row's Select button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the select operation. This event is often used to perform a task after a row is selected in the control.|   |<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>|Occurs when a row's Select button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the select operation. This event is often used to cancel the selecting operation.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the AutoGenerateSelectButton property is set to <ph id=\"ph1\">`true`</ph>, a column (represented by a &lt;xref:System.Web.UI.WebControls.CommandField&gt; object) with a Select button for each data row is automatically added to the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,261],"source":"When the AutoGenerateSelectButton property is set to `true`, a column (represented by a <xref:System.Web.UI.WebControls.CommandField> object) with a Select button for each data row is automatically added to the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"Clicking the Select button for a row selects that row in the control, which sets the &lt;xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A&gt; property to the index of the row.","pos":[262,439],"source":" Clicking the Select button for a row selects that row in the control, which sets the <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> property to the index of the row."},{"content":"To retrieve the &lt;xref:System.Web.UI.WebControls.GridViewRow&gt; object that represents the selected row, use the &lt;xref:System.Web.UI.WebControls.GridView.SelectedRow%2A&gt; property.","pos":[440,616],"source":" To retrieve the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the selected row, use the <xref:System.Web.UI.WebControls.GridView.SelectedRow%2A> property."},{"content":"You can also get the primary key value for the selected record by using the &lt;xref:System.Web.UI.WebControls.GridView.SelectedValue%2A&gt; property.","pos":[617,761],"source":" You can also get the primary key value for the selected record by using the <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> property."},{"content":"The &lt;xref:System.Web.UI.WebControls.GridView.SelectedValue%2A&gt; property contains the values of the key fields specified in the &lt;xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A&gt; property.","pos":[762,956],"source":" The <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> property contains the values of the key fields specified in the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You can programmatically select a row by setting the &lt;xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A&gt; property.","pos":[962,1096],"source":"      > [!NOTE] >  You can programmatically select a row by setting the <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> property."},{"content":"To cancel the selection of a row, set the &lt;xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A&gt; property to -1.","pos":[1097,1213],"source":" To cancel the selection of a row, set the <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> property to -1."},{"content":"You can control the appearance of the selected row by using the &lt;xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A&gt; property.","pos":[1220,1355],"source":"       You can control the appearance of the selected row by using the <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> property."},{"content":"Common settings usually include a custom background color, foreground color, and font properties.","pos":[1356,1453]},{"content":"The &lt;xref:System.Web.UI.WebControls.GridView&gt; control provides several events that you can use to perform a custom action when a row is selected.","pos":[1460,1605],"source":"       The <xref:System.Web.UI.WebControls.GridView> control provides several events that you can use to perform a custom action when a row is selected."},{"content":"The following table lists the available events.","pos":[1606,1653]},{"content":"|Event|Description|   |-----------|-----------------|   |&lt;xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged&gt;|Occurs when a row's Select button is clicked, but after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control handles the select operation.","pos":[1659,1918],"source":"      |Event|Description|   |-----------|-----------------|   |<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|Occurs when a row's Select button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the select operation."},{"content":"This event is often used to perform a task after a row is selected in the control.|   |&lt;xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging&gt;|Occurs when a row's Select button is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control handles the select operation.","pos":[1919,2210],"source":" This event is often used to perform a task after a row is selected in the control.|   |<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>|Occurs when a row's Select button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the select operation."},{"content":"This event is often used to cancel the selecting operation.|","pos":[2211,2271]}]},{"pos":[89119,89469],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically add a <xref href=\"System.Web.UI.WebControls.CommandField\"></xref> field column with a Select button for each data row; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to automatically add a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.CommandField\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> field column with a Select button for each data row; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,271],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically add a <xref href=\"System.Web.UI.WebControls.CommandField\"></xref> field column with a Select button for each data row; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[272,350],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[89937,90068],"content":"Gets or sets the URL to an image to display in the background of a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the URL to an image to display in the background of a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[90081,90450],"content":"Use the BackImageUrl property to specify the URL to an image to display in the background of a <xref:System.Web.UI.WebControls.GridView> control.      > [!NOTE] >  If the specified image is smaller than the <xref:System.Web.UI.WebControls.GridView> control, the image is tiled to fill in the background. If the image is larger than the control, the image is cropped.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the BackImageUrl property to specify the URL to an image to display in the background of a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,145],"source":"Use the BackImageUrl property to specify the URL to an image to display in the background of a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the specified image is smaller than the &lt;xref:System.Web.UI.WebControls.GridView&gt; control, the image is tiled to fill in the background.","pos":[151,303],"source":"      > [!NOTE] >  If the specified image is smaller than the <xref:System.Web.UI.WebControls.GridView> control, the image is tiled to fill in the background."},{"content":"If the image is larger than the control, the image is cropped.","pos":[304,366]}]},{"pos":[90981,91185],"content":"The URL of an image to display in the background of the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control. The default is an empty string (\"\"), which indicates that this property is not set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL of an image to display in the background of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","pos":[0,120],"source":"The URL of an image to display in the background of the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"content":"The default is an empty string (\"\"), which indicates that this property is not set.","pos":[121,204]}]},{"pos":[91651,91830],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the bottom pager row in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> object that represents the bottom pager row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[91843,93072],"content":"When paging is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`), an additional row called the pager row is automatically displayed in the <xref:System.Web.UI.WebControls.GridView> control. The pager row contains controls that allow the user to navigate to the other pages, and can be displayed at the top, the bottom, or both the top and bottom of the control. Use the BottomPagerRow property to programmatically access the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the bottom pager row in the <xref:System.Web.UI.WebControls.GridView> control.      > [!NOTE] >  The BottomPagerRow property is available only after the <xref:System.Web.UI.WebControls.GridView> control creates the bottom pager row in the <xref:System.Web.UI.WebControls.GridView.RowCreated> event.       This property is commonly used when you need to programmatically manipulate the bottom pager row, for example when adding custom content. Any modification to the BottomPagerRow property must be performed after the <xref:System.Web.UI.WebControls.GridView> control has been rendered; otherwise, the <xref:System.Web.UI.WebControls.GridView> control will overwrite any changes.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When paging is enabled (by setting the &lt;xref:System.Web.UI.WebControls.GridView.AllowPaging%2A&gt; property to <ph id=\"ph1\">`true`</ph>), an additional row called the pager row is automatically displayed in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,240],"source":"When paging is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`), an additional row called the pager row is automatically displayed in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The pager row contains controls that allow the user to navigate to the other pages, and can be displayed at the top, the bottom, or both the top and bottom of the control.","pos":[241,412]},{"content":"Use the BottomPagerRow property to programmatically access the &lt;xref:System.Web.UI.WebControls.GridViewRow&gt; object that represents the bottom pager row in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[413,622],"source":" Use the BottomPagerRow property to programmatically access the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the bottom pager row in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The BottomPagerRow property is available only after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control creates the bottom pager row in the &lt;xref:System.Web.UI.WebControls.GridView.RowCreated&gt; event.","pos":[628,842],"source":"      > [!NOTE] >  The BottomPagerRow property is available only after the <xref:System.Web.UI.WebControls.GridView> control creates the bottom pager row in the <xref:System.Web.UI.WebControls.GridView.RowCreated> event."},{"content":"This property is commonly used when you need to programmatically manipulate the bottom pager row, for example when adding custom content.","pos":[849,986]},{"content":"Any modification to the BottomPagerRow property must be performed after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control has been rendered; otherwise, the &lt;xref:System.Web.UI.WebControls.GridView&gt; control will overwrite any changes.","pos":[987,1224],"source":" Any modification to the BottomPagerRow property must be performed after the <xref:System.Web.UI.WebControls.GridView> control has been rendered; otherwise, the <xref:System.Web.UI.WebControls.GridView> control will overwrite any changes."}]},{"pos":[93766,93879],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the bottom pager row in the control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> that represents the bottom pager row in the control."},{"pos":[94312,94544],"content":"Gets or sets the text to render in an HTML caption element in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control. This property is provided to make the control more accessible to users of assistive technology devices.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the text to render in an HTML caption element in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","pos":[0,128],"source":"Gets or sets the text to render in an HTML caption element in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"content":"This property is provided to make the control more accessible to users of assistive technology devices.","pos":[129,232]}]},{"pos":[94557,95274],"content":"Use the Caption property to specify the text to render in an HTML caption element in a <xref:System.Web.UI.WebControls.GridView> control. The text that you specify provides assistive technology devices with a description of the table that can be used to make the control more accessible. You can also specify the position at which to render the HTML caption element by using the <xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A> property.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the Caption property to specify the text to render in an HTML caption element in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,137],"source":"Use the Caption property to specify the text to render in an HTML caption element in a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The text that you specify provides assistive technology devices with a description of the table that can be used to make the control more accessible.","pos":[138,287]},{"content":"You can also specify the position at which to render the HTML caption element by using the &lt;xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A&gt; property.","pos":[288,446],"source":" You can also specify the position at which to render the HTML caption element by using the <xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A> property."},{"content":"The value of this property, when set, can be saved automatically to a resource file by using a designer tool.","pos":[453,562]},{"content":"For more information, see &lt;xref:System.ComponentModel.LocalizableAttribute&gt; and <bpt id=\"p1\">[</bpt>Globalization and Localization<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[563,715],"source":" For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[95763,95946],"content":"A string that represents the text to render in an HTML caption element in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control. The default value is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents the text to render in an HTML caption element in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","pos":[0,140],"source":"A string that represents the text to render in an HTML caption element in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"content":"The default value is an empty string (\"\").","pos":[141,183]}]},{"pos":[96397,96647],"content":"Gets or sets the horizontal or vertical position of the HTML caption element in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control. This property is provided to make the control more accessible to users of assistive technology devices.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the horizontal or vertical position of the HTML caption element in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","pos":[0,146],"source":"Gets or sets the horizontal or vertical position of the HTML caption element in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"content":"This property is provided to make the control more accessible to users of assistive technology devices.","pos":[147,250]}]},{"pos":[96660,97845],"content":"Use the CaptionAlign property to specify the horizontal or vertical position of the HTML caption element in a <xref:System.Web.UI.WebControls.GridView> control. This property is provided to make the control more accessible to users of assistive technology devices.       This property is set using one of the <xref:System.Web.UI.WebControls.TableCaptionAlign> enumeration values. The following table lists the possible values.      |Value|Description|   |-----------|-----------------|   |`TableCaptionAlign.Bottom`|The caption element is aligned with the bottom of the table.|   |`TableCaptionAlign.Left`|The caption element is aligned with the left side of the table.|   |`TableCaptionAlign.NotSet`|The caption element's alignment is not set.|   |`TableCaptionAlign.Right`|The caption element is aligned with the right side of the table.|   |`TableCaptionAlign.Top`|The caption element is aligned with the top of the table.|      > [!NOTE] >  When this property is set to `TableCaptionAlign.NotSet`, the default value of the browser is used.       To specify the text for the HTML caption element, use the <xref:System.Web.UI.WebControls.GridView.Caption%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the CaptionAlign property to specify the horizontal or vertical position of the HTML caption element in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,160],"source":"Use the CaptionAlign property to specify the horizontal or vertical position of the HTML caption element in a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"This property is provided to make the control more accessible to users of assistive technology devices.","pos":[161,264]},{"content":"This property is set using one of the &lt;xref:System.Web.UI.WebControls.TableCaptionAlign&gt; enumeration values.","pos":[271,379],"source":"       This property is set using one of the <xref:System.Web.UI.WebControls.TableCaptionAlign> enumeration values."},{"content":"The following table lists the possible values.","pos":[380,426]},{"content":"|Value|Description|   |-----------|-----------------|   |<ph id=\"ph1\">`TableCaptionAlign.Bottom`</ph>|The caption element is aligned with the bottom of the table.|   |<ph id=\"ph2\">`TableCaptionAlign.Left`</ph>|The caption element is aligned with the left side of the table.|   |<ph id=\"ph3\">`TableCaptionAlign.NotSet`</ph>|The caption element's alignment is not set.|   |<ph id=\"ph4\">`TableCaptionAlign.Right`</ph>|The caption element is aligned with the right side of the table.|   |<ph id=\"ph5\">`TableCaptionAlign.Top`</ph>|The caption element is aligned with the top of the table.|      &gt; <ph id=\"ph6\">[!NOTE]</ph> &gt;  When this property is set to <ph id=\"ph7\">`TableCaptionAlign.NotSet`</ph>, the default value of the browser is used.","pos":[432,1043],"source":"      |Value|Description|   |-----------|-----------------|   |`TableCaptionAlign.Bottom`|The caption element is aligned with the bottom of the table.|   |`TableCaptionAlign.Left`|The caption element is aligned with the left side of the table.|   |`TableCaptionAlign.NotSet`|The caption element's alignment is not set.|   |`TableCaptionAlign.Right`|The caption element is aligned with the right side of the table.|   |`TableCaptionAlign.Top`|The caption element is aligned with the top of the table.|      > [!NOTE] >  When this property is set to `TableCaptionAlign.NotSet`, the default value of the browser is used."},{"content":"To specify the text for the HTML caption element, use the &lt;xref:System.Web.UI.WebControls.GridView.Caption%2A&gt; property.","pos":[1050,1170],"source":"       To specify the text for the HTML caption element, use the <xref:System.Web.UI.WebControls.GridView.Caption%2A> property."}]},{"pos":[98463,98705],"content":"One of the <xref href=\"System.Web.UI.WebControls.TableCaptionAlign\"></xref> values. The default is <xref uid=\"langword_csharp_TableCaptionAlign.NotSet\" name=\"TableCaptionAlign.NotSet\" href=\"\"></xref>, which uses the browser's default setting.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableCaptionAlign\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,83],"source":"One of the <xref href=\"System.Web.UI.WebControls.TableCaptionAlign\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_TableCaptionAlign.NotSet\" name=\"TableCaptionAlign.NotSet\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which uses the browser's default setting.","pos":[84,242],"source":" The default is <xref uid=\"langword_csharp_TableCaptionAlign.NotSet\" name=\"TableCaptionAlign.NotSet\" href=\"\"></xref>, which uses the browser's default setting."}]},{"pos":[98895,99017],"content":"The specified value is not one of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableCaptionAlign\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values.","needQuote":true,"needEscape":true,"source":"The specified value is not one of the <xref href=\"System.Web.UI.WebControls.TableCaptionAlign\"></xref> enumeration values."},{"pos":[99390,99476],"content":"Gets or sets the amount of space between the contents of a cell and the cell's border.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the amount of space between the contents of a cell and the cell's border.","pos":[0,86]}]},{"pos":[99489,100098],"content":"Use the CellPadding property to control the spacing between the contents of a cell and the cell's border. The padding amount specified is added to all four sides of the cell.       All cells in the same column of a <xref:System.Web.UI.WebControls.GridView> control have the same width. The padding amount is applied to the widest cell and all other cells in the column have this cell width. Similarly, all cells in the same row have the same height. The padding amount is applied to the tallest cell in the row and all other cells in the row have this cell height. Individual cell sizes cannot be specified.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the CellPadding property to control the spacing between the contents of a cell and the cell's border. The padding amount specified is added to all four sides of the cell.       All cells in the same column of a <xref:System.Web.UI.WebControls.GridView> control have the same width. The padding amount is applied to the widest cell and all other cells in the column have this cell width. Similarly, all cells in the same row have the same height. The padding amount is applied to the tallest cell in the row and all other cells in the row have this cell height. Individual cell sizes cannot be specified.","pos":[0,607],"nodes":[{"content":"Use the CellPadding property to control the spacing between the contents of a cell and the cell's border.","pos":[0,105]},{"content":"The padding amount specified is added to all four sides of the cell.","pos":[106,174]},{"content":"All cells in the same column of a &lt;xref:System.Web.UI.WebControls.GridView&gt; control have the same width.","pos":[181,285],"source":"       All cells in the same column of a <xref:System.Web.UI.WebControls.GridView> control have the same width."},{"content":"The padding amount is applied to the widest cell and all other cells in the column have this cell width.","pos":[286,390]},{"content":"Similarly, all cells in the same row have the same height.","pos":[391,449]},{"content":"The padding amount is applied to the tallest cell in the row and all other cells in the row have this cell height.","pos":[450,564]},{"content":"Individual cell sizes cannot be specified.","pos":[565,607]}]}]},{"pos":[100614,100771],"content":"The amount of space, in pixels, between the contents of a cell and the cell's border. The default value is -1, which indicates that this property is not set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount of space, in pixels, between the contents of a cell and the cell's border. The default value is -1, which indicates that this property is not set.","pos":[0,157],"nodes":[{"content":"The amount of space, in pixels, between the contents of a cell and the cell's border.","pos":[0,85]},{"content":"The default value is -1, which indicates that this property is not set.","pos":[86,157]}]}]},{"pos":[101221,101268],"content":"Gets or sets the amount of space between cells.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the amount of space between cells.","pos":[0,47]}]},{"pos":[101281,101962],"content":"Use the CellSpacing property to control the spacing between adjacent cells in the <xref:System.Web.UI.WebControls.GridView> control. This spacing is applied both vertically and horizontally. The cell spacing is uniform for the entire control. Individual cell spacing between rows or columns cannot be specified.      > [!NOTE] >  If you set this property to a value greater than 0 and then set the <xref:System.Web.UI.WebControls.GridView.GridLines%2A> property to a value that displays the cell borders, a gap is displayed between the borders of adjacent cells. In this situation, the <xref:System.Web.UI.WebControls.Table.CellSpacing%2A> property controls the size of the gap.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the CellSpacing property to control the spacing between adjacent cells in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,132],"source":"Use the CellSpacing property to control the spacing between adjacent cells in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"This spacing is applied both vertically and horizontally.","pos":[133,190]},{"content":"The cell spacing is uniform for the entire control.","pos":[191,242]},{"content":"Individual cell spacing between rows or columns cannot be specified.","pos":[243,311]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If you set this property to a value greater than 0 and then set the &lt;xref:System.Web.UI.WebControls.GridView.GridLines%2A&gt; property to a value that displays the cell borders, a gap is displayed between the borders of adjacent cells.","pos":[317,562],"source":"      > [!NOTE] >  If you set this property to a value greater than 0 and then set the <xref:System.Web.UI.WebControls.GridView.GridLines%2A> property to a value that displays the cell borders, a gap is displayed between the borders of adjacent cells."},{"content":"In this situation, the &lt;xref:System.Web.UI.WebControls.Table.CellSpacing%2A&gt; property controls the size of the gap.","pos":[563,678],"source":" In this situation, the <xref:System.Web.UI.WebControls.Table.CellSpacing%2A> property controls the size of the gap."}]},{"pos":[102498,102568],"content":"The amount of space, in pixels, between cells. The default value is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount of space, in pixels, between cells. The default value is 0.","pos":[0,70],"nodes":[{"content":"The amount of space, in pixels, between cells.","pos":[0,46]},{"content":"The default value is 0.","pos":[47,70]}]}]},{"pos":[103048,103236],"content":"Gets or sets the names of the data fields whose values are appended to the <xref:System.Web.UI.Control.ClientID*> property value to uniquely identify each instance of a data-bound control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the names of the data fields whose values are appended to the &lt;xref:System.Web.UI.Control.ClientID*&gt; property value to uniquely identify each instance of a data-bound control.","pos":[0,188],"source":"Gets or sets the names of the data fields whose values are appended to the <xref:System.Web.UI.Control.ClientID*> property value to uniquely identify each instance of a data-bound control."}]},{"pos":[103248,103992],"content":"To prevent naming conflicts when multiple instances of a control are rendered in multiple rows of a <xref:System.Web.UI.WebControls.GridView> control, ASP.NET generates a unique <xref:System.Web.UI.Control.ClientID%2A> value for each instance. You specify how the <xref:System.Web.UI.Control.ClientID%2A> value is generated by setting the <xref:System.Web.UI.Control.ClientIDMode%2A> property. If you set the <xref:System.Web.UI.Control.ClientIDMode%2A> property to <xref:System.Web.UI.ClientIDMode>, ASP.NET will generate the <xref:System.Web.UI.Control.ClientID%2A> by appending a suffix that is derived from the data field or fields that are specified in ClientIDRowSuffix. If ClientIDRowSuffix is not set, the suffix is a sequential number.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To prevent naming conflicts when multiple instances of a control are rendered in multiple rows of a <xref:System.Web.UI.WebControls.GridView> control, ASP.NET generates a unique <xref:System.Web.UI.Control.ClientID%2A> value for each instance. You specify how the <xref:System.Web.UI.Control.ClientID%2A> value is generated by setting the <xref:System.Web.UI.Control.ClientIDMode%2A> property. If you set the <xref:System.Web.UI.Control.ClientIDMode%2A> property to <xref:System.Web.UI.ClientIDMode>, ASP.NET will generate the <xref:System.Web.UI.Control.ClientID%2A> by appending a suffix that is derived from the data field or fields that are specified in ClientIDRowSuffix. If ClientIDRowSuffix is not set, the suffix is a sequential number.","pos":[0,744],"nodes":[{"content":"To prevent naming conflicts when multiple instances of a control are rendered in multiple rows of a &lt;xref:System.Web.UI.WebControls.GridView&gt; control, ASP.NET generates a unique &lt;xref:System.Web.UI.Control.ClientID%2A&gt; value for each instance.","pos":[0,243],"source":"To prevent naming conflicts when multiple instances of a control are rendered in multiple rows of a <xref:System.Web.UI.WebControls.GridView> control, ASP.NET generates a unique <xref:System.Web.UI.Control.ClientID%2A> value for each instance."},{"content":"You specify how the &lt;xref:System.Web.UI.Control.ClientID%2A&gt; value is generated by setting the &lt;xref:System.Web.UI.Control.ClientIDMode%2A&gt; property.","pos":[244,393],"source":" You specify how the <xref:System.Web.UI.Control.ClientID%2A> value is generated by setting the <xref:System.Web.UI.Control.ClientIDMode%2A> property."},{"content":"If you set the &lt;xref:System.Web.UI.Control.ClientIDMode%2A&gt; property to &lt;xref:System.Web.UI.ClientIDMode&gt;, ASP.NET will generate the &lt;xref:System.Web.UI.Control.ClientID%2A&gt; by appending a suffix that is derived from the data field or fields that are specified in ClientIDRowSuffix.","pos":[394,676],"source":" If you set the <xref:System.Web.UI.Control.ClientIDMode%2A> property to <xref:System.Web.UI.ClientIDMode>, ASP.NET will generate the <xref:System.Web.UI.Control.ClientID%2A> by appending a suffix that is derived from the data field or fields that are specified in ClientIDRowSuffix."},{"content":"If ClientIDRowSuffix is not set, the suffix is a sequential number.","pos":[677,744]}]}]},{"pos":[104131,104313],"content":"The names of the data fields whose values are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <xref:System.Web.UI.Control.ClientID*> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The names of the data fields whose values are used to uniquely identify each instance of a data-bound control when ASP.NET generates the &lt;xref:System.Web.UI.Control.ClientID*&gt; value.","pos":[0,182],"source":"The names of the data fields whose values are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <xref:System.Web.UI.Control.ClientID*> value."}]},{"pos":[104839,105005],"content":"Gets the data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <xref:System.Web.UI.Control.ClientID*> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the &lt;xref:System.Web.UI.Control.ClientID*&gt; value.","pos":[0,166],"source":"Gets the data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <xref:System.Web.UI.Control.ClientID*> value."}]},{"pos":[105192,105353],"content":"The data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <xref:System.Web.UI.Control.ClientID*> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the &lt;xref:System.Web.UI.Control.ClientID*&gt; value.","pos":[0,161],"source":"The data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <xref:System.Web.UI.Control.ClientID*> value."}]},{"pos":[105797,105992],"content":"Gets a collection of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.DataControlField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that represent the column fields in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets a collection of <xref href=\"System.Web.UI.WebControls.DataControlField\"></xref> objects that represent the column fields in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[106005,109308],"content":"A column field represents a column in a <xref:System.Web.UI.WebControls.GridView> control. The Columns property (collection) is used to store all the explicitly declared column fields that get rendered in the <xref:System.Web.UI.WebControls.GridView> control. You can also use the Columns collection to programmatically manage the collection of column fields.      > [!NOTE] >  Explicitly declared column fields can be used in combination with automatically generated column fields. When both are used, explicitly declared column fields are rendered first, followed by the automatically generated column fields. Automatically generated column fields are not added to the Columns collection.       The column fields are displayed in the <xref:System.Web.UI.WebControls.GridView> control in the order that the column fields appear in the Columns collection. The following table shows the different column field classes that derive from the <xref:System.Web.UI.WebControls.DataControlField> class and can be used in the Columns collection.      |Column field type|Description|   |-----------------------|-----------------|   |<xref:System.Web.UI.WebControls.BoundField>|Displays the value of a field in a data source. This is the default column type of the <xref:System.Web.UI.WebControls.GridView> control.|   |<xref:System.Web.UI.WebControls.ButtonField>|Displays a command button for each item in the <xref:System.Web.UI.WebControls.GridView> control. This enables you to create a column of custom button controls, such as the Add or the Remove button.|   |<xref:System.Web.UI.WebControls.CheckBoxField>|Displays a check box for each item in the <xref:System.Web.UI.WebControls.GridView> control. This column field type is commonly used to display fields with a Boolean value.|   |<xref:System.Web.UI.WebControls.CommandField>|Displays predefined command buttons to perform select, edit, or delete operations.|   |<xref:System.Web.UI.WebControls.HyperLinkField>|Displays the value of a field in a data source as a hyperlink. This column field type enables you to bind a second field to the hyperlink's URL.|   |<xref:System.Web.UI.WebControls.ImageField>|Displays an image for each item in the <xref:System.Web.UI.WebControls.GridView> control.|   |<xref:System.Web.UI.WebControls.TemplateField>|Displays user-defined content for each item in the <xref:System.Web.UI.WebControls.GridView> control, according to a specified template. This column field type enables you to create a custom column field.|       Although you can programmatically add column fields to the Columns collection, it is easier to list the column fields declaratively in the <xref:System.Web.UI.WebControls.GridView> control and then use the <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> property of each column field to show or hide each column field.       If the <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> property of a column field is set to `false`, the column is not displayed in the <xref:System.Web.UI.WebControls.GridView> control and the data for the column does not make a round trip to the client. If you want the data for a column that is not visible to make a round trip, add the field name to the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A column field represents a column in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,90],"source":"A column field represents a column in a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The Columns property (collection) is used to store all the explicitly declared column fields that get rendered in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[91,259],"source":" The Columns property (collection) is used to store all the explicitly declared column fields that get rendered in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"You can also use the Columns collection to programmatically manage the collection of column fields.","pos":[260,359]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Explicitly declared column fields can be used in combination with automatically generated column fields.","pos":[365,482],"source":"      > [!NOTE] >  Explicitly declared column fields can be used in combination with automatically generated column fields."},{"content":"When both are used, explicitly declared column fields are rendered first, followed by the automatically generated column fields.","pos":[483,611]},{"content":"Automatically generated column fields are not added to the Columns collection.","pos":[612,690]},{"content":"The column fields are displayed in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control in the order that the column fields appear in the Columns collection.","pos":[697,855],"source":"       The column fields are displayed in the <xref:System.Web.UI.WebControls.GridView> control in the order that the column fields appear in the Columns collection."},{"content":"The following table shows the different column field classes that derive from the &lt;xref:System.Web.UI.WebControls.DataControlField&gt; class and can be used in the Columns collection.","pos":[856,1036],"source":" The following table shows the different column field classes that derive from the <xref:System.Web.UI.WebControls.DataControlField> class and can be used in the Columns collection."},{"content":"|Column field type|Description|   |-----------------------|-----------------|   |&lt;xref:System.Web.UI.WebControls.BoundField&gt;|Displays the value of a field in a data source.","pos":[1042,1214],"source":"      |Column field type|Description|   |-----------------------|-----------------|   |<xref:System.Web.UI.WebControls.BoundField>|Displays the value of a field in a data source."},{"content":"This is the default column type of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.|   |&lt;xref:System.Web.UI.WebControls.ButtonField&gt;|Displays a command button for each item in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[1215,1451],"source":" This is the default column type of the <xref:System.Web.UI.WebControls.GridView> control.|   |<xref:System.Web.UI.WebControls.ButtonField>|Displays a command button for each item in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"This enables you to create a column of custom button controls, such as the Add or the Remove button.|   |&lt;xref:System.Web.UI.WebControls.CheckBoxField&gt;|Displays a check box for each item in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[1452,1696],"source":" This enables you to create a column of custom button controls, such as the Add or the Remove button.|   |<xref:System.Web.UI.WebControls.CheckBoxField>|Displays a check box for each item in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"This column field type is commonly used to display fields with a Boolean value.|   |&lt;xref:System.Web.UI.WebControls.CommandField&gt;|Displays predefined command buttons to perform select, edit, or delete operations.|   |&lt;xref:System.Web.UI.WebControls.HyperLinkField&gt;|Displays the value of a field in a data source as a hyperlink.","pos":[1697,2024],"source":" This column field type is commonly used to display fields with a Boolean value.|   |<xref:System.Web.UI.WebControls.CommandField>|Displays predefined command buttons to perform select, edit, or delete operations.|   |<xref:System.Web.UI.WebControls.HyperLinkField>|Displays the value of a field in a data source as a hyperlink."},{"content":"This column field type enables you to bind a second field to the hyperlink's URL.|   |&lt;xref:System.Web.UI.WebControls.ImageField&gt;|Displays an image for each item in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.|   |&lt;xref:System.Web.UI.WebControls.TemplateField&gt;|Displays user-defined content for each item in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control, according to a specified template.","pos":[2025,2432],"source":" This column field type enables you to bind a second field to the hyperlink's URL.|   |<xref:System.Web.UI.WebControls.ImageField>|Displays an image for each item in the <xref:System.Web.UI.WebControls.GridView> control.|   |<xref:System.Web.UI.WebControls.TemplateField>|Displays user-defined content for each item in the <xref:System.Web.UI.WebControls.GridView> control, according to a specified template."},{"content":"This column field type enables you to create a custom column field.|       Although you can programmatically add column fields to the Columns collection, it is easier to list the column fields declaratively in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control and then use the &lt;xref:System.Web.UI.WebControls.DataControlField.Visible%2A&gt; property of each column field to show or hide each column field.","pos":[2433,2839],"source":" This column field type enables you to create a custom column field.|       Although you can programmatically add column fields to the Columns collection, it is easier to list the column fields declaratively in the <xref:System.Web.UI.WebControls.GridView> control and then use the <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> property of each column field to show or hide each column field."},{"content":"If the &lt;xref:System.Web.UI.WebControls.DataControlField.Visible%2A&gt; property of a column field is set to <ph id=\"ph1\">`false`</ph>, the column is not displayed in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control and the data for the column does not make a round trip to the client.","pos":[2846,3114],"source":"       If the <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> property of a column field is set to `false`, the column is not displayed in the <xref:System.Web.UI.WebControls.GridView> control and the data for the column does not make a round trip to the client."},{"content":"If you want the data for a column that is not visible to make a round trip, add the field name to the &lt;xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A&gt; property.","pos":[3115,3284],"source":" If you want the data for a column that is not visible to make a round trip, add the field name to the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property."}]},{"pos":[109829,110012],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.DataControlFieldCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains all the column fields in the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.DataControlFieldCollection\"></xref> that contains all the column fields in the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[110483,110663],"content":"Gets or sets the control that will automatically generate the columns for a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control that uses ASP.NET Dynamic Data features.","needQuote":true,"needEscape":true,"source":"Gets or sets the control that will automatically generate the columns for a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control that uses ASP.NET Dynamic Data features."},{"pos":[110675,111415],"content":"In order to use ASP.NET Dynamic Data features in a page, you must add a <xref:System.Web.DynamicData.DynamicDataManager> control to the page. This enables ASP.NET Dynamic Data features for data-bound controls in a page, such as <xref:System.Web.UI.WebControls.GridView> control. To enable an individual <xref:System.Web.UI.WebControls.GridView> control to use Dynamic Data features, you must associate it with the <xref:System.Web.DynamicData.DynamicDataManager> control by calling the <xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A?displayProperty=fullName> method during the `Page_Init` event. This method automatically sets the ColumnsGenerator property to the <xref:System.Web.DynamicData.DynamicDataManager> object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"In order to use ASP.NET Dynamic Data features in a page, you must add a &lt;xref:System.Web.DynamicData.DynamicDataManager&gt; control to the page.","pos":[0,141],"source":"In order to use ASP.NET Dynamic Data features in a page, you must add a <xref:System.Web.DynamicData.DynamicDataManager> control to the page."},{"content":"This enables ASP.NET Dynamic Data features for data-bound controls in a page, such as &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[142,278],"source":" This enables ASP.NET Dynamic Data features for data-bound controls in a page, such as <xref:System.Web.UI.WebControls.GridView> control."},{"content":"To enable an individual &lt;xref:System.Web.UI.WebControls.GridView&gt; control to use Dynamic Data features, you must associate it with the &lt;xref:System.Web.DynamicData.DynamicDataManager&gt; control by calling the &lt;xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A?displayProperty=fullName&gt; method during the <ph id=\"ph1\">`Page_Init`</ph> event.","pos":[279,615],"source":" To enable an individual <xref:System.Web.UI.WebControls.GridView> control to use Dynamic Data features, you must associate it with the <xref:System.Web.DynamicData.DynamicDataManager> control by calling the <xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A?displayProperty=fullName> method during the `Page_Init` event."},{"content":"This method automatically sets the ColumnsGenerator property to the &lt;xref:System.Web.DynamicData.DynamicDataManager&gt; object.","pos":[616,740],"source":" This method automatically sets the ColumnsGenerator property to the <xref:System.Web.DynamicData.DynamicDataManager> object."}]},{"pos":[111588,111755],"content":"The control that will automatically generate the columns for a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control that uses ASP.NET Dynamic Data features.","needQuote":true,"needEscape":true,"source":"The control that will automatically generate the columns for a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control that uses ASP.NET Dynamic Data features."},{"pos":[112480,112528],"content":"Creates an automatically generated column field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an automatically generated column field.","pos":[0,48]}]},{"pos":[112541,113074],"content":"The CreateAutoGeneratedColumn method is used to create an automatically generated column field when the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property is set to `true`. The properties of the automatically generated column field are specified through the <xref:System.Web.UI.WebControls.AutoGeneratedFieldProperties> object contained in the `fieldProperties` parameter.      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CreateAutoGeneratedColumn method is used to create an automatically generated column field when the &lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>.","pos":[0,195],"source":"The CreateAutoGeneratedColumn method is used to create an automatically generated column field when the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property is set to `true`."},{"content":"The properties of the automatically generated column field are specified through the &lt;xref:System.Web.UI.WebControls.AutoGeneratedFieldProperties&gt; object contained in the <ph id=\"ph1\">`fieldProperties`</ph> parameter.","pos":[196,395],"source":" The properties of the automatically generated column field are specified through the <xref:System.Web.UI.WebControls.AutoGeneratedFieldProperties> object contained in the `fieldProperties` parameter."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers to extend the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[401,530],"source":"      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control."}]},{"pos":[113390,113554],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.AutoGeneratedFieldProperties\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the properties of the automatically generated column field to create.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.WebControls.AutoGeneratedFieldProperties\"></xref> that represents the properties of the automatically generated column field to create."},{"pos":[113643,113825],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.AutoGeneratedField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the automatically generated column field specified by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">fieldProperties</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.UI.WebControls.AutoGeneratedField\"></xref> that represents the automatically generated column field specified by the <code>fieldProperties</code> parameter."},{"pos":[114484,114629],"content":"Creates the control hierarchy used to render the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control using the specified data source.","needQuote":true,"needEscape":true,"source":"Creates the control hierarchy used to render the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control using the specified data source."},{"pos":[114642,114908],"content":"The CreateChildControls method is used to create the control hierarchy of the <xref:System.Web.UI.WebControls.GridView> control.      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CreateChildControls method is used to create the control hierarchy of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,128],"source":"The CreateChildControls method is used to create the control hierarchy of the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers to extend the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[134,263],"source":"      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control."}]},{"pos":[115138,115312],"content":"An <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.IEnumerable?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> that contains the data source for the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"An &lt;xref:System.Collections.IEnumerable?displayProperty=fullName&gt; that contains the data source for the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[115381,115571],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate that the child controls are bound to data; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the child controls are bound to data; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[115628,115655],"content":"The number of rows created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of rows created.","pos":[0,27]}]},{"pos":[115833,116632],"content":"<code>dataSource</code> returns a null <xref href=\"System.Web.UI.DataSourceView\"></xref>.       -or-       <code>dataSource</code> does not implement the <xref:System.Collections.ICollection> interface and cannot return a <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount*>.       -or-       <xref:System.Web.UI.WebControls.GridView.AllowPaging*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and <code>dataSource</code> does not implement the <xref:System.Collections.ICollection> interface and cannot perform data source paging.       -or-       <code>dataSource</code> does not implement the <xref:System.Collections.ICollection> interface and <code>dataBinding</code> is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;dataSource&lt;/code&gt;</ph> returns a null <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,89],"source":"<code>dataSource</code> returns a null <xref href=\"System.Web.UI.DataSourceView\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;dataSource&lt;/code&gt;</ph> does not implement the <ph id=\"ph2\">&lt;xref:System.Collections.ICollection&gt;</ph> interface and cannot return a <ph id=\"ph3\">&lt;xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount*&gt;</ph>.","pos":[96,284],"source":"       -or-       <code>dataSource</code> does not implement the <xref:System.Collections.ICollection> interface and cannot return a <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount*>."},{"content":"-or-       <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridView.AllowPaging*&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <ph id=\"ph2\">&lt;code&gt;dataSource&lt;/code&gt;</ph> does not implement the <ph id=\"ph3\">&lt;xref:System.Collections.ICollection&gt;</ph> interface and cannot perform data source paging.","pos":[291,558],"source":"       -or-       <xref:System.Web.UI.WebControls.GridView.AllowPaging*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and <code>dataSource</code> does not implement the <xref:System.Collections.ICollection> interface and cannot perform data source paging."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;dataSource&lt;/code&gt;</ph> does not implement the <ph id=\"ph2\">&lt;xref:System.Collections.ICollection&gt;</ph> interface and <ph id=\"ph3\">&lt;code&gt;dataBinding&lt;/code&gt;</ph> is set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[565,773],"source":"       -or-       <code>dataSource</code> does not implement the <xref:System.Collections.ICollection> interface and <code>dataBinding</code> is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[117035,117061],"content":"Creates a new child table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new child table.","pos":[0,26]}]},{"pos":[117073,117206],"content":"The CreateChildTable method is a helper method used by the <xref:System.Web.UI.WebControls.GridView> control to create a child table.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CreateChildTable method is a helper method used by the &lt;xref:System.Web.UI.WebControls.GridView&gt; control to create a child table.","pos":[0,133],"source":"The CreateChildTable method is a helper method used by the <xref:System.Web.UI.WebControls.GridView> control to create a child table."}]},{"pos":[117395,117501],"content":"Always returns a new <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Table\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the child table.","needQuote":true,"needEscape":true,"source":"Always returns a new <xref href=\"System.Web.UI.WebControls.Table\"></xref> that represents the child table."},{"pos":[118155,118224],"content":"Creates the set of column fields used to build the control hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates the set of column fields used to build the control hierarchy.","pos":[0,69]}]},{"pos":[118237,118806],"content":"When the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property is set to `true`, a bound column field is automatically created for each field in the data source. Each bound column field is then displayed as a row in the <xref:System.Web.UI.WebControls.GridView> control in the order that the fields appear in the data source. The CreateColumns method is used to create the automatically generated column fields.      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the &lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>, a bound column field is automatically created for each field in the data source.","pos":[0,181],"source":"When the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property is set to `true`, a bound column field is automatically created for each field in the data source."},{"content":"Each bound column field is then displayed as a row in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control in the order that the fields appear in the data source.","pos":[182,345],"source":" Each bound column field is then displayed as a row in the <xref:System.Web.UI.WebControls.GridView> control in the order that the fields appear in the data source."},{"content":"The CreateColumns method is used to create the automatically generated column fields.","pos":[346,431]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers to extend the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[437,566],"source":"      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control."}]},{"pos":[119080,119177],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.PagedDataSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the data source.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.PagedDataSource\"></xref> that represents the data source."},{"pos":[119248,119447],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use the data source specified by the <ph id=\"ph1\">`dataSource`</ph> parameter; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use the data source specified by the `dataSource` parameter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[119522,119654],"content":"A &lt;xref:System.Collections.ICollection?displayProperty=fullName&gt; that contains the fields used to build the control hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ICollection?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> that contains the fields used to build the control hierarchy.","pos":[0,132],"source":"A &lt;xref:System.Collections.ICollection?displayProperty=fullName&gt; that contains the fields used to build the control hierarchy."}]},{"pos":[120145,120187],"content":"Creates the default style for the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates the default style for the control.","pos":[0,42]}]},{"pos":[120200,120420],"content":"The CreateControlStyle method is used to create the default style for the control.      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CreateControlStyle method is used to create the default style for the control.","pos":[0,82]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers to extend the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[88,217],"source":"      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control."}]},{"pos":[120613,120710],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.Style\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the style for the control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.Style\"></xref> that represents the style for the control."},{"pos":[121271,121429],"content":"Creates the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceSelectArguments\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the arguments that get passed to the data source for processing.","needQuote":true,"needEscape":true,"source":"Creates the <xref href=\"System.Web.UI.DataSourceSelectArguments\"></xref> object that contains the arguments that get passed to the data source for processing."},{"pos":[121441,121817],"content":"The CreateDataSourceSelectArguments method is a helper method called by the <xref:System.Web.UI.WebControls.GridView> control to create the <xref:System.Web.UI.DataSourceSelectArguments> object that contains the arguments passed to the data source. In this implementation, the <xref:System.Web.UI.DataSourceSelectArguments> object contains the arguments for paging operations.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CreateDataSourceSelectArguments method is a helper method called by the <xref:System.Web.UI.WebControls.GridView> control to create the <xref:System.Web.UI.DataSourceSelectArguments> object that contains the arguments passed to the data source. In this implementation, the <xref:System.Web.UI.DataSourceSelectArguments> object contains the arguments for paging operations.","pos":[0,376],"nodes":[{"content":"The CreateDataSourceSelectArguments method is a helper method called by the &lt;xref:System.Web.UI.WebControls.GridView&gt; control to create the &lt;xref:System.Web.UI.DataSourceSelectArguments&gt; object that contains the arguments passed to the data source.","pos":[0,248],"source":"The CreateDataSourceSelectArguments method is a helper method called by the <xref:System.Web.UI.WebControls.GridView> control to create the <xref:System.Web.UI.DataSourceSelectArguments> object that contains the arguments passed to the data source."},{"content":"In this implementation, the &lt;xref:System.Web.UI.DataSourceSelectArguments&gt; object contains the arguments for paging operations.","pos":[249,376],"source":" In this implementation, the <xref:System.Web.UI.DataSourceSelectArguments> object contains the arguments for paging operations."}]}]},{"pos":[122038,122164],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceSelectArguments\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the arguments that get passed to the data source.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.DataSourceSelectArguments\"></xref> that contains the arguments that get passed to the data source."},{"pos":[123014,123099],"content":"Creates a row in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Creates a row in the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[123112,123483],"content":"The CreateRow method is used to create a row in the <xref:System.Web.UI.WebControls.GridView> control.      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control. A data-bound <xref:System.Web.UI.WebControls.GridView> control automatically generates the rows needed to display the target data.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CreateRow method is used to create a row in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,102],"source":"The CreateRow method is used to create a row in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers to extend the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[108,237],"source":"      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"A data-bound &lt;xref:System.Web.UI.WebControls.GridView&gt; control automatically generates the rows needed to display the target data.","pos":[238,368],"source":" A data-bound <xref:System.Web.UI.WebControls.GridView> control automatically generates the rows needed to display the target data."}]},{"pos":[123800,123831],"content":"The index of the row to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the row to create.","pos":[0,31]}]},{"pos":[123902,123955],"content":"The index of the data source item to bind to the row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the data source item to bind to the row.","pos":[0,53]}]},{"pos":[124050,124134],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.DataControlRowType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.WebControls.DataControlRowType\"></xref> values."},{"pos":[124231,124316],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.DataControlRowState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.WebControls.DataControlRowState\"></xref> values."},{"pos":[124398,124498],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> created using the specified parameters.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> created using the specified parameters."},{"pos":[124935,125061],"content":"Binds the data source to the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control. This method cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Binds the data source to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","pos":[0,93],"source":"Binds the data source to the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"content":"This method cannot be inherited.","pos":[94,126]}]},{"pos":[125074,126096],"content":"Use the DataBind method to bind data from a data source to the <xref:System.Web.UI.WebControls.GridView> control. This method resolves all data-binding expressions in the active template of the control.       The DataBind method is called automatically if the <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property of the <xref:System.Web.UI.WebControls.GridView> control refers to a valid data source control.       Instead of manually calling the DataBind method, you can use model binding with your DataBind control by setting the <xref:System.Web.UI.WebControls.DataBoundControl.SelectMethod%2A> property to the name of a method that returns data for the <xref:System.Web.UI.WebControls.GridView>. The <xref:System.Web.UI.WebControls.GridView> is then automatically populated with the data that is returned from the select method. Model binding can simplify your code for working with data. For more information, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the DataBind method to bind data from a data source to the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,113],"source":"Use the DataBind method to bind data from a data source to the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"This method resolves all data-binding expressions in the active template of the control.","pos":[114,202]},{"content":"The DataBind method is called automatically if the &lt;xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control refers to a valid data source control.","pos":[209,430],"source":"       The DataBind method is called automatically if the <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property of the <xref:System.Web.UI.WebControls.GridView> control refers to a valid data source control."},{"content":"Instead of manually calling the DataBind method, you can use model binding with your DataBind control by setting the &lt;xref:System.Web.UI.WebControls.DataBoundControl.SelectMethod%2A&gt; property to the name of a method that returns data for the &lt;xref:System.Web.UI.WebControls.GridView&gt;.","pos":[437,721],"source":"       Instead of manually calling the DataBind method, you can use model binding with your DataBind control by setting the <xref:System.Web.UI.WebControls.DataBoundControl.SelectMethod%2A> property to the name of a method that returns data for the <xref:System.Web.UI.WebControls.GridView>."},{"content":"The &lt;xref:System.Web.UI.WebControls.GridView&gt; is then automatically populated with the data that is returned from the select method.","pos":[722,854],"source":" The <xref:System.Web.UI.WebControls.GridView> is then automatically populated with the data that is returned from the select method."},{"content":"Model binding can simplify your code for working with data.","pos":[855,914]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Model Binding and Web Forms<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=286117)</ept>.","pos":[915,1018],"source":" For more information, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)."}]},{"pos":[126994,127159],"content":"Gets or sets an array that contains the names of the primary key fields for the items displayed in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets an array that contains the names of the primary key fields for the items displayed in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[127172,129755],"content":"Use the DataKeyNames property to specify the field or fields that represent the primary key of the data source. You should only set this property to the field or fields that are required to uniquely identify each row; for example, the ID column if an integer value uniquely identifies each row. You must set the DataKeyNames property in order for the automatic update and delete features of the <xref:System.Web.UI.WebControls.GridView> control to work. The values of these key fields are passed to the data source control in order to specify the row to update or delete.       If you need to retrieve the data key value when updating or deleting a row, use the `Keys` property of either the <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> or <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> class. For example, `e.Keys[0]` holds the value of the first data key in a <xref:System.Web.UI.WebControls.GridView.RowUpdating> or <xref:System.Web.UI.WebControls.GridView.RowDeleting> event handler.       If you need to retrieve the data key value when a row is selected, use the <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> property.       When the DataKeyNames property is set, the <xref:System.Web.UI.WebControls.GridView> control automatically populates its <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> collection with the values from the specified field or fields, which provides a convenient way to access the primary keys of each row.      > [!NOTE] >  The <xref:System.Web.UI.WebControls.GridView> control stores these key field values in the control state. If these values contain sensitive information, it is strongly recommended that you enable view-state encryption by setting the <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> property to `ViewStateEncryptionMode.Always`.       When you use automatically generated field columns (by setting the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property to `true`), the <xref:System.Web.UI.WebControls.GridView> control makes sure that the columns that correspond to the field or fields specified in the DataKeyNames property are read-only.       If the <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> property of a column field is set to `false`, the column is not displayed in the <xref:System.Web.UI.WebControls.GridView> control and the data for the column does not make a round trip to the client. If you want the data for a column that is not visible to be available to the client, add the field name to the DataKeyNames property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the DataKeyNames property to specify the field or fields that represent the primary key of the data source.","pos":[0,111]},{"content":"You should only set this property to the field or fields that are required to uniquely identify each row; for example, the ID column if an integer value uniquely identifies each row.","pos":[112,294]},{"content":"You must set the DataKeyNames property in order for the automatic update and delete features of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control to work.","pos":[295,453],"source":" You must set the DataKeyNames property in order for the automatic update and delete features of the <xref:System.Web.UI.WebControls.GridView> control to work."},{"content":"The values of these key fields are passed to the data source control in order to specify the row to update or delete.","pos":[454,571]},{"content":"If you need to retrieve the data key value when updating or deleting a row, use the <ph id=\"ph1\">`Keys`</ph> property of either the &lt;xref:System.Web.UI.WebControls.GridViewUpdateEventArgs&gt; or &lt;xref:System.Web.UI.WebControls.GridViewDeleteEventArgs&gt; class.","pos":[578,815],"source":"       If you need to retrieve the data key value when updating or deleting a row, use the `Keys` property of either the <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> or <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> class."},{"content":"For example, <ph id=\"ph1\">`e.Keys[0]`</ph> holds the value of the first data key in a &lt;xref:System.Web.UI.WebControls.GridView.RowUpdating&gt; or &lt;xref:System.Web.UI.WebControls.GridView.RowDeleting&gt; event handler.","pos":[816,1009],"source":" For example, `e.Keys[0]` holds the value of the first data key in a <xref:System.Web.UI.WebControls.GridView.RowUpdating> or <xref:System.Web.UI.WebControls.GridView.RowDeleting> event handler."},{"content":"If you need to retrieve the data key value when a row is selected, use the &lt;xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A&gt; property.","pos":[1016,1161],"source":"       If you need to retrieve the data key value when a row is selected, use the <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> property."},{"content":"When the DataKeyNames property is set, the &lt;xref:System.Web.UI.WebControls.GridView&gt; control automatically populates its &lt;xref:System.Web.UI.WebControls.GridView.DataKeys%2A&gt; collection with the values from the specified field or fields, which provides a convenient way to access the primary keys of each row.","pos":[1168,1477],"source":"       When the DataKeyNames property is set, the <xref:System.Web.UI.WebControls.GridView> control automatically populates its <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> collection with the values from the specified field or fields, which provides a convenient way to access the primary keys of each row."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Web.UI.WebControls.GridView&gt; control stores these key field values in the control state.","pos":[1483,1601],"source":"      > [!NOTE] >  The <xref:System.Web.UI.WebControls.GridView> control stores these key field values in the control state."},{"content":"If these values contain sensitive information, it is strongly recommended that you enable view-state encryption by setting the &lt;xref:System.Web.UI.Page.ViewStateEncryptionMode%2A&gt; property to <ph id=\"ph1\">`ViewStateEncryptionMode.Always`</ph>.","pos":[1602,1827],"source":" If these values contain sensitive information, it is strongly recommended that you enable view-state encryption by setting the <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> property to `ViewStateEncryptionMode.Always`."},{"content":"When you use automatically generated field columns (by setting the &lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt; property to <ph id=\"ph1\">`true`</ph>), the &lt;xref:System.Web.UI.WebControls.GridView&gt; control makes sure that the columns that correspond to the field or fields specified in the DataKeyNames property are read-only.","pos":[1834,2161],"source":"       When you use automatically generated field columns (by setting the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property to `true`), the <xref:System.Web.UI.WebControls.GridView> control makes sure that the columns that correspond to the field or fields specified in the DataKeyNames property are read-only."},{"content":"If the &lt;xref:System.Web.UI.WebControls.DataControlField.Visible%2A&gt; property of a column field is set to <ph id=\"ph1\">`false`</ph>, the column is not displayed in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control and the data for the column does not make a round trip to the client.","pos":[2168,2436],"source":"       If the <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> property of a column field is set to `false`, the column is not displayed in the <xref:System.Web.UI.WebControls.GridView> control and the data for the column does not make a round trip to the client."},{"content":"If you want the data for a column that is not visible to be available to the client, add the field name to the DataKeyNames property.","pos":[2437,2570]}]},{"pos":[131044,131196],"content":"An array that contains the names of the primary key fields for the items displayed in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"An array that contains the names of the primary key fields for the items displayed in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[131632,131831],"content":"Gets a collection of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.DataKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that represent the data key value of each row in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets a collection of <xref href=\"System.Web.UI.WebControls.DataKey\"></xref> objects that represent the data key value of each row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[131844,132904],"content":"When the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property is set, the <xref:System.Web.UI.WebControls.GridView> control automatically creates a <xref:System.Web.UI.WebControls.DataKey> object for each row in the control. The <xref:System.Web.UI.WebControls.DataKey> object contains the values of the field or fields specified in the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property. The <xref:System.Web.UI.WebControls.DataKey> objects are then added to the control's DataKeys collection. Use the DataKeys property to retrieve the <xref:System.Web.UI.WebControls.DataKey> object for a specific data row in the <xref:System.Web.UI.WebControls.GridView> control.      > [!NOTE] >  You can use the <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> property to retrieve the <xref:System.Web.UI.WebControls.DataKey> object for the currently selected row. You can also use the <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> property to retrieve the data key value for the currently selected row directly.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the &lt;xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A&gt; property is set, the &lt;xref:System.Web.UI.WebControls.GridView&gt; control automatically creates a &lt;xref:System.Web.UI.WebControls.DataKey&gt; object for each row in the control.","pos":[0,238],"source":"When the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property is set, the <xref:System.Web.UI.WebControls.GridView> control automatically creates a <xref:System.Web.UI.WebControls.DataKey> object for each row in the control."},{"content":"The &lt;xref:System.Web.UI.WebControls.DataKey&gt; object contains the values of the field or fields specified in the &lt;xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A&gt; property.","pos":[239,418],"source":" The <xref:System.Web.UI.WebControls.DataKey> object contains the values of the field or fields specified in the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property."},{"content":"The &lt;xref:System.Web.UI.WebControls.DataKey&gt; objects are then added to the control's DataKeys collection.","pos":[419,524],"source":" The <xref:System.Web.UI.WebControls.DataKey> objects are then added to the control's DataKeys collection."},{"content":"Use the DataKeys property to retrieve the &lt;xref:System.Web.UI.WebControls.DataKey&gt; object for a specific data row in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[525,696],"source":" Use the DataKeys property to retrieve the <xref:System.Web.UI.WebControls.DataKey> object for a specific data row in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You can use the &lt;xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A&gt; property to retrieve the &lt;xref:System.Web.UI.WebControls.DataKey&gt; object for the currently selected row.","pos":[702,896],"source":"      > [!NOTE] >  You can use the <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> property to retrieve the <xref:System.Web.UI.WebControls.DataKey> object for the currently selected row."},{"content":"You can also use the &lt;xref:System.Web.UI.WebControls.GridView.SelectedValue%2A&gt; property to retrieve the data key value for the currently selected row directly.","pos":[897,1057],"source":" You can also use the <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> property to retrieve the data key value for the currently selected row directly."}]},{"pos":[133477,133647],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.DataKeyArray\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the data key of each row in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.DataKeyArray\"></xref> that contains the data key of each row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[134099,134167],"content":"Gets or sets the name of the method to call in order to delete data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the method to call in order to delete data.","pos":[0,68]}]},{"pos":[134180,134412],"content":"Setting this property causes model binding to be used as the data-binding method.       For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Setting this property causes model binding to be used as the data-binding method.","pos":[0,81]},{"content":"For a tutorial series on using model binding with Web Forms, see <bpt id=\"p1\">[</bpt>Model Binding and Web Forms<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=286117)</ept>.","pos":[88,230],"source":"       For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)."}]},{"pos":[134543,134566],"content":"The name of the method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the method.","pos":[0,23]}]},{"pos":[135054,135117],"content":"Deletes the record at the specified index from the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes the record at the specified index from the data source.","pos":[0,63]}]},{"pos":[135129,135570],"content":"Use the DeleteRow method to programmatically delete the record at the specified index from the data source. This method is commonly used when you need to delete a record from outside of the <xref:System.Web.UI.WebControls.GridView> control, such as from a different control on the page. Calling this method also raises the <xref:System.Web.UI.WebControls.GridView.RowDeleted> and <xref:System.Web.UI.WebControls.GridView.RowDeleting> events.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the DeleteRow method to programmatically delete the record at the specified index from the data source. This method is commonly used when you need to delete a record from outside of the <xref:System.Web.UI.WebControls.GridView> control, such as from a different control on the page. Calling this method also raises the <xref:System.Web.UI.WebControls.GridView.RowDeleted> and <xref:System.Web.UI.WebControls.GridView.RowDeleting> events.","pos":[0,441],"nodes":[{"content":"Use the DeleteRow method to programmatically delete the record at the specified index from the data source.","pos":[0,107]},{"content":"This method is commonly used when you need to delete a record from outside of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control, such as from a different control on the page.","pos":[108,286],"source":" This method is commonly used when you need to delete a record from outside of the <xref:System.Web.UI.WebControls.GridView> control, such as from a different control on the page."},{"content":"Calling this method also raises the &lt;xref:System.Web.UI.WebControls.GridView.RowDeleted&gt; and &lt;xref:System.Web.UI.WebControls.GridView.RowDeleting&gt; events.","pos":[287,441],"source":" Calling this method also raises the <xref:System.Web.UI.WebControls.GridView.RowDeleted> and <xref:System.Web.UI.WebControls.GridView.RowDeleting> events."}]}]},{"pos":[136098,136129],"content":"The index of the row to delete.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the row to delete.","pos":[0,31]}]},{"pos":[136296,136402],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control is not bound to a data source control.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is not bound to a data source control."},{"pos":[136505,136708],"content":"The data source control that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control is bound to does not support delete operations, or there is no delete command defined for the data source.","needQuote":true,"needEscape":true,"source":"The data source control that the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is bound to does not support delete operations, or there is no delete command defined for the data source."},{"pos":[137071,137113],"content":"Gets or sets the index of the row to edit.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the index of the row to edit.","pos":[0,42]}]},{"pos":[137126,139488],"content":"The row index is zero-based (the first row is row zero).       This property is typically used only in the following scenarios, which involve handlers for specific events:      -   You want the <xref:System.Web.UI.WebControls.GridView> control to open in edit mode for a specific row the first time that the page is displayed. To do this, you can set the EditIndex property in the handler for the <xref:System.Web.UI.Control.Load> event of the <xref:System.Web.UI.Page> class or of the <xref:System.Web.UI.WebControls.GridView> control.      -   You want to know which row was edited after the row was updated. To do this, you can retrieve the row index from the EditIndex property in the <xref:System.Web.UI.WebControls.GridView.RowUpdated> event handler.      -   You are binding the <xref:System.Web.UI.WebControls.GridView> control to a data source by setting the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> property programmatically. In this case you must set the EditIndex property in the <xref:System.Web.UI.WebControls.GridView.RowEditing> and <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> event handlers.       If you set the EditIndex property after a postback or in handlers for events that are raised later than the <xref:System.Web.UI.Control.Load> event, the <xref:System.Web.UI.WebControls.GridView> control might not enter edit mode for the specified row. If you read the value of this property in other event handlers, the index is not guaranteed to reflect the row that is being edited.       To determine which row the user has clicked an **Edit** button or hyperlink in before the <xref:System.Web.UI.WebControls.GridView> control enters edit mode, you can retrieve the row index from the <xref:System.Web.UI.WebControls.GridViewEditEventArgs.NewEditIndex%2A> property of the <xref:System.Web.UI.WebControls.GridViewEditEventArgs> object in the <xref:System.Web.UI.WebControls.GridView.RowEditing> event handler.       To prevent the <xref:System.Web.UI.WebControls.GridView> control from entering edit mode after a user has clicked an **Edit** button or hyperlink, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewEditEventArgs> object to `true` in the <xref:System.Web.UI.WebControls.GridView.RowEditing> event handler.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The row index is zero-based (the first row is row zero).","pos":[0,56]},{"content":"This property is typically used only in the following scenarios, which involve handlers for specific events:      -   You want the &lt;xref:System.Web.UI.WebControls.GridView&gt; control to open in edit mode for a specific row the first time that the page is displayed.","pos":[63,326],"source":"       This property is typically used only in the following scenarios, which involve handlers for specific events:      -   You want the <xref:System.Web.UI.WebControls.GridView> control to open in edit mode for a specific row the first time that the page is displayed."},{"content":"To do this, you can set the EditIndex property in the handler for the &lt;xref:System.Web.UI.Control.Load&gt; event of the &lt;xref:System.Web.UI.Page&gt; class or of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[327,536],"source":" To do this, you can set the EditIndex property in the handler for the <xref:System.Web.UI.Control.Load> event of the <xref:System.Web.UI.Page> class or of the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"-   You want to know which row was edited after the row was updated.","pos":[542,610]},{"content":"To do this, you can retrieve the row index from the EditIndex property in the &lt;xref:System.Web.UI.WebControls.GridView.RowUpdated&gt; event handler.","pos":[611,756],"source":" To do this, you can retrieve the row index from the EditIndex property in the <xref:System.Web.UI.WebControls.GridView.RowUpdated> event handler."},{"content":"-   You are binding the &lt;xref:System.Web.UI.WebControls.GridView&gt; control to a data source by setting the &lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A&gt; property programmatically.","pos":[762,962],"source":"      -   You are binding the <xref:System.Web.UI.WebControls.GridView> control to a data source by setting the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> property programmatically."},{"content":"In this case you must set the EditIndex property in the &lt;xref:System.Web.UI.WebControls.GridView.RowEditing&gt; and &lt;xref:System.Web.UI.WebControls.GridView.RowCancelingEdit&gt; event handlers.","pos":[963,1150],"source":" In this case you must set the EditIndex property in the <xref:System.Web.UI.WebControls.GridView.RowEditing> and <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> event handlers."},{"content":"If you set the EditIndex property after a postback or in handlers for events that are raised later than the &lt;xref:System.Web.UI.Control.Load&gt; event, the &lt;xref:System.Web.UI.WebControls.GridView&gt; control might not enter edit mode for the specified row.","pos":[1157,1408],"source":"       If you set the EditIndex property after a postback or in handlers for events that are raised later than the <xref:System.Web.UI.Control.Load> event, the <xref:System.Web.UI.WebControls.GridView> control might not enter edit mode for the specified row."},{"content":"If you read the value of this property in other event handlers, the index is not guaranteed to reflect the row that is being edited.","pos":[1409,1541]},{"content":"To determine which row the user has clicked an <bpt id=\"p1\">**</bpt>Edit<ept id=\"p1\">**</ept> button or hyperlink in before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control enters edit mode, you can retrieve the row index from the &lt;xref:System.Web.UI.WebControls.GridViewEditEventArgs.NewEditIndex%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.GridViewEditEventArgs&gt; object in the &lt;xref:System.Web.UI.WebControls.GridView.RowEditing&gt; event handler.","pos":[1548,1969],"source":"       To determine which row the user has clicked an **Edit** button or hyperlink in before the <xref:System.Web.UI.WebControls.GridView> control enters edit mode, you can retrieve the row index from the <xref:System.Web.UI.WebControls.GridViewEditEventArgs.NewEditIndex%2A> property of the <xref:System.Web.UI.WebControls.GridViewEditEventArgs> object in the <xref:System.Web.UI.WebControls.GridView.RowEditing> event handler."},{"content":"To prevent the &lt;xref:System.Web.UI.WebControls.GridView&gt; control from entering edit mode after a user has clicked an <bpt id=\"p1\">**</bpt>Edit<ept id=\"p1\">**</ept> button or hyperlink, set the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.GridViewEditEventArgs&gt; object to <ph id=\"ph1\">`true`</ph> in the &lt;xref:System.Web.UI.WebControls.GridView.RowEditing&gt; event handler.","pos":[1976,2348],"source":"       To prevent the <xref:System.Web.UI.WebControls.GridView> control from entering edit mode after a user has clicked an **Edit** button or hyperlink, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewEditEventArgs> object to `true` in the <xref:System.Web.UI.WebControls.GridView.RowEditing> event handler."}]},{"pos":[140071,140175],"content":"The zero-based index of the row to edit. The default is -1, which indicates that no row is being edited.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the row to edit. The default is -1, which indicates that no row is being edited.","pos":[0,104],"nodes":[{"content":"The zero-based index of the row to edit.","pos":[0,40]},{"content":"The default is -1, which indicates that no row is being edited.","pos":[41,104]}]}]},{"pos":[140362,140398],"content":"The specified index is less than -1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified index is less than -1.","pos":[0,36]}]},{"pos":[140776,141009],"content":"Gets a reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableItemStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that enables you to set the appearance of the row selected for editing in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets a reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> object that enables you to set the appearance of the row selected for editing in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[141022,142019],"content":"Use the EditRowStyle property to control the appearance of the row being edited in a <xref:System.Web.UI.WebControls.GridView> control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns. The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `EditRowStyle-ForeColor`).      -   Nest an `<EditRowStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control.       The properties can also be set programmatically in the form `Property.Subproperty` (for example, `EditRowStyle.ForeColor`). Common settings usually include a custom background color, foreground color, and font properties.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the EditRowStyle property to control the appearance of the row being edited in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,135],"source":"Use the EditRowStyle property to control the appearance of the row being edited in a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"This property is read-only; however, you can set the properties of the &lt;xref:System.Web.UI.WebControls.TableItemStyle&gt; object it returns.","pos":[136,273],"source":" This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns."},{"content":"The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control in the form <ph id=\"ph1\">`Property-Subproperty`</ph>, where <ph id=\"ph2\">`Subproperty`</ph> is a property of the &lt;xref:System.Web.UI.WebControls.TableItemStyle&gt; object (for example, <ph id=\"ph3\">`EditRowStyle-ForeColor`</ph>).","pos":[274,626],"source":" The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `EditRowStyle-ForeColor`)."},{"content":"-   Nest an <ph id=\"ph1\">`&lt;EditRowStyle&gt;`</ph> element between the opening and closing tags of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[632,763],"source":"      -   Nest an `<EditRowStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The properties can also be set programmatically in the form <ph id=\"ph1\">`Property.Subproperty`</ph> (for example, <ph id=\"ph2\">`EditRowStyle.ForeColor`</ph>).","pos":[770,893],"source":"       The properties can also be set programmatically in the form `Property.Subproperty` (for example, `EditRowStyle.ForeColor`)."},{"content":"Common settings usually include a custom background color, foreground color, and font properties.","pos":[894,991]}]},{"pos":[142602,142802],"content":"A reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableItemStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the style of the row being edited in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"A reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> that represents the style of the row being edited in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[143283,143577],"content":"Gets a reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableItemStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that enables you to set the appearance of the empty data row rendered when a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control is bound to a data source that does not contain any records.","needQuote":true,"needEscape":true,"source":"Gets a reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> object that enables you to set the appearance of the empty data row rendered when a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is bound to a data source that does not contain any records."},{"pos":[143590,144705],"content":"Use the EmptyDataRowStyle property to control the appearance of the null row in a <xref:System.Web.UI.WebControls.GridView> control. The null row is displayed when the data source that is bound to the control does not contain any records. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns. The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `EmptyDataRowStyle-ForeColor`).      -   Nest an `<EmptyDataRowStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control.       The properties can also be set programmatically in the form `Property.Subproperty` (for example, `EmptyDataRowStyle.ForeColor`). Common settings usually include a custom background color, foreground color, and font properties.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the EmptyDataRowStyle property to control the appearance of the null row in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,132],"source":"Use the EmptyDataRowStyle property to control the appearance of the null row in a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The null row is displayed when the data source that is bound to the control does not contain any records.","pos":[133,238]},{"content":"This property is read-only; however, you can set the properties of the &lt;xref:System.Web.UI.WebControls.TableItemStyle&gt; object it returns.","pos":[239,376],"source":" This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns."},{"content":"The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control in the form <ph id=\"ph1\">`Property-Subproperty`</ph>, where <ph id=\"ph2\">`Subproperty`</ph> is a property of the &lt;xref:System.Web.UI.WebControls.TableItemStyle&gt; object (for example, <ph id=\"ph3\">`EmptyDataRowStyle-ForeColor`</ph>).","pos":[377,734],"source":" The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `EmptyDataRowStyle-ForeColor`)."},{"content":"-   Nest an <ph id=\"ph1\">`&lt;EmptyDataRowStyle&gt;`</ph> element between the opening and closing tags of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[740,876],"source":"      -   Nest an `<EmptyDataRowStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The properties can also be set programmatically in the form <ph id=\"ph1\">`Property.Subproperty`</ph> (for example, <ph id=\"ph2\">`EmptyDataRowStyle.ForeColor`</ph>).","pos":[883,1011],"source":"       The properties can also be set programmatically in the form `Property.Subproperty` (for example, `EmptyDataRowStyle.ForeColor`)."},{"content":"Common settings usually include a custom background color, foreground color, and font properties.","pos":[1012,1109]}]},{"pos":[145282,145418],"content":"A reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableItemStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that enables you to set the appearance of the null row.","needQuote":true,"needEscape":true,"source":"A reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> that enables you to set the appearance of the null row."},{"pos":[145904,146105],"content":"Gets or sets the user-defined content for the empty data row rendered when a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control is bound to a data source that does not contain any records.","needQuote":true,"needEscape":true,"source":"Gets or sets the user-defined content for the empty data row rendered when a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is bound to a data source that does not contain any records."},{"pos":[146118,147381],"content":"The empty data row is displayed in a <xref:System.Web.UI.WebControls.GridView> control when the data source that is bound to the control does not contain any records. You can define your own custom user interface (UI) for the empty data row by using the EmptyDataTemplate property.       To specify a custom template for the empty data row, first place `<EmptyDataTemplate>` tags between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control. You can then list the contents of the template between the opening and closing `<EmptyDataTemplate>` tags. To control the style of the empty data row, use the <xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> property. Alternatively, you can use the built-in UI for the empty data row by setting the <xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A> property instead of this property.       For information about how to programmatically access controls that you declare in an empty data template, see [How to: Access Server Controls by ID](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  If both the <xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A> and EmptyDataTemplate properties are set, the EmptyDataTemplate property takes precedence.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The empty data row is displayed in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control when the data source that is bound to the control does not contain any records.","pos":[0,166],"source":"The empty data row is displayed in a <xref:System.Web.UI.WebControls.GridView> control when the data source that is bound to the control does not contain any records."},{"content":"You can define your own custom user interface (UI) for the empty data row by using the EmptyDataTemplate property.","pos":[167,281]},{"content":"To specify a custom template for the empty data row, first place <ph id=\"ph1\">`&lt;EmptyDataTemplate&gt;`</ph> tags between the opening and closing tags of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[288,474],"source":"       To specify a custom template for the empty data row, first place `<EmptyDataTemplate>` tags between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"You can then list the contents of the template between the opening and closing <ph id=\"ph1\">`&lt;EmptyDataTemplate&gt;`</ph> tags.","pos":[475,581],"source":" You can then list the contents of the template between the opening and closing `<EmptyDataTemplate>` tags."},{"content":"To control the style of the empty data row, use the &lt;xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A&gt; property.","pos":[582,706],"source":" To control the style of the empty data row, use the <xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> property."},{"content":"Alternatively, you can use the built-in UI for the empty data row by setting the &lt;xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A&gt; property instead of this property.","pos":[707,881],"source":" Alternatively, you can use the built-in UI for the empty data row by setting the <xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A> property instead of this property."},{"content":"For information about how to programmatically access controls that you declare in an empty data template, see <bpt id=\"p1\">[</bpt>How to: Access Server Controls by ID<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[888,1076],"source":"       For information about how to programmatically access controls that you declare in an empty data template, see [How to: Access Server Controls by ID](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If both the &lt;xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A&gt; and EmptyDataTemplate properties are set, the EmptyDataTemplate property takes precedence.","pos":[1082,1256],"source":"      > [!NOTE] >  If both the <xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A> and EmptyDataTemplate properties are set, the EmptyDataTemplate property takes precedence."}]},{"pos":[147994,148227],"content":"A <xref href=\"System.Web.UI.ITemplate\"></xref> that contains the custom content for the empty data row. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which indicates that this property is not set.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ITemplate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the custom content for the empty data row.","pos":[0,103],"source":"A <xref href=\"System.Web.UI.ITemplate\"></xref> that contains the custom content for the empty data row."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which indicates that this property is not set.","pos":[104,233],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which indicates that this property is not set."}]},{"pos":[148693,148888],"content":"Gets or sets the text to display in the empty data row rendered when a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control is bound to a data source that does not contain any records.","needQuote":true,"needEscape":true,"source":"Gets or sets the text to display in the empty data row rendered when a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is bound to a data source that does not contain any records."},{"pos":[148901,149978],"content":"The empty data row is displayed in a <xref:System.Web.UI.WebControls.GridView> control when the data source that is bound to the control does not contain any records. Use the EmptyDataText property to specify the text to display in the empty data row. To control the style of the empty data row, use the <xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> property. Alternatively, you can define your own custom user interface (UI) for the empty data row by setting the <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> property instead of this property.      > [!NOTE] >  If both the EmptyDataText and <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> properties are set, the <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> property takes precedence.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The empty data row is displayed in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control when the data source that is bound to the control does not contain any records.","pos":[0,166],"source":"The empty data row is displayed in a <xref:System.Web.UI.WebControls.GridView> control when the data source that is bound to the control does not contain any records."},{"content":"Use the EmptyDataText property to specify the text to display in the empty data row.","pos":[167,251]},{"content":"To control the style of the empty data row, use the &lt;xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A&gt; property.","pos":[252,376],"source":" To control the style of the empty data row, use the <xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> property."},{"content":"Alternatively, you can define your own custom user interface (UI) for the empty data row by setting the &lt;xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A&gt; property instead of this property.","pos":[377,578],"source":" Alternatively, you can define your own custom user interface (UI) for the empty data row by setting the <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> property instead of this property."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If both the EmptyDataText and &lt;xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A&gt; properties are set, the &lt;xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A&gt; property takes precedence.","pos":[584,803],"source":"      > [!NOTE] >  If both the EmptyDataText and <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> properties are set, the <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> property takes precedence."},{"content":"The value of this property, when set, can be saved automatically to a resource file by using a designer tool.","pos":[810,919]},{"content":"For more information, see &lt;xref:System.ComponentModel.LocalizableAttribute&gt; and <bpt id=\"p1\">[</bpt>Globalization and Localization<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[920,1072],"source":" For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[150465,150591],"content":"The text to display in the empty data row. The default is an empty string (\"\"), which indicates that this property is not set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text to display in the empty data row. The default is an empty string (\"\"), which indicates that this property is not set.","pos":[0,126],"nodes":[{"content":"The text to display in the empty data row.","pos":[0,42]},{"content":"The default is an empty string (\"\"), which indicates that this property is not set.","pos":[43,126]}]}]},{"pos":[151093,151226],"content":"Gets or sets a value that indicates whether a validator control will handle exceptions that occur during insert or update operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether a validator control will handle exceptions that occur during insert or update operations.","pos":[0,133]}]},{"pos":[151364,151671],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a validator control will handle exceptions that occur during insert or update operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a validator control will handle exceptions that occur during insert or update operations; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,228],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a validator control will handle exceptions that occur during insert or update operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[229,307],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[152196,152303],"content":"Gets or sets a value that indicates whether the selection of a row is based on index or on data-key values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the selection of a row is based on index or on data-key values.","pos":[0,107]}]},{"pos":[152315,152669],"content":"If this property is `false` and a row is selected, the same row is selected when a new page is displayed even though the new page has different data in it. If you set this property to `true`, when you display a page that has different data in it, no row is selected. If you then return to the page on which a row was selected, that row is still selected.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If this property is <ph id=\"ph1\">`false`</ph> and a row is selected, the same row is selected when a new page is displayed even though the new page has different data in it.","pos":[0,155],"source":"If this property is `false` and a row is selected, the same row is selected when a new page is displayed even though the new page has different data in it."},{"content":"If you set this property to <ph id=\"ph1\">`true`</ph>, when you display a page that has different data in it, no row is selected.","pos":[156,266],"source":" If you set this property to `true`, when you display a page that has different data in it, no row is selected."},{"content":"If you then return to the page on which a row was selected, that row is still selected.","pos":[267,354]}]},{"pos":[152810,153080],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the row selection is based on data-key values; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the row selection is based on data-key values; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,185],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the row selection is based on data-key values; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[186,270],"source":" The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[153643,153748],"content":"Gets or sets a value indicating whether client-side callbacks are used for sorting and paging operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether client-side callbacks are used for sorting and paging operations.","pos":[0,105]}]},{"pos":[153761,154706],"content":"By default, when a sorting or paging operation is performed, the <xref:System.Web.UI.WebControls.GridView> control posts back to the server to perform the operation. When the EnableSortingAndPagingCallbacks property is set to `true`, a service is called on the client to perform sorting and paging operations, which eliminates the need to post back to the server.      > [!NOTE] >  Not all browsers support this feature. To determine whether a browser supports this feature, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property.       All columns in the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection must support callbacks for this feature to work. If the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection contains a column that does not support callbacks, such as <xref:System.Web.UI.WebControls.TemplateField>, a <xref:System.NotSupportedException> exception is raised.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, when a sorting or paging operation is performed, the &lt;xref:System.Web.UI.WebControls.GridView&gt; control posts back to the server to perform the operation.","pos":[0,165],"source":"By default, when a sorting or paging operation is performed, the <xref:System.Web.UI.WebControls.GridView> control posts back to the server to perform the operation."},{"content":"When the EnableSortingAndPagingCallbacks property is set to <ph id=\"ph1\">`true`</ph>, a service is called on the client to perform sorting and paging operations, which eliminates the need to post back to the server.","pos":[166,363],"source":" When the EnableSortingAndPagingCallbacks property is set to `true`, a service is called on the client to perform sorting and paging operations, which eliminates the need to post back to the server."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Not all browsers support this feature.","pos":[369,420],"source":"      > [!NOTE] >  Not all browsers support this feature."},{"content":"To determine whether a browser supports this feature, use the &lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A&gt; property.","pos":[421,565],"source":" To determine whether a browser supports this feature, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property."},{"content":"All columns in the &lt;xref:System.Web.UI.WebControls.GridView.Columns%2A&gt; collection must support callbacks for this feature to work.","pos":[572,703],"source":"       All columns in the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection must support callbacks for this feature to work."},{"content":"If the &lt;xref:System.Web.UI.WebControls.GridView.Columns%2A&gt; collection contains a column that does not support callbacks, such as &lt;xref:System.Web.UI.WebControls.TemplateField&gt;, a &lt;xref:System.NotSupportedException&gt; exception is raised.","pos":[704,940],"source":" If the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection contains a column that does not support callbacks, such as <xref:System.Web.UI.WebControls.TemplateField>, a <xref:System.NotSupportedException> exception is raised."}]},{"pos":[155277,155555],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use client-side callbacks for sorting and paging operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use client-side callbacks for sorting and paging operations; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,199],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use client-side callbacks for sorting and paging operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[200,278],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[155752,155938],"content":"The &lt;xref:System.Web.UI.WebControls.GridView.Columns*&gt; collection contains a column that does not support callbacks, such as <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TemplateField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Web.UI.WebControls.GridView.Columns*> collection contains a column that does not support callbacks, such as <xref href=\"System.Web.UI.WebControls.TemplateField\"></xref>."},{"pos":[156716,156896],"content":"Retrieves the values of each field declared within the specified row and stores them in the specified <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.IOrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Retrieves the values of each field declared within the specified row and stores them in the specified <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> object."},{"pos":[156908,157285],"content":"The ExtractRowValues method is a helper method called by the <xref:System.Web.UI.WebControls.GridView> control to retrieve the values of each field declared within the row specified by the `row` parameter. You can specify whether the extracted values include read-only fields and key fields by using the `includeReadOnlyFields` and `includePrimaryKey` parameters, respectively.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ExtractRowValues method is a helper method called by the &lt;xref:System.Web.UI.WebControls.GridView&gt; control to retrieve the values of each field declared within the row specified by the <ph id=\"ph1\">`row`</ph> parameter.","pos":[0,205],"source":"The ExtractRowValues method is a helper method called by the <xref:System.Web.UI.WebControls.GridView> control to retrieve the values of each field declared within the row specified by the `row` parameter."},{"content":"You can specify whether the extracted values include read-only fields and key fields by using the <ph id=\"ph1\">`includeReadOnlyFields`</ph> and <ph id=\"ph2\">`includePrimaryKey`</ph> parameters, respectively.","pos":[206,377],"source":" You can specify whether the extracted values include read-only fields and key fields by using the `includeReadOnlyFields` and `includePrimaryKey` parameters, respectively."}]},{"pos":[157628,157733],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.IOrderedDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to store the field values.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> used to store the field values."},{"pos":[157817,157920],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from which to retrieve the field values.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> from which to retrieve the field values."},{"pos":[157999,158163],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to include read-only fields; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include read-only fields; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[158238,158417],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to include the primary key field or fields; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include the primary key field or fields; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[158862,159035],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the footer row in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> object that represents the footer row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[159048,159829],"content":"Use the FooterRow property to programmatically access the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the footer row in a <xref:System.Web.UI.WebControls.GridView> control.      > [!NOTE] >  The FooterRow property is available only after the <xref:System.Web.UI.WebControls.GridView> control creates the footer row in the <xref:System.Web.UI.WebControls.GridView.RowCreated> event.       This property is commonly used when you need to programmatically manipulate the footer row, for example when adding custom content. Any modification to the FooterRow property must be performed after the <xref:System.Web.UI.WebControls.GridView> control has been rendered; otherwise, the <xref:System.Web.UI.WebControls.GridView> control will overwrite any changes.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the FooterRow property to programmatically access the &lt;xref:System.Web.UI.WebControls.GridViewRow&gt; object that represents the footer row in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,196],"source":"Use the FooterRow property to programmatically access the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the footer row in a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The FooterRow property is available only after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control creates the footer row in the &lt;xref:System.Web.UI.WebControls.GridView.RowCreated&gt; event.","pos":[202,405],"source":"      > [!NOTE] >  The FooterRow property is available only after the <xref:System.Web.UI.WebControls.GridView> control creates the footer row in the <xref:System.Web.UI.WebControls.GridView.RowCreated> event."},{"content":"This property is commonly used when you need to programmatically manipulate the footer row, for example when adding custom content.","pos":[412,543]},{"content":"Any modification to the FooterRow property must be performed after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control has been rendered; otherwise, the &lt;xref:System.Web.UI.WebControls.GridView&gt; control will overwrite any changes.","pos":[544,776],"source":" Any modification to the FooterRow property must be performed after the <xref:System.Web.UI.WebControls.GridView> control has been rendered; otherwise, the <xref:System.Web.UI.WebControls.GridView> control will overwrite any changes."}]},{"pos":[160345,160506],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the footer row in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> that represents the footer row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[160954,161173],"content":"Gets a reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableItemStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that enables you to set the appearance of the footer row in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets a reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> object that enables you to set the appearance of the footer row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[161186,162172],"content":"Use the FooterStyle property to control the appearance of the footer row in a <xref:System.Web.UI.WebControls.GridView> control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns. The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `FooterStyle-ForeColor`).      -   Nest a `<FooterStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control.       The properties can also be set programmatically in the form `Property.Subproperty` (for example, `FooterStyle.ForeColor`). Common settings usually include a custom background color, foreground color, and font properties.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the FooterStyle property to control the appearance of the footer row in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,128],"source":"Use the FooterStyle property to control the appearance of the footer row in a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"This property is read-only; however, you can set the properties of the &lt;xref:System.Web.UI.WebControls.TableItemStyle&gt; object it returns.","pos":[129,266],"source":" This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns."},{"content":"The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control in the form <ph id=\"ph1\">`Property-Subproperty`</ph>, where <ph id=\"ph2\">`Subproperty`</ph> is a property of the &lt;xref:System.Web.UI.WebControls.TableItemStyle&gt; object (for example, <ph id=\"ph3\">`FooterStyle-ForeColor`</ph>).","pos":[267,618],"source":" The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `FooterStyle-ForeColor`)."},{"content":"-   Nest a <ph id=\"ph1\">`&lt;FooterStyle&gt;`</ph> element between the opening and closing tags of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[624,753],"source":"      -   Nest a `<FooterStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The properties can also be set programmatically in the form <ph id=\"ph1\">`Property.Subproperty`</ph> (for example, <ph id=\"ph2\">`FooterStyle.ForeColor`</ph>).","pos":[760,882],"source":"       The properties can also be set programmatically in the form `Property.Subproperty` (for example, `FooterStyle.ForeColor`)."},{"content":"Common settings usually include a custom background color, foreground color, and font properties.","pos":[883,980]}]},{"pos":[162743,162937],"content":"A reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableItemStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the style of the footer row in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"A reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> that represents the style of the footer row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[163421,163483],"content":"Returns the result of a callback event that targets a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the result of a callback event that targets a control.","pos":[0,62]}]},{"pos":[163495,163803],"content":"The <xref:System.Web.UI.WebControls.GridView> control implements the <xref:System.Web.UI.ICallbackEventHandler> interface and uses the <xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A> to asynchronously retrieve data and the GetCallbackResult method to return the retrieved data to the control.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.GridView&gt; control implements the &lt;xref:System.Web.UI.ICallbackEventHandler&gt; interface and uses the &lt;xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A&gt; to asynchronously retrieve data and the GetCallbackResult method to return the retrieved data to the control.","pos":[0,308],"source":"The <xref:System.Web.UI.WebControls.GridView> control implements the <xref:System.Web.UI.ICallbackEventHandler> interface and uses the <xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A> to asynchronously retrieve data and the GetCallbackResult method to return the retrieved data to the control."}]},{"pos":[163950,163978],"content":"The results of the callback.","needQuote":true,"needEscape":true,"nodes":[{"content":"The results of the callback.","pos":[0,28]}]},{"pos":[164643,164718],"content":"Creates the callback script for a button that performs a sorting operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates the callback script for a button that performs a sorting operation.","pos":[0,75]}]},{"pos":[164730,164917],"content":"The GetCallbackScript method is a helper method used by the <xref:System.Web.UI.WebControls.GridView> control to create the callback script for a button that performs a sorting operation.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetCallbackScript method is a helper method used by the &lt;xref:System.Web.UI.WebControls.GridView&gt; control to create the callback script for a button that performs a sorting operation.","pos":[0,187],"source":"The GetCallbackScript method is a helper method used by the <xref:System.Web.UI.WebControls.GridView> control to create the callback script for a button that performs a sorting operation."}]},{"pos":[165171,165230],"content":"The button control for which to create the callback script.","needQuote":true,"needEscape":true,"nodes":[{"content":"The button control for which to create the callback script.","pos":[0,59]}]},{"pos":[165295,165340],"content":"The arguments to pass to the callback script.","needQuote":true,"needEscape":true,"nodes":[{"content":"The arguments to pass to the callback script.","pos":[0,45]}]},{"pos":[165398,165465],"content":"The callback script for a button that performs a sorting operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The callback script for a button that performs a sorting operation.","pos":[0,67]}]},{"pos":[165911,166013],"content":"Gets or sets the gridline style for a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the gridline style for a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[166026,166506],"content":"Use the GridLines property to specify the gridline style for a <xref:System.Web.UI.WebControls.GridView> control. The following table lists the available styles.      |Style|Description|   |-----------|-----------------|   |`GridLines.None`|No gridlines are displayed.|   |`GridLines.Horizontal`|Displays the horizontal gridlines only.|   |`GridLines.Vertical`|Displays the vertical gridlines only.|   |`GridLines.Both`|Displays both the horizontal and vertical gridlines.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the GridLines property to specify the gridline style for a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,113],"source":"Use the GridLines property to specify the gridline style for a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The following table lists the available styles.","pos":[114,161]},{"content":"|Style|Description|   |-----------|-----------------|   |<ph id=\"ph1\">`GridLines.None`</ph>|No gridlines are displayed.|   |<ph id=\"ph2\">`GridLines.Horizontal`</ph>|Displays the horizontal gridlines only.|   |<ph id=\"ph3\">`GridLines.Vertical`</ph>|Displays the vertical gridlines only.|   |<ph id=\"ph4\">`GridLines.Both`</ph>|Displays both the horizontal and vertical gridlines.|","pos":[167,473],"source":"      |Style|Description|   |-----------|-----------------|   |`GridLines.None`|No gridlines are displayed.|   |`GridLines.Horizontal`|Displays the horizontal gridlines only.|   |`GridLines.Vertical`|Displays the vertical gridlines only.|   |`GridLines.Both`|Displays both the horizontal and vertical gridlines.|"}]},{"pos":[167054,167226],"content":"One of the <xref href=\"System.Web.UI.WebControls.GridLines\"></xref> values. The default is <xref uid=\"langword_csharp_GridLines.Both\" name=\"GridLines.Both\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridLines\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,75],"source":"One of the <xref href=\"System.Web.UI.WebControls.GridLines\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_GridLines.Both\" name=\"GridLines.Both\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[76,172],"source":" The default is <xref uid=\"langword_csharp_GridLines.Both\" name=\"GridLines.Both\" href=\"\"></xref>."}]},{"pos":[167664,167837],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the header row in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> object that represents the header row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[167850,168632],"content":"Use the HeaderRow property to programmatically access the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the header row in a <xref:System.Web.UI.WebControls.GridView> control.      > [!NOTE] >  The HeaderRow property is available only after the <xref:System.Web.UI.WebControls.GridView> control creates the header row in the <xref:System.Web.UI.WebControls.GridView.RowCreated> event.       This property is commonly used when you need to programmatically manipulate the header row, for example, when adding custom content. Any modification to the HeaderRow property must be performed after the <xref:System.Web.UI.WebControls.GridView> control has been rendered; otherwise, the <xref:System.Web.UI.WebControls.GridView> control will overwrite any changes.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the HeaderRow property to programmatically access the &lt;xref:System.Web.UI.WebControls.GridViewRow&gt; object that represents the header row in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,196],"source":"Use the HeaderRow property to programmatically access the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the header row in a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The HeaderRow property is available only after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control creates the header row in the &lt;xref:System.Web.UI.WebControls.GridView.RowCreated&gt; event.","pos":[202,405],"source":"      > [!NOTE] >  The HeaderRow property is available only after the <xref:System.Web.UI.WebControls.GridView> control creates the header row in the <xref:System.Web.UI.WebControls.GridView.RowCreated> event."},{"content":"This property is commonly used when you need to programmatically manipulate the header row, for example, when adding custom content.","pos":[412,544]},{"content":"Any modification to the HeaderRow property must be performed after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control has been rendered; otherwise, the &lt;xref:System.Web.UI.WebControls.GridView&gt; control will overwrite any changes.","pos":[545,777],"source":" Any modification to the HeaderRow property must be performed after the <xref:System.Web.UI.WebControls.GridView> control has been rendered; otherwise, the <xref:System.Web.UI.WebControls.GridView> control will overwrite any changes."}]},{"pos":[169190,169351],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the header row in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> that represents the header row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[169799,170018],"content":"Gets a reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableItemStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that enables you to set the appearance of the header row in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets a reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> object that enables you to set the appearance of the header row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[170031,171017],"content":"Use the HeaderStyle property to control the appearance of the header row in a <xref:System.Web.UI.WebControls.GridView> control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns. The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `HeaderStyle-ForeColor`).      -   Nest a `<HeaderStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control.       The properties can also be set programmatically in the form `Property.Subproperty` (for example, `HeaderStyle.ForeColor`). Common settings usually include a custom background color, foreground color, and font properties.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the HeaderStyle property to control the appearance of the header row in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,128],"source":"Use the HeaderStyle property to control the appearance of the header row in a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"This property is read-only; however, you can set the properties of the &lt;xref:System.Web.UI.WebControls.TableItemStyle&gt; object it returns.","pos":[129,266],"source":" This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns."},{"content":"The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control in the form <ph id=\"ph1\">`Property-Subproperty`</ph>, where <ph id=\"ph2\">`Subproperty`</ph> is a property of the &lt;xref:System.Web.UI.WebControls.TableItemStyle&gt; object (for example, <ph id=\"ph3\">`HeaderStyle-ForeColor`</ph>).","pos":[267,618],"source":" The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `HeaderStyle-ForeColor`)."},{"content":"-   Nest a <ph id=\"ph1\">`&lt;HeaderStyle&gt;`</ph> element between the opening and closing tags of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[624,753],"source":"      -   Nest a `<HeaderStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The properties can also be set programmatically in the form <ph id=\"ph1\">`Property.Subproperty`</ph> (for example, <ph id=\"ph2\">`HeaderStyle.ForeColor`</ph>).","pos":[760,882],"source":"       The properties can also be set programmatically in the form `Property.Subproperty` (for example, `HeaderStyle.ForeColor`)."},{"content":"Common settings usually include a custom background color, foreground color, and font properties.","pos":[883,980]}]},{"pos":[171590,171784],"content":"A reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableItemStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the style of the header row in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"A reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> that represents the style of the header row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[172254,172373],"content":"Gets or sets the horizontal alignment of a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control on the page.","needQuote":true,"needEscape":true,"source":"Gets or sets the horizontal alignment of a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control on the page."},{"pos":[172386,173286],"content":"Use the HorizontalAlign property to specify the horizontal alignment of a <xref:System.Web.UI.WebControls.GridView> control within the page. The following table lists the different horizontal alignment styles.      |Alignment value|Description|   |---------------------|-----------------|   |`HorizontalAlign.NotSet`|The horizontal alignment of the <xref:System.Web.UI.WebControls.GridView> control has not been set.|   |`HorizontalAlign.Left`|The <xref:System.Web.UI.WebControls.GridView> control is left-aligned on the page.|   |`HorizontalAlign.Center`|The <xref:System.Web.UI.WebControls.GridView> control is centered on the page.|   |`HorizontalAlign.Right`|The <xref:System.Web.UI.WebControls.GridView> control is right-aligned on the page.|   |`HorizontalAlign.Justify`|The <xref:System.Web.UI.WebControls.GridView> control is aligned with both the left and right margins of the page.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the HorizontalAlign property to specify the horizontal alignment of a &lt;xref:System.Web.UI.WebControls.GridView&gt; control within the page.","pos":[0,140],"source":"Use the HorizontalAlign property to specify the horizontal alignment of a <xref:System.Web.UI.WebControls.GridView> control within the page."},{"content":"The following table lists the different horizontal alignment styles.","pos":[141,209]},{"content":"|Alignment value|Description|   |---------------------|-----------------|   |<ph id=\"ph1\">`HorizontalAlign.NotSet`</ph>|The horizontal alignment of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control has not been set.|   |<ph id=\"ph2\">`HorizontalAlign.Left`</ph>|The &lt;xref:System.Web.UI.WebControls.GridView&gt; control is left-aligned on the page.|   |<ph id=\"ph3\">`HorizontalAlign.Center`</ph>|The &lt;xref:System.Web.UI.WebControls.GridView&gt; control is centered on the page.|   |<ph id=\"ph4\">`HorizontalAlign.Right`</ph>|The &lt;xref:System.Web.UI.WebControls.GridView&gt; control is right-aligned on the page.|   |<ph id=\"ph5\">`HorizontalAlign.Justify`</ph>|The &lt;xref:System.Web.UI.WebControls.GridView&gt; control is aligned with both the left and right margins of the page.|","pos":[215,892],"source":"      |Alignment value|Description|   |---------------------|-----------------|   |`HorizontalAlign.NotSet`|The horizontal alignment of the <xref:System.Web.UI.WebControls.GridView> control has not been set.|   |`HorizontalAlign.Left`|The <xref:System.Web.UI.WebControls.GridView> control is left-aligned on the page.|   |`HorizontalAlign.Center`|The <xref:System.Web.UI.WebControls.GridView> control is centered on the page.|   |`HorizontalAlign.Right`|The <xref:System.Web.UI.WebControls.GridView> control is right-aligned on the page.|   |`HorizontalAlign.Justify`|The <xref:System.Web.UI.WebControls.GridView> control is aligned with both the left and right margins of the page.|"}]},{"pos":[173880,174074],"content":"One of the <xref href=\"System.Web.UI.WebControls.HorizontalAlign\"></xref> values. The default is <xref uid=\"langword_csharp_HorizontalAlign.NotSet\" name=\"HorizontalAlign.NotSet\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.HorizontalAlign\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,81],"source":"One of the <xref href=\"System.Web.UI.WebControls.HorizontalAlign\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_HorizontalAlign.NotSet\" name=\"HorizontalAlign.NotSet\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[82,194],"source":" The default is <xref uid=\"langword_csharp_HorizontalAlign.NotSet\" name=\"HorizontalAlign.NotSet\" href=\"\"></xref>."}]},{"pos":[174839,174910],"content":"Initializes the pager row displayed when the paging feature is enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes the pager row displayed when the paging feature is enabled.","pos":[0,71]}]},{"pos":[174923,175169],"content":"The InitializePager method is used to initialize the pager row displayed when the paging feature is enabled.      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The InitializePager method is used to initialize the pager row displayed when the paging feature is enabled.","pos":[0,108]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers to extend the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[114,243],"source":"      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control."}]},{"pos":[175452,175557],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the pager row to initialize.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> that represents the pager row to initialize."},{"pos":[175623,175671],"content":"The number of columns the pager row should span.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of columns the pager row should span.","pos":[0,48]}]},{"pos":[175771,175868],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.PagedDataSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the data source.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.PagedDataSource\"></xref> that represents the data source."},{"pos":[176594,176683],"content":"Initializes a row in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Initializes a row in the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[176696,176944],"content":"The InitializeRow method is used to initialize a row in the <xref:System.Web.UI.WebControls.GridView> control.      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The InitializeRow method is used to initialize a row in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,110],"source":"The InitializeRow method is used to initialize a row in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers to extend the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[116,245],"source":"      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control."}]},{"pos":[177203,177302],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the row to initialize.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> that represents the row to initialize."},{"pos":[177396,177584],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.DataControlField\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that represent the column fields in the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Web.UI.WebControls.DataControlField\"></xref> objects that represent the column fields in the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[178093,178230],"content":"Determines whether the specified data type can be bound to a column in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Determines whether the specified data type can be bound to a column in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[178243,179486],"content":"The IsBindableType method is a helper method that is commonly used by control developers to programmatically determine whether the specified data type can be bound to a column in a <xref:System.Web.UI.WebControls.GridView> control. The following data types can be bound to a column in a <xref:System.Web.UI.WebControls.GridView> control:      -   <xref:System.Boolean?displayProperty=fullName>      -   <xref:System.Byte?displayProperty=fullName>      -   <xref:System.Char?displayProperty=fullName>      -   <xref:System.DateTime?displayProperty=fullName>      -   <xref:System.Decimal?displayProperty=fullName>      -   <xref:System.Double?displayProperty=fullName>      -   <xref:System.Guid?displayProperty=fullName>      -   <xref:System.Int16?displayProperty=fullName>      -   <xref:System.Int32?displayProperty=fullName>      -   <xref:System.Int64?displayProperty=fullName>      -   <xref:System.SByte?displayProperty=fullName>      -   <xref:System.Single?displayProperty=fullName>      -   <xref:System.String?displayProperty=fullName>      -   <xref:System.UInt16?displayProperty=fullName>      -   <xref:System.UInt32?displayProperty=fullName>      -   <xref:System.UInt64?displayProperty=fullName>","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IsBindableType method is a helper method that is commonly used by control developers to programmatically determine whether the specified data type can be bound to a column in a <xref:System.Web.UI.WebControls.GridView> control. The following data types can be bound to a column in a <xref:System.Web.UI.WebControls.GridView> control:      -   <xref:System.Boolean?displayProperty=fullName>      -   <xref:System.Byte?displayProperty=fullName>      -   <xref:System.Char?displayProperty=fullName>      -   <xref:System.DateTime?displayProperty=fullName>      -   <xref:System.Decimal?displayProperty=fullName>      -   <xref:System.Double?displayProperty=fullName>      -   <xref:System.Guid?displayProperty=fullName>      -   <xref:System.Int16?displayProperty=fullName>      -   <xref:System.Int32?displayProperty=fullName>      -   <xref:System.Int64?displayProperty=fullName>      -   <xref:System.SByte?displayProperty=fullName>      -   <xref:System.Single?displayProperty=fullName>      -   <xref:System.String?displayProperty=fullName>      -   <xref:System.UInt16?displayProperty=fullName>      -   <xref:System.UInt32?displayProperty=fullName>      -   <xref:System.UInt64?displayProperty=fullName>","pos":[0,1211],"nodes":[{"content":"The IsBindableType method is a helper method that is commonly used by control developers to programmatically determine whether the specified data type can be bound to a column in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,231],"source":"The IsBindableType method is a helper method that is commonly used by control developers to programmatically determine whether the specified data type can be bound to a column in a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The following data types can be bound to a column in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control:      -   &lt;xref:System.Boolean?displayProperty=fullName&gt;      -   &lt;xref:System.Byte?displayProperty=fullName&gt;      -   &lt;xref:System.Char?displayProperty=fullName&gt;      -   &lt;xref:System.DateTime?displayProperty=fullName&gt;      -   &lt;xref:System.Decimal?displayProperty=fullName&gt;      -   &lt;xref:System.Double?displayProperty=fullName&gt;      -   &lt;xref:System.Guid?displayProperty=fullName&gt;      -   &lt;xref:System.Int16?displayProperty=fullName&gt;      -   &lt;xref:System.Int32?displayProperty=fullName&gt;      -   &lt;xref:System.Int64?displayProperty=fullName&gt;      -   &lt;xref:System.SByte?displayProperty=fullName&gt;      -   &lt;xref:System.Single?displayProperty=fullName&gt;      -   &lt;xref:System.String?displayProperty=fullName&gt;      -   &lt;xref:System.UInt16?displayProperty=fullName&gt;      -   &lt;xref:System.UInt32?displayProperty=fullName&gt;      -   &lt;xref:System.UInt64?displayProperty=fullName&gt;","pos":[232,1211],"source":" The following data types can be bound to a column in a <xref:System.Web.UI.WebControls.GridView> control:      -   <xref:System.Boolean?displayProperty=fullName>      -   <xref:System.Byte?displayProperty=fullName>      -   <xref:System.Char?displayProperty=fullName>      -   <xref:System.DateTime?displayProperty=fullName>      -   <xref:System.Decimal?displayProperty=fullName>      -   <xref:System.Double?displayProperty=fullName>      -   <xref:System.Guid?displayProperty=fullName>      -   <xref:System.Int16?displayProperty=fullName>      -   <xref:System.Int32?displayProperty=fullName>      -   <xref:System.Int64?displayProperty=fullName>      -   <xref:System.SByte?displayProperty=fullName>      -   <xref:System.Single?displayProperty=fullName>      -   <xref:System.String?displayProperty=fullName>      -   <xref:System.UInt16?displayProperty=fullName>      -   <xref:System.UInt32?displayProperty=fullName>      -   <xref:System.UInt64?displayProperty=fullName>"}]}]},{"pos":[179633,179723],"content":"A &lt;xref:System.Type?displayProperty=fullName&gt; that represents the data type to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Type?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> that represents the data type to test.","pos":[0,90],"source":"A &lt;xref:System.Type?displayProperty=fullName&gt; that represents the data type to test."}]},{"pos":[179782,180039],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified data type can be bound to a column in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified data type can be bound to a column in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[180569,180876],"content":"Loads the state of the properties in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control that need to be persisted, even when the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property is set to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Loads the state of the properties in the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control that need to be persisted, even when the &lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt; property is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[180889,181281],"content":"This method is used to load the state of the properties in the <xref:System.Web.UI.WebControls.GridView> control that need to be persisted, even when the <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> property is set to `false`.      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is used to load the state of the properties in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control that need to be persisted, even when the &lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt; property is set to <ph id=\"ph1\">`false`</ph>.","pos":[0,254],"source":"This method is used to load the state of the properties in the <xref:System.Web.UI.WebControls.GridView> control that need to be persisted, even when the <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> property is set to `false`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers to extend the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[260,389],"source":"      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control."}]},{"pos":[181450,181566],"content":"An &lt;xref:System.Object?displayProperty=fullName&gt; that contains the saved control state values for the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <ph id=\"ph1\">&amp;lt;</ph>xref:System.Object?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> that contains the saved control state values for the control.","pos":[0,116],"source":"An &lt;xref:System.Object?displayProperty=fullName&gt; that contains the saved control state values for the control."}]},{"pos":[182083,182192],"content":"Loads the previously saved view state of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Loads the previously saved view state of the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[182204,182545],"content":"This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code. However, control developers can override this method to specify how a custom server control restores its view state. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,122]},{"content":"However, control developers can override this method to specify how a custom server control restores its view state.","pos":[123,239]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET State Management Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[240,341],"source":" For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[182710,182823],"content":"An &lt;xref:System.Object?displayProperty=fullName&gt; that contains the saved view state values for the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <ph id=\"ph1\">&amp;lt;</ph>xref:System.Object?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> that contains the saved view state values for the control.","pos":[0,113],"source":"An &lt;xref:System.Object?displayProperty=fullName&gt; that contains the saved view state values for the control."}]},{"pos":[183401,183526],"content":"Determines whether the event for the Web server control is passed up the page's user interface (UI) server control hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the event for the Web server control is passed up the page's user interface (UI) server control hierarchy.","pos":[0,125]}]},{"pos":[183538,183713],"content":"The OnBubbleEvent method implements the <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName> method to pass events from child controls to the page hierarchy.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The OnBubbleEvent method implements the &lt;xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName&gt; method to pass events from child controls to the page hierarchy.","pos":[0,175],"source":"The OnBubbleEvent method implements the <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName> method to pass events from child controls to the page hierarchy."}]},{"pos":[183883,183907],"content":"The source of the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The source of the event.","pos":[0,24]}]},{"pos":[183968,184051],"content":"An &lt;xref:System.EventArgs?displayProperty=fullName&gt; that contains event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <ph id=\"ph1\">&amp;lt;</ph>xref:System.EventArgs?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> that contains event data.","pos":[0,83],"source":"An &lt;xref:System.EventArgs?displayProperty=fullName&gt; that contains event data."}]},{"pos":[184110,184277],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the event has been canceled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the event has been canceled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[184783,185098],"content":"Rebinds the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control to its data after the &lt;xref:System.Web.UI.WebControls.DataBoundControl.DataMember<bpt id=\"p2\">*</bpt>&gt;, &lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource<ept id=\"p2\">*</ept>&gt;, or &lt;xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID*&gt; property is changed.","needQuote":true,"needEscape":true,"source":"Rebinds the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control to its data after the <xref:System.Web.UI.WebControls.DataBoundControl.DataMember*>, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource*>, or <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID*> property is changed."},{"pos":[185110,185491],"content":"The OnDataPropertyChanged method is a helper method used by the <xref:System.Web.UI.WebControls.GridView> control to rebind the control to its data after the <xref:System.Web.UI.WebControls.DataBoundControl.DataMember%2A>, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>, or <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property is changed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The OnDataPropertyChanged method is a helper method used by the &lt;xref:System.Web.UI.WebControls.GridView&gt; control to rebind the control to its data after the &lt;xref:System.Web.UI.WebControls.DataBoundControl.DataMember%2A&gt;, &lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A&gt;, or &lt;xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A&gt; property is changed.","pos":[0,381],"source":"The OnDataPropertyChanged method is a helper method used by the <xref:System.Web.UI.WebControls.GridView> control to rebind the control to its data after the <xref:System.Web.UI.WebControls.DataBoundControl.DataMember%2A>, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>, or <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property is changed."}]},{"pos":[186219,186308],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView.DataSourceViewChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.DataSourceView.DataSourceViewChanged\"></xref> event."},{"pos":[186321,186993],"content":"The OnDataSourceViewChanged method notifies a <xref:System.Web.UI.WebControls.GridView> control that the underlying data source has changed and that the control should rebind. Typically, the OnDataSourceViewChanged method is called when a property of the data source view has changed.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnDataSourceViewChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The OnDataSourceViewChanged method notifies a &lt;xref:System.Web.UI.WebControls.GridView&gt; control that the underlying data source has changed and that the control should rebind.","pos":[0,175],"source":"The OnDataSourceViewChanged method notifies a <xref:System.Web.UI.WebControls.GridView> control that the underlying data source has changed and that the control should rebind."},{"content":"Typically, the OnDataSourceViewChanged method is called when a property of the data source view has changed.","pos":[176,284]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[291,353]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[354,474],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnDataSourceViewChanged method also allows derived classes to handle the event without attaching a delegate.","pos":[481,593]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[594,668]}]},{"pos":[187174,187198],"content":"The source of the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The source of the event.","pos":[0,24]}]},{"pos":[187259,187315],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[187819,187884],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control.Init\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.Control.Init\"></xref> event."},{"pos":[187897,188729],"content":"When notified by this method, Web server controls must perform any initialization steps that are required to create and set up an instance. In this stage of the server control's life cycle, the control's View state has yet to be populated. Additionally, you cannot access other server controls when this method is called, regardless of whether it is a child or parent to this control. Other server controls are not guaranteed to be created and ready for access.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnInit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When notified by this method, Web server controls must perform any initialization steps that are required to create and set up an instance.","pos":[0,139]},{"content":"In this stage of the server control's life cycle, the control's View state has yet to be populated.","pos":[140,239]},{"content":"Additionally, you cannot access other server controls when this method is called, regardless of whether it is a child or parent to this control.","pos":[240,384]},{"content":"Other server controls are not guaranteed to be created and ready for access.","pos":[385,461]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[468,530]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[531,651],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnInit method also allows derived classes to handle the event without attaching a delegate.","pos":[658,753]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[754,828]}]},{"pos":[188876,188928],"content":"An <xref:System.EventArgs> that contains event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains event data.","pos":[0,52],"source":"An <xref:System.EventArgs> that contains event data."}]},{"pos":[189475,189565],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.PageIndexChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.GridView.PageIndexChanged\"></xref> event."},{"pos":[189578,190323],"content":"The <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> event is raised when one of the pager buttons is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation. This enables you to provide an event-handling method that performs a custom routine, such as a custom paging operation, whenever this event occurs.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnPageIndexChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.GridView.PageIndexChanged&gt; event is raised when one of the pager buttons is clicked, but after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control handles the paging operation.","pos":[0,214],"source":"The <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> event is raised when one of the pager buttons is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as a custom paging operation, whenever this event occurs.","pos":[215,362]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[369,431]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[432,552],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnPageIndexChanged method also allows derived classes to handle the event without attaching a delegate.","pos":[559,666]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[667,741]}]},{"pos":[190481,190564],"content":"An &lt;xref:System.EventArgs?displayProperty=fullName&gt; that contains event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <ph id=\"ph1\">&amp;lt;</ph>xref:System.EventArgs?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> that contains event data.","pos":[0,83],"source":"An &lt;xref:System.EventArgs?displayProperty=fullName&gt; that contains event data."}]},{"pos":[191226,191317],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.PageIndexChanging\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.GridView.PageIndexChanging\"></xref> event."},{"pos":[191330,192083],"content":"The <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> event is raised when one of the pager buttons is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the paging operation, whenever this event occurs.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnPageIndexChanging method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.GridView.PageIndexChanging&gt; event is raised when one of the pager buttons is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control handles the paging operation.","pos":[0,216],"source":"The <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> event is raised when one of the pager buttons is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as canceling the paging operation, whenever this event occurs.","pos":[217,369]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[376,438]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[439,559],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnPageIndexChanging method also allows derived classes to handle the event without attaching a delegate.","pos":[566,674]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[675,749]}]},{"pos":[192311,192407],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewPageEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewPageEventArgs\"></xref> that contains event data."},{"pos":[192584,192692],"content":"There is no handler for the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.PageIndexChanging\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"There is no handler for the <xref href=\"System.Web.UI.WebControls.GridView.PageIndexChanging\"></xref> event."},{"pos":[193191,193273],"content":"Sets the initialized state of the data-bound control before the control is loaded.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the initialized state of the data-bound control before the control is loaded.","pos":[0,82]}]},{"pos":[193443,193467],"content":"The source of the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The source of the event.","pos":[0,24]}]},{"pos":[193528,193584],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[194103,194173],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.Control.PreRender\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."},{"pos":[194186,194696],"content":"This method notifies the server control to perform any necessary pre-rendering steps prior to saving view state and rendering content.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnPreRender method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method notifies the server control to perform any necessary pre-rendering steps prior to saving view state and rendering content.","pos":[0,134]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[141,203]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[204,324],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnPreRender method also allows derived classes to handle the event without attaching a delegate.","pos":[331,431]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[432,506]}]},{"pos":[194848,194904],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[195584,195674],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.RowCancelingEdit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.GridView.RowCancelingEdit\"></xref> event."},{"pos":[195687,196439],"content":"The <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> event is raised when the Cancel button of a row in edit mode is clicked, but before the row exits edit mode. This enables you to provide an event-handling method that performs a custom routine, such as stopping the cancel operation if it would put the row in an undesired state, whenever this event occurs.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowCancelingEdit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.GridView.RowCancelingEdit&gt; event is raised when the Cancel button of a row in edit mode is clicked, but before the row exits edit mode.","pos":[0,171],"source":"The <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> event is raised when the Cancel button of a row in edit mode is clicked, but before the row exits edit mode."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as stopping the cancel operation if it would put the row in an undesired state, whenever this event occurs.","pos":[172,369]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[376,438]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[439,559],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnRowCancelingEdit method also allows derived classes to handle the event without attaching a delegate.","pos":[566,673]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[674,748]}]},{"pos":[196678,196780],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewCancelEditEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewCancelEditEventArgs\"></xref> that contains event data."},{"pos":[196956,197063],"content":"There is no handler for the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.RowCancelingEdit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"There is no handler for the <xref href=\"System.Web.UI.WebControls.GridView.RowCancelingEdit\"></xref> event."},{"pos":[197621,197705],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.RowCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.GridView.RowCommand\"></xref> event."},{"pos":[197718,198362],"content":"The <xref:System.Web.UI.WebControls.GridView.RowCommand> event is raised when a button is clicked in the <xref:System.Web.UI.WebControls.GridView> control. This enables you to provide an event-handling method that performs a custom routine whenever this event occurs.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowCommand method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.GridView.RowCommand&gt; event is raised when a button is clicked in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,155],"source":"The <xref:System.Web.UI.WebControls.GridView.RowCommand> event is raised when a button is clicked in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"This enables you to provide an event-handling method that performs a custom routine whenever this event occurs.","pos":[156,267]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[274,336]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[337,457],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnRowCommand method also allows derived classes to handle the event without attaching a delegate.","pos":[464,565]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[566,640]}]},{"pos":[199303,199402],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewCommandEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewCommandEventArgs\"></xref> that contains event data."},{"pos":[200018,200102],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.RowCreated\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.GridView.RowCreated\"></xref> event."},{"pos":[200115,200977],"content":"Before the <xref:System.Web.UI.WebControls.GridView> control can be rendered, a <xref:System.Web.UI.WebControls.GridViewRow> object must be created for each row in the control. The <xref:System.Web.UI.WebControls.GridView.RowCreated> event is raised when each row in the <xref:System.Web.UI.WebControls.GridView> control is created. This enables you to provide an event-handling method that performs a custom routine, such as adding custom content to a row, whenever this event occurs.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowCreated method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control can be rendered, a &lt;xref:System.Web.UI.WebControls.GridViewRow&gt; object must be created for each row in the control.","pos":[0,176],"source":"Before the <xref:System.Web.UI.WebControls.GridView> control can be rendered, a <xref:System.Web.UI.WebControls.GridViewRow> object must be created for each row in the control."},{"content":"The &lt;xref:System.Web.UI.WebControls.GridView.RowCreated&gt; event is raised when each row in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control is created.","pos":[177,332],"source":" The <xref:System.Web.UI.WebControls.GridView.RowCreated> event is raised when each row in the <xref:System.Web.UI.WebControls.GridView> control is created."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as adding custom content to a row, whenever this event occurs.","pos":[333,485]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[492,554]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[555,675],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnRowCreated method also allows derived classes to handle the event without attaching a delegate.","pos":[682,783]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[784,858]}]},{"pos":[201861,201956],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewRowEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewRowEventArgs\"></xref> that contains event data."},{"pos":[202582,202668],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.RowDataBound\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.GridView.RowDataBound\"></xref> event."},{"pos":[202681,203771],"content":"Before the <xref:System.Web.UI.WebControls.GridView> control can be rendered, each row in the control must be bound to a record in the data source. The <xref:System.Web.UI.WebControls.GridView.RowDataBound> event is raised when a data row (represented by a <xref:System.Web.UI.WebControls.GridViewRow> object) is bound to data in the <xref:System.Web.UI.WebControls.GridView> control. This enables you to provide an event-handling method that performs a custom routine, such as modifying the values of the data bound to the row, whenever this event occurs.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowDataBound method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.       A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control can be rendered, each row in the control must be bound to a record in the data source.","pos":[0,147],"source":"Before the <xref:System.Web.UI.WebControls.GridView> control can be rendered, each row in the control must be bound to a record in the data source."},{"content":"The &lt;xref:System.Web.UI.WebControls.GridView.RowDataBound&gt; event is raised when a data row (represented by a &lt;xref:System.Web.UI.WebControls.GridViewRow&gt; object) is bound to data in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[148,384],"source":" The <xref:System.Web.UI.WebControls.GridView.RowDataBound> event is raised when a data row (represented by a <xref:System.Web.UI.WebControls.GridViewRow> object) is bound to data in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as modifying the values of the data bound to the row, whenever this event occurs.","pos":[385,556]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[563,625]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[626,746],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnRowDataBound method also allows derived classes to handle the event without attaching a delegate.","pos":[753,856]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[857,931]},{"content":"A Visual Studio Web site project with source code is available to accompany this topic: <bpt id=\"p1\">[</bpt>Download<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=191882)</ept>.","pos":[938,1084],"source":"       A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882)."}]},{"pos":[203992,204087],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewRowEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewRowEventArgs\"></xref> that contains event data."},{"pos":[204725,204809],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.RowDeleted\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.GridView.RowDeleted\"></xref> event."},{"pos":[204822,205558],"content":"The <xref:System.Web.UI.WebControls.GridView.RowDeleted> event is raised when a row's Delete button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control deletes the row. This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the delete operation, whenever this event occurs.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowDeleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.GridView.RowDeleted&gt; event is raised when a row's Delete button is clicked, but after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control deletes the row.","pos":[0,192],"source":"The <xref:System.Web.UI.WebControls.GridView.RowDeleted> event is raised when a row's Delete button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control deletes the row."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the delete operation, whenever this event occurs.","pos":[193,359]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[366,428]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[429,549],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnRowDeleted method also allows derived classes to handle the event without attaching a delegate.","pos":[556,657]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[658,732]}]},{"pos":[205785,205884],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewDeletedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewDeletedEventArgs\"></xref> that contains event data."},{"pos":[206520,206605],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.RowDeleting\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.GridView.RowDeleting\"></xref> event."},{"pos":[206618,207343],"content":"The <xref:System.Web.UI.WebControls.GridView.RowDeleting> event is raised when a row's Delete button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control deletes the row. This enables you to provide an event-handling method that performs a custom routine, such as canceling the delete operation, whenever this event occurs.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowDeleting method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.GridView.RowDeleting&gt; event is raised when a row's Delete button is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control deletes the row.","pos":[0,194],"source":"The <xref:System.Web.UI.WebControls.GridView.RowDeleting> event is raised when a row's Delete button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control deletes the row."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as canceling the delete operation, whenever this event occurs.","pos":[195,347]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[354,416]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[417,537],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnRowDeleting method also allows derived classes to handle the event without attaching a delegate.","pos":[544,646]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[647,721]}]},{"pos":[207569,207667],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewDeleteEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewDeleteEventArgs\"></xref> that contains event data."},{"pos":[207838,207940],"content":"There is no handler for the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.RowDeleting\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"There is no handler for the <xref href=\"System.Web.UI.WebControls.GridView.RowDeleting\"></xref> event."},{"pos":[208483,208567],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.RowEditing\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.GridView.RowEditing\"></xref> event."},{"pos":[208580,209300],"content":"The <xref:System.Web.UI.WebControls.GridView.RowEditing> event is raised when a row's Edit button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control enters edit mode. This enables you to provide an event-handling method that performs a custom routine, such as canceling the edit operation, whenever this event occurs.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowEditing method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.GridView.RowEditing&gt; event is raised when a row's Edit button is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control enters edit mode.","pos":[0,192],"source":"The <xref:System.Web.UI.WebControls.GridView.RowEditing> event is raised when a row's Edit button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control enters edit mode."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as canceling the edit operation, whenever this event occurs.","pos":[193,343]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[350,412]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[413,533],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnRowEditing method also allows derived classes to handle the event without attaching a delegate.","pos":[540,641]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[642,716]}]},{"pos":[209521,209617],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewEditEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewEditEventArgs\"></xref> that contains event data."},{"pos":[209787,209888],"content":"There is no handler for the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.RowEditing\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"There is no handler for the <xref href=\"System.Web.UI.WebControls.GridView.RowEditing\"></xref> event."},{"pos":[210446,210530],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.RowUpdated\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.GridView.RowUpdated\"></xref> event."},{"pos":[210543,211279],"content":"The <xref:System.Web.UI.WebControls.GridView.RowUpdated> event is raised when a row's Update button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control updates the row. This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the update operation, whenever this event occurs.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowUpdated method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.GridView.RowUpdated&gt; event is raised when a row's Update button is clicked, but after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control updates the row.","pos":[0,192],"source":"The <xref:System.Web.UI.WebControls.GridView.RowUpdated> event is raised when a row's Update button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control updates the row."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the update operation, whenever this event occurs.","pos":[193,359]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[366,428]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[429,549],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnRowUpdated method also allows derived classes to handle the event without attaching a delegate.","pos":[556,657]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[658,732]}]},{"pos":[211506,211605],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewUpdatedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewUpdatedEventArgs\"></xref> that contains event data."},{"pos":[212241,212326],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.RowUpdating\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.GridView.RowUpdating\"></xref> event."},{"pos":[212339,213064],"content":"The <xref:System.Web.UI.WebControls.GridView.RowUpdating> event is raised when a row's Update button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control updates the row. This enables you to provide an event-handling method that performs a custom routine, such as canceling the update operation, whenever this event occurs.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowUpdating method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.GridView.RowUpdating&gt; event is raised when a row's Update button is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control updates the row.","pos":[0,194],"source":"The <xref:System.Web.UI.WebControls.GridView.RowUpdating> event is raised when a row's Update button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control updates the row."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as canceling the update operation, whenever this event occurs.","pos":[195,347]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[354,416]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[417,537],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnRowUpdating method also allows derived classes to handle the event without attaching a delegate.","pos":[544,646]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[647,721]}]},{"pos":[213290,213388],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewUpdateEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewUpdateEventArgs\"></xref> that contains event data."},{"pos":[213559,213661],"content":"There is no handler for the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.RowUpdating\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"There is no handler for the <xref href=\"System.Web.UI.WebControls.GridView.RowUpdating\"></xref> event."},{"pos":[214156,214250],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.SelectedIndexChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.GridView.SelectedIndexChanged\"></xref> event."},{"pos":[214263,215043],"content":"The <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> event is raised when a row's Select button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the select operation. This enables you to provide an event-handling method that performs a custom routine, such as updating a status label with the currently selected row, whenever this event occurs.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnSelectedIndexChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged&gt; event is raised when a row's Select button is clicked, but after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control handles the select operation.","pos":[0,215],"source":"The <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> event is raised when a row's Select button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the select operation."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as updating a status label with the currently selected row, whenever this event occurs.","pos":[216,393]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[400,462]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[463,583],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnSelectedIndexChanged method also allows derived classes to handle the event without attaching a delegate.","pos":[590,701]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[702,776]}]},{"pos":[215782,215865],"content":"An &lt;xref:System.EventArgs?displayProperty=fullName&gt; that contains event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <ph id=\"ph1\">&amp;lt;</ph>xref:System.EventArgs?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> that contains event data.","pos":[0,83],"source":"An &lt;xref:System.EventArgs?displayProperty=fullName&gt; that contains event data."}]},{"pos":[216561,216656],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.SelectedIndexChanging\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.GridView.SelectedIndexChanging\"></xref> event."},{"pos":[216669,217430],"content":"The <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> event is raised when a row's Select button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the select operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the selection operation, whenever this event occurs.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnSelectedIndexChanging method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging&gt; event is raised when a row's Select button is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control handles the select operation.","pos":[0,217],"source":"The <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> event is raised when a row's Select button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the select operation."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as canceling the selection operation, whenever this event occurs.","pos":[218,373]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[380,442]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[443,563],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnSelectedIndexChanging method also allows derived classes to handle the event without attaching a delegate.","pos":[570,682]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[683,757]}]},{"pos":[217666,217764],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewSelectEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewSelectEventArgs\"></xref> that contains event data."},{"pos":[218278,218358],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.Sorted\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.GridView.Sorted\"></xref> event."},{"pos":[218371,219089],"content":"The <xref:System.Web.UI.WebControls.GridView.Sorted> event is raised when the hyperlink to sort a column is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the sort operation. This enables you to provide an event-handling method that performs a custom routine, such as custom sorting, whenever this event occurs.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnSorted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.GridView.Sorted&gt; event is raised when the hyperlink to sort a column is clicked, but after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control handles the sort operation.","pos":[0,208],"source":"The <xref:System.Web.UI.WebControls.GridView.Sorted> event is raised when the hyperlink to sort a column is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the sort operation."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as custom sorting, whenever this event occurs.","pos":[209,345]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[352,414]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[415,535],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnSorted method also allows derived classes to handle the event without attaching a delegate.","pos":[542,639]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[640,714]}]},{"pos":[219237,219320],"content":"An &lt;xref:System.EventArgs?displayProperty=fullName&gt; that contains event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <ph id=\"ph1\">&amp;lt;</ph>xref:System.EventArgs?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> that contains event data.","pos":[0,83],"source":"An &lt;xref:System.EventArgs?displayProperty=fullName&gt; that contains event data."}]},{"pos":[219922,220003],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.Sorting\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.WebControls.GridView.Sorting\"></xref> event."},{"pos":[220016,220754],"content":"The <xref:System.Web.UI.WebControls.GridView.Sorting> event is raised when the hyperlink to sort a column is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the sort operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the sorting operation, whenever this event occurs.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnSorting method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.GridView.Sorting&gt; event is raised when the hyperlink to sort a column is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control handles the sort operation.","pos":[0,210],"source":"The <xref:System.Web.UI.WebControls.GridView.Sorting> event is raised when the hyperlink to sort a column is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the sort operation."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as canceling the sorting operation, whenever this event occurs.","pos":[211,364]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[371,433]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[434,554],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnSorting method also allows derived classes to handle the event without attaching a delegate.","pos":[561,659]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[660,734]}]},{"pos":[220972,221068],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewSortEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewSortEventArgs\"></xref> that contains event data."},{"pos":[221235,221333],"content":"There is no handler for the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.Sorting\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"There is no handler for the <xref href=\"System.Web.UI.WebControls.GridView.Sorting\"></xref> event."},{"pos":[221696,221841],"content":"Gets the number of pages required to display the records of the data source in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets the number of pages required to display the records of the data source in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[221853,222330],"content":"When the paging feature is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`), use the PageCount property to determine the total number of pages required to display the records in the data source. This value is calculated by dividing the total number of records in the data source by the number of records displayed in a page (as specified by the <xref:System.Web.UI.WebControls.GridView.PageSize%2A> property) and rounding up.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the paging feature is enabled (by setting the &lt;xref:System.Web.UI.WebControls.GridView.AllowPaging%2A&gt; property to <ph id=\"ph1\">`true`</ph>), use the PageCount property to determine the total number of pages required to display the records in the data source.","pos":[0,246],"source":"When the paging feature is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`), use the PageCount property to determine the total number of pages required to display the records in the data source."},{"content":"This value is calculated by dividing the total number of records in the data source by the number of records displayed in a page (as specified by the &lt;xref:System.Web.UI.WebControls.GridView.PageSize%2A&gt; property) and rounding up.","pos":[247,477],"source":" This value is calculated by dividing the total number of records in the data source by the number of records displayed in a page (as specified by the <xref:System.Web.UI.WebControls.GridView.PageSize%2A> property) and rounding up."}]},{"pos":[222852,222941],"content":"The number of pages in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"The number of pages in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[223379,223434],"content":"Gets or sets the index of the currently displayed page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the index of the currently displayed page.","pos":[0,55]}]},{"pos":[223446,223735],"content":"When the paging feature is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`), use the PageIndex property to determine the index of the currently displayed page. You can also use this property to programmatically change the displayed page.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the paging feature is enabled (by setting the &lt;xref:System.Web.UI.WebControls.GridView.AllowPaging%2A&gt; property to <ph id=\"ph1\">`true`</ph>), use the PageIndex property to determine the index of the currently displayed page.","pos":[0,211],"source":"When the paging feature is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`), use the PageIndex property to determine the index of the currently displayed page."},{"content":"You can also use this property to programmatically change the displayed page.","pos":[212,289]}]},{"pos":[224416,224469],"content":"The zero-based index of the currently displayed page.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the currently displayed page.","pos":[0,53]}]},{"pos":[224656,224709],"content":"The PageIndex property is set to a value less than 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The PageIndex property is set to a value less than 0.","pos":[0,53]}]},{"pos":[225104,225260],"content":"Occurs when one of the pager buttons is clicked, but after the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control handles the paging operation.","needQuote":true,"needEscape":true,"source":"Occurs when one of the pager buttons is clicked, but after the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control handles the paging operation."},{"pos":[225273,225939],"content":"The PageIndexChanged event is raised when one of the pager buttons is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation. This enables you to provide an event-handling method that performs a custom routine, such as a custom paging operation, whenever this event occurs.       To determine the index of the page selected by the user, use the <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> property of the <xref:System.Web.UI.WebControls.GridView> control.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The PageIndexChanged event is raised when one of the pager buttons is clicked, but after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control handles the paging operation.","pos":[0,172],"source":"The PageIndexChanged event is raised when one of the pager buttons is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as a custom paging operation, whenever this event occurs.","pos":[173,320]},{"content":"To determine the index of the page selected by the user, use the &lt;xref:System.Web.UI.WebControls.GridView.PageIndex%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[327,513],"source":"       To determine the index of the page selected by the user, use the <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> property of the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[520,662],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[226444,226456],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[226873,227030],"content":"Occurs when one of the pager buttons is clicked, but before the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control handles the paging operation.","needQuote":true,"needEscape":true,"source":"Occurs when one of the pager buttons is clicked, but before the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control handles the paging operation."},{"pos":[227043,228098],"content":"The PageIndexChanging event is raised when one of the pager buttons is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the paging operation, whenever this event occurs.      > [!NOTE] >  This event is not raised when you programmatically set the <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> property.       A <xref:System.Web.UI.WebControls.GridViewPageEventArgs> object is passed to the event-handling method, which enables you to determine the index of the page selected by the user and to indicate that the paging operation should be canceled. To cancel the paging operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewPageEventArgs> object to `true`.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The PageIndexChanging event is raised when one of the pager buttons is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control handles the paging operation.","pos":[0,174],"source":"The PageIndexChanging event is raised when one of the pager buttons is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as canceling the paging operation, whenever this event occurs.","pos":[175,327]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This event is not raised when you programmatically set the &lt;xref:System.Web.UI.WebControls.GridView.PageIndex%2A&gt; property.","pos":[333,469],"source":"      > [!NOTE] >  This event is not raised when you programmatically set the <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> property."},{"content":"A &lt;xref:System.Web.UI.WebControls.GridViewPageEventArgs&gt; object is passed to the event-handling method, which enables you to determine the index of the page selected by the user and to indicate that the paging operation should be canceled.","pos":[476,715],"source":"       A <xref:System.Web.UI.WebControls.GridViewPageEventArgs> object is passed to the event-handling method, which enables you to determine the index of the page selected by the user and to indicate that the paging operation should be canceled."},{"content":"To cancel the paging operation, set the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.GridViewPageEventArgs&gt; object to <ph id=\"ph1\">`true`</ph>.","pos":[716,899],"source":" To cancel the paging operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewPageEventArgs> object to `true`."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[906,1048],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[228764,228776],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[229176,229397],"content":"Gets a reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.PagerSettings\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that enables you to set the properties of the pager buttons in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets a reference to the <xref href=\"System.Web.UI.WebControls.PagerSettings\"></xref> object that enables you to set the properties of the pager buttons in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[229410,230656],"content":"Use the PagerSettings property to control the settings of the pager row in a <xref:System.Web.UI.WebControls.GridView> control. The pager row is displayed when the paging feature is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`) and contains the controls that allow the user to navigate to the different pages in the control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.PagerSettings> object it returns. The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.PagerSettings> object (for example, `PagerSettings-Mode`).      -   Nest a `<PagerSettings>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control.       The properties can also be set programmatically in the form `Property.Subproperty` (for example, `PagerStyle.Mode`). Common settings usually include the pager row's display mode and custom text or images for the navigation controls.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the PagerSettings property to control the settings of the pager row in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,127],"source":"Use the PagerSettings property to control the settings of the pager row in a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The pager row is displayed when the paging feature is enabled (by setting the &lt;xref:System.Web.UI.WebControls.GridView.AllowPaging%2A&gt; property to <ph id=\"ph1\">`true`</ph>) and contains the controls that allow the user to navigate to the different pages in the control.","pos":[128,379],"source":" The pager row is displayed when the paging feature is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`) and contains the controls that allow the user to navigate to the different pages in the control."},{"content":"This property is read-only; however, you can set the properties of the &lt;xref:System.Web.UI.WebControls.PagerSettings&gt; object it returns.","pos":[380,516],"source":" This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.PagerSettings> object it returns."},{"content":"The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control in the form <ph id=\"ph1\">`Property-Subproperty`</ph>, where <ph id=\"ph2\">`Subproperty`</ph> is a property of the &lt;xref:System.Web.UI.WebControls.PagerSettings&gt; object (for example, <ph id=\"ph3\">`PagerSettings-Mode`</ph>).","pos":[517,864],"source":" The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.PagerSettings> object (for example, `PagerSettings-Mode`)."},{"content":"-   Nest a <ph id=\"ph1\">`&lt;PagerSettings&gt;`</ph> element between the opening and closing tags of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[870,1001],"source":"      -   Nest a `<PagerSettings>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The properties can also be set programmatically in the form <ph id=\"ph1\">`Property.Subproperty`</ph> (for example, <ph id=\"ph2\">`PagerStyle.Mode`</ph>).","pos":[1008,1124],"source":"       The properties can also be set programmatically in the form `Property.Subproperty` (for example, `PagerStyle.Mode`)."},{"content":"Common settings usually include the pager row's display mode and custom text or images for the navigation controls.","pos":[1125,1240]}]},{"pos":[231244,231453],"content":"A reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.PagerSettings\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that enables you to set the properties of the pager buttons in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"A reference to the <xref href=\"System.Web.UI.WebControls.PagerSettings\"></xref> that enables you to set the properties of the pager buttons in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[231900,232118],"content":"Gets a reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableItemStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that enables you to set the appearance of the pager row in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets a reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> object that enables you to set the appearance of the pager row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[232131,233364],"content":"Use the PagerStyle property to control the appearance of the pager row in a <xref:System.Web.UI.WebControls.GridView> control. The pager row is displayed when the paging feature is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`) and contains the controls that allow the user to navigate to the different pages in the control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns. The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `PagerStyle-ForeColor`).      -   Nest a `<PagerStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control.       The properties can also be set programmatically in the form `Property.Subproperty` (for example, `PagerStyle.ForeColor`). Common settings usually include a custom background color, foreground color, and font properties.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the PagerStyle property to control the appearance of the pager row in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,126],"source":"Use the PagerStyle property to control the appearance of the pager row in a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The pager row is displayed when the paging feature is enabled (by setting the &lt;xref:System.Web.UI.WebControls.GridView.AllowPaging%2A&gt; property to <ph id=\"ph1\">`true`</ph>) and contains the controls that allow the user to navigate to the different pages in the control.","pos":[127,378],"source":" The pager row is displayed when the paging feature is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`) and contains the controls that allow the user to navigate to the different pages in the control."},{"content":"This property is read-only; however, you can set the properties of the &lt;xref:System.Web.UI.WebControls.TableItemStyle&gt; object it returns.","pos":[379,516],"source":" This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns."},{"content":"The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control in the form <ph id=\"ph1\">`Property-Subproperty`</ph>, where <ph id=\"ph2\">`Subproperty`</ph> is a property of the &lt;xref:System.Web.UI.WebControls.TableItemStyle&gt; object (for example, <ph id=\"ph3\">`PagerStyle-ForeColor`</ph>).","pos":[517,867],"source":" The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `PagerStyle-ForeColor`)."},{"content":"-   Nest a <ph id=\"ph1\">`&lt;PagerStyle&gt;`</ph> element between the opening and closing tags of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[873,1001],"source":"      -   Nest a `<PagerStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The properties can also be set programmatically in the form <ph id=\"ph1\">`Property.Subproperty`</ph> (for example, <ph id=\"ph2\">`PagerStyle.ForeColor`</ph>).","pos":[1008,1129],"source":"       The properties can also be set programmatically in the form `Property.Subproperty` (for example, `PagerStyle.ForeColor`)."},{"content":"Common settings usually include a custom background color, foreground color, and font properties.","pos":[1130,1227]}]},{"pos":[233938,234131],"content":"A reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableItemStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the style of the pager row in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"A reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> that represents the style of the pager row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[234590,234709],"content":"Gets or sets the custom content for the pager row in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the custom content for the pager row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[234722,236479],"content":"A pager row is displayed in a <xref:System.Web.UI.WebControls.GridView> control when the paging feature is enabled (when the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property is set to true). The pager row contains the controls that allow the user to navigate to the different pages in the control. Instead of using the built-in pager row user interface (UI), you can define your own UI by using the PagerTemplate property.      > [!NOTE] >  When the PagerTemplate property is set, it overrides the built-in pager row UI.       To specify a custom template for the pager row, first place `<PagerTemplate>` tags between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control. You can then list the contents of the template between the opening and closing `<PagerTemplate>` tags. To control the appearance of the pager row, use the <xref:System.Web.UI.WebControls.GridView.PagerStyle%2A> property.       Typically, button controls are added to the pager template to perform the paging operations. The <xref:System.Web.UI.WebControls.GridView> control performs a paging operation when a button control with its `CommandName` property set to \"Page\" is clicked. The button's `CommandArgument` property determines the type of paging operation to perform. The following table lists the command argument values supported by the <xref:System.Web.UI.WebControls.GridView> control.      |`CommandArgument` value|Description|   |-----------------------------|-----------------|   |\"Next\"|Navigates to the next page.|   |\"Prev\"|Navigates to the previous page.|   |\"First\"|Navigates to the first page.|   |\"Last\"|Navigates to the last page.|   |Integer value|Navigates to the specified page number.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A pager row is displayed in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control when the paging feature is enabled (when the &lt;xref:System.Web.UI.WebControls.GridView.AllowPaging%2A&gt; property is set to true).","pos":[0,207],"source":"A pager row is displayed in a <xref:System.Web.UI.WebControls.GridView> control when the paging feature is enabled (when the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property is set to true)."},{"content":"The pager row contains the controls that allow the user to navigate to the different pages in the control.","pos":[208,314]},{"content":"Instead of using the built-in pager row user interface (UI), you can define your own UI by using the PagerTemplate property.","pos":[315,439]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When the PagerTemplate property is set, it overrides the built-in pager row UI.","pos":[445,537],"source":"      > [!NOTE] >  When the PagerTemplate property is set, it overrides the built-in pager row UI."},{"content":"To specify a custom template for the pager row, first place <ph id=\"ph1\">`&lt;PagerTemplate&gt;`</ph> tags between the opening and closing tags of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[544,721],"source":"       To specify a custom template for the pager row, first place `<PagerTemplate>` tags between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"You can then list the contents of the template between the opening and closing <ph id=\"ph1\">`&lt;PagerTemplate&gt;`</ph> tags.","pos":[722,824],"source":" You can then list the contents of the template between the opening and closing `<PagerTemplate>` tags."},{"content":"To control the appearance of the pager row, use the &lt;xref:System.Web.UI.WebControls.GridView.PagerStyle%2A&gt; property.","pos":[825,942],"source":" To control the appearance of the pager row, use the <xref:System.Web.UI.WebControls.GridView.PagerStyle%2A> property."},{"content":"Typically, button controls are added to the pager template to perform the paging operations.","pos":[949,1041]},{"content":"The &lt;xref:System.Web.UI.WebControls.GridView&gt; control performs a paging operation when a button control with its <ph id=\"ph1\">`CommandName`</ph> property set to \"Page\" is clicked.","pos":[1042,1203],"source":" The <xref:System.Web.UI.WebControls.GridView> control performs a paging operation when a button control with its `CommandName` property set to \"Page\" is clicked."},{"content":"The button's <ph id=\"ph1\">`CommandArgument`</ph> property determines the type of paging operation to perform.","pos":[1204,1295],"source":" The button's `CommandArgument` property determines the type of paging operation to perform."},{"content":"The following table lists the command argument values supported by the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[1296,1417],"source":" The following table lists the command argument values supported by the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"|<ph id=\"ph1\">`CommandArgument`</ph> value|Description|   |-----------------------------|-----------------|   |\"Next\"|Navigates to the next page.|   |\"Prev\"|Navigates to the previous page.|   |\"First\"|Navigates to the first page.|   |\"Last\"|Navigates to the last page.|   |Integer value|Navigates to the specified page number.|","pos":[1423,1732],"source":"      |`CommandArgument` value|Description|   |-----------------------------|-----------------|   |\"Next\"|Navigates to the next page.|   |\"Prev\"|Navigates to the previous page.|   |\"First\"|Navigates to the first page.|   |\"Last\"|Navigates to the last page.|   |Integer value|Navigates to the specified page number.|"}]},{"pos":[237097,237269],"content":"A <xref href=\"System.Web.UI.ITemplate\"></xref> that contains the custom content for the pager row. The default value is null, which indicates that this property is not set.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ITemplate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the custom content for the pager row.","pos":[0,98],"source":"A <xref href=\"System.Web.UI.ITemplate\"></xref> that contains the custom content for the pager row."},{"content":"The default value is null, which indicates that this property is not set.","pos":[99,172]}]},{"pos":[237706,237831],"content":"Gets or sets the number of records to display on a page in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the number of records to display on a page in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[237843,238059],"content":"When the paging feature is enabled (by setting the &lt;xref:System.Web.UI.WebControls.GridView.AllowPaging%2A&gt; property to <ph id=\"ph1\">`true`</ph>), use the PageSize property to specify the number of records to display on a single page.","needQuote":true,"needEscape":true,"extradata":"MT","source":"When the paging feature is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`), use the PageSize property to specify the number of records to display on a single page."},{"pos":[238557,238626],"content":"The number of records to display on a single page. The default is 10.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of records to display on a single page. The default is 10.","pos":[0,69],"nodes":[{"content":"The number of records to display on a single page.","pos":[0,50]},{"content":"The default is 10.","pos":[51,69]}]}]},{"pos":[238812,238864],"content":"The PageSize property is set to a value less than 1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The PageSize property is set to a value less than 1.","pos":[0,52]}]},{"pos":[239373,239476],"content":"Binds the specified data source to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Binds the specified data source to the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[239488,239650],"content":"The PerformDataBinding method is a helper method called by the <xref:System.Web.UI.WebControls.GridView> control to bind the specified data source to the control.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The PerformDataBinding method is a helper method called by the &lt;xref:System.Web.UI.WebControls.GridView&gt; control to bind the specified data source to the control.","pos":[0,162],"source":"The PerformDataBinding method is a helper method called by the <xref:System.Web.UI.WebControls.GridView> control to bind the specified data source to the control."}]},{"pos":[239849,239920],"content":"An <xref:System.Collections.IEnumerable> that contains the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerable&gt; that contains the data source.","pos":[0,71],"source":"An <xref:System.Collections.IEnumerable> that contains the data source."}]},{"pos":[240441,240475],"content":"Establishes the control hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Establishes the control hierarchy.","pos":[0,34]}]},{"pos":[240488,240739],"content":"This method is used to establish the control hierarchy for the <xref:System.Web.UI.WebControls.GridView> control.      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is used to establish the control hierarchy for the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,113],"source":"This method is used to establish the control hierarchy for the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers to extend the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[119,248],"source":"      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control."}]},{"pos":[241382,241511],"content":"Creates the arguments for the callback handler in the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates the arguments for the callback handler in the &lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*&gt; method.","pos":[0,129],"source":"Creates the arguments for the callback handler in the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*> method."}]},{"pos":[241523,241767],"content":"The RaiseCallbackEvent method is a helper method used by the <xref:System.Web.UI.WebControls.GridView> control to create the arguments for the callback handler in the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RaiseCallbackEvent method is a helper method used by the &lt;xref:System.Web.UI.WebControls.GridView&gt; control to create the arguments for the callback handler in the &lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt; method.","pos":[0,244],"source":"The RaiseCallbackEvent method is a helper method used by the <xref:System.Web.UI.WebControls.GridView> control to create the arguments for the callback handler in the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method."}]},{"pos":[241942,241984],"content":"The argument to pass to the event handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"The argument to pass to the event handler.","pos":[0,42]}]},{"pos":[242528,242663],"content":"Raises the appropriate events for the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control when it posts back to the server.","needQuote":true,"needEscape":true,"source":"Raises the appropriate events for the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control when it posts back to the server."},{"pos":[242676,243266],"content":"The page calls the <xref:System.Web.UI.Page.RaisePostBackEvent%2A> method when a postback event occurs that raises the appropriate events for a <xref:System.Web.UI.WebControls.GridView> control. This call occurs in the page life cycle after loading and change notification are complete, but before prerendering occurs. This method has been implemented to create a <xref:System.Web.UI.WebControls.CommandEventArgs> object for the events that are raised.      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The page calls the &lt;xref:System.Web.UI.Page.RaisePostBackEvent%2A&gt; method when a postback event occurs that raises the appropriate events for a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,194],"source":"The page calls the <xref:System.Web.UI.Page.RaisePostBackEvent%2A> method when a postback event occurs that raises the appropriate events for a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"This call occurs in the page life cycle after loading and change notification are complete, but before prerendering occurs.","pos":[195,318]},{"content":"This method has been implemented to create a &lt;xref:System.Web.UI.WebControls.CommandEventArgs&gt; object for the events that are raised.","pos":[319,452],"source":" This method has been implemented to create a <xref:System.Web.UI.WebControls.CommandEventArgs> object for the events that are raised."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers to extend the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[458,587],"source":"      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control."}]},{"pos":[243442,243588],"content":"The event argument from which to create a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.CommandEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the event or events that are raised.","needQuote":true,"needEscape":true,"source":"The event argument from which to create a <xref href=\"System.Web.UI.WebControls.CommandEventArgs\"></xref> for the event or events that are raised."},{"pos":[244126,244266],"content":"Renders the Web server control content to the client's browser using the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Renders the Web server control content to the client's browser using the specified <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object."},{"pos":[244279,244592],"content":"The Render method is used to render the server control content to the client's browser using the specified <xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName> object.      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Render method is used to render the server control content to the client's browser using the specified &lt;xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName&gt; object.","pos":[0,175],"source":"The Render method is used to render the server control content to the client's browser using the specified <xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName> object."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers to extend the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[181,310],"source":"      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control."}]},{"pos":[244780,244900],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to render the server control content on the client's browser.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> used to render the server control content on the client's browser."},{"pos":[245367,245466],"content":"Occurs when the Cancel button of a row in edit mode is clicked, but before the row exits edit mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the Cancel button of a row in edit mode is clicked, but before the row exits edit mode.","pos":[0,99]}]},{"pos":[245479,246384],"content":"The RowCancelingEdit event is raised when the Cancel button of a row in edit mode is clicked, but before the row exits edit mode. This enables you to provide an event-handling method that performs a custom routine, such as stopping the cancel operation if it would put the row in an undesired state, whenever this event occurs.       A <xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the cancel operation should be stopped. To stop the cancel operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs> object to `true`.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RowCancelingEdit event is raised when the Cancel button of a row in edit mode is clicked, but before the row exits edit mode.","pos":[0,129]},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as stopping the cancel operation if it would put the row in an undesired state, whenever this event occurs.","pos":[130,327]},{"content":"A &lt;xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs&gt; object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the cancel operation should be stopped.","pos":[334,564],"source":"       A <xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the cancel operation should be stopped."},{"content":"To stop the cancel operation, set the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs&gt; object to <ph id=\"ph1\">`true`</ph>.","pos":[565,752],"source":" To stop the cancel operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs> object to `true`."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[759,901],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[247394,247406],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[247788,247889],"content":"Occurs when a button is clicked in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Occurs when a button is clicked in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[247902,251218],"content":"The RowCommand event is raised when a button is clicked in the <xref:System.Web.UI.WebControls.GridView> control. This enables you to provide an event-handling method that performs a custom routine whenever this event occurs.       Buttons within a <xref:System.Web.UI.WebControls.GridView> control can also invoke some of the built-in functionality of the control. To perform one of these operations, set the `CommandName` property of a button to one of the values in the following table.      |`CommandName` value|Description|   |-------------------------|-----------------|   |\"Cancel\"|Cancels an edit operation and returns the <xref:System.Web.UI.WebControls.GridView> control to read-only mode. Raises the <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> event.|   |\"Delete\"|Deletes the current record. Raises the <xref:System.Web.UI.WebControls.GridView.RowDeleting> and <xref:System.Web.UI.WebControls.GridView.RowDeleted> events.|   |\"Edit\"|Puts the current record in edit mode. Raises the <xref:System.Web.UI.WebControls.GridView.RowEditing> event.|   |\"Page\"|Performs a paging operation. Sets the `CommandArgument` property of the button to \"First\", \"Last\", \"Next\", \"Prev\", or a page number to specify the type of paging operation to perform. Raises the <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> and <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> events.|   |\"Select\"|Selects the current record. Raises the <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> and <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> events.|   |\"Sort\"|Sorts the <xref:System.Web.UI.WebControls.GridView> control. Raises the <xref:System.Web.UI.WebControls.GridView.Sorting> and <xref:System.Web.UI.WebControls.GridView.Sorted> events.|   |\"Update\"|Updates the current record in the data source. Raises the <xref:System.Web.UI.WebControls.GridView.RowUpdating> and <xref:System.Web.UI.WebControls.GridView.RowUpdated> events.|       Although the RowCommand event is raised when a button listed in the previous table is clicked, it is recommended that you use the events listed in the table for the operation.       A <xref:System.Web.UI.WebControls.GridViewCommandEventArgs> object is passed to the event-handling method, which enables you to determine the command name and command argument of the button clicked.      > [!NOTE] >  To determine the index of the row that raised the event, use the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> property of the event argument that is passed to the event. The <xref:System.Web.UI.WebControls.ButtonField> class automatically populates the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> property with the appropriate index value. For other command buttons, you must manually set the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property of the command button. For example, you can set the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> to `<%# Container.DataItemIndex %>` when the <xref:System.Web.UI.WebControls.GridView> control has no paging enabled.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RowCommand event is raised when a button is clicked in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,113],"source":"The RowCommand event is raised when a button is clicked in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"This enables you to provide an event-handling method that performs a custom routine whenever this event occurs.","pos":[114,225]},{"content":"Buttons within a &lt;xref:System.Web.UI.WebControls.GridView&gt; control can also invoke some of the built-in functionality of the control.","pos":[232,365],"source":"       Buttons within a <xref:System.Web.UI.WebControls.GridView> control can also invoke some of the built-in functionality of the control."},{"content":"To perform one of these operations, set the <ph id=\"ph1\">`CommandName`</ph> property of a button to one of the values in the following table.","pos":[366,489],"source":" To perform one of these operations, set the `CommandName` property of a button to one of the values in the following table."},{"content":"|<ph id=\"ph1\">`CommandName`</ph> value|Description|   |-------------------------|-----------------|   |\"Cancel\"|Cancels an edit operation and returns the &lt;xref:System.Web.UI.WebControls.GridView&gt; control to read-only mode.","pos":[495,699],"source":"      |`CommandName` value|Description|   |-------------------------|-----------------|   |\"Cancel\"|Cancels an edit operation and returns the <xref:System.Web.UI.WebControls.GridView> control to read-only mode."},{"content":"Raises the &lt;xref:System.Web.UI.WebControls.GridView.RowCancelingEdit&gt; event.|   |\"Delete\"|Deletes the current record.","pos":[700,817],"source":" Raises the <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> event.|   |\"Delete\"|Deletes the current record."},{"content":"Raises the &lt;xref:System.Web.UI.WebControls.GridView.RowDeleting&gt; and &lt;xref:System.Web.UI.WebControls.GridView.RowDeleted&gt; events.|   |\"Edit\"|Puts the current record in edit mode.","pos":[818,996],"source":" Raises the <xref:System.Web.UI.WebControls.GridView.RowDeleting> and <xref:System.Web.UI.WebControls.GridView.RowDeleted> events.|   |\"Edit\"|Puts the current record in edit mode."},{"content":"Raises the &lt;xref:System.Web.UI.WebControls.GridView.RowEditing&gt; event.|   |\"Page\"|Performs a paging operation.","pos":[997,1107],"source":" Raises the <xref:System.Web.UI.WebControls.GridView.RowEditing> event.|   |\"Page\"|Performs a paging operation."},{"content":"Sets the <ph id=\"ph1\">`CommandArgument`</ph> property of the button to \"First\", \"Last\", \"Next\", \"Prev\", or a page number to specify the type of paging operation to perform.","pos":[1108,1262],"source":" Sets the `CommandArgument` property of the button to \"First\", \"Last\", \"Next\", \"Prev\", or a page number to specify the type of paging operation to perform."},{"content":"Raises the &lt;xref:System.Web.UI.WebControls.GridView.PageIndexChanging&gt; and &lt;xref:System.Web.UI.WebControls.GridView.PageIndexChanged&gt; events.|   |\"Select\"|Selects the current record.","pos":[1263,1445],"source":" Raises the <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> and <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> events.|   |\"Select\"|Selects the current record."},{"content":"Raises the &lt;xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging&gt; and &lt;xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged&gt; events.|   |\"Sort\"|Sorts the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[1446,1667],"source":" Raises the <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> and <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> events.|   |\"Sort\"|Sorts the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"Raises the &lt;xref:System.Web.UI.WebControls.GridView.Sorting&gt; and &lt;xref:System.Web.UI.WebControls.GridView.Sorted&gt; events.|   |\"Update\"|Updates the current record in the data source.","pos":[1668,1849],"source":" Raises the <xref:System.Web.UI.WebControls.GridView.Sorting> and <xref:System.Web.UI.WebControls.GridView.Sorted> events.|   |\"Update\"|Updates the current record in the data source."},{"content":"Raises the &lt;xref:System.Web.UI.WebControls.GridView.RowUpdating&gt; and &lt;xref:System.Web.UI.WebControls.GridView.RowUpdated&gt; events.|       Although the RowCommand event is raised when a button listed in the previous table is clicked, it is recommended that you use the events listed in the table for the operation.","pos":[1850,2162],"source":" Raises the <xref:System.Web.UI.WebControls.GridView.RowUpdating> and <xref:System.Web.UI.WebControls.GridView.RowUpdated> events.|       Although the RowCommand event is raised when a button listed in the previous table is clicked, it is recommended that you use the events listed in the table for the operation."},{"content":"A &lt;xref:System.Web.UI.WebControls.GridViewCommandEventArgs&gt; object is passed to the event-handling method, which enables you to determine the command name and command argument of the button clicked.","pos":[2169,2367],"source":"       A <xref:System.Web.UI.WebControls.GridViewCommandEventArgs> object is passed to the event-handling method, which enables you to determine the command name and command argument of the button clicked."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To determine the index of the row that raised the event, use the &lt;xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A&gt; property of the event argument that is passed to the event.","pos":[2373,2579],"source":"      > [!NOTE] >  To determine the index of the row that raised the event, use the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> property of the event argument that is passed to the event."},{"content":"The &lt;xref:System.Web.UI.WebControls.ButtonField&gt; class automatically populates the &lt;xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A&gt; property with the appropriate index value.","pos":[2580,2774],"source":" The <xref:System.Web.UI.WebControls.ButtonField> class automatically populates the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> property with the appropriate index value."},{"content":"For other command buttons, you must manually set the &lt;xref:System.Web.UI.WebControls.Button.CommandArgument%2A&gt; property of the command button.","pos":[2775,2918],"source":" For other command buttons, you must manually set the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property of the command button."},{"content":"For example, you can set the &lt;xref:System.Web.UI.WebControls.Button.CommandArgument%2A&gt; to <ph id=\"ph1\">`&lt;%# Container.DataItemIndex %&gt;`</ph> when the &lt;xref:System.Web.UI.WebControls.GridView&gt; control has no paging enabled.","pos":[2919,3124],"source":" For example, you can set the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> to `<%# Container.DataItemIndex %>` when the <xref:System.Web.UI.WebControls.GridView> control has no paging enabled."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[3131,3273],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[252663,252675],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[253057,253155],"content":"Occurs when a row is created in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Occurs when a row is created in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[253168,254280],"content":"Before the <xref:System.Web.UI.WebControls.GridView> control can be rendered, a <xref:System.Web.UI.WebControls.GridViewRow> object must be created for each row in the control. The RowCreated event is raised when each row in the <xref:System.Web.UI.WebControls.GridView> control is created. This enables you to provide an event-handling method that performs a custom routine, such as adding custom content to a row, whenever this event occurs.       A <xref:System.Web.UI.WebControls.GridViewRowEventArgs> object is passed to the event-handling method, which enables you to access the properties of the row being created. To access a specific cell in the row, use the <xref:System.Web.UI.WebControls.TableRow.Cells%2A> property of the <xref:System.Web.UI.WebControls.GridViewRowEventArgs> object. You can determine which row type (header row, data row, and so on) is being created by using the <xref:System.Web.UI.WebControls.GridViewRow.RowType%2A> property.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control can be rendered, a &lt;xref:System.Web.UI.WebControls.GridViewRow&gt; object must be created for each row in the control.","pos":[0,176],"source":"Before the <xref:System.Web.UI.WebControls.GridView> control can be rendered, a <xref:System.Web.UI.WebControls.GridViewRow> object must be created for each row in the control."},{"content":"The RowCreated event is raised when each row in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control is created.","pos":[177,290],"source":" The RowCreated event is raised when each row in the <xref:System.Web.UI.WebControls.GridView> control is created."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as adding custom content to a row, whenever this event occurs.","pos":[291,443]},{"content":"A &lt;xref:System.Web.UI.WebControls.GridViewRowEventArgs&gt; object is passed to the event-handling method, which enables you to access the properties of the row being created.","pos":[450,621],"source":"       A <xref:System.Web.UI.WebControls.GridViewRowEventArgs> object is passed to the event-handling method, which enables you to access the properties of the row being created."},{"content":"To access a specific cell in the row, use the &lt;xref:System.Web.UI.WebControls.TableRow.Cells%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.GridViewRowEventArgs&gt; object.","pos":[622,796],"source":" To access a specific cell in the row, use the <xref:System.Web.UI.WebControls.TableRow.Cells%2A> property of the <xref:System.Web.UI.WebControls.GridViewRowEventArgs> object."},{"content":"You can determine which row type (header row, data row, and so on) is being created by using the &lt;xref:System.Web.UI.WebControls.GridViewRow.RowType%2A&gt; property.","pos":[797,959],"source":" You can determine which row type (header row, data row, and so on) is being created by using the <xref:System.Web.UI.WebControls.GridViewRow.RowType%2A> property."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[966,1108],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[255117,255129],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[255521,255630],"content":"Occurs when a data row is bound to data in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Occurs when a data row is bound to data in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[255643,256968],"content":"Before the <xref:System.Web.UI.WebControls.GridView> control can be rendered, each row in the control must be bound to a record in the data source. The RowDataBound event is raised when a data row (represented by a <xref:System.Web.UI.WebControls.GridViewRow> object) is bound to data in the <xref:System.Web.UI.WebControls.GridView> control. This enables you to provide an event-handling method that performs a custom routine, such as modifying the values of the data bound to the row, whenever this event occurs.       A <xref:System.Web.UI.WebControls.GridViewRowEventArgs> object is passed to the event-handling method, which enables you to access the properties of the row being bound. To access a specific cell in the row, use the <xref:System.Web.UI.WebControls.TableRow.Cells%2A> property of the <xref:System.Web.UI.WebControls.GridViewRow> object contained in the <xref:System.Web.UI.WebControls.GridViewRowEventArgs.Row%2A> property of the <xref:System.Web.UI.WebControls.GridViewRowEventArgs> object. You can determine which row type (header row, data row, and so on) is being bound by using the <xref:System.Web.UI.WebControls.GridViewRow.RowType%2A> property.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control can be rendered, each row in the control must be bound to a record in the data source.","pos":[0,147],"source":"Before the <xref:System.Web.UI.WebControls.GridView> control can be rendered, each row in the control must be bound to a record in the data source."},{"content":"The RowDataBound event is raised when a data row (represented by a &lt;xref:System.Web.UI.WebControls.GridViewRow&gt; object) is bound to data in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[148,342],"source":" The RowDataBound event is raised when a data row (represented by a <xref:System.Web.UI.WebControls.GridViewRow> object) is bound to data in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as modifying the values of the data bound to the row, whenever this event occurs.","pos":[343,514]},{"content":"A &lt;xref:System.Web.UI.WebControls.GridViewRowEventArgs&gt; object is passed to the event-handling method, which enables you to access the properties of the row being bound.","pos":[521,690],"source":"       A <xref:System.Web.UI.WebControls.GridViewRowEventArgs> object is passed to the event-handling method, which enables you to access the properties of the row being bound."},{"content":"To access a specific cell in the row, use the &lt;xref:System.Web.UI.WebControls.TableRow.Cells%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.GridViewRow&gt; object contained in the &lt;xref:System.Web.UI.WebControls.GridViewRowEventArgs.Row%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.GridViewRowEventArgs&gt; object.","pos":[691,1011],"source":" To access a specific cell in the row, use the <xref:System.Web.UI.WebControls.TableRow.Cells%2A> property of the <xref:System.Web.UI.WebControls.GridViewRow> object contained in the <xref:System.Web.UI.WebControls.GridViewRowEventArgs.Row%2A> property of the <xref:System.Web.UI.WebControls.GridViewRowEventArgs> object."},{"content":"You can determine which row type (header row, data row, and so on) is being bound by using the &lt;xref:System.Web.UI.WebControls.GridViewRow.RowType%2A&gt; property.","pos":[1012,1172],"source":" You can determine which row type (header row, data row, and so on) is being bound by using the <xref:System.Web.UI.WebControls.GridViewRow.RowType%2A> property."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[1179,1321],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[257742,257754],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[258136,258276],"content":"Occurs when a row's Delete button is clicked, but after the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control deletes the row.","needQuote":true,"needEscape":true,"source":"Occurs when a row's Delete button is clicked, but after the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control deletes the row."},{"pos":[258289,259236],"content":"The RowDeleted event is raised when a row's Delete button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control deletes the row. This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the delete operation, whenever this event occurs.       A <xref:System.Web.UI.WebControls.GridViewDeletedEventArgs> object is passed to the event-handling method, which enables you to determine the number of rows affected and any exceptions that might have occurred. You can also indicate whether the exception was handled in the event-handling method by setting the <xref:System.Web.UI.WebControls.GridViewDeletedEventArgs.ExceptionHandled%2A> property of the <xref:System.Web.UI.WebControls.GridViewDeletedEventArgs> object.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RowDeleted event is raised when a row's Delete button is clicked, but after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control deletes the row.","pos":[0,150],"source":"The RowDeleted event is raised when a row's Delete button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control deletes the row."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the delete operation, whenever this event occurs.","pos":[151,317]},{"content":"A &lt;xref:System.Web.UI.WebControls.GridViewDeletedEventArgs&gt; object is passed to the event-handling method, which enables you to determine the number of rows affected and any exceptions that might have occurred.","pos":[324,534],"source":"       A <xref:System.Web.UI.WebControls.GridViewDeletedEventArgs> object is passed to the event-handling method, which enables you to determine the number of rows affected and any exceptions that might have occurred."},{"content":"You can also indicate whether the exception was handled in the event-handling method by setting the &lt;xref:System.Web.UI.WebControls.GridViewDeletedEventArgs.ExceptionHandled%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.GridViewDeletedEventArgs&gt; object.","pos":[535,794],"source":" You can also indicate whether the exception was handled in the event-handling method by setting the <xref:System.Web.UI.WebControls.GridViewDeletedEventArgs.ExceptionHandled%2A> property of the <xref:System.Web.UI.WebControls.GridViewDeletedEventArgs> object."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[801,943],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[259851,259863],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[260250,260391],"content":"Occurs when a row's Delete button is clicked, but before the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control deletes the row.","needQuote":true,"needEscape":true,"source":"Occurs when a row's Delete button is clicked, but before the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control deletes the row."},{"pos":[260404,261522],"content":"The RowDeleting event is raised when a row's Delete button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control deletes the row. This enables you to provide an event-handling method that performs a custom routine, such as canceling the delete operation, whenever this event occurs.       A <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the delete operation should be canceled. To cancel the delete operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> object to `true`. You can also manipulate the <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Keys%2A> and <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Values%2A> collections, if necessary, before the values are passed to the data source.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RowDeleting event is raised when a row's Delete button is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control deletes the row.","pos":[0,152],"source":"The RowDeleting event is raised when a row's Delete button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control deletes the row."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as canceling the delete operation, whenever this event occurs.","pos":[153,305]},{"content":"A &lt;xref:System.Web.UI.WebControls.GridViewDeleteEventArgs&gt; object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the delete operation should be canceled.","pos":[312,539],"source":"       A <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the delete operation should be canceled."},{"content":"To cancel the delete operation, set the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.GridViewDeleteEventArgs&gt; object to <ph id=\"ph1\">`true`</ph>.","pos":[540,725],"source":" To cancel the delete operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> object to `true`."},{"content":"You can also manipulate the &lt;xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Keys%2A&gt; and &lt;xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Values%2A&gt; collections, if necessary, before the values are passed to the data source.","pos":[726,965],"source":" You can also manipulate the <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Keys%2A> and <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Values%2A> collections, if necessary, before the values are passed to the data source."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[972,1114],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[263749,263761],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[264143,264283],"content":"Occurs when a row's Edit button is clicked, but before the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control enters edit mode.","needQuote":true,"needEscape":true,"source":"Occurs when a row's Edit button is clicked, but before the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control enters edit mode."},{"pos":[264296,265162],"content":"The RowEditing event is raised when a row's Edit button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control enters edit mode. This enables you to provide an event-handling method that performs a custom routine, such as canceling the edit operation, whenever this event occurs.       A <xref:System.Web.UI.WebControls.GridViewEditEventArgs> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the edit operation should be canceled. To cancel the edit operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewEditEventArgs> object to `true`.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RowEditing event is raised when a row's Edit button is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control enters edit mode.","pos":[0,150],"source":"The RowEditing event is raised when a row's Edit button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control enters edit mode."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as canceling the edit operation, whenever this event occurs.","pos":[151,301]},{"content":"A &lt;xref:System.Web.UI.WebControls.GridViewEditEventArgs&gt; object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the edit operation should be canceled.","pos":[308,531],"source":"       A <xref:System.Web.UI.WebControls.GridViewEditEventArgs> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the edit operation should be canceled."},{"content":"To cancel the edit operation, set the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.GridViewEditEventArgs&gt; object to <ph id=\"ph1\">`true`</ph>.","pos":[532,713],"source":" To cancel the edit operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewEditEventArgs> object to `true`."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[720,862],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[266106,266118],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[266528,266768],"content":"Gets or sets the name of the column to use as the column header for the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control. This property is provided to make the control more accessible to users of assistive technology devices.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the column to use as the column header for the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","pos":[0,136],"source":"Gets or sets the name of the column to use as the column header for the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"content":"This property is provided to make the control more accessible to users of assistive technology devices.","pos":[137,240]}]},{"pos":[266781,268067],"content":"In HTML, the header of a table can be associated with either a row or a column. The direction is specified by setting the `scope` attribute of the `<th>` elements. The <xref:System.Web.UI.WebControls.GridView> control has a built-in header row that can be displayed by setting the <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A> property to `true`. You can also optionally specify a header column (usually the first or last column in the <xref:System.Web.UI.WebControls.GridView> control) by setting this property. When this property is set, all cells in the column that corresponds to the specified field name are rendered as `<th scope=\"row\">` elements.      > [!NOTE] >  Although the specified column is treated like a header, the <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>, <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>, and <xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A> properties do not apply to the header column.       The default rendering of the `<th>` element is preserved, rendering text as bold and centered horizontally. Developers can override the behavior of the `<th>` element using a cascading style sheet.      > [!NOTE] >  This property works only with bound fields. It does not work with template fields.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"In HTML, the header of a table can be associated with either a row or a column.","pos":[0,79]},{"content":"The direction is specified by setting the <ph id=\"ph1\">`scope`</ph> attribute of the <ph id=\"ph2\">`&lt;th&gt;`</ph> elements.","pos":[80,163],"source":" The direction is specified by setting the `scope` attribute of the `<th>` elements."},{"content":"The &lt;xref:System.Web.UI.WebControls.GridView&gt; control has a built-in header row that can be displayed by setting the &lt;xref:System.Web.UI.WebControls.GridView.ShowHeader%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[164,356],"source":" The <xref:System.Web.UI.WebControls.GridView> control has a built-in header row that can be displayed by setting the <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A> property to `true`."},{"content":"You can also optionally specify a header column (usually the first or last column in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control) by setting this property.","pos":[357,522],"source":" You can also optionally specify a header column (usually the first or last column in the <xref:System.Web.UI.WebControls.GridView> control) by setting this property."},{"content":"When this property is set, all cells in the column that corresponds to the specified field name are rendered as <ph id=\"ph1\">`&lt;th scope=\"row\"&gt;`</ph> elements.","pos":[523,663],"source":" When this property is set, all cells in the column that corresponds to the specified field name are rendered as `<th scope=\"row\">` elements."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Although the specified column is treated like a header, the &lt;xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A&gt;, &lt;xref:System.Web.UI.WebControls.GridView.ShowHeader%2A&gt;, and &lt;xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A&gt; properties do not apply to the header column.","pos":[669,971],"source":"      > [!NOTE] >  Although the specified column is treated like a header, the <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>, <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>, and <xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A> properties do not apply to the header column."},{"content":"The default rendering of the <ph id=\"ph1\">`&lt;th&gt;`</ph> element is preserved, rendering text as bold and centered horizontally.","pos":[978,1085],"source":"       The default rendering of the `<th>` element is preserved, rendering text as bold and centered horizontally."},{"content":"Developers can override the behavior of the <ph id=\"ph1\">`&lt;th&gt;`</ph> element using a cascading style sheet.","pos":[1086,1175],"source":" Developers can override the behavior of the `<th>` element using a cascading style sheet."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This property works only with bound fields.","pos":[1181,1237],"source":"      > [!NOTE] >  This property works only with bound fields."},{"content":"It does not work with template fields.","pos":[1238,1276]}]},{"pos":[268591,268726],"content":"The name of the column to use as the column header. The default is an empty string (\"\"), which indicates that this property is not set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the column to use as the column header. The default is an empty string (\"\"), which indicates that this property is not set.","pos":[0,135],"nodes":[{"content":"The name of the column to use as the column header.","pos":[0,51]},{"content":"The default is an empty string (\"\"), which indicates that this property is not set.","pos":[52,135]}]}]},{"pos":[269145,269331],"content":"Gets a collection of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that represent the data rows in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets a collection of <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> objects that represent the data rows in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[269344,270151],"content":"The Rows property (collection) is used to store the data rows in a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> control automatically populates the Rows collection by creating a <xref:System.Web.UI.WebControls.GridViewRow> object for each record in the data source and then adding each object to the collection. This property is commonly used to access a specific row in the control or to iterate though the entire collection of rows.      > [!NOTE] >  Only rows with their <xref:System.Web.UI.WebControls.GridViewRow.RowType%2A> property set to `DataControlRowType.DataRow` are stored in the Rows collection. The <xref:System.Web.UI.WebControls.GridViewRow> objects that represent the header, footer, and pager rows are not included in the collection.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Rows property (collection) is used to store the data rows in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,117],"source":"The Rows property (collection) is used to store the data rows in a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The &lt;xref:System.Web.UI.WebControls.GridView&gt; control automatically populates the Rows collection by creating a &lt;xref:System.Web.UI.WebControls.GridViewRow&gt; object for each record in the data source and then adding each object to the collection.","pos":[118,363],"source":" The <xref:System.Web.UI.WebControls.GridView> control automatically populates the Rows collection by creating a <xref:System.Web.UI.WebControls.GridViewRow> object for each record in the data source and then adding each object to the collection."},{"content":"This property is commonly used to access a specific row in the control or to iterate though the entire collection of rows.","pos":[364,486]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Only rows with their &lt;xref:System.Web.UI.WebControls.GridViewRow.RowType%2A&gt; property set to <ph id=\"ph2\">`DataControlRowType.DataRow`</ph> are stored in the Rows collection.","pos":[492,661],"source":"      > [!NOTE] >  Only rows with their <xref:System.Web.UI.WebControls.GridViewRow.RowType%2A> property set to `DataControlRowType.DataRow` are stored in the Rows collection."},{"content":"The &lt;xref:System.Web.UI.WebControls.GridViewRow&gt; objects that represent the header, footer, and pager rows are not included in the collection.","pos":[662,804],"source":" The <xref:System.Web.UI.WebControls.GridViewRow> objects that represent the header, footer, and pager rows are not included in the collection."}]},{"pos":[270798,270970],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewRowCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains all the data rows in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewRowCollection\"></xref> that contains all the data rows in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[271398,271616],"content":"Gets a reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableItemStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that enables you to set the appearance of the data rows in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets a reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> object that enables you to set the appearance of the data rows in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[271629,272851],"content":"Use the RowStyle property to control the appearance of the data rows in a <xref:System.Web.UI.WebControls.GridView> control. When the <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> property is also set, the data rows are displayed alternating between the RowStyle settings and the <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> settings. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns. The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `RowStyle-ForeColor`).      -   Nest a `<RowStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control.       The properties can also be set programmatically in the form `Property.Subproperty` (for example, `RowStyle.ForeColor`). Common settings usually include a custom background color, foreground color, and font properties.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the RowStyle property to control the appearance of the data rows in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,124],"source":"Use the RowStyle property to control the appearance of the data rows in a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"When the &lt;xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A&gt; property is also set, the data rows are displayed alternating between the RowStyle settings and the &lt;xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A&gt; settings.","pos":[125,373],"source":" When the <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> property is also set, the data rows are displayed alternating between the RowStyle settings and the <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> settings."},{"content":"This property is read-only; however, you can set the properties of the &lt;xref:System.Web.UI.WebControls.TableItemStyle&gt; object it returns.","pos":[374,511],"source":" This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns."},{"content":"The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control in the form <ph id=\"ph1\">`Property-Subproperty`</ph>, where <ph id=\"ph2\">`Subproperty`</ph> is a property of the &lt;xref:System.Web.UI.WebControls.TableItemStyle&gt; object (for example, <ph id=\"ph3\">`RowStyle-ForeColor`</ph>).","pos":[512,860],"source":" The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `RowStyle-ForeColor`)."},{"content":"-   Nest a <ph id=\"ph1\">`&lt;RowStyle&gt;`</ph> element between the opening and closing tags of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[866,992],"source":"      -   Nest a `<RowStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The properties can also be set programmatically in the form <ph id=\"ph1\">`Property.Subproperty`</ph> (for example, <ph id=\"ph2\">`RowStyle.ForeColor`</ph>).","pos":[999,1118],"source":"       The properties can also be set programmatically in the form `Property.Subproperty` (for example, `RowStyle.ForeColor`)."},{"content":"Common settings usually include a custom background color, foreground color, and font properties.","pos":[1119,1216]}]},{"pos":[273420,273613],"content":"A reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableItemStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the style of the data rows in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"A reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> that represents the style of the data rows in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[274052,274192],"content":"Occurs when a row's Update button is clicked, but after the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control updates the row.","needQuote":true,"needEscape":true,"source":"Occurs when a row's Update button is clicked, but after the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control updates the row."},{"pos":[274205,275152],"content":"The RowUpdated event is raised when a row's Update button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control updates the row. This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the update operation, whenever this event occurs.       A <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> object is passed to the event-handling method, which enables you to determine the number of rows affected and any exceptions that might have occurred. You can also indicate whether the exception was handled in the event-handling method by setting the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property of the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> object.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RowUpdated event is raised when a row's Update button is clicked, but after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control updates the row.","pos":[0,150],"source":"The RowUpdated event is raised when a row's Update button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control updates the row."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the update operation, whenever this event occurs.","pos":[151,317]},{"content":"A &lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs&gt; object is passed to the event-handling method, which enables you to determine the number of rows affected and any exceptions that might have occurred.","pos":[324,534],"source":"       A <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> object is passed to the event-handling method, which enables you to determine the number of rows affected and any exceptions that might have occurred."},{"content":"You can also indicate whether the exception was handled in the event-handling method by setting the &lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs&gt; object.","pos":[535,794],"source":" You can also indicate whether the exception was handled in the event-handling method by setting the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property of the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> object."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[801,943],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[275767,275779],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[276166,276307],"content":"Occurs when a row's Update button is clicked, but before the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control updates the row.","needQuote":true,"needEscape":true,"source":"Occurs when a row's Update button is clicked, but before the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control updates the row."},{"pos":[276320,278141],"content":"The RowUpdating event is raised when a row's Update button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control updates the row. This enables you to provide an event-handling method that performs a custom routine, such as canceling the update operation, whenever this event occurs.       A <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the update operation should be canceled. To cancel the update operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> object to `true`. You can also manipulate the <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>, <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A>, and <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A> collections, if necessary, before the values are passed to the data source. A common way to use these collections is to HTML-encode the values supplied by the user before they are stored in the data source. This helps to prevent script injection attacks.      > [!NOTE] >  The <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>, <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A> and <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A> collections are automatically populated only when the <xref:System.Web.UI.WebControls.GridView> control is bound to data by using the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> property.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RowUpdating event is raised when a row's Update button is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control updates the row.","pos":[0,152],"source":"The RowUpdating event is raised when a row's Update button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control updates the row."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as canceling the update operation, whenever this event occurs.","pos":[153,305]},{"content":"A &lt;xref:System.Web.UI.WebControls.GridViewUpdateEventArgs&gt; object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the update operation should be canceled.","pos":[312,539],"source":"       A <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the update operation should be canceled."},{"content":"To cancel the update operation, set the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.GridViewUpdateEventArgs&gt; object to <ph id=\"ph1\">`true`</ph>.","pos":[540,725],"source":" To cancel the update operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> object to `true`."},{"content":"You can also manipulate the &lt;xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A&gt;, &lt;xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A&gt;, and &lt;xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A&gt; collections, if necessary, before the values are passed to the data source.","pos":[726,1040],"source":" You can also manipulate the <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>, <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A>, and <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A> collections, if necessary, before the values are passed to the data source."},{"content":"A common way to use these collections is to HTML-encode the values supplied by the user before they are stored in the data source.","pos":[1041,1171]},{"content":"This helps to prevent script injection attacks.","pos":[1172,1219]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A&gt;, &lt;xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A&gt; and &lt;xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A&gt; collections are automatically populated only when the &lt;xref:System.Web.UI.WebControls.GridView&gt; control is bound to data by using the &lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A&gt; property.","pos":[1225,1665],"source":"      > [!NOTE] >  The <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>, <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A> and <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A> collections are automatically populated only when the <xref:System.Web.UI.WebControls.GridView> control is bound to data by using the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> property."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[1672,1814],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[278722,278734],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[279153,279460],"content":"Saves the state of the properties in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control that need to be persisted, even when the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property is set to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Saves the state of the properties in the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control that need to be persisted, even when the &lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt; property is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[279473,279865],"content":"This method is used to save the state of the properties in the <xref:System.Web.UI.WebControls.GridView> control that need to be persisted, even when the <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> property is set to `false`.      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is used to save the state of the properties in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control that need to be persisted, even when the &lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt; property is set to <ph id=\"ph1\">`false`</ph>.","pos":[0,254],"source":"This method is used to save the state of the properties in the <xref:System.Web.UI.WebControls.GridView> control that need to be persisted, even when the <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> property is set to `false`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers to extend the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[260,389],"source":"      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control."}]},{"pos":[280013,280198],"content":"Returns the server control's current view state. If there is no view state associated with the control, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the server control's current view state.","pos":[0,48]},{"content":"If there is no view state associated with the control, this method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[49,185],"source":" If there is no view state associated with the control, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[280667,280776],"content":"Loads the previously saved view state of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Loads the previously saved view state of the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[280920,281032],"content":"A &lt;xref:System.Object?displayProperty=fullName&gt; that contains the saved view state values for the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Object?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> that contains the saved view state values for the control.","pos":[0,112],"source":"A &lt;xref:System.Object?displayProperty=fullName&gt; that contains the saved view state values for the control."}]},{"pos":[281504,281698],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.DataKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the data key value for the selected row in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Web.UI.WebControls.DataKey\"></xref> object that contains the data key value for the selected row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[281711,283373],"content":"When the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property is set, the <xref:System.Web.UI.WebControls.GridView> control automatically creates a <xref:System.Web.UI.WebControls.DataKey> object for each row in the control using the value or values of the specified field or fields. The <xref:System.Web.UI.WebControls.DataKey> objects are then added to the control's <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> collection. Normally, the <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> property is used to retrieve the <xref:System.Web.UI.WebControls.DataKey> object for a specific data row in the <xref:System.Web.UI.WebControls.GridView> control. However, if you just need to retrieve the <xref:System.Web.UI.WebControls.DataKey> object of the currently selected row, you can simply use the SelectedDataKey property as a shortcut.      > [!NOTE] >  This is the same as retrieving the <xref:System.Web.UI.WebControls.DataKey> object at the index specified by the <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> property from the <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> collection. You can also use the <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> property to retrieve the data key value for the currently selected row directly.       If you are creating a <xref:System.Web.UI.WebControls.ControlParameter> object and want to access a key field other than the first field, use the indexed SelectedDataKey property in the <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> property of the <xref:System.Web.UI.WebControls.ControlParameter> object. An example is shown below.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the &lt;xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A&gt; property is set, the &lt;xref:System.Web.UI.WebControls.GridView&gt; control automatically creates a &lt;xref:System.Web.UI.WebControls.DataKey&gt; object for each row in the control using the value or values of the specified field or fields.","pos":[0,297],"source":"When the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property is set, the <xref:System.Web.UI.WebControls.GridView> control automatically creates a <xref:System.Web.UI.WebControls.DataKey> object for each row in the control using the value or values of the specified field or fields."},{"content":"The &lt;xref:System.Web.UI.WebControls.DataKey&gt; objects are then added to the control's &lt;xref:System.Web.UI.WebControls.GridView.DataKeys%2A&gt; collection.","pos":[298,448],"source":" The <xref:System.Web.UI.WebControls.DataKey> objects are then added to the control's <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> collection."},{"content":"Normally, the &lt;xref:System.Web.UI.WebControls.GridView.DataKeys%2A&gt; property is used to retrieve the &lt;xref:System.Web.UI.WebControls.DataKey&gt; object for a specific data row in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[449,679],"source":" Normally, the <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> property is used to retrieve the <xref:System.Web.UI.WebControls.DataKey> object for a specific data row in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"However, if you just need to retrieve the &lt;xref:System.Web.UI.WebControls.DataKey&gt; object of the currently selected row, you can simply use the SelectedDataKey property as a shortcut.","pos":[680,863],"source":" However, if you just need to retrieve the <xref:System.Web.UI.WebControls.DataKey> object of the currently selected row, you can simply use the SelectedDataKey property as a shortcut."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This is the same as retrieving the &lt;xref:System.Web.UI.WebControls.DataKey&gt; object at the index specified by the &lt;xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A&gt; property from the &lt;xref:System.Web.UI.WebControls.GridView.DataKeys%2A&gt; collection.","pos":[869,1137],"source":"      > [!NOTE] >  This is the same as retrieving the <xref:System.Web.UI.WebControls.DataKey> object at the index specified by the <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> property from the <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> collection."},{"content":"You can also use the &lt;xref:System.Web.UI.WebControls.GridView.SelectedValue%2A&gt; property to retrieve the data key value for the currently selected row directly.","pos":[1138,1298],"source":" You can also use the <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> property to retrieve the data key value for the currently selected row directly."},{"content":"If you are creating a &lt;xref:System.Web.UI.WebControls.ControlParameter&gt; object and want to access a key field other than the first field, use the indexed SelectedDataKey property in the &lt;xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ControlParameter&gt; object.","pos":[1305,1630],"source":"       If you are creating a <xref:System.Web.UI.WebControls.ControlParameter> object and want to access a key field other than the first field, use the indexed SelectedDataKey property in the <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> property of the <xref:System.Web.UI.WebControls.ControlParameter> object."},{"content":"An example is shown below.","pos":[1631,1657]}]},{"pos":[285075,285352],"content":"The <xref href=\"System.Web.UI.WebControls.DataKey\"></xref> for the selected row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which indicates that no row is currently selected.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.DataKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the selected row in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","pos":[0,149],"source":"The <xref href=\"System.Web.UI.WebControls.DataKey\"></xref> for the selected row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which indicates that no row is currently selected.","pos":[150,277],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which indicates that no row is currently selected."}]},{"pos":[285541,285640],"content":"No data keys are specified in the <xref:System.Web.UI.WebControls.GridView.DataKeyNames*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"No data keys are specified in the &lt;xref:System.Web.UI.WebControls.GridView.DataKeyNames*&gt; property.","pos":[0,99],"source":"No data keys are specified in the <xref:System.Web.UI.WebControls.GridView.DataKeyNames*> property."}]},{"pos":[286023,286135],"content":"Gets or sets the index of the selected row in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the index of the selected row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[286147,286685],"content":"Use the SelectedIndex property to determine the index of the currently selected row in a <xref:System.Web.UI.WebControls.GridView> control. You can also use this property to programmatically select a row in the control. To clear the selection of a row, set this property to -1. The appearance of the currently selected row can be customized by using the <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> property. To access the currently selected row, use the <xref:System.Web.UI.WebControls.GridView.SelectedRow%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the SelectedIndex property to determine the index of the currently selected row in a <xref:System.Web.UI.WebControls.GridView> control. You can also use this property to programmatically select a row in the control. To clear the selection of a row, set this property to -1. The appearance of the currently selected row can be customized by using the <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> property. To access the currently selected row, use the <xref:System.Web.UI.WebControls.GridView.SelectedRow%2A> property.","pos":[0,538],"nodes":[{"content":"Use the SelectedIndex property to determine the index of the currently selected row in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,139],"source":"Use the SelectedIndex property to determine the index of the currently selected row in a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"You can also use this property to programmatically select a row in the control.","pos":[140,219]},{"content":"To clear the selection of a row, set this property to -1.","pos":[220,277]},{"content":"The appearance of the currently selected row can be customized by using the &lt;xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A&gt; property.","pos":[278,425],"source":" The appearance of the currently selected row can be customized by using the <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> property."},{"content":"To access the currently selected row, use the &lt;xref:System.Web.UI.WebControls.GridView.SelectedRow%2A&gt; property.","pos":[426,538],"source":" To access the currently selected row, use the <xref:System.Web.UI.WebControls.GridView.SelectedRow%2A> property."}]}]},{"pos":[287220,287400],"content":"The zero-based index of the selected row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control. The default is -1, which indicates that no row is currently selected.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the selected row in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","pos":[0,110],"source":"The zero-based index of the selected row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"content":"The default is -1, which indicates that no row is currently selected.","pos":[111,180]}]},{"pos":[287591,287649],"content":"The SelectedIndex property is set to a value less than -1.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SelectedIndex property is set to a value less than -1.","pos":[0,58]}]},{"pos":[288064,288217],"content":"Occurs when a row's Select button is clicked, but after the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control handles the select operation.","needQuote":true,"needEscape":true,"source":"Occurs when a row's Select button is clicked, but after the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control handles the select operation."},{"pos":[288230,288732],"content":"The SelectedIndexChanged event is raised when a row's Select button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the select operation. This enables you to provide an event-handling method that performs a custom routine, such as updating a status label with the currently selected row, whenever this event occurs.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The SelectedIndexChanged event is raised when a row's Select button is clicked, but after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control handles the select operation.","pos":[0,173],"source":"The SelectedIndexChanged event is raised when a row's Select button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the select operation."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as updating a status label with the currently selected row, whenever this event occurs.","pos":[174,351]},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[358,500],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[289273,289285],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[289722,289876],"content":"Occurs when a row's Select button is clicked, but before the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control handles the select operation.","needQuote":true,"needEscape":true,"source":"Occurs when a row's Select button is clicked, but before the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control handles the select operation."},{"pos":[289889,290961],"content":"The SelectedIndexChanging event is raised when a row's Select button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the select operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the selection operation, whenever this event occurs.      > [!NOTE] >  This event is not raised when you programmatically set the <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> property.       A <xref:System.Web.UI.WebControls.GridViewSelectEventArgs> object is passed to the event-handling method, which enables you to determine the index of the row selected by the user and to indicate that the selection operation should be canceled. To cancel the selection operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewSelectEventArgs> object to `true`.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The SelectedIndexChanging event is raised when a row's Select button is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control handles the select operation.","pos":[0,175],"source":"The SelectedIndexChanging event is raised when a row's Select button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the select operation."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as canceling the selection operation, whenever this event occurs.","pos":[176,331]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This event is not raised when you programmatically set the &lt;xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A&gt; property.","pos":[337,477],"source":"      > [!NOTE] >  This event is not raised when you programmatically set the <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> property."},{"content":"A &lt;xref:System.Web.UI.WebControls.GridViewSelectEventArgs&gt; object is passed to the event-handling method, which enables you to determine the index of the row selected by the user and to indicate that the selection operation should be canceled.","pos":[484,727],"source":"       A <xref:System.Web.UI.WebControls.GridViewSelectEventArgs> object is passed to the event-handling method, which enables you to determine the index of the row selected by the user and to indicate that the selection operation should be canceled."},{"content":"To cancel the selection operation, set the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.GridViewSelectEventArgs&gt; object to <ph id=\"ph1\">`true`</ph>.","pos":[728,916],"source":" To cancel the selection operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewSelectEventArgs> object to `true`."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[923,1065],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[291491,291503],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[291958,292091],"content":"Gets or sets the data-key value for the persisted selected item in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the data-key value for the persisted selected item in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[292280,292523],"content":"The data key for the persisted selected item in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which indicates that no item is currently selected.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data key for the persisted selected item in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","pos":[0,114],"source":"The data key for the persisted selected item in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which indicates that no item is currently selected.","pos":[115,243],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which indicates that no item is currently selected."}]},{"pos":[292986,293122],"content":"Gets a reference to a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the selected row in the control.","needQuote":true,"needEscape":true,"source":"Gets a reference to a <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> object that represents the selected row in the control."},{"pos":[293135,293696],"content":"When a row is selected in a <xref:System.Web.UI.WebControls.GridView> control, use the SelectedRow property to retrieve the <xref:System.Web.UI.WebControls.GridViewRow> object that represents that row.      > [!NOTE] >  This is the same as retrieving the <xref:System.Web.UI.WebControls.GridViewRow> object at the index specified by the <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> property from the <xref:System.Web.UI.WebControls.GridView.Rows%2A> collection.       This object can then be used to access the properties of the selected row.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When a row is selected in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control, use the SelectedRow property to retrieve the &lt;xref:System.Web.UI.WebControls.GridViewRow&gt; object that represents that row.","pos":[0,201],"source":"When a row is selected in a <xref:System.Web.UI.WebControls.GridView> control, use the SelectedRow property to retrieve the <xref:System.Web.UI.WebControls.GridViewRow> object that represents that row."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This is the same as retrieving the &lt;xref:System.Web.UI.WebControls.GridViewRow&gt; object at the index specified by the &lt;xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A&gt; property from the &lt;xref:System.Web.UI.WebControls.GridView.Rows%2A&gt; collection.","pos":[207,475],"source":"      > [!NOTE] >  This is the same as retrieving the <xref:System.Web.UI.WebControls.GridViewRow> object at the index specified by the <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> property from the <xref:System.Web.UI.WebControls.GridView.Rows%2A> collection."},{"content":"This object can then be used to access the properties of the selected row.","pos":[482,556]}]},{"pos":[294336,294445],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the selected row in the control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> that represents the selected row in the control."},{"pos":[294920,295141],"content":"Gets a reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableItemStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that enables you to set the appearance of the selected row in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets a reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> object that enables you to set the appearance of the selected row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[295154,296162],"content":"Use the SelectedRowStyle property to control the appearance of the selected row in a <xref:System.Web.UI.WebControls.GridView> control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns. The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `SelectedRowStyle-ForeColor`).      -   Nest a `<SelectedRowStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control.       The properties can also be set programmatically in the form `Property.Subproperty` (for example, `SelectedRowStyle.ForeColor`). Common settings usually include a custom background color, foreground color, and font properties.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the SelectedRowStyle property to control the appearance of the selected row in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,135],"source":"Use the SelectedRowStyle property to control the appearance of the selected row in a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"This property is read-only; however, you can set the properties of the &lt;xref:System.Web.UI.WebControls.TableItemStyle&gt; object it returns.","pos":[136,273],"source":" This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns."},{"content":"The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control in the form <ph id=\"ph1\">`Property-Subproperty`</ph>, where <ph id=\"ph2\">`Subproperty`</ph> is a property of the &lt;xref:System.Web.UI.WebControls.TableItemStyle&gt; object (for example, <ph id=\"ph3\">`SelectedRowStyle-ForeColor`</ph>).","pos":[274,630],"source":" The properties can be set declaratively using one of the following methods:      -   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `SelectedRowStyle-ForeColor`)."},{"content":"-   Nest a <ph id=\"ph1\">`&lt;SelectedRowStyle&gt;`</ph> element between the opening and closing tags of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[636,770],"source":"      -   Nest a `<SelectedRowStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The properties can also be set programmatically in the form <ph id=\"ph1\">`Property.Subproperty`</ph> (for example, <ph id=\"ph2\">`SelectedRowStyle.ForeColor`</ph>).","pos":[777,904],"source":"       The properties can also be set programmatically in the form `Property.Subproperty` (for example, `SelectedRowStyle.ForeColor`)."},{"content":"Common settings usually include a custom background color, foreground color, and font properties.","pos":[905,1002]}]},{"pos":[296737,296933],"content":"A reference to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TableItemStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the style of the selected row in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"A reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> that represents the style of the selected row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[297398,297511],"content":"Gets the data key value of the selected row in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets the data key value of the selected row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[297524,298981],"content":"When the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property is set with a comma-separated list of field names that represent the primary key of the data source, the <xref:System.Web.UI.WebControls.GridView> control automatically creates a <xref:System.Web.UI.WebControls.DataKey> object for each row in the control using the value or values of the specified field or fields. The <xref:System.Web.UI.WebControls.DataKey> objects are then added to the control's <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> collection. Normally, the <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> property is used to retrieve the <xref:System.Web.UI.WebControls.DataKey> object for a specific data row in the <xref:System.Web.UI.WebControls.GridView> control. However, if you just need to retrieve the <xref:System.Web.UI.WebControls.DataKey> object of the currently selected row, you can simply use the <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> property as a shortcut. As a further shortcut, you can directly determine the data key value of the first key field of the selected row by using the SelectedValue property.       If you are creating a <xref:System.Web.UI.WebControls.ControlParameter> object and want to access a key field other than the first field, use the <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> property. For an example, see <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property is set with a comma-separated list of field names that represent the primary key of the data source, the <xref:System.Web.UI.WebControls.GridView> control automatically creates a <xref:System.Web.UI.WebControls.DataKey> object for each row in the control using the value or values of the specified field or fields. The <xref:System.Web.UI.WebControls.DataKey> objects are then added to the control's <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> collection. Normally, the <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> property is used to retrieve the <xref:System.Web.UI.WebControls.DataKey> object for a specific data row in the <xref:System.Web.UI.WebControls.GridView> control. However, if you just need to retrieve the <xref:System.Web.UI.WebControls.DataKey> object of the currently selected row, you can simply use the <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> property as a shortcut. As a further shortcut, you can directly determine the data key value of the first key field of the selected row by using the SelectedValue property.       If you are creating a <xref:System.Web.UI.WebControls.ControlParameter> object and want to access a key field other than the first field, use the <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> property. For an example, see <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>.","pos":[0,1455],"nodes":[{"content":"When the &lt;xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A&gt; property is set with a comma-separated list of field names that represent the primary key of the data source, the &lt;xref:System.Web.UI.WebControls.GridView&gt; control automatically creates a &lt;xref:System.Web.UI.WebControls.DataKey&gt; object for each row in the control using the value or values of the specified field or fields.","pos":[0,390],"source":"When the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property is set with a comma-separated list of field names that represent the primary key of the data source, the <xref:System.Web.UI.WebControls.GridView> control automatically creates a <xref:System.Web.UI.WebControls.DataKey> object for each row in the control using the value or values of the specified field or fields."},{"content":"The &lt;xref:System.Web.UI.WebControls.DataKey&gt; objects are then added to the control's &lt;xref:System.Web.UI.WebControls.GridView.DataKeys%2A&gt; collection.","pos":[391,541],"source":" The <xref:System.Web.UI.WebControls.DataKey> objects are then added to the control's <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> collection."},{"content":"Normally, the &lt;xref:System.Web.UI.WebControls.GridView.DataKeys%2A&gt; property is used to retrieve the &lt;xref:System.Web.UI.WebControls.DataKey&gt; object for a specific data row in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[542,772],"source":" Normally, the <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> property is used to retrieve the <xref:System.Web.UI.WebControls.DataKey> object for a specific data row in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"However, if you just need to retrieve the &lt;xref:System.Web.UI.WebControls.DataKey&gt; object of the currently selected row, you can simply use the &lt;xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A&gt; property as a shortcut.","pos":[773,1001],"source":" However, if you just need to retrieve the <xref:System.Web.UI.WebControls.DataKey> object of the currently selected row, you can simply use the <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> property as a shortcut."},{"content":"As a further shortcut, you can directly determine the data key value of the first key field of the selected row by using the SelectedValue property.","pos":[1002,1150]},{"content":"If you are creating a &lt;xref:System.Web.UI.WebControls.ControlParameter&gt; object and want to access a key field other than the first field, use the &lt;xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A&gt; property.","pos":[1157,1373],"source":"       If you are creating a <xref:System.Web.UI.WebControls.ControlParameter> object and want to access a key field other than the first field, use the <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> property."},{"content":"For an example, see &lt;xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A&gt;.","pos":[1374,1455],"source":" For an example, see <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>."}]}]},{"pos":[299509,299617],"content":"The data key value of the selected row in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"The data key value of the selected row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[300106,300199],"content":"Selects the row to edit in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Selects the row to edit in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[300211,300303],"content":"This method raises the <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> event.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method raises the &lt;xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged&gt; event.","pos":[0,92],"source":"This method raises the <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> event."}]},{"pos":[300444,300473],"content":"The index of the row to edit.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the row to edit.","pos":[0,29]}]},{"pos":[300963,301089],"content":"Puts a row in edit mode in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control by using the specified row index.","needQuote":true,"needEscape":true,"source":"Puts a row in edit mode in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control by using the specified row index."},{"pos":[301101,301183],"content":"This method raises the <xref:System.Web.UI.WebControls.GridView.RowEditing> event.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method raises the &lt;xref:System.Web.UI.WebControls.GridView.RowEditing&gt; event.","pos":[0,82],"source":"This method raises the <xref:System.Web.UI.WebControls.GridView.RowEditing> event."}]},{"pos":[301325,301354],"content":"The index of the row to edit.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the row to edit.","pos":[0,29]}]},{"pos":[301855,301969],"content":"Sets the page index of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control by using the row index.","needQuote":true,"needEscape":true,"source":"Sets the page index of the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control by using the row index."},{"pos":[301981,302069],"content":"This method raises the <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> event.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method raises the &lt;xref:System.Web.UI.WebControls.GridView.PageIndexChanged&gt; event.","pos":[0,88],"source":"This method raises the <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> event."}]},{"pos":[302213,302254],"content":"The index of the row on the page to edit.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the row on the page to edit.","pos":[0,41]}]},{"pos":[302700,302837],"content":"Gets or sets a value indicating whether the footer row is displayed in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether the footer row is displayed in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[302849,303092],"content":"Use the ShowFooter property to specify whether a <xref:System.Web.UI.WebControls.GridView> control displays the footer row. To control the appearance of the footer row, use the <xref:System.Web.UI.WebControls.GridView.FooterStyle%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the ShowFooter property to specify whether a <xref:System.Web.UI.WebControls.GridView> control displays the footer row. To control the appearance of the footer row, use the <xref:System.Web.UI.WebControls.GridView.FooterStyle%2A> property.","pos":[0,243],"nodes":[{"content":"Use the ShowFooter property to specify whether a &lt;xref:System.Web.UI.WebControls.GridView&gt; control displays the footer row.","pos":[0,123],"source":"Use the ShowFooter property to specify whether a <xref:System.Web.UI.WebControls.GridView> control displays the footer row."},{"content":"To control the appearance of the footer row, use the &lt;xref:System.Web.UI.WebControls.GridView.FooterStyle%2A&gt; property.","pos":[124,243],"source":" To control the appearance of the footer row, use the <xref:System.Web.UI.WebControls.GridView.FooterStyle%2A> property."}]}]},{"pos":[303595,303836],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to display the footer row; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to display the footer row; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,162],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to display the footer row; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[163,241],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[304280,304417],"content":"Gets or sets a value indicating whether the header row is displayed in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether the header row is displayed in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[304429,304672],"content":"Use the ShowHeader property to specify whether a <xref:System.Web.UI.WebControls.GridView> control displays the header row. To control the appearance of the header row, use the <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the ShowHeader property to specify whether a <xref:System.Web.UI.WebControls.GridView> control displays the header row. To control the appearance of the header row, use the <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A> property.","pos":[0,243],"nodes":[{"content":"Use the ShowHeader property to specify whether a &lt;xref:System.Web.UI.WebControls.GridView&gt; control displays the header row.","pos":[0,123],"source":"Use the ShowHeader property to specify whether a <xref:System.Web.UI.WebControls.GridView> control displays the header row."},{"content":"To control the appearance of the header row, use the &lt;xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A&gt; property.","pos":[124,243],"source":" To control the appearance of the header row, use the <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A> property."}]}]},{"pos":[305173,305412],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to display the header row; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to display the header row; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,162],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to display the header row; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[163,239],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[305901,306079],"content":"Gets or sets a value that indicates whether the heading of a column in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control is visible when the column has no data.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether the heading of a column in the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is visible when the column has no data."},{"pos":[306215,306376],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the header is visible; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the header is visible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[306973,307100],"content":"Sorts the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control based on the specified sort expression and direction.","needQuote":true,"needEscape":true,"source":"Sorts the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control based on the specified sort expression and direction."},{"pos":[307112,308020],"content":"Use the Sort method to programmatically sort the <xref:System.Web.UI.WebControls.GridView> control using the specified sort expression and direction. The sort expression specifies the column or columns with which to sort. To sort multiple columns, create a sort expression that contains a comma-separated list of field names. The sort direction indicates whether sorting is performed in ascending or descending order. This method is commonly used when you need to sort the <xref:System.Web.UI.WebControls.GridView> control from outside of the control, such as from a different control on the page. This method is also commonly used to programmatically set a default sort order for the <xref:System.Web.UI.WebControls.GridView> control when it is first rendered. Calling this method also raises the <xref:System.Web.UI.WebControls.GridView.Sorted> and <xref:System.Web.UI.WebControls.GridView.Sorting> events.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the Sort method to programmatically sort the <xref:System.Web.UI.WebControls.GridView> control using the specified sort expression and direction. The sort expression specifies the column or columns with which to sort. To sort multiple columns, create a sort expression that contains a comma-separated list of field names. The sort direction indicates whether sorting is performed in ascending or descending order. This method is commonly used when you need to sort the <xref:System.Web.UI.WebControls.GridView> control from outside of the control, such as from a different control on the page. This method is also commonly used to programmatically set a default sort order for the <xref:System.Web.UI.WebControls.GridView> control when it is first rendered. Calling this method also raises the <xref:System.Web.UI.WebControls.GridView.Sorted> and <xref:System.Web.UI.WebControls.GridView.Sorting> events.","pos":[0,908],"nodes":[{"content":"Use the Sort method to programmatically sort the &lt;xref:System.Web.UI.WebControls.GridView&gt; control using the specified sort expression and direction.","pos":[0,149],"source":"Use the Sort method to programmatically sort the <xref:System.Web.UI.WebControls.GridView> control using the specified sort expression and direction."},{"content":"The sort expression specifies the column or columns with which to sort.","pos":[150,221]},{"content":"To sort multiple columns, create a sort expression that contains a comma-separated list of field names.","pos":[222,325]},{"content":"The sort direction indicates whether sorting is performed in ascending or descending order.","pos":[326,417]},{"content":"This method is commonly used when you need to sort the &lt;xref:System.Web.UI.WebControls.GridView&gt; control from outside of the control, such as from a different control on the page.","pos":[418,597],"source":" This method is commonly used when you need to sort the <xref:System.Web.UI.WebControls.GridView> control from outside of the control, such as from a different control on the page."},{"content":"This method is also commonly used to programmatically set a default sort order for the &lt;xref:System.Web.UI.WebControls.GridView&gt; control when it is first rendered.","pos":[598,761],"source":" This method is also commonly used to programmatically set a default sort order for the <xref:System.Web.UI.WebControls.GridView> control when it is first rendered."},{"content":"Calling this method also raises the &lt;xref:System.Web.UI.WebControls.GridView.Sorted&gt; and &lt;xref:System.Web.UI.WebControls.GridView.Sorting&gt; events.","pos":[762,908],"source":" Calling this method also raises the <xref:System.Web.UI.WebControls.GridView.Sorted> and <xref:System.Web.UI.WebControls.GridView.Sorting> events."}]}]},{"pos":[308599,308706],"content":"The sort expression with which to sort the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"The sort expression with which to sort the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[308802,308881],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SortDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.WebControls.SortDirection\"></xref> values."},{"pos":[309043,309308],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control is bound to a data source control, but the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that is associated with the data source is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is bound to a data source control, but the <xref href=\"System.Web.UI.DataSourceView\"></xref> that is associated with the data source is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[309691,309742],"content":"Gets the sort direction of the column being sorted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the sort direction of the column being sorted.","pos":[0,51]}]},{"pos":[309755,310236],"content":"Use the SortDirection property to determine whether the column being sorted is sorted in ascending or descending order.      > [!NOTE] >  The <xref:System.Web.UI.WebControls.GridView> control has a built-in sorting feature that automatically sets this property. This property is typically used only when you need to programmatically determine the sort direction or when you are adding your own custom sorting functionality to a <xref:System.Web.UI.WebControls.GridView> control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the SortDirection property to determine whether the column being sorted is sorted in ascending or descending order.","pos":[0,119]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Web.UI.WebControls.GridView&gt; control has a built-in sorting feature that automatically sets this property.","pos":[125,261],"source":"      > [!NOTE] >  The <xref:System.Web.UI.WebControls.GridView> control has a built-in sorting feature that automatically sets this property."},{"content":"This property is typically used only when you need to programmatically determine the sort direction or when you are adding your own custom sorting functionality to a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[262,478],"source":" This property is typically used only when you need to programmatically determine the sort direction or when you are adding your own custom sorting functionality to a <xref:System.Web.UI.WebControls.GridView> control."}]},{"pos":[310820,311014],"content":"One of the <xref href=\"System.Web.UI.WebControls.SortDirection\"></xref> values. The default is <xref uid=\"langword_csharp_SortDirection.Ascending\" name=\"SortDirection.Ascending\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.SortDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,79],"source":"One of the <xref href=\"System.Web.UI.WebControls.SortDirection\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SortDirection.Ascending\" name=\"SortDirection.Ascending\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[80,194],"source":" The default is <xref uid=\"langword_csharp_SortDirection.Ascending\" name=\"SortDirection.Ascending\" href=\"\"></xref>."}]},{"pos":[311438,311598],"content":"Occurs when the hyperlink to sort a column is clicked, but after the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control handles the sort operation.","needQuote":true,"needEscape":true,"source":"Occurs when the hyperlink to sort a column is clicked, but after the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control handles the sort operation."},{"pos":[311611,312065],"content":"The Sorted event is raised when the hyperlink to sort a column is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the sort operation. This enables you to provide an event-handling method that performs a custom routine, such as custom sorting, whenever this event occurs.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Sorted event is raised when the hyperlink to sort a column is clicked, but after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control handles the sort operation.","pos":[0,166],"source":"The Sorted event is raised when the hyperlink to sort a column is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the sort operation."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as custom sorting, whenever this event occurs.","pos":[167,303]},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[310,452],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[312514,312526],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[312981,313122],"content":"Gets or sets the CSS style for a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> column when the column is sorted in ascending order.","needQuote":true,"needEscape":true,"source":"Gets or sets the CSS style for a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> column when the column is sorted in ascending order."},{"pos":[313134,313354],"content":"When this property is set to `true`, a style is applied to cells in the column when the data is sorted in ascending order. For example, the column can be highlighted with a specific color when the sort type is ascending.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, a style is applied to cells in the column when the data is sorted in ascending order.","pos":[0,122],"source":"When this property is set to `true`, a style is applied to cells in the column when the data is sorted in ascending order."},{"content":"For example, the column can be highlighted with a specific color when the sort type is ascending.","pos":[123,220]}]},{"pos":[313544,313818],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a style is applied to the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control when the column is sorted in ascending order; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a style is applied to the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control when the column is sorted in ascending order; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[314356,314513],"content":"Gets or sets the CSS style to apply to a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> column heading when the column is sorted in ascending order.","needQuote":true,"needEscape":true,"source":"Gets or sets the CSS style to apply to a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> column heading when the column is sorted in ascending order."},{"pos":[314525,314640],"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, an arrow that indicates the sort direction is displayed in the column heading.","needQuote":true,"needEscape":true,"extradata":"MT","source":"When this property is set to `true`, an arrow that indicates the sort direction is displayed in the column heading."},{"pos":[314832,315106],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a style is applied to the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> heading when the column is sorted in ascending order; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a style is applied to the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> heading when the column is sorted in ascending order; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[315641,315778],"content":"Gets or sets the style of a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> column when the column is sorted in descending order.","needQuote":true,"needEscape":true,"source":"Gets or sets the style of a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> column when the column is sorted in descending order."},{"pos":[315790,316012],"content":"When this property is set to `true`, a style is applied to cells in the column when the data is sorted in descending order. For example, the column can be highlighted with a specific color when the sort type is descending.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, a style is applied to cells in the column when the data is sorted in descending order.","pos":[0,123],"source":"When this property is set to `true`, a style is applied to cells in the column when the data is sorted in descending order."},{"content":"For example, the column can be highlighted with a specific color when the sort type is descending.","pos":[124,222]}]},{"pos":[316203,316470],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a style is applied to the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> when the column is sorted in descending order; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a style is applied to the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> when the column is sorted in descending order; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[317014,317168],"content":"Gets or sets the style to apply to a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> column heading when the column is sorted in descending order.","needQuote":true,"needEscape":true,"source":"Gets or sets the style to apply to a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> column heading when the column is sorted in descending order."},{"pos":[317180,317295],"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, an arrow that indicates the sort direction is displayed in the column heading.","needQuote":true,"needEscape":true,"extradata":"MT","source":"When this property is set to `true`, an arrow that indicates the sort direction is displayed in the column heading."},{"pos":[317488,317763],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a style is applied to the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> heading when the column is sorted in descending order; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a style is applied to the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> heading when the column is sorted in descending order; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[318244,318320],"content":"Gets the sort expression associated with the column or columns being sorted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the sort expression associated with the column or columns being sorted.","pos":[0,76]}]},{"pos":[318333,318947],"content":"Use the SortExpression property to determine the sort expression associated with the column or columns being sorted.      > [!NOTE] >  The <xref:System.Web.UI.WebControls.GridView> control has a built-in sorting feature that automatically sets this property. This property is typically used only when you need to programmatically determine the column or columns being sorted or when you are adding your own custom sorting functionality to a <xref:System.Web.UI.WebControls.GridView> control.       When multiple columns are sorted, this property contains a comma-separated list of the fields by which to sort.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the SortExpression property to determine the sort expression associated with the column or columns being sorted.","pos":[0,116]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Web.UI.WebControls.GridView&gt; control has a built-in sorting feature that automatically sets this property.","pos":[122,258],"source":"      > [!NOTE] >  The <xref:System.Web.UI.WebControls.GridView> control has a built-in sorting feature that automatically sets this property."},{"content":"This property is typically used only when you need to programmatically determine the column or columns being sorted or when you are adding your own custom sorting functionality to a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[259,491],"source":" This property is typically used only when you need to programmatically determine the column or columns being sorted or when you are adding your own custom sorting functionality to a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"When multiple columns are sorted, this property contains a comma-separated list of the fields by which to sort.","pos":[498,609]}]},{"pos":[319437,319508],"content":"The sort expression associated with the column or columns being sorted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The sort expression associated with the column or columns being sorted.","pos":[0,71]}]},{"pos":[319938,320099],"content":"Occurs when the hyperlink to sort a column is clicked, but before the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control handles the sort operation.","needQuote":true,"needEscape":true,"source":"Occurs when the hyperlink to sort a column is clicked, but before the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control handles the sort operation."},{"pos":[320112,321162],"content":"The Sorting event is raised when the hyperlink to sort a column is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the sort operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the sorting operation, whenever this event occurs.       A <xref:System.Web.UI.WebControls.GridViewSortEventArgs> object is passed to the event-handling method, which enables you to determine the sort expression for the column and to indicate that the selection operation should be canceled. To cancel the selection operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewSortEventArgs> object to `true`.       For information about how to programmatically initiate a sort operation, see the <xref:System.Web.UI.WebControls.GridView.Sort%2A> method.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Sorting event is raised when the hyperlink to sort a column is clicked, but before the &lt;xref:System.Web.UI.WebControls.GridView&gt; control handles the sort operation.","pos":[0,168],"source":"The Sorting event is raised when the hyperlink to sort a column is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the sort operation."},{"content":"This enables you to provide an event-handling method that performs a custom routine, such as canceling the sorting operation, whenever this event occurs.","pos":[169,322]},{"content":"A &lt;xref:System.Web.UI.WebControls.GridViewSortEventArgs&gt; object is passed to the event-handling method, which enables you to determine the sort expression for the column and to indicate that the selection operation should be canceled.","pos":[329,563],"source":"       A <xref:System.Web.UI.WebControls.GridViewSortEventArgs> object is passed to the event-handling method, which enables you to determine the sort expression for the column and to indicate that the selection operation should be canceled."},{"content":"To cancel the selection operation, set the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.GridViewSortEventArgs&gt; object to <ph id=\"ph1\">`true`</ph>.","pos":[564,750],"source":" To cancel the selection operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewSortEventArgs> object to `true`."},{"content":"For information about how to programmatically initiate a sort operation, see the &lt;xref:System.Web.UI.WebControls.GridView.Sort%2A&gt; method.","pos":[757,895],"source":"       For information about how to programmatically initiate a sort operation, see the <xref:System.Web.UI.WebControls.GridView.Sort%2A> method."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[902,1044],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[322192,322204],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[322822,322884],"content":"Returns the result of a callback event that targets a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the result of a callback event that targets a control.","pos":[0,62]}]},{"pos":[322896,323249],"content":"The <xref:System.Web.UI.WebControls.GridView> control implements the <xref:System.Web.UI.ICallbackEventHandler> interface and uses the <xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A> to asynchronously retrieve data and the <xref:System.Web.UI.WebControls.GridView.GetCallbackResult%2A> method to return the retrieved data to the control.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.UI.WebControls.GridView&gt; control implements the &lt;xref:System.Web.UI.ICallbackEventHandler&gt; interface and uses the &lt;xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A&gt; to asynchronously retrieve data and the &lt;xref:System.Web.UI.WebControls.GridView.GetCallbackResult%2A&gt; method to return the retrieved data to the control.","pos":[0,353],"source":"The <xref:System.Web.UI.WebControls.GridView> control implements the <xref:System.Web.UI.ICallbackEventHandler> interface and uses the <xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A> to asynchronously retrieve data and the <xref:System.Web.UI.WebControls.GridView.GetCallbackResult%2A> method to return the retrieved data to the control."}]},{"pos":[323400,323428],"content":"The results of the callback.","needQuote":true,"needEscape":true,"nodes":[{"content":"The results of the callback.","pos":[0,28]}]},{"pos":[324201,324330],"content":"Creates the arguments for the callback handler in the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates the arguments for the callback handler in the &lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*&gt; method.","pos":[0,129],"source":"Creates the arguments for the callback handler in the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*> method."}]},{"pos":[324342,324605],"content":"ICallbackEventHandler.RaiseCallbackEvent is a helper method that is used by the <xref:System.Web.UI.WebControls.GridView> control to create the arguments for the callback handler in the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"ICallbackEventHandler.RaiseCallbackEvent is a helper method that is used by the &lt;xref:System.Web.UI.WebControls.GridView&gt; control to create the arguments for the callback handler in the &lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt; method.","pos":[0,263],"source":"ICallbackEventHandler.RaiseCallbackEvent is a helper method that is used by the <xref:System.Web.UI.WebControls.GridView> control to create the arguments for the callback handler in the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method."}]},{"pos":[324784,324826],"content":"The argument to pass to the event handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"The argument to pass to the event handler.","pos":[0,42]}]},{"pos":[325558,325724],"content":"Gets the data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <xref:System.Web.UI.Control.ClientID*> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the &lt;xref:System.Web.UI.Control.ClientID*&gt; value.","pos":[0,166],"source":"Gets the data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <xref:System.Web.UI.Control.ClientID*> value."}]},{"pos":[325736,325938],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.IDataKeysControl> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.IDataKeysControl> interface.","pos":[0,202],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.UI.WebControls.GridView&gt; instance is cast to an &lt;xref:System.Web.UI.IDataKeysControl&gt; interface.","pos":[60,202],"source":" It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.IDataKeysControl> interface."}]}]},{"pos":[326149,326310],"content":"The data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <xref:System.Web.UI.Control.ClientID*> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the &lt;xref:System.Web.UI.Control.ClientID*&gt; value.","pos":[0,161],"source":"The data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <xref:System.Web.UI.Control.ClientID*> value."}]},{"pos":[327086,327221],"content":"Raises the appropriate events for the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control when it posts back to the server.","needQuote":true,"needEscape":true,"source":"Raises the appropriate events for the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control when it posts back to the server."},{"pos":[327234,327830],"content":"The page calls the <xref:System.Web.UI.Page.RaisePostBackEvent%2A> method when a postback event occurs to raise the appropriate events for a <xref:System.Web.UI.WebControls.GridView> control. This call occurs in the page life cycle after loading and change notification are complete, but before prerendering occurs. This method has been implemented to create a <xref:System.Web.UI.WebControls.CommandEventArgs> object for the event or events that are raised.      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The page calls the &lt;xref:System.Web.UI.Page.RaisePostBackEvent%2A&gt; method when a postback event occurs to raise the appropriate events for a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,191],"source":"The page calls the <xref:System.Web.UI.Page.RaisePostBackEvent%2A> method when a postback event occurs to raise the appropriate events for a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"This call occurs in the page life cycle after loading and change notification are complete, but before prerendering occurs.","pos":[192,315]},{"content":"This method has been implemented to create a &lt;xref:System.Web.UI.WebControls.CommandEventArgs&gt; object for the event or events that are raised.","pos":[316,458],"source":" This method has been implemented to create a <xref:System.Web.UI.WebControls.CommandEventArgs> object for the event or events that are raised."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method is used primarily by control developers to extend the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[464,593],"source":"      > [!NOTE] >  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control."}]},{"pos":[328010,328156],"content":"The event argument from which to create a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.CommandEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the event or events that are raised.","needQuote":true,"needEscape":true,"source":"The event argument from which to create a <xref href=\"System.Web.UI.WebControls.CommandEventArgs\"></xref> for the event or events that are raised."},{"pos":[329097,329172],"content":"Creates the callback script for a button that performs a sorting operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates the callback script for a button that performs a sorting operation.","pos":[0,75]}]},{"pos":[329184,329387],"content":"ICallbackContainer.GetCallbackScript is a helper method that is used by the <xref:System.Web.UI.WebControls.GridView> control to create the callback script for a button that performs a sorting operation.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"ICallbackContainer.GetCallbackScript is a helper method that is used by the &lt;xref:System.Web.UI.WebControls.GridView&gt; control to create the callback script for a button that performs a sorting operation.","pos":[0,203],"source":"ICallbackContainer.GetCallbackScript is a helper method that is used by the <xref:System.Web.UI.WebControls.GridView> control to create the callback script for a button that performs a sorting operation."}]},{"pos":[329642,329701],"content":"The button control for which to create the callback script.","needQuote":true,"needEscape":true,"nodes":[{"content":"The button control for which to create the callback script.","pos":[0,59]}]},{"pos":[329766,329811],"content":"The arguments to pass to the callback script.","needQuote":true,"needEscape":true,"nodes":[{"content":"The arguments to pass to the callback script.","pos":[0,45]}]},{"pos":[329869,329936],"content":"The callback script for a button that performs a sorting operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The callback script for a button that performs a sorting operation.","pos":[0,67]}]},{"pos":[330676,330773],"content":"Gets or sets the names of the primary key fields for the items displayed in a data-bound control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the names of the primary key fields for the items displayed in a data-bound control.","pos":[0,97]}]},{"pos":[330786,331312],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface.       This property provides access to the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property of the <xref:System.Web.UI.WebControls.GridView> control. It is exposed through the <xref:System.Web.UI.WebControls.IDataBoundControl> Interface.       ASP.NET Dynamic Data supports this property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface.       This property provides access to the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property of the <xref:System.Web.UI.WebControls.GridView> control. It is exposed through the <xref:System.Web.UI.WebControls.IDataBoundControl> Interface.       ASP.NET Dynamic Data supports this property.","pos":[0,522],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.UI.WebControls.GridView&gt; instance is cast to an &lt;xref:System.Web.UI.WebControls.IDataBoundControl&gt; interface.","pos":[60,215],"source":" It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface."},{"content":"This property provides access to the &lt;xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[222,383],"source":"       This property provides access to the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property of the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"It is exposed through the &lt;xref:System.Web.UI.WebControls.IDataBoundControl&gt; Interface.","pos":[384,471],"source":" It is exposed through the <xref:System.Web.UI.WebControls.IDataBoundControl> Interface."},{"content":"ASP.NET Dynamic Data supports this property.","pos":[478,522]}]}]},{"pos":[331476,331637],"content":"An array that contains the names of the primary-key fields for the items that are displayed in a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"An array that contains the names of the primary-key fields for the items that are displayed in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[332361,332461],"content":"Gets or sets the table that is exposed by the data source control to bind to the data-bound control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the table that is exposed by the data source control to bind to the data-bound control.","pos":[0,100]}]},{"pos":[332474,333087],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface.       If the data source contains multiple sources of data, use this property to set the specific data table, collection, or other data for the control to bind to. For example, if the data source is a <xref:System.Data.DataSet> instance that contains multiple tables, you can specify which table to bind the control to by using this property.       ASP.NET Dynamic Data supports this property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface.       If the data source contains multiple sources of data, use this property to set the specific data table, collection, or other data for the control to bind to. For example, if the data source is a <xref:System.Data.DataSet> instance that contains multiple tables, you can specify which table to bind the control to by using this property.       ASP.NET Dynamic Data supports this property.","pos":[0,609],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.UI.WebControls.GridView&gt; instance is cast to an &lt;xref:System.Web.UI.WebControls.IDataBoundControl&gt; interface.","pos":[60,215],"source":" It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface."},{"content":"If the data source contains multiple sources of data, use this property to set the specific data table, collection, or other data for the control to bind to.","pos":[222,379]},{"content":"For example, if the data source is a &lt;xref:System.Data.DataSet&gt; instance that contains multiple tables, you can specify which table to bind the control to by using this property.","pos":[380,558],"source":" For example, if the data source is a <xref:System.Data.DataSet> instance that contains multiple tables, you can specify which table to bind the control to by using this property."},{"content":"ASP.NET Dynamic Data supports this property.","pos":[565,609]}]}]},{"pos":[333245,333332],"content":"The table that is exposed by the data source control to bind to the data-bound control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The table that is exposed by the data source control to bind to the data-bound control.","pos":[0,87]}]},{"pos":[334054,334157],"content":"Gets or sets the data source object from which the data-bound control retrieves the list of data items.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the data source object from which the data-bound control retrieves the list of data items.","pos":[0,103]}]},{"pos":[334170,334438],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface.       ASP.NET Dynamic Data supports this property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface.       ASP.NET Dynamic Data supports this property.","pos":[0,266],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.UI.WebControls.GridView&gt; instance is cast to an &lt;xref:System.Web.UI.WebControls.IDataBoundControl&gt; interface.","pos":[60,215],"source":" It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface."},{"content":"ASP.NET Dynamic Data supports this property.","pos":[222,266]}]}]},{"pos":[334596,334652],"content":"The data source object that the data-bound control uses.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data source object that the data-bound control uses.","pos":[0,56]}]},{"pos":[335384,335490],"content":"Gets or sets the ID of the data source from which the data-bound control retrieves the list of data items.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the ID of the data source from which the data-bound control retrieves the list of data items.","pos":[0,106]}]},{"pos":[335503,335771],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface.       ASP.NET Dynamic Data supports this property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface.       ASP.NET Dynamic Data supports this property.","pos":[0,266],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.UI.WebControls.GridView&gt; instance is cast to an &lt;xref:System.Web.UI.WebControls.IDataBoundControl&gt; interface.","pos":[60,215],"source":" It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface."},{"content":"ASP.NET Dynamic Data supports this property.","pos":[222,266]}]}]},{"pos":[335931,336012],"content":"The ID of the data source from which the data-bound control retrieves data items.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ID of the data source from which the data-bound control retrieves data items.","pos":[0,81]}]},{"pos":[336766,336869],"content":"Gets or sets the data source object from which the data-bound control retrieves the list of data items.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the data source object from which the data-bound control retrieves the list of data items.","pos":[0,103]}]},{"pos":[336882,337150],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface.       ASP.NET Dynamic Data supports this property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface.       ASP.NET Dynamic Data supports this property.","pos":[0,266],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.UI.WebControls.GridView&gt; instance is cast to an &lt;xref:System.Web.UI.WebControls.IDataBoundControl&gt; interface.","pos":[60,215],"source":" It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface."},{"content":"ASP.NET Dynamic Data supports this property.","pos":[222,266]}]}]},{"pos":[337340,337429],"content":"The data source object from which the data-bound control retrieves the list of data items","needQuote":true,"needEscape":true,"nodes":[{"content":"The data source object from which the data-bound control retrieves the list of data items","pos":[0,89]}]},{"pos":[338212,338400],"content":"Gets or sets the names of the data fields whose values are appended to the <xref:System.Web.UI.Control.ClientID*> property value to uniquely identify each instance of a data-bound control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the names of the data fields whose values are appended to the &lt;xref:System.Web.UI.Control.ClientID*&gt; property value to uniquely identify each instance of a data-bound control.","pos":[0,188],"source":"Gets or sets the names of the data fields whose values are appended to the <xref:System.Web.UI.Control.ClientID*> property value to uniquely identify each instance of a data-bound control."}]},{"pos":[338412,338631],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface.","pos":[0,219],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.UI.WebControls.GridView&gt; instance is cast to an &lt;xref:System.Web.UI.WebControls.IDataBoundListControl&gt; interface.","pos":[60,219],"source":" It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface."}]}]},{"pos":[338803,338985],"content":"The names of the data fields whose values are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <xref:System.Web.UI.Control.ClientID*> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The names of the data fields whose values are used to uniquely identify each instance of a data-bound control when ASP.NET generates the &lt;xref:System.Web.UI.Control.ClientID*&gt; value.","pos":[0,182],"source":"The names of the data fields whose values are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <xref:System.Web.UI.Control.ClientID*> value."}]},{"pos":[339728,339858],"content":"Gets a collection of objects that represent the <xref:System.Web.UI.WebControls.GridView.DataKeys*> value in a data-bound control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of objects that represent the &lt;xref:System.Web.UI.WebControls.GridView.DataKeys*&gt; value in a data-bound control.","pos":[0,130],"source":"Gets a collection of objects that represent the <xref:System.Web.UI.WebControls.GridView.DataKeys*> value in a data-bound control."}]},{"pos":[339871,340143],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface.       ASP.NET Dynamic Data supports this property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface.       ASP.NET Dynamic Data supports this property.","pos":[0,270],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.UI.WebControls.GridView&gt; instance is cast to an &lt;xref:System.Web.UI.WebControls.IDataBoundListControl&gt; interface.","pos":[60,219],"source":" It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface."},{"content":"ASP.NET Dynamic Data supports this property.","pos":[226,270]}]}]},{"pos":[340355,340427],"content":"An array that contains the data key of each row in a data-bound control.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array that contains the data key of each row in a data-bound control.","pos":[0,72]}]},{"pos":[341241,341348],"content":"Gets or sets a value that indicates whether the selection of a row is based on index or on data-key values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the selection of a row is based on index or on data-key values.","pos":[0,107]}]},{"pos":[341361,341633],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface.       ASP.NET Dynamic Data supports this property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface.       ASP.NET Dynamic Data supports this property.","pos":[0,270],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.UI.WebControls.GridView&gt; instance is cast to an &lt;xref:System.Web.UI.WebControls.IDataBoundListControl&gt; interface.","pos":[60,219],"source":" It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface."},{"content":"ASP.NET Dynamic Data supports this property.","pos":[226,270]}]}]},{"pos":[341808,341993],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the row selection is based on data-key values; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the row selection is based on data-key values; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[342778,342872],"content":"Gets the object that contains the data key value for the selected row in a data-bound control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the object that contains the data key value for the selected row in a data-bound control.","pos":[0,94]}]},{"pos":[342885,343157],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface.       ASP.NET Dynamic Data supports this property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface.       ASP.NET Dynamic Data supports this property.","pos":[0,270],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.UI.WebControls.GridView&gt; instance is cast to an &lt;xref:System.Web.UI.WebControls.IDataBoundListControl&gt; interface.","pos":[60,219],"source":" It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface."},{"content":"ASP.NET Dynamic Data supports this property.","pos":[226,270]}]}]},{"pos":[343366,343406],"content":"The data-key value for the selected row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data-key value for the selected row.","pos":[0,40]}]},{"pos":[344172,344241],"content":"Gets or sets the index of the selected row in the data-bound control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the index of the selected row in the data-bound control.","pos":[0,69]}]},{"pos":[344254,344526],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface.       ASP.NET Dynamic Data supports this property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface.       ASP.NET Dynamic Data supports this property.","pos":[0,270],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.UI.WebControls.GridView&gt; instance is cast to an &lt;xref:System.Web.UI.WebControls.IDataBoundListControl&gt; interface.","pos":[60,219],"source":" It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface."},{"content":"ASP.NET Dynamic Data supports this property.","pos":[226,270]}]}]},{"pos":[344687,344743],"content":"The index of the selected row in the data-bound control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the selected row in the data-bound control.","pos":[0,56]}]},{"pos":[345477,345600],"content":"Gets or sets the control that automatically generates the columns for a data-bound control for use by ASP.NET Dynamic Data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the control that automatically generates the columns for a data-bound control for use by ASP.NET Dynamic Data.","pos":[0,123]}]},{"pos":[345613,345877],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IFieldControl> interface.       ASP.NET Dynamic Data supports this property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IFieldControl> interface.       ASP.NET Dynamic Data supports this property.","pos":[0,262],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Web.UI.WebControls.GridView&gt; instance is cast to an &lt;xref:System.Web.UI.WebControls.IFieldControl&gt; interface.","pos":[60,211],"source":" It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IFieldControl> interface."},{"content":"ASP.NET Dynamic Data supports this property.","pos":[218,262]}]}]},{"pos":[346083,346161],"content":"The control that automatically generates the columns for a data-bound control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The control that automatically generates the columns for a data-bound control.","pos":[0,78]}]},{"pos":[346874,347006],"content":"For a description of this member, see &lt;xref:System.Web.UI.WebControls.IPersistedSelector.DataKey%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.WebControls.IPersistedSelector.DataKey%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,132],"source":"For a description of this member, see &lt;xref:System.Web.UI.WebControls.IPersistedSelector.DataKey%2A?displayProperty=fullName&gt;."}]},{"pos":[347019,347747],"content":"You can specify how selected rows are persisted when the <xref:System.Web.UI.WebControls.GridView> control is in paging mode. By default, row selection is based on row index. The same row (for example, the third row) is selected on each page. Alternatively, you can enable persistence based on the data key of the selected row. In that case, if you select row 3 on page 1 and you move to page 2, no row is selected on page 2. If you move back to page 1, row 3 is still selected. To enable this functionality, set this property to `true`.      > [!NOTE] >  In versions 2.0, 3.0, and 3.5 of ASP.NET, row selection was based only on row index. By default, row selection in ASP.NET 4 is based on index for backward compatibility.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can specify how selected rows are persisted when the &lt;xref:System.Web.UI.WebControls.GridView&gt; control is in paging mode.","pos":[0,125],"source":"You can specify how selected rows are persisted when the <xref:System.Web.UI.WebControls.GridView> control is in paging mode."},{"content":"By default, row selection is based on row index.","pos":[126,174]},{"content":"The same row (for example, the third row) is selected on each page.","pos":[175,242]},{"content":"Alternatively, you can enable persistence based on the data key of the selected row.","pos":[243,327]},{"content":"In that case, if you select row 3 on page 1 and you move to page 2, no row is selected on page 2.","pos":[328,425]},{"content":"If you move back to page 1, row 3 is still selected.","pos":[426,478]},{"content":"To enable this functionality, set this property to <ph id=\"ph1\">`true`</ph>.","pos":[479,537],"source":" To enable this functionality, set this property to `true`."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  In versions 2.0, 3.0, and 3.5 of ASP.NET, row selection was based only on row index.","pos":[543,640],"source":"      > [!NOTE] >  In versions 2.0, 3.0, and 3.5 of ASP.NET, row selection was based only on row index."},{"content":"By default, row selection in ASP.NET 4 is based on index for backward compatibility.","pos":[641,725]}]},{"pos":[347950,348027],"content":"The data-key value for the persisted selected record in a data-bound control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data-key value for the persisted selected record in a data-bound control.","pos":[0,77]}]},{"pos":[348922,349060],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.PostBackOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the postback behavior of the specified button control.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Web.UI.PostBackOptions\"></xref> object that represents the postback behavior of the specified button control."},{"pos":[349322,349381],"content":"The button control for which to create the callback script.","needQuote":true,"needEscape":true,"nodes":[{"content":"The button control for which to create the callback script.","pos":[0,59]}]},{"pos":[349455,349578],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.PostBackOptions\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the postback behavior of the specified button control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.PostBackOptions\"></xref> that represents the postback behavior of the specified button control."},{"pos":[349807,349918],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buttonControl</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter contains <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>buttonControl</code> parameter contains <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[350029,350140],"content":"<ph id=\"ph1\">&lt;code&gt;buttonControl&lt;/code&gt;</ph> causes validation and is attempting to post back to the same container it validates.","needQuote":true,"needEscape":true,"source":"<code>buttonControl</code> causes validation and is attempting to post back to the same container it validates."},{"pos":[350488,350628],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriterTag\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value for the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Web.UI.HtmlTextWriterTag\"></xref> value for the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[350640,351000],"content":"The TagKey property allows the output stream to write the appropriate HTML markup for the <xref:System.Web.UI.WebControls.GridView> control. When the <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> property is set to `true`, this property returns `HtmlTextWriterTag.Div`; otherwise, this property returns `HtmlTextWriterTag.Table`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TagKey property allows the output stream to write the appropriate HTML markup for the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,140],"source":"The TagKey property allows the output stream to write the appropriate HTML markup for the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"When the &lt;xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>, this property returns <ph id=\"ph2\">`HtmlTextWriterTag.Div`</ph>; otherwise, this property returns <ph id=\"ph3\">`HtmlTextWriterTag.Table`</ph>.","pos":[141,360],"source":" When the <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> property is set to `true`, this property returns `HtmlTextWriterTag.Div`; otherwise, this property returns `HtmlTextWriterTag.Table`."}]},{"pos":[351166,351301],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.HtmlTextWriterTag\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value for the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.HtmlTextWriterTag\"></xref> value for the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[351746,351922],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the top pager row in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> object that represents the top pager row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control."},{"pos":[351935,353143],"content":"When paging is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`), an additional row called the pager row is automatically displayed in the <xref:System.Web.UI.WebControls.GridView> control. The pager row contains controls that allow the user to navigate to the other pages and can be displayed at the top, the bottom, or both the top and bottom of the control. Use the TopPagerRow property to programmatically access the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the top pager row in a <xref:System.Web.UI.WebControls.GridView> control.      > [!NOTE] >  The TopPagerRow property is available only after the <xref:System.Web.UI.WebControls.GridView> control creates the top pager row in the <xref:System.Web.UI.WebControls.GridView.RowCreated> event.       This property is commonly used when you need to programmatically manipulate the top pager row, for example when adding custom content. Any modification to the TopPagerRow property must be performed after the <xref:System.Web.UI.WebControls.GridView> control has been rendered; otherwise, the <xref:System.Web.UI.WebControls.GridView> control will overwrite any changes.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When paging is enabled (by setting the &lt;xref:System.Web.UI.WebControls.GridView.AllowPaging%2A&gt; property to <ph id=\"ph1\">`true`</ph>), an additional row called the pager row is automatically displayed in the &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[0,240],"source":"When paging is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`), an additional row called the pager row is automatically displayed in the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"The pager row contains controls that allow the user to navigate to the other pages and can be displayed at the top, the bottom, or both the top and bottom of the control.","pos":[241,411]},{"content":"Use the TopPagerRow property to programmatically access the &lt;xref:System.Web.UI.WebControls.GridViewRow&gt; object that represents the top pager row in a &lt;xref:System.Web.UI.WebControls.GridView&gt; control.","pos":[412,613],"source":" Use the TopPagerRow property to programmatically access the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the top pager row in a <xref:System.Web.UI.WebControls.GridView> control."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The TopPagerRow property is available only after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control creates the top pager row in the &lt;xref:System.Web.UI.WebControls.GridView.RowCreated&gt; event.","pos":[619,827],"source":"      > [!NOTE] >  The TopPagerRow property is available only after the <xref:System.Web.UI.WebControls.GridView> control creates the top pager row in the <xref:System.Web.UI.WebControls.GridView.RowCreated> event."},{"content":"This property is commonly used when you need to programmatically manipulate the top pager row, for example when adding custom content.","pos":[834,968]},{"content":"Any modification to the TopPagerRow property must be performed after the &lt;xref:System.Web.UI.WebControls.GridView&gt; control has been rendered; otherwise, the &lt;xref:System.Web.UI.WebControls.GridView&gt; control will overwrite any changes.","pos":[969,1203],"source":" Any modification to the TopPagerRow property must be performed after the <xref:System.Web.UI.WebControls.GridView> control has been rendered; otherwise, the <xref:System.Web.UI.WebControls.GridView> control will overwrite any changes."}]},{"pos":[353823,353933],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the top pager row in the control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> that represents the top pager row in the control."},{"pos":[354402,354710],"content":"Tracks view-state changes to the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control so they can be stored in the control's <xref href=\"System.Web.UI.StateBag\"></xref> object. This object is accessible through the &lt;xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName&gt; property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Tracks view-state changes to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control so they can be stored in the control's <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.StateBag\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","pos":[0,187],"source":"Tracks view-state changes to the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control so they can be stored in the control's <xref href=\"System.Web.UI.StateBag\"></xref> object."},{"content":"This object is accessible through the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> property.","pos":[188,308],"source":" This object is accessible through the &lt;xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName&gt; property."}]},{"pos":[354722,354872],"content":"This method is overridden to mark the starting point at which to begin tracking and saving changes to the control as part of the control's view state.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is overridden to mark the starting point at which to begin tracking and saving changes to the control as part of the control's view state.","pos":[0,150]}]},{"pos":[355415,355483],"content":"Gets or sets the name of the method to call in order to update data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the method to call in order to update data.","pos":[0,68]}]},{"pos":[355496,355728],"content":"Setting this property causes model binding to be used as the data-binding method.       For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Setting this property causes model binding to be used as the data-binding method.","pos":[0,81]},{"content":"For a tutorial series on using model binding with Web Forms, see <bpt id=\"p1\">[</bpt>Model Binding and Web Forms<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=286117)</ept>.","pos":[88,230],"source":"       For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)."}]},{"pos":[355859,355882],"content":"The name of the method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the method.","pos":[0,23]}]},{"pos":[356424,356504],"content":"Updates the record at the specified row index using the field values of the row.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates the record at the specified row index using the field values of the row.","pos":[0,80]}]},{"pos":[356517,357392],"content":"Use the UpdateRow method to programmatically update the record at the specified index in the data source. This method is commonly used when you need to update a record from outside of the <xref:System.Web.UI.WebControls.GridView> control, such as from a different control on the page.      > [!NOTE] >  This method can be called only for the row that is currently in edit mode, or for a row that contains a two-way data-bound input control. For more information about two-way binding expressions, see [Binding to Databases](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742).       To specify whether page validation is performed before the update operation, use the `causesValidation` parameter. Calling this method also raises the <xref:System.Web.UI.WebControls.GridView.RowUpdated> and <xref:System.Web.UI.WebControls.GridView.RowUpdating> events.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the UpdateRow method to programmatically update the record at the specified index in the data source.","pos":[0,105]},{"content":"This method is commonly used when you need to update a record from outside of the &lt;xref:System.Web.UI.WebControls.GridView&gt; control, such as from a different control on the page.","pos":[106,284],"source":" This method is commonly used when you need to update a record from outside of the <xref:System.Web.UI.WebControls.GridView> control, such as from a different control on the page."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  This method can be called only for the row that is currently in edit mode, or for a row that contains a two-way data-bound input control.","pos":[290,440],"source":"      > [!NOTE] >  This method can be called only for the row that is currently in edit mode, or for a row that contains a two-way data-bound input control."},{"content":"For more information about two-way binding expressions, see <bpt id=\"p1\">[</bpt>Binding to Databases<ept id=\"p1\">](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)</ept>.","pos":[441,594],"source":" For more information about two-way binding expressions, see [Binding to Databases](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)."},{"content":"To specify whether page validation is performed before the update operation, use the <ph id=\"ph1\">`causesValidation`</ph> parameter.","pos":[601,715],"source":"       To specify whether page validation is performed before the update operation, use the `causesValidation` parameter."},{"content":"Calling this method also raises the &lt;xref:System.Web.UI.WebControls.GridView.RowUpdated&gt; and &lt;xref:System.Web.UI.WebControls.GridView.RowUpdating&gt; events.","pos":[716,870],"source":" Calling this method also raises the <xref:System.Web.UI.WebControls.GridView.RowUpdated> and <xref:System.Web.UI.WebControls.GridView.RowUpdating> events."}]},{"pos":[357940,357971],"content":"The index of the row to update.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the row to update.","pos":[0,31]}]},{"pos":[358045,358235],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to perform page validation when this method is called; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to perform page validation when this method is called; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[358402,358659],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control is bound to a data source control, but the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> associated with the data source is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is bound to a data source control, but the <xref href=\"System.Web.UI.DataSourceView\"></xref> associated with the data source is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[359072,359325],"content":"Gets or sets a value indicating whether a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control renders its header in an accessible format. This property is provided to make the control more accessible to users of assistive technology devices.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control renders its header in an accessible format.","pos":[0,149],"source":"Gets or sets a value indicating whether a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control renders its header in an accessible format."},{"content":"This property is provided to make the control more accessible to users of assistive technology devices.","pos":[150,253]}]},{"pos":[359338,360179],"content":"Use the UseAccessibleHeader property to specify whether the <xref:System.Web.UI.WebControls.GridView> control renders its header row in an accessible format. This property is provided to make the control more accessible to users of assistive technology devices. By default, the value of this property is `true` and the header for the control is rendered using `<th>` table header cell tags. In addition, a `scope=\"col\"` attribute is added to the table header to specify that the header applies to all the cells in the column. The default rendering of the `<th>` element is preserved, rendering text as bold and centered horizontally. Developers can override the style of the `<th>` element using a cascading style sheet.       If the value of this property is `false`, the header for the control is rendered using `<td>` table cell tags.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the UseAccessibleHeader property to specify whether the &lt;xref:System.Web.UI.WebControls.GridView&gt; control renders its header row in an accessible format.","pos":[0,157],"source":"Use the UseAccessibleHeader property to specify whether the <xref:System.Web.UI.WebControls.GridView> control renders its header row in an accessible format."},{"content":"This property is provided to make the control more accessible to users of assistive technology devices.","pos":[158,261]},{"content":"By default, the value of this property is <ph id=\"ph1\">`true`</ph> and the header for the control is rendered using <ph id=\"ph2\">`&lt;th&gt;`</ph> table header cell tags.","pos":[262,390],"source":" By default, the value of this property is `true` and the header for the control is rendered using `<th>` table header cell tags."},{"content":"In addition, a <ph id=\"ph1\">`scope=\"col\"`</ph> attribute is added to the table header to specify that the header applies to all the cells in the column.","pos":[391,525],"source":" In addition, a `scope=\"col\"` attribute is added to the table header to specify that the header applies to all the cells in the column."},{"content":"The default rendering of the <ph id=\"ph1\">`&lt;th&gt;`</ph> element is preserved, rendering text as bold and centered horizontally.","pos":[526,633],"source":" The default rendering of the `<th>` element is preserved, rendering text as bold and centered horizontally."},{"content":"Developers can override the style of the <ph id=\"ph1\">`&lt;th&gt;`</ph> element using a cascading style sheet.","pos":[634,720],"source":" Developers can override the style of the `<th>` element using a cascading style sheet."},{"content":"If the value of this property is <ph id=\"ph1\">`false`</ph>, the header for the control is rendered using <ph id=\"ph2\">`&lt;td&gt;`</ph> table cell tags.","pos":[727,837],"source":"       If the value of this property is `false`, the header for the control is rendered using `<td>` table cell tags."}]},{"pos":[360671,360998],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control renders its header in an accessible format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control renders its header in an accessible format; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,250],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control renders its header in an accessible format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[251,327],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[361481,361653],"content":"Gets or sets the virtual number of items in the data source that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control is bound to when custom paging is used.","needQuote":true,"needEscape":true,"source":"Gets or sets the virtual number of items in the data source that the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is bound to when custom paging is used."},{"pos":[361665,361899],"content":"This property is used only when the value of the <xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A> property is `true`. For more information, see the <xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is used only when the value of the &lt;xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A&gt; property is <ph id=\"ph1\">`true`</ph>.","pos":[0,131],"source":"This property is used only when the value of the <xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A> property is `true`."},{"content":"For more information, see the &lt;xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A&gt; property.","pos":[132,234],"source":" For more information, see the <xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A> property."}]},{"pos":[362029,362188],"content":"The virtual number of items in the data source that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control is bound to when custom paging is used.","needQuote":true,"needEscape":true,"source":"The virtual number of items in the data source that the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is bound to when custom paging is used."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.GridView\n  id: GridView\n  children:\n  - System.Web.UI.WebControls.GridView.#ctor\n  - System.Web.UI.WebControls.GridView.AllowCustomPaging\n  - System.Web.UI.WebControls.GridView.AllowPaging\n  - System.Web.UI.WebControls.GridView.AllowSorting\n  - System.Web.UI.WebControls.GridView.AlternatingRowStyle\n  - System.Web.UI.WebControls.GridView.AutoGenerateColumns\n  - System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton\n  - System.Web.UI.WebControls.GridView.AutoGenerateEditButton\n  - System.Web.UI.WebControls.GridView.AutoGenerateSelectButton\n  - System.Web.UI.WebControls.GridView.BackImageUrl\n  - System.Web.UI.WebControls.GridView.BottomPagerRow\n  - System.Web.UI.WebControls.GridView.Caption\n  - System.Web.UI.WebControls.GridView.CaptionAlign\n  - System.Web.UI.WebControls.GridView.CellPadding\n  - System.Web.UI.WebControls.GridView.CellSpacing\n  - System.Web.UI.WebControls.GridView.ClientIDRowSuffix\n  - System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys\n  - System.Web.UI.WebControls.GridView.Columns\n  - System.Web.UI.WebControls.GridView.ColumnsGenerator\n  - System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)\n  - System.Web.UI.WebControls.GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)\n  - System.Web.UI.WebControls.GridView.CreateChildTable\n  - System.Web.UI.WebControls.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)\n  - System.Web.UI.WebControls.GridView.CreateControlStyle\n  - System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments\n  - System.Web.UI.WebControls.GridView.CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)\n  - System.Web.UI.WebControls.GridView.DataBind\n  - System.Web.UI.WebControls.GridView.DataKeyNames\n  - System.Web.UI.WebControls.GridView.DataKeys\n  - System.Web.UI.WebControls.GridView.DeleteMethod\n  - System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)\n  - System.Web.UI.WebControls.GridView.EditIndex\n  - System.Web.UI.WebControls.GridView.EditRowStyle\n  - System.Web.UI.WebControls.GridView.EmptyDataRowStyle\n  - System.Web.UI.WebControls.GridView.EmptyDataTemplate\n  - System.Web.UI.WebControls.GridView.EmptyDataText\n  - System.Web.UI.WebControls.GridView.EnableModelValidation\n  - System.Web.UI.WebControls.GridView.EnablePersistedSelection\n  - System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks\n  - System.Web.UI.WebControls.GridView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)\n  - System.Web.UI.WebControls.GridView.FooterRow\n  - System.Web.UI.WebControls.GridView.FooterStyle\n  - System.Web.UI.WebControls.GridView.GetCallbackResult\n  - System.Web.UI.WebControls.GridView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)\n  - System.Web.UI.WebControls.GridView.GridLines\n  - System.Web.UI.WebControls.GridView.HeaderRow\n  - System.Web.UI.WebControls.GridView.HeaderStyle\n  - System.Web.UI.WebControls.GridView.HorizontalAlign\n  - System.Web.UI.WebControls.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)\n  - System.Web.UI.WebControls.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])\n  - System.Web.UI.WebControls.GridView.IsBindableType(System.Type)\n  - System.Web.UI.WebControls.GridView.LoadControlState(System.Object)\n  - System.Web.UI.WebControls.GridView.LoadViewState(System.Object)\n  - System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.WebControls.GridView.OnDataPropertyChanged\n  - System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)\n  - System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)\n  - System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)\n  - System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)\n  - System.Web.UI.WebControls.GridView.OnPagePreLoad(System.Object,System.EventArgs)\n  - System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)\n  - System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)\n  - System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)\n  - System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)\n  - System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)\n  - System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)\n  - System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)\n  - System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)\n  - System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)\n  - System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)\n  - System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)\n  - System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)\n  - System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)\n  - System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)\n  - System.Web.UI.WebControls.GridView.PageCount\n  - System.Web.UI.WebControls.GridView.PageIndex\n  - System.Web.UI.WebControls.GridView.PageIndexChanged\n  - System.Web.UI.WebControls.GridView.PageIndexChanging\n  - System.Web.UI.WebControls.GridView.PagerSettings\n  - System.Web.UI.WebControls.GridView.PagerStyle\n  - System.Web.UI.WebControls.GridView.PagerTemplate\n  - System.Web.UI.WebControls.GridView.PageSize\n  - System.Web.UI.WebControls.GridView.PerformDataBinding(System.Collections.IEnumerable)\n  - System.Web.UI.WebControls.GridView.PrepareControlHierarchy\n  - System.Web.UI.WebControls.GridView.RaiseCallbackEvent(System.String)\n  - System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String)\n  - System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.GridView.RowCancelingEdit\n  - System.Web.UI.WebControls.GridView.RowCommand\n  - System.Web.UI.WebControls.GridView.RowCreated\n  - System.Web.UI.WebControls.GridView.RowDataBound\n  - System.Web.UI.WebControls.GridView.RowDeleted\n  - System.Web.UI.WebControls.GridView.RowDeleting\n  - System.Web.UI.WebControls.GridView.RowEditing\n  - System.Web.UI.WebControls.GridView.RowHeaderColumn\n  - System.Web.UI.WebControls.GridView.Rows\n  - System.Web.UI.WebControls.GridView.RowStyle\n  - System.Web.UI.WebControls.GridView.RowUpdated\n  - System.Web.UI.WebControls.GridView.RowUpdating\n  - System.Web.UI.WebControls.GridView.SaveControlState\n  - System.Web.UI.WebControls.GridView.SaveViewState\n  - System.Web.UI.WebControls.GridView.SelectedDataKey\n  - System.Web.UI.WebControls.GridView.SelectedIndex\n  - System.Web.UI.WebControls.GridView.SelectedIndexChanged\n  - System.Web.UI.WebControls.GridView.SelectedIndexChanging\n  - System.Web.UI.WebControls.GridView.SelectedPersistedDataKey\n  - System.Web.UI.WebControls.GridView.SelectedRow\n  - System.Web.UI.WebControls.GridView.SelectedRowStyle\n  - System.Web.UI.WebControls.GridView.SelectedValue\n  - System.Web.UI.WebControls.GridView.SelectRow(System.Int32)\n  - System.Web.UI.WebControls.GridView.SetEditRow(System.Int32)\n  - System.Web.UI.WebControls.GridView.SetPageIndex(System.Int32)\n  - System.Web.UI.WebControls.GridView.ShowFooter\n  - System.Web.UI.WebControls.GridView.ShowHeader\n  - System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty\n  - System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)\n  - System.Web.UI.WebControls.GridView.SortDirection\n  - System.Web.UI.WebControls.GridView.Sorted\n  - System.Web.UI.WebControls.GridView.SortedAscendingCellStyle\n  - System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle\n  - System.Web.UI.WebControls.GridView.SortedDescendingCellStyle\n  - System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle\n  - System.Web.UI.WebControls.GridView.SortExpression\n  - System.Web.UI.WebControls.GridView.Sorting\n  - System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult\n  - System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)\n  - System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys\n  - System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)\n  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)\n  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames\n  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember\n  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource\n  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID\n  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject\n  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix\n  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys\n  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection\n  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey\n  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex\n  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator\n  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey\n  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)\n  - System.Web.UI.WebControls.GridView.TagKey\n  - System.Web.UI.WebControls.GridView.TopPagerRow\n  - System.Web.UI.WebControls.GridView.TrackViewState\n  - System.Web.UI.WebControls.GridView.UpdateMethod\n  - System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)\n  - System.Web.UI.WebControls.GridView.UseAccessibleHeader\n  - System.Web.UI.WebControls.GridView.VirtualItemCount\n  langs:\n  - csharp\n  name: GridView\n  nameWithType: GridView\n  fullName: System.Web.UI.WebControls.GridView\n  type: Class\n  summary: Displays the values of a data source in a table where each column represents a field and each row represents a record. The GridView control enables you to select, sort, and edit these items.\n  remarks: \"In this topic:  \\n  \\n-   [Introduction](#introduction)  \\n  \\n-   [Column Fields](#column_fields)  \\n  \\n-   [Binding to Data](#binding_to_data)  \\n  \\n-   [Data Operations](#data_operations)  \\n  \\n-   [Customizing the User Interface](#customizing_the_user_interface)  \\n  \\n-   [Events](#events)  \\n  \\n-   [Accessibility](#accessibility)  \\n  \\n-   [Declarative Syntax](#declarative_syntax)  \\n  \\n<a name=\\\"introduction\\\"></a>   \\n## Introduction  \\n The GridView control is used to display the values of a data source in a table. Each column represents a field, while each row represents a record. The GridView control supports the following features:  \\n  \\n-   Binding to data source controls, such as <xref:System.Web.UI.WebControls.SqlDataSource>.  \\n  \\n-   Built-in sort capabilities.  \\n  \\n-   Built-in update and delete capabilities.  \\n  \\n-   Built-in paging capabilities.  \\n  \\n-   Built-in row selection capabilities.  \\n  \\n-   Programmatic access to the GridView object model to dynamically set properties, handle events, and so on.  \\n  \\n-   Multiple key fields.  \\n  \\n-   Multiple data fields for the hyperlink columns.  \\n  \\n-   Customizable appearance through themes and styles.  \\n  \\n-   To learn about the other data-bound controls that are available in ASP.NET, see [Data-Bound Web Server Controls](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  If you are familiar with the <xref:System.Web.UI.WebControls.DataGrid> control from the .NET Framework version 1.0, the GridView control is the successor to the <xref:System.Web.UI.WebControls.DataGrid> control.  \\n  \\n<a name=\\\"column_fields\\\"></a>   \\n## Column Fields  \\n Each column in the GridView control is represented by a <xref:System.Web.UI.WebControls.DataControlField> object. By default, the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property is set to `true`, which creates an <xref:System.Web.UI.WebControls.AutoGeneratedField> object for each field in the data source. Each field is then rendered as a column in the GridView control in the order that each field appears in the data source.  \\n  \\n You can also manually control which column fields appear in the GridView control by setting the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property to `false` and then defining your own column field collection. Different column field types determine the behavior of the columns in the control. The following table lists the different column field types that can be used.  \\n  \\n|Column field type|Description|  \\n|-----------------------|-----------------|  \\n|<xref:System.Web.UI.WebControls.BoundField>|Displays the value of a field in a data source. This is the default column type of the GridView control.|  \\n|<xref:System.Web.UI.WebControls.ButtonField>|Displays a command button for each item in the GridView control. This enables you to create a column of custom button controls, such as the Add or the Remove button.|  \\n|<xref:System.Web.UI.WebControls.CheckBoxField>|Displays a check box for each item in the GridView control. This column field type is commonly used to display fields with a Boolean value.|  \\n|<xref:System.Web.UI.WebControls.CommandField>|Displays predefined command buttons to perform select, edit, or delete operations.|  \\n|<xref:System.Web.UI.WebControls.HyperLinkField>|Displays the value of a field in a data source as a hyperlink. This column field type enables you to bind a second field to the hyperlink's URL.|  \\n|<xref:System.Web.UI.WebControls.ImageField>|Displays an image for each item in the GridView control.|  \\n|<xref:System.Web.UI.WebControls.TemplateField>|Displays user-defined content for each item in the GridView control according to a specified template. This column field type enables you to create a custom column field.|  \\n  \\n To define a column field collection declaratively, first add opening and closing `<Columns>` tags between the opening and closing tags of the GridView control. Next, list the column fields that you want to include between the opening and closing `<Columns>` tags. The columns specified are added to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection in the order listed. The <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection stores all the column fields in the control and enables you to programmatically manage the column fields in the GridView control.  \\n  \\n Explicitly declared column fields can be displayed in combination with automatically generated column fields. When both are used, explicitly declared column fields are rendered first, followed by the automatically generated column fields.  \\n  \\n> [!NOTE]\\n>  Automatically generated column fields are not added to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection.  \\n  \\n<a name=\\\"binding_to_data\\\"></a>   \\n## Binding to Data  \\n The GridView control can be bound to a data source control (such as the <xref:System.Web.UI.WebControls.SqlDataSource> control or <xref:System.Web.UI.WebControls.ObjectDataSource> control) or to any data source collection that implements the <xref:System.Collections.IEnumerable?displayProperty=fullName> interface, such as <xref:System.Data.DataView?displayProperty=fullName>, <xref:System.Collections.ArrayList?displayProperty=fullName>, <xref:System.Collections.Generic.List%601?displayProperty=fullName>, or other collection types. Use one of the following methods to bind the GridView control to the appropriate data source type:  \\n  \\n-   To bind to a data source control, set the <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property of the GridView control to the <xref:System.Web.UI.Control.ID%2A> value of the data source control. The GridView control automatically binds to the specified data source control and can take advantage of the data source control's capabilities to perform sorting, updating, deleting, and paging. This is the preferred method to bind to data.  \\n  \\n-   To bind to a data source that implements the <xref:System.Collections.IEnumerable?displayProperty=fullName> interface, programmatically set the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> property of the GridView control to the data source and then call the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method. When using this method, the GridView control does not provide built-in sort, update, delete, and paging functionality. You need to provide this functionality by using the appropriate event.  \\n  \\n For more information about data binding, see [ASP.NET Data Access Content Map](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2).  \\n  \\n> [!NOTE]\\n>  This control can be used to display user input, which might include malicious client script. Check any information that is sent from a client for executable script, SQL statements, or other code before displaying it in your application. Whenever possible, it is strongly recommended that values are HTML-encoded before they are displayed in this control (the <xref:System.Web.UI.WebControls.BoundField> class HTML-encodes values by default). ASP.NET provides an input request validation feature to block script and HTML in user input. Validation server controls are also provided to assess user input. For more information, see [Introduction to the Validation Controls](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190).  \\n  \\n<a name=\\\"data_operations\\\"></a>   \\n## Data Operations  \\n The GridView control provides many built-in capabilities that allow the user to sort, update, delete, select, and page through items in the control. When the GridView control is bound to a data source control, the GridView control can take advantage of the data source control's capabilities and provide automatic sort, update, and delete functionality.  \\n  \\n> [!NOTE]\\n>  The GridView control can provide support for sorting, updating, and deleting with other types of data sources. However, you will need to provide an appropriate event handler with the implementation for these operations.  \\n  \\n Sorting allows the user to sort the items in the GridView control with respect to a specific column by clicking on the column's header. To enable sorting, set the <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> property to `true`.  \\n  \\n The automatic updating, deleting, and selection functionalities are enabled when a button in a <xref:System.Web.UI.WebControls.ButtonField> or <xref:System.Web.UI.WebControls.TemplateField> column field, with a command name of \\\"Edit\\\", \\\"Delete\\\", and \\\"Select\\\", respectively, is clicked. The GridView control can automatically add a <xref:System.Web.UI.WebControls.CommandField> column field with an Edit, Delete, or Select button if the <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A>, <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>, or <xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A> property is set to `true`, respectively.  \\n  \\n> [!NOTE]\\n>  Inserting records into the data source is not directly supported by the GridView control. However, it is possible to insert records by using the GridView control in conjunction with the `DetailsView` or `FormView` control. For more information, see <xref:System.Web.UI.WebControls.DetailsView> or <xref:System.Web.UI.WebControls.FormView>, respectively.  \\n  \\n Instead of displaying all the records in the data source at the same time, the GridView control can automatically break the records up into pages. To enable paging, set the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`.  \\n  \\n> [!NOTE]\\n>  The GridView control is re-created on postback based on the information that is stored in <xref:System.Web.UI.PageStatePersister.ViewState%2A>. If the GridView control includes a <xref:System.Web.UI.WebControls.TemplateField> or a <xref:System.Web.UI.WebControls.CommandField> with the <xref:System.Web.UI.WebControls.CommandField.CausesValidation%2A> property set to `true`, then the <xref:System.Web.UI.Page.EnableViewState%2A> property must also be set to `true` to ensure that concurrent data operations, such as updates and deletes, apply to the appropriate row.  \\n  \\n<a name=\\\"customizing_the_user_interface\\\"></a>   \\n## Customizing the User Interface  \\n You can customize the appearance of the GridView control by setting the style properties for the different parts of the control. The following table lists the different style properties.  \\n  \\n|Style property|Description|  \\n|--------------------|-----------------|  \\n|<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>|The style settings for the alternating data rows in the GridView control. When this property is set, the data rows are displayed alternating between the <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> settings and the <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> settings.|  \\n|<xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>|The style settings for the row being edited in the GridView control.|  \\n|<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>|The style settings for the empty data row displayed in the GridView control when the data source does not contain any records.|  \\n|<xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>|The style settings for the footer row of the GridView control.|  \\n|<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>|The style settings for the header row of the GridView control.|  \\n|<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>|The style settings for the pager row of the GridView control.|  \\n|<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>|The style settings for the data rows in the GridView control. When the <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> property is also set, the data rows are displayed alternating between the <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> settings and the <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> settings.|  \\n|<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>|The style settings for the selected row in the GridView control.|  \\n|<xref:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle%2A>|The style setting for the data column the data is sorted by in the GridView control. When this style is set, the style (for example, highlighted column) is applied to cells when the data is sorted in ascending order.|  \\n|<xref:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle%2A>|The style setting for the data column the data is sorted by in the GridView control. When this style is set, an arrow indicating the data is sorted ascending is placed on the header of the GridView control when the data is sorted in ascending order.|  \\n|<xref:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle%2A>|The style setting for the data column the data is sorted by in the GridView control. When this style is set, the style (for example, highlighted column) is applied to cells when the data is sorted in descending order.|  \\n|<xref:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle%2A>|The style setting for the data column the data is sorted by in the GridView control. When this style is set, an arrow pointing down is placed on the header of the GridView when the data is sorted in descending order.|  \\n  \\n You can also show or hide different parts of the control. The following table lists the properties that control which parts are shown or hidden.  \\n  \\n|Property|Description|  \\n|--------------|-----------------|  \\n|<xref:System.Web.UI.WebControls.GridView.ShowFooter%2A>|Shows or hides the footer section of the GridView control.|  \\n|<xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>|Shows or hides the header section of the GridView control.|  \\n  \\n<a name=\\\"events\\\"></a>   \\n## Events  \\n The GridView control provides several events that you can program against. This enables you to run a custom routine whenever an event occurs. The following table lists the events that are supported by the GridView control.  \\n  \\n|Event|Description|  \\n|-----------|-----------------|  \\n|<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>|Occurs when one of the pager buttons is clicked, but after the GridView control handles the paging operation. This event is commonly used when you need to perform a task after the user navigates to a different page in the control.|  \\n|<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>|Occurs when one of the pager buttons is clicked, but before the GridView control handles the paging operation. This event is often used to cancel the paging operation.|  \\n|<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>|Occurs when a row's Cancel button is clicked, but before the GridView control exits edit mode. This event is often used to stop the canceling operation.|  \\n|<xref:System.Web.UI.WebControls.GridView.RowCommand>|Occurs when a button is clicked in the GridView control. This event is often used to perform a task when a button is clicked in the control.|  \\n|<xref:System.Web.UI.WebControls.GridView.RowCreated>|Occurs when a new row is created in the GridView control. This event is often used to modify the contents of a row when the row is created.|  \\n|<xref:System.Web.UI.WebControls.GridView.RowDataBound>|Occurs when a data row is bound to data in the GridView control. This event is often used to modify the contents of a row when the row is bound to data.|  \\n|<xref:System.Web.UI.WebControls.GridView.RowDeleted>|Occurs when a row's Delete button is clicked, but after the GridView control deletes the record from the data source. This event is often used to check the results of the delete operation.|  \\n|<xref:System.Web.UI.WebControls.GridView.RowDeleting>|Occurs when a row's Delete button is clicked, but before the GridView control deletes the record from the data source. This event is often used to cancel the deleting operation.|  \\n|<xref:System.Web.UI.WebControls.GridView.RowEditing>|Occurs when a row's Edit button is clicked, but before the GridView control enters edit mode. This event is often used to cancel the editing operation.|  \\n|<xref:System.Web.UI.WebControls.GridView.RowUpdated>|Occurs when a row's Update button is clicked, but after the GridView control updates the row. This event is often used to check the results of the update operation.|  \\n|<xref:System.Web.UI.WebControls.GridView.RowUpdating>|Occurs when a row's Update button is clicked, but before the GridView control updates the row. This event is often used to cancel the updating operation.|  \\n|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|Occurs when a row's Select button is clicked, but after the GridView control handles the select operation. This event is often used to perform a task after a row is selected in the control.|  \\n|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>|Occurs when a row's Select button is clicked, but before the GridView control handles the select operation. This event is often used to cancel the selection operation.|  \\n|<xref:System.Web.UI.WebControls.GridView.Sorted>|Occurs when the hyperlink to sort a column is clicked, but after the GridView control handles the sort operation. This event is commonly used to perform a task after the user clicks a hyperlink to sort a column.|  \\n|<xref:System.Web.UI.WebControls.GridView.Sorting>|Occurs when the hyperlink to sort a column is clicked, but before the GridView control handles the sort operation. This event is often used to cancel the sorting operation or to perform a custom sorting routine.|  \\n  \\n<a name=\\\"accessibility\\\"></a>   \\n## Accessibility  \\n For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"declarative_syntax\\\"></a>   \\n## Declarative Syntax  \\n  \\n```  \\n<asp:GridView  \\n    AccessKey=\\\"string\\\"  \\n    AllowPaging=\\\"True|False\\\"  \\n    AllowSorting=\\\"True|False\\\"  \\n    AutoGenerateColumns=\\\"True|False\\\"  \\n    AutoGenerateDeleteButton=\\\"True|False\\\"  \\n    AutoGenerateEditButton=\\\"True|False\\\"  \\n    AutoGenerateSelectButton=\\\"True|False\\\"  \\n    BackColor=\\\"color name|#dddddd\\\"  \\n    BackImageUrl=\\\"uri\\\"  \\n    BorderColor=\\\"color name|#dddddd\\\"  \\n    BorderStyle=\\\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  \\n        Inset|Outset\\\"  \\n    BorderWidth=\\\"size\\\"  \\n    Caption=\\\"string\\\"  \\n    CaptionAlign=\\\"NotSet|Top|Bottom|Left|Right\\\"  \\n    CellPadding=\\\"integer\\\"  \\n    CellSpacing=\\\"integer\\\"  \\n    CssClass=\\\"string\\\"  \\n    DataKeyNames=\\\"string\\\"  \\n    DataMember=\\\"string\\\"  \\n    DataSource=\\\"string\\\"  \\n    DataSourceID=\\\"string\\\"  \\n    EditIndex=\\\"integer\\\"  \\n    EmptyDataText=\\\"string\\\"  \\n    Enabled=\\\"True|False\\\"  \\n    EnableSortingAndPagingCallbacks=\\\"True|False\\\"  \\n    EnableTheming=\\\"True|False\\\"  \\n    EnableViewState=\\\"True|False\\\"  \\n    Font-Bold=\\\"True|False\\\"  \\n    Font-Italic=\\\"True|False\\\"  \\n    Font-Names=\\\"string\\\"  \\n    Font-Overline=\\\"True|False\\\"  \\n    Font-Size=\\\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  \\n        Large|X-Large|XX-Large\\\"  \\n    Font-Strikeout=\\\"True|False\\\"  \\n    Font-Underline=\\\"True|False\\\"  \\n    ForeColor=\\\"color name|#dddddd\\\"  \\n    GridLines=\\\"None|Horizontal|Vertical|Both\\\"  \\n    Height=\\\"size\\\"  \\n    HorizontalAlign=\\\"NotSet|Left|Center|Right|Justify\\\"  \\n    ID=\\\"string\\\"  \\n    OnDataBinding=\\\"DataBinding event handler\\\"  \\n    OnDataBound=\\\"DataBound event handler\\\"  \\n    OnDisposed=\\\"Disposed event handler\\\"  \\n    OnInit=\\\"Init event handler\\\"  \\n    OnLoad=\\\"Load event handler\\\"  \\n    OnPageIndexChanged=\\\"PageIndexChanged event handler\\\"  \\n    OnPageIndexChanging=\\\"PageIndexChanging event handler\\\"  \\n    OnPreRender=\\\"PreRender event handler\\\"  \\n    OnRowCancelingEdit=\\\"RowCancelingEdit event handler\\\"  \\n    OnRowCommand=\\\"RowCommand event handler\\\"  \\n    OnRowCreated=\\\"RowCreated event handler\\\"  \\n    OnRowDataBound=\\\"RowDataBound event handler\\\"  \\n    OnRowDeleted=\\\"RowDeleted event handler\\\"  \\n    OnRowDeleting=\\\"RowDeleting event handler\\\"  \\n    OnRowEditing=\\\"RowEditing event handler\\\"  \\n    OnRowUpdated=\\\"RowUpdated event handler\\\"  \\n    OnRowUpdating=\\\"RowUpdating event handler\\\"  \\n    OnSelectedIndexChanged=\\\"SelectedIndexChanged event handler\\\"  \\n    OnSelectedIndexChanging=\\\"SelectedIndexChanging event handler\\\"  \\n    OnSorted=\\\"Sorted event handler\\\"  \\n    OnSorting=\\\"Sorting event handler\\\"  \\n    OnUnload=\\\"Unload event handler\\\"  \\n    PageIndex=\\\"integer\\\"  \\n    PagerSettings-FirstPageImageUrl=\\\"uri\\\"  \\n    PagerSettings-FirstPageText=\\\"string\\\"  \\n    PagerSettings-LastPageImageUrl=\\\"uri\\\"  \\n    PagerSettings-LastPageText=\\\"string\\\"  \\n    PagerSettings-Mode=\\\"NextPrevious|Numeric|NextPreviousFirstLast|  \\n        NumericFirstLast\\\"  \\n    PagerSettings-NextPageImageUrl=\\\"uri\\\"  \\n    PagerSettings-NextPageText=\\\"string\\\"  \\n    PagerSettings-PageButtonCount=\\\"integer\\\"  \\n    PagerSettings-Position=\\\"Bottom|Top|TopAndBottom\\\"  \\n    PagerSettings-PreviousPageImageUrl=\\\"uri\\\"  \\n    PagerSettings-PreviousPageText=\\\"string\\\"  \\n    PagerSettings-Visible=\\\"True|False\\\"  \\n    PageSize=\\\"integer\\\"  \\n    RowHeaderColumn=\\\"string\\\"  \\n    runat=\\\"server\\\"  \\n    SelectedIndex=\\\"integer\\\"  \\n    ShowFooter=\\\"True|False\\\"  \\n    ShowHeader=\\\"True|False\\\"  \\n    SkinID=\\\"string\\\"  \\n    Style=\\\"string\\\"  \\n    TabIndex=\\\"integer\\\"  \\n    ToolTip=\\\"string\\\"  \\n    UseAccessibleHeader=\\\"True|False\\\"  \\n    Visible=\\\"True|False\\\"  \\n    Width=\\\"size\\\"  \\n>  \\n        <AlternatingRowStyle />  \\n        <Columns>  \\n                <asp:BoundField  \\n                    AccessibleHeaderText=\\\"string\\\"  \\n                    ApplyFormatInEditMode=\\\"True|False\\\"  \\n                    ConvertEmptyStringToNull=\\\"True|False\\\"  \\n                    DataField=\\\"string\\\"  \\n                    DataFormatString=\\\"string\\\"  \\n                    FooterText=\\\"string\\\"  \\n                    HeaderImageUrl=\\\"uri\\\"  \\n                    HeaderText=\\\"string\\\"  \\n                    HtmlEncode=\\\"True|False\\\"  \\n                    InsertVisible=\\\"True|False\\\"  \\n                    NullDisplayText=\\\"string\\\"  \\n                    ReadOnly=\\\"True|False\\\"  \\n                    ShowHeader=\\\"True|False\\\"  \\n                    SortExpression=\\\"string\\\"  \\n                    Visible=\\\"True|False\\\"  \\n>  \\n                        <ControlStyle />  \\n                        <FooterStyle />  \\n                        <HeaderStyle />  \\n                        <ItemStyle />  \\n                </asp:BoundField>  \\n                <asp:ButtonField  \\n                    AccessibleHeaderText=\\\"string\\\"  \\n                    ButtonType=\\\"Button|Image|Link\\\"  \\n                    CausesValidation=\\\"True|False\\\"  \\n                    CommandName=\\\"string\\\"  \\n                    DataTextField=\\\"string\\\"  \\n                    DataTextFormatString=\\\"string\\\"  \\n                    FooterText=\\\"string\\\"  \\n                    HeaderImageUrl=\\\"uri\\\"  \\n                    HeaderText=\\\"string\\\"  \\n                    ImageUrl=\\\"uri\\\"  \\n                    InsertVisible=\\\"True|False\\\"  \\n                    ShowHeader=\\\"True|False\\\"  \\n                    SortExpression=\\\"string\\\"  \\n                    Text=\\\"string\\\"  \\n                    ValidationGroup=\\\"string\\\"  \\n                    Visible=\\\"True|False\\\"  \\n>  \\n                        <ControlStyle />  \\n                        <FooterStyle />  \\n                        <HeaderStyle />  \\n                        <ItemStyle />  \\n                </asp:ButtonField>  \\n                <asp:CheckBoxField  \\n                    AccessibleHeaderText=\\\"string\\\"  \\n                    DataField=\\\"string\\\"  \\n                    FooterText=\\\"string\\\"  \\n                    HeaderImageUrl=\\\"uri\\\"  \\n                    HeaderText=\\\"string\\\"  \\n                    InsertVisible=\\\"True|False\\\"  \\n                    ReadOnly=\\\"True|False\\\"  \\n                    ShowHeader=\\\"True|False\\\"  \\n                    SortExpression=\\\"string\\\"  \\n                    Text=\\\"string\\\"  \\n                    Visible=\\\"True|False\\\"  \\n>  \\n                        <ControlStyle />  \\n                        <FooterStyle />  \\n                        <HeaderStyle />  \\n                        <ItemStyle />  \\n                </asp:CheckBoxField>  \\n                <asp:CommandField  \\n                    AccessibleHeaderText=\\\"string\\\"  \\n                    ButtonType=\\\"Button|Image|Link\\\"  \\n                    CancelImageUrl=\\\"uri\\\"  \\n                    CancelText=\\\"string\\\"  \\n                    CausesValidation=\\\"True|False\\\"  \\n                    DeleteImageUrl=\\\"uri\\\"  \\n                    DeleteText=\\\"string\\\"  \\n                    EditImageUrl=\\\"uri\\\"  \\n                    EditText=\\\"string\\\"  \\n                    FooterText=\\\"string\\\"  \\n                    HeaderImageUrl=\\\"uri\\\"  \\n                    HeaderText=\\\"string\\\"  \\n                    InsertImageUrl=\\\"uri\\\"  \\n                    InsertText=\\\"string\\\"  \\n                    InsertVisible=\\\"True|False\\\"  \\n                    NewImageUrl=\\\"uri\\\"  \\n                    NewText=\\\"string\\\"  \\n                    SelectImageUrl=\\\"uri\\\"  \\n                    SelectText=\\\"string\\\"  \\n                    ShowCancelButton=\\\"True|False\\\"  \\n                    ShowDeleteButton=\\\"True|False\\\"  \\n                    ShowEditButton=\\\"True|False\\\"  \\n                    ShowHeader=\\\"True|False\\\"  \\n                    ShowInsertButton=\\\"True|False\\\"  \\n                    ShowSelectButton=\\\"True|False\\\"  \\n                    SortExpression=\\\"string\\\"  \\n                    UpdateImageUrl=\\\"uri\\\"  \\n                    UpdateText=\\\"string\\\"  \\n                    ValidationGroup=\\\"string\\\"  \\n                    Visible=\\\"True|False\\\"  \\n>  \\n                        <ControlStyle />  \\n                        <FooterStyle />  \\n                        <HeaderStyle />  \\n                        <ItemStyle />  \\n                </asp:CommandField>  \\n                <asp:DynamicField  \\n                    AccessibleHeaderText=\\\"string\\\"  \\n                    ApplyFormatInEditMode=\\\"True|False\\\"  \\n                    ConvertEmptyStringToNull=\\\"True|False\\\"  \\n                    DataField=\\\"string\\\"  \\n                    DataFormatString=\\\"string\\\"  \\n                    FooterText=\\\"string\\\"  \\n                    HeaderImageUrl=\\\"uri\\\"  \\n                    HeaderText=\\\"string\\\"  \\n                    HtmlEncode=\\\"True|False\\\"  \\n                    InsertVisible=\\\"True|False\\\"  \\n                    NullDisplayText=\\\"string\\\"  \\n                    ShowHeader=\\\"True|False\\\"  \\n                    UIHint=\\\"string\\\"  \\n                    Visible=\\\"True|False\\\"  \\n>  \\n                        <ControlStyle />  \\n                        <FooterStyle />  \\n                        <HeaderStyle />  \\n                        <ItemStyle />  \\n                </asp:DynamicField>  \\n                <asp:HyperLinkField  \\n                    AccessibleHeaderText=\\\"string\\\"  \\n                    DataNavigateUrlFields=\\\"string\\\"  \\n                    DataNavigateUrlFormatString=\\\"string\\\"  \\n                    DataTextField=\\\"string\\\"  \\n                    DataTextFormatString=\\\"string\\\"  \\n                    FooterText=\\\"string\\\"  \\n                    HeaderImageUrl=\\\"uri\\\"  \\n                    HeaderText=\\\"string\\\"  \\n                    InsertVisible=\\\"True|False\\\"  \\n                    NavigateUrl=\\\"uri\\\"  \\n                    ShowHeader=\\\"True|False\\\"  \\n                    SortExpression=\\\"string\\\"  \\n                    Target=\\\"string|_blank|_parent|_search|_self|_top\\\"  \\n                    Text=\\\"string\\\"  \\n                    Visible=\\\"True|False\\\"  \\n>  \\n                        <ControlStyle />  \\n                        <FooterStyle />  \\n                        <HeaderStyle />  \\n                        <ItemStyle />  \\n                </asp:HyperLinkField>  \\n                <asp:ImageField  \\n                    AccessibleHeaderText=\\\"string\\\"  \\n                    AlternateText=\\\"string\\\"  \\n                    ConvertEmptyStringToNull=\\\"True|False\\\"  \\n                    DataAlternateTextField=\\\"string\\\"  \\n                    DataAlternateTextFormatString=\\\"string\\\"  \\n                    DataImageUrlField=\\\"string\\\"  \\n                    DataImageUrlFormatString=\\\"string\\\"  \\n                    FooterText=\\\"string\\\"  \\n                    HeaderImageUrl=\\\"uri\\\"  \\n                    HeaderText=\\\"string\\\"  \\n                    InsertVisible=\\\"True|False\\\"  \\n                    NullDisplayText=\\\"string\\\"  \\n                    NullImageUrl=\\\"uri\\\"  \\n                    ReadOnly=\\\"True|False\\\"  \\n                    ShowHeader=\\\"True|False\\\"  \\n                    SortExpression=\\\"string\\\"  \\n                    Visible=\\\"True|False\\\"  \\n>  \\n                        <ControlStyle />  \\n                        <FooterStyle />  \\n                        <HeaderStyle />  \\n                        <ItemStyle />  \\n                </asp:ImageField>  \\n                <asp:TemplateField  \\n                    AccessibleHeaderText=\\\"string\\\"  \\n                    ConvertEmptyStringToNull=\\\"True|False\\\"  \\n                    FooterText=\\\"string\\\"  \\n                    HeaderImageUrl=\\\"uri\\\"  \\n                    HeaderText=\\\"string\\\"  \\n                    InsertVisible=\\\"True|False\\\"  \\n                    ShowHeader=\\\"True|False\\\"  \\n                    SortExpression=\\\"string\\\"  \\n                    Visible=\\\"True|False\\\"  \\n>  \\n                            <ControlStyle />  \\n                            <FooterStyle />  \\n                            <HeaderStyle />  \\n                            <ItemStyle />  \\n                        <AlternatingItemTemplate>  \\n                            <!-- child controls -->  \\n                        </AlternatingItemTemplate>  \\n                        <EditItemTemplate>  \\n                            <!-- child controls -->  \\n                        </EditItemTemplate>  \\n                        <FooterTemplate>  \\n                            <!-- child controls -->  \\n                        </FooterTemplate>  \\n                        <HeaderTemplate>  \\n                            <!-- child controls -->  \\n                        </HeaderTemplate>  \\n                        <InsertItemTemplate>  \\n                            <!-- child controls -->  \\n                        </InsertItemTemplate>  \\n                        <ItemTemplate>  \\n                            <!-- child controls -->  \\n                        </ItemTemplate>  \\n                </asp:TemplateField>  \\n        </Columns>  \\n        <EditRowStyle />  \\n        <EmptyDataRowStyle />  \\n        <EmptyDataTemplate>  \\n            <!-- child controls -->  \\n        </EmptyDataTemplate>  \\n        <FooterStyle />  \\n        <HeaderStyle />  \\n        <PagerSettings  \\n            FirstPageImageUrl=\\\"uri\\\"  \\n            FirstPageText=\\\"string\\\"  \\n            LastPageImageUrl=\\\"uri\\\"  \\n            LastPageText=\\\"string\\\"  \\n            Mode=\\\"NextPrevious|Numeric|NextPreviousFirstLast|  \\n                NumericFirstLast\\\"  \\n            NextPageImageUrl=\\\"uri\\\"  \\n            NextPageText=\\\"string\\\"  \\n            OnPropertyChanged=\\\"PropertyChanged event handler\\\"  \\n            PageButtonCount=\\\"integer\\\"  \\n            Position=\\\"Bottom|Top|TopAndBottom\\\"  \\n            PreviousPageImageUrl=\\\"uri\\\"  \\n            PreviousPageText=\\\"string\\\"  \\n            Visible=\\\"True|False\\\"  \\n        />  \\n        <PagerStyle />  \\n        <PagerTemplate>  \\n            <!-- child controls -->  \\n        </PagerTemplate>  \\n        <RowStyle />  \\n        <SelectedRowStyle />  \\n</asp:GridView>  \\n```\"\n  example:\n  - \"A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882).  \\n  \\n The following example demonstrates how use the GridView control to display the values from the Customers table of the AdventureWorksLT sample database in Microsoft SQL Server. The values are retrieved using a <xref:System.Web.UI.WebControls.SqlDataSource> control.  \\n  \\n [!code-vb[GridViewSimple#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_194_1.aspx)]\\n [!code-cs[GridViewSimple#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_194_1.aspx)]  \\n  \\n The following example demonstrates how to use the GridView control and a <xref:System.Web.UI.WebControls.LinqDataSource> control so that you can edit records.  \\n  \\n [!code-vb[GridViewEdit#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_194_2.aspx)]\\n [!code-cs[GridViewEdit#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_194_2.aspx)]  \\n  \\n For an example demonstrating how to access values in cells, see <xref:System.Web.UI.WebControls.GridViewRow>.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultEvent(\"SelectedIndexChanged\")]\n\n      [System.ComponentModel.Designer(\"System.Web.UI.Design.WebControls.GridViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      [System.Web.UI.ControlValueProperty(\"SelectedValue\")]\n\n      [System.Web.UI.DataKeyProperty(\"SelectedPersistedDataKey\")]\n\n      [System.Web.UI.SupportsEventValidation]\n\n      public class GridView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataKeysControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IDataBoundListControl, System.Web.UI.WebControls.IFieldControl, System.Web.UI.WebControls.IPersistedSelector, System.Web.UI.WebControls.IPostBackContainer\n  inheritance:\n  - System.Object\n  - System.Web.UI.Control\n  - System.Web.UI.WebControls.WebControl\n  - System.Web.UI.WebControls.BaseDataBoundControl\n  - System.Web.UI.WebControls.DataBoundControl\n  - System.Web.UI.WebControls.CompositeDataBoundControl\n  implements:\n  - System.Web.UI.ICallbackEventHandler\n  - System.Web.UI.IDataKeysControl\n  - System.Web.UI.IPostBackEventHandler\n  - System.Web.UI.WebControls.ICallbackContainer\n  - System.Web.UI.WebControls.IDataBoundListControl\n  - System.Web.UI.WebControls.IFieldControl\n  - System.Web.UI.WebControls.IPersistedSelector\n  - System.Web.UI.WebControls.IPostBackContainer\n  inheritedMembers:\n  - System.Web.UI.Control.Adapter\n  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)\n  - System.Web.UI.Control.AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)\n  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory\n  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.BindingContainer\n  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)\n  - System.Web.UI.Control.ChildControlsCreated\n  - System.Web.UI.Control.ClearCachedClientID\n  - System.Web.UI.Control.ClearChildControlState\n  - System.Web.UI.Control.ClearChildState\n  - System.Web.UI.Control.ClearChildViewState\n  - System.Web.UI.Control.ClearEffectiveClientIDMode\n  - System.Web.UI.Control.ClientID\n  - System.Web.UI.Control.ClientIDMode\n  - System.Web.UI.Control.ClientIDSeparator\n  - System.Web.UI.Control.Context\n  - System.Web.UI.Control.CreateControlCollection\n  - System.Web.UI.Control.DataBind(System.Boolean)\n  - System.Web.UI.Control.DataBindChildren\n  - System.Web.UI.Control.DataBinding\n  - System.Web.UI.Control.DataItemContainer\n  - System.Web.UI.Control.DataKeysContainer\n  - System.Web.UI.Control.DesignMode\n  - System.Web.UI.Control.Dispose\n  - System.Web.UI.Control.Disposed\n  - System.Web.UI.Control.EnableViewState\n  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.EnsureChildControls\n  - System.Web.UI.Control.EnsureID\n  - System.Web.UI.Control.Events\n  - System.Web.UI.Control.FindControl(System.String)\n  - System.Web.UI.Control.FindControl(System.String,System.Int32)\n  - System.Web.UI.Control.Focus\n  - System.Web.UI.Control.GetDesignModeState\n  - System.Web.UI.Control.GetRouteUrl(System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)\n  - System.Web.UI.Control.HasChildViewState\n  - System.Web.UI.Control.HasControls\n  - System.Web.UI.Control.HasEvents\n  - System.Web.UI.Control.ID\n  - System.Web.UI.Control.IdSeparator\n  - System.Web.UI.Control.Init\n  - System.Web.UI.Control.IsChildControlStateCleared\n  - System.Web.UI.Control.IsLiteralContent\n  - System.Web.UI.Control.IsTrackingViewState\n  - System.Web.UI.Control.IsViewStateEnabled\n  - System.Web.UI.Control.Load\n  - System.Web.UI.Control.LoadViewStateByID\n  - System.Web.UI.Control.MapPathSecure(System.String)\n  - System.Web.UI.Control.NamingContainer\n  - System.Web.UI.Control.OnDataBinding(System.EventArgs)\n  - System.Web.UI.Control.OnUnload(System.EventArgs)\n  - System.Web.UI.Control.OpenFile(System.String)\n  - System.Web.UI.Control.Page\n  - System.Web.UI.Control.Parent\n  - System.Web.UI.Control.PreRender\n  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)\n  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)\n  - System.Web.UI.Control.RenderingCompatibility\n  - System.Web.UI.Control.ResolveAdapter\n  - System.Web.UI.Control.ResolveClientUrl(System.String)\n  - System.Web.UI.Control.ResolveUrl(System.String)\n  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)\n  - System.Web.UI.Control.Site\n  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions\n  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.TemplateControl\n  - System.Web.UI.Control.TemplateSourceDirectory\n  - System.Web.UI.Control.UniqueID\n  - System.Web.UI.Control.Unload\n  - System.Web.UI.Control.ValidateRequestMode\n  - System.Web.UI.Control.ViewState\n  - System.Web.UI.Control.ViewStateIgnoresCase\n  - System.Web.UI.Control.ViewStateMode\n  - System.Web.UI.Control.Visible\n  - System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState\n  - System.Web.UI.WebControls.BaseDataBoundControl.DataBound\n  - System.Web.UI.WebControls.BaseDataBoundControl.DataSource\n  - System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound\n  - System.Web.UI.WebControls.BaseDataBoundControl.Initialized\n  - System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID\n  - System.Web.UI.WebControls.BaseDataBoundControl.IsDataBindingAutomatic\n  - System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)\n  - System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding\n  - System.Web.UI.WebControls.BaseDataBoundControl.SupportsDisabledAttribute\n  - System.Web.UI.WebControls.CompositeDataBoundControl.Controls\n  - System.Web.UI.WebControls.CompositeDataBoundControl.CreateChildControls\n  - System.Web.UI.WebControls.CompositeDataBoundControl.InsertMethod\n  - System.Web.UI.WebControls.CompositeDataBoundControl.IsUsingModelBinders\n  - System.Web.UI.WebControls.DataBoundControl.CallingDataMethods\n  - System.Web.UI.WebControls.DataBoundControl.CreatingModelDataSource\n  - System.Web.UI.WebControls.DataBoundControl.DataMember\n  - System.Web.UI.WebControls.DataBoundControl.DataSourceID\n  - System.Web.UI.WebControls.DataBoundControl.DataSourceObject\n  - System.Web.UI.WebControls.DataBoundControl.GetData\n  - System.Web.UI.WebControls.DataBoundControl.GetDataSource\n  - System.Web.UI.WebControls.DataBoundControl.ItemType\n  - System.Web.UI.WebControls.DataBoundControl.MarkAsDataBound\n  - System.Web.UI.WebControls.DataBoundControl.OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs)\n  - System.Web.UI.WebControls.DataBoundControl.OnLoad(System.EventArgs)\n  - System.Web.UI.WebControls.DataBoundControl.PerformSelect\n  - System.Web.UI.WebControls.DataBoundControl.SelectArguments\n  - System.Web.UI.WebControls.DataBoundControl.SelectMethod\n  - System.Web.UI.WebControls.DataBoundControl.ValidateDataSource(System.Object)\n  - System.Web.UI.WebControls.WebControl.AccessKey\n  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)\n  - System.Web.UI.WebControls.WebControl.Attributes\n  - System.Web.UI.WebControls.WebControl.BackColor\n  - System.Web.UI.WebControls.WebControl.BorderColor\n  - System.Web.UI.WebControls.WebControl.BorderStyle\n  - System.Web.UI.WebControls.WebControl.BorderWidth\n  - System.Web.UI.WebControls.WebControl.ControlStyle\n  - System.Web.UI.WebControls.WebControl.ControlStyleCreated\n  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)\n  - System.Web.UI.WebControls.WebControl.CssClass\n  - System.Web.UI.WebControls.WebControl.DisabledCssClass\n  - System.Web.UI.WebControls.WebControl.Enabled\n  - System.Web.UI.WebControls.WebControl.EnableTheming\n  - System.Web.UI.WebControls.WebControl.Font\n  - System.Web.UI.WebControls.WebControl.ForeColor\n  - System.Web.UI.WebControls.WebControl.HasAttributes\n  - System.Web.UI.WebControls.WebControl.Height\n  - System.Web.UI.WebControls.WebControl.IsEnabled\n  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)\n  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.WebControls.WebControl.SkinID\n  - System.Web.UI.WebControls.WebControl.Style\n  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)\n  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)\n  - System.Web.UI.WebControls.WebControl.TabIndex\n  - System.Web.UI.WebControls.WebControl.TagName\n  - System.Web.UI.WebControls.WebControl.ToolTip\n  - System.Web.UI.WebControls.WebControl.Width\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: GridView()\n  nameWithType: GridView.GridView()\n  fullName: System.Web.UI.WebControls.GridView.GridView()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> class.\n  remarks: Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.GridView> class. To dynamically add a <xref:System.Web.UI.WebControls.GridView> control to a page, create a new <xref:System.Web.UI.WebControls.GridView> object, set its properties, and then add it to the <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> collection of a container control, such as <xref:System.Web.UI.WebControls.PlaceHolder>.\n  example:\n  - \"The following example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.GridView> control to a page.  \\n  \\n [!code-cs[GridViewCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_33_1.aspx)]\\n [!code-vb[GridViewCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_33_1.aspx)]\"\n  syntax:\n    content: public GridView ();\n    parameters: []\n  overload: System.Web.UI.WebControls.GridView.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.AllowCustomPaging\n  id: AllowCustomPaging\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: AllowCustomPaging\n  nameWithType: GridView.AllowCustomPaging\n  fullName: System.Web.UI.WebControls.GridView.AllowCustomPaging\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that indicates whether custom paging is enabled.\n  remarks: \"Paging enables you to display the contents of the <xref:System.Web.UI.WebControls.GridView> control in chunks. The number of items on a page is determined by the <xref:System.Web.UI.WebControls.GridView.PageSize%2A> property. Normally, every row in the data source is read every time the <xref:System.Web.UI.WebControls.GridView> control moves to a different page. This can consume a lot of resources when the total number of items in the data source is very large. Custom paging allows you to read just the items you need for a single page from the data source.  \\n  \\n To enable custom paging, set both the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> and AllowCustomPaging properties to `true`. In a handler for the <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> event, set the <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> property to the new page index value, set the <xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A> property to the total number of items in the data source, set the data source to return only the rows needed for the current page, and call the <xref:System.Web.UI.WebControls.GridView.DataBind%2A> method. The <xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A> property enables the control to determine the total number of pages; this value is normally determined automatically by reading all of the items.\"\n  syntax:\n    content: public virtual bool AllowCustomPaging { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if custom paging is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.AllowCustomPaging*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.AllowPaging\n  id: AllowPaging\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: AllowPaging\n  nameWithType: GridView.AllowPaging\n  fullName: System.Web.UI.WebControls.GridView.AllowPaging\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether the paging feature is enabled.\n  remarks: \"Instead of displaying all the records in the data source at the same time, the <xref:System.Web.UI.WebControls.GridView> control can automatically break the records up into pages. If the data source supports the paging capability, the <xref:System.Web.UI.WebControls.GridView> control can take advantage of that and provide built-in paging functionality. The paging feature can be used with any data source object that supports the <xref:System.Collections.ICollection?displayProperty=fullName> interface or a data source that supports paging capability.  \\n  \\n To enable the paging feature, set the AllowPaging property to `true`. By default, the <xref:System.Web.UI.WebControls.GridView> control displays 10 records on a page at a time. You can change the number of records displayed on a page by setting the <xref:System.Web.UI.WebControls.GridView.PageSize%2A> property. To determine the total number of pages required to display the data source contents, use the <xref:System.Web.UI.WebControls.GridView.PageCount%2A> property. You can determine the index of the currently displayed page by using the <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> property.  \\n  \\n When paging is enabled, an additional row called the pager row is automatically displayed in the <xref:System.Web.UI.WebControls.GridView> control. The pager row contains controls that allow the user to navigate to the other pages. You can control the settings of the pager row (such as the pager display mode, the number of page links to display at a time, and the pager control's text labels) by using the <xref:System.Web.UI.WebControls.GridView.PagerSettings%2A> property. The pager row can be displayed at the top, bottom, or both the top and bottom of the control by setting the <xref:System.Web.UI.WebControls.PagerSettings.Position%2A> property. You can also select from one of four built-in pager display modes by setting the <xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> property. The following table describes the built-in display modes.  \\n  \\n|Mode|Description|  \\n|----------|-----------------|  \\n|`PagerButton.NextPrevious`|A set of pagination controls consisting of previous and next buttons.|  \\n|`PagerButton.NextPreviousFirstLast`|A set of pagination controls consisting of previous, next, first, and last buttons.|  \\n|`PagerButton.Numeric`|A set of pagination controls consisting of numbered link buttons to access pages directly. This is the default mode.|  \\n|`PagerButton.NumericFirstLast`|A set of pagination controls consisting of numbered and first and last link buttons.|  \\n  \\n To control the appearance of the pager row (including its background color, font color, and position), use the <xref:System.Web.UI.WebControls.GridView.PagerStyle%2A> property.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Web.UI.WebControls.GridView> control automatically hides the pager row when the data source contains only one page of records.  \\n  \\n The <xref:System.Web.UI.WebControls.GridView> control also enables you to define a custom template for the pager row. For more information about creating a custom pager row template, see <xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A>.  \\n  \\n The <xref:System.Web.UI.WebControls.GridView> control provides several events that you can use to perform a custom action when paging occurs. The following table lists the available events.  \\n  \\n|Event|Description|  \\n|-----------|-----------------|  \\n|<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>|Occurs when one of the pager buttons is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation. This event is commonly used when you need to perform a task after the user navigates to a different page in the control.|  \\n|<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>|Occurs when one of the pager buttons is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation. This event is often used to cancel the paging operation.|\"\n  example:\n  - \"The following example demonstrates how to use the AllowPaging property to declaratively enable the paging feature in the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-vb[GridViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_198_1.aspx)]\\n [!code-cs[GridViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_198_1.aspx)]\"\n  syntax:\n    content: public virtual bool AllowPaging { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the paging feature is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.AllowPaging*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.AllowSorting\n  id: AllowSorting\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: AllowSorting\n  nameWithType: GridView.AllowSorting\n  fullName: System.Web.UI.WebControls.GridView.AllowSorting\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether the sorting feature is enabled.\n  remarks: \"When a data source control that supports sorting is bound to the <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.GridView> control can take advantage of the data source control's capabilities and provide automatic sorting functionality. When the <xref:System.Web.UI.WebControls.GridView> control is bound to a data source by setting the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> property programmatically, you must provide the sorting functionality by using the <xref:System.Web.UI.WebControls.GridView.Sorting> event.  \\n  \\n> [!NOTE]\\n>  Different data sources have different requirements for enabling their sorting capabilities. To determine the requirements, see the documentation for the specific data source.  \\n  \\n To enable sorting, set the AllowSorting property to `true`. When sorting is enabled, the heading text for each column field with its <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> property set is displayed as a link button.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> property for an automatically generated columns field is automatically populated. If you define your own columns through the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection, you must set the <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> property for each column; otherwise, the column will not display the link button in the header.  \\n  \\n Clicking the link button for a column causes the items in the <xref:System.Web.UI.WebControls.GridView> control to be sorted based on the sort expression. Typically, the sort expression is simply the name of the field displayed in the column, which causes the <xref:System.Web.UI.WebControls.GridView> control to sort with respect to that column. To sort by multiple fields, use a sort expression that contains a comma-separated list of field names. You can determine the sort expression that the <xref:System.Web.UI.WebControls.GridView> control is applying by using the <xref:System.Web.UI.WebControls.GridView.SortExpression%2A> property. Clicking a column's link button repeatedly toggles the sort direction between ascending and descending order. To determine the current sort direction, use the <xref:System.Web.UI.WebControls.GridView.SortDirection%2A> property.  \\n  \\n The <xref:System.Web.UI.WebControls.GridView> control provides several events that you can use to perform a custom action when sorting occurs. The following table lists the available events.  \\n  \\n|Event|Description|  \\n|-----------|-----------------|  \\n|<xref:System.Web.UI.WebControls.GridView.Sorted>|Occurs when the hyperlink to sort a column is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the sort operation. This event is commonly used to perform a task after the user clicks a hyperlink to sort a column.|  \\n|<xref:System.Web.UI.WebControls.GridView.Sorting>|Occurs when the hyperlink to sort a column is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the sort operation. This event is often used to cancel the sorting operation or to perform a custom sorting routine.|\"\n  example:\n  - \"The following example demonstrates how to use the AllowSorting property to enable sorting in a <xref:System.Web.UI.WebControls.GridView> control when automatically generated columns are used.  \\n  \\n [!code-cs[GridViewAllowSorting#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1089_1.aspx)]\\n [!code-vb[GridViewAllowSorting#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1089_1.aspx)]  \\n  \\n The following example demonstrates how to use the AllowSorting property to enable sorting in a <xref:System.Web.UI.WebControls.GridView> control when a <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection is defined. An image is also programmatically added to the header of the column being sorted to indicate the sort direction. You must provide your own images for this sample to work.  \\n  \\n [!code-cs[GridViewAllowSortingColumns#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1089_2.aspx)]\\n [!code-vb[GridViewAllowSortingColumns#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1089_2.aspx)]\"\n  syntax:\n    content: public virtual bool AllowSorting { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the sorting feature is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.AllowSorting*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.AlternatingRowStyle\n  id: AlternatingRowStyle\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: AlternatingRowStyle\n  nameWithType: GridView.AlternatingRowStyle\n  fullName: System.Web.UI.WebControls.GridView.AlternatingRowStyle\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> object that enables you to set the appearance of alternating data rows in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"Use the AlternatingRowStyle property to control the appearance of alternating data rows in a <xref:System.Web.UI.WebControls.GridView> control. When this property is set, the data rows are displayed alternating between the <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> settings and the AlternatingRowStyle settings. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns. The properties can be set declaratively using one of the following methods:  \\n  \\n-   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `AlternatingRowStyle-ForeColor`).  \\n  \\n-   Nest an `<AlternatingRowStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n The properties can also be set programmatically in the form `Property.Subproperty` (for example, `AlternatingRowStyle.ForeColor`). Common settings usually include a custom background color, foreground color, and font properties.\"\n  example:\n  - \"The following example demonstrates how to use the AlternatingRowStyle property to declaratively define the style for alternating data rows in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-vb[GridViewRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1004_1.aspx)]\\n [!code-cs[GridViewRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1004_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get; }\n    return:\n      type: System.Web.UI.WebControls.TableItemStyle\n      description: A reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> that represents the style of alternating data rows in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.AlternatingRowStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.AutoGenerateColumns\n  id: AutoGenerateColumns\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: AutoGenerateColumns\n  nameWithType: GridView.AutoGenerateColumns\n  fullName: System.Web.UI.WebControls.GridView.AutoGenerateColumns\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether bound fields are automatically created for each field in the data source.\n  remarks: \"When the AutoGenerateColumns property is set to `true`, an <xref:System.Web.UI.WebControls.AutoGeneratedField> object is automatically created for each field in the data source. Each field is then displayed as a column in the <xref:System.Web.UI.WebControls.GridView> control in the order that the fields appear in the data source. This option provides a convenient way to display every field in the data source; however, you have limited control of how an automatically generated column field is displayed or behaves.  \\n  \\n Instead of letting the <xref:System.Web.UI.WebControls.GridView> control automatically generate the column fields, you can manually define the column fields by setting the AutoGenerateColumns property to `false` and then creating a custom `Columns` collection. In addition to bound column fields, you can also display a button column field, a check box column field, a command field, a hyperlink column field, an image field, or a column field based on your own custom-defined template.  \\n  \\n You can also combine explicitly declared column fields with automatically generated column fields. When both are used, explicitly declared column fields are rendered first, followed by the automatically generated column fields. Automatically generated bound column fields are not added to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection. For more information, see <xref:System.Web.UI.WebControls.GridView.Columns%2A>.  \\n  \\n If you set this property to `true` and set the <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> property to a model type, <xref:System.Web.DynamicData.DynamicField> controls are generated. If you do not set the <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> property, <xref:System.Web.UI.WebControls.BoundField> controls are generated. If you do not want <xref:System.Web.DynamicData.DynamicField> controls, you have the following options:  \\n  \\n-   Set the <xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A> property to `null` in the `Page_Load` event handler. In that case, <xref:System.Web.UI.WebControls.BoundField> controls are generated.  \\n  \\n-   Write custom code to automatically generate fields by creating and assigning your own <xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A> class and assigning an instance of it to the control.  \\n  \\n-   Set AutoGenerateColumns to `false`. In that case, no fields are generated, and you must manually specify fields using controls such as <xref:System.Web.UI.WebControls.BoundField> or <xref:System.Web.UI.WebControls.ImageField>.  \\n  \\n-   Do not set the <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> property. In that case, <xref:System.Web.UI.WebControls.BoundField> controls are generated.\"\n  example:\n  - \"The following example demonstrates how to use the AutoGenerateColumns property to automatically create bound field columns in a <xref:System.Web.UI.WebControls.GridView> control for each field in the data source.  \\n  \\n [!code-vb[GridViewSimple#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1153_1.aspx)]\\n [!code-cs[GridViewSimple#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1153_1.aspx)]\"\n  syntax:\n    content: public virtual bool AutoGenerateColumns { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically create bound fields for each field in the data source; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.AutoGenerateColumns*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton\n  id: AutoGenerateDeleteButton\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: AutoGenerateDeleteButton\n  nameWithType: GridView.AutoGenerateDeleteButton\n  fullName: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether a <xref href=\"System.Web.UI.WebControls.CommandField\"></xref> field column with a Delete button for each data row is automatically added to a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"When a data source control that supports deleting is bound to a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.GridView> control can take advantage of the data source control's capabilities and provide automatic deleting functionality.  \\n  \\n> [!NOTE]\\n>  For a data source control to delete data, it must be configured to delete data. To configure a data source control to delete records, see the documentation for the specific data source control.  \\n  \\n When the AutoGenerateDeleteButton property is set to `true`, a column (represented by a <xref:System.Web.UI.WebControls.CommandField> object) with a Delete button for each data row is automatically added to the <xref:System.Web.UI.WebControls.GridView> control. Clicking the Delete button for a row permanently removes that record from the data source.  \\n  \\n> [!NOTE]\\n>  You must also set the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property to identify the key field or fields of the data source for the automatic deleting feature to work.  \\n  \\n The <xref:System.Web.UI.WebControls.GridView> control provides several events that you can use to perform a custom action when a row is deleted. The following table lists the available events.  \\n  \\n|Event|Description|  \\n|-----------|-----------------|  \\n|<xref:System.Web.UI.WebControls.GridView.RowDeleted>|Occurs when a row's Delete button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control deletes the record from the data source. This event is often used to check the results of the delete operation.|  \\n|<xref:System.Web.UI.WebControls.GridView.RowDeleting>|Occurs when a row's Delete button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control deletes the record from the data source. This event is often used to cancel the deleting operation.|\"\n  example:\n  - \"The following example demonstrates how to use the AutoGenerateDeleteButton property to enable the automatic deleting feature of a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-vb[GridViewEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1343_1.aspx)]\\n [!code-cs[GridViewEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1343_1.aspx)]\"\n  syntax:\n    content: public virtual bool AutoGenerateDeleteButton { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically add a <xref href=\"System.Web.UI.WebControls.CommandField\"></xref> field column with a Delete button for each data row; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.AutoGenerateEditButton\n  id: AutoGenerateEditButton\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: AutoGenerateEditButton\n  nameWithType: GridView.AutoGenerateEditButton\n  fullName: System.Web.UI.WebControls.GridView.AutoGenerateEditButton\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether a <xref href=\"System.Web.UI.WebControls.CommandField\"></xref> field column with an Edit button for each data row is automatically added to a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"When a data source control that supports updating is bound to a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.GridView> control can take advantage of the data source control's capabilities and provide automatic updating functionality.  \\n  \\n> [!NOTE]\\n>  For a data source control to update data, it must be configured to update data. To configure a data source control to update records, see the documentation for the specific data source control.  \\n  \\n When the AutoGenerateEditButton property is set to `true`, a column (represented by a <xref:System.Web.UI.WebControls.CommandField> object) with an Edit button for each data row is automatically added to the <xref:System.Web.UI.WebControls.GridView> control. Clicking an Edit button for a row puts that row in edit mode. When a row is in edit mode, each column field in the row that is not read-only displays the appropriate input control, such as a <xref:System.Web.UI.WebControls.TextBox> control, for the field's data type. This allows the user to modify the field's value.  \\n  \\n When clicked, the Edit button is also replaced with an Update button and a Cancel button. Clicking the Update button updates the row in the data source with any value changes and returns the row to display mode. Clicking the Cancel button abandons any value changes and returns the row to display mode.  \\n  \\n> [!NOTE]\\n>  You can programmatically put a row in edit mode by setting the <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> property with the index of the row. To programmatically exit edit mode, set the <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> property to -1.  \\n  \\n When using the built-in updating functionality, you must set the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property with a comma-separated list of field names to identify the primary key field or fields of the data source; otherwise, the built-in updating functionality will not be able to update the correct record. When using automatically generated field columns (by setting the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property to `true`), the <xref:System.Web.UI.WebControls.GridView> control automatically ensures that the automatically generated field columns that correspond to the field or fields specified in the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property are read-only.  \\n  \\n You can control the appearance of a row that is in edit mode by using the <xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A> property. Common settings usually include a custom background color, foreground color, and font properties.  \\n  \\n The <xref:System.Web.UI.WebControls.GridView> control provides several events that you can use to perform a custom action when a row is updated. The following table lists the available events.  \\n  \\n|Event|Description|  \\n|-----------|-----------------|  \\n|<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>|Occurs when a row's Cancel button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control cancels out of edit mode. This event is often used to stop the canceling operation.|  \\n|<xref:System.Web.UI.WebControls.GridView.RowEditing>|Occurs when a row's Edit button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control enters edit mode. This event is often used to cancel the editing operation.|  \\n|<xref:System.Web.UI.WebControls.GridView.RowUpdated>|Occurs when a row's Update button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control updates the row. This event is often used to check the results of the update operation.|  \\n|<xref:System.Web.UI.WebControls.GridView.RowUpdating>|Occurs when a row's Update button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control updates the row. This event is often used to cancel the updating operation.|\"\n  example:\n  - \"The following example demonstrates how to use the AutoGenerateEditButton property to enable the automatic editing feature of the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-vb[GridViewEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1016_1.aspx)]\\n [!code-cs[GridViewEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1016_1.aspx)]\"\n  syntax:\n    content: public virtual bool AutoGenerateEditButton { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically add a <xref href=\"System.Web.UI.WebControls.CommandField\"></xref> field column with an Edit button for each data row; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.AutoGenerateEditButton*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton\n  id: AutoGenerateSelectButton\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: AutoGenerateSelectButton\n  nameWithType: GridView.AutoGenerateSelectButton\n  fullName: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether a <xref href=\"System.Web.UI.WebControls.CommandField\"></xref> field column with a Select button for each data row is automatically added to a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"When the AutoGenerateSelectButton property is set to `true`, a column (represented by a <xref:System.Web.UI.WebControls.CommandField> object) with a Select button for each data row is automatically added to the <xref:System.Web.UI.WebControls.GridView> control. Clicking the Select button for a row selects that row in the control, which sets the <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> property to the index of the row. To retrieve the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the selected row, use the <xref:System.Web.UI.WebControls.GridView.SelectedRow%2A> property. You can also get the primary key value for the selected record by using the <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> property. The <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> property contains the values of the key fields specified in the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property.  \\n  \\n> [!NOTE]\\n>  You can programmatically select a row by setting the <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> property. To cancel the selection of a row, set the <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> property to -1.  \\n  \\n You can control the appearance of the selected row by using the <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> property. Common settings usually include a custom background color, foreground color, and font properties.  \\n  \\n The <xref:System.Web.UI.WebControls.GridView> control provides several events that you can use to perform a custom action when a row is selected. The following table lists the available events.  \\n  \\n|Event|Description|  \\n|-----------|-----------------|  \\n|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|Occurs when a row's Select button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the select operation. This event is often used to perform a task after a row is selected in the control.|  \\n|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>|Occurs when a row's Select button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the select operation. This event is often used to cancel the selecting operation.|\"\n  example:\n  - \"The following example demonstrates how to use the AutoGenerateSelectButton property to enable the automatic selection feature of the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1205_1.aspx)]\\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1205_1.aspx)]\"\n  syntax:\n    content: public virtual bool AutoGenerateSelectButton { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to automatically add a <xref href=\"System.Web.UI.WebControls.CommandField\"></xref> field column with a Select button for each data row; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.BackImageUrl\n  id: BackImageUrl\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: BackImageUrl\n  nameWithType: GridView.BackImageUrl\n  fullName: System.Web.UI.WebControls.GridView.BackImageUrl\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the URL to an image to display in the background of a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"Use the BackImageUrl property to specify the URL to an image to display in the background of a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n> [!NOTE]\\n>  If the specified image is smaller than the <xref:System.Web.UI.WebControls.GridView> control, the image is tiled to fill in the background. If the image is larger than the control, the image is cropped.\"\n  example:\n  - \"The following example demonstrates how to use the BackImageUrl property to display a custom image in the background of a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewBackImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1003_1.aspx)]\\n [!code-vb[GridViewBackImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1003_1.aspx)]\"\n  syntax:\n    content: public virtual string BackImageUrl { get; set; }\n    return:\n      type: System.String\n      description: The URL of an image to display in the background of the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control. The default is an empty string (\"\"), which indicates that this property is not set.\n  overload: System.Web.UI.WebControls.GridView.BackImageUrl*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.BottomPagerRow\n  id: BottomPagerRow\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: BottomPagerRow\n  nameWithType: GridView.BottomPagerRow\n  fullName: System.Web.UI.WebControls.GridView.BottomPagerRow\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> object that represents the bottom pager row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"When paging is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`), an additional row called the pager row is automatically displayed in the <xref:System.Web.UI.WebControls.GridView> control. The pager row contains controls that allow the user to navigate to the other pages, and can be displayed at the top, the bottom, or both the top and bottom of the control. Use the BottomPagerRow property to programmatically access the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the bottom pager row in the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n> [!NOTE]\\n>  The BottomPagerRow property is available only after the <xref:System.Web.UI.WebControls.GridView> control creates the bottom pager row in the <xref:System.Web.UI.WebControls.GridView.RowCreated> event.  \\n  \\n This property is commonly used when you need to programmatically manipulate the bottom pager row, for example when adding custom content. Any modification to the BottomPagerRow property must be performed after the <xref:System.Web.UI.WebControls.GridView> control has been rendered; otherwise, the <xref:System.Web.UI.WebControls.GridView> control will overwrite any changes.\"\n  example:\n  - \"The following example demonstrates how to use the BottomPagerRow property to access the bottom pager row in a <xref:System.Web.UI.WebControls.GridView> control. The BottomPagerRow property is used to retrieve a <xref:System.Web.UI.WebControls.DropDownList> control from the pager row.  \\n  \\n [!code-vb[GridViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_54_1.aspx)]\\n [!code-cs[GridViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_54_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.GridViewRow BottomPagerRow { get; }\n    return:\n      type: System.Web.UI.WebControls.GridViewRow\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> that represents the bottom pager row in the control.\n  overload: System.Web.UI.WebControls.GridView.BottomPagerRow*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.Caption\n  id: Caption\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: Caption\n  nameWithType: GridView.Caption\n  fullName: System.Web.UI.WebControls.GridView.Caption\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the text to render in an HTML caption element in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control. This property is provided to make the control more accessible to users of assistive technology devices.\n  remarks: \"Use the Caption property to specify the text to render in an HTML caption element in a <xref:System.Web.UI.WebControls.GridView> control. The text that you specify provides assistive technology devices with a description of the table that can be used to make the control more accessible. You can also specify the position at which to render the HTML caption element by using the <xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A> property.  \\n  \\n The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example demonstrates how to use the Caption property to specify the caption for a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_177_1.aspx)]\\n [!code-vb[GridViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_177_1.aspx)]\"\n  syntax:\n    content: public virtual string Caption { get; set; }\n    return:\n      type: System.String\n      description: A string that represents the text to render in an HTML caption element in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control. The default value is an empty string (\"\").\n  overload: System.Web.UI.WebControls.GridView.Caption*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.CaptionAlign\n  id: CaptionAlign\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: CaptionAlign\n  nameWithType: GridView.CaptionAlign\n  fullName: System.Web.UI.WebControls.GridView.CaptionAlign\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the horizontal or vertical position of the HTML caption element in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control. This property is provided to make the control more accessible to users of assistive technology devices.\n  remarks: \"Use the CaptionAlign property to specify the horizontal or vertical position of the HTML caption element in a <xref:System.Web.UI.WebControls.GridView> control. This property is provided to make the control more accessible to users of assistive technology devices.  \\n  \\n This property is set using one of the <xref:System.Web.UI.WebControls.TableCaptionAlign> enumeration values. The following table lists the possible values.  \\n  \\n|Value|Description|  \\n|-----------|-----------------|  \\n|`TableCaptionAlign.Bottom`|The caption element is aligned with the bottom of the table.|  \\n|`TableCaptionAlign.Left`|The caption element is aligned with the left side of the table.|  \\n|`TableCaptionAlign.NotSet`|The caption element's alignment is not set.|  \\n|`TableCaptionAlign.Right`|The caption element is aligned with the right side of the table.|  \\n|`TableCaptionAlign.Top`|The caption element is aligned with the top of the table.|  \\n  \\n> [!NOTE]\\n>  When this property is set to `TableCaptionAlign.NotSet`, the default value of the browser is used.  \\n  \\n To specify the text for the HTML caption element, use the <xref:System.Web.UI.WebControls.GridView.Caption%2A> property.\"\n  example:\n  - \"The following example demonstrates how to use the CaptionAlign property to specify that the caption element for a <xref:System.Web.UI.WebControls.GridView> control is aligned with the top of the control.  \\n  \\n [!code-cs[GridViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_600_1.aspx)]\\n [!code-vb[GridViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_600_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }\n    return:\n      type: System.Web.UI.WebControls.TableCaptionAlign\n      description: One of the <xref href=\"System.Web.UI.WebControls.TableCaptionAlign\"></xref> values. The default is <xref uid=\"langword_csharp_TableCaptionAlign.NotSet\" name=\"TableCaptionAlign.NotSet\" href=\"\"></xref>, which uses the browser's default setting.\n  overload: System.Web.UI.WebControls.GridView.CaptionAlign*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The specified value is not one of the <xref href=\"System.Web.UI.WebControls.TableCaptionAlign\"></xref> enumeration values.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.CellPadding\n  id: CellPadding\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: CellPadding\n  nameWithType: GridView.CellPadding\n  fullName: System.Web.UI.WebControls.GridView.CellPadding\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the amount of space between the contents of a cell and the cell's border.\n  remarks: \"Use the CellPadding property to control the spacing between the contents of a cell and the cell's border. The padding amount specified is added to all four sides of the cell.  \\n  \\n All cells in the same column of a <xref:System.Web.UI.WebControls.GridView> control have the same width. The padding amount is applied to the widest cell and all other cells in the column have this cell width. Similarly, all cells in the same row have the same height. The padding amount is applied to the tallest cell in the row and all other cells in the row have this cell height. Individual cell sizes cannot be specified.\"\n  example:\n  - \"The following example demonstrates how to use the CellPadding property to declaratively set the amount of space between the contents of a cell and the cell's border.  \\n  \\n [!code-cs[GridViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_836_1.aspx)]\\n [!code-vb[GridViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_836_1.aspx)]\"\n  syntax:\n    content: public virtual int CellPadding { get; set; }\n    return:\n      type: System.Int32\n      description: The amount of space, in pixels, between the contents of a cell and the cell's border. The default value is -1, which indicates that this property is not set.\n  overload: System.Web.UI.WebControls.GridView.CellPadding*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.CellSpacing\n  id: CellSpacing\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: CellSpacing\n  nameWithType: GridView.CellSpacing\n  fullName: System.Web.UI.WebControls.GridView.CellSpacing\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the amount of space between cells.\n  remarks: \"Use the CellSpacing property to control the spacing between adjacent cells in the <xref:System.Web.UI.WebControls.GridView> control. This spacing is applied both vertically and horizontally. The cell spacing is uniform for the entire control. Individual cell spacing between rows or columns cannot be specified.  \\n  \\n> [!NOTE]\\n>  If you set this property to a value greater than 0 and then set the <xref:System.Web.UI.WebControls.GridView.GridLines%2A> property to a value that displays the cell borders, a gap is displayed between the borders of adjacent cells. In this situation, the <xref:System.Web.UI.WebControls.Table.CellSpacing%2A> property controls the size of the gap.\"\n  example:\n  - \"The following example demonstrates how to use the CellSpacing property to declaratively set the amount of space between the cells of a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_898_1.aspx)]\\n [!code-vb[GridViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_898_1.aspx)]\"\n  syntax:\n    content: public virtual int CellSpacing { get; set; }\n    return:\n      type: System.Int32\n      description: The amount of space, in pixels, between cells. The default value is 0.\n  overload: System.Web.UI.WebControls.GridView.CellSpacing*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffix\n  id: ClientIDRowSuffix\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: ClientIDRowSuffix\n  nameWithType: GridView.ClientIDRowSuffix\n  fullName: System.Web.UI.WebControls.GridView.ClientIDRowSuffix\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the names of the data fields whose values are appended to the <xref:System.Web.UI.Control.ClientID*> property value to uniquely identify each instance of a data-bound control.\n  remarks: To prevent naming conflicts when multiple instances of a control are rendered in multiple rows of a <xref:System.Web.UI.WebControls.GridView> control, ASP.NET generates a unique <xref:System.Web.UI.Control.ClientID%2A> value for each instance. You specify how the <xref:System.Web.UI.Control.ClientID%2A> value is generated by setting the <xref:System.Web.UI.Control.ClientIDMode%2A> property. If you set the <xref:System.Web.UI.Control.ClientIDMode%2A> property to <xref:System.Web.UI.ClientIDMode>, ASP.NET will generate the <xref:System.Web.UI.Control.ClientID%2A> by appending a suffix that is derived from the data field or fields that are specified in ClientIDRowSuffix. If ClientIDRowSuffix is not set, the suffix is a sequential number.\n  syntax:\n    content: public virtual string[] ClientIDRowSuffix { get; set; }\n    return:\n      type: System.String[]\n      description: The names of the data fields whose values are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <xref:System.Web.UI.Control.ClientID*> value.\n  overload: System.Web.UI.WebControls.GridView.ClientIDRowSuffix*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys\n  id: ClientIDRowSuffixDataKeys\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: ClientIDRowSuffixDataKeys\n  nameWithType: GridView.ClientIDRowSuffixDataKeys\n  fullName: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <xref:System.Web.UI.Control.ClientID*> value.\n  syntax:\n    content: public System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys { get; }\n    return:\n      type: System.Web.UI.WebControls.DataKeyArray\n      description: The data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <xref:System.Web.UI.Control.ClientID*> value.\n  overload: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.Columns\n  id: Columns\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: Columns\n  nameWithType: GridView.Columns\n  fullName: System.Web.UI.WebControls.GridView.Columns\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a collection of <xref href=\"System.Web.UI.WebControls.DataControlField\"></xref> objects that represent the column fields in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"A column field represents a column in a <xref:System.Web.UI.WebControls.GridView> control. The Columns property (collection) is used to store all the explicitly declared column fields that get rendered in the <xref:System.Web.UI.WebControls.GridView> control. You can also use the Columns collection to programmatically manage the collection of column fields.  \\n  \\n> [!NOTE]\\n>  Explicitly declared column fields can be used in combination with automatically generated column fields. When both are used, explicitly declared column fields are rendered first, followed by the automatically generated column fields. Automatically generated column fields are not added to the Columns collection.  \\n  \\n The column fields are displayed in the <xref:System.Web.UI.WebControls.GridView> control in the order that the column fields appear in the Columns collection. The following table shows the different column field classes that derive from the <xref:System.Web.UI.WebControls.DataControlField> class and can be used in the Columns collection.  \\n  \\n|Column field type|Description|  \\n|-----------------------|-----------------|  \\n|<xref:System.Web.UI.WebControls.BoundField>|Displays the value of a field in a data source. This is the default column type of the <xref:System.Web.UI.WebControls.GridView> control.|  \\n|<xref:System.Web.UI.WebControls.ButtonField>|Displays a command button for each item in the <xref:System.Web.UI.WebControls.GridView> control. This enables you to create a column of custom button controls, such as the Add or the Remove button.|  \\n|<xref:System.Web.UI.WebControls.CheckBoxField>|Displays a check box for each item in the <xref:System.Web.UI.WebControls.GridView> control. This column field type is commonly used to display fields with a Boolean value.|  \\n|<xref:System.Web.UI.WebControls.CommandField>|Displays predefined command buttons to perform select, edit, or delete operations.|  \\n|<xref:System.Web.UI.WebControls.HyperLinkField>|Displays the value of a field in a data source as a hyperlink. This column field type enables you to bind a second field to the hyperlink's URL.|  \\n|<xref:System.Web.UI.WebControls.ImageField>|Displays an image for each item in the <xref:System.Web.UI.WebControls.GridView> control.|  \\n|<xref:System.Web.UI.WebControls.TemplateField>|Displays user-defined content for each item in the <xref:System.Web.UI.WebControls.GridView> control, according to a specified template. This column field type enables you to create a custom column field.|  \\n  \\n Although you can programmatically add column fields to the Columns collection, it is easier to list the column fields declaratively in the <xref:System.Web.UI.WebControls.GridView> control and then use the <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> property of each column field to show or hide each column field.  \\n  \\n If the <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> property of a column field is set to `false`, the column is not displayed in the <xref:System.Web.UI.WebControls.GridView> control and the data for the column does not make a round trip to the client. If you want the data for a column that is not visible to make a round trip, add the field name to the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property.\"\n  example:\n  - \"The following example demonstrates how to populate the Columns collection declaratively.  \\n  \\n [!code-vb[GridViewColumnFields#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_420_1.aspx)]\\n [!code-cs[GridViewColumnFields#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_420_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.DataControlFieldCollection Columns { get; }\n    return:\n      type: System.Web.UI.WebControls.DataControlFieldCollection\n      description: A <xref href=\"System.Web.UI.WebControls.DataControlFieldCollection\"></xref> that contains all the column fields in the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.Columns*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.ColumnsGenerator\n  id: ColumnsGenerator\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: ColumnsGenerator\n  nameWithType: GridView.ColumnsGenerator\n  fullName: System.Web.UI.WebControls.GridView.ColumnsGenerator\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the control that will automatically generate the columns for a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control that uses ASP.NET Dynamic Data features.\n  remarks: In order to use ASP.NET Dynamic Data features in a page, you must add a <xref:System.Web.DynamicData.DynamicDataManager> control to the page. This enables ASP.NET Dynamic Data features for data-bound controls in a page, such as <xref:System.Web.UI.WebControls.GridView> control. To enable an individual <xref:System.Web.UI.WebControls.GridView> control to use Dynamic Data features, you must associate it with the <xref:System.Web.DynamicData.DynamicDataManager> control by calling the <xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A?displayProperty=fullName> method during the `Page_Init` event. This method automatically sets the ColumnsGenerator property to the <xref:System.Web.DynamicData.DynamicDataManager> object.\n  syntax:\n    content: public System.Web.UI.IAutoFieldGenerator ColumnsGenerator { get; set; }\n    return:\n      type: System.Web.UI.IAutoFieldGenerator\n      description: The control that will automatically generate the columns for a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control that uses ASP.NET Dynamic Data features.\n  overload: System.Web.UI.WebControls.GridView.ColumnsGenerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)\n  id: CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)\n  nameWithType: GridView.CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)\n  fullName: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Creates an automatically generated column field.\n  remarks: \"The CreateAutoGeneratedColumn method is used to create an automatically generated column field when the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property is set to `true`. The properties of the automatically generated column field are specified through the <xref:System.Web.UI.WebControls.AutoGeneratedFieldProperties> object contained in the `fieldProperties` parameter.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.\"\n  syntax:\n    content: protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedColumn (System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties);\n    parameters:\n    - id: fieldProperties\n      type: System.Web.UI.WebControls.AutoGeneratedFieldProperties\n      description: An <xref href=\"System.Web.UI.WebControls.AutoGeneratedFieldProperties\"></xref> that represents the properties of the automatically generated column field to create.\n    return:\n      type: System.Web.UI.WebControls.AutoGeneratedField\n      description: An <xref href=\"System.Web.UI.WebControls.AutoGeneratedField\"></xref> that represents the automatically generated column field specified by the <code>fieldProperties</code> parameter.\n  overload: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)\n  id: CreateChildControls(System.Collections.IEnumerable,System.Boolean)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: CreateChildControls(IEnumerable,Boolean)\n  nameWithType: GridView.CreateChildControls(IEnumerable,Boolean)\n  fullName: System.Web.UI.WebControls.GridView.CreateChildControls(IEnumerable,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Creates the control hierarchy used to render the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control using the specified data source.\n  remarks: \"The CreateChildControls method is used to create the control hierarchy of the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.\"\n  syntax:\n    content: protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);\n    parameters:\n    - id: dataSource\n      type: System.Collections.IEnumerable\n      description: An &lt;xref:System.Collections.IEnumerable?displayProperty=fullName&gt; that contains the data source for the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n    - id: dataBinding\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the child controls are bound to data; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Int32\n      description: The number of rows created.\n  overload: System.Web.UI.WebControls.GridView.CreateChildControls*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: \"<code>dataSource</code> returns a null <xref href=\\\"System.Web.UI.DataSourceView\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>dataSource</code> does not implement the <xref:System.Collections.ICollection> interface and cannot return a <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount*>.  \\n  \\n -or-  \\n  \\n <xref:System.Web.UI.WebControls.GridView.AllowPaging*> is <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> and <code>dataSource</code> does not implement the <xref:System.Collections.ICollection> interface and cannot perform data source paging.  \\n  \\n -or-  \\n  \\n <code>dataSource</code> does not implement the <xref:System.Collections.ICollection> interface and <code>dataBinding</code> is set to <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.CreateChildTable\n  id: CreateChildTable\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: CreateChildTable()\n  nameWithType: GridView.CreateChildTable()\n  fullName: System.Web.UI.WebControls.GridView.CreateChildTable()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Creates a new child table.\n  remarks: The CreateChildTable method is a helper method used by the <xref:System.Web.UI.WebControls.GridView> control to create a child table.\n  syntax:\n    content: protected virtual System.Web.UI.WebControls.Table CreateChildTable ();\n    parameters: []\n    return:\n      type: System.Web.UI.WebControls.Table\n      description: Always returns a new <xref href=\"System.Web.UI.WebControls.Table\"></xref> that represents the child table.\n  overload: System.Web.UI.WebControls.GridView.CreateChildTable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)\n  id: CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: CreateColumns(PagedDataSource,Boolean)\n  nameWithType: GridView.CreateColumns(PagedDataSource,Boolean)\n  fullName: System.Web.UI.WebControls.GridView.CreateColumns(PagedDataSource,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Creates the set of column fields used to build the control hierarchy.\n  remarks: \"When the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property is set to `true`, a bound column field is automatically created for each field in the data source. Each bound column field is then displayed as a row in the <xref:System.Web.UI.WebControls.GridView> control in the order that the fields appear in the data source. The CreateColumns method is used to create the automatically generated column fields.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.\"\n  syntax:\n    content: protected virtual System.Collections.ICollection CreateColumns (System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource);\n    parameters:\n    - id: dataSource\n      type: System.Web.UI.WebControls.PagedDataSource\n      description: A <xref href=\"System.Web.UI.WebControls.PagedDataSource\"></xref> that represents the data source.\n    - id: useDataSource\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use the data source specified by the `dataSource` parameter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Collections.ICollection\n      description: A &lt;xref:System.Collections.ICollection?displayProperty=fullName&gt; that contains the fields used to build the control hierarchy.\n  overload: System.Web.UI.WebControls.GridView.CreateColumns*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.CreateControlStyle\n  id: CreateControlStyle\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: CreateControlStyle()\n  nameWithType: GridView.CreateControlStyle()\n  fullName: System.Web.UI.WebControls.GridView.CreateControlStyle()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Creates the default style for the control.\n  remarks: \"The CreateControlStyle method is used to create the default style for the control.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.\"\n  syntax:\n    content: protected override System.Web.UI.WebControls.Style CreateControlStyle ();\n    parameters: []\n    return:\n      type: System.Web.UI.WebControls.Style\n      description: A <xref href=\"System.Web.UI.WebControls.Style\"></xref> that represents the style for the control.\n  overload: System.Web.UI.WebControls.GridView.CreateControlStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments\n  id: CreateDataSourceSelectArguments\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: CreateDataSourceSelectArguments()\n  nameWithType: GridView.CreateDataSourceSelectArguments()\n  fullName: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Creates the <xref href=\"System.Web.UI.DataSourceSelectArguments\"></xref> object that contains the arguments that get passed to the data source for processing.\n  remarks: The CreateDataSourceSelectArguments method is a helper method called by the <xref:System.Web.UI.WebControls.GridView> control to create the <xref:System.Web.UI.DataSourceSelectArguments> object that contains the arguments passed to the data source. In this implementation, the <xref:System.Web.UI.DataSourceSelectArguments> object contains the arguments for paging operations.\n  syntax:\n    content: protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();\n    parameters: []\n    return:\n      type: System.Web.UI.DataSourceSelectArguments\n      description: A <xref href=\"System.Web.UI.DataSourceSelectArguments\"></xref> that contains the arguments that get passed to the data source.\n  overload: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)\n  id: CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)\n  nameWithType: GridView.CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)\n  fullName: System.Web.UI.WebControls.GridView.CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Creates a row in the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"The CreateRow method is used to create a row in the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control. A data-bound <xref:System.Web.UI.WebControls.GridView> control automatically generates the rows needed to display the target data.\"\n  syntax:\n    content: protected virtual System.Web.UI.WebControls.GridViewRow CreateRow (int rowIndex, int dataSourceIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);\n    parameters:\n    - id: rowIndex\n      type: System.Int32\n      description: The index of the row to create.\n    - id: dataSourceIndex\n      type: System.Int32\n      description: The index of the data source item to bind to the row.\n    - id: rowType\n      type: System.Web.UI.WebControls.DataControlRowType\n      description: One of the <xref href=\"System.Web.UI.WebControls.DataControlRowType\"></xref> values.\n    - id: rowState\n      type: System.Web.UI.WebControls.DataControlRowState\n      description: One of the <xref href=\"System.Web.UI.WebControls.DataControlRowState\"></xref> values.\n    return:\n      type: System.Web.UI.WebControls.GridViewRow\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> created using the specified parameters.\n  overload: System.Web.UI.WebControls.GridView.CreateRow*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.DataBind\n  id: DataBind\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: DataBind()\n  nameWithType: GridView.DataBind()\n  fullName: System.Web.UI.WebControls.GridView.DataBind()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Binds the data source to the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control. This method cannot be inherited.\n  remarks: \"Use the DataBind method to bind data from a data source to the <xref:System.Web.UI.WebControls.GridView> control. This method resolves all data-binding expressions in the active template of the control.  \\n  \\n The DataBind method is called automatically if the <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property of the <xref:System.Web.UI.WebControls.GridView> control refers to a valid data source control.  \\n  \\n Instead of manually calling the DataBind method, you can use model binding with your DataBind control by setting the <xref:System.Web.UI.WebControls.DataBoundControl.SelectMethod%2A> property to the name of a method that returns data for the <xref:System.Web.UI.WebControls.GridView>. The <xref:System.Web.UI.WebControls.GridView> is then automatically populated with the data that is returned from the select method. Model binding can simplify your code for working with data. For more information, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).\"\n  example:\n  - \"The following example demonstrates how to use the DataBind method to bind a data source to a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewDataBind#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_182_1.aspx)]\\n [!code-vb[GridViewDataBind#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_182_1.aspx)]\"\n  syntax:\n    content: public override sealed void DataBind ();\n    parameters: []\n  overload: System.Web.UI.WebControls.GridView.DataBind*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.DataKeyNames\n  id: DataKeyNames\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: DataKeyNames\n  nameWithType: GridView.DataKeyNames\n  fullName: System.Web.UI.WebControls.GridView.DataKeyNames\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets an array that contains the names of the primary key fields for the items displayed in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"Use the DataKeyNames property to specify the field or fields that represent the primary key of the data source. You should only set this property to the field or fields that are required to uniquely identify each row; for example, the ID column if an integer value uniquely identifies each row. You must set the DataKeyNames property in order for the automatic update and delete features of the <xref:System.Web.UI.WebControls.GridView> control to work. The values of these key fields are passed to the data source control in order to specify the row to update or delete.  \\n  \\n If you need to retrieve the data key value when updating or deleting a row, use the `Keys` property of either the <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> or <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> class. For example, `e.Keys[0]` holds the value of the first data key in a <xref:System.Web.UI.WebControls.GridView.RowUpdating> or <xref:System.Web.UI.WebControls.GridView.RowDeleting> event handler.  \\n  \\n If you need to retrieve the data key value when a row is selected, use the <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> property.  \\n  \\n When the DataKeyNames property is set, the <xref:System.Web.UI.WebControls.GridView> control automatically populates its <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> collection with the values from the specified field or fields, which provides a convenient way to access the primary keys of each row.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Web.UI.WebControls.GridView> control stores these key field values in the control state. If these values contain sensitive information, it is strongly recommended that you enable view-state encryption by setting the <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> property to `ViewStateEncryptionMode.Always`.  \\n  \\n When you use automatically generated field columns (by setting the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property to `true`), the <xref:System.Web.UI.WebControls.GridView> control makes sure that the columns that correspond to the field or fields specified in the DataKeyNames property are read-only.  \\n  \\n If the <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> property of a column field is set to `false`, the column is not displayed in the <xref:System.Web.UI.WebControls.GridView> control and the data for the column does not make a round trip to the client. If you want the data for a column that is not visible to be available to the client, add the field name to the DataKeyNames property.\"\n  example:\n  - \"The following example demonstrates how to use the DataKeyNames property to specify the key field of the data source. In the example, the `DataKeyNames` attribute of the `GridView` element in markup specifies two key fields by using a comma to separate the names. To run this example, create a Web site that has the following:  \\n  \\n-   A connection to the AdventureWorksLT sample database and a connection string that is named `AdventureWorksLTConnectionString`. For information about how to set up the AdventureWorksLT sample database, see [How to: Set Up an AdventureWorksLT Sample Database for ASP.NET Development](~/add/includes/ajax-current-ext-md.md).  \\n  \\n-   A LINQ-to-SQL data context class that is named `AdventureWorksLTDataClassesDataContext`. The data context must have a class for the SalesOrderDetails table. For information about how to create LINQ-to-SQL classes, see [LINQ to SQL](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[GridViewEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1002_1.aspx)]\\n [!code-cs[GridViewEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1002_1.aspx)]\"\n  syntax:\n    content: public virtual string[] DataKeyNames { get; set; }\n    return:\n      type: System.String[]\n      description: An array that contains the names of the primary key fields for the items displayed in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.DataKeyNames*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.DataKeys\n  id: DataKeys\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: DataKeys\n  nameWithType: GridView.DataKeys\n  fullName: System.Web.UI.WebControls.GridView.DataKeys\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a collection of <xref href=\"System.Web.UI.WebControls.DataKey\"></xref> objects that represent the data key value of each row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"When the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property is set, the <xref:System.Web.UI.WebControls.GridView> control automatically creates a <xref:System.Web.UI.WebControls.DataKey> object for each row in the control. The <xref:System.Web.UI.WebControls.DataKey> object contains the values of the field or fields specified in the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property. The <xref:System.Web.UI.WebControls.DataKey> objects are then added to the control's DataKeys collection. Use the DataKeys property to retrieve the <xref:System.Web.UI.WebControls.DataKey> object for a specific data row in the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n> [!NOTE]\\n>  You can use the <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> property to retrieve the <xref:System.Web.UI.WebControls.DataKey> object for the currently selected row. You can also use the <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> property to retrieve the data key value for the currently selected row directly.\"\n  example:\n  - \"The following example demonstrates how to use the DataKeys property to determine the data key value of the selected row in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewDataKeys#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_962_1.aspx)]\\n [!code-vb[GridViewDataKeys#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_962_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.DataKeyArray DataKeys { get; }\n    return:\n      type: System.Web.UI.WebControls.DataKeyArray\n      description: A <xref href=\"System.Web.UI.WebControls.DataKeyArray\"></xref> that contains the data key of each row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.DataKeys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.DeleteMethod\n  id: DeleteMethod\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: DeleteMethod\n  nameWithType: GridView.DeleteMethod\n  fullName: System.Web.UI.WebControls.GridView.DeleteMethod\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the name of the method to call in order to delete data.\n  remarks: \"Setting this property causes model binding to be used as the data-binding method.  \\n  \\n For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).\"\n  syntax:\n    content: public virtual string DeleteMethod { get; set; }\n    return:\n      type: System.String\n      description: The name of the method.\n  overload: System.Web.UI.WebControls.GridView.DeleteMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)\n  id: DeleteRow(System.Int32)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: DeleteRow(Int32)\n  nameWithType: GridView.DeleteRow(Int32)\n  fullName: System.Web.UI.WebControls.GridView.DeleteRow(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Deletes the record at the specified index from the data source.\n  remarks: Use the DeleteRow method to programmatically delete the record at the specified index from the data source. This method is commonly used when you need to delete a record from outside of the <xref:System.Web.UI.WebControls.GridView> control, such as from a different control on the page. Calling this method also raises the <xref:System.Web.UI.WebControls.GridView.RowDeleted> and <xref:System.Web.UI.WebControls.GridView.RowDeleting> events.\n  example:\n  - \"The following example demonstrates how to use the DeleteRow method to programmatically delete a record in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewDeleteRow#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_184_1.aspx)]\\n [!code-vb[GridViewDeleteRow#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_184_1.aspx)]\"\n  syntax:\n    content: public virtual void DeleteRow (int rowIndex);\n    parameters:\n    - id: rowIndex\n      type: System.Int32\n      description: The index of the row to delete.\n  overload: System.Web.UI.WebControls.GridView.DeleteRow*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is not bound to a data source control.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The data source control that the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is bound to does not support delete operations, or there is no delete command defined for the data source.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.EditIndex\n  id: EditIndex\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: EditIndex\n  nameWithType: GridView.EditIndex\n  fullName: System.Web.UI.WebControls.GridView.EditIndex\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the index of the row to edit.\n  remarks: \"The row index is zero-based (the first row is row zero).  \\n  \\n This property is typically used only in the following scenarios, which involve handlers for specific events:  \\n  \\n-   You want the <xref:System.Web.UI.WebControls.GridView> control to open in edit mode for a specific row the first time that the page is displayed. To do this, you can set the EditIndex property in the handler for the <xref:System.Web.UI.Control.Load> event of the <xref:System.Web.UI.Page> class or of the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n-   You want to know which row was edited after the row was updated. To do this, you can retrieve the row index from the EditIndex property in the <xref:System.Web.UI.WebControls.GridView.RowUpdated> event handler.  \\n  \\n-   You are binding the <xref:System.Web.UI.WebControls.GridView> control to a data source by setting the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> property programmatically. In this case you must set the EditIndex property in the <xref:System.Web.UI.WebControls.GridView.RowEditing> and <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> event handlers.  \\n  \\n If you set the EditIndex property after a postback or in handlers for events that are raised later than the <xref:System.Web.UI.Control.Load> event, the <xref:System.Web.UI.WebControls.GridView> control might not enter edit mode for the specified row. If you read the value of this property in other event handlers, the index is not guaranteed to reflect the row that is being edited.  \\n  \\n To determine which row the user has clicked an **Edit** button or hyperlink in before the <xref:System.Web.UI.WebControls.GridView> control enters edit mode, you can retrieve the row index from the <xref:System.Web.UI.WebControls.GridViewEditEventArgs.NewEditIndex%2A> property of the <xref:System.Web.UI.WebControls.GridViewEditEventArgs> object in the <xref:System.Web.UI.WebControls.GridView.RowEditing> event handler.  \\n  \\n To prevent the <xref:System.Web.UI.WebControls.GridView> control from entering edit mode after a user has clicked an **Edit** button or hyperlink, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewEditEventArgs> object to `true` in the <xref:System.Web.UI.WebControls.GridView.RowEditing> event handler.\"\n  example:\n  - \"The following example demonstrates how to use the EditIndex property to determine which row was updated after it was edited in a <xref:System.Web.UI.WebControls.GridView> control. A message is displayed to indicate that the update was successful.  \\n  \\n [!code-cs[GridViewRows#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1013_1.aspx)]\\n [!code-vb[GridViewRows#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1013_1.aspx)]\"\n  syntax:\n    content: public virtual int EditIndex { get; set; }\n    return:\n      type: System.Int32\n      description: The zero-based index of the row to edit. The default is -1, which indicates that no row is being edited.\n  overload: System.Web.UI.WebControls.GridView.EditIndex*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The specified index is less than -1.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.EditRowStyle\n  id: EditRowStyle\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: EditRowStyle\n  nameWithType: GridView.EditRowStyle\n  fullName: System.Web.UI.WebControls.GridView.EditRowStyle\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> object that enables you to set the appearance of the row selected for editing in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"Use the EditRowStyle property to control the appearance of the row being edited in a <xref:System.Web.UI.WebControls.GridView> control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns. The properties can be set declaratively using one of the following methods:  \\n  \\n-   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `EditRowStyle-ForeColor`).  \\n  \\n-   Nest an `<EditRowStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n The properties can also be set programmatically in the form `Property.Subproperty` (for example, `EditRowStyle.ForeColor`). Common settings usually include a custom background color, foreground color, and font properties.\"\n  example:\n  - \"The following example demonstrates how to use the EditRowStyle property to define a custom style for the row being edited in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewEditRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_980_1.aspx)]\\n [!code-vb[GridViewEditRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_980_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }\n    return:\n      type: System.Web.UI.WebControls.TableItemStyle\n      description: A reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> that represents the style of the row being edited in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.EditRowStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.EmptyDataRowStyle\n  id: EmptyDataRowStyle\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: EmptyDataRowStyle\n  nameWithType: GridView.EmptyDataRowStyle\n  fullName: System.Web.UI.WebControls.GridView.EmptyDataRowStyle\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> object that enables you to set the appearance of the empty data row rendered when a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is bound to a data source that does not contain any records.\n  remarks: \"Use the EmptyDataRowStyle property to control the appearance of the null row in a <xref:System.Web.UI.WebControls.GridView> control. The null row is displayed when the data source that is bound to the control does not contain any records. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns. The properties can be set declaratively using one of the following methods:  \\n  \\n-   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `EmptyDataRowStyle-ForeColor`).  \\n  \\n-   Nest an `<EmptyDataRowStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n The properties can also be set programmatically in the form `Property.Subproperty` (for example, `EmptyDataRowStyle.ForeColor`). Common settings usually include a custom background color, foreground color, and font properties.\"\n  example:\n  - \"The following example demonstrates how to set the EmptyDataRowStyle property declaratively to specify a light blue background and a red font for the null row.  \\n  \\n [!code-cs[GridViewNullRowTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1110_1.aspx)]\\n [!code-vb[GridViewNullRowTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1110_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }\n    return:\n      type: System.Web.UI.WebControls.TableItemStyle\n      description: A reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> that enables you to set the appearance of the null row.\n  overload: System.Web.UI.WebControls.GridView.EmptyDataRowStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.EmptyDataTemplate\n  id: EmptyDataTemplate\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: EmptyDataTemplate\n  nameWithType: GridView.EmptyDataTemplate\n  fullName: System.Web.UI.WebControls.GridView.EmptyDataTemplate\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the user-defined content for the empty data row rendered when a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is bound to a data source that does not contain any records.\n  remarks: \"The empty data row is displayed in a <xref:System.Web.UI.WebControls.GridView> control when the data source that is bound to the control does not contain any records. You can define your own custom user interface (UI) for the empty data row by using the EmptyDataTemplate property.  \\n  \\n To specify a custom template for the empty data row, first place `<EmptyDataTemplate>` tags between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control. You can then list the contents of the template between the opening and closing `<EmptyDataTemplate>` tags. To control the style of the empty data row, use the <xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> property. Alternatively, you can use the built-in UI for the empty data row by setting the <xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A> property instead of this property.  \\n  \\n For information about how to programmatically access controls that you declare in an empty data template, see [How to: Access Server Controls by ID](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  If both the <xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A> and EmptyDataTemplate properties are set, the EmptyDataTemplate property takes precedence.\"\n  example:\n  - \"The following example demonstrates how to define a custom template for the empty data row displayed when a <xref:System.Web.UI.WebControls.GridView> control is bound to a data source that does not contain any records.  \\n  \\n [!code-cs[GridViewNullRowTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_206_1.aspx)]\\n [!code-vb[GridViewNullRowTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_206_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }\n    return:\n      type: System.Web.UI.ITemplate\n      description: A <xref href=\"System.Web.UI.ITemplate\"></xref> that contains the custom content for the empty data row. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which indicates that this property is not set.\n  overload: System.Web.UI.WebControls.GridView.EmptyDataTemplate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.EmptyDataText\n  id: EmptyDataText\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: EmptyDataText\n  nameWithType: GridView.EmptyDataText\n  fullName: System.Web.UI.WebControls.GridView.EmptyDataText\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the text to display in the empty data row rendered when a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is bound to a data source that does not contain any records.\n  remarks: \"The empty data row is displayed in a <xref:System.Web.UI.WebControls.GridView> control when the data source that is bound to the control does not contain any records. Use the EmptyDataText property to specify the text to display in the empty data row. To control the style of the empty data row, use the <xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> property. Alternatively, you can define your own custom user interface (UI) for the empty data row by setting the <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> property instead of this property.  \\n  \\n> [!NOTE]\\n>  If both the EmptyDataText and <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> properties are set, the <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> property takes precedence.  \\n  \\n The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example demonstrates how to use the EmptyDataText property to specify the text to display in the empty data row.  \\n  \\n [!code-vb[GridViewEmptyDataText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_935_1.aspx)]\\n [!code-cs[GridViewEmptyDataText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_935_1.aspx)]\"\n  syntax:\n    content: public virtual string EmptyDataText { get; set; }\n    return:\n      type: System.String\n      description: The text to display in the empty data row. The default is an empty string (\"\"), which indicates that this property is not set.\n  overload: System.Web.UI.WebControls.GridView.EmptyDataText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.EnableModelValidation\n  id: EnableModelValidation\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: EnableModelValidation\n  nameWithType: GridView.EnableModelValidation\n  fullName: System.Web.UI.WebControls.GridView.EnableModelValidation\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that indicates whether a validator control will handle exceptions that occur during insert or update operations.\n  syntax:\n    content: public virtual bool EnableModelValidation { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a validator control will handle exceptions that occur during insert or update operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.EnableModelValidation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.EnablePersistedSelection\n  id: EnablePersistedSelection\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: EnablePersistedSelection\n  nameWithType: GridView.EnablePersistedSelection\n  fullName: System.Web.UI.WebControls.GridView.EnablePersistedSelection\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that indicates whether the selection of a row is based on index or on data-key values.\n  remarks: If this property is `false` and a row is selected, the same row is selected when a new page is displayed even though the new page has different data in it. If you set this property to `true`, when you display a page that has different data in it, no row is selected. If you then return to the page on which a row was selected, that row is still selected.\n  syntax:\n    content: public virtual bool EnablePersistedSelection { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the row selection is based on data-key values; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.EnablePersistedSelection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks\n  id: EnableSortingAndPagingCallbacks\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: EnableSortingAndPagingCallbacks\n  nameWithType: GridView.EnableSortingAndPagingCallbacks\n  fullName: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether client-side callbacks are used for sorting and paging operations.\n  remarks: \"By default, when a sorting or paging operation is performed, the <xref:System.Web.UI.WebControls.GridView> control posts back to the server to perform the operation. When the EnableSortingAndPagingCallbacks property is set to `true`, a service is called on the client to perform sorting and paging operations, which eliminates the need to post back to the server.  \\n  \\n> [!NOTE]\\n>  Not all browsers support this feature. To determine whether a browser supports this feature, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property.  \\n  \\n All columns in the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection must support callbacks for this feature to work. If the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection contains a column that does not support callbacks, such as <xref:System.Web.UI.WebControls.TemplateField>, a <xref:System.NotSupportedException> exception is raised.\"\n  example:\n  - \"The following example demonstrates how to use the EnableSortingAndPagingCallbacks property to enable client-side callbacks for sorting and paging operations.  \\n  \\n [!code-vb[GridViewEnableSortingAndPagingCallbacks#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_960_1.aspx)]\\n [!code-cs[GridViewEnableSortingAndPagingCallbacks#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_960_1.aspx)]\"\n  syntax:\n    content: public virtual bool EnableSortingAndPagingCallbacks { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use client-side callbacks for sorting and paging operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref:System.Web.UI.WebControls.GridView.Columns*> collection contains a column that does not support callbacks, such as <xref href=\"System.Web.UI.WebControls.TemplateField\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)\n  id: ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)\n  nameWithType: GridView.ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)\n  fullName: System.Web.UI.WebControls.GridView.ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Retrieves the values of each field declared within the specified row and stores them in the specified <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> object.\n  remarks: The ExtractRowValues method is a helper method called by the <xref:System.Web.UI.WebControls.GridView> control to retrieve the values of each field declared within the row specified by the `row` parameter. You can specify whether the extracted values include read-only fields and key fields by using the `includeReadOnlyFields` and `includePrimaryKey` parameters, respectively.\n  syntax:\n    content: protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, System.Web.UI.WebControls.GridViewRow row, bool includeReadOnlyFields, bool includePrimaryKey);\n    parameters:\n    - id: fieldValues\n      type: System.Collections.Specialized.IOrderedDictionary\n      description: An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> used to store the field values.\n    - id: row\n      type: System.Web.UI.WebControls.GridViewRow\n      description: The <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> from which to retrieve the field values.\n    - id: includeReadOnlyFields\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include read-only fields; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: includePrimaryKey\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to include the primary key field or fields; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.ExtractRowValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.FooterRow\n  id: FooterRow\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: FooterRow\n  nameWithType: GridView.FooterRow\n  fullName: System.Web.UI.WebControls.GridView.FooterRow\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> object that represents the footer row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"Use the FooterRow property to programmatically access the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the footer row in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n> [!NOTE]\\n>  The FooterRow property is available only after the <xref:System.Web.UI.WebControls.GridView> control creates the footer row in the <xref:System.Web.UI.WebControls.GridView.RowCreated> event.  \\n  \\n This property is commonly used when you need to programmatically manipulate the footer row, for example when adding custom content. Any modification to the FooterRow property must be performed after the <xref:System.Web.UI.WebControls.GridView> control has been rendered; otherwise, the <xref:System.Web.UI.WebControls.GridView> control will overwrite any changes.\"\n  example:\n  - \"The following example demonstrates how to use the FooterRow property to display the sort direction in the footer row.  \\n  \\n [!code-vb[GridViewFooterRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_775_1.aspx)]\\n [!code-cs[GridViewFooterRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_775_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.GridViewRow FooterRow { get; }\n    return:\n      type: System.Web.UI.WebControls.GridViewRow\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> that represents the footer row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.FooterRow*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.FooterStyle\n  id: FooterStyle\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: FooterStyle\n  nameWithType: GridView.FooterStyle\n  fullName: System.Web.UI.WebControls.GridView.FooterStyle\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> object that enables you to set the appearance of the footer row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"Use the FooterStyle property to control the appearance of the footer row in a <xref:System.Web.UI.WebControls.GridView> control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns. The properties can be set declaratively using one of the following methods:  \\n  \\n-   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `FooterStyle-ForeColor`).  \\n  \\n-   Nest a `<FooterStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n The properties can also be set programmatically in the form `Property.Subproperty` (for example, `FooterStyle.ForeColor`). Common settings usually include a custom background color, foreground color, and font properties.\"\n  example:\n  - \"The following example demonstrates how to use the FooterStyle property to define a custom style for the footer row in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_100_1.aspx)]\\n [!code-vb[GridViewShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_100_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }\n    return:\n      type: System.Web.UI.WebControls.TableItemStyle\n      description: A reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> that represents the style of the footer row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.FooterStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.GetCallbackResult\n  id: GetCallbackResult\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: GetCallbackResult()\n  nameWithType: GridView.GetCallbackResult()\n  fullName: System.Web.UI.WebControls.GridView.GetCallbackResult()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Returns the result of a callback event that targets a control.\n  remarks: The <xref:System.Web.UI.WebControls.GridView> control implements the <xref:System.Web.UI.ICallbackEventHandler> interface and uses the <xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A> to asynchronously retrieve data and the GetCallbackResult method to return the retrieved data to the control.\n  syntax:\n    content: protected virtual string GetCallbackResult ();\n    parameters: []\n    return:\n      type: System.String\n      description: The results of the callback.\n  overload: System.Web.UI.WebControls.GridView.GetCallbackResult*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)\n  id: GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: GetCallbackScript(IButtonControl,String)\n  nameWithType: GridView.GetCallbackScript(IButtonControl,String)\n  fullName: System.Web.UI.WebControls.GridView.GetCallbackScript(IButtonControl,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Creates the callback script for a button that performs a sorting operation.\n  remarks: The GetCallbackScript method is a helper method used by the <xref:System.Web.UI.WebControls.GridView> control to create the callback script for a button that performs a sorting operation.\n  syntax:\n    content: protected virtual string GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);\n    parameters:\n    - id: buttonControl\n      type: System.Web.UI.WebControls.IButtonControl\n      description: The button control for which to create the callback script.\n    - id: argument\n      type: System.String\n      description: The arguments to pass to the callback script.\n    return:\n      type: System.String\n      description: The callback script for a button that performs a sorting operation.\n  overload: System.Web.UI.WebControls.GridView.GetCallbackScript*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.GridLines\n  id: GridLines\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: GridLines\n  nameWithType: GridView.GridLines\n  fullName: System.Web.UI.WebControls.GridView.GridLines\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the gridline style for a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"Use the GridLines property to specify the gridline style for a <xref:System.Web.UI.WebControls.GridView> control. The following table lists the available styles.  \\n  \\n|Style|Description|  \\n|-----------|-----------------|  \\n|`GridLines.None`|No gridlines are displayed.|  \\n|`GridLines.Horizontal`|Displays the horizontal gridlines only.|  \\n|`GridLines.Vertical`|Displays the vertical gridlines only.|  \\n|`GridLines.Both`|Displays both the horizontal and vertical gridlines.|\"\n  example:\n  - \"The following example demonstrates how to use the GridLines property to hide the gridlines in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-vb[GridViewGridLines#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1102_1.aspx)]\\n [!code-cs[GridViewGridLines#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1102_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }\n    return:\n      type: System.Web.UI.WebControls.GridLines\n      description: One of the <xref href=\"System.Web.UI.WebControls.GridLines\"></xref> values. The default is <xref uid=\"langword_csharp_GridLines.Both\" name=\"GridLines.Both\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.GridLines*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.HeaderRow\n  id: HeaderRow\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: HeaderRow\n  nameWithType: GridView.HeaderRow\n  fullName: System.Web.UI.WebControls.GridView.HeaderRow\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> object that represents the header row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"Use the HeaderRow property to programmatically access the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the header row in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n> [!NOTE]\\n>  The HeaderRow property is available only after the <xref:System.Web.UI.WebControls.GridView> control creates the header row in the <xref:System.Web.UI.WebControls.GridView.RowCreated> event.  \\n  \\n This property is commonly used when you need to programmatically manipulate the header row, for example, when adding custom content. Any modification to the HeaderRow property must be performed after the <xref:System.Web.UI.WebControls.GridView> control has been rendered; otherwise, the <xref:System.Web.UI.WebControls.GridView> control will overwrite any changes.\"\n  example:\n  - \"The following example demonstrates how to use the HeaderRow property to programmatically change the font color of the header row based on the sort direction.  \\n  \\n [!code-vb[GridViewFooterRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1107_1.aspx)]\\n [!code-cs[GridViewFooterRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1107_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.GridViewRow HeaderRow { get; }\n    return:\n      type: System.Web.UI.WebControls.GridViewRow\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> that represents the header row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.HeaderRow*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.HeaderStyle\n  id: HeaderStyle\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: HeaderStyle\n  nameWithType: GridView.HeaderStyle\n  fullName: System.Web.UI.WebControls.GridView.HeaderStyle\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> object that enables you to set the appearance of the header row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"Use the HeaderStyle property to control the appearance of the header row in a <xref:System.Web.UI.WebControls.GridView> control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns. The properties can be set declaratively using one of the following methods:  \\n  \\n-   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `HeaderStyle-ForeColor`).  \\n  \\n-   Nest a `<HeaderStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n The properties can also be set programmatically in the form `Property.Subproperty` (for example, `HeaderStyle.ForeColor`). Common settings usually include a custom background color, foreground color, and font properties.\"\n  example:\n  - \"The following example demonstrates how to use the HeaderStyle property to define a custom style for the header row in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1352_1.aspx)]\\n [!code-vb[GridViewShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1352_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }\n    return:\n      type: System.Web.UI.WebControls.TableItemStyle\n      description: A reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> that represents the style of the header row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.HeaderStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.HorizontalAlign\n  id: HorizontalAlign\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: HorizontalAlign\n  nameWithType: GridView.HorizontalAlign\n  fullName: System.Web.UI.WebControls.GridView.HorizontalAlign\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the horizontal alignment of a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control on the page.\n  remarks: \"Use the HorizontalAlign property to specify the horizontal alignment of a <xref:System.Web.UI.WebControls.GridView> control within the page. The following table lists the different horizontal alignment styles.  \\n  \\n|Alignment value|Description|  \\n|---------------------|-----------------|  \\n|`HorizontalAlign.NotSet`|The horizontal alignment of the <xref:System.Web.UI.WebControls.GridView> control has not been set.|  \\n|`HorizontalAlign.Left`|The <xref:System.Web.UI.WebControls.GridView> control is left-aligned on the page.|  \\n|`HorizontalAlign.Center`|The <xref:System.Web.UI.WebControls.GridView> control is centered on the page.|  \\n|`HorizontalAlign.Right`|The <xref:System.Web.UI.WebControls.GridView> control is right-aligned on the page.|  \\n|`HorizontalAlign.Justify`|The <xref:System.Web.UI.WebControls.GridView> control is aligned with both the left and right margins of the page.|\"\n  example:\n  - \"The following example demonstrates how to use the HorizontalAlign property to align a <xref:System.Web.UI.WebControls.GridView> control on the right side of a page.  \\n  \\n [!code-vb[GridViewHorizontalAlign#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_660_1.aspx)]\\n [!code-cs[GridViewHorizontalAlign#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_660_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }\n    return:\n      type: System.Web.UI.WebControls.HorizontalAlign\n      description: One of the <xref href=\"System.Web.UI.WebControls.HorizontalAlign\"></xref> values. The default is <xref uid=\"langword_csharp_HorizontalAlign.NotSet\" name=\"HorizontalAlign.NotSet\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.HorizontalAlign*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)\n  id: InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: InitializePager(GridViewRow,Int32,PagedDataSource)\n  nameWithType: GridView.InitializePager(GridViewRow,Int32,PagedDataSource)\n  fullName: System.Web.UI.WebControls.GridView.InitializePager(GridViewRow,Int32,PagedDataSource)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes the pager row displayed when the paging feature is enabled.\n  remarks: \"The InitializePager method is used to initialize the pager row displayed when the paging feature is enabled.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.\"\n  syntax:\n    content: protected virtual void InitializePager (System.Web.UI.WebControls.GridViewRow row, int columnSpan, System.Web.UI.WebControls.PagedDataSource pagedDataSource);\n    parameters:\n    - id: row\n      type: System.Web.UI.WebControls.GridViewRow\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> that represents the pager row to initialize.\n    - id: columnSpan\n      type: System.Int32\n      description: The number of columns the pager row should span.\n    - id: pagedDataSource\n      type: System.Web.UI.WebControls.PagedDataSource\n      description: A <xref href=\"System.Web.UI.WebControls.PagedDataSource\"></xref> that represents the data source.\n  overload: System.Web.UI.WebControls.GridView.InitializePager*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])\n  id: InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: InitializeRow(GridViewRow,DataControlField[])\n  nameWithType: GridView.InitializeRow(GridViewRow,DataControlField[])\n  fullName: System.Web.UI.WebControls.GridView.InitializeRow(GridViewRow,DataControlField[])\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a row in the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"The InitializeRow method is used to initialize a row in the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.\"\n  syntax:\n    content: protected virtual void InitializeRow (System.Web.UI.WebControls.GridViewRow row, System.Web.UI.WebControls.DataControlField[] fields);\n    parameters:\n    - id: row\n      type: System.Web.UI.WebControls.GridViewRow\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> that represents the row to initialize.\n    - id: fields\n      type: System.Web.UI.WebControls.DataControlField[]\n      description: An array of <xref href=\"System.Web.UI.WebControls.DataControlField\"></xref> objects that represent the column fields in the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.InitializeRow*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.IsBindableType(System.Type)\n  id: IsBindableType(System.Type)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: IsBindableType(Type)\n  nameWithType: GridView.IsBindableType(Type)\n  fullName: System.Web.UI.WebControls.GridView.IsBindableType(Type)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Determines whether the specified data type can be bound to a column in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"The IsBindableType method is a helper method that is commonly used by control developers to programmatically determine whether the specified data type can be bound to a column in a <xref:System.Web.UI.WebControls.GridView> control. The following data types can be bound to a column in a <xref:System.Web.UI.WebControls.GridView> control:  \\n  \\n-   <xref:System.Boolean?displayProperty=fullName>  \\n  \\n-   <xref:System.Byte?displayProperty=fullName>  \\n  \\n-   <xref:System.Char?displayProperty=fullName>  \\n  \\n-   <xref:System.DateTime?displayProperty=fullName>  \\n  \\n-   <xref:System.Decimal?displayProperty=fullName>  \\n  \\n-   <xref:System.Double?displayProperty=fullName>  \\n  \\n-   <xref:System.Guid?displayProperty=fullName>  \\n  \\n-   <xref:System.Int16?displayProperty=fullName>  \\n  \\n-   <xref:System.Int32?displayProperty=fullName>  \\n  \\n-   <xref:System.Int64?displayProperty=fullName>  \\n  \\n-   <xref:System.SByte?displayProperty=fullName>  \\n  \\n-   <xref:System.Single?displayProperty=fullName>  \\n  \\n-   <xref:System.String?displayProperty=fullName>  \\n  \\n-   <xref:System.UInt16?displayProperty=fullName>  \\n  \\n-   <xref:System.UInt32?displayProperty=fullName>  \\n  \\n-   <xref:System.UInt64?displayProperty=fullName>\"\n  syntax:\n    content: public virtual bool IsBindableType (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: A &lt;xref:System.Type?displayProperty=fullName&gt; that represents the data type to test.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified data type can be bound to a column in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.IsBindableType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.LoadControlState(System.Object)\n  id: LoadControlState(System.Object)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: LoadControlState(Object)\n  nameWithType: GridView.LoadControlState(Object)\n  fullName: System.Web.UI.WebControls.GridView.LoadControlState(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Loads the state of the properties in the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control that need to be persisted, even when the &lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt; property is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  remarks: \"This method is used to load the state of the properties in the <xref:System.Web.UI.WebControls.GridView> control that need to be persisted, even when the <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> property is set to `false`.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.\"\n  syntax:\n    content: protected override void LoadControlState (object savedState);\n    parameters:\n    - id: savedState\n      type: System.Object\n      description: An &lt;xref:System.Object?displayProperty=fullName&gt; that contains the saved control state values for the control.\n  overload: System.Web.UI.WebControls.GridView.LoadControlState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.LoadViewState(System.Object)\n  id: LoadViewState(System.Object)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: LoadViewState(Object)\n  nameWithType: GridView.LoadViewState(Object)\n  fullName: System.Web.UI.WebControls.GridView.LoadViewState(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Loads the previously saved view state of the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code. However, control developers can override this method to specify how a custom server control restores its view state. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: protected override void LoadViewState (object savedState);\n    parameters:\n    - id: savedState\n      type: System.Object\n      description: An &lt;xref:System.Object?displayProperty=fullName&gt; that contains the saved view state values for the control.\n  overload: System.Web.UI.WebControls.GridView.LoadViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)\n  id: OnBubbleEvent(System.Object,System.EventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnBubbleEvent(Object,EventArgs)\n  nameWithType: GridView.OnBubbleEvent(Object,EventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnBubbleEvent(Object,EventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Determines whether the event for the Web server control is passed up the page's user interface (UI) server control hierarchy.\n  remarks: The OnBubbleEvent method implements the <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName> method to pass events from child controls to the page hierarchy.\n  syntax:\n    content: protected override bool OnBubbleEvent (object source, EventArgs e);\n    parameters:\n    - id: source\n      type: System.Object\n      description: The source of the event.\n    - id: e\n      type: System.EventArgs\n      description: An &lt;xref:System.EventArgs?displayProperty=fullName&gt; that contains event data.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the event has been canceled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.OnBubbleEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnDataPropertyChanged\n  id: OnDataPropertyChanged\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnDataPropertyChanged()\n  nameWithType: GridView.OnDataPropertyChanged()\n  fullName: System.Web.UI.WebControls.GridView.OnDataPropertyChanged()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Rebinds the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control to its data after the <xref:System.Web.UI.WebControls.DataBoundControl.DataMember*>, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource*>, or <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID*> property is changed.\n  remarks: The OnDataPropertyChanged method is a helper method used by the <xref:System.Web.UI.WebControls.GridView> control to rebind the control to its data after the <xref:System.Web.UI.WebControls.DataBoundControl.DataMember%2A>, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>, or <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property is changed.\n  syntax:\n    content: protected override void OnDataPropertyChanged ();\n    parameters: []\n  overload: System.Web.UI.WebControls.GridView.OnDataPropertyChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)\n  id: OnDataSourceViewChanged(System.Object,System.EventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnDataSourceViewChanged(Object,EventArgs)\n  nameWithType: GridView.OnDataSourceViewChanged(Object,EventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(Object,EventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.DataSourceView.DataSourceViewChanged\"></xref> event.\n  remarks: \"The OnDataSourceViewChanged method notifies a <xref:System.Web.UI.WebControls.GridView> control that the underlying data source has changed and that the control should rebind. Typically, the OnDataSourceViewChanged method is called when a property of the data source view has changed.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnDataSourceViewChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected override void OnDataSourceViewChanged (object sender, EventArgs e);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The source of the event.\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)\n  id: OnInit(System.EventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnInit(EventArgs)\n  nameWithType: GridView.OnInit(EventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnInit(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.Control.Init\"></xref> event.\n  remarks: \"When notified by this method, Web server controls must perform any initialization steps that are required to create and set up an instance. In this stage of the server control's life cycle, the control's View state has yet to be populated. Additionally, you cannot access other server controls when this method is called, regardless of whether it is a child or parent to this control. Other server controls are not guaranteed to be created and ready for access.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnInit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected override void OnInit (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains event data.\n  overload: System.Web.UI.WebControls.GridView.OnInit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)\n  id: OnPageIndexChanged(System.EventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnPageIndexChanged(EventArgs)\n  nameWithType: GridView.OnPageIndexChanged(EventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnPageIndexChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.GridView.PageIndexChanged\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> event is raised when one of the pager buttons is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation. This enables you to provide an event-handling method that performs a custom routine, such as a custom paging operation, whenever this event occurs.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnPageIndexChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnPageIndexChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An &lt;xref:System.EventArgs?displayProperty=fullName&gt; that contains event data.\n  overload: System.Web.UI.WebControls.GridView.OnPageIndexChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)\n  id: OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnPageIndexChanging(GridViewPageEventArgs)\n  nameWithType: GridView.OnPageIndexChanging(GridViewPageEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnPageIndexChanging(GridViewPageEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.GridView.PageIndexChanging\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> event is raised when one of the pager buttons is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the paging operation, whenever this event occurs.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnPageIndexChanging method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.GridViewPageEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.GridViewPageEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewPageEventArgs\"></xref> that contains event data.\n  overload: System.Web.UI.WebControls.GridView.OnPageIndexChanging*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: There is no handler for the <xref href=\"System.Web.UI.WebControls.GridView.PageIndexChanging\"></xref> event.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnPagePreLoad(System.Object,System.EventArgs)\n  id: OnPagePreLoad(System.Object,System.EventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnPagePreLoad(Object,EventArgs)\n  nameWithType: GridView.OnPagePreLoad(Object,EventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnPagePreLoad(Object,EventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Sets the initialized state of the data-bound control before the control is loaded.\n  syntax:\n    content: protected override void OnPagePreLoad (object sender, EventArgs e);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The source of the event.\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Web.UI.WebControls.GridView.OnPagePreLoad*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)\n  id: OnPreRender(System.EventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnPreRender(EventArgs)\n  nameWithType: GridView.OnPreRender(EventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnPreRender(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event.\n  remarks: \"This method notifies the server control to perform any necessary pre-rendering steps prior to saving view state and rendering content.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnPreRender method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected override void OnPreRender (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Web.UI.WebControls.GridView.OnPreRender*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)\n  id: OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnRowCancelingEdit(GridViewCancelEditEventArgs)\n  nameWithType: GridView.OnRowCancelingEdit(GridViewCancelEditEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnRowCancelingEdit(GridViewCancelEditEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.GridView.RowCancelingEdit\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> event is raised when the Cancel button of a row in edit mode is clicked, but before the row exits edit mode. This enables you to provide an event-handling method that performs a custom routine, such as stopping the cancel operation if it would put the row in an undesired state, whenever this event occurs.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnRowCancelingEdit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnRowCancelingEdit (System.Web.UI.WebControls.GridViewCancelEditEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.GridViewCancelEditEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewCancelEditEventArgs\"></xref> that contains event data.\n  overload: System.Web.UI.WebControls.GridView.OnRowCancelingEdit*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: There is no handler for the <xref href=\"System.Web.UI.WebControls.GridView.RowCancelingEdit\"></xref> event.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)\n  id: OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnRowCommand(GridViewCommandEventArgs)\n  nameWithType: GridView.OnRowCommand(GridViewCommandEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnRowCommand(GridViewCommandEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.GridView.RowCommand\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.GridView.RowCommand> event is raised when a button is clicked in the <xref:System.Web.UI.WebControls.GridView> control. This enables you to provide an event-handling method that performs a custom routine whenever this event occurs.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnRowCommand method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882).  \\n  \\n The following example demonstrates how provide an event-handling method for the <xref:System.Web.UI.WebControls.GridView.RowCommand> event. When the Add button is clicked for a given row of the <xref:System.Web.UI.WebControls.GridView> control, the name of the selected customer is added to a <xref:System.Web.UI.WebControls.ListBox> control.  \\n  \\n [!code-cs[GridViewRowCommmand#1](~/add/codesnippet/csharp/10c8d2a8-eb40-462e-a63f-_1.aspx)]\\n [!code-vb[GridViewRowCommmand#1](~/add/codesnippet/visualbasic/10c8d2a8-eb40-462e-a63f-_1.aspx)]\"\n  syntax:\n    content: protected virtual void OnRowCommand (System.Web.UI.WebControls.GridViewCommandEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.GridViewCommandEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewCommandEventArgs\"></xref> that contains event data.\n  overload: System.Web.UI.WebControls.GridView.OnRowCommand*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)\n  id: OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnRowCreated(GridViewRowEventArgs)\n  nameWithType: GridView.OnRowCreated(GridViewRowEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnRowCreated(GridViewRowEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.GridView.RowCreated\"></xref> event.\n  remarks: \"Before the <xref:System.Web.UI.WebControls.GridView> control can be rendered, a <xref:System.Web.UI.WebControls.GridViewRow> object must be created for each row in the control. The <xref:System.Web.UI.WebControls.GridView.RowCreated> event is raised when each row in the <xref:System.Web.UI.WebControls.GridView> control is created. This enables you to provide an event-handling method that performs a custom routine, such as adding custom content to a row, whenever this event occurs.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnRowCreated method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following example demonstrates how provide an event-handling method for the <xref:System.Web.UI.WebControls.GridView.RowCreated> event. When a row is being created, its index is stored in the <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> property of a <xref:System.Web.UI.WebControls.LinkButton> control that is contained in the new row. This enables you to determine the index of the row when the user clicks the command button.  \\n  \\n [!code-vb[GridViewRowCreated#1](~/add/codesnippet/visualbasic/a62170ef-53b8-4054-ad66-_1.aspx)]\\n [!code-cs[GridViewRowCreated#1](~/add/codesnippet/csharp/a62170ef-53b8-4054-ad66-_1.aspx)]\"\n  syntax:\n    content: protected virtual void OnRowCreated (System.Web.UI.WebControls.GridViewRowEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.GridViewRowEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewRowEventArgs\"></xref> that contains event data.\n  overload: System.Web.UI.WebControls.GridView.OnRowCreated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)\n  id: OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnRowDataBound(GridViewRowEventArgs)\n  nameWithType: GridView.OnRowDataBound(GridViewRowEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnRowDataBound(GridViewRowEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.GridView.RowDataBound\"></xref> event.\n  remarks: \"Before the <xref:System.Web.UI.WebControls.GridView> control can be rendered, each row in the control must be bound to a record in the data source. The <xref:System.Web.UI.WebControls.GridView.RowDataBound> event is raised when a data row (represented by a <xref:System.Web.UI.WebControls.GridViewRow> object) is bound to data in the <xref:System.Web.UI.WebControls.GridView> control. This enables you to provide an event-handling method that performs a custom routine, such as modifying the values of the data bound to the row, whenever this event occurs.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnRowDataBound method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  \\n  \\n A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882).\"\n  syntax:\n    content: protected virtual void OnRowDataBound (System.Web.UI.WebControls.GridViewRowEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.GridViewRowEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewRowEventArgs\"></xref> that contains event data.\n  overload: System.Web.UI.WebControls.GridView.OnRowDataBound*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)\n  id: OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnRowDeleted(GridViewDeletedEventArgs)\n  nameWithType: GridView.OnRowDeleted(GridViewDeletedEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnRowDeleted(GridViewDeletedEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.GridView.RowDeleted\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.GridView.RowDeleted> event is raised when a row's Delete button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control deletes the row. This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the delete operation, whenever this event occurs.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnRowDeleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnRowDeleted (System.Web.UI.WebControls.GridViewDeletedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.GridViewDeletedEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewDeletedEventArgs\"></xref> that contains event data.\n  overload: System.Web.UI.WebControls.GridView.OnRowDeleted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)\n  id: OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnRowDeleting(GridViewDeleteEventArgs)\n  nameWithType: GridView.OnRowDeleting(GridViewDeleteEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnRowDeleting(GridViewDeleteEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.GridView.RowDeleting\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.GridView.RowDeleting> event is raised when a row's Delete button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control deletes the row. This enables you to provide an event-handling method that performs a custom routine, such as canceling the delete operation, whenever this event occurs.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnRowDeleting method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnRowDeleting (System.Web.UI.WebControls.GridViewDeleteEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.GridViewDeleteEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewDeleteEventArgs\"></xref> that contains event data.\n  overload: System.Web.UI.WebControls.GridView.OnRowDeleting*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: There is no handler for the <xref href=\"System.Web.UI.WebControls.GridView.RowDeleting\"></xref> event.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)\n  id: OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnRowEditing(GridViewEditEventArgs)\n  nameWithType: GridView.OnRowEditing(GridViewEditEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnRowEditing(GridViewEditEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.GridView.RowEditing\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.GridView.RowEditing> event is raised when a row's Edit button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control enters edit mode. This enables you to provide an event-handling method that performs a custom routine, such as canceling the edit operation, whenever this event occurs.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnRowEditing method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnRowEditing (System.Web.UI.WebControls.GridViewEditEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.GridViewEditEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewEditEventArgs\"></xref> that contains event data.\n  overload: System.Web.UI.WebControls.GridView.OnRowEditing*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: There is no handler for the <xref href=\"System.Web.UI.WebControls.GridView.RowEditing\"></xref> event.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)\n  id: OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnRowUpdated(GridViewUpdatedEventArgs)\n  nameWithType: GridView.OnRowUpdated(GridViewUpdatedEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnRowUpdated(GridViewUpdatedEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.GridView.RowUpdated\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.GridView.RowUpdated> event is raised when a row's Update button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control updates the row. This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the update operation, whenever this event occurs.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnRowUpdated method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnRowUpdated (System.Web.UI.WebControls.GridViewUpdatedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewUpdatedEventArgs\"></xref> that contains event data.\n  overload: System.Web.UI.WebControls.GridView.OnRowUpdated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)\n  id: OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnRowUpdating(GridViewUpdateEventArgs)\n  nameWithType: GridView.OnRowUpdating(GridViewUpdateEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnRowUpdating(GridViewUpdateEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.GridView.RowUpdating\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.GridView.RowUpdating> event is raised when a row's Update button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control updates the row. This enables you to provide an event-handling method that performs a custom routine, such as canceling the update operation, whenever this event occurs.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnRowUpdating method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnRowUpdating (System.Web.UI.WebControls.GridViewUpdateEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.GridViewUpdateEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewUpdateEventArgs\"></xref> that contains event data.\n  overload: System.Web.UI.WebControls.GridView.OnRowUpdating*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: There is no handler for the <xref href=\"System.Web.UI.WebControls.GridView.RowUpdating\"></xref> event.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)\n  id: OnSelectedIndexChanged(System.EventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnSelectedIndexChanged(EventArgs)\n  nameWithType: GridView.OnSelectedIndexChanged(EventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.GridView.SelectedIndexChanged\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> event is raised when a row's Select button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the select operation. This enables you to provide an event-handling method that performs a custom routine, such as updating a status label with the currently selected row, whenever this event occurs.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnSelectedIndexChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following example shows how create an event handler for the <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> event. In this example, the selected row is persisted in the view state. So even after a sorting or a paging operation, only that row will be selected.  \\n  \\n [!code-vb[System.Web.UI.WebControls.GridView.OnSelectedIndexChanged#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_77_1.aspx)]\\n [!code-cs[System.Web.UI.WebControls.GridView.OnSelectedIndexChanged#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_77_1.aspx)]\"\n  syntax:\n    content: protected virtual void OnSelectedIndexChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An &lt;xref:System.EventArgs?displayProperty=fullName&gt; that contains event data.\n  overload: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)\n  id: OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnSelectedIndexChanging(GridViewSelectEventArgs)\n  nameWithType: GridView.OnSelectedIndexChanging(GridViewSelectEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(GridViewSelectEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.GridView.SelectedIndexChanging\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> event is raised when a row's Select button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the select operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the selection operation, whenever this event occurs.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnSelectedIndexChanging method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnSelectedIndexChanging (System.Web.UI.WebControls.GridViewSelectEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.GridViewSelectEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewSelectEventArgs\"></xref> that contains event data.\n  overload: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)\n  id: OnSorted(System.EventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnSorted(EventArgs)\n  nameWithType: GridView.OnSorted(EventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnSorted(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.GridView.Sorted\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.GridView.Sorted> event is raised when the hyperlink to sort a column is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the sort operation. This enables you to provide an event-handling method that performs a custom routine, such as custom sorting, whenever this event occurs.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnSorted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnSorted (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An &lt;xref:System.EventArgs?displayProperty=fullName&gt; that contains event data.\n  overload: System.Web.UI.WebControls.GridView.OnSorted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)\n  id: OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: OnSorting(GridViewSortEventArgs)\n  nameWithType: GridView.OnSorting(GridViewSortEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnSorting(GridViewSortEventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.WebControls.GridView.Sorting\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.GridView.Sorting> event is raised when the hyperlink to sort a column is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the sort operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the sorting operation, whenever this event occurs.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnSorting method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnSorting (System.Web.UI.WebControls.GridViewSortEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.WebControls.GridViewSortEventArgs\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewSortEventArgs\"></xref> that contains event data.\n  overload: System.Web.UI.WebControls.GridView.OnSorting*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: There is no handler for the <xref href=\"System.Web.UI.WebControls.GridView.Sorting\"></xref> event.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.PageCount\n  id: PageCount\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: PageCount\n  nameWithType: GridView.PageCount\n  fullName: System.Web.UI.WebControls.GridView.PageCount\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the number of pages required to display the records of the data source in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: When the paging feature is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`), use the PageCount property to determine the total number of pages required to display the records in the data source. This value is calculated by dividing the total number of records in the data source by the number of records displayed in a page (as specified by the <xref:System.Web.UI.WebControls.GridView.PageSize%2A> property) and rounding up.\n  example:\n  - \"The following example demonstrates how to use the PageCount property to determine the total number of pages displayed in the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-vb[GridViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_202_1.aspx)]\\n [!code-cs[GridViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_202_1.aspx)]\"\n  syntax:\n    content: public virtual int PageCount { get; }\n    return:\n      type: System.Int32\n      description: The number of pages in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.PageCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.PageIndex\n  id: PageIndex\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: PageIndex\n  nameWithType: GridView.PageIndex\n  fullName: System.Web.UI.WebControls.GridView.PageIndex\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the index of the currently displayed page.\n  remarks: When the paging feature is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`), use the PageIndex property to determine the index of the currently displayed page. You can also use this property to programmatically change the displayed page.\n  example:\n  - \"The following example demonstrates how to use the PageIndex property to determine the index of the currently displayed page in the <xref:System.Web.UI.WebControls.GridView> control. The example also shows how the PageIndex property can be used to specify which page is displayed after the user selects a value from the pager row.  \\n  \\n [!code-vb[GridViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_849_1.aspx)]\\n [!code-cs[GridViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_849_1.aspx)]\"\n  syntax:\n    content: public virtual int PageIndex { get; set; }\n    return:\n      type: System.Int32\n      description: The zero-based index of the currently displayed page.\n  overload: System.Web.UI.WebControls.GridView.PageIndex*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The PageIndex property is set to a value less than 0.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.PageIndexChanged\n  id: PageIndexChanged\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: PageIndexChanged\n  nameWithType: GridView.PageIndexChanged\n  fullName: System.Web.UI.WebControls.GridView.PageIndexChanged\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when one of the pager buttons is clicked, but after the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control handles the paging operation.\n  remarks: \"The PageIndexChanged event is raised when one of the pager buttons is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation. This enables you to provide an event-handling method that performs a custom routine, such as a custom paging operation, whenever this event occurs.  \\n  \\n To determine the index of the page selected by the user, use the <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> property of the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following example demonstrates how to use the PageIndexChanged event to display the page number selected by the user from the pager row.  \\n  \\n [!code-vb[GridViewPageIndexChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_26_1.aspx)]\\n [!code-cs[GridViewPageIndexChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_26_1.aspx)]\"\n  syntax:\n    content: public event EventHandler PageIndexChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.PageIndexChanging\n  id: PageIndexChanging\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: PageIndexChanging\n  nameWithType: GridView.PageIndexChanging\n  fullName: System.Web.UI.WebControls.GridView.PageIndexChanging\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when one of the pager buttons is clicked, but before the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control handles the paging operation.\n  remarks: \"The PageIndexChanging event is raised when one of the pager buttons is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the paging operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the paging operation, whenever this event occurs.  \\n  \\n> [!NOTE]\\n>  This event is not raised when you programmatically set the <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> property.  \\n  \\n A <xref:System.Web.UI.WebControls.GridViewPageEventArgs> object is passed to the event-handling method, which enables you to determine the index of the page selected by the user and to indicate that the paging operation should be canceled. To cancel the paging operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewPageEventArgs> object to `true`.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following example demonstrates how to use the PageIndexChanging event to cancel the paging operation if the user attempts to navigate to another page when a <xref:System.Web.UI.WebControls.GridView> control is in edit mode.  \\n  \\n [!code-cs[GridViewPageIndexChanging#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_115_1.aspx)]\\n [!code-vb[GridViewPageIndexChanging#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_115_1.aspx)]\"\n  syntax:\n    content: public event System.Web.UI.WebControls.GridViewPageEventHandler PageIndexChanging;\n    return:\n      type: System.Web.UI.WebControls.GridViewPageEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.PagerSettings\n  id: PagerSettings\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: PagerSettings\n  nameWithType: GridView.PagerSettings\n  fullName: System.Web.UI.WebControls.GridView.PagerSettings\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a reference to the <xref href=\"System.Web.UI.WebControls.PagerSettings\"></xref> object that enables you to set the properties of the pager buttons in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"Use the PagerSettings property to control the settings of the pager row in a <xref:System.Web.UI.WebControls.GridView> control. The pager row is displayed when the paging feature is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`) and contains the controls that allow the user to navigate to the different pages in the control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.PagerSettings> object it returns. The properties can be set declaratively using one of the following methods:  \\n  \\n-   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.PagerSettings> object (for example, `PagerSettings-Mode`).  \\n  \\n-   Nest a `<PagerSettings>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n The properties can also be set programmatically in the form `Property.Subproperty` (for example, `PagerStyle.Mode`). Common settings usually include the pager row's display mode and custom text or images for the navigation controls.\"\n  example:\n  - \"The following example demonstrates how to set the PagerSettings property declaratively. It sets the font and background for the pager row to blue and light blue, respectively.  \\n  \\n [!code-vb[GridViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1275_1.aspx)]\\n [!code-cs[GridViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1275_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }\n    return:\n      type: System.Web.UI.WebControls.PagerSettings\n      description: A reference to the <xref href=\"System.Web.UI.WebControls.PagerSettings\"></xref> that enables you to set the properties of the pager buttons in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.PagerSettings*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.PagerStyle\n  id: PagerStyle\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: PagerStyle\n  nameWithType: GridView.PagerStyle\n  fullName: System.Web.UI.WebControls.GridView.PagerStyle\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> object that enables you to set the appearance of the pager row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"Use the PagerStyle property to control the appearance of the pager row in a <xref:System.Web.UI.WebControls.GridView> control. The pager row is displayed when the paging feature is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`) and contains the controls that allow the user to navigate to the different pages in the control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns. The properties can be set declaratively using one of the following methods:  \\n  \\n-   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `PagerStyle-ForeColor`).  \\n  \\n-   Nest a `<PagerStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n The properties can also be set programmatically in the form `Property.Subproperty` (for example, `PagerStyle.ForeColor`). Common settings usually include a custom background color, foreground color, and font properties.\"\n  example:\n  - \"The following example demonstrates how to set the PagerStyle property declaratively. It sets the font and background for the pager row to blue and light blue, respectively.  \\n  \\n [!code-vb[GridViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_389_1.aspx)]\\n [!code-cs[GridViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_389_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }\n    return:\n      type: System.Web.UI.WebControls.TableItemStyle\n      description: A reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> that represents the style of the pager row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.PagerStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.PagerTemplate\n  id: PagerTemplate\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: PagerTemplate\n  nameWithType: GridView.PagerTemplate\n  fullName: System.Web.UI.WebControls.GridView.PagerTemplate\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the custom content for the pager row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"A pager row is displayed in a <xref:System.Web.UI.WebControls.GridView> control when the paging feature is enabled (when the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property is set to true). The pager row contains the controls that allow the user to navigate to the different pages in the control. Instead of using the built-in pager row user interface (UI), you can define your own UI by using the PagerTemplate property.  \\n  \\n> [!NOTE]\\n>  When the PagerTemplate property is set, it overrides the built-in pager row UI.  \\n  \\n To specify a custom template for the pager row, first place `<PagerTemplate>` tags between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control. You can then list the contents of the template between the opening and closing `<PagerTemplate>` tags. To control the appearance of the pager row, use the <xref:System.Web.UI.WebControls.GridView.PagerStyle%2A> property.  \\n  \\n Typically, button controls are added to the pager template to perform the paging operations. The <xref:System.Web.UI.WebControls.GridView> control performs a paging operation when a button control with its `CommandName` property set to \\\"Page\\\" is clicked. The button's `CommandArgument` property determines the type of paging operation to perform. The following table lists the command argument values supported by the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n|`CommandArgument` value|Description|  \\n|-----------------------------|-----------------|  \\n|\\\"Next\\\"|Navigates to the next page.|  \\n|\\\"Prev\\\"|Navigates to the previous page.|  \\n|\\\"First\\\"|Navigates to the first page.|  \\n|\\\"Last\\\"|Navigates to the last page.|  \\n|Integer value|Navigates to the specified page number.|\"\n  example:\n  - \"The following example demonstrates how to create a custom pager template that allows the user to navigate through a <xref:System.Web.UI.WebControls.GridView> control using a <xref:System.Web.UI.WebControls.DropDownList> control.  \\n  \\n [!code-vb[GridViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1266_1.aspx)]\\n [!code-cs[GridViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1266_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }\n    return:\n      type: System.Web.UI.ITemplate\n      description: A <xref href=\"System.Web.UI.ITemplate\"></xref> that contains the custom content for the pager row. The default value is null, which indicates that this property is not set.\n  overload: System.Web.UI.WebControls.GridView.PagerTemplate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.PageSize\n  id: PageSize\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: PageSize\n  nameWithType: GridView.PageSize\n  fullName: System.Web.UI.WebControls.GridView.PageSize\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the number of records to display on a page in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: When the paging feature is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`), use the PageSize property to specify the number of records to display on a single page.\n  example:\n  - \"The following example demonstrates how to use the PageSize property to display 15 records at a time in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-vb[GridViewPageSize#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1100_1.aspx)]\\n [!code-cs[GridViewPageSize#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1100_1.aspx)]\"\n  syntax:\n    content: public virtual int PageSize { get; set; }\n    return:\n      type: System.Int32\n      description: The number of records to display on a single page. The default is 10.\n  overload: System.Web.UI.WebControls.GridView.PageSize*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The PageSize property is set to a value less than 1.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.PerformDataBinding(System.Collections.IEnumerable)\n  id: PerformDataBinding(System.Collections.IEnumerable)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: PerformDataBinding(IEnumerable)\n  nameWithType: GridView.PerformDataBinding(IEnumerable)\n  fullName: System.Web.UI.WebControls.GridView.PerformDataBinding(IEnumerable)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Binds the specified data source to the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: The PerformDataBinding method is a helper method called by the <xref:System.Web.UI.WebControls.GridView> control to bind the specified data source to the control.\n  syntax:\n    content: protected override void PerformDataBinding (System.Collections.IEnumerable data);\n    parameters:\n    - id: data\n      type: System.Collections.IEnumerable\n      description: An <xref:System.Collections.IEnumerable> that contains the data source.\n  overload: System.Web.UI.WebControls.GridView.PerformDataBinding*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.PrepareControlHierarchy\n  id: PrepareControlHierarchy\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: PrepareControlHierarchy()\n  nameWithType: GridView.PrepareControlHierarchy()\n  fullName: System.Web.UI.WebControls.GridView.PrepareControlHierarchy()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Establishes the control hierarchy.\n  remarks: \"This method is used to establish the control hierarchy for the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.\"\n  syntax:\n    content: protected virtual void PrepareControlHierarchy ();\n    parameters: []\n  overload: System.Web.UI.WebControls.GridView.PrepareControlHierarchy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.RaiseCallbackEvent(System.String)\n  id: RaiseCallbackEvent(System.String)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: RaiseCallbackEvent(String)\n  nameWithType: GridView.RaiseCallbackEvent(String)\n  fullName: System.Web.UI.WebControls.GridView.RaiseCallbackEvent(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Creates the arguments for the callback handler in the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*> method.\n  remarks: The RaiseCallbackEvent method is a helper method used by the <xref:System.Web.UI.WebControls.GridView> control to create the arguments for the callback handler in the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.\n  syntax:\n    content: protected virtual void RaiseCallbackEvent (string eventArgument);\n    parameters:\n    - id: eventArgument\n      type: System.String\n      description: The argument to pass to the event handler.\n  overload: System.Web.UI.WebControls.GridView.RaiseCallbackEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String)\n  id: RaisePostBackEvent(System.String)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: RaisePostBackEvent(String)\n  nameWithType: GridView.RaisePostBackEvent(String)\n  fullName: System.Web.UI.WebControls.GridView.RaisePostBackEvent(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the appropriate events for the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control when it posts back to the server.\n  remarks: \"The page calls the <xref:System.Web.UI.Page.RaisePostBackEvent%2A> method when a postback event occurs that raises the appropriate events for a <xref:System.Web.UI.WebControls.GridView> control. This call occurs in the page life cycle after loading and change notification are complete, but before prerendering occurs. This method has been implemented to create a <xref:System.Web.UI.WebControls.CommandEventArgs> object for the events that are raised.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.\"\n  syntax:\n    content: protected virtual void RaisePostBackEvent (string eventArgument);\n    parameters:\n    - id: eventArgument\n      type: System.String\n      description: The event argument from which to create a <xref href=\"System.Web.UI.WebControls.CommandEventArgs\"></xref> for the event or events that are raised.\n  overload: System.Web.UI.WebControls.GridView.RaisePostBackEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter)\n  id: Render(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: Render(HtmlTextWriter)\n  nameWithType: GridView.Render(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.GridView.Render(HtmlTextWriter)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Renders the Web server control content to the client's browser using the specified <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object.\n  remarks: \"The Render method is used to render the server control content to the client's browser using the specified <xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName> object.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.\"\n  syntax:\n    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);\n    parameters:\n    - id: writer\n      type: System.Web.UI.HtmlTextWriter\n      description: The <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> used to render the server control content on the client's browser.\n  overload: System.Web.UI.WebControls.GridView.Render*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.RowCancelingEdit\n  id: RowCancelingEdit\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: RowCancelingEdit\n  nameWithType: GridView.RowCancelingEdit\n  fullName: System.Web.UI.WebControls.GridView.RowCancelingEdit\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when the Cancel button of a row in edit mode is clicked, but before the row exits edit mode.\n  remarks: \"The RowCancelingEdit event is raised when the Cancel button of a row in edit mode is clicked, but before the row exits edit mode. This enables you to provide an event-handling method that performs a custom routine, such as stopping the cancel operation if it would put the row in an undesired state, whenever this event occurs.  \\n  \\n A <xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the cancel operation should be stopped. To stop the cancel operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs> object to `true`.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following example demonstrates how to use the RowCancelingEdit event to display a cancellation message when the user cancels the update operation of a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewRowCancellingEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_3_1.aspx)]\\n [!code-vb[GridViewRowCancellingEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_3_1.aspx)]  \\n  \\n The following example demonstrates how to use the RowCancelingEdit event to cancel the update operation when the data source is set programmatically.  \\n  \\n [!code-cs[GridViewRowEditing#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_3_2.aspx)]\\n [!code-vb[GridViewRowEditing#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_3_2.aspx)]\"\n  syntax:\n    content: public event System.Web.UI.WebControls.GridViewCancelEditEventHandler RowCancelingEdit;\n    return:\n      type: System.Web.UI.WebControls.GridViewCancelEditEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.RowCommand\n  id: RowCommand\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: RowCommand\n  nameWithType: GridView.RowCommand\n  fullName: System.Web.UI.WebControls.GridView.RowCommand\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when a button is clicked in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"The RowCommand event is raised when a button is clicked in the <xref:System.Web.UI.WebControls.GridView> control. This enables you to provide an event-handling method that performs a custom routine whenever this event occurs.  \\n  \\n Buttons within a <xref:System.Web.UI.WebControls.GridView> control can also invoke some of the built-in functionality of the control. To perform one of these operations, set the `CommandName` property of a button to one of the values in the following table.  \\n  \\n|`CommandName` value|Description|  \\n|-------------------------|-----------------|  \\n|\\\"Cancel\\\"|Cancels an edit operation and returns the <xref:System.Web.UI.WebControls.GridView> control to read-only mode. Raises the <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> event.|  \\n|\\\"Delete\\\"|Deletes the current record. Raises the <xref:System.Web.UI.WebControls.GridView.RowDeleting> and <xref:System.Web.UI.WebControls.GridView.RowDeleted> events.|  \\n|\\\"Edit\\\"|Puts the current record in edit mode. Raises the <xref:System.Web.UI.WebControls.GridView.RowEditing> event.|  \\n|\\\"Page\\\"|Performs a paging operation. Sets the `CommandArgument` property of the button to \\\"First\\\", \\\"Last\\\", \\\"Next\\\", \\\"Prev\\\", or a page number to specify the type of paging operation to perform. Raises the <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> and <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> events.|  \\n|\\\"Select\\\"|Selects the current record. Raises the <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> and <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> events.|  \\n|\\\"Sort\\\"|Sorts the <xref:System.Web.UI.WebControls.GridView> control. Raises the <xref:System.Web.UI.WebControls.GridView.Sorting> and <xref:System.Web.UI.WebControls.GridView.Sorted> events.|  \\n|\\\"Update\\\"|Updates the current record in the data source. Raises the <xref:System.Web.UI.WebControls.GridView.RowUpdating> and <xref:System.Web.UI.WebControls.GridView.RowUpdated> events.|  \\n  \\n Although the RowCommand event is raised when a button listed in the previous table is clicked, it is recommended that you use the events listed in the table for the operation.  \\n  \\n A <xref:System.Web.UI.WebControls.GridViewCommandEventArgs> object is passed to the event-handling method, which enables you to determine the command name and command argument of the button clicked.  \\n  \\n> [!NOTE]\\n>  To determine the index of the row that raised the event, use the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> property of the event argument that is passed to the event. The <xref:System.Web.UI.WebControls.ButtonField> class automatically populates the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> property with the appropriate index value. For other command buttons, you must manually set the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property of the command button. For example, you can set the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> to `<%# Container.DataItemIndex %>` when the <xref:System.Web.UI.WebControls.GridView> control has no paging enabled.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882).  \\n  \\n The following example demonstrates how to use the RowCommand event to add the name of a customer from a <xref:System.Web.UI.WebControls.GridView> control to a <xref:System.Web.UI.WebControls.ListBox> control when a row's Add button is clicked.  \\n  \\n [!code-cs[GridViewRowCommmand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_121_1.aspx)]\\n [!code-vb[GridViewRowCommmand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_121_1.aspx)]  \\n  \\n The following example demonstrates how to use the RowCommand event to update the price of a product when a row's button is clicked. This example has the paging functionality enabled for the <xref:System.Web.UI.WebControls.GridView> control and sets the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property of the <xref:System.Web.UI.WebControls.Button> control to the appropriate row index.  \\n  \\n [!code-cs[GridViewRowCommmand#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_121_2.aspx)]\\n [!code-vb[GridViewRowCommmand#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_121_2.aspx)]\"\n  syntax:\n    content: public event System.Web.UI.WebControls.GridViewCommandEventHandler RowCommand;\n    return:\n      type: System.Web.UI.WebControls.GridViewCommandEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.RowCreated\n  id: RowCreated\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: RowCreated\n  nameWithType: GridView.RowCreated\n  fullName: System.Web.UI.WebControls.GridView.RowCreated\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when a row is created in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"Before the <xref:System.Web.UI.WebControls.GridView> control can be rendered, a <xref:System.Web.UI.WebControls.GridViewRow> object must be created for each row in the control. The RowCreated event is raised when each row in the <xref:System.Web.UI.WebControls.GridView> control is created. This enables you to provide an event-handling method that performs a custom routine, such as adding custom content to a row, whenever this event occurs.  \\n  \\n A <xref:System.Web.UI.WebControls.GridViewRowEventArgs> object is passed to the event-handling method, which enables you to access the properties of the row being created. To access a specific cell in the row, use the <xref:System.Web.UI.WebControls.TableRow.Cells%2A> property of the <xref:System.Web.UI.WebControls.GridViewRowEventArgs> object. You can determine which row type (header row, data row, and so on) is being created by using the <xref:System.Web.UI.WebControls.GridViewRow.RowType%2A> property.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following example demonstrates how to use the RowCreated event to store the index of the row being created in the <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> property of a <xref:System.Web.UI.WebControls.LinkButton> control contained in the row. This enables you to determine the index of the row that contains the <xref:System.Web.UI.WebControls.LinkButton> control when the user clicked the button.  \\n  \\n [!code-vb[GridViewRowCreated#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_98_1.aspx)]\\n [!code-cs[GridViewRowCreated#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_98_1.aspx)]\"\n  syntax:\n    content: public event System.Web.UI.WebControls.GridViewRowEventHandler RowCreated;\n    return:\n      type: System.Web.UI.WebControls.GridViewRowEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.RowDataBound\n  id: RowDataBound\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: RowDataBound\n  nameWithType: GridView.RowDataBound\n  fullName: System.Web.UI.WebControls.GridView.RowDataBound\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when a data row is bound to data in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"Before the <xref:System.Web.UI.WebControls.GridView> control can be rendered, each row in the control must be bound to a record in the data source. The RowDataBound event is raised when a data row (represented by a <xref:System.Web.UI.WebControls.GridViewRow> object) is bound to data in the <xref:System.Web.UI.WebControls.GridView> control. This enables you to provide an event-handling method that performs a custom routine, such as modifying the values of the data bound to the row, whenever this event occurs.  \\n  \\n A <xref:System.Web.UI.WebControls.GridViewRowEventArgs> object is passed to the event-handling method, which enables you to access the properties of the row being bound. To access a specific cell in the row, use the <xref:System.Web.UI.WebControls.TableRow.Cells%2A> property of the <xref:System.Web.UI.WebControls.GridViewRow> object contained in the <xref:System.Web.UI.WebControls.GridViewRowEventArgs.Row%2A> property of the <xref:System.Web.UI.WebControls.GridViewRowEventArgs> object. You can determine which row type (header row, data row, and so on) is being bound by using the <xref:System.Web.UI.WebControls.GridViewRow.RowType%2A> property.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882).  \\n  \\n The following example demonstrates how to use the RowDataBound event to modify the value of a field in the data source before it is displayed in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewRowDataBound#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_141_1.aspx)]\\n [!code-vb[GridViewRowDataBound#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_141_1.aspx)]\"\n  syntax:\n    content: public event System.Web.UI.WebControls.GridViewRowEventHandler RowDataBound;\n    return:\n      type: System.Web.UI.WebControls.GridViewRowEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.RowDeleted\n  id: RowDeleted\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: RowDeleted\n  nameWithType: GridView.RowDeleted\n  fullName: System.Web.UI.WebControls.GridView.RowDeleted\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when a row's Delete button is clicked, but after the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control deletes the row.\n  remarks: \"The RowDeleted event is raised when a row's Delete button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control deletes the row. This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the delete operation, whenever this event occurs.  \\n  \\n A <xref:System.Web.UI.WebControls.GridViewDeletedEventArgs> object is passed to the event-handling method, which enables you to determine the number of rows affected and any exceptions that might have occurred. You can also indicate whether the exception was handled in the event-handling method by setting the <xref:System.Web.UI.WebControls.GridViewDeletedEventArgs.ExceptionHandled%2A> property of the <xref:System.Web.UI.WebControls.GridViewDeletedEventArgs> object.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following example demonstrates how to use the RowDeleted event to check the result of the delete operation. A message is displayed to indicate to the user whether the operation succeeded.  \\n  \\n [!code-cs[GridViewRowDeleted#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_152_1.aspx)]\\n [!code-vb[GridViewRowDeleted#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_152_1.aspx)]\"\n  syntax:\n    content: public event System.Web.UI.WebControls.GridViewDeletedEventHandler RowDeleted;\n    return:\n      type: System.Web.UI.WebControls.GridViewDeletedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.RowDeleting\n  id: RowDeleting\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: RowDeleting\n  nameWithType: GridView.RowDeleting\n  fullName: System.Web.UI.WebControls.GridView.RowDeleting\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when a row's Delete button is clicked, but before the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control deletes the row.\n  remarks: \"The RowDeleting event is raised when a row's Delete button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control deletes the row. This enables you to provide an event-handling method that performs a custom routine, such as canceling the delete operation, whenever this event occurs.  \\n  \\n A <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the delete operation should be canceled. To cancel the delete operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> object to `true`. You can also manipulate the <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Keys%2A> and <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Values%2A> collections, if necessary, before the values are passed to the data source.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following example demonstrates how to use the RowDeleting event to cancel the delete operation. The page contains a <xref:System.Web.UI.WebControls.GridView> control that displays a list of customer names and addresses from the AdventureWorksLT database. When the user clicks the **Delete** link for a row, the handler for the RowDeleting event checks the last name of the person displayed in the row that the user is trying to delete. If the last name is \\\"Beaver\\\", the delete operation is canceled, and an error message is displayed. For any other name, the delete operation proceeds and the row is deleted.  \\n  \\n The event handler uses the <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.RowIndex%2A> property of the <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> object to find the row that the user is trying to delete. The example examines the contents of the <xref:System.Web.UI.WebControls.GridView.Rows%2A> collection. If the value you want to compare to is a key value, you could examine the <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> collection instead.  \\n  \\n Rows are deleted from the CustomerAddress table instead of the Customer table in order to keep the example simple. The <xref:System.Web.UI.WebControls.GridView> control shows the result of joining three tables: Customer, Address, and CustomerAddress. When a CustomerAddress row is deleted, the corresponding <xref:System.Web.UI.WebControls.GridView> row disappears. Referential integrity constraints would make the code for an example that actually deletes rows from the Customer table more complex.  \\n  \\n For information about how to set up the AdventureWorksLT database, see [How to: Set Up an AdventureWorksLT Sample Database for ASP.NET Development](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[GridViewRowDeleting#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_24_1.aspx)]\\n [!code-cs[GridViewRowDeleting#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_24_1.aspx)]\"\n  syntax:\n    content: public event System.Web.UI.WebControls.GridViewDeleteEventHandler RowDeleting;\n    return:\n      type: System.Web.UI.WebControls.GridViewDeleteEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.RowEditing\n  id: RowEditing\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: RowEditing\n  nameWithType: GridView.RowEditing\n  fullName: System.Web.UI.WebControls.GridView.RowEditing\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when a row's Edit button is clicked, but before the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control enters edit mode.\n  remarks: \"The RowEditing event is raised when a row's Edit button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control enters edit mode. This enables you to provide an event-handling method that performs a custom routine, such as canceling the edit operation, whenever this event occurs.  \\n  \\n A <xref:System.Web.UI.WebControls.GridViewEditEventArgs> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the edit operation should be canceled. To cancel the edit operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewEditEventArgs> object to `true`.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following example demonstrates how to use the RowEditing event to put a row in edit mode when the data source is set programmatically.  \\n  \\n [!code-cs[GridViewRowEditing#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_133_1.aspx)]\\n [!code-vb[GridViewRowEditing#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_133_1.aspx)]  \\n  \\n The following example demonstrates how to use the RowEditing event to cancel the editing operation if the user attempts to edit the record for a company in the United States.  \\n  \\n [!code-vb[GridViewRowEditing#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_133_2.aspx)]\\n [!code-cs[GridViewRowEditing#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_133_2.aspx)]\"\n  syntax:\n    content: public event System.Web.UI.WebControls.GridViewEditEventHandler RowEditing;\n    return:\n      type: System.Web.UI.WebControls.GridViewEditEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.RowHeaderColumn\n  id: RowHeaderColumn\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: RowHeaderColumn\n  nameWithType: GridView.RowHeaderColumn\n  fullName: System.Web.UI.WebControls.GridView.RowHeaderColumn\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the name of the column to use as the column header for the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control. This property is provided to make the control more accessible to users of assistive technology devices.\n  remarks: \"In HTML, the header of a table can be associated with either a row or a column. The direction is specified by setting the `scope` attribute of the `<th>` elements. The <xref:System.Web.UI.WebControls.GridView> control has a built-in header row that can be displayed by setting the <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A> property to `true`. You can also optionally specify a header column (usually the first or last column in the <xref:System.Web.UI.WebControls.GridView> control) by setting this property. When this property is set, all cells in the column that corresponds to the specified field name are rendered as `<th scope=\\\"row\\\">` elements.  \\n  \\n> [!NOTE]\\n>  Although the specified column is treated like a header, the <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>, <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>, and <xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A> properties do not apply to the header column.  \\n  \\n The default rendering of the `<th>` element is preserved, rendering text as bold and centered horizontally. Developers can override the behavior of the `<th>` element using a cascading style sheet.  \\n  \\n> [!NOTE]\\n>  This property works only with bound fields. It does not work with template fields.\"\n  example:\n  - \"The following example demonstrates how to use the RowHeaderColumn property to display a header column in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-vb[GridViewRowHeaderColumn#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_213_1.aspx)]\\n [!code-cs[GridViewRowHeaderColumn#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_213_1.aspx)]\"\n  syntax:\n    content: public virtual string RowHeaderColumn { get; set; }\n    return:\n      type: System.String\n      description: The name of the column to use as the column header. The default is an empty string (\"\"), which indicates that this property is not set.\n  overload: System.Web.UI.WebControls.GridView.RowHeaderColumn*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.Rows\n  id: Rows\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: Rows\n  nameWithType: GridView.Rows\n  fullName: System.Web.UI.WebControls.GridView.Rows\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a collection of <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> objects that represent the data rows in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"The Rows property (collection) is used to store the data rows in a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> control automatically populates the Rows collection by creating a <xref:System.Web.UI.WebControls.GridViewRow> object for each record in the data source and then adding each object to the collection. This property is commonly used to access a specific row in the control or to iterate though the entire collection of rows.  \\n  \\n> [!NOTE]\\n>  Only rows with their <xref:System.Web.UI.WebControls.GridViewRow.RowType%2A> property set to `DataControlRowType.DataRow` are stored in the Rows collection. The <xref:System.Web.UI.WebControls.GridViewRow> objects that represent the header, footer, and pager rows are not included in the collection.\"\n  example:\n  - \"The following example demonstrates how to use the Rows collection to access the row being edited in a <xref:System.Web.UI.WebControls.GridView> control. After a row is updated, a message is displayed to indicate that the update was successful.  \\n  \\n [!code-cs[GridViewRows#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_233_1.aspx)]\\n [!code-vb[GridViewRows#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_233_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.GridViewRowCollection Rows { get; }\n    return:\n      type: System.Web.UI.WebControls.GridViewRowCollection\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewRowCollection\"></xref> that contains all the data rows in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.Rows*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.RowStyle\n  id: RowStyle\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: RowStyle\n  nameWithType: GridView.RowStyle\n  fullName: System.Web.UI.WebControls.GridView.RowStyle\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> object that enables you to set the appearance of the data rows in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"Use the RowStyle property to control the appearance of the data rows in a <xref:System.Web.UI.WebControls.GridView> control. When the <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> property is also set, the data rows are displayed alternating between the RowStyle settings and the <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> settings. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns. The properties can be set declaratively using one of the following methods:  \\n  \\n-   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `RowStyle-ForeColor`).  \\n  \\n-   Nest a `<RowStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n The properties can also be set programmatically in the form `Property.Subproperty` (for example, `RowStyle.ForeColor`). Common settings usually include a custom background color, foreground color, and font properties.\"\n  example:\n  - \"The following example demonstrates how to use the RowStyle property to declaratively define the style for the item rows in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-vb[GridViewRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_996_1.aspx)]\\n [!code-cs[GridViewRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_996_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }\n    return:\n      type: System.Web.UI.WebControls.TableItemStyle\n      description: A reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> that represents the style of the data rows in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.RowStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.RowUpdated\n  id: RowUpdated\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: RowUpdated\n  nameWithType: GridView.RowUpdated\n  fullName: System.Web.UI.WebControls.GridView.RowUpdated\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when a row's Update button is clicked, but after the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control updates the row.\n  remarks: \"The RowUpdated event is raised when a row's Update button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control updates the row. This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the update operation, whenever this event occurs.  \\n  \\n A <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> object is passed to the event-handling method, which enables you to determine the number of rows affected and any exceptions that might have occurred. You can also indicate whether the exception was handled in the event-handling method by setting the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property of the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> object.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following example demonstrates how to use the RowUpdated event to check the result of the update operation. A message is displayed to indicate to the user whether the operation succeeded.  \\n  \\n [!code-vb[GridViewRowUpdated#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_146_1.aspx)]\\n [!code-cs[GridViewRowUpdated#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_146_1.aspx)]\"\n  syntax:\n    content: public event System.Web.UI.WebControls.GridViewUpdatedEventHandler RowUpdated;\n    return:\n      type: System.Web.UI.WebControls.GridViewUpdatedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.RowUpdating\n  id: RowUpdating\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: RowUpdating\n  nameWithType: GridView.RowUpdating\n  fullName: System.Web.UI.WebControls.GridView.RowUpdating\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when a row's Update button is clicked, but before the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control updates the row.\n  remarks: \"The RowUpdating event is raised when a row's Update button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control updates the row. This enables you to provide an event-handling method that performs a custom routine, such as canceling the update operation, whenever this event occurs.  \\n  \\n A <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the update operation should be canceled. To cancel the update operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> object to `true`. You can also manipulate the <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>, <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A>, and <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A> collections, if necessary, before the values are passed to the data source. A common way to use these collections is to HTML-encode the values supplied by the user before they are stored in the data source. This helps to prevent script injection attacks.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>, <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A> and <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A> collections are automatically populated only when the <xref:System.Web.UI.WebControls.GridView> control is bound to data by using the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> property.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following example demonstrates how to use the RowUpdating event to update the values in the data source object when the data source is set programmatically.  \\n  \\n [!code-cs[GridViewRowEditing#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_52_1.aspx)]\\n [!code-vb[GridViewRowEditing#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_52_1.aspx)]\"\n  syntax:\n    content: public event System.Web.UI.WebControls.GridViewUpdateEventHandler RowUpdating;\n    return:\n      type: System.Web.UI.WebControls.GridViewUpdateEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SaveControlState\n  id: SaveControlState\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SaveControlState()\n  nameWithType: GridView.SaveControlState()\n  fullName: System.Web.UI.WebControls.GridView.SaveControlState()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Saves the state of the properties in the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control that need to be persisted, even when the &lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt; property is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  remarks: \"This method is used to save the state of the properties in the <xref:System.Web.UI.WebControls.GridView> control that need to be persisted, even when the <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> property is set to `false`.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.\"\n  syntax:\n    content: protected override object SaveControlState ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Returns the server control's current view state. If there is no view state associated with the control, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.SaveControlState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SaveViewState\n  id: SaveViewState\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SaveViewState()\n  nameWithType: GridView.SaveViewState()\n  fullName: System.Web.UI.WebControls.GridView.SaveViewState()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Loads the previously saved view state of the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  syntax:\n    content: protected override object SaveViewState ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A &lt;xref:System.Object?displayProperty=fullName&gt; that contains the saved view state values for the control.\n  overload: System.Web.UI.WebControls.GridView.SaveViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SelectedDataKey\n  id: SelectedDataKey\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SelectedDataKey\n  nameWithType: GridView.SelectedDataKey\n  fullName: System.Web.UI.WebControls.GridView.SelectedDataKey\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the <xref href=\"System.Web.UI.WebControls.DataKey\"></xref> object that contains the data key value for the selected row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"When the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property is set, the <xref:System.Web.UI.WebControls.GridView> control automatically creates a <xref:System.Web.UI.WebControls.DataKey> object for each row in the control using the value or values of the specified field or fields. The <xref:System.Web.UI.WebControls.DataKey> objects are then added to the control's <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> collection. Normally, the <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> property is used to retrieve the <xref:System.Web.UI.WebControls.DataKey> object for a specific data row in the <xref:System.Web.UI.WebControls.GridView> control. However, if you just need to retrieve the <xref:System.Web.UI.WebControls.DataKey> object of the currently selected row, you can simply use the SelectedDataKey property as a shortcut.  \\n  \\n> [!NOTE]\\n>  This is the same as retrieving the <xref:System.Web.UI.WebControls.DataKey> object at the index specified by the <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> property from the <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> collection. You can also use the <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> property to retrieve the data key value for the currently selected row directly.  \\n  \\n If you are creating a <xref:System.Web.UI.WebControls.ControlParameter> object and want to access a key field other than the first field, use the indexed SelectedDataKey property in the <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> property of the <xref:System.Web.UI.WebControls.ControlParameter> object. An example is shown below.\"\n  example:\n  - \"The following example demonstrates how to use the SelectedDataKey property to determine the data key value of the selected row in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewSelectedDataKey#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_93_1.aspx)]\\n [!code-vb[GridViewSelectedDataKey#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_93_1.aspx)]  \\n  \\n The following example demonstrates how to use the second key field as a parameter in a master/detail scenario. A <xref:System.Web.UI.WebControls.GridView> control is used to display records from the Order Details table of the Northwind database. When a record is selected in the <xref:System.Web.UI.WebControls.GridView> control, the details of the product from the Products table are displayed in a <xref:System.Web.UI.WebControls.DetailsView> control. ProductID is the second key name in the <xref:System.Web.UI.WebControls.GridView> control. To access the second key, the value of GridView1.SelectedDataKey[1] is used as the <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> for the <xref:System.Web.UI.WebControls.ControlParameter> object of the <xref:System.Web.UI.WebControls.SqlDataSource> control of the <xref:System.Web.UI.WebControls.DetailsView> control.  \\n  \\n [!code-cs[GridViewSelectedDataKeyIndex#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_93_2.aspx)]\\n [!code-vb[GridViewSelectedDataKeyIndex#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_93_2.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.DataKey SelectedDataKey { get; }\n    return:\n      type: System.Web.UI.WebControls.DataKey\n      description: The <xref href=\"System.Web.UI.WebControls.DataKey\"></xref> for the selected row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which indicates that no row is currently selected.\n  overload: System.Web.UI.WebControls.GridView.SelectedDataKey*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No data keys are specified in the <xref:System.Web.UI.WebControls.GridView.DataKeyNames*> property.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SelectedIndex\n  id: SelectedIndex\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SelectedIndex\n  nameWithType: GridView.SelectedIndex\n  fullName: System.Web.UI.WebControls.GridView.SelectedIndex\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the index of the selected row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: Use the SelectedIndex property to determine the index of the currently selected row in a <xref:System.Web.UI.WebControls.GridView> control. You can also use this property to programmatically select a row in the control. To clear the selection of a row, set this property to -1. The appearance of the currently selected row can be customized by using the <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> property. To access the currently selected row, use the <xref:System.Web.UI.WebControls.GridView.SelectedRow%2A> property.\n  example:\n  - \"The following example demonstrates how to use the SelectedIndex property to select the second row in a <xref:System.Web.UI.WebControls.GridView> control when the control is initially displayed.  \\n  \\n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_806_1.aspx)]\\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_806_1.aspx)]\"\n  syntax:\n    content: public virtual int SelectedIndex { get; set; }\n    return:\n      type: System.Int32\n      description: The zero-based index of the selected row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control. The default is -1, which indicates that no row is currently selected.\n  overload: System.Web.UI.WebControls.GridView.SelectedIndex*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The SelectedIndex property is set to a value less than -1.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SelectedIndexChanged\n  id: SelectedIndexChanged\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SelectedIndexChanged\n  nameWithType: GridView.SelectedIndexChanged\n  fullName: System.Web.UI.WebControls.GridView.SelectedIndexChanged\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when a row's Select button is clicked, but after the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control handles the select operation.\n  remarks: \"The SelectedIndexChanged event is raised when a row's Select button is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the select operation. This enables you to provide an event-handling method that performs a custom routine, such as updating a status label with the currently selected row, whenever this event occurs.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following example demonstrates how to use the SelectedIndexChanged event to display the name of the customer in the selected row of the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_150_1.aspx)]\\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_150_1.aspx)]\"\n  syntax:\n    content: public event EventHandler SelectedIndexChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SelectedIndexChanging\n  id: SelectedIndexChanging\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SelectedIndexChanging\n  nameWithType: GridView.SelectedIndexChanging\n  fullName: System.Web.UI.WebControls.GridView.SelectedIndexChanging\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when a row's Select button is clicked, but before the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control handles the select operation.\n  remarks: \"The SelectedIndexChanging event is raised when a row's Select button is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the select operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the selection operation, whenever this event occurs.  \\n  \\n> [!NOTE]\\n>  This event is not raised when you programmatically set the <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> property.  \\n  \\n A <xref:System.Web.UI.WebControls.GridViewSelectEventArgs> object is passed to the event-handling method, which enables you to determine the index of the row selected by the user and to indicate that the selection operation should be canceled. To cancel the selection operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewSelectEventArgs> object to `true`.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following example demonstrates how to use the SelectedIndexChanging event to cancel a select operation.  \\n  \\n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_37_1.aspx)]\\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_37_1.aspx)]\"\n  syntax:\n    content: public event System.Web.UI.WebControls.GridViewSelectEventHandler SelectedIndexChanging;\n    return:\n      type: System.Web.UI.WebControls.GridViewSelectEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey\n  id: SelectedPersistedDataKey\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SelectedPersistedDataKey\n  nameWithType: GridView.SelectedPersistedDataKey\n  fullName: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the data-key value for the persisted selected item in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  syntax:\n    content: public virtual System.Web.UI.WebControls.DataKey SelectedPersistedDataKey { get; set; }\n    return:\n      type: System.Web.UI.WebControls.DataKey\n      description: The data key for the persisted selected item in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which indicates that no item is currently selected.\n  overload: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SelectedRow\n  id: SelectedRow\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SelectedRow\n  nameWithType: GridView.SelectedRow\n  fullName: System.Web.UI.WebControls.GridView.SelectedRow\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a reference to a <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> object that represents the selected row in the control.\n  remarks: \"When a row is selected in a <xref:System.Web.UI.WebControls.GridView> control, use the SelectedRow property to retrieve the <xref:System.Web.UI.WebControls.GridViewRow> object that represents that row.  \\n  \\n> [!NOTE]\\n>  This is the same as retrieving the <xref:System.Web.UI.WebControls.GridViewRow> object at the index specified by the <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> property from the <xref:System.Web.UI.WebControls.GridView.Rows%2A> collection.  \\n  \\n This object can then be used to access the properties of the selected row.\"\n  example:\n  - \"The following example demonstrates how to use the SelectedRow property to access the properties of the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the selected row in the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_482_1.aspx)]\\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_482_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.GridViewRow SelectedRow { get; }\n    return:\n      type: System.Web.UI.WebControls.GridViewRow\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> that represents the selected row in the control.\n  overload: System.Web.UI.WebControls.GridView.SelectedRow*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SelectedRowStyle\n  id: SelectedRowStyle\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SelectedRowStyle\n  nameWithType: GridView.SelectedRowStyle\n  fullName: System.Web.UI.WebControls.GridView.SelectedRowStyle\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> object that enables you to set the appearance of the selected row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"Use the SelectedRowStyle property to control the appearance of the selected row in a <xref:System.Web.UI.WebControls.GridView> control. This property is read-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.TableItemStyle> object it returns. The properties can be set declaratively using one of the following methods:  \\n  \\n-   Place an attribute in the opening tag of the <xref:System.Web.UI.WebControls.GridView> control in the form `Property-Subproperty`, where `Subproperty` is a property of the <xref:System.Web.UI.WebControls.TableItemStyle> object (for example, `SelectedRowStyle-ForeColor`).  \\n  \\n-   Nest a `<SelectedRowStyle>` element between the opening and closing tags of the <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n The properties can also be set programmatically in the form `Property.Subproperty` (for example, `SelectedRowStyle.ForeColor`). Common settings usually include a custom background color, foreground color, and font properties.\"\n  example:\n  - \"The following example demonstrates how to use the SelectedRowStyle property to define a custom style for the selected row in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_603_1.aspx)]\\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_603_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.WebControls.TableItemStyle SelectedRowStyle { get; }\n    return:\n      type: System.Web.UI.WebControls.TableItemStyle\n      description: A reference to the <xref href=\"System.Web.UI.WebControls.TableItemStyle\"></xref> that represents the style of the selected row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.SelectedRowStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SelectedValue\n  id: SelectedValue\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SelectedValue\n  nameWithType: GridView.SelectedValue\n  fullName: System.Web.UI.WebControls.GridView.SelectedValue\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the data key value of the selected row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"When the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property is set with a comma-separated list of field names that represent the primary key of the data source, the <xref:System.Web.UI.WebControls.GridView> control automatically creates a <xref:System.Web.UI.WebControls.DataKey> object for each row in the control using the value or values of the specified field or fields. The <xref:System.Web.UI.WebControls.DataKey> objects are then added to the control's <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> collection. Normally, the <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> property is used to retrieve the <xref:System.Web.UI.WebControls.DataKey> object for a specific data row in the <xref:System.Web.UI.WebControls.GridView> control. However, if you just need to retrieve the <xref:System.Web.UI.WebControls.DataKey> object of the currently selected row, you can simply use the <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> property as a shortcut. As a further shortcut, you can directly determine the data key value of the first key field of the selected row by using the SelectedValue property.  \\n  \\n If you are creating a <xref:System.Web.UI.WebControls.ControlParameter> object and want to access a key field other than the first field, use the <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> property. For an example, see <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>.\"\n  example:\n  - \"The following example demonstrates how to use the SelectedValue property to determine the data key value of the selected row in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewSelectedValue#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_553_1.aspx)]\\n [!code-vb[GridViewSelectedValue#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_553_1.aspx)]\"\n  syntax:\n    content: public object SelectedValue { get; }\n    return:\n      type: System.Object\n      description: The data key value of the selected row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.SelectedValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SelectRow(System.Int32)\n  id: SelectRow(System.Int32)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SelectRow(Int32)\n  nameWithType: GridView.SelectRow(Int32)\n  fullName: System.Web.UI.WebControls.GridView.SelectRow(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Selects the row to edit in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: This method raises the <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> event.\n  syntax:\n    content: public void SelectRow (int rowIndex);\n    parameters:\n    - id: rowIndex\n      type: System.Int32\n      description: The index of the row to edit.\n  overload: System.Web.UI.WebControls.GridView.SelectRow*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SetEditRow(System.Int32)\n  id: SetEditRow(System.Int32)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SetEditRow(Int32)\n  nameWithType: GridView.SetEditRow(Int32)\n  fullName: System.Web.UI.WebControls.GridView.SetEditRow(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Puts a row in edit mode in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control by using the specified row index.\n  remarks: This method raises the <xref:System.Web.UI.WebControls.GridView.RowEditing> event.\n  syntax:\n    content: public void SetEditRow (int rowIndex);\n    parameters:\n    - id: rowIndex\n      type: System.Int32\n      description: The index of the row to edit.\n  overload: System.Web.UI.WebControls.GridView.SetEditRow*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SetPageIndex(System.Int32)\n  id: SetPageIndex(System.Int32)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SetPageIndex(Int32)\n  nameWithType: GridView.SetPageIndex(Int32)\n  fullName: System.Web.UI.WebControls.GridView.SetPageIndex(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Sets the page index of the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control by using the row index.\n  remarks: This method raises the <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> event.\n  syntax:\n    content: public void SetPageIndex (int rowIndex);\n    parameters:\n    - id: rowIndex\n      type: System.Int32\n      description: The index of the row on the page to edit.\n  overload: System.Web.UI.WebControls.GridView.SetPageIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.ShowFooter\n  id: ShowFooter\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: ShowFooter\n  nameWithType: GridView.ShowFooter\n  fullName: System.Web.UI.WebControls.GridView.ShowFooter\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether the footer row is displayed in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: Use the ShowFooter property to specify whether a <xref:System.Web.UI.WebControls.GridView> control displays the footer row. To control the appearance of the footer row, use the <xref:System.Web.UI.WebControls.GridView.FooterStyle%2A> property.\n  example:\n  - \"The following example demonstrates how to use the ShowFooter property to display the footer row in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1216_1.aspx)]\\n [!code-vb[GridViewShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1216_1.aspx)]\"\n  syntax:\n    content: public virtual bool ShowFooter { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to display the footer row; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.ShowFooter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.ShowHeader\n  id: ShowHeader\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: ShowHeader\n  nameWithType: GridView.ShowHeader\n  fullName: System.Web.UI.WebControls.GridView.ShowHeader\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether the header row is displayed in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: Use the ShowHeader property to specify whether a <xref:System.Web.UI.WebControls.GridView> control displays the header row. To control the appearance of the header row, use the <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A> property.\n  example:\n  - \"The following example demonstrates how to use the ShowHeader property to display the header row in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-cs[GridViewShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_292_1.aspx)]\\n [!code-vb[GridViewShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_292_1.aspx)]\"\n  syntax:\n    content: public virtual bool ShowHeader { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to display the header row; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.ShowHeader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty\n  id: ShowHeaderWhenEmpty\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: ShowHeaderWhenEmpty\n  nameWithType: GridView.ShowHeaderWhenEmpty\n  fullName: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that indicates whether the heading of a column in the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is visible when the column has no data.\n  syntax:\n    content: public virtual bool ShowHeaderWhenEmpty { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the header is visible; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)\n  id: Sort(System.String,System.Web.UI.WebControls.SortDirection)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: Sort(String,SortDirection)\n  nameWithType: GridView.Sort(String,SortDirection)\n  fullName: System.Web.UI.WebControls.GridView.Sort(String,SortDirection)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Sorts the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control based on the specified sort expression and direction.\n  remarks: Use the Sort method to programmatically sort the <xref:System.Web.UI.WebControls.GridView> control using the specified sort expression and direction. The sort expression specifies the column or columns with which to sort. To sort multiple columns, create a sort expression that contains a comma-separated list of field names. The sort direction indicates whether sorting is performed in ascending or descending order. This method is commonly used when you need to sort the <xref:System.Web.UI.WebControls.GridView> control from outside of the control, such as from a different control on the page. This method is also commonly used to programmatically set a default sort order for the <xref:System.Web.UI.WebControls.GridView> control when it is first rendered. Calling this method also raises the <xref:System.Web.UI.WebControls.GridView.Sorted> and <xref:System.Web.UI.WebControls.GridView.Sorting> events.\n  example:\n  - \"The following example demonstrates how to use the Sort method to programmatically sort the <xref:System.Web.UI.WebControls.GridView> control by multiple columns.  \\n  \\n [!code-cs[GridViewSort#1](~/add/codesnippet/csharp/73688195-5df0-44a7-842d-_1.aspx)]\\n [!code-vb[GridViewSort#1](~/add/codesnippet/visualbasic/73688195-5df0-44a7-842d-_1.aspx)]\"\n  syntax:\n    content: public virtual void Sort (string sortExpression, System.Web.UI.WebControls.SortDirection sortDirection);\n    parameters:\n    - id: sortExpression\n      type: System.String\n      description: The sort expression with which to sort the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n    - id: sortDirection\n      type: System.Web.UI.WebControls.SortDirection\n      description: One of the <xref href=\"System.Web.UI.WebControls.SortDirection\"></xref> values.\n  overload: System.Web.UI.WebControls.GridView.Sort*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is bound to a data source control, but the <xref href=\"System.Web.UI.DataSourceView\"></xref> that is associated with the data source is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SortDirection\n  id: SortDirection\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SortDirection\n  nameWithType: GridView.SortDirection\n  fullName: System.Web.UI.WebControls.GridView.SortDirection\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the sort direction of the column being sorted.\n  remarks: \"Use the SortDirection property to determine whether the column being sorted is sorted in ascending or descending order.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Web.UI.WebControls.GridView> control has a built-in sorting feature that automatically sets this property. This property is typically used only when you need to programmatically determine the sort direction or when you are adding your own custom sorting functionality to a <xref:System.Web.UI.WebControls.GridView> control.\"\n  example:\n  - \"The following example demonstrates how to use the SortDirection property to programmatically determine the sort direction of a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-vb[GridViewFooterRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_871_1.aspx)]\\n [!code-cs[GridViewFooterRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_871_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.SortDirection SortDirection { get; }\n    return:\n      type: System.Web.UI.WebControls.SortDirection\n      description: One of the <xref href=\"System.Web.UI.WebControls.SortDirection\"></xref> values. The default is <xref uid=\"langword_csharp_SortDirection.Ascending\" name=\"SortDirection.Ascending\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.SortDirection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.Sorted\n  id: Sorted\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: Sorted\n  nameWithType: GridView.Sorted\n  fullName: System.Web.UI.WebControls.GridView.Sorted\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when the hyperlink to sort a column is clicked, but after the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control handles the sort operation.\n  remarks: \"The Sorted event is raised when the hyperlink to sort a column is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control handles the sort operation. This enables you to provide an event-handling method that performs a custom routine, such as custom sorting, whenever this event occurs.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following example demonstrates how to use the Sorted event to display the name of the column being sorted.  \\n  \\n [!code-vb[GridViewSorting#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_149_1.aspx)]\\n [!code-cs[GridViewSorting#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_149_1.aspx)]\"\n  syntax:\n    content: public event EventHandler Sorted;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle\n  id: SortedAscendingCellStyle\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SortedAscendingCellStyle\n  nameWithType: GridView.SortedAscendingCellStyle\n  fullName: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the CSS style for a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> column when the column is sorted in ascending order.\n  remarks: When this property is set to `true`, a style is applied to cells in the column when the data is sorted in ascending order. For example, the column can be highlighted with a specific color when the sort type is ascending.\n  syntax:\n    content: public System.Web.UI.WebControls.TableItemStyle SortedAscendingCellStyle { get; }\n    return:\n      type: System.Web.UI.WebControls.TableItemStyle\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a style is applied to the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control when the column is sorted in ascending order; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle\n  id: SortedAscendingHeaderStyle\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SortedAscendingHeaderStyle\n  nameWithType: GridView.SortedAscendingHeaderStyle\n  fullName: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the CSS style to apply to a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> column heading when the column is sorted in ascending order.\n  remarks: When this property is set to `true`, an arrow that indicates the sort direction is displayed in the column heading.\n  syntax:\n    content: public System.Web.UI.WebControls.TableItemStyle SortedAscendingHeaderStyle { get; }\n    return:\n      type: System.Web.UI.WebControls.TableItemStyle\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a style is applied to the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> heading when the column is sorted in ascending order; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle\n  id: SortedDescendingCellStyle\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SortedDescendingCellStyle\n  nameWithType: GridView.SortedDescendingCellStyle\n  fullName: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the style of a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> column when the column is sorted in descending order.\n  remarks: When this property is set to `true`, a style is applied to cells in the column when the data is sorted in descending order. For example, the column can be highlighted with a specific color when the sort type is descending.\n  syntax:\n    content: public System.Web.UI.WebControls.TableItemStyle SortedDescendingCellStyle { get; }\n    return:\n      type: System.Web.UI.WebControls.TableItemStyle\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a style is applied to the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> when the column is sorted in descending order; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle\n  id: SortedDescendingHeaderStyle\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SortedDescendingHeaderStyle\n  nameWithType: GridView.SortedDescendingHeaderStyle\n  fullName: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the style to apply to a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> column heading when the column is sorted in descending order.\n  remarks: When this property is set to `true`, an arrow that indicates the sort direction is displayed in the column heading.\n  syntax:\n    content: public System.Web.UI.WebControls.TableItemStyle SortedDescendingHeaderStyle { get; }\n    return:\n      type: System.Web.UI.WebControls.TableItemStyle\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a style is applied to the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> heading when the column is sorted in descending order; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.SortExpression\n  id: SortExpression\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: SortExpression\n  nameWithType: GridView.SortExpression\n  fullName: System.Web.UI.WebControls.GridView.SortExpression\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the sort expression associated with the column or columns being sorted.\n  remarks: \"Use the SortExpression property to determine the sort expression associated with the column or columns being sorted.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Web.UI.WebControls.GridView> control has a built-in sorting feature that automatically sets this property. This property is typically used only when you need to programmatically determine the column or columns being sorted or when you are adding your own custom sorting functionality to a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n When multiple columns are sorted, this property contains a comma-separated list of the fields by which to sort.\"\n  example:\n  - \"The following example demonstrates how to use the SortExpression property to determine the name of the column being sorted.  \\n  \\n [!code-cs[GridViewAllowSortingColumns#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_14_1.aspx)]\\n [!code-vb[GridViewAllowSortingColumns#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_14_1.aspx)]\"\n  syntax:\n    content: public virtual string SortExpression { get; }\n    return:\n      type: System.String\n      description: The sort expression associated with the column or columns being sorted.\n  overload: System.Web.UI.WebControls.GridView.SortExpression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.Sorting\n  id: Sorting\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: Sorting\n  nameWithType: GridView.Sorting\n  fullName: System.Web.UI.WebControls.GridView.Sorting\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when the hyperlink to sort a column is clicked, but before the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control handles the sort operation.\n  remarks: \"The Sorting event is raised when the hyperlink to sort a column is clicked, but before the <xref:System.Web.UI.WebControls.GridView> control handles the sort operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the sorting operation, whenever this event occurs.  \\n  \\n A <xref:System.Web.UI.WebControls.GridViewSortEventArgs> object is passed to the event-handling method, which enables you to determine the sort expression for the column and to indicate that the selection operation should be canceled. To cancel the selection operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.GridViewSortEventArgs> object to `true`.  \\n  \\n For information about how to programmatically initiate a sort operation, see the <xref:System.Web.UI.WebControls.GridView.Sort%2A> method.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following example demonstrates how to use the Sorting event to perform the sorting functionality when the <xref:System.Web.UI.WebControls.GridView> control is bound to a <xref:System.Data.DataTable> object by setting the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> property programmatically.  \\n  \\n [!code-cs[GridViewSorting#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_126_1.aspx)]\\n [!code-vb[GridViewSorting#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_126_1.aspx)]  \\n  \\n The following example demonstrates how to use the Sorting event to cancel a sorting operation.  \\n  \\n [!code-vb[GridViewSorting#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_126_2.aspx)]\\n [!code-cs[GridViewSorting#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_126_2.aspx)]\"\n  syntax:\n    content: public event System.Web.UI.WebControls.GridViewSortEventHandler Sorting;\n    return:\n      type: System.Web.UI.WebControls.GridViewSortEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult\n  id: System#Web#UI#ICallbackEventHandler#GetCallbackResult\n  isEii: true\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()\n  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Returns the result of a callback event that targets a control.\n  remarks: The <xref:System.Web.UI.WebControls.GridView> control implements the <xref:System.Web.UI.ICallbackEventHandler> interface and uses the <xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A> to asynchronously retrieve data and the <xref:System.Web.UI.WebControls.GridView.GetCallbackResult%2A> method to return the retrieved data to the control.\n  syntax:\n    content: string ICallbackEventHandler.GetCallbackResult ();\n    parameters: []\n    return:\n      type: System.String\n      description: The results of the callback.\n  overload: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)\n  id: System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)\n  isEii: true\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)\n  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Creates the arguments for the callback handler in the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*> method.\n  remarks: ICallbackEventHandler.RaiseCallbackEvent is a helper method that is used by the <xref:System.Web.UI.WebControls.GridView> control to create the arguments for the callback handler in the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.\n  syntax:\n    content: void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);\n    parameters:\n    - id: eventArgument\n      type: System.String\n      description: The argument to pass to the event handler.\n  overload: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys\n  id: System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys\n  isEii: true\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys\n  nameWithType: GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <xref:System.Web.UI.Control.ClientID*> value.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.IDataKeysControl> interface.\n  syntax:\n    content: System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys { get; }\n    return:\n      type: System.Web.UI.WebControls.DataKeyArray\n      description: The data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <xref:System.Web.UI.Control.ClientID*> value.\n  overload: System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)\n  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)\n  isEii: true\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)\n  nameWithType: GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Raises the appropriate events for the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control when it posts back to the server.\n  remarks: \"The page calls the <xref:System.Web.UI.Page.RaisePostBackEvent%2A> method when a postback event occurs to raise the appropriate events for a <xref:System.Web.UI.WebControls.GridView> control. This call occurs in the page life cycle after loading and change notification are complete, but before prerendering occurs. This method has been implemented to create a <xref:System.Web.UI.WebControls.CommandEventArgs> object for the event or events that are raised.  \\n  \\n> [!NOTE]\\n>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.GridView> control.\"\n  syntax:\n    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);\n    parameters:\n    - id: eventArgument\n      type: System.String\n      description: The event argument from which to create a <xref href=\"System.Web.UI.WebControls.CommandEventArgs\"></xref> for the event or events that are raised.\n  overload: System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)\n  id: System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)\n  isEii: true\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)\n  nameWithType: GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Creates the callback script for a button that performs a sorting operation.\n  remarks: ICallbackContainer.GetCallbackScript is a helper method that is used by the <xref:System.Web.UI.WebControls.GridView> control to create the callback script for a button that performs a sorting operation.\n  syntax:\n    content: string ICallbackContainer.GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);\n    parameters:\n    - id: buttonControl\n      type: System.Web.UI.WebControls.IButtonControl\n      description: The button control for which to create the callback script.\n    - id: argument\n      type: System.String\n      description: The arguments to pass to the callback script.\n    return:\n      type: System.String\n      description: The callback script for a button that performs a sorting operation.\n  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames\n  id: System#Web#UI#WebControls#IDataBoundControl#DataKeyNames\n  isEii: true\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the names of the primary key fields for the items displayed in a data-bound control.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface.  \\n  \\n This property provides access to the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property of the <xref:System.Web.UI.WebControls.GridView> control. It is exposed through the <xref:System.Web.UI.WebControls.IDataBoundControl> Interface.  \\n  \\n ASP.NET Dynamic Data supports this property.\"\n  syntax:\n    content: string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }\n    return:\n      type: System.String[]\n      description: An array that contains the names of the primary-key fields for the items that are displayed in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember\n  id: System#Web#UI#WebControls#IDataBoundControl#DataMember\n  isEii: true\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: System.Web.UI.WebControls.IDataBoundControl.DataMember\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the table that is exposed by the data source control to bind to the data-bound control.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface.  \\n  \\n If the data source contains multiple sources of data, use this property to set the specific data table, collection, or other data for the control to bind to. For example, if the data source is a <xref:System.Data.DataSet> instance that contains multiple tables, you can specify which table to bind the control to by using this property.  \\n  \\n ASP.NET Dynamic Data supports this property.\"\n  syntax:\n    content: string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }\n    return:\n      type: System.String\n      description: The table that is exposed by the data source control to bind to the data-bound control.\n  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource\n  id: System#Web#UI#WebControls#IDataBoundControl#DataSource\n  isEii: true\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: System.Web.UI.WebControls.IDataBoundControl.DataSource\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the data source object from which the data-bound control retrieves the list of data items.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface.  \\n  \\n ASP.NET Dynamic Data supports this property.\"\n  syntax:\n    content: object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }\n    return:\n      type: System.Object\n      description: The data source object that the data-bound control uses.\n  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID\n  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceID\n  isEii: true\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the ID of the data source from which the data-bound control retrieves the list of data items.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface.  \\n  \\n ASP.NET Dynamic Data supports this property.\"\n  syntax:\n    content: string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }\n    return:\n      type: System.String\n      description: The ID of the data source from which the data-bound control retrieves data items.\n  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject\n  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceObject\n  isEii: true\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the data source object from which the data-bound control retrieves the list of data items.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundControl> interface.  \\n  \\n ASP.NET Dynamic Data supports this property.\"\n  syntax:\n    content: System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }\n    return:\n      type: System.Web.UI.IDataSource\n      description: The data source object from which the data-bound control retrieves the list of data items\n  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix\n  id: System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix\n  isEii: true\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the names of the data fields whose values are appended to the <xref:System.Web.UI.Control.ClientID*> property value to uniquely identify each instance of a data-bound control.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface.\n  syntax:\n    content: string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix { get; set; }\n    return:\n      type: System.String[]\n      description: The names of the data fields whose values are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <xref:System.Web.UI.Control.ClientID*> value.\n  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys\n  id: System#Web#UI#WebControls#IDataBoundListControl#DataKeys\n  isEii: true\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: System.Web.UI.WebControls.IDataBoundListControl.DataKeys\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a collection of objects that represent the <xref:System.Web.UI.WebControls.GridView.DataKeys*> value in a data-bound control.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface.  \\n  \\n ASP.NET Dynamic Data supports this property.\"\n  syntax:\n    content: System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys { get; }\n    return:\n      type: System.Web.UI.WebControls.DataKeyArray\n      description: An array that contains the data key of each row in a data-bound control.\n  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection\n  id: System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection\n  isEii: true\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that indicates whether the selection of a row is based on index or on data-key values.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface.  \\n  \\n ASP.NET Dynamic Data supports this property.\"\n  syntax:\n    content: bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the row selection is based on data-key values; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey\n  id: System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey\n  isEii: true\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the object that contains the data key value for the selected row in a data-bound control.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface.  \\n  \\n ASP.NET Dynamic Data supports this property.\"\n  syntax:\n    content: System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey { get; }\n    return:\n      type: System.Web.UI.WebControls.DataKey\n      description: The data-key value for the selected row.\n  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex\n  id: System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex\n  isEii: true\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the index of the selected row in the data-bound control.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IDataBoundListControl> interface.  \\n  \\n ASP.NET Dynamic Data supports this property.\"\n  syntax:\n    content: int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex { get; set; }\n    return:\n      type: System.Int32\n      description: The index of the selected row in the data-bound control.\n  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator\n  id: System#Web#UI#WebControls#IFieldControl#FieldsGenerator\n  isEii: true\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator\n  nameWithType: GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the control that automatically generates the columns for a data-bound control for use by ASP.NET Dynamic Data.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.GridView> instance is cast to an <xref:System.Web.UI.WebControls.IFieldControl> interface.  \\n  \\n ASP.NET Dynamic Data supports this property.\"\n  syntax:\n    content: System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator { get; set; }\n    return:\n      type: System.Web.UI.IAutoFieldGenerator\n      description: The control that automatically generates the columns for a data-bound control.\n  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey\n  id: System#Web#UI#WebControls#IPersistedSelector#DataKey\n  isEii: true\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: System.Web.UI.WebControls.IPersistedSelector.DataKey\n  nameWithType: GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: For a description of this member, see &lt;xref:System.Web.UI.WebControls.IPersistedSelector.DataKey%2A?displayProperty=fullName&gt;.\n  remarks: \"You can specify how selected rows are persisted when the <xref:System.Web.UI.WebControls.GridView> control is in paging mode. By default, row selection is based on row index. The same row (for example, the third row) is selected on each page. Alternatively, you can enable persistence based on the data key of the selected row. In that case, if you select row 3 on page 1 and you move to page 2, no row is selected on page 2. If you move back to page 1, row 3 is still selected. To enable this functionality, set this property to `true`.  \\n  \\n> [!NOTE]\\n>  In versions 2.0, 3.0, and 3.5 of ASP.NET, row selection was based only on row index. By default, row selection in ASP.NET 4 is based on index for backward compatibility.\"\n  syntax:\n    content: System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey { get; set; }\n    return:\n      type: System.Web.UI.WebControls.DataKey\n      description: The data-key value for the persisted selected record in a data-bound control.\n  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)\n  id: System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)\n  isEii: true\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)\n  nameWithType: GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Creates a <xref href=\"System.Web.UI.PostBackOptions\"></xref> object that represents the postback behavior of the specified button control.\n  syntax:\n    content: System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);\n    parameters:\n    - id: buttonControl\n      type: System.Web.UI.WebControls.IButtonControl\n      description: The button control for which to create the callback script.\n    return:\n      type: System.Web.UI.PostBackOptions\n      description: A <xref href=\"System.Web.UI.PostBackOptions\"></xref> that represents the postback behavior of the specified button control.\n  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>buttonControl</code> parameter contains <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>buttonControl</code> causes validation and is attempting to post back to the same container it validates.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.TagKey\n  id: TagKey\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: TagKey\n  nameWithType: GridView.TagKey\n  fullName: System.Web.UI.WebControls.GridView.TagKey\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the <xref href=\"System.Web.UI.HtmlTextWriterTag\"></xref> value for the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: The TagKey property allows the output stream to write the appropriate HTML markup for the <xref:System.Web.UI.WebControls.GridView> control. When the <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> property is set to `true`, this property returns `HtmlTextWriterTag.Div`; otherwise, this property returns `HtmlTextWriterTag.Table`.\n  syntax:\n    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }\n    return:\n      type: System.Web.UI.HtmlTextWriterTag\n      description: The <xref href=\"System.Web.UI.HtmlTextWriterTag\"></xref> value for the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  overload: System.Web.UI.WebControls.GridView.TagKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.TopPagerRow\n  id: TopPagerRow\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: TopPagerRow\n  nameWithType: GridView.TopPagerRow\n  fullName: System.Web.UI.WebControls.GridView.TopPagerRow\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> object that represents the top pager row in a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control.\n  remarks: \"When paging is enabled (by setting the <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property to `true`), an additional row called the pager row is automatically displayed in the <xref:System.Web.UI.WebControls.GridView> control. The pager row contains controls that allow the user to navigate to the other pages and can be displayed at the top, the bottom, or both the top and bottom of the control. Use the TopPagerRow property to programmatically access the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the top pager row in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n> [!NOTE]\\n>  The TopPagerRow property is available only after the <xref:System.Web.UI.WebControls.GridView> control creates the top pager row in the <xref:System.Web.UI.WebControls.GridView.RowCreated> event.  \\n  \\n This property is commonly used when you need to programmatically manipulate the top pager row, for example when adding custom content. Any modification to the TopPagerRow property must be performed after the <xref:System.Web.UI.WebControls.GridView> control has been rendered; otherwise, the <xref:System.Web.UI.WebControls.GridView> control will overwrite any changes.\"\n  example:\n  - \"The following example demonstrates how to use the TopPagerRow property to access the top pager row in a <xref:System.Web.UI.WebControls.GridView> control. The TopPagerRow property is used to retrieve a <xref:System.Web.UI.WebControls.DropDownList> control from the pager row.  \\n  \\n [!code-vb[GridViewTopPagerRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_315_1.aspx)]\\n [!code-cs[GridViewTopPagerRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_315_1.aspx)]\"\n  syntax:\n    content: public virtual System.Web.UI.WebControls.GridViewRow TopPagerRow { get; }\n    return:\n      type: System.Web.UI.WebControls.GridViewRow\n      description: A <xref href=\"System.Web.UI.WebControls.GridViewRow\"></xref> that represents the top pager row in the control.\n  overload: System.Web.UI.WebControls.GridView.TopPagerRow*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.TrackViewState\n  id: TrackViewState\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: TrackViewState()\n  nameWithType: GridView.TrackViewState()\n  fullName: System.Web.UI.WebControls.GridView.TrackViewState()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Tracks view-state changes to the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control so they can be stored in the control's <xref href=\"System.Web.UI.StateBag\"></xref> object. This object is accessible through the &lt;xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName&gt; property.\n  remarks: This method is overridden to mark the starting point at which to begin tracking and saving changes to the control as part of the control's view state.\n  syntax:\n    content: protected override void TrackViewState ();\n    parameters: []\n  overload: System.Web.UI.WebControls.GridView.TrackViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.UpdateMethod\n  id: UpdateMethod\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: UpdateMethod\n  nameWithType: GridView.UpdateMethod\n  fullName: System.Web.UI.WebControls.GridView.UpdateMethod\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the name of the method to call in order to update data.\n  remarks: \"Setting this property causes model binding to be used as the data-binding method.  \\n  \\n For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).\"\n  syntax:\n    content: public virtual string UpdateMethod { get; set; }\n    return:\n      type: System.String\n      description: The name of the method.\n  overload: System.Web.UI.WebControls.GridView.UpdateMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)\n  id: UpdateRow(System.Int32,System.Boolean)\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: UpdateRow(Int32,Boolean)\n  nameWithType: GridView.UpdateRow(Int32,Boolean)\n  fullName: System.Web.UI.WebControls.GridView.UpdateRow(Int32,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Updates the record at the specified row index using the field values of the row.\n  remarks: \"Use the UpdateRow method to programmatically update the record at the specified index in the data source. This method is commonly used when you need to update a record from outside of the <xref:System.Web.UI.WebControls.GridView> control, such as from a different control on the page.  \\n  \\n> [!NOTE]\\n>  This method can be called only for the row that is currently in edit mode, or for a row that contains a two-way data-bound input control. For more information about two-way binding expressions, see [Binding to Databases](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742).  \\n  \\n To specify whether page validation is performed before the update operation, use the `causesValidation` parameter. Calling this method also raises the <xref:System.Web.UI.WebControls.GridView.RowUpdated> and <xref:System.Web.UI.WebControls.GridView.RowUpdating> events.\"\n  example:\n  - \"The following example demonstrates how to use the UpdateRow method to programmatically update a record in a <xref:System.Web.UI.WebControls.GridView> control.  \\n  \\n [!code-vb[GridViewUpdateRow#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_0_1.aspx)]\\n [!code-cs[GridViewUpdateRow#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_0_1.aspx)]\"\n  syntax:\n    content: public virtual void UpdateRow (int rowIndex, bool causesValidation);\n    parameters:\n    - id: rowIndex\n      type: System.Int32\n      description: The index of the row to update.\n    - id: causesValidation\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to perform page validation when this method is called; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.UpdateRow*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is bound to a data source control, but the <xref href=\"System.Web.UI.DataSourceView\"></xref> associated with the data source is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.UseAccessibleHeader\n  id: UseAccessibleHeader\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: UseAccessibleHeader\n  nameWithType: GridView.UseAccessibleHeader\n  fullName: System.Web.UI.WebControls.GridView.UseAccessibleHeader\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value indicating whether a <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control renders its header in an accessible format. This property is provided to make the control more accessible to users of assistive technology devices.\n  remarks: \"Use the UseAccessibleHeader property to specify whether the <xref:System.Web.UI.WebControls.GridView> control renders its header row in an accessible format. This property is provided to make the control more accessible to users of assistive technology devices. By default, the value of this property is `true` and the header for the control is rendered using `<th>` table header cell tags. In addition, a `scope=\\\"col\\\"` attribute is added to the table header to specify that the header applies to all the cells in the column. The default rendering of the `<th>` element is preserved, rendering text as bold and centered horizontally. Developers can override the style of the `<th>` element using a cascading style sheet.  \\n  \\n If the value of this property is `false`, the header for the control is rendered using `<td>` table cell tags.\"\n  example:\n  - \"The following example demonstrates how to use the UseAccessibleHeader property to disable the accessible header.  \\n  \\n [!code-vb[GridViewUseAccessibleHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1058_1.aspx)]\\n [!code-cs[GridViewUseAccessibleHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1058_1.aspx)]\"\n  syntax:\n    content: public virtual bool UseAccessibleHeader { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control renders its header in an accessible format; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.GridView.UseAccessibleHeader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.GridView.VirtualItemCount\n  id: VirtualItemCount\n  parent: System.Web.UI.WebControls.GridView\n  langs:\n  - csharp\n  name: VirtualItemCount\n  nameWithType: GridView.VirtualItemCount\n  fullName: System.Web.UI.WebControls.GridView.VirtualItemCount\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the virtual number of items in the data source that the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is bound to when custom paging is used.\n  remarks: This property is used only when the value of the <xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A> property is `true`. For more information, see the <xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A> property.\n  syntax:\n    content: public virtual int VirtualItemCount { get; set; }\n    return:\n      type: System.Int32\n      description: The virtual number of items in the data source that the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control is bound to when custom paging is used.\n  overload: System.Web.UI.WebControls.GridView.VirtualItemCount*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.WebControls.CompositeDataBoundControl\n  isExternal: false\n  name: System.Web.UI.WebControls.CompositeDataBoundControl\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Web.HttpException\n  parent: System.Web\n  isExternal: false\n  name: HttpException\n  nameWithType: HttpException\n  fullName: System.Web.HttpException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.UI.WebControls.GridView.#ctor\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: GridView()\n  nameWithType: GridView.GridView()\n  fullName: System.Web.UI.WebControls.GridView.GridView()\n- uid: System.Web.UI.WebControls.GridView.AllowCustomPaging\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: AllowCustomPaging\n  nameWithType: GridView.AllowCustomPaging\n  fullName: System.Web.UI.WebControls.GridView.AllowCustomPaging\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.WebControls.GridView.AllowPaging\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: AllowPaging\n  nameWithType: GridView.AllowPaging\n  fullName: System.Web.UI.WebControls.GridView.AllowPaging\n- uid: System.Web.UI.WebControls.GridView.AllowSorting\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: AllowSorting\n  nameWithType: GridView.AllowSorting\n  fullName: System.Web.UI.WebControls.GridView.AllowSorting\n- uid: System.Web.UI.WebControls.GridView.AlternatingRowStyle\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: AlternatingRowStyle\n  nameWithType: GridView.AlternatingRowStyle\n  fullName: System.Web.UI.WebControls.GridView.AlternatingRowStyle\n- uid: System.Web.UI.WebControls.TableItemStyle\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: TableItemStyle\n  nameWithType: TableItemStyle\n  fullName: System.Web.UI.WebControls.TableItemStyle\n- uid: System.Web.UI.WebControls.GridView.AutoGenerateColumns\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: AutoGenerateColumns\n  nameWithType: GridView.AutoGenerateColumns\n  fullName: System.Web.UI.WebControls.GridView.AutoGenerateColumns\n- uid: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: AutoGenerateDeleteButton\n  nameWithType: GridView.AutoGenerateDeleteButton\n  fullName: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton\n- uid: System.Web.UI.WebControls.GridView.AutoGenerateEditButton\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: AutoGenerateEditButton\n  nameWithType: GridView.AutoGenerateEditButton\n  fullName: System.Web.UI.WebControls.GridView.AutoGenerateEditButton\n- uid: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: AutoGenerateSelectButton\n  nameWithType: GridView.AutoGenerateSelectButton\n  fullName: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton\n- uid: System.Web.UI.WebControls.GridView.BackImageUrl\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: BackImageUrl\n  nameWithType: GridView.BackImageUrl\n  fullName: System.Web.UI.WebControls.GridView.BackImageUrl\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.WebControls.GridView.BottomPagerRow\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: BottomPagerRow\n  nameWithType: GridView.BottomPagerRow\n  fullName: System.Web.UI.WebControls.GridView.BottomPagerRow\n- uid: System.Web.UI.WebControls.GridViewRow\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewRow\n  nameWithType: GridViewRow\n  fullName: System.Web.UI.WebControls.GridViewRow\n- uid: System.Web.UI.WebControls.GridView.Caption\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: Caption\n  nameWithType: GridView.Caption\n  fullName: System.Web.UI.WebControls.GridView.Caption\n- uid: System.Web.UI.WebControls.GridView.CaptionAlign\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CaptionAlign\n  nameWithType: GridView.CaptionAlign\n  fullName: System.Web.UI.WebControls.GridView.CaptionAlign\n- uid: System.Web.UI.WebControls.TableCaptionAlign\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: TableCaptionAlign\n  nameWithType: TableCaptionAlign\n  fullName: System.Web.UI.WebControls.TableCaptionAlign\n- uid: System.Web.UI.WebControls.GridView.CellPadding\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CellPadding\n  nameWithType: GridView.CellPadding\n  fullName: System.Web.UI.WebControls.GridView.CellPadding\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.UI.WebControls.GridView.CellSpacing\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CellSpacing\n  nameWithType: GridView.CellSpacing\n  fullName: System.Web.UI.WebControls.GridView.CellSpacing\n- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffix\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: ClientIDRowSuffix\n  nameWithType: GridView.ClientIDRowSuffix\n  fullName: System.Web.UI.WebControls.GridView.ClientIDRowSuffix\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: ClientIDRowSuffixDataKeys\n  nameWithType: GridView.ClientIDRowSuffixDataKeys\n  fullName: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys\n- uid: System.Web.UI.WebControls.DataKeyArray\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: DataKeyArray\n  nameWithType: DataKeyArray\n  fullName: System.Web.UI.WebControls.DataKeyArray\n- uid: System.Web.UI.WebControls.GridView.Columns\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: Columns\n  nameWithType: GridView.Columns\n  fullName: System.Web.UI.WebControls.GridView.Columns\n- uid: System.Web.UI.WebControls.DataControlFieldCollection\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: DataControlFieldCollection\n  nameWithType: DataControlFieldCollection\n  fullName: System.Web.UI.WebControls.DataControlFieldCollection\n- uid: System.Web.UI.WebControls.GridView.ColumnsGenerator\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: ColumnsGenerator\n  nameWithType: GridView.ColumnsGenerator\n  fullName: System.Web.UI.WebControls.GridView.ColumnsGenerator\n- uid: System.Web.UI.IAutoFieldGenerator\n  parent: System.Web.UI\n  isExternal: false\n  name: IAutoFieldGenerator\n  nameWithType: IAutoFieldGenerator\n  fullName: System.Web.UI.IAutoFieldGenerator\n- uid: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)\n  nameWithType: GridView.CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)\n  fullName: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)\n- uid: System.Web.UI.WebControls.AutoGeneratedField\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: AutoGeneratedField\n  nameWithType: AutoGeneratedField\n  fullName: System.Web.UI.WebControls.AutoGeneratedField\n- uid: System.Web.UI.WebControls.AutoGeneratedFieldProperties\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: AutoGeneratedFieldProperties\n  nameWithType: AutoGeneratedFieldProperties\n  fullName: System.Web.UI.WebControls.AutoGeneratedFieldProperties\n- uid: System.Web.UI.WebControls.GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CreateChildControls(IEnumerable,Boolean)\n  nameWithType: GridView.CreateChildControls(IEnumerable,Boolean)\n  fullName: System.Web.UI.WebControls.GridView.CreateChildControls(IEnumerable,Boolean)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: System.Web.UI.WebControls.GridView.CreateChildTable\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CreateChildTable()\n  nameWithType: GridView.CreateChildTable()\n  fullName: System.Web.UI.WebControls.GridView.CreateChildTable()\n- uid: System.Web.UI.WebControls.Table\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: Table\n  nameWithType: Table\n  fullName: System.Web.UI.WebControls.Table\n- uid: System.Web.UI.WebControls.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CreateColumns(PagedDataSource,Boolean)\n  nameWithType: GridView.CreateColumns(PagedDataSource,Boolean)\n  fullName: System.Web.UI.WebControls.GridView.CreateColumns(PagedDataSource,Boolean)\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: true\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Web.UI.WebControls.PagedDataSource\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: PagedDataSource\n  nameWithType: PagedDataSource\n  fullName: System.Web.UI.WebControls.PagedDataSource\n- uid: System.Web.UI.WebControls.GridView.CreateControlStyle\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CreateControlStyle()\n  nameWithType: GridView.CreateControlStyle()\n  fullName: System.Web.UI.WebControls.GridView.CreateControlStyle()\n- uid: System.Web.UI.WebControls.Style\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: Style\n  nameWithType: Style\n  fullName: System.Web.UI.WebControls.Style\n- uid: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CreateDataSourceSelectArguments()\n  nameWithType: GridView.CreateDataSourceSelectArguments()\n  fullName: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments()\n- uid: System.Web.UI.DataSourceSelectArguments\n  parent: System.Web.UI\n  isExternal: false\n  name: DataSourceSelectArguments\n  nameWithType: DataSourceSelectArguments\n  fullName: System.Web.UI.DataSourceSelectArguments\n- uid: System.Web.UI.WebControls.GridView.CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)\n  nameWithType: GridView.CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)\n  fullName: System.Web.UI.WebControls.GridView.CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)\n- uid: System.Web.UI.WebControls.DataControlRowType\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: DataControlRowType\n  nameWithType: DataControlRowType\n  fullName: System.Web.UI.WebControls.DataControlRowType\n- uid: System.Web.UI.WebControls.DataControlRowState\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: DataControlRowState\n  nameWithType: DataControlRowState\n  fullName: System.Web.UI.WebControls.DataControlRowState\n- uid: System.Web.UI.WebControls.GridView.DataBind\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: DataBind()\n  nameWithType: GridView.DataBind()\n  fullName: System.Web.UI.WebControls.GridView.DataBind()\n- uid: System.Web.UI.WebControls.GridView.DataKeyNames\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: DataKeyNames\n  nameWithType: GridView.DataKeyNames\n  fullName: System.Web.UI.WebControls.GridView.DataKeyNames\n- uid: System.Web.UI.WebControls.GridView.DataKeys\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: DataKeys\n  nameWithType: GridView.DataKeys\n  fullName: System.Web.UI.WebControls.GridView.DataKeys\n- uid: System.Web.UI.WebControls.GridView.DeleteMethod\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: DeleteMethod\n  nameWithType: GridView.DeleteMethod\n  fullName: System.Web.UI.WebControls.GridView.DeleteMethod\n- uid: System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: DeleteRow(Int32)\n  nameWithType: GridView.DeleteRow(Int32)\n  fullName: System.Web.UI.WebControls.GridView.DeleteRow(Int32)\n- uid: System.Web.UI.WebControls.GridView.EditIndex\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: EditIndex\n  nameWithType: GridView.EditIndex\n  fullName: System.Web.UI.WebControls.GridView.EditIndex\n- uid: System.Web.UI.WebControls.GridView.EditRowStyle\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: EditRowStyle\n  nameWithType: GridView.EditRowStyle\n  fullName: System.Web.UI.WebControls.GridView.EditRowStyle\n- uid: System.Web.UI.WebControls.GridView.EmptyDataRowStyle\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: EmptyDataRowStyle\n  nameWithType: GridView.EmptyDataRowStyle\n  fullName: System.Web.UI.WebControls.GridView.EmptyDataRowStyle\n- uid: System.Web.UI.WebControls.GridView.EmptyDataTemplate\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: EmptyDataTemplate\n  nameWithType: GridView.EmptyDataTemplate\n  fullName: System.Web.UI.WebControls.GridView.EmptyDataTemplate\n- uid: System.Web.UI.ITemplate\n  parent: System.Web.UI\n  isExternal: false\n  name: ITemplate\n  nameWithType: ITemplate\n  fullName: System.Web.UI.ITemplate\n- uid: System.Web.UI.WebControls.GridView.EmptyDataText\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: EmptyDataText\n  nameWithType: GridView.EmptyDataText\n  fullName: System.Web.UI.WebControls.GridView.EmptyDataText\n- uid: System.Web.UI.WebControls.GridView.EnableModelValidation\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: EnableModelValidation\n  nameWithType: GridView.EnableModelValidation\n  fullName: System.Web.UI.WebControls.GridView.EnableModelValidation\n- uid: System.Web.UI.WebControls.GridView.EnablePersistedSelection\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: EnablePersistedSelection\n  nameWithType: GridView.EnablePersistedSelection\n  fullName: System.Web.UI.WebControls.GridView.EnablePersistedSelection\n- uid: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: EnableSortingAndPagingCallbacks\n  nameWithType: GridView.EnableSortingAndPagingCallbacks\n  fullName: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks\n- uid: System.Web.UI.WebControls.GridView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)\n  nameWithType: GridView.ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)\n  fullName: System.Web.UI.WebControls.GridView.ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)\n- uid: System.Collections.Specialized.IOrderedDictionary\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: IOrderedDictionary\n  nameWithType: IOrderedDictionary\n  fullName: System.Collections.Specialized.IOrderedDictionary\n- uid: System.Web.UI.WebControls.GridView.FooterRow\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: FooterRow\n  nameWithType: GridView.FooterRow\n  fullName: System.Web.UI.WebControls.GridView.FooterRow\n- uid: System.Web.UI.WebControls.GridView.FooterStyle\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: FooterStyle\n  nameWithType: GridView.FooterStyle\n  fullName: System.Web.UI.WebControls.GridView.FooterStyle\n- uid: System.Web.UI.WebControls.GridView.GetCallbackResult\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: GetCallbackResult()\n  nameWithType: GridView.GetCallbackResult()\n  fullName: System.Web.UI.WebControls.GridView.GetCallbackResult()\n- uid: System.Web.UI.WebControls.GridView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: GetCallbackScript(IButtonControl,String)\n  nameWithType: GridView.GetCallbackScript(IButtonControl,String)\n  fullName: System.Web.UI.WebControls.GridView.GetCallbackScript(IButtonControl,String)\n- uid: System.Web.UI.WebControls.IButtonControl\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: IButtonControl\n  nameWithType: IButtonControl\n  fullName: System.Web.UI.WebControls.IButtonControl\n- uid: System.Web.UI.WebControls.GridView.GridLines\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: GridLines\n  nameWithType: GridView.GridLines\n  fullName: System.Web.UI.WebControls.GridView.GridLines\n- uid: System.Web.UI.WebControls.GridLines\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridLines\n  nameWithType: GridLines\n  fullName: System.Web.UI.WebControls.GridLines\n- uid: System.Web.UI.WebControls.GridView.HeaderRow\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: HeaderRow\n  nameWithType: GridView.HeaderRow\n  fullName: System.Web.UI.WebControls.GridView.HeaderRow\n- uid: System.Web.UI.WebControls.GridView.HeaderStyle\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: HeaderStyle\n  nameWithType: GridView.HeaderStyle\n  fullName: System.Web.UI.WebControls.GridView.HeaderStyle\n- uid: System.Web.UI.WebControls.GridView.HorizontalAlign\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: HorizontalAlign\n  nameWithType: GridView.HorizontalAlign\n  fullName: System.Web.UI.WebControls.GridView.HorizontalAlign\n- uid: System.Web.UI.WebControls.HorizontalAlign\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: HorizontalAlign\n  nameWithType: HorizontalAlign\n  fullName: System.Web.UI.WebControls.HorizontalAlign\n- uid: System.Web.UI.WebControls.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: InitializePager(GridViewRow,Int32,PagedDataSource)\n  nameWithType: GridView.InitializePager(GridViewRow,Int32,PagedDataSource)\n  fullName: System.Web.UI.WebControls.GridView.InitializePager(GridViewRow,Int32,PagedDataSource)\n- uid: System.Web.UI.WebControls.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: InitializeRow(GridViewRow,DataControlField[])\n  nameWithType: GridView.InitializeRow(GridViewRow,DataControlField[])\n  fullName: System.Web.UI.WebControls.GridView.InitializeRow(GridViewRow,DataControlField[])\n- uid: System.Web.UI.WebControls.DataControlField[]\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: DataControlField\n  nameWithType: DataControlField\n  fullName: System.Web.UI.WebControls.DataControlField[]\n  spec.csharp:\n  - uid: System.Web.UI.WebControls.DataControlField\n    name: DataControlField\n    nameWithType: DataControlField\n    fullName: DataControlField[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.UI.WebControls.GridView.IsBindableType(System.Type)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: IsBindableType(Type)\n  nameWithType: GridView.IsBindableType(Type)\n  fullName: System.Web.UI.WebControls.GridView.IsBindableType(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.UI.WebControls.GridView.LoadControlState(System.Object)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: LoadControlState(Object)\n  nameWithType: GridView.LoadControlState(Object)\n  fullName: System.Web.UI.WebControls.GridView.LoadControlState(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.UI.WebControls.GridView.LoadViewState(System.Object)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: LoadViewState(Object)\n  nameWithType: GridView.LoadViewState(Object)\n  fullName: System.Web.UI.WebControls.GridView.LoadViewState(Object)\n- uid: System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnBubbleEvent(Object,EventArgs)\n  nameWithType: GridView.OnBubbleEvent(Object,EventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnBubbleEvent(Object,EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Web.UI.WebControls.GridView.OnDataPropertyChanged\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnDataPropertyChanged()\n  nameWithType: GridView.OnDataPropertyChanged()\n  fullName: System.Web.UI.WebControls.GridView.OnDataPropertyChanged()\n- uid: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnDataSourceViewChanged(Object,EventArgs)\n  nameWithType: GridView.OnDataSourceViewChanged(Object,EventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(Object,EventArgs)\n- uid: System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnInit(EventArgs)\n  nameWithType: GridView.OnInit(EventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnInit(EventArgs)\n- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnPageIndexChanged(EventArgs)\n  nameWithType: GridView.OnPageIndexChanged(EventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnPageIndexChanged(EventArgs)\n- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnPageIndexChanging(GridViewPageEventArgs)\n  nameWithType: GridView.OnPageIndexChanging(GridViewPageEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnPageIndexChanging(GridViewPageEventArgs)\n- uid: System.Web.UI.WebControls.GridViewPageEventArgs\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewPageEventArgs\n  nameWithType: GridViewPageEventArgs\n  fullName: System.Web.UI.WebControls.GridViewPageEventArgs\n- uid: System.Web.UI.WebControls.GridView.OnPagePreLoad(System.Object,System.EventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnPagePreLoad(Object,EventArgs)\n  nameWithType: GridView.OnPagePreLoad(Object,EventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnPagePreLoad(Object,EventArgs)\n- uid: System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnPreRender(EventArgs)\n  nameWithType: GridView.OnPreRender(EventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnPreRender(EventArgs)\n- uid: System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnRowCancelingEdit(GridViewCancelEditEventArgs)\n  nameWithType: GridView.OnRowCancelingEdit(GridViewCancelEditEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnRowCancelingEdit(GridViewCancelEditEventArgs)\n- uid: System.Web.UI.WebControls.GridViewCancelEditEventArgs\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewCancelEditEventArgs\n  nameWithType: GridViewCancelEditEventArgs\n  fullName: System.Web.UI.WebControls.GridViewCancelEditEventArgs\n- uid: System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnRowCommand(GridViewCommandEventArgs)\n  nameWithType: GridView.OnRowCommand(GridViewCommandEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnRowCommand(GridViewCommandEventArgs)\n- uid: System.Web.UI.WebControls.GridViewCommandEventArgs\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewCommandEventArgs\n  nameWithType: GridViewCommandEventArgs\n  fullName: System.Web.UI.WebControls.GridViewCommandEventArgs\n- uid: System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnRowCreated(GridViewRowEventArgs)\n  nameWithType: GridView.OnRowCreated(GridViewRowEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnRowCreated(GridViewRowEventArgs)\n- uid: System.Web.UI.WebControls.GridViewRowEventArgs\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewRowEventArgs\n  nameWithType: GridViewRowEventArgs\n  fullName: System.Web.UI.WebControls.GridViewRowEventArgs\n- uid: System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnRowDataBound(GridViewRowEventArgs)\n  nameWithType: GridView.OnRowDataBound(GridViewRowEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnRowDataBound(GridViewRowEventArgs)\n- uid: System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnRowDeleted(GridViewDeletedEventArgs)\n  nameWithType: GridView.OnRowDeleted(GridViewDeletedEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnRowDeleted(GridViewDeletedEventArgs)\n- uid: System.Web.UI.WebControls.GridViewDeletedEventArgs\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewDeletedEventArgs\n  nameWithType: GridViewDeletedEventArgs\n  fullName: System.Web.UI.WebControls.GridViewDeletedEventArgs\n- uid: System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnRowDeleting(GridViewDeleteEventArgs)\n  nameWithType: GridView.OnRowDeleting(GridViewDeleteEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnRowDeleting(GridViewDeleteEventArgs)\n- uid: System.Web.UI.WebControls.GridViewDeleteEventArgs\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewDeleteEventArgs\n  nameWithType: GridViewDeleteEventArgs\n  fullName: System.Web.UI.WebControls.GridViewDeleteEventArgs\n- uid: System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnRowEditing(GridViewEditEventArgs)\n  nameWithType: GridView.OnRowEditing(GridViewEditEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnRowEditing(GridViewEditEventArgs)\n- uid: System.Web.UI.WebControls.GridViewEditEventArgs\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewEditEventArgs\n  nameWithType: GridViewEditEventArgs\n  fullName: System.Web.UI.WebControls.GridViewEditEventArgs\n- uid: System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnRowUpdated(GridViewUpdatedEventArgs)\n  nameWithType: GridView.OnRowUpdated(GridViewUpdatedEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnRowUpdated(GridViewUpdatedEventArgs)\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewUpdatedEventArgs\n  nameWithType: GridViewUpdatedEventArgs\n  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n- uid: System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnRowUpdating(GridViewUpdateEventArgs)\n  nameWithType: GridView.OnRowUpdating(GridViewUpdateEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnRowUpdating(GridViewUpdateEventArgs)\n- uid: System.Web.UI.WebControls.GridViewUpdateEventArgs\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewUpdateEventArgs\n  nameWithType: GridViewUpdateEventArgs\n  fullName: System.Web.UI.WebControls.GridViewUpdateEventArgs\n- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnSelectedIndexChanged(EventArgs)\n  nameWithType: GridView.OnSelectedIndexChanged(EventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(EventArgs)\n- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnSelectedIndexChanging(GridViewSelectEventArgs)\n  nameWithType: GridView.OnSelectedIndexChanging(GridViewSelectEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(GridViewSelectEventArgs)\n- uid: System.Web.UI.WebControls.GridViewSelectEventArgs\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewSelectEventArgs\n  nameWithType: GridViewSelectEventArgs\n  fullName: System.Web.UI.WebControls.GridViewSelectEventArgs\n- uid: System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnSorted(EventArgs)\n  nameWithType: GridView.OnSorted(EventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnSorted(EventArgs)\n- uid: System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnSorting(GridViewSortEventArgs)\n  nameWithType: GridView.OnSorting(GridViewSortEventArgs)\n  fullName: System.Web.UI.WebControls.GridView.OnSorting(GridViewSortEventArgs)\n- uid: System.Web.UI.WebControls.GridViewSortEventArgs\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewSortEventArgs\n  nameWithType: GridViewSortEventArgs\n  fullName: System.Web.UI.WebControls.GridViewSortEventArgs\n- uid: System.Web.UI.WebControls.GridView.PageCount\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: PageCount\n  nameWithType: GridView.PageCount\n  fullName: System.Web.UI.WebControls.GridView.PageCount\n- uid: System.Web.UI.WebControls.GridView.PageIndex\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: PageIndex\n  nameWithType: GridView.PageIndex\n  fullName: System.Web.UI.WebControls.GridView.PageIndex\n- uid: System.Web.UI.WebControls.GridView.PageIndexChanged\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: PageIndexChanged\n  nameWithType: GridView.PageIndexChanged\n  fullName: System.Web.UI.WebControls.GridView.PageIndexChanged\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Web.UI.WebControls.GridView.PageIndexChanging\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: PageIndexChanging\n  nameWithType: GridView.PageIndexChanging\n  fullName: System.Web.UI.WebControls.GridView.PageIndexChanging\n- uid: System.Web.UI.WebControls.GridViewPageEventHandler\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewPageEventHandler\n  nameWithType: GridViewPageEventHandler\n  fullName: System.Web.UI.WebControls.GridViewPageEventHandler\n- uid: System.Web.UI.WebControls.GridView.PagerSettings\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: PagerSettings\n  nameWithType: GridView.PagerSettings\n  fullName: System.Web.UI.WebControls.GridView.PagerSettings\n- uid: System.Web.UI.WebControls.PagerSettings\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: PagerSettings\n  nameWithType: PagerSettings\n  fullName: System.Web.UI.WebControls.PagerSettings\n- uid: System.Web.UI.WebControls.GridView.PagerStyle\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: PagerStyle\n  nameWithType: GridView.PagerStyle\n  fullName: System.Web.UI.WebControls.GridView.PagerStyle\n- uid: System.Web.UI.WebControls.GridView.PagerTemplate\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: PagerTemplate\n  nameWithType: GridView.PagerTemplate\n  fullName: System.Web.UI.WebControls.GridView.PagerTemplate\n- uid: System.Web.UI.WebControls.GridView.PageSize\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: PageSize\n  nameWithType: GridView.PageSize\n  fullName: System.Web.UI.WebControls.GridView.PageSize\n- uid: System.Web.UI.WebControls.GridView.PerformDataBinding(System.Collections.IEnumerable)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: PerformDataBinding(IEnumerable)\n  nameWithType: GridView.PerformDataBinding(IEnumerable)\n  fullName: System.Web.UI.WebControls.GridView.PerformDataBinding(IEnumerable)\n- uid: System.Web.UI.WebControls.GridView.PrepareControlHierarchy\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: PrepareControlHierarchy()\n  nameWithType: GridView.PrepareControlHierarchy()\n  fullName: System.Web.UI.WebControls.GridView.PrepareControlHierarchy()\n- uid: System.Web.UI.WebControls.GridView.RaiseCallbackEvent(System.String)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: RaiseCallbackEvent(String)\n  nameWithType: GridView.RaiseCallbackEvent(String)\n  fullName: System.Web.UI.WebControls.GridView.RaiseCallbackEvent(String)\n- uid: System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: RaisePostBackEvent(String)\n  nameWithType: GridView.RaisePostBackEvent(String)\n  fullName: System.Web.UI.WebControls.GridView.RaisePostBackEvent(String)\n- uid: System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: Render(HtmlTextWriter)\n  nameWithType: GridView.Render(HtmlTextWriter)\n  fullName: System.Web.UI.WebControls.GridView.Render(HtmlTextWriter)\n- uid: System.Web.UI.HtmlTextWriter\n  parent: System.Web.UI\n  isExternal: false\n  name: HtmlTextWriter\n  nameWithType: HtmlTextWriter\n  fullName: System.Web.UI.HtmlTextWriter\n- uid: System.Web.UI.WebControls.GridView.RowCancelingEdit\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: RowCancelingEdit\n  nameWithType: GridView.RowCancelingEdit\n  fullName: System.Web.UI.WebControls.GridView.RowCancelingEdit\n- uid: System.Web.UI.WebControls.GridViewCancelEditEventHandler\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewCancelEditEventHandler\n  nameWithType: GridViewCancelEditEventHandler\n  fullName: System.Web.UI.WebControls.GridViewCancelEditEventHandler\n- uid: System.Web.UI.WebControls.GridView.RowCommand\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: RowCommand\n  nameWithType: GridView.RowCommand\n  fullName: System.Web.UI.WebControls.GridView.RowCommand\n- uid: System.Web.UI.WebControls.GridViewCommandEventHandler\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewCommandEventHandler\n  nameWithType: GridViewCommandEventHandler\n  fullName: System.Web.UI.WebControls.GridViewCommandEventHandler\n- uid: System.Web.UI.WebControls.GridView.RowCreated\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: RowCreated\n  nameWithType: GridView.RowCreated\n  fullName: System.Web.UI.WebControls.GridView.RowCreated\n- uid: System.Web.UI.WebControls.GridViewRowEventHandler\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewRowEventHandler\n  nameWithType: GridViewRowEventHandler\n  fullName: System.Web.UI.WebControls.GridViewRowEventHandler\n- uid: System.Web.UI.WebControls.GridView.RowDataBound\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: RowDataBound\n  nameWithType: GridView.RowDataBound\n  fullName: System.Web.UI.WebControls.GridView.RowDataBound\n- uid: System.Web.UI.WebControls.GridView.RowDeleted\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: RowDeleted\n  nameWithType: GridView.RowDeleted\n  fullName: System.Web.UI.WebControls.GridView.RowDeleted\n- uid: System.Web.UI.WebControls.GridViewDeletedEventHandler\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewDeletedEventHandler\n  nameWithType: GridViewDeletedEventHandler\n  fullName: System.Web.UI.WebControls.GridViewDeletedEventHandler\n- uid: System.Web.UI.WebControls.GridView.RowDeleting\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: RowDeleting\n  nameWithType: GridView.RowDeleting\n  fullName: System.Web.UI.WebControls.GridView.RowDeleting\n- uid: System.Web.UI.WebControls.GridViewDeleteEventHandler\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewDeleteEventHandler\n  nameWithType: GridViewDeleteEventHandler\n  fullName: System.Web.UI.WebControls.GridViewDeleteEventHandler\n- uid: System.Web.UI.WebControls.GridView.RowEditing\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: RowEditing\n  nameWithType: GridView.RowEditing\n  fullName: System.Web.UI.WebControls.GridView.RowEditing\n- uid: System.Web.UI.WebControls.GridViewEditEventHandler\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewEditEventHandler\n  nameWithType: GridViewEditEventHandler\n  fullName: System.Web.UI.WebControls.GridViewEditEventHandler\n- uid: System.Web.UI.WebControls.GridView.RowHeaderColumn\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: RowHeaderColumn\n  nameWithType: GridView.RowHeaderColumn\n  fullName: System.Web.UI.WebControls.GridView.RowHeaderColumn\n- uid: System.Web.UI.WebControls.GridView.Rows\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: Rows\n  nameWithType: GridView.Rows\n  fullName: System.Web.UI.WebControls.GridView.Rows\n- uid: System.Web.UI.WebControls.GridViewRowCollection\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewRowCollection\n  nameWithType: GridViewRowCollection\n  fullName: System.Web.UI.WebControls.GridViewRowCollection\n- uid: System.Web.UI.WebControls.GridView.RowStyle\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: RowStyle\n  nameWithType: GridView.RowStyle\n  fullName: System.Web.UI.WebControls.GridView.RowStyle\n- uid: System.Web.UI.WebControls.GridView.RowUpdated\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: RowUpdated\n  nameWithType: GridView.RowUpdated\n  fullName: System.Web.UI.WebControls.GridView.RowUpdated\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventHandler\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewUpdatedEventHandler\n  nameWithType: GridViewUpdatedEventHandler\n  fullName: System.Web.UI.WebControls.GridViewUpdatedEventHandler\n- uid: System.Web.UI.WebControls.GridView.RowUpdating\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: RowUpdating\n  nameWithType: GridView.RowUpdating\n  fullName: System.Web.UI.WebControls.GridView.RowUpdating\n- uid: System.Web.UI.WebControls.GridViewUpdateEventHandler\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewUpdateEventHandler\n  nameWithType: GridViewUpdateEventHandler\n  fullName: System.Web.UI.WebControls.GridViewUpdateEventHandler\n- uid: System.Web.UI.WebControls.GridView.SaveControlState\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SaveControlState()\n  nameWithType: GridView.SaveControlState()\n  fullName: System.Web.UI.WebControls.GridView.SaveControlState()\n- uid: System.Web.UI.WebControls.GridView.SaveViewState\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SaveViewState()\n  nameWithType: GridView.SaveViewState()\n  fullName: System.Web.UI.WebControls.GridView.SaveViewState()\n- uid: System.Web.UI.WebControls.GridView.SelectedDataKey\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SelectedDataKey\n  nameWithType: GridView.SelectedDataKey\n  fullName: System.Web.UI.WebControls.GridView.SelectedDataKey\n- uid: System.Web.UI.WebControls.DataKey\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: DataKey\n  nameWithType: DataKey\n  fullName: System.Web.UI.WebControls.DataKey\n- uid: System.Web.UI.WebControls.GridView.SelectedIndex\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SelectedIndex\n  nameWithType: GridView.SelectedIndex\n  fullName: System.Web.UI.WebControls.GridView.SelectedIndex\n- uid: System.Web.UI.WebControls.GridView.SelectedIndexChanged\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SelectedIndexChanged\n  nameWithType: GridView.SelectedIndexChanged\n  fullName: System.Web.UI.WebControls.GridView.SelectedIndexChanged\n- uid: System.Web.UI.WebControls.GridView.SelectedIndexChanging\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SelectedIndexChanging\n  nameWithType: GridView.SelectedIndexChanging\n  fullName: System.Web.UI.WebControls.GridView.SelectedIndexChanging\n- uid: System.Web.UI.WebControls.GridViewSelectEventHandler\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewSelectEventHandler\n  nameWithType: GridViewSelectEventHandler\n  fullName: System.Web.UI.WebControls.GridViewSelectEventHandler\n- uid: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SelectedPersistedDataKey\n  nameWithType: GridView.SelectedPersistedDataKey\n  fullName: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey\n- uid: System.Web.UI.WebControls.GridView.SelectedRow\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SelectedRow\n  nameWithType: GridView.SelectedRow\n  fullName: System.Web.UI.WebControls.GridView.SelectedRow\n- uid: System.Web.UI.WebControls.GridView.SelectedRowStyle\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SelectedRowStyle\n  nameWithType: GridView.SelectedRowStyle\n  fullName: System.Web.UI.WebControls.GridView.SelectedRowStyle\n- uid: System.Web.UI.WebControls.GridView.SelectedValue\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SelectedValue\n  nameWithType: GridView.SelectedValue\n  fullName: System.Web.UI.WebControls.GridView.SelectedValue\n- uid: System.Web.UI.WebControls.GridView.SelectRow(System.Int32)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SelectRow(Int32)\n  nameWithType: GridView.SelectRow(Int32)\n  fullName: System.Web.UI.WebControls.GridView.SelectRow(Int32)\n- uid: System.Web.UI.WebControls.GridView.SetEditRow(System.Int32)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SetEditRow(Int32)\n  nameWithType: GridView.SetEditRow(Int32)\n  fullName: System.Web.UI.WebControls.GridView.SetEditRow(Int32)\n- uid: System.Web.UI.WebControls.GridView.SetPageIndex(System.Int32)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SetPageIndex(Int32)\n  nameWithType: GridView.SetPageIndex(Int32)\n  fullName: System.Web.UI.WebControls.GridView.SetPageIndex(Int32)\n- uid: System.Web.UI.WebControls.GridView.ShowFooter\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: ShowFooter\n  nameWithType: GridView.ShowFooter\n  fullName: System.Web.UI.WebControls.GridView.ShowFooter\n- uid: System.Web.UI.WebControls.GridView.ShowHeader\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: ShowHeader\n  nameWithType: GridView.ShowHeader\n  fullName: System.Web.UI.WebControls.GridView.ShowHeader\n- uid: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: ShowHeaderWhenEmpty\n  nameWithType: GridView.ShowHeaderWhenEmpty\n  fullName: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty\n- uid: System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: Sort(String,SortDirection)\n  nameWithType: GridView.Sort(String,SortDirection)\n  fullName: System.Web.UI.WebControls.GridView.Sort(String,SortDirection)\n- uid: System.Web.UI.WebControls.SortDirection\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: SortDirection\n  nameWithType: SortDirection\n  fullName: System.Web.UI.WebControls.SortDirection\n- uid: System.Web.UI.WebControls.GridView.SortDirection\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SortDirection\n  nameWithType: GridView.SortDirection\n  fullName: System.Web.UI.WebControls.GridView.SortDirection\n- uid: System.Web.UI.WebControls.GridView.Sorted\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: Sorted\n  nameWithType: GridView.Sorted\n  fullName: System.Web.UI.WebControls.GridView.Sorted\n- uid: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SortedAscendingCellStyle\n  nameWithType: GridView.SortedAscendingCellStyle\n  fullName: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle\n- uid: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SortedAscendingHeaderStyle\n  nameWithType: GridView.SortedAscendingHeaderStyle\n  fullName: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle\n- uid: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SortedDescendingCellStyle\n  nameWithType: GridView.SortedDescendingCellStyle\n  fullName: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle\n- uid: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SortedDescendingHeaderStyle\n  nameWithType: GridView.SortedDescendingHeaderStyle\n  fullName: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle\n- uid: System.Web.UI.WebControls.GridView.SortExpression\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SortExpression\n  nameWithType: GridView.SortExpression\n  fullName: System.Web.UI.WebControls.GridView.SortExpression\n- uid: System.Web.UI.WebControls.GridView.Sorting\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: Sorting\n  nameWithType: GridView.Sorting\n  fullName: System.Web.UI.WebControls.GridView.Sorting\n- uid: System.Web.UI.WebControls.GridViewSortEventHandler\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: GridViewSortEventHandler\n  nameWithType: GridViewSortEventHandler\n  fullName: System.Web.UI.WebControls.GridViewSortEventHandler\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()\n  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)\n  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys\n  nameWithType: GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)\n  nameWithType: GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)\n  nameWithType: GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundControl.DataMember\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundControl.DataSource\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject\n- uid: System.Web.UI.IDataSource\n  parent: System.Web.UI\n  isExternal: false\n  name: IDataSource\n  nameWithType: IDataSource\n  fullName: System.Web.UI.IDataSource\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundListControl.DataKeys\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator\n  nameWithType: GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IPersistedSelector.DataKey\n  nameWithType: GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)\n  nameWithType: GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)\n  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)\n- uid: System.Web.UI.PostBackOptions\n  parent: System.Web.UI\n  isExternal: false\n  name: PostBackOptions\n  nameWithType: PostBackOptions\n  fullName: System.Web.UI.PostBackOptions\n- uid: System.Web.UI.WebControls.GridView.TagKey\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: TagKey\n  nameWithType: GridView.TagKey\n  fullName: System.Web.UI.WebControls.GridView.TagKey\n- uid: System.Web.UI.HtmlTextWriterTag\n  parent: System.Web.UI\n  isExternal: false\n  name: HtmlTextWriterTag\n  nameWithType: HtmlTextWriterTag\n  fullName: System.Web.UI.HtmlTextWriterTag\n- uid: System.Web.UI.WebControls.GridView.TopPagerRow\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: TopPagerRow\n  nameWithType: GridView.TopPagerRow\n  fullName: System.Web.UI.WebControls.GridView.TopPagerRow\n- uid: System.Web.UI.WebControls.GridView.TrackViewState\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: TrackViewState()\n  nameWithType: GridView.TrackViewState()\n  fullName: System.Web.UI.WebControls.GridView.TrackViewState()\n- uid: System.Web.UI.WebControls.GridView.UpdateMethod\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: UpdateMethod\n  nameWithType: GridView.UpdateMethod\n  fullName: System.Web.UI.WebControls.GridView.UpdateMethod\n- uid: System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: UpdateRow(Int32,Boolean)\n  nameWithType: GridView.UpdateRow(Int32,Boolean)\n  fullName: System.Web.UI.WebControls.GridView.UpdateRow(Int32,Boolean)\n- uid: System.Web.UI.WebControls.GridView.UseAccessibleHeader\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: UseAccessibleHeader\n  nameWithType: GridView.UseAccessibleHeader\n  fullName: System.Web.UI.WebControls.GridView.UseAccessibleHeader\n- uid: System.Web.UI.WebControls.GridView.VirtualItemCount\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: VirtualItemCount\n  nameWithType: GridView.VirtualItemCount\n  fullName: System.Web.UI.WebControls.GridView.VirtualItemCount\n- uid: System.Web.UI.WebControls.GridView.#ctor*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: GridView\n  nameWithType: GridView.GridView\n- uid: System.Web.UI.WebControls.GridView.AllowCustomPaging*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: AllowCustomPaging\n  nameWithType: GridView.AllowCustomPaging\n- uid: System.Web.UI.WebControls.GridView.AllowPaging*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: AllowPaging\n  nameWithType: GridView.AllowPaging\n- uid: System.Web.UI.WebControls.GridView.AllowSorting*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: AllowSorting\n  nameWithType: GridView.AllowSorting\n- uid: System.Web.UI.WebControls.GridView.AlternatingRowStyle*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: AlternatingRowStyle\n  nameWithType: GridView.AlternatingRowStyle\n- uid: System.Web.UI.WebControls.GridView.AutoGenerateColumns*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: AutoGenerateColumns\n  nameWithType: GridView.AutoGenerateColumns\n- uid: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: AutoGenerateDeleteButton\n  nameWithType: GridView.AutoGenerateDeleteButton\n- uid: System.Web.UI.WebControls.GridView.AutoGenerateEditButton*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: AutoGenerateEditButton\n  nameWithType: GridView.AutoGenerateEditButton\n- uid: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: AutoGenerateSelectButton\n  nameWithType: GridView.AutoGenerateSelectButton\n- uid: System.Web.UI.WebControls.GridView.BackImageUrl*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: BackImageUrl\n  nameWithType: GridView.BackImageUrl\n- uid: System.Web.UI.WebControls.GridView.BottomPagerRow*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: BottomPagerRow\n  nameWithType: GridView.BottomPagerRow\n- uid: System.Web.UI.WebControls.GridView.Caption*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: Caption\n  nameWithType: GridView.Caption\n- uid: System.Web.UI.WebControls.GridView.CaptionAlign*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CaptionAlign\n  nameWithType: GridView.CaptionAlign\n- uid: System.Web.UI.WebControls.GridView.CellPadding*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CellPadding\n  nameWithType: GridView.CellPadding\n- uid: System.Web.UI.WebControls.GridView.CellSpacing*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CellSpacing\n  nameWithType: GridView.CellSpacing\n- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffix*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: ClientIDRowSuffix\n  nameWithType: GridView.ClientIDRowSuffix\n- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: ClientIDRowSuffixDataKeys\n  nameWithType: GridView.ClientIDRowSuffixDataKeys\n- uid: System.Web.UI.WebControls.GridView.Columns*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: Columns\n  nameWithType: GridView.Columns\n- uid: System.Web.UI.WebControls.GridView.ColumnsGenerator*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: ColumnsGenerator\n  nameWithType: GridView.ColumnsGenerator\n- uid: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CreateAutoGeneratedColumn\n  nameWithType: GridView.CreateAutoGeneratedColumn\n- uid: System.Web.UI.WebControls.GridView.CreateChildControls*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CreateChildControls\n  nameWithType: GridView.CreateChildControls\n- uid: System.Web.UI.WebControls.GridView.CreateChildTable*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CreateChildTable\n  nameWithType: GridView.CreateChildTable\n- uid: System.Web.UI.WebControls.GridView.CreateColumns*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CreateColumns\n  nameWithType: GridView.CreateColumns\n- uid: System.Web.UI.WebControls.GridView.CreateControlStyle*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CreateControlStyle\n  nameWithType: GridView.CreateControlStyle\n- uid: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CreateDataSourceSelectArguments\n  nameWithType: GridView.CreateDataSourceSelectArguments\n- uid: System.Web.UI.WebControls.GridView.CreateRow*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: CreateRow\n  nameWithType: GridView.CreateRow\n- uid: System.Web.UI.WebControls.GridView.DataBind*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: DataBind\n  nameWithType: GridView.DataBind\n- uid: System.Web.UI.WebControls.GridView.DataKeyNames*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: DataKeyNames\n  nameWithType: GridView.DataKeyNames\n- uid: System.Web.UI.WebControls.GridView.DataKeys*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: DataKeys\n  nameWithType: GridView.DataKeys\n- uid: System.Web.UI.WebControls.GridView.DeleteMethod*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: DeleteMethod\n  nameWithType: GridView.DeleteMethod\n- uid: System.Web.UI.WebControls.GridView.DeleteRow*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: DeleteRow\n  nameWithType: GridView.DeleteRow\n- uid: System.Web.UI.WebControls.GridView.EditIndex*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: EditIndex\n  nameWithType: GridView.EditIndex\n- uid: System.Web.UI.WebControls.GridView.EditRowStyle*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: EditRowStyle\n  nameWithType: GridView.EditRowStyle\n- uid: System.Web.UI.WebControls.GridView.EmptyDataRowStyle*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: EmptyDataRowStyle\n  nameWithType: GridView.EmptyDataRowStyle\n- uid: System.Web.UI.WebControls.GridView.EmptyDataTemplate*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: EmptyDataTemplate\n  nameWithType: GridView.EmptyDataTemplate\n- uid: System.Web.UI.WebControls.GridView.EmptyDataText*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: EmptyDataText\n  nameWithType: GridView.EmptyDataText\n- uid: System.Web.UI.WebControls.GridView.EnableModelValidation*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: EnableModelValidation\n  nameWithType: GridView.EnableModelValidation\n- uid: System.Web.UI.WebControls.GridView.EnablePersistedSelection*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: EnablePersistedSelection\n  nameWithType: GridView.EnablePersistedSelection\n- uid: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: EnableSortingAndPagingCallbacks\n  nameWithType: GridView.EnableSortingAndPagingCallbacks\n- uid: System.Web.UI.WebControls.GridView.ExtractRowValues*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: ExtractRowValues\n  nameWithType: GridView.ExtractRowValues\n- uid: System.Web.UI.WebControls.GridView.FooterRow*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: FooterRow\n  nameWithType: GridView.FooterRow\n- uid: System.Web.UI.WebControls.GridView.FooterStyle*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: FooterStyle\n  nameWithType: GridView.FooterStyle\n- uid: System.Web.UI.WebControls.GridView.GetCallbackResult*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: GetCallbackResult\n  nameWithType: GridView.GetCallbackResult\n- uid: System.Web.UI.WebControls.GridView.GetCallbackScript*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: GetCallbackScript\n  nameWithType: GridView.GetCallbackScript\n- uid: System.Web.UI.WebControls.GridView.GridLines*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: GridLines\n  nameWithType: GridView.GridLines\n- uid: System.Web.UI.WebControls.GridView.HeaderRow*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: HeaderRow\n  nameWithType: GridView.HeaderRow\n- uid: System.Web.UI.WebControls.GridView.HeaderStyle*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: HeaderStyle\n  nameWithType: GridView.HeaderStyle\n- uid: System.Web.UI.WebControls.GridView.HorizontalAlign*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: HorizontalAlign\n  nameWithType: GridView.HorizontalAlign\n- uid: System.Web.UI.WebControls.GridView.InitializePager*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: InitializePager\n  nameWithType: GridView.InitializePager\n- uid: System.Web.UI.WebControls.GridView.InitializeRow*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: InitializeRow\n  nameWithType: GridView.InitializeRow\n- uid: System.Web.UI.WebControls.GridView.IsBindableType*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: IsBindableType\n  nameWithType: GridView.IsBindableType\n- uid: System.Web.UI.WebControls.GridView.LoadControlState*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: LoadControlState\n  nameWithType: GridView.LoadControlState\n- uid: System.Web.UI.WebControls.GridView.LoadViewState*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: LoadViewState\n  nameWithType: GridView.LoadViewState\n- uid: System.Web.UI.WebControls.GridView.OnBubbleEvent*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnBubbleEvent\n  nameWithType: GridView.OnBubbleEvent\n- uid: System.Web.UI.WebControls.GridView.OnDataPropertyChanged*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnDataPropertyChanged\n  nameWithType: GridView.OnDataPropertyChanged\n- uid: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnDataSourceViewChanged\n  nameWithType: GridView.OnDataSourceViewChanged\n- uid: System.Web.UI.WebControls.GridView.OnInit*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnInit\n  nameWithType: GridView.OnInit\n- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanged*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnPageIndexChanged\n  nameWithType: GridView.OnPageIndexChanged\n- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanging*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnPageIndexChanging\n  nameWithType: GridView.OnPageIndexChanging\n- uid: System.Web.UI.WebControls.GridView.OnPagePreLoad*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnPagePreLoad\n  nameWithType: GridView.OnPagePreLoad\n- uid: System.Web.UI.WebControls.GridView.OnPreRender*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnPreRender\n  nameWithType: GridView.OnPreRender\n- uid: System.Web.UI.WebControls.GridView.OnRowCancelingEdit*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnRowCancelingEdit\n  nameWithType: GridView.OnRowCancelingEdit\n- uid: System.Web.UI.WebControls.GridView.OnRowCommand*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnRowCommand\n  nameWithType: GridView.OnRowCommand\n- uid: System.Web.UI.WebControls.GridView.OnRowCreated*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnRowCreated\n  nameWithType: GridView.OnRowCreated\n- uid: System.Web.UI.WebControls.GridView.OnRowDataBound*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnRowDataBound\n  nameWithType: GridView.OnRowDataBound\n- uid: System.Web.UI.WebControls.GridView.OnRowDeleted*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnRowDeleted\n  nameWithType: GridView.OnRowDeleted\n- uid: System.Web.UI.WebControls.GridView.OnRowDeleting*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnRowDeleting\n  nameWithType: GridView.OnRowDeleting\n- uid: System.Web.UI.WebControls.GridView.OnRowEditing*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnRowEditing\n  nameWithType: GridView.OnRowEditing\n- uid: System.Web.UI.WebControls.GridView.OnRowUpdated*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnRowUpdated\n  nameWithType: GridView.OnRowUpdated\n- uid: System.Web.UI.WebControls.GridView.OnRowUpdating*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnRowUpdating\n  nameWithType: GridView.OnRowUpdating\n- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnSelectedIndexChanged\n  nameWithType: GridView.OnSelectedIndexChanged\n- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnSelectedIndexChanging\n  nameWithType: GridView.OnSelectedIndexChanging\n- uid: System.Web.UI.WebControls.GridView.OnSorted*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnSorted\n  nameWithType: GridView.OnSorted\n- uid: System.Web.UI.WebControls.GridView.OnSorting*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: OnSorting\n  nameWithType: GridView.OnSorting\n- uid: System.Web.UI.WebControls.GridView.PageCount*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: PageCount\n  nameWithType: GridView.PageCount\n- uid: System.Web.UI.WebControls.GridView.PageIndex*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: PageIndex\n  nameWithType: GridView.PageIndex\n- uid: System.Web.UI.WebControls.GridView.PagerSettings*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: PagerSettings\n  nameWithType: GridView.PagerSettings\n- uid: System.Web.UI.WebControls.GridView.PagerStyle*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: PagerStyle\n  nameWithType: GridView.PagerStyle\n- uid: System.Web.UI.WebControls.GridView.PagerTemplate*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: PagerTemplate\n  nameWithType: GridView.PagerTemplate\n- uid: System.Web.UI.WebControls.GridView.PageSize*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: PageSize\n  nameWithType: GridView.PageSize\n- uid: System.Web.UI.WebControls.GridView.PerformDataBinding*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: PerformDataBinding\n  nameWithType: GridView.PerformDataBinding\n- uid: System.Web.UI.WebControls.GridView.PrepareControlHierarchy*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: PrepareControlHierarchy\n  nameWithType: GridView.PrepareControlHierarchy\n- uid: System.Web.UI.WebControls.GridView.RaiseCallbackEvent*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: RaiseCallbackEvent\n  nameWithType: GridView.RaiseCallbackEvent\n- uid: System.Web.UI.WebControls.GridView.RaisePostBackEvent*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: RaisePostBackEvent\n  nameWithType: GridView.RaisePostBackEvent\n- uid: System.Web.UI.WebControls.GridView.Render*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: Render\n  nameWithType: GridView.Render\n- uid: System.Web.UI.WebControls.GridView.RowHeaderColumn*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: RowHeaderColumn\n  nameWithType: GridView.RowHeaderColumn\n- uid: System.Web.UI.WebControls.GridView.Rows*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: Rows\n  nameWithType: GridView.Rows\n- uid: System.Web.UI.WebControls.GridView.RowStyle*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: RowStyle\n  nameWithType: GridView.RowStyle\n- uid: System.Web.UI.WebControls.GridView.SaveControlState*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SaveControlState\n  nameWithType: GridView.SaveControlState\n- uid: System.Web.UI.WebControls.GridView.SaveViewState*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SaveViewState\n  nameWithType: GridView.SaveViewState\n- uid: System.Web.UI.WebControls.GridView.SelectedDataKey*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SelectedDataKey\n  nameWithType: GridView.SelectedDataKey\n- uid: System.Web.UI.WebControls.GridView.SelectedIndex*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SelectedIndex\n  nameWithType: GridView.SelectedIndex\n- uid: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SelectedPersistedDataKey\n  nameWithType: GridView.SelectedPersistedDataKey\n- uid: System.Web.UI.WebControls.GridView.SelectedRow*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SelectedRow\n  nameWithType: GridView.SelectedRow\n- uid: System.Web.UI.WebControls.GridView.SelectedRowStyle*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SelectedRowStyle\n  nameWithType: GridView.SelectedRowStyle\n- uid: System.Web.UI.WebControls.GridView.SelectedValue*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SelectedValue\n  nameWithType: GridView.SelectedValue\n- uid: System.Web.UI.WebControls.GridView.SelectRow*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SelectRow\n  nameWithType: GridView.SelectRow\n- uid: System.Web.UI.WebControls.GridView.SetEditRow*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SetEditRow\n  nameWithType: GridView.SetEditRow\n- uid: System.Web.UI.WebControls.GridView.SetPageIndex*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SetPageIndex\n  nameWithType: GridView.SetPageIndex\n- uid: System.Web.UI.WebControls.GridView.ShowFooter*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: ShowFooter\n  nameWithType: GridView.ShowFooter\n- uid: System.Web.UI.WebControls.GridView.ShowHeader*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: ShowHeader\n  nameWithType: GridView.ShowHeader\n- uid: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: ShowHeaderWhenEmpty\n  nameWithType: GridView.ShowHeaderWhenEmpty\n- uid: System.Web.UI.WebControls.GridView.Sort*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: Sort\n  nameWithType: GridView.Sort\n- uid: System.Web.UI.WebControls.GridView.SortDirection*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SortDirection\n  nameWithType: GridView.SortDirection\n- uid: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SortedAscendingCellStyle\n  nameWithType: GridView.SortedAscendingCellStyle\n- uid: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SortedAscendingHeaderStyle\n  nameWithType: GridView.SortedAscendingHeaderStyle\n- uid: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SortedDescendingCellStyle\n  nameWithType: GridView.SortedDescendingCellStyle\n- uid: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SortedDescendingHeaderStyle\n  nameWithType: GridView.SortedDescendingHeaderStyle\n- uid: System.Web.UI.WebControls.GridView.SortExpression*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: SortExpression\n  nameWithType: GridView.SortExpression\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult\n  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent\n  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys\n  nameWithType: GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent\n  nameWithType: GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript\n  nameWithType: GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundControl.DataMember\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundControl.DataSource\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundListControl.DataKeys\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex\n  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator\n  nameWithType: GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IPersistedSelector.DataKey\n  nameWithType: GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey\n- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions\n  nameWithType: GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions\n- uid: System.Web.UI.WebControls.GridView.TagKey*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: TagKey\n  nameWithType: GridView.TagKey\n- uid: System.Web.UI.WebControls.GridView.TopPagerRow*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: TopPagerRow\n  nameWithType: GridView.TopPagerRow\n- uid: System.Web.UI.WebControls.GridView.TrackViewState*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: TrackViewState\n  nameWithType: GridView.TrackViewState\n- uid: System.Web.UI.WebControls.GridView.UpdateMethod*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: UpdateMethod\n  nameWithType: GridView.UpdateMethod\n- uid: System.Web.UI.WebControls.GridView.UpdateRow*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: UpdateRow\n  nameWithType: GridView.UpdateRow\n- uid: System.Web.UI.WebControls.GridView.UseAccessibleHeader*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: UseAccessibleHeader\n  nameWithType: GridView.UseAccessibleHeader\n- uid: System.Web.UI.WebControls.GridView.VirtualItemCount*\n  parent: System.Web.UI.WebControls.GridView\n  isExternal: false\n  name: VirtualItemCount\n  nameWithType: GridView.VirtualItemCount\n"}