{"nodes":[{"pos":[388,459],"content":"Specifies a class that will add extra attributes to the metadata store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a class that will add extra attributes to the metadata store.","pos":[0,71]}]},{"pos":[471,1001],"content":"IRegisterMetadata types provide a way to encapsulate the association of design-time attributes to run-time types in a loosely coupled fashion. An application hosting the [!INCLUDE[wfd1](~/add/includes/wfd1-md.md)] can use the IRegisterMetadata interface to register the attributes for the activity. For instance, [!INCLUDE[vs2010](~/add/includes/vs2010-md.md)] searches for types that implement IRegisterMetadata when assemblies that contain these types are loaded in addition to also looking for types in the *.design assemblies.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"IRegisterMetadata types provide a way to encapsulate the association of design-time attributes to run-time types in a loosely coupled fashion.","pos":[0,142]},{"content":"An application hosting the <ph id=\"ph1\">[!INCLUDE[wfd1](~/add/includes/wfd1-md.md)]</ph> can use the IRegisterMetadata interface to register the attributes for the activity.","pos":[143,298],"source":" An application hosting the [!INCLUDE[wfd1](~/add/includes/wfd1-md.md)] can use the IRegisterMetadata interface to register the attributes for the activity."},{"content":"For instance, <ph id=\"ph1\">[!INCLUDE[vs2010](~/add/includes/vs2010-md.md)]</ph> searches for types that implement IRegisterMetadata when assemblies that contain these types are loaded in addition to also looking for types in the *.design assemblies.","pos":[299,530],"source":" For instance, [!INCLUDE[vs2010](~/add/includes/vs2010-md.md)] searches for types that implement IRegisterMetadata when assemblies that contain these types are loaded in addition to also looking for types in the *.design assemblies."}]},{"pos":[1684,1767],"content":"Adds additional metadata to the metadata store upon initialization of the designer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds additional metadata to the metadata store upon initialization of the designer.","pos":[0,83]}]},{"pos":[1779,1923],"content":"Implementations should call <xref:System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable%2A> to add data to the metadata store.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Implementations should call &lt;xref:System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable%2A&gt; to add data to the metadata store.","pos":[0,144],"source":"Implementations should call <xref:System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable%2A> to add data to the metadata store."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Metadata.IRegisterMetadata\n  id: IRegisterMetadata\n  children:\n  - System.Activities.Presentation.Metadata.IRegisterMetadata.Register\n  langs:\n  - csharp\n  name: IRegisterMetadata\n  nameWithType: IRegisterMetadata\n  fullName: System.Activities.Presentation.Metadata.IRegisterMetadata\n  type: Interface\n  summary: Specifies a class that will add extra attributes to the metadata store.\n  remarks: IRegisterMetadata types provide a way to encapsulate the association of design-time attributes to run-time types in a loosely coupled fashion. An application hosting the [!INCLUDE[wfd1](~/add/includes/wfd1-md.md)] can use the IRegisterMetadata interface to register the attributes for the activity. For instance, [!INCLUDE[vs2010](~/add/includes/vs2010-md.md)] searches for types that implement IRegisterMetadata when assemblies that contain these types are loaded in addition to also looking for types in the *.design assemblies.\n  example:\n  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'\n  syntax:\n    content: public interface IRegisterMetadata\n  implements: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Metadata.IRegisterMetadata.Register\n  id: Register\n  parent: System.Activities.Presentation.Metadata.IRegisterMetadata\n  langs:\n  - csharp\n  name: Register()\n  nameWithType: IRegisterMetadata.Register()\n  fullName: System.Activities.Presentation.Metadata.IRegisterMetadata.Register()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Adds additional metadata to the metadata store upon initialization of the designer.\n  remarks: Implementations should call <xref:System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable%2A> to add data to the metadata store.\n  example:\n  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'\n  syntax:\n    content: public void Register ();\n    parameters: []\n  overload: System.Activities.Presentation.Metadata.IRegisterMetadata.Register*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.Presentation.Metadata.IRegisterMetadata.Register\n  parent: System.Activities.Presentation.Metadata.IRegisterMetadata\n  isExternal: false\n  name: Register()\n  nameWithType: IRegisterMetadata.Register()\n  fullName: System.Activities.Presentation.Metadata.IRegisterMetadata.Register()\n- uid: System.Activities.Presentation.Metadata.IRegisterMetadata.Register*\n  parent: System.Activities.Presentation.Metadata.IRegisterMetadata\n  isExternal: false\n  name: Register\n  nameWithType: IRegisterMetadata.Register\n"}