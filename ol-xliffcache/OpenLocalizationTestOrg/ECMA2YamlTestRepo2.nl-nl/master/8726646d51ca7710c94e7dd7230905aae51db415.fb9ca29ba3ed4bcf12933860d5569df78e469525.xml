{"nodes":[{"pos":[1687,1860],"content":"Implements the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.IMethodCallMessage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface to create a request message that acts as a method call on a remote object.","needQuote":true,"needEscape":true,"source":"Implements the <xref href=\"System.Runtime.Remoting.Messaging.IMethodCallMessage\"></xref> interface to create a request message that acts as a method call on a remote object."},{"pos":[1873,2303],"content":"The MethodCallMessageWrapper class is used by the remoting infrastructure of the .NET Framework. You do not need to create an instance of the MethodCallMessageWrapper class directly; instead, use the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> interface.       MethodCallMessageWrapper wraps remoting data for passing between message sinks. A remoting client sends a MethodCallMessageWrapper message to a server.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The MethodCallMessageWrapper class is used by the remoting infrastructure of the .NET Framework. You do not need to create an instance of the MethodCallMessageWrapper class directly; instead, use the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> interface.       MethodCallMessageWrapper wraps remoting data for passing between message sinks. A remoting client sends a MethodCallMessageWrapper message to a server.","pos":[0,428],"nodes":[{"content":"The MethodCallMessageWrapper class is used by the remoting infrastructure of the .NET Framework.","pos":[0,96]},{"content":"You do not need to create an instance of the MethodCallMessageWrapper class directly; instead, use the &lt;xref:System.Runtime.Remoting.Messaging.IMethodCallMessage&gt; interface.","pos":[97,270],"source":" You do not need to create an instance of the MethodCallMessageWrapper class directly; instead, use the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> interface."},{"content":"MethodCallMessageWrapper wraps remoting data for passing between message sinks.","pos":[277,356]},{"content":"A remoting client sends a MethodCallMessageWrapper message to a server.","pos":[357,428]}]}]},{"pos":[3514,3733],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by wrapping an <bpt id=\"p2\">&lt;xref href=\"System.Runtime.Remoting.Messaging.IMethodCallMessage\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\"></xref> class by wrapping an <xref href=\"System.Runtime.Remoting.Messaging.IMethodCallMessage\"></xref> interface."},{"pos":[3745,4097],"content":"The <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class is used by the remoting infrastructure of the .NET Framework. You do not need to create an instance of the <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class directly; instead, use the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class is used by the remoting infrastructure of the .NET Framework. You do not need to create an instance of the <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class directly; instead, use the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> interface.","pos":[0,352],"nodes":[{"content":"The &lt;xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper&gt; class is used by the remoting infrastructure of the .NET Framework.","pos":[0,137],"source":"The <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class is used by the remoting infrastructure of the .NET Framework."},{"content":"You do not need to create an instance of the &lt;xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper&gt; class directly; instead, use the &lt;xref:System.Runtime.Remoting.Messaging.IMethodCallMessage&gt; interface.","pos":[138,352],"source":" You do not need to create an instance of the <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class directly; instead, use the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> interface."}]}]},{"pos":[4327,4393],"content":"A message that acts as an outgoing method call on a remote object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A message that acts as an outgoing method call on a remote object.","pos":[0,66]}]},{"pos":[4940,4990],"content":"Gets the number of arguments passed to the method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of arguments passed to the method.","pos":[0,50]}]},{"pos":[5002,5040],"content":"The method belongs to a remote object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]},{"pos":[5157,5238],"content":"A <xref:System.Int32> that represents the number of arguments passed to a method.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Int32&gt; that represents the number of arguments passed to a method.","pos":[0,81],"source":"A <xref:System.Int32> that represents the number of arguments passed to a method."}]},{"pos":[5768,5816],"content":"Gets an array of arguments passed to the method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an array of arguments passed to the method.","pos":[0,48]}]},{"pos":[5828,5866],"content":"The method belongs to a remote object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]},{"pos":[5992,6079],"content":"An array of type <xref:System.Object> that represents the arguments passed to a method.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.Object&gt; that represents the arguments passed to a method.","pos":[0,87],"source":"An array of type <xref:System.Object> that represents the arguments passed to a method."}]},{"pos":[6662,6721],"content":"Gets a method argument, as an object, at a specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a method argument, as an object, at a specified index.","pos":[0,59]}]},{"pos":[6733,6771],"content":"The method belongs to a remote object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]},{"pos":[6915,6951],"content":"The index of the requested argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the requested argument.","pos":[0,36]}]},{"pos":[7009,7042],"content":"The method argument as an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method argument as an object.","pos":[0,33]}]},{"pos":[7647,7703],"content":"Gets the name of a method argument at a specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of a method argument at a specified index.","pos":[0,56]}]},{"pos":[7715,7753],"content":"The method belongs to a remote object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]},{"pos":[7899,7935],"content":"The index of the requested argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the requested argument.","pos":[0,36]}]},{"pos":[7993,8025],"content":"The name of the method argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the method argument.","pos":[0,32]}]},{"pos":[8624,8762],"content":"Gets a method argument at a specified index that is not marked as an <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_out\" name=\"out\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"Gets a method argument at a specified index that is not marked as an <xref uid=\"langword_csharp_out\" name=\"out\" href=\"\"></xref> parameter."},{"pos":[8774,8812],"content":"The method belongs to a remote object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]},{"pos":[8958,8994],"content":"The index of the requested argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the requested argument.","pos":[0,36]}]},{"pos":[9052,9166],"content":"The method argument that is not marked as an <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_out\" name=\"out\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The method argument that is not marked as an <xref uid=\"langword_csharp_out\" name=\"out\" href=\"\"></xref> parameter."},{"pos":[9783,9882],"content":"Gets the name of a method argument at a specified index that is not marked as an <bpt id=\"p1\">**</bpt>out<ept id=\"p1\">**</ept> parameter.","needQuote":true,"needEscape":true,"source":"Gets the name of a method argument at a specified index that is not marked as an **out** parameter."},{"pos":[9894,9932],"content":"The method belongs to a remote object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]},{"pos":[10080,10116],"content":"The index of the requested argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the requested argument.","pos":[0,36]}]},{"pos":[10174,10249],"content":"The name of the method argument that is not marked as an <bpt id=\"p1\">**</bpt>out<ept id=\"p1\">**</ept> parameter.","needQuote":true,"needEscape":true,"source":"The name of the method argument that is not marked as an **out** parameter."},{"pos":[10813,10898],"content":"Gets a value indicating whether the method can accept a variable number of arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the method can accept a variable number of arguments.","pos":[0,85]}]},{"pos":[10910,10948],"content":"The method belongs to a remote object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]},{"pos":[11070,11262],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the method can accept a variable number of arguments; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method can accept a variable number of arguments; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11824,11965],"content":"Gets the number of arguments in the method call that are not marked as <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_out\" name=\"out\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"Gets the number of arguments in the method call that are not marked as <xref uid=\"langword_csharp_out\" name=\"out\" href=\"\"></xref> parameters."},{"pos":[11977,12015],"content":"The method belongs to a remote object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]},{"pos":[12134,12308],"content":"A &lt;xref:System.Int32&gt; that represents the number of arguments in the method call that are not marked as <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_out\" name=\"out\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"A <xref:System.Int32> that represents the number of arguments in the method call that are not marked as <xref uid=\"langword_csharp_out\" name=\"out\" href=\"\"></xref> parameters."},{"pos":[12850,12989],"content":"Gets an array of arguments in the method call that are not marked as <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_out\" name=\"out\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"Gets an array of arguments in the method call that are not marked as <xref uid=\"langword_csharp_out\" name=\"out\" href=\"\"></xref> parameters."},{"pos":[13001,13039],"content":"The method belongs to a remote object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]},{"pos":[13162,13338],"content":"An array of type &lt;xref:System.Object&gt; that represents arguments in the method call that are not marked as <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_out\" name=\"out\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"An array of type <xref:System.Object> that represents arguments in the method call that are not marked as <xref uid=\"langword_csharp_out\" name=\"out\" href=\"\"></xref> parameters."},{"pos":[13936,14047],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the current method call.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"></xref> for the current method call."},{"pos":[14059,14097],"content":"The method belongs to a remote object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]},{"pos":[14313,14419],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the current method call.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"></xref> for the current method call."},{"pos":[14989,15055],"content":"Gets the <xref:System.Reflection.MethodBase> of the called method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Reflection.MethodBase&gt; of the called method.","pos":[0,66],"source":"Gets the <xref:System.Reflection.MethodBase> of the called method."}]},{"pos":[15067,15105],"content":"The method belongs to a remote object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]},{"pos":[15265,15326],"content":"The <xref:System.Reflection.MethodBase> of the called method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Reflection.MethodBase&gt; of the called method.","pos":[0,61],"source":"The <xref:System.Reflection.MethodBase> of the called method."}]},{"pos":[15888,15924],"content":"Gets the name of the invoked method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the invoked method.","pos":[0,36]}]},{"pos":[15936,15974],"content":"The method belongs to a remote object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]},{"pos":[16097,16165],"content":"A <xref:System.String> that contains the name of the invoked method.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the name of the invoked method.","pos":[0,68],"source":"A <xref:System.String> that contains the name of the invoked method."}]},{"pos":[16752,16802],"content":"Gets an object that contains the method signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an object that contains the method signature.","pos":[0,50]}]},{"pos":[16814,16852],"content":"The method belongs to a remote object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]},{"pos":[16980,17038],"content":"A <xref:System.Object> that contains the method signature.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Object&gt; that contains the method signature.","pos":[0,58],"source":"A <xref:System.Object> that contains the method signature."}]},{"pos":[17605,17712],"content":"An <xref:System.Collections.IDictionary> that represents a collection of the remoting message's properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; that represents a collection of the remoting message's properties.","pos":[0,107],"source":"An <xref:System.Collections.IDictionary> that represents a collection of the remoting message's properties."}]},{"pos":[17724,17785],"content":"The message acts as a request method call on a remote object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The message acts as a request method call on a remote object.","pos":[0,61]}]},{"pos":[17949,18066],"content":"An <xref:System.Collections.IDictionary> interface that represents a collection of the remoting message's properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; interface that represents a collection of the remoting message's properties.","pos":[0,117],"source":"An <xref:System.Collections.IDictionary> interface that represents a collection of the remoting message's properties."}]},{"pos":[18618,18702],"content":"Gets the full type name of the remote object on which the method call is being made.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the full type name of the remote object on which the method call is being made.","pos":[0,84]}]},{"pos":[18823,18939],"content":"A <xref:System.String> that contains the full type name of the remote object on which the method call is being made.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the full type name of the remote object on which the method call is being made.","pos":[0,116],"source":"A <xref:System.String> that contains the full type name of the remote object on which the method call is being made."}]},{"pos":[19464,19567],"content":"Gets the Uniform Resource Identifier (URI) of the remote object on which the method call is being made.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the Uniform Resource Identifier (URI) of the remote object on which the method call is being made.","pos":[0,103]}]},{"pos":[19688,19715],"content":"The URI of a remote object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URI of a remote object.","pos":[0,27]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  id: MethodCallMessageWrapper\n  children:\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMethodCallMessage)\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.ArgCount\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Args\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArg(System.Int32)\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArgName(System.Int32)\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArg(System.Int32)\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArgName(System.Int32)\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.HasVarArgs\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgCount\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgs\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.LogicalCallContext\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodBase\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodName\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodSignature\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Properties\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.TypeName\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Uri\n  langs:\n  - csharp\n  name: MethodCallMessageWrapper\n  nameWithType: MethodCallMessageWrapper\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  type: Class\n  summary: Implements the <xref href=\"System.Runtime.Remoting.Messaging.IMethodCallMessage\"></xref> interface to create a request message that acts as a method call on a remote object.\n  remarks: \"The MethodCallMessageWrapper class is used by the remoting infrastructure of the .NET Framework. You do not need to create an instance of the MethodCallMessageWrapper class directly; instead, use the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> interface.  \\n  \\n MethodCallMessageWrapper wraps remoting data for passing between message sinks. A remoting client sends a MethodCallMessageWrapper message to a server.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Security.SecurityCritical]\n\n      public class MethodCallMessageWrapper : System.Runtime.Remoting.Messaging.InternalMessageWrapper, System.Runtime.Remoting.Messaging.IMethodCallMessage\n  inheritance:\n  - System.Object\n  - System.Runtime.Remoting.Messaging.InternalMessageWrapper\n  implements:\n  - System.Runtime.Remoting.Messaging.IMethodCallMessage\n  inheritedMembers:\n  - System.Runtime.Remoting.Messaging.InternalMessageWrapper.WrappedMessage\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMethodCallMessage)\n  id: '#ctor(System.Runtime.Remoting.Messaging.IMethodCallMessage)'\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: MethodCallMessageWrapper(IMethodCallMessage)\n  nameWithType: MethodCallMessageWrapper.MethodCallMessageWrapper(IMethodCallMessage)\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodCallMessageWrapper(IMethodCallMessage)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\"></xref> class by wrapping an <xref href=\"System.Runtime.Remoting.Messaging.IMethodCallMessage\"></xref> interface.\n  remarks: The <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class is used by the remoting infrastructure of the .NET Framework. You do not need to create an instance of the <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class directly; instead, use the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> interface.\n  syntax:\n    content: public MethodCallMessageWrapper (System.Runtime.Remoting.Messaging.IMethodCallMessage msg);\n    parameters:\n    - id: msg\n      type: System.Runtime.Remoting.Messaging.IMethodCallMessage\n      description: A message that acts as an outgoing method call on a remote object.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.ArgCount\n  id: ArgCount\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: ArgCount\n  nameWithType: MethodCallMessageWrapper.ArgCount\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.ArgCount\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the number of arguments passed to the method.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual int ArgCount { get; }\n    return:\n      type: System.Int32\n      description: A <xref:System.Int32> that represents the number of arguments passed to a method.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.ArgCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Args\n  id: Args\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: Args\n  nameWithType: MethodCallMessageWrapper.Args\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Args\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets an array of arguments passed to the method.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual object[] Args { get; set; }\n    return:\n      type: System.Object[]\n      description: An array of type <xref:System.Object> that represents the arguments passed to a method.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Args*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArg(System.Int32)\n  id: GetArg(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: GetArg(Int32)\n  nameWithType: MethodCallMessageWrapper.GetArg(Int32)\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArg(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets a method argument, as an object, at a specified index.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual object GetArg (int argNum);\n    parameters:\n    - id: argNum\n      type: System.Int32\n      description: The index of the requested argument.\n    return:\n      type: System.Object\n      description: The method argument as an object.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArg*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArgName(System.Int32)\n  id: GetArgName(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: GetArgName(Int32)\n  nameWithType: MethodCallMessageWrapper.GetArgName(Int32)\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArgName(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the name of a method argument at a specified index.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual string GetArgName (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the requested argument.\n    return:\n      type: System.String\n      description: The name of the method argument.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArgName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArg(System.Int32)\n  id: GetInArg(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: GetInArg(Int32)\n  nameWithType: MethodCallMessageWrapper.GetInArg(Int32)\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArg(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets a method argument at a specified index that is not marked as an <xref uid=\"langword_csharp_out\" name=\"out\" href=\"\"></xref> parameter.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual object GetInArg (int argNum);\n    parameters:\n    - id: argNum\n      type: System.Int32\n      description: The index of the requested argument.\n    return:\n      type: System.Object\n      description: The method argument that is not marked as an <xref uid=\"langword_csharp_out\" name=\"out\" href=\"\"></xref> parameter.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArg*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArgName(System.Int32)\n  id: GetInArgName(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: GetInArgName(Int32)\n  nameWithType: MethodCallMessageWrapper.GetInArgName(Int32)\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArgName(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the name of a method argument at a specified index that is not marked as an **out** parameter.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual string GetInArgName (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the requested argument.\n    return:\n      type: System.String\n      description: The name of the method argument that is not marked as an **out** parameter.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArgName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.HasVarArgs\n  id: HasVarArgs\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: HasVarArgs\n  nameWithType: MethodCallMessageWrapper.HasVarArgs\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.HasVarArgs\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets a value indicating whether the method can accept a variable number of arguments.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual bool HasVarArgs { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method can accept a variable number of arguments; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.HasVarArgs*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgCount\n  id: InArgCount\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: InArgCount\n  nameWithType: MethodCallMessageWrapper.InArgCount\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgCount\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the number of arguments in the method call that are not marked as <xref uid=\"langword_csharp_out\" name=\"out\" href=\"\"></xref> parameters.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual int InArgCount { get; }\n    return:\n      type: System.Int32\n      description: A <xref:System.Int32> that represents the number of arguments in the method call that are not marked as <xref uid=\"langword_csharp_out\" name=\"out\" href=\"\"></xref> parameters.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgs\n  id: InArgs\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: InArgs\n  nameWithType: MethodCallMessageWrapper.InArgs\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgs\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets an array of arguments in the method call that are not marked as <xref uid=\"langword_csharp_out\" name=\"out\" href=\"\"></xref> parameters.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual object[] InArgs { get; }\n    return:\n      type: System.Object[]\n      description: An array of type <xref:System.Object> that represents arguments in the method call that are not marked as <xref uid=\"langword_csharp_out\" name=\"out\" href=\"\"></xref> parameters.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgs*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.LogicalCallContext\n  id: LogicalCallContext\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: LogicalCallContext\n  nameWithType: MethodCallMessageWrapper.LogicalCallContext\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.LogicalCallContext\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the <xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"></xref> for the current method call.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual System.Runtime.Remoting.Messaging.LogicalCallContext LogicalCallContext { get; }\n    return:\n      type: System.Runtime.Remoting.Messaging.LogicalCallContext\n      description: The <xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"></xref> for the current method call.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.LogicalCallContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodBase\n  id: MethodBase\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: MethodBase\n  nameWithType: MethodCallMessageWrapper.MethodBase\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodBase\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the <xref:System.Reflection.MethodBase> of the called method.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual System.Reflection.MethodBase MethodBase { get; }\n    return:\n      type: System.Reflection.MethodBase\n      description: The <xref:System.Reflection.MethodBase> of the called method.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodBase*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodName\n  id: MethodName\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: MethodName\n  nameWithType: MethodCallMessageWrapper.MethodName\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the name of the invoked method.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual string MethodName { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that contains the name of the invoked method.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodSignature\n  id: MethodSignature\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: MethodSignature\n  nameWithType: MethodCallMessageWrapper.MethodSignature\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodSignature\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets an object that contains the method signature.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual object MethodSignature { get; }\n    return:\n      type: System.Object\n      description: A <xref:System.Object> that contains the method signature.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodSignature*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Properties\n  id: Properties\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: MethodCallMessageWrapper.Properties\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Properties\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: An <xref:System.Collections.IDictionary> that represents a collection of the remoting message's properties.\n  remarks: The message acts as a request method call on a remote object.\n  syntax:\n    content: public virtual System.Collections.IDictionary Properties { get; }\n    return:\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> interface that represents a collection of the remoting message's properties.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.TypeName\n  id: TypeName\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: TypeName\n  nameWithType: MethodCallMessageWrapper.TypeName\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.TypeName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the full type name of the remote object on which the method call is being made.\n  syntax:\n    content: public virtual string TypeName { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that contains the full type name of the remote object on which the method call is being made.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.TypeName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Uri\n  id: Uri\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: Uri\n  nameWithType: MethodCallMessageWrapper.Uri\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Uri\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the Uniform Resource Identifier (URI) of the remote object on which the method call is being made.\n  syntax:\n    content: public virtual string Uri { get; set; }\n    return:\n      type: System.String\n      description: The URI of a remote object.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Uri*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper\n  isExternal: false\n  name: System.Runtime.Remoting.Messaging.InternalMessageWrapper\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMethodCallMessage)\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: MethodCallMessageWrapper(IMethodCallMessage)\n  nameWithType: MethodCallMessageWrapper.MethodCallMessageWrapper(IMethodCallMessage)\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodCallMessageWrapper(IMethodCallMessage)\n- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMethodCallMessage\n  nameWithType: IMethodCallMessage\n  fullName: System.Runtime.Remoting.Messaging.IMethodCallMessage\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.ArgCount\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: ArgCount\n  nameWithType: MethodCallMessageWrapper.ArgCount\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.ArgCount\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Args\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: Args\n  nameWithType: MethodCallMessageWrapper.Args\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Args\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArg(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: GetArg(Int32)\n  nameWithType: MethodCallMessageWrapper.GetArg(Int32)\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArg(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArgName(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: GetArgName(Int32)\n  nameWithType: MethodCallMessageWrapper.GetArgName(Int32)\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArgName(Int32)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArg(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: GetInArg(Int32)\n  nameWithType: MethodCallMessageWrapper.GetInArg(Int32)\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArg(Int32)\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArgName(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: GetInArgName(Int32)\n  nameWithType: MethodCallMessageWrapper.GetInArgName(Int32)\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArgName(Int32)\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.HasVarArgs\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: HasVarArgs\n  nameWithType: MethodCallMessageWrapper.HasVarArgs\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.HasVarArgs\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgCount\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: InArgCount\n  nameWithType: MethodCallMessageWrapper.InArgCount\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgCount\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgs\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: InArgs\n  nameWithType: MethodCallMessageWrapper.InArgs\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgs\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.LogicalCallContext\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: LogicalCallContext\n  nameWithType: MethodCallMessageWrapper.LogicalCallContext\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.LogicalCallContext\n- uid: System.Runtime.Remoting.Messaging.LogicalCallContext\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: LogicalCallContext\n  nameWithType: LogicalCallContext\n  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodBase\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodCallMessageWrapper.MethodBase\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodBase\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: true\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodName\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: MethodName\n  nameWithType: MethodCallMessageWrapper.MethodName\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodName\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodSignature\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: MethodSignature\n  nameWithType: MethodCallMessageWrapper.MethodSignature\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodSignature\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Properties\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: Properties\n  nameWithType: MethodCallMessageWrapper.Properties\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Properties\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: true\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.TypeName\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: TypeName\n  nameWithType: MethodCallMessageWrapper.TypeName\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.TypeName\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Uri\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: Uri\n  nameWithType: MethodCallMessageWrapper.Uri\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Uri\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.#ctor*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: MethodCallMessageWrapper\n  nameWithType: MethodCallMessageWrapper.MethodCallMessageWrapper\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.ArgCount*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: ArgCount\n  nameWithType: MethodCallMessageWrapper.ArgCount\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Args*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: Args\n  nameWithType: MethodCallMessageWrapper.Args\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArg*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: GetArg\n  nameWithType: MethodCallMessageWrapper.GetArg\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArgName*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: GetArgName\n  nameWithType: MethodCallMessageWrapper.GetArgName\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArg*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: GetInArg\n  nameWithType: MethodCallMessageWrapper.GetInArg\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArgName*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: GetInArgName\n  nameWithType: MethodCallMessageWrapper.GetInArgName\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.HasVarArgs*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: HasVarArgs\n  nameWithType: MethodCallMessageWrapper.HasVarArgs\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgCount*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: InArgCount\n  nameWithType: MethodCallMessageWrapper.InArgCount\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgs*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: InArgs\n  nameWithType: MethodCallMessageWrapper.InArgs\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.LogicalCallContext*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: LogicalCallContext\n  nameWithType: MethodCallMessageWrapper.LogicalCallContext\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodBase*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodCallMessageWrapper.MethodBase\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodName*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: MethodName\n  nameWithType: MethodCallMessageWrapper.MethodName\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodSignature*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: MethodSignature\n  nameWithType: MethodCallMessageWrapper.MethodSignature\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Properties*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: Properties\n  nameWithType: MethodCallMessageWrapper.Properties\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.TypeName*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: TypeName\n  nameWithType: MethodCallMessageWrapper.TypeName\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Uri*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: Uri\n  nameWithType: MethodCallMessageWrapper.Uri\n"}