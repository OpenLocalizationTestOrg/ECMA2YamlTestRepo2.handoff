{"nodes":[{"pos":[540,765],"content":"Exposes the &lt;xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint*&gt; method, which allows <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.DataVisualization.Charting.Series\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> data to be custom filtered.","needQuote":true,"needEscape":true,"source":"Exposes the <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint*> method, which allows <xref href=\"System.Windows.Forms.DataVisualization.Charting.Series\"></xref> data to be custom filtered."},{"pos":[778,1684],"content":"The IDataPointFilter interface exposes the <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method, which takes a specific data point within a series and returns a `Boolean` value that determines whether that data point will be filtered.       To perform custom filtering:      -   Derive a new or existing class from this interface.      -   Override the <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method to provide the custom filtering logic.      -   To initiate the filtering operation, call one of the `Filter` methods in the <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> class that takes an IDataPointFilter object as its first parameter.       For sample source code, see the <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IDataPointFilter interface exposes the &lt;xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A&gt; method, which takes a specific data point within a series and returns a <ph id=\"ph1\">`Boolean`</ph> value that determines whether that data point will be filtered.","pos":[0,279],"source":"The IDataPointFilter interface exposes the <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method, which takes a specific data point within a series and returns a `Boolean` value that determines whether that data point will be filtered."},{"content":"To perform custom filtering:      -   Derive a new or existing class from this interface.","pos":[286,375]},{"content":"-   Override the &lt;xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A&gt; method to provide the custom filtering logic.","pos":[381,534],"source":"      -   Override the <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method to provide the custom filtering logic."},{"content":"-   To initiate the filtering operation, call one of the <ph id=\"ph1\">`Filter`</ph> methods in the &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator&gt; class that takes an IDataPointFilter object as its first parameter.","pos":[540,759],"source":"      -   To initiate the filtering operation, call one of the `Filter` methods in the <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> class that takes an IDataPointFilter object as its first parameter."},{"content":"For sample source code, see the &lt;xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A&gt; method.","pos":[766,896],"source":"       For sample source code, see the <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method."}]},{"pos":[2624,2698],"content":"Determines whether a particular data point in the series will be filtered.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether a particular data point in the series will be filtered.","pos":[0,74]}]},{"pos":[2711,3923],"content":"This method should be called for each data point in a series, and returns a `Boolean` value indicating whether a data point should be filtered.       To provide custom filtering, derive a new or existing class from the <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> interface and then implement this method. Provide custom criteria matching logic, then return `true` or `false` to mark the data points to be filtered. After this method has been implemented, use one of the `Filter` method definitions in the <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> class that takes an <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> object as a parameter to perform the filtering.       Filtered points, by default, are removed from a series. They can also be displayed as empty points by setting the value of the <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints%2A> property to `true`.       Filtered points can also be marked as filtered if they do not match filtering criteria, as determined by the <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterMatchedPoints%2A>value.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method should be called for each data point in a series, and returns a <ph id=\"ph1\">`Boolean`</ph> value indicating whether a data point should be filtered.","pos":[0,143],"source":"This method should be called for each data point in a series, and returns a `Boolean` value indicating whether a data point should be filtered."},{"content":"To provide custom filtering, derive a new or existing class from the &lt;xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter&gt; interface and then implement this method.","pos":[150,332],"source":"       To provide custom filtering, derive a new or existing class from the <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> interface and then implement this method."},{"content":"Provide custom criteria matching logic, then return <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph> to mark the data points to be filtered.","pos":[333,442],"source":" Provide custom criteria matching logic, then return `true` or `false` to mark the data points to be filtered."},{"content":"After this method has been implemented, use one of the <ph id=\"ph1\">`Filter`</ph> method definitions in the &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator&gt; class that takes an &lt;xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter&gt; object as a parameter to perform the filtering.","pos":[443,743],"source":" After this method has been implemented, use one of the `Filter` method definitions in the <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> class that takes an <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> object as a parameter to perform the filtering."},{"content":"Filtered points, by default, are removed from a series.","pos":[750,805]},{"content":"They can also be displayed as empty points by setting the value of the &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[806,991],"source":" They can also be displayed as empty points by setting the value of the <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints%2A> property to `true`."},{"content":"Filtered points can also be marked as filtered if they do not match filtering criteria, as determined by the &lt;xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterMatchedPoints%2A&gt;value.","pos":[998,1206],"source":"       Filtered points can also be marked as filtered if they do not match filtering criteria, as determined by the <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterMatchedPoints%2A>value."}]},{"pos":[4243,4348],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.DataVisualization.Charting.DataPoint\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to be filtered.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Forms.DataVisualization.Charting.DataPoint\"></xref> object to be filtered."},{"pos":[4452,4570],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.DataVisualization.Charting.Series\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that the data point belongs to.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Forms.DataVisualization.Charting.Series\"></xref> object that the data point belongs to."},{"pos":[4636,4709],"content":"The index of the data point, which determines its position in the series.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the data point, which determines its position in the series.","pos":[0,73]}]},{"pos":[4768,4932],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the data point is removed, otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the data point is removed, otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.DataVisualization.Charting.IDataPointFilter\n  id: IDataPointFilter\n  children:\n  - System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Windows.Forms.DataVisualization.Charting.DataPoint,System.Windows.Forms.DataVisualization.Charting.Series,System.Int32)\n  langs:\n  - csharp\n  name: IDataPointFilter\n  nameWithType: IDataPointFilter\n  fullName: System.Windows.Forms.DataVisualization.Charting.IDataPointFilter\n  type: Interface\n  summary: Exposes the <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint*> method, which allows <xref href=\"System.Windows.Forms.DataVisualization.Charting.Series\"></xref> data to be custom filtered.\n  remarks: \"The IDataPointFilter interface exposes the <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method, which takes a specific data point within a series and returns a `Boolean` value that determines whether that data point will be filtered.  \\n  \\n To perform custom filtering:  \\n  \\n-   Derive a new or existing class from this interface.  \\n  \\n-   Override the <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method to provide the custom filtering logic.  \\n  \\n-   To initiate the filtering operation, call one of the `Filter` methods in the <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> class that takes an IDataPointFilter object as its first parameter.  \\n  \\n For sample source code, see the <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method.\"\n  syntax:\n    content: public interface IDataPointFilter\n  implements: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Windows.Forms.DataVisualization.Charting.DataPoint,System.Windows.Forms.DataVisualization.Charting.Series,System.Int32)\n  id: FilterDataPoint(System.Windows.Forms.DataVisualization.Charting.DataPoint,System.Windows.Forms.DataVisualization.Charting.Series,System.Int32)\n  parent: System.Windows.Forms.DataVisualization.Charting.IDataPointFilter\n  langs:\n  - csharp\n  name: FilterDataPoint(DataPoint,Series,Int32)\n  nameWithType: IDataPointFilter.FilterDataPoint(DataPoint,Series,Int32)\n  fullName: System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(DataPoint,Series,Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Determines whether a particular data point in the series will be filtered.\n  remarks: \"This method should be called for each data point in a series, and returns a `Boolean` value indicating whether a data point should be filtered.  \\n  \\n To provide custom filtering, derive a new or existing class from the <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> interface and then implement this method. Provide custom criteria matching logic, then return `true` or `false` to mark the data points to be filtered. After this method has been implemented, use one of the `Filter` method definitions in the <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> class that takes an <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> object as a parameter to perform the filtering.  \\n  \\n Filtered points, by default, are removed from a series. They can also be displayed as empty points by setting the value of the <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints%2A> property to `true`.  \\n  \\n Filtered points can also be marked as filtered if they do not match filtering criteria, as determined by the <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterMatchedPoints%2A>value.\"\n  syntax:\n    content: public bool FilterDataPoint (System.Windows.Forms.DataVisualization.Charting.DataPoint point, System.Windows.Forms.DataVisualization.Charting.Series series, int pointIndex);\n    parameters:\n    - id: point\n      type: System.Windows.Forms.DataVisualization.Charting.DataPoint\n      description: The <xref href=\"System.Windows.Forms.DataVisualization.Charting.DataPoint\"></xref> object to be filtered.\n    - id: series\n      type: System.Windows.Forms.DataVisualization.Charting.Series\n      description: The <xref href=\"System.Windows.Forms.DataVisualization.Charting.Series\"></xref> object that the data point belongs to.\n    - id: pointIndex\n      type: System.Int32\n      description: The index of the data point, which determines its position in the series.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the data point is removed, otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Windows.Forms.DataVisualization.Charting.DataPoint,System.Windows.Forms.DataVisualization.Charting.Series,System.Int32)\n  parent: System.Windows.Forms.DataVisualization.Charting.IDataPointFilter\n  isExternal: false\n  name: FilterDataPoint(DataPoint,Series,Int32)\n  nameWithType: IDataPointFilter.FilterDataPoint(DataPoint,Series,Int32)\n  fullName: System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(DataPoint,Series,Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.DataVisualization.Charting.DataPoint\n  parent: System.Windows.Forms.DataVisualization.Charting\n  isExternal: false\n  name: DataPoint\n  nameWithType: DataPoint\n  fullName: System.Windows.Forms.DataVisualization.Charting.DataPoint\n- uid: System.Windows.Forms.DataVisualization.Charting.Series\n  parent: System.Windows.Forms.DataVisualization.Charting\n  isExternal: false\n  name: Series\n  nameWithType: Series\n  fullName: System.Windows.Forms.DataVisualization.Charting.Series\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint*\n  parent: System.Windows.Forms.DataVisualization.Charting.IDataPointFilter\n  isExternal: false\n  name: FilterDataPoint\n  nameWithType: IDataPointFilter.FilterDataPoint\n"}