{"nodes":[{"pos":[753,1066],"content":"Positions child elements in sequential position from left to right, breaking content to the next line at the edge of the containing box. Subsequent ordering happens sequentially from top to bottom or from right to left, depending on the value of the <xref:System.Windows.Controls.WrapPanel.Orientation*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Positions child elements in sequential position from left to right, breaking content to the next line at the edge of the containing box. Subsequent ordering happens sequentially from top to bottom or from right to left, depending on the value of the <xref:System.Windows.Controls.WrapPanel.Orientation*> property.","pos":[0,313],"nodes":[{"content":"Positions child elements in sequential position from left to right, breaking content to the next line at the edge of the containing box.","pos":[0,136]},{"content":"Subsequent ordering happens sequentially from top to bottom or from right to left, depending on the value of the &lt;xref:System.Windows.Controls.WrapPanel.Orientation*&gt; property.","pos":[137,313],"source":" Subsequent ordering happens sequentially from top to bottom or from right to left, depending on the value of the <xref:System.Windows.Controls.WrapPanel.Orientation*> property."}]}]},{"pos":[1078,1426],"content":"A WrapPanel contains a collection of <xref:System.Windows.UIElement> objects, which are in the <xref:System.Windows.Controls.Panel.Children%2A> property. All child elements of a WrapPanel receive the layout partition size of <xref:System.Windows.Controls.WrapPanel.ItemWidth%2A> multiplied by <xref:System.Windows.Controls.WrapPanel.ItemHeight%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A WrapPanel contains a collection of <xref:System.Windows.UIElement> objects, which are in the <xref:System.Windows.Controls.Panel.Children%2A> property. All child elements of a WrapPanel receive the layout partition size of <xref:System.Windows.Controls.WrapPanel.ItemWidth%2A> multiplied by <xref:System.Windows.Controls.WrapPanel.ItemHeight%2A>.","pos":[0,348],"nodes":[{"content":"A WrapPanel contains a collection of &lt;xref:System.Windows.UIElement&gt; objects, which are in the &lt;xref:System.Windows.Controls.Panel.Children%2A&gt; property.","pos":[0,153],"source":"A WrapPanel contains a collection of <xref:System.Windows.UIElement> objects, which are in the <xref:System.Windows.Controls.Panel.Children%2A> property."},{"content":"All child elements of a WrapPanel receive the layout partition size of &lt;xref:System.Windows.Controls.WrapPanel.ItemWidth%2A&gt; multiplied by &lt;xref:System.Windows.Controls.WrapPanel.ItemHeight%2A&gt;.","pos":[154,348],"source":" All child elements of a WrapPanel receive the layout partition size of <xref:System.Windows.Controls.WrapPanel.ItemWidth%2A> multiplied by <xref:System.Windows.Controls.WrapPanel.ItemHeight%2A>."}]}]},{"pos":[38604,38699],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.WrapPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.WrapPanel\"></xref> class."},{"pos":[39290,39379],"content":"Arranges the content of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.WrapPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element.","needQuote":true,"needEscape":true,"source":"Arranges the content of a <xref href=\"System.Windows.Controls.WrapPanel\"></xref> element."},{"pos":[39578,39682],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that this element should use to arrange its child elements.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Size\"></xref> that this element should use to arrange its child elements."},{"pos":[39746,39913],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the arranged size of this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.WrapPanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element and its children.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Size\"></xref> that represents the arranged size of this <xref href=\"System.Windows.Controls.WrapPanel\"></xref> element and its children."},{"pos":[40368,40511],"content":"Gets or sets a value that specifies the height of all items that are contained within a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.WrapPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that specifies the height of all items that are contained within a <xref href=\"System.Windows.Controls.WrapPanel\"></xref>."},{"pos":[40524,42462],"content":"If this property is not set (or if it is set to `Auto` in XAML or to `Double.NaN` in code), the size of the layout partition is equal to the desired size of the child element.       A child element of a <xref:System.Windows.Controls.WrapPanel> may have its height property set explicitly. ItemHeight specifies the size of the layout partition that is reserved by the <xref:System.Windows.Controls.WrapPanel> for the child element. As a result, ItemHeight takes precedence over an element's own height.      <a name=\"xamlAttributeUsage_ItemHeight\"></a>    ## XAML Attribute Usage      ```   <object ItemHeight=\"double\"/>   - or -   <object ItemHeight=\"qualifiedDouble\"/>   - or -   <object ItemHeight=\"Auto\"/>   ```      <a name=\"xamlValues_ItemHeight\"></a>    ## XAML Values    *double*    <xref:System.Double>       String representation of a <xref:System.Double> value equal to or greater than `0.0034` but equal to or less than `160000`. An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *qualifiedDouble*    A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px       Auto    Causes the line height is determined automatically from the current font characteristics.  Equivalent to a property value of <xref:System.Double.NaN>.      <a name=\"dependencyPropertyInfo_ItemHeight\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.WrapPanel.ItemHeightProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If this property is not set (or if it is set to <ph id=\"ph1\">`Auto`</ph> in XAML or to <ph id=\"ph2\">`Double.NaN`</ph> in code), the size of the layout partition is equal to the desired size of the child element.","pos":[0,175],"source":"If this property is not set (or if it is set to `Auto` in XAML or to `Double.NaN` in code), the size of the layout partition is equal to the desired size of the child element."},{"content":"A child element of a &lt;xref:System.Windows.Controls.WrapPanel&gt; may have its height property set explicitly.","pos":[182,288],"source":"       A child element of a <xref:System.Windows.Controls.WrapPanel> may have its height property set explicitly."},{"content":"ItemHeight specifies the size of the layout partition that is reserved by the &lt;xref:System.Windows.Controls.WrapPanel&gt; for the child element.","pos":[289,430],"source":" ItemHeight specifies the size of the layout partition that is reserved by the <xref:System.Windows.Controls.WrapPanel> for the child element."},{"content":"As a result, ItemHeight takes precedence over an element's own height.","pos":[431,501]},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_ItemHeight\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object ItemHeight=\"double\"/&gt;   - or -   &lt;object ItemHeight=\"qualifiedDouble\"/&gt;   - or -   &lt;object ItemHeight=\"Auto\"/&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_ItemHeight\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>double<ept id=\"p3\">*</ept>    &lt;xref:System.Double&gt;       String representation of a &lt;xref:System.Double&gt; value equal to or greater than <ph id=\"ph2\">`0.0034`</ph> but equal to or less than <ph id=\"ph3\">`160000`</ph>.","pos":[507,940],"source":"<a name=\"xamlAttributeUsage_ItemHeight\"></a>    ## XAML Attribute Usage      ```   <object ItemHeight=\"double\"/>   - or -   <object ItemHeight=\"qualifiedDouble\"/>   - or -   <object ItemHeight=\"Auto\"/>   ```      <a name=\"xamlValues_ItemHeight\"></a>    ## XAML Values    *double*    <xref:System.Double>       String representation of a <xref:System.Double> value equal to or greater than `0.0034` but equal to or less than `160000`."},{"content":"An unqualified value is measured in device independent pixels.","pos":[941,1003]},{"content":"Strings need not explicitly include decimal points.","pos":[1004,1055]},{"content":"<bpt id=\"p1\">*</bpt>qualifiedDouble<ept id=\"p1\">*</ept>    A <bpt id=\"p2\">*</bpt>double<ept id=\"p2\">*</ept> value as described above, (excepting <ph id=\"ph1\">`Auto`</ph>) followed by one of the following unit specifiers: <ph id=\"ph2\">`px`</ph>, <ph id=\"ph3\">`in`</ph>, <ph id=\"ph4\">`cm`</ph>, <ph id=\"ph5\">`pt`</ph>.","pos":[1062,1212],"source":"*qualifiedDouble*    A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in==96px       <ph id=\"ph4\">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id=\"ph5\">`pt`</ph> is points; 1pt==(96/72) px       Auto    Causes the line height is determined automatically from the current font characteristics.","pos":[1219,1529],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px       Auto    Causes the line height is determined automatically from the current font characteristics."},{"content":"Equivalent to a property value of &lt;xref:System.Double.NaN&gt;.","pos":[1531,1590],"source":"  Equivalent to a property value of <xref:System.Double.NaN>."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_ItemHeight\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.WrapPanel.ItemHeightProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|","pos":[1596,1884],"source":"<a name=\"dependencyPropertyInfo_ItemHeight\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.WrapPanel.ItemHeightProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"}]},{"pos":[43309,43514],"content":"The <xref:System.Double> that represents the uniform height of all items that are contained within the <xref href=\"System.Windows.Controls.WrapPanel\"></xref>. The default value is <xref:System.Double.NaN>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Double&gt; that represents the uniform height of all items that are contained within the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.WrapPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,158],"source":"The <xref:System.Double> that represents the uniform height of all items that are contained within the <xref href=\"System.Windows.Controls.WrapPanel\"></xref>."},{"content":"The default value is &lt;xref:System.Double.NaN&gt;.","pos":[159,205],"source":" The default value is <xref:System.Double.NaN>."}]},{"pos":[44001,44089],"content":"Identifies the <xref:System.Windows.Controls.WrapPanel.ItemHeight*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.WrapPanel.ItemHeight*&gt; dependency property.","pos":[0,88],"source":"Identifies the <xref:System.Windows.Controls.WrapPanel.ItemHeight*> dependency property."}]},{"pos":[44267,44279],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44666,44808],"content":"Gets or sets a value that specifies the width of all items that are contained within a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.WrapPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that specifies the width of all items that are contained within a <xref href=\"System.Windows.Controls.WrapPanel\"></xref>."},{"pos":[44821,46841],"content":"If this property is not set (or if it is set to `Auto` in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] or to `Double.NaN` in code), the size of the layout partition is equal to the <xref:System.Windows.UIElement.DesiredSize%2A> of the child element.       A child element of a <xref:System.Windows.Controls.WrapPanel> may have its width property set explicitly. ItemWidth specifies the size of the layout partition that is reserved by the <xref:System.Windows.Controls.WrapPanel> for the child element. As a result, ItemWidth takes precedence over an element's own width.      <a name=\"xamlAttributeUsage_ItemWidth\"></a>    ## XAML Attribute Usage      ```   <object ItemWidth=\"double\"/>   - or -   <object ItemWidth=\"qualifiedDouble\"/>   - or -   <object ItemWidth=\"Auto\"/>   ```      <a name=\"xamlValues_ItemWidth\"></a>    ## XAML Values    *double*    <xref:System.Double>       String representation of a <xref:System.Double> value equal to or greater than `0.0034` but equal to or less than `160000`. An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *qualifiedDouble*    A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px       Auto    Causes the line height is determined automatically from the current font characteristics.  Equivalent to a property value of <xref:System.Double.NaN>.      <a name=\"dependencyPropertyInfo_ItemWidth\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.WrapPanel.ItemWidthProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If this property is not set (or if it is set to <ph id=\"ph1\">`Auto`</ph> in <ph id=\"ph2\">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> or to <ph id=\"ph3\">`Double.NaN`</ph> in code), the size of the layout partition is equal to the &lt;xref:System.Windows.UIElement.DesiredSize%2A&gt; of the child element.","pos":[0,268],"source":"If this property is not set (or if it is set to `Auto` in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] or to `Double.NaN` in code), the size of the layout partition is equal to the <xref:System.Windows.UIElement.DesiredSize%2A> of the child element."},{"content":"A child element of a &lt;xref:System.Windows.Controls.WrapPanel&gt; may have its width property set explicitly.","pos":[275,380],"source":"       A child element of a <xref:System.Windows.Controls.WrapPanel> may have its width property set explicitly."},{"content":"ItemWidth specifies the size of the layout partition that is reserved by the &lt;xref:System.Windows.Controls.WrapPanel&gt; for the child element.","pos":[381,521],"source":" ItemWidth specifies the size of the layout partition that is reserved by the <xref:System.Windows.Controls.WrapPanel> for the child element."},{"content":"As a result, ItemWidth takes precedence over an element's own width.","pos":[522,590]},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_ItemWidth\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object ItemWidth=\"double\"/&gt;   - or -   &lt;object ItemWidth=\"qualifiedDouble\"/&gt;   - or -   &lt;object ItemWidth=\"Auto\"/&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_ItemWidth\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>double<ept id=\"p3\">*</ept>    &lt;xref:System.Double&gt;       String representation of a &lt;xref:System.Double&gt; value equal to or greater than <ph id=\"ph2\">`0.0034`</ph> but equal to or less than <ph id=\"ph3\">`160000`</ph>.","pos":[596,1024],"source":"<a name=\"xamlAttributeUsage_ItemWidth\"></a>    ## XAML Attribute Usage      ```   <object ItemWidth=\"double\"/>   - or -   <object ItemWidth=\"qualifiedDouble\"/>   - or -   <object ItemWidth=\"Auto\"/>   ```      <a name=\"xamlValues_ItemWidth\"></a>    ## XAML Values    *double*    <xref:System.Double>       String representation of a <xref:System.Double> value equal to or greater than `0.0034` but equal to or less than `160000`."},{"content":"An unqualified value is measured in device independent pixels.","pos":[1025,1087]},{"content":"Strings need not explicitly include decimal points.","pos":[1088,1139]},{"content":"<bpt id=\"p1\">*</bpt>qualifiedDouble<ept id=\"p1\">*</ept>    A <bpt id=\"p2\">*</bpt>double<ept id=\"p2\">*</ept> value as described above, (excepting <ph id=\"ph1\">`Auto`</ph>) followed by one of the following unit specifiers: <ph id=\"ph2\">`px`</ph>, <ph id=\"ph3\">`in`</ph>, <ph id=\"ph4\">`cm`</ph>, <ph id=\"ph5\">`pt`</ph>.","pos":[1146,1296],"source":"*qualifiedDouble*    A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in==96px       <ph id=\"ph4\">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id=\"ph5\">`pt`</ph> is points; 1pt==(96/72) px       Auto    Causes the line height is determined automatically from the current font characteristics.","pos":[1303,1613],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px       Auto    Causes the line height is determined automatically from the current font characteristics."},{"content":"Equivalent to a property value of &lt;xref:System.Double.NaN&gt;.","pos":[1615,1674],"source":"  Equivalent to a property value of <xref:System.Double.NaN>."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_ItemWidth\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.WrapPanel.ItemWidthProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|","pos":[1680,1966],"source":"<a name=\"dependencyPropertyInfo_ItemWidth\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.WrapPanel.ItemWidthProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"}]},{"pos":[47685,47887],"content":"A <xref:System.Double> that represents the uniform width of all items that are contained within the <xref href=\"System.Windows.Controls.WrapPanel\"></xref>. The default value is <xref:System.Double.NaN>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the uniform width of all items that are contained within the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.WrapPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,155],"source":"A <xref:System.Double> that represents the uniform width of all items that are contained within the <xref href=\"System.Windows.Controls.WrapPanel\"></xref>."},{"content":"The default value is &lt;xref:System.Double.NaN&gt;.","pos":[156,202],"source":" The default value is <xref:System.Double.NaN>."}]},{"pos":[48368,48455],"content":"Identifies the <xref:System.Windows.Controls.WrapPanel.ItemWidth*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.WrapPanel.ItemWidth*&gt; dependency property.","pos":[0,87],"source":"Identifies the <xref:System.Windows.Controls.WrapPanel.ItemWidth*> dependency property."}]},{"pos":[48632,48644],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49119,49315],"content":"Measures the child elements of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.WrapPanel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in anticipation of arranging them during the &lt;xref:System.Windows.Controls.WrapPanel.ArrangeOverride*&gt; pass.","needQuote":true,"needEscape":true,"source":"Measures the child elements of a <xref href=\"System.Windows.Controls.WrapPanel\"></xref> in anticipation of arranging them during the <xref:System.Windows.Controls.WrapPanel.ArrangeOverride*> pass."},{"pos":[49516,49600],"content":"An upper limit <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that should not be exceeded.","needQuote":true,"needEscape":true,"source":"An upper limit <xref href=\"System.Windows.Size\"></xref> that should not be exceeded."},{"pos":[49664,49757],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the desired size of the element.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Size\"></xref> that represents the desired size of the element."},{"pos":[50217,50302],"content":"Gets or sets a value that specifies the dimension in which child content is arranged.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies the dimension in which child content is arranged.","pos":[0,85]}]},{"pos":[50315,50980],"content":"If the Orientation property is set to `Horizontal`, child content forms horizontal rows first and if necessary forms vertical stacks of rows. If the Orientation property is set to `Vertical`, child content is first positioned in a vertical column, and if there is not enough space, wrapping occurs and additional columns in the horizontal dimension are added.      <a name=\"dependencyPropertyInfo_Orientation\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.WrapPanel.OrientationProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the Orientation property is set to <ph id=\"ph1\">`Horizontal`</ph>, child content forms horizontal rows first and if necessary forms vertical stacks of rows.","pos":[0,141],"source":"If the Orientation property is set to `Horizontal`, child content forms horizontal rows first and if necessary forms vertical stacks of rows."},{"content":"If the Orientation property is set to <ph id=\"ph1\">`Vertical`</ph>, child content is first positioned in a vertical column, and if there is not enough space, wrapping occurs and additional columns in the horizontal dimension are added.","pos":[142,359],"source":" If the Orientation property is set to `Vertical`, child content is first positioned in a vertical column, and if there is not enough space, wrapping occurs and additional columns in the horizontal dimension are added."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Orientation\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.WrapPanel.OrientationProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|","pos":[365,655],"source":"<a name=\"dependencyPropertyInfo_Orientation\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.WrapPanel.OrientationProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"}]},{"pos":[51881,52170],"content":"An <xref href=\"System.Windows.Controls.Orientation\"></xref> value that represents the physical orientation of content within the <xref href=\"System.Windows.Controls.WrapPanel\"></xref> as horizontal or vertical. The default value is <xref href=\"System.Windows.Controls.Orientation\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Orientation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the physical orientation of content within the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.WrapPanel\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> as horizontal or vertical.","pos":[0,210],"source":"An <xref href=\"System.Windows.Controls.Orientation\"></xref> value that represents the physical orientation of content within the <xref href=\"System.Windows.Controls.WrapPanel\"></xref> as horizontal or vertical."},{"content":"The default value is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Orientation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[211,289],"source":" The default value is <xref href=\"System.Windows.Controls.Orientation\"></xref>."}]},{"pos":[52663,52752],"content":"Identifies the <xref:System.Windows.Controls.WrapPanel.Orientation*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.WrapPanel.Orientation*&gt; dependency property.","pos":[0,89],"source":"Identifies the <xref:System.Windows.Controls.WrapPanel.Orientation*> dependency property."}]},{"pos":[52931,52943],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.WrapPanel\n  id: WrapPanel\n  children:\n  - System.Windows.Controls.WrapPanel.#ctor\n  - System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)\n  - System.Windows.Controls.WrapPanel.ItemHeight\n  - System.Windows.Controls.WrapPanel.ItemHeightProperty\n  - System.Windows.Controls.WrapPanel.ItemWidth\n  - System.Windows.Controls.WrapPanel.ItemWidthProperty\n  - System.Windows.Controls.WrapPanel.MeasureOverride(System.Windows.Size)\n  - System.Windows.Controls.WrapPanel.Orientation\n  - System.Windows.Controls.WrapPanel.OrientationProperty\n  langs:\n  - csharp\n  name: WrapPanel\n  nameWithType: WrapPanel\n  fullName: System.Windows.Controls.WrapPanel\n  type: Class\n  summary: Positions child elements in sequential position from left to right, breaking content to the next line at the edge of the containing box. Subsequent ordering happens sequentially from top to bottom or from right to left, depending on the value of the <xref:System.Windows.Controls.WrapPanel.Orientation*> property.\n  remarks: A WrapPanel contains a collection of <xref:System.Windows.UIElement> objects, which are in the <xref:System.Windows.Controls.Panel.Children%2A> property. All child elements of a WrapPanel receive the layout partition size of <xref:System.Windows.Controls.WrapPanel.ItemWidth%2A> multiplied by <xref:System.Windows.Controls.WrapPanel.ItemHeight%2A>.\n  example:\n  - \"The following example demonstrates how to create a WrapPanel in code and [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)].  \\n  \\n [!code-cpp[WrapPanel_Intro#1](~/add/codesnippet/cpp/wrappanel_code_cpp/WrapPanel_Code.cpp#1)]\\n [!code-cs[WrapPanel_Intro#1](~/add/codesnippet/csharp/WrapPanel_Code_csharp/WrapPanel_Code.cs#1)]\\n [!code-xml[WrapPanel_Intro#1](~/add/codesnippet/xaml/WrapPanel_Samp/default.xaml#1)]\\n [!code-vb[WrapPanel_Intro#1](~/add/codesnippet/visualbasic/WrapPanel_vb/WrapPanel_vb.vb#1)]\"\n  syntax:\n    content: 'public class WrapPanel : System.Windows.Controls.Panel'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Media.Visual\n  - System.Windows.UIElement\n  - System.Windows.FrameworkElement\n  - System.Windows.Controls.Panel\n  implements: []\n  inheritedMembers:\n  - System.Windows.Controls.Panel.Background\n  - System.Windows.Controls.Panel.BackgroundProperty\n  - System.Windows.Controls.Panel.Children\n  - System.Windows.Controls.Panel.CreateUIElementCollection(System.Windows.FrameworkElement)\n  - System.Windows.Controls.Panel.GetVisualChild(System.Int32)\n  - System.Windows.Controls.Panel.GetZIndex(System.Windows.UIElement)\n  - System.Windows.Controls.Panel.HasLogicalOrientation\n  - System.Windows.Controls.Panel.HasLogicalOrientationPublic\n  - System.Windows.Controls.Panel.InternalChildren\n  - System.Windows.Controls.Panel.IsItemsHost\n  - System.Windows.Controls.Panel.IsItemsHostProperty\n  - System.Windows.Controls.Panel.LogicalChildren\n  - System.Windows.Controls.Panel.LogicalOrientation\n  - System.Windows.Controls.Panel.LogicalOrientationPublic\n  - System.Windows.Controls.Panel.OnIsItemsHostChanged(System.Boolean,System.Boolean)\n  - System.Windows.Controls.Panel.OnRender(System.Windows.Media.DrawingContext)\n  - System.Windows.Controls.Panel.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Controls.Panel.SetZIndex(System.Windows.UIElement,System.Int32)\n  - System.Windows.Controls.Panel.ShouldSerializeChildren\n  - System.Windows.Controls.Panel.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  - System.Windows.Controls.Panel.System#Windows#Markup#IAddChild#AddText(System.String)\n  - System.Windows.Controls.Panel.VisualChildrenCount\n  - System.Windows.Controls.Panel.ZIndexProperty\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.ActualHeight\n  - System.Windows.FrameworkElement.ActualHeightProperty\n  - System.Windows.FrameworkElement.ActualWidth\n  - System.Windows.FrameworkElement.ActualWidthProperty\n  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.ApplyTemplate\n  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)\n  - System.Windows.FrameworkElement.BeginInit\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  - System.Windows.FrameworkElement.BindingGroup\n  - System.Windows.FrameworkElement.BindingGroupProperty\n  - System.Windows.FrameworkElement.BringIntoView\n  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)\n  - System.Windows.FrameworkElement.ContextMenu\n  - System.Windows.FrameworkElement.ContextMenuClosing\n  - System.Windows.FrameworkElement.ContextMenuClosingEvent\n  - System.Windows.FrameworkElement.ContextMenuOpening\n  - System.Windows.FrameworkElement.ContextMenuOpeningEvent\n  - System.Windows.FrameworkElement.ContextMenuProperty\n  - System.Windows.FrameworkElement.Cursor\n  - System.Windows.FrameworkElement.CursorProperty\n  - System.Windows.FrameworkElement.DataContext\n  - System.Windows.FrameworkElement.DataContextChanged\n  - System.Windows.FrameworkElement.DataContextProperty\n  - System.Windows.FrameworkElement.DefaultStyleKey\n  - System.Windows.FrameworkElement.DefaultStyleKeyProperty\n  - System.Windows.FrameworkElement.EndInit\n  - System.Windows.FrameworkElement.FindName(System.String)\n  - System.Windows.FrameworkElement.FindResource(System.Object)\n  - System.Windows.FrameworkElement.FlowDirection\n  - System.Windows.FrameworkElement.FlowDirectionProperty\n  - System.Windows.FrameworkElement.FocusVisualStyle\n  - System.Windows.FrameworkElement.FocusVisualStyleProperty\n  - System.Windows.FrameworkElement.ForceCursor\n  - System.Windows.FrameworkElement.ForceCursorProperty\n  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)\n  - System.Windows.FrameworkElement.GetTemplateChild(System.String)\n  - System.Windows.FrameworkElement.GetUIParentCore\n  - System.Windows.FrameworkElement.Height\n  - System.Windows.FrameworkElement.HeightProperty\n  - System.Windows.FrameworkElement.HorizontalAlignment\n  - System.Windows.FrameworkElement.HorizontalAlignmentProperty\n  - System.Windows.FrameworkElement.InheritanceBehavior\n  - System.Windows.FrameworkElement.Initialized\n  - System.Windows.FrameworkElement.InputScope\n  - System.Windows.FrameworkElement.InputScopeProperty\n  - System.Windows.FrameworkElement.IsInitialized\n  - System.Windows.FrameworkElement.IsLoaded\n  - System.Windows.FrameworkElement.Language\n  - System.Windows.FrameworkElement.LanguageProperty\n  - System.Windows.FrameworkElement.LayoutTransform\n  - System.Windows.FrameworkElement.LayoutTransformProperty\n  - System.Windows.FrameworkElement.Loaded\n  - System.Windows.FrameworkElement.LoadedEvent\n  - System.Windows.FrameworkElement.Margin\n  - System.Windows.FrameworkElement.MarginProperty\n  - System.Windows.FrameworkElement.MaxHeight\n  - System.Windows.FrameworkElement.MaxHeightProperty\n  - System.Windows.FrameworkElement.MaxWidth\n  - System.Windows.FrameworkElement.MaxWidthProperty\n  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)\n  - System.Windows.FrameworkElement.MinHeight\n  - System.Windows.FrameworkElement.MinHeightProperty\n  - System.Windows.FrameworkElement.MinWidth\n  - System.Windows.FrameworkElement.MinWidthProperty\n  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)\n  - System.Windows.FrameworkElement.Name\n  - System.Windows.FrameworkElement.NameProperty\n  - System.Windows.FrameworkElement.OnApplyTemplate\n  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.FrameworkElement.OnInitialized(System.EventArgs)\n  - System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)\n  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)\n  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.OverridesDefaultStyle\n  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty\n  - System.Windows.FrameworkElement.Parent\n  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)\n  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)\n  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.RequestBringIntoView\n  - System.Windows.FrameworkElement.RequestBringIntoViewEvent\n  - System.Windows.FrameworkElement.Resources\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)\n  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)\n  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.FrameworkElement.ShouldSerializeResources\n  - System.Windows.FrameworkElement.ShouldSerializeStyle\n  - System.Windows.FrameworkElement.ShouldSerializeTriggers\n  - System.Windows.FrameworkElement.SizeChanged\n  - System.Windows.FrameworkElement.SizeChangedEvent\n  - System.Windows.FrameworkElement.SourceUpdated\n  - System.Windows.FrameworkElement.Style\n  - System.Windows.FrameworkElement.StyleProperty\n  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  - System.Windows.FrameworkElement.Tag\n  - System.Windows.FrameworkElement.TagProperty\n  - System.Windows.FrameworkElement.TargetUpdated\n  - System.Windows.FrameworkElement.TemplatedParent\n  - System.Windows.FrameworkElement.ToolTip\n  - System.Windows.FrameworkElement.ToolTipClosing\n  - System.Windows.FrameworkElement.ToolTipClosingEvent\n  - System.Windows.FrameworkElement.ToolTipOpening\n  - System.Windows.FrameworkElement.ToolTipOpeningEvent\n  - System.Windows.FrameworkElement.ToolTipProperty\n  - System.Windows.FrameworkElement.Triggers\n  - System.Windows.FrameworkElement.TryFindResource(System.Object)\n  - System.Windows.FrameworkElement.Unloaded\n  - System.Windows.FrameworkElement.UnloadedEvent\n  - System.Windows.FrameworkElement.UnregisterName(System.String)\n  - System.Windows.FrameworkElement.UpdateDefaultStyle\n  - System.Windows.FrameworkElement.UseLayoutRounding\n  - System.Windows.FrameworkElement.UseLayoutRoundingProperty\n  - System.Windows.FrameworkElement.VerticalAlignment\n  - System.Windows.FrameworkElement.VerticalAlignmentProperty\n  - System.Windows.FrameworkElement.Width\n  - System.Windows.FrameworkElement.WidthProperty\n  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)\n  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.VisualBitmapEffect\n  - System.Windows.Media.Visual.VisualBitmapEffectInput\n  - System.Windows.Media.Visual.VisualBitmapScalingMode\n  - System.Windows.Media.Visual.VisualCacheMode\n  - System.Windows.Media.Visual.VisualClearTypeHint\n  - System.Windows.Media.Visual.VisualClip\n  - System.Windows.Media.Visual.VisualEdgeMode\n  - System.Windows.Media.Visual.VisualEffect\n  - System.Windows.Media.Visual.VisualOffset\n  - System.Windows.Media.Visual.VisualOpacity\n  - System.Windows.Media.Visual.VisualOpacityMask\n  - System.Windows.Media.Visual.VisualParent\n  - System.Windows.Media.Visual.VisualScrollableAreaClip\n  - System.Windows.Media.Visual.VisualTextHintingMode\n  - System.Windows.Media.Visual.VisualTextRenderingMode\n  - System.Windows.Media.Visual.VisualTransform\n  - System.Windows.Media.Visual.VisualXSnappingGuidelines\n  - System.Windows.Media.Visual.VisualYSnappingGuidelines\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.AllowDrop\n  - System.Windows.UIElement.AllowDropProperty\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.AreAnyTouchesCaptured\n  - System.Windows.UIElement.AreAnyTouchesCapturedProperty\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithin\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOver\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty\n  - System.Windows.UIElement.AreAnyTouchesOver\n  - System.Windows.UIElement.AreAnyTouchesOverProperty\n  - System.Windows.UIElement.Arrange(System.Windows.Rect)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.BitmapEffect\n  - System.Windows.UIElement.BitmapEffectInput\n  - System.Windows.UIElement.BitmapEffectInputProperty\n  - System.Windows.UIElement.BitmapEffectProperty\n  - System.Windows.UIElement.CacheMode\n  - System.Windows.UIElement.CacheModeProperty\n  - System.Windows.UIElement.CaptureMouse\n  - System.Windows.UIElement.CaptureStylus\n  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.Clip\n  - System.Windows.UIElement.ClipProperty\n  - System.Windows.UIElement.ClipToBounds\n  - System.Windows.UIElement.ClipToBoundsProperty\n  - System.Windows.UIElement.CommandBindings\n  - System.Windows.UIElement.DesiredSize\n  - System.Windows.UIElement.DragEnter\n  - System.Windows.UIElement.DragEnterEvent\n  - System.Windows.UIElement.DragLeave\n  - System.Windows.UIElement.DragLeaveEvent\n  - System.Windows.UIElement.DragOver\n  - System.Windows.UIElement.DragOverEvent\n  - System.Windows.UIElement.Drop\n  - System.Windows.UIElement.DropEvent\n  - System.Windows.UIElement.Effect\n  - System.Windows.UIElement.EffectProperty\n  - System.Windows.UIElement.Focus\n  - System.Windows.UIElement.Focusable\n  - System.Windows.UIElement.FocusableChanged\n  - System.Windows.UIElement.FocusableProperty\n  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.UIElement.GiveFeedback\n  - System.Windows.UIElement.GiveFeedbackEvent\n  - System.Windows.UIElement.GotFocus\n  - System.Windows.UIElement.GotFocusEvent\n  - System.Windows.UIElement.GotKeyboardFocus\n  - System.Windows.UIElement.GotKeyboardFocusEvent\n  - System.Windows.UIElement.GotMouseCapture\n  - System.Windows.UIElement.GotMouseCaptureEvent\n  - System.Windows.UIElement.GotStylusCapture\n  - System.Windows.UIElement.GotStylusCaptureEvent\n  - System.Windows.UIElement.GotTouchCapture\n  - System.Windows.UIElement.GotTouchCaptureEvent\n  - System.Windows.UIElement.HasAnimatedProperties\n  - System.Windows.UIElement.HasEffectiveKeyboardFocus\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)\n  - System.Windows.UIElement.InputBindings\n  - System.Windows.UIElement.InputHitTest(System.Windows.Point)\n  - System.Windows.UIElement.InvalidateArrange\n  - System.Windows.UIElement.InvalidateMeasure\n  - System.Windows.UIElement.InvalidateVisual\n  - System.Windows.UIElement.IsArrangeValid\n  - System.Windows.UIElement.IsEnabled\n  - System.Windows.UIElement.IsEnabledChanged\n  - System.Windows.UIElement.IsEnabledCore\n  - System.Windows.UIElement.IsEnabledProperty\n  - System.Windows.UIElement.IsFocused\n  - System.Windows.UIElement.IsFocusedProperty\n  - System.Windows.UIElement.IsHitTestVisible\n  - System.Windows.UIElement.IsHitTestVisibleChanged\n  - System.Windows.UIElement.IsHitTestVisibleProperty\n  - System.Windows.UIElement.IsInputMethodEnabled\n  - System.Windows.UIElement.IsKeyboardFocused\n  - System.Windows.UIElement.IsKeyboardFocusedChanged\n  - System.Windows.UIElement.IsKeyboardFocusedProperty\n  - System.Windows.UIElement.IsKeyboardFocusWithin\n  - System.Windows.UIElement.IsKeyboardFocusWithinChanged\n  - System.Windows.UIElement.IsKeyboardFocusWithinProperty\n  - System.Windows.UIElement.IsManipulationEnabled\n  - System.Windows.UIElement.IsManipulationEnabledProperty\n  - System.Windows.UIElement.IsMeasureValid\n  - System.Windows.UIElement.IsMouseCaptured\n  - System.Windows.UIElement.IsMouseCapturedChanged\n  - System.Windows.UIElement.IsMouseCapturedProperty\n  - System.Windows.UIElement.IsMouseCaptureWithin\n  - System.Windows.UIElement.IsMouseCaptureWithinChanged\n  - System.Windows.UIElement.IsMouseCaptureWithinProperty\n  - System.Windows.UIElement.IsMouseDirectlyOver\n  - System.Windows.UIElement.IsMouseDirectlyOverChanged\n  - System.Windows.UIElement.IsMouseDirectlyOverProperty\n  - System.Windows.UIElement.IsMouseOver\n  - System.Windows.UIElement.IsMouseOverProperty\n  - System.Windows.UIElement.IsStylusCaptured\n  - System.Windows.UIElement.IsStylusCapturedChanged\n  - System.Windows.UIElement.IsStylusCapturedProperty\n  - System.Windows.UIElement.IsStylusCaptureWithin\n  - System.Windows.UIElement.IsStylusCaptureWithinChanged\n  - System.Windows.UIElement.IsStylusCaptureWithinProperty\n  - System.Windows.UIElement.IsStylusDirectlyOver\n  - System.Windows.UIElement.IsStylusDirectlyOverChanged\n  - System.Windows.UIElement.IsStylusDirectlyOverProperty\n  - System.Windows.UIElement.IsStylusOver\n  - System.Windows.UIElement.IsStylusOverProperty\n  - System.Windows.UIElement.IsVisible\n  - System.Windows.UIElement.IsVisibleChanged\n  - System.Windows.UIElement.IsVisibleProperty\n  - System.Windows.UIElement.KeyDown\n  - System.Windows.UIElement.KeyDownEvent\n  - System.Windows.UIElement.KeyUp\n  - System.Windows.UIElement.KeyUpEvent\n  - System.Windows.UIElement.LayoutUpdated\n  - System.Windows.UIElement.LostFocus\n  - System.Windows.UIElement.LostFocusEvent\n  - System.Windows.UIElement.LostKeyboardFocus\n  - System.Windows.UIElement.LostKeyboardFocusEvent\n  - System.Windows.UIElement.LostMouseCapture\n  - System.Windows.UIElement.LostMouseCaptureEvent\n  - System.Windows.UIElement.LostStylusCapture\n  - System.Windows.UIElement.LostStylusCaptureEvent\n  - System.Windows.UIElement.LostTouchCapture\n  - System.Windows.UIElement.LostTouchCaptureEvent\n  - System.Windows.UIElement.ManipulationBoundaryFeedback\n  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent\n  - System.Windows.UIElement.ManipulationCompleted\n  - System.Windows.UIElement.ManipulationCompletedEvent\n  - System.Windows.UIElement.ManipulationDelta\n  - System.Windows.UIElement.ManipulationDeltaEvent\n  - System.Windows.UIElement.ManipulationInertiaStarting\n  - System.Windows.UIElement.ManipulationInertiaStartingEvent\n  - System.Windows.UIElement.ManipulationStarted\n  - System.Windows.UIElement.ManipulationStartedEvent\n  - System.Windows.UIElement.ManipulationStarting\n  - System.Windows.UIElement.ManipulationStartingEvent\n  - System.Windows.UIElement.Measure(System.Windows.Size)\n  - System.Windows.UIElement.MouseDown\n  - System.Windows.UIElement.MouseDownEvent\n  - System.Windows.UIElement.MouseEnter\n  - System.Windows.UIElement.MouseEnterEvent\n  - System.Windows.UIElement.MouseLeave\n  - System.Windows.UIElement.MouseLeaveEvent\n  - System.Windows.UIElement.MouseLeftButtonDown\n  - System.Windows.UIElement.MouseLeftButtonDownEvent\n  - System.Windows.UIElement.MouseLeftButtonUp\n  - System.Windows.UIElement.MouseLeftButtonUpEvent\n  - System.Windows.UIElement.MouseMove\n  - System.Windows.UIElement.MouseMoveEvent\n  - System.Windows.UIElement.MouseRightButtonDown\n  - System.Windows.UIElement.MouseRightButtonDownEvent\n  - System.Windows.UIElement.MouseRightButtonUp\n  - System.Windows.UIElement.MouseRightButtonUpEvent\n  - System.Windows.UIElement.MouseUp\n  - System.Windows.UIElement.MouseUpEvent\n  - System.Windows.UIElement.MouseWheel\n  - System.Windows.UIElement.MouseWheelEvent\n  - System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)\n  - System.Windows.UIElement.OnCreateAutomationPeer\n  - System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)\n  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)\n  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)\n  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)\n  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)\n  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)\n  - System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.Opacity\n  - System.Windows.UIElement.OpacityMask\n  - System.Windows.UIElement.OpacityMaskProperty\n  - System.Windows.UIElement.OpacityProperty\n  - System.Windows.UIElement.PersistId\n  - System.Windows.UIElement.PreviewDragEnter\n  - System.Windows.UIElement.PreviewDragEnterEvent\n  - System.Windows.UIElement.PreviewDragLeave\n  - System.Windows.UIElement.PreviewDragLeaveEvent\n  - System.Windows.UIElement.PreviewDragOver\n  - System.Windows.UIElement.PreviewDragOverEvent\n  - System.Windows.UIElement.PreviewDrop\n  - System.Windows.UIElement.PreviewDropEvent\n  - System.Windows.UIElement.PreviewGiveFeedback\n  - System.Windows.UIElement.PreviewGiveFeedbackEvent\n  - System.Windows.UIElement.PreviewGotKeyboardFocus\n  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewKeyDown\n  - System.Windows.UIElement.PreviewKeyDownEvent\n  - System.Windows.UIElement.PreviewKeyUp\n  - System.Windows.UIElement.PreviewKeyUpEvent\n  - System.Windows.UIElement.PreviewLostKeyboardFocus\n  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewMouseDown\n  - System.Windows.UIElement.PreviewMouseDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonDown\n  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonUp\n  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseMove\n  - System.Windows.UIElement.PreviewMouseMoveEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonDown\n  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonUp\n  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseUp\n  - System.Windows.UIElement.PreviewMouseUpEvent\n  - System.Windows.UIElement.PreviewMouseWheel\n  - System.Windows.UIElement.PreviewMouseWheelEvent\n  - System.Windows.UIElement.PreviewQueryContinueDrag\n  - System.Windows.UIElement.PreviewQueryContinueDragEvent\n  - System.Windows.UIElement.PreviewStylusButtonDown\n  - System.Windows.UIElement.PreviewStylusButtonDownEvent\n  - System.Windows.UIElement.PreviewStylusButtonUp\n  - System.Windows.UIElement.PreviewStylusButtonUpEvent\n  - System.Windows.UIElement.PreviewStylusDown\n  - System.Windows.UIElement.PreviewStylusDownEvent\n  - System.Windows.UIElement.PreviewStylusInAirMove\n  - System.Windows.UIElement.PreviewStylusInAirMoveEvent\n  - System.Windows.UIElement.PreviewStylusInRange\n  - System.Windows.UIElement.PreviewStylusInRangeEvent\n  - System.Windows.UIElement.PreviewStylusMove\n  - System.Windows.UIElement.PreviewStylusMoveEvent\n  - System.Windows.UIElement.PreviewStylusOutOfRange\n  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent\n  - System.Windows.UIElement.PreviewStylusSystemGesture\n  - System.Windows.UIElement.PreviewStylusSystemGestureEvent\n  - System.Windows.UIElement.PreviewStylusUp\n  - System.Windows.UIElement.PreviewStylusUpEvent\n  - System.Windows.UIElement.PreviewTextInput\n  - System.Windows.UIElement.PreviewTextInputEvent\n  - System.Windows.UIElement.PreviewTouchDown\n  - System.Windows.UIElement.PreviewTouchDownEvent\n  - System.Windows.UIElement.PreviewTouchMove\n  - System.Windows.UIElement.PreviewTouchMoveEvent\n  - System.Windows.UIElement.PreviewTouchUp\n  - System.Windows.UIElement.PreviewTouchUpEvent\n  - System.Windows.UIElement.QueryContinueDrag\n  - System.Windows.UIElement.QueryContinueDragEvent\n  - System.Windows.UIElement.QueryCursor\n  - System.Windows.UIElement.QueryCursorEvent\n  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.ReleaseAllTouchCaptures\n  - System.Windows.UIElement.ReleaseMouseCapture\n  - System.Windows.UIElement.ReleaseStylusCapture\n  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.RenderSize\n  - System.Windows.UIElement.RenderTransform\n  - System.Windows.UIElement.RenderTransformOrigin\n  - System.Windows.UIElement.RenderTransformOriginProperty\n  - System.Windows.UIElement.RenderTransformProperty\n  - System.Windows.UIElement.ShouldSerializeCommandBindings\n  - System.Windows.UIElement.ShouldSerializeInputBindings\n  - System.Windows.UIElement.SnapsToDevicePixels\n  - System.Windows.UIElement.SnapsToDevicePixelsProperty\n  - System.Windows.UIElement.StylusButtonDown\n  - System.Windows.UIElement.StylusButtonDownEvent\n  - System.Windows.UIElement.StylusButtonUp\n  - System.Windows.UIElement.StylusButtonUpEvent\n  - System.Windows.UIElement.StylusDown\n  - System.Windows.UIElement.StylusDownEvent\n  - System.Windows.UIElement.StylusEnter\n  - System.Windows.UIElement.StylusEnterEvent\n  - System.Windows.UIElement.StylusInAirMove\n  - System.Windows.UIElement.StylusInAirMoveEvent\n  - System.Windows.UIElement.StylusInRange\n  - System.Windows.UIElement.StylusInRangeEvent\n  - System.Windows.UIElement.StylusLeave\n  - System.Windows.UIElement.StylusLeaveEvent\n  - System.Windows.UIElement.StylusMove\n  - System.Windows.UIElement.StylusMoveEvent\n  - System.Windows.UIElement.StylusOutOfRange\n  - System.Windows.UIElement.StylusOutOfRangeEvent\n  - System.Windows.UIElement.StylusPlugIns\n  - System.Windows.UIElement.StylusSystemGesture\n  - System.Windows.UIElement.StylusSystemGestureEvent\n  - System.Windows.UIElement.StylusUp\n  - System.Windows.UIElement.StylusUpEvent\n  - System.Windows.UIElement.TextInput\n  - System.Windows.UIElement.TextInputEvent\n  - System.Windows.UIElement.TouchDown\n  - System.Windows.UIElement.TouchDownEvent\n  - System.Windows.UIElement.TouchEnter\n  - System.Windows.UIElement.TouchEnterEvent\n  - System.Windows.UIElement.TouchesCaptured\n  - System.Windows.UIElement.TouchesCapturedWithin\n  - System.Windows.UIElement.TouchesDirectlyOver\n  - System.Windows.UIElement.TouchesOver\n  - System.Windows.UIElement.TouchLeave\n  - System.Windows.UIElement.TouchLeaveEvent\n  - System.Windows.UIElement.TouchMove\n  - System.Windows.UIElement.TouchMoveEvent\n  - System.Windows.UIElement.TouchUp\n  - System.Windows.UIElement.TouchUpEvent\n  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)\n  - System.Windows.UIElement.Uid\n  - System.Windows.UIElement.UidProperty\n  - System.Windows.UIElement.UpdateLayout\n  - System.Windows.UIElement.Visibility\n  - System.Windows.UIElement.VisibilityProperty\n  platform:\n  - net462\n- uid: System.Windows.Controls.WrapPanel.#ctor\n  id: '#ctor'\n  parent: System.Windows.Controls.WrapPanel\n  langs:\n  - csharp\n  name: WrapPanel()\n  nameWithType: WrapPanel.WrapPanel()\n  fullName: System.Windows.Controls.WrapPanel.WrapPanel()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.WrapPanel\"></xref> class.\n  syntax:\n    content: public WrapPanel ();\n    parameters: []\n  overload: System.Windows.Controls.WrapPanel.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)\n  id: ArrangeOverride(System.Windows.Size)\n  parent: System.Windows.Controls.WrapPanel\n  langs:\n  - csharp\n  name: ArrangeOverride(Size)\n  nameWithType: WrapPanel.ArrangeOverride(Size)\n  fullName: System.Windows.Controls.WrapPanel.ArrangeOverride(Size)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Arranges the content of a <xref href=\"System.Windows.Controls.WrapPanel\"></xref> element.\n  syntax:\n    content: protected override System.Windows.Size ArrangeOverride (System.Windows.Size finalSize);\n    parameters:\n    - id: finalSize\n      type: System.Windows.Size\n      description: The <xref href=\"System.Windows.Size\"></xref> that this element should use to arrange its child elements.\n    return:\n      type: System.Windows.Size\n      description: The <xref href=\"System.Windows.Size\"></xref> that represents the arranged size of this <xref href=\"System.Windows.Controls.WrapPanel\"></xref> element and its children.\n  overload: System.Windows.Controls.WrapPanel.ArrangeOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.WrapPanel.ItemHeight\n  id: ItemHeight\n  parent: System.Windows.Controls.WrapPanel\n  langs:\n  - csharp\n  name: ItemHeight\n  nameWithType: WrapPanel.ItemHeight\n  fullName: System.Windows.Controls.WrapPanel.ItemHeight\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that specifies the height of all items that are contained within a <xref href=\"System.Windows.Controls.WrapPanel\"></xref>.\n  remarks: \"If this property is not set (or if it is set to `Auto` in XAML or to `Double.NaN` in code), the size of the layout partition is equal to the desired size of the child element.  \\n  \\n A child element of a <xref:System.Windows.Controls.WrapPanel> may have its height property set explicitly. ItemHeight specifies the size of the layout partition that is reserved by the <xref:System.Windows.Controls.WrapPanel> for the child element. As a result, ItemHeight takes precedence over an element's own height.  \\n  \\n<a name=\\\"xamlAttributeUsage_ItemHeight\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object ItemHeight=\\\"double\\\"/>  \\n- or -  \\n<object ItemHeight=\\\"qualifiedDouble\\\"/>  \\n- or -  \\n<object ItemHeight=\\\"Auto\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_ItemHeight\\\"></a>   \\n## XAML Values  \\n *double*  \\n <xref:System.Double>  \\n  \\n String representation of a <xref:System.Double> value equal to or greater than `0.0034` but equal to or less than `160000`. An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.  \\n  \\n *qualifiedDouble*  \\n A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in==96px  \\n  \\n `cm` is centimeters; 1cm==(96/2.54) px  \\n  \\n `pt` is points; 1pt==(96/72) px  \\n  \\n Auto  \\n Causes the line height is determined automatically from the current font characteristics.  Equivalent to a property value of <xref:System.Double.NaN>.  \\n  \\n<a name=\\\"dependencyPropertyInfo_ItemHeight\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.WrapPanel.ItemHeightProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|\"\n  example:\n  - \"The following example demonstrates how to set the ItemHeight property in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)].  \\n  \\n [!code-xml[WrapPanel_Intro2#1](~/add/codesnippet/xaml/WrapPanel_Samp2/default.xaml#1)]  \\n  \\n The following example demonstrates how to set the ItemHeight property by using code.  \\n  \\n [!code-cpp[wrappanel_intro#1](~/add/codesnippet/cpp/wrappanel_code_cpp/WrapPanel_Code.cpp#1)]\\n [!code-cs[wrappanel_intro#1](~/add/codesnippet/csharp/WrapPanel_Code_csharp/WrapPanel_Code.cs#1)]\\n [!code-xml[wrappanel_intro#1](~/add/codesnippet/xaml/WrapPanel_Samp/default.xaml#1)]\\n [!code-vb[wrappanel_intro#1](~/add/codesnippet/visualbasic/WrapPanel_vb/WrapPanel_vb.vb#1)]\"\n  syntax:\n    content: public double ItemHeight { get; set; }\n    return:\n      type: System.Double\n      description: The <xref:System.Double> that represents the uniform height of all items that are contained within the <xref href=\"System.Windows.Controls.WrapPanel\"></xref>. The default value is <xref:System.Double.NaN>.\n  overload: System.Windows.Controls.WrapPanel.ItemHeight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.WrapPanel.ItemHeightProperty\n  id: ItemHeightProperty\n  parent: System.Windows.Controls.WrapPanel\n  langs:\n  - csharp\n  name: ItemHeightProperty\n  nameWithType: WrapPanel.ItemHeightProperty\n  fullName: System.Windows.Controls.WrapPanel.ItemHeightProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.WrapPanel.ItemHeight*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ItemHeightProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.WrapPanel.ItemWidth\n  id: ItemWidth\n  parent: System.Windows.Controls.WrapPanel\n  langs:\n  - csharp\n  name: ItemWidth\n  nameWithType: WrapPanel.ItemWidth\n  fullName: System.Windows.Controls.WrapPanel.ItemWidth\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that specifies the width of all items that are contained within a <xref href=\"System.Windows.Controls.WrapPanel\"></xref>.\n  remarks: \"If this property is not set (or if it is set to `Auto` in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] or to `Double.NaN` in code), the size of the layout partition is equal to the <xref:System.Windows.UIElement.DesiredSize%2A> of the child element.  \\n  \\n A child element of a <xref:System.Windows.Controls.WrapPanel> may have its width property set explicitly. ItemWidth specifies the size of the layout partition that is reserved by the <xref:System.Windows.Controls.WrapPanel> for the child element. As a result, ItemWidth takes precedence over an element's own width.  \\n  \\n<a name=\\\"xamlAttributeUsage_ItemWidth\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object ItemWidth=\\\"double\\\"/>  \\n- or -  \\n<object ItemWidth=\\\"qualifiedDouble\\\"/>  \\n- or -  \\n<object ItemWidth=\\\"Auto\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_ItemWidth\\\"></a>   \\n## XAML Values  \\n *double*  \\n <xref:System.Double>  \\n  \\n String representation of a <xref:System.Double> value equal to or greater than `0.0034` but equal to or less than `160000`. An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.  \\n  \\n *qualifiedDouble*  \\n A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in==96px  \\n  \\n `cm` is centimeters; 1cm==(96/2.54) px  \\n  \\n `pt` is points; 1pt==(96/72) px  \\n  \\n Auto  \\n Causes the line height is determined automatically from the current font characteristics.  Equivalent to a property value of <xref:System.Double.NaN>.  \\n  \\n<a name=\\\"dependencyPropertyInfo_ItemWidth\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.WrapPanel.ItemWidthProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|\"\n  example:\n  - \"The following example demonstrates how to set the ItemWidth property in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)].  \\n  \\n [!code-xml[WrapPanel_Intro2#1](~/add/codesnippet/xaml/WrapPanel_Samp2/default.xaml#1)]  \\n  \\n The following example demonstrates how to set the ItemWidth property by using code.  \\n  \\n [!code-cpp[wrappanel_intro#1](~/add/codesnippet/cpp/wrappanel_code_cpp/WrapPanel_Code.cpp#1)]\\n [!code-cs[wrappanel_intro#1](~/add/codesnippet/csharp/WrapPanel_Code_csharp/WrapPanel_Code.cs#1)]\\n [!code-xml[wrappanel_intro#1](~/add/codesnippet/xaml/WrapPanel_Samp/default.xaml#1)]\\n [!code-vb[wrappanel_intro#1](~/add/codesnippet/visualbasic/WrapPanel_vb/WrapPanel_vb.vb#1)]\"\n  syntax:\n    content: public double ItemWidth { get; set; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the uniform width of all items that are contained within the <xref href=\"System.Windows.Controls.WrapPanel\"></xref>. The default value is <xref:System.Double.NaN>.\n  overload: System.Windows.Controls.WrapPanel.ItemWidth*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.WrapPanel.ItemWidthProperty\n  id: ItemWidthProperty\n  parent: System.Windows.Controls.WrapPanel\n  langs:\n  - csharp\n  name: ItemWidthProperty\n  nameWithType: WrapPanel.ItemWidthProperty\n  fullName: System.Windows.Controls.WrapPanel.ItemWidthProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.WrapPanel.ItemWidth*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ItemWidthProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.WrapPanel.MeasureOverride(System.Windows.Size)\n  id: MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.WrapPanel\n  langs:\n  - csharp\n  name: MeasureOverride(Size)\n  nameWithType: WrapPanel.MeasureOverride(Size)\n  fullName: System.Windows.Controls.WrapPanel.MeasureOverride(Size)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Measures the child elements of a <xref href=\"System.Windows.Controls.WrapPanel\"></xref> in anticipation of arranging them during the <xref:System.Windows.Controls.WrapPanel.ArrangeOverride*> pass.\n  syntax:\n    content: protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);\n    parameters:\n    - id: constraint\n      type: System.Windows.Size\n      description: An upper limit <xref href=\"System.Windows.Size\"></xref> that should not be exceeded.\n    return:\n      type: System.Windows.Size\n      description: The <xref href=\"System.Windows.Size\"></xref> that represents the desired size of the element.\n  overload: System.Windows.Controls.WrapPanel.MeasureOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.WrapPanel.Orientation\n  id: Orientation\n  parent: System.Windows.Controls.WrapPanel\n  langs:\n  - csharp\n  name: Orientation\n  nameWithType: WrapPanel.Orientation\n  fullName: System.Windows.Controls.WrapPanel.Orientation\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that specifies the dimension in which child content is arranged.\n  remarks: \"If the Orientation property is set to `Horizontal`, child content forms horizontal rows first and if necessary forms vertical stacks of rows. If the Orientation property is set to `Vertical`, child content is first positioned in a vertical column, and if there is not enough space, wrapping occurs and additional columns in the horizontal dimension are added.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Orientation\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.WrapPanel.OrientationProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|\"\n  example:\n  - \"The following example demonstrates how to set the Orientation property in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)].  \\n  \\n [!code-xml[WrapPanel_Intro2#1](~/add/codesnippet/xaml/WrapPanel_Samp2/default.xaml#1)]  \\n  \\n The following example demonstrates how to set the Orientation property by using code.  \\n  \\n [!code-cpp[wrappanel_intro#1](~/add/codesnippet/cpp/wrappanel_code_cpp/WrapPanel_Code.cpp#1)]\\n [!code-cs[wrappanel_intro#1](~/add/codesnippet/csharp/WrapPanel_Code_csharp/WrapPanel_Code.cs#1)]\\n [!code-xml[wrappanel_intro#1](~/add/codesnippet/xaml/WrapPanel_Samp/default.xaml#1)]\\n [!code-vb[wrappanel_intro#1](~/add/codesnippet/visualbasic/WrapPanel_vb/WrapPanel_vb.vb#1)]\"\n  syntax:\n    content: public System.Windows.Controls.Orientation Orientation { get; set; }\n    return:\n      type: System.Windows.Controls.Orientation\n      description: An <xref href=\"System.Windows.Controls.Orientation\"></xref> value that represents the physical orientation of content within the <xref href=\"System.Windows.Controls.WrapPanel\"></xref> as horizontal or vertical. The default value is <xref href=\"System.Windows.Controls.Orientation\"></xref>.\n  overload: System.Windows.Controls.WrapPanel.Orientation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.WrapPanel.OrientationProperty\n  id: OrientationProperty\n  parent: System.Windows.Controls.WrapPanel\n  langs:\n  - csharp\n  name: OrientationProperty\n  nameWithType: WrapPanel.OrientationProperty\n  fullName: System.Windows.Controls.WrapPanel.OrientationProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.WrapPanel.Orientation*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty OrientationProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Controls.Panel\n  isExternal: false\n  name: System.Windows.Controls.Panel\n- uid: System.Windows.Controls.WrapPanel.#ctor\n  parent: System.Windows.Controls.WrapPanel\n  isExternal: false\n  name: WrapPanel()\n  nameWithType: WrapPanel.WrapPanel()\n  fullName: System.Windows.Controls.WrapPanel.WrapPanel()\n- uid: System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)\n  parent: System.Windows.Controls.WrapPanel\n  isExternal: false\n  name: ArrangeOverride(Size)\n  nameWithType: WrapPanel.ArrangeOverride(Size)\n  fullName: System.Windows.Controls.WrapPanel.ArrangeOverride(Size)\n- uid: System.Windows.Size\n  parent: System.Windows\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n- uid: System.Windows.Controls.WrapPanel.ItemHeight\n  parent: System.Windows.Controls.WrapPanel\n  isExternal: false\n  name: ItemHeight\n  nameWithType: WrapPanel.ItemHeight\n  fullName: System.Windows.Controls.WrapPanel.ItemHeight\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Controls.WrapPanel.ItemHeightProperty\n  parent: System.Windows.Controls.WrapPanel\n  isExternal: false\n  name: ItemHeightProperty\n  nameWithType: WrapPanel.ItemHeightProperty\n  fullName: System.Windows.Controls.WrapPanel.ItemHeightProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Controls.WrapPanel.ItemWidth\n  parent: System.Windows.Controls.WrapPanel\n  isExternal: false\n  name: ItemWidth\n  nameWithType: WrapPanel.ItemWidth\n  fullName: System.Windows.Controls.WrapPanel.ItemWidth\n- uid: System.Windows.Controls.WrapPanel.ItemWidthProperty\n  parent: System.Windows.Controls.WrapPanel\n  isExternal: false\n  name: ItemWidthProperty\n  nameWithType: WrapPanel.ItemWidthProperty\n  fullName: System.Windows.Controls.WrapPanel.ItemWidthProperty\n- uid: System.Windows.Controls.WrapPanel.MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.WrapPanel\n  isExternal: false\n  name: MeasureOverride(Size)\n  nameWithType: WrapPanel.MeasureOverride(Size)\n  fullName: System.Windows.Controls.WrapPanel.MeasureOverride(Size)\n- uid: System.Windows.Controls.WrapPanel.Orientation\n  parent: System.Windows.Controls.WrapPanel\n  isExternal: false\n  name: Orientation\n  nameWithType: WrapPanel.Orientation\n  fullName: System.Windows.Controls.WrapPanel.Orientation\n- uid: System.Windows.Controls.Orientation\n  parent: System.Windows.Controls\n  isExternal: false\n  name: Orientation\n  nameWithType: Orientation\n  fullName: System.Windows.Controls.Orientation\n- uid: System.Windows.Controls.WrapPanel.OrientationProperty\n  parent: System.Windows.Controls.WrapPanel\n  isExternal: false\n  name: OrientationProperty\n  nameWithType: WrapPanel.OrientationProperty\n  fullName: System.Windows.Controls.WrapPanel.OrientationProperty\n- uid: System.Windows.Controls.WrapPanel.#ctor*\n  parent: System.Windows.Controls.WrapPanel\n  isExternal: false\n  name: WrapPanel\n  nameWithType: WrapPanel.WrapPanel\n- uid: System.Windows.Controls.WrapPanel.ArrangeOverride*\n  parent: System.Windows.Controls.WrapPanel\n  isExternal: false\n  name: ArrangeOverride\n  nameWithType: WrapPanel.ArrangeOverride\n- uid: System.Windows.Controls.WrapPanel.ItemHeight*\n  parent: System.Windows.Controls.WrapPanel\n  isExternal: false\n  name: ItemHeight\n  nameWithType: WrapPanel.ItemHeight\n- uid: System.Windows.Controls.WrapPanel.ItemWidth*\n  parent: System.Windows.Controls.WrapPanel\n  isExternal: false\n  name: ItemWidth\n  nameWithType: WrapPanel.ItemWidth\n- uid: System.Windows.Controls.WrapPanel.MeasureOverride*\n  parent: System.Windows.Controls.WrapPanel\n  isExternal: false\n  name: MeasureOverride\n  nameWithType: WrapPanel.MeasureOverride\n- uid: System.Windows.Controls.WrapPanel.Orientation*\n  parent: System.Windows.Controls.WrapPanel\n  isExternal: false\n  name: Orientation\n  nameWithType: WrapPanel.Orientation\n"}