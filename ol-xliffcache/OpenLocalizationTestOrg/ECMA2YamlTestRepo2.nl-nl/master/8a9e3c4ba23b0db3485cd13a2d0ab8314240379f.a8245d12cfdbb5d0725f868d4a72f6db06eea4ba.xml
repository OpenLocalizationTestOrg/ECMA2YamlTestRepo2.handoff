{"nodes":[{"pos":[511,552],"content":"Provides dynamic validation of an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides dynamic validation of an object.","pos":[0,41]}]},{"pos":[564,1025],"content":"To use this class, you need to implement a <xref:System.Configuration.ValidatorCallback> delegate for the type of object you want to validate. When you instantiate this class, you pass in the object type and a reference to the delegate. You can then call <xref:System.Configuration.CallbackValidator.CanValidate%2A> to determine if an object is the correct type or <xref:System.Configuration.CallbackValidator.Validate%2A> to execute the delegate on the object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To use this class, you need to implement a <xref:System.Configuration.ValidatorCallback> delegate for the type of object you want to validate. When you instantiate this class, you pass in the object type and a reference to the delegate. You can then call <xref:System.Configuration.CallbackValidator.CanValidate%2A> to determine if an object is the correct type or <xref:System.Configuration.CallbackValidator.Validate%2A> to execute the delegate on the object.","pos":[0,461],"nodes":[{"content":"To use this class, you need to implement a &lt;xref:System.Configuration.ValidatorCallback&gt; delegate for the type of object you want to validate.","pos":[0,142],"source":"To use this class, you need to implement a <xref:System.Configuration.ValidatorCallback> delegate for the type of object you want to validate."},{"content":"When you instantiate this class, you pass in the object type and a reference to the delegate.","pos":[143,236]},{"content":"You can then call &lt;xref:System.Configuration.CallbackValidator.CanValidate%2A&gt; to determine if an object is the correct type or &lt;xref:System.Configuration.CallbackValidator.Validate%2A&gt; to execute the delegate on the object.","pos":[237,461],"source":" You can then call <xref:System.Configuration.CallbackValidator.CanValidate%2A> to determine if an object is the correct type or <xref:System.Configuration.CallbackValidator.Validate%2A> to execute the delegate on the object."}]}]},{"pos":[1849,1949],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.CallbackValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.CallbackValidator\"></xref> class."},{"pos":[2134,2176],"content":"The type of object that will be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of object that will be validated.","pos":[0,42]}]},{"pos":[2266,2351],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ValidatorCallback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used as the delegate.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Configuration.ValidatorCallback\"></xref> used as the delegate."},{"pos":[2526,2608],"content":"<ph id=\"ph1\">&lt;code&gt;type &lt;/code&gt;</ph>is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>type </code>is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[3049,3108],"content":"Determines whether the type of the object can be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the type of the object can be validated.","pos":[0,59]}]},{"pos":[3252,3271],"content":"The type of object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of object.","pos":[0,19]}]},{"pos":[3330,3678],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_type\" name=\"type\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> parameter matches the type used as the first parameter when creating an instance of <bpt id=\"p3\">&lt;xref href=\"System.Configuration.CallbackValidator\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref uid=\"langword_csharp_type\" name=\"type\" href=\"\"></xref> parameter matches the type used as the first parameter when creating an instance of <xref href=\"System.Configuration.CallbackValidator\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4195,4246],"content":"Determines whether the value of an object is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the value of an object is valid.","pos":[0,51]}]},{"pos":[4258,4575],"content":"The <xref:System.Configuration.CallbackValidator> class contains the type and delegate necessary to validate an object. The type and delegate are established when an instance of the <xref:System.Configuration.CallbackValidator> class is created. The object to validate is passed as a parameter of the Validate method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Configuration.CallbackValidator> class contains the type and delegate necessary to validate an object. The type and delegate are established when an instance of the <xref:System.Configuration.CallbackValidator> class is created. The object to validate is passed as a parameter of the Validate method.","pos":[0,317],"nodes":[{"content":"The &lt;xref:System.Configuration.CallbackValidator&gt; class contains the type and delegate necessary to validate an object.","pos":[0,119],"source":"The <xref:System.Configuration.CallbackValidator> class contains the type and delegate necessary to validate an object."},{"content":"The type and delegate are established when an instance of the &lt;xref:System.Configuration.CallbackValidator&gt; class is created.","pos":[120,245],"source":" The type and delegate are established when an instance of the <xref:System.Configuration.CallbackValidator> class is created."},{"content":"The object to validate is passed as a parameter of the Validate method.","pos":[246,317]}]}]},{"pos":[4722,4745],"content":"The value of an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of an object.","pos":[0,23]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.CallbackValidator\n  id: CallbackValidator\n  children:\n  - System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)\n  - System.Configuration.CallbackValidator.CanValidate(System.Type)\n  - System.Configuration.CallbackValidator.Validate(System.Object)\n  langs:\n  - csharp\n  name: CallbackValidator\n  nameWithType: CallbackValidator\n  fullName: System.Configuration.CallbackValidator\n  type: Class\n  summary: Provides dynamic validation of an object.\n  remarks: To use this class, you need to implement a <xref:System.Configuration.ValidatorCallback> delegate for the type of object you want to validate. When you instantiate this class, you pass in the object type and a reference to the delegate. You can then call <xref:System.Configuration.CallbackValidator.CanValidate%2A> to determine if an object is the correct type or <xref:System.Configuration.CallbackValidator.Validate%2A> to execute the delegate on the object.\n  syntax:\n    content: 'public sealed class CallbackValidator : System.Configuration.ConfigurationValidatorBase'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationValidatorBase\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)\n  id: '#ctor(System.Type,System.Configuration.ValidatorCallback)'\n  parent: System.Configuration.CallbackValidator\n  langs:\n  - csharp\n  name: CallbackValidator(Type,ValidatorCallback)\n  nameWithType: CallbackValidator.CallbackValidator(Type,ValidatorCallback)\n  fullName: System.Configuration.CallbackValidator.CallbackValidator(Type,ValidatorCallback)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.CallbackValidator\"></xref> class.\n  syntax:\n    content: public CallbackValidator (Type type, System.Configuration.ValidatorCallback callback);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of object that will be validated.\n    - id: callback\n      type: System.Configuration.ValidatorCallback\n      description: The <xref href=\"System.Configuration.ValidatorCallback\"></xref> used as the delegate.\n  overload: System.Configuration.CallbackValidator.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type </code>is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Configuration.CallbackValidator.CanValidate(System.Type)\n  id: CanValidate(System.Type)\n  parent: System.Configuration.CallbackValidator\n  langs:\n  - csharp\n  name: CanValidate(Type)\n  nameWithType: CallbackValidator.CanValidate(Type)\n  fullName: System.Configuration.CallbackValidator.CanValidate(Type)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Determines whether the type of the object can be validated.\n  syntax:\n    content: public override bool CanValidate (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref uid=\"langword_csharp_type\" name=\"type\" href=\"\"></xref> parameter matches the type used as the first parameter when creating an instance of <xref href=\"System.Configuration.CallbackValidator\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.CallbackValidator.CanValidate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.CallbackValidator.Validate(System.Object)\n  id: Validate(System.Object)\n  parent: System.Configuration.CallbackValidator\n  langs:\n  - csharp\n  name: Validate(Object)\n  nameWithType: CallbackValidator.Validate(Object)\n  fullName: System.Configuration.CallbackValidator.Validate(Object)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Determines whether the value of an object is valid.\n  remarks: The <xref:System.Configuration.CallbackValidator> class contains the type and delegate necessary to validate an object. The type and delegate are established when an instance of the <xref:System.Configuration.CallbackValidator> class is created. The object to validate is passed as a parameter of the Validate method.\n  syntax:\n    content: public override void Validate (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value of an object.\n  overload: System.Configuration.CallbackValidator.Validate*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationValidatorBase\n  isExternal: false\n  name: System.Configuration.ConfigurationValidatorBase\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)\n  parent: System.Configuration.CallbackValidator\n  isExternal: false\n  name: CallbackValidator(Type,ValidatorCallback)\n  nameWithType: CallbackValidator.CallbackValidator(Type,ValidatorCallback)\n  fullName: System.Configuration.CallbackValidator.CallbackValidator(Type,ValidatorCallback)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Configuration.ValidatorCallback\n  parent: System.Configuration\n  isExternal: false\n  name: ValidatorCallback\n  nameWithType: ValidatorCallback\n  fullName: System.Configuration.ValidatorCallback\n- uid: System.Configuration.CallbackValidator.CanValidate(System.Type)\n  parent: System.Configuration.CallbackValidator\n  isExternal: false\n  name: CanValidate(Type)\n  nameWithType: CallbackValidator.CanValidate(Type)\n  fullName: System.Configuration.CallbackValidator.CanValidate(Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Configuration.CallbackValidator.Validate(System.Object)\n  parent: System.Configuration.CallbackValidator\n  isExternal: false\n  name: Validate(Object)\n  nameWithType: CallbackValidator.Validate(Object)\n  fullName: System.Configuration.CallbackValidator.Validate(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Configuration.CallbackValidator.#ctor*\n  parent: System.Configuration.CallbackValidator\n  isExternal: false\n  name: CallbackValidator\n  nameWithType: CallbackValidator.CallbackValidator\n- uid: System.Configuration.CallbackValidator.CanValidate*\n  parent: System.Configuration.CallbackValidator\n  isExternal: false\n  name: CanValidate\n  nameWithType: CallbackValidator.CanValidate\n- uid: System.Configuration.CallbackValidator.Validate*\n  parent: System.Configuration.CallbackValidator\n  isExternal: false\n  name: Validate\n  nameWithType: CallbackValidator.Validate\n"}