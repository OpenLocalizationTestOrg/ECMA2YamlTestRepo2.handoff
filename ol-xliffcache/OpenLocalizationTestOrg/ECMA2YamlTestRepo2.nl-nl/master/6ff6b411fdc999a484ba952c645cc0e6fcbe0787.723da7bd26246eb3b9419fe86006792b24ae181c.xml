{"nodes":[{"pos":[1152,1370],"content":"Represents the statement of a <xref href=\"System.Security.Policy.CodeGroup\"></xref> describing the permissions and other information that apply to code with a particular set of evidence. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the statement of a <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.CodeGroup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> describing the permissions and other information that apply to code with a particular set of evidence.","pos":[0,186],"source":"Represents the statement of a <xref href=\"System.Security.Policy.CodeGroup\"></xref> describing the permissions and other information that apply to code with a particular set of evidence."},{"content":"This class cannot be inherited.","pos":[187,218]}]},{"pos":[1383,1675],"content":"A PolicyStatement consists of a set of granted permissions, and possible special attributes for the code group.       Policy statements are typically used as the return value of a <xref:System.Security.Policy.PolicyLevel.Resolve%2A> operation on a <xref:System.Security.Policy.PolicyLevel>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A PolicyStatement consists of a set of granted permissions, and possible special attributes for the code group.       Policy statements are typically used as the return value of a <xref:System.Security.Policy.PolicyLevel.Resolve%2A> operation on a <xref:System.Security.Policy.PolicyLevel>.","pos":[0,290],"nodes":[{"content":"A PolicyStatement consists of a set of granted permissions, and possible special attributes for the code group.","pos":[0,111]},{"content":"Policy statements are typically used as the return value of a &lt;xref:System.Security.Policy.PolicyLevel.Resolve%2A&gt; operation on a &lt;xref:System.Security.Policy.PolicyLevel&gt;.","pos":[118,290],"source":"       Policy statements are typically used as the return value of a <xref:System.Security.Policy.PolicyLevel.Resolve%2A> operation on a <xref:System.Security.Policy.PolicyLevel>."}]}]},{"pos":[2992,3162],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.PolicyStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.PermissionSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Policy.PolicyStatement\"></xref> class with the specified <xref href=\"System.Security.PermissionSet\"></xref>."},{"pos":[3924,4021],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.PermissionSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with which to initialize the new instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.PermissionSet\"></xref> with which to initialize the new instance."},{"pos":[4766,4951],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.PolicyStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.PermissionSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and attributes.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Policy.PolicyStatement\"></xref> class with the specified <xref href=\"System.Security.PermissionSet\"></xref> and attributes."},{"pos":[5773,5870],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.PermissionSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with which to initialize the new instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.PermissionSet\"></xref> with which to initialize the new instance."},{"pos":[5971,6076],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.PolicyStatementAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Security.Policy.PolicyStatementAttribute\"></xref> values."},{"pos":[6533,6585],"content":"Gets or sets the attributes of the policy statement.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the attributes of the policy statement.","pos":[0,52]}]},{"pos":[7428,7467],"content":"The attributes of the policy statement.","needQuote":true,"needEscape":true,"nodes":[{"content":"The attributes of the policy statement.","pos":[0,39]}]},{"pos":[7954,8025],"content":"Gets a string representation of the attributes of the policy statement.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a string representation of the attributes of the policy statement.","pos":[0,71]}]},{"pos":[8037,8162],"content":"Use this property to get a text string of the attributes currently set for the <xref:System.Security.Policy.PolicyStatement>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this property to get a text string of the attributes currently set for the &lt;xref:System.Security.Policy.PolicyStatement&gt;.","pos":[0,125],"source":"Use this property to get a text string of the attributes currently set for the <xref:System.Security.Policy.PolicyStatement>."}]},{"pos":[8892,8958],"content":"A text string representing the attributes of the policy statement.","needQuote":true,"needEscape":true,"nodes":[{"content":"A text string representing the attributes of the policy statement.","pos":[0,66]}]},{"pos":[9399,9458],"content":"Creates an equivalent copy of the current policy statement.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an equivalent copy of the current policy statement.","pos":[0,59]}]},{"pos":[10254,10554],"content":"A new copy of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.PolicyStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with &lt;xref:System.Security.Policy.PolicyStatement.PermissionSet<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.Security.Policy.PolicyStatement.Attributes<ept id=\"p2\">*</ept>&gt; identical to those of the current <bpt id=\"p3\">&lt;xref href=\"System.Security.Policy.PolicyStatement\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new copy of the <xref href=\"System.Security.Policy.PolicyStatement\"></xref> with <xref:System.Security.Policy.PolicyStatement.PermissionSet*> and <xref:System.Security.Policy.PolicyStatement.Attributes*> identical to those of the current <xref href=\"System.Security.Policy.PolicyStatement\"></xref>."},{"pos":[11042,11226],"content":"Determines whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.PolicyStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is equal to the current <bpt id=\"p2\">&lt;xref href=\"System.Security.Policy.PolicyStatement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref href=\"System.Security.Policy.PolicyStatement\"></xref> object is equal to the current <xref href=\"System.Security.Policy.PolicyStatement\"></xref>."},{"pos":[11238,11306],"content":"For more information, see the <xref:System.Object.Equals%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information, see the &lt;xref:System.Object.Equals%2A&gt; method.","pos":[0,68],"source":"For more information, see the <xref:System.Object.Equals%2A> method."}]},{"pos":[12178,12337],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.PolicyStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to compare with the current <bpt id=\"p2\">&lt;xref href=\"System.Security.Policy.PolicyStatement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Policy.PolicyStatement\"></xref> object to compare with the current <xref href=\"System.Security.Policy.PolicyStatement\"></xref>."},{"pos":[12396,12700],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.Policy.PolicyStatement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is equal to the current <bpt id=\"p3\">&lt;xref href=\"System.Security.Policy.PolicyStatement\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> object; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Security.Policy.PolicyStatement\"></xref> is equal to the current <xref href=\"System.Security.Policy.PolicyStatement\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13258,13329],"content":"Reconstructs a security object with a given state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs a security object with a given state from an XML encoding.","pos":[0,71]}]},{"pos":[14123,14182],"content":"The XML encoding to use to reconstruct the security object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML encoding to use to reconstruct the security object.","pos":[0,59]}]},{"pos":[14359,14453],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">et</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>et</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14548,14662],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">et</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid <bpt id=\"p2\">&lt;xref href=\"System.Security.Policy.PolicyStatement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> encoding.","needQuote":true,"needEscape":true,"source":"The <code>et</code> parameter is not a valid <xref href=\"System.Security.Policy.PolicyStatement\"></xref> encoding."},{"pos":[15250,15321],"content":"Reconstructs a security object with a given state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs a security object with a given state from an XML encoding.","pos":[0,71]}]},{"pos":[15537,15596],"content":"The XML encoding to use to reconstruct the security object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML encoding to use to reconstruct the security object.","pos":[0,59]}]},{"pos":[15679,15824],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.PolicyLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> context for lookup of <bpt id=\"p2\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Policy.PolicyLevel\"></xref> context for lookup of <xref href=\"System.Security.NamedPermissionSet\"></xref> values."},{"pos":[16001,16095],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">et</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>et</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[16190,16304],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">et</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid <bpt id=\"p2\">&lt;xref href=\"System.Security.Policy.PolicyStatement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> encoding.","needQuote":true,"needEscape":true,"source":"The <code>et</code> parameter is not a valid <xref href=\"System.Security.Policy.PolicyStatement\"></xref> encoding."},{"pos":[16695,16875],"content":"Gets a hash code for the <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.PolicyStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that is suitable for use in hashing algorithms and data structures such as a hash table.","needQuote":true,"needEscape":true,"source":"Gets a hash code for the <xref href=\"System.Security.Policy.PolicyStatement\"></xref> object that is suitable for use in hashing algorithms and data structures such as a hash table."},{"pos":[16887,17068],"content":"The hash code for two instances of the same permission might be different, hence a hash code should not be used to compare two <xref:System.Security.Policy.PolicyStatement> objects.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The hash code for two instances of the same permission might be different, hence a hash code should not be used to compare two &lt;xref:System.Security.Policy.PolicyStatement&gt; objects.","pos":[0,181],"source":"The hash code for two instances of the same permission might be different, hence a hash code should not be used to compare two <xref:System.Security.Policy.PolicyStatement> objects."}]},{"pos":[17825,17920],"content":"A hash code for the current <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.PolicyStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A hash code for the current <xref href=\"System.Security.Policy.PolicyStatement\"></xref> object."},{"pos":[18398,18490],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Security.PermissionSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the policy statement.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Security.PermissionSet\"></xref> of the policy statement."},{"pos":[19278,19357],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.PermissionSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the policy statement.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.PermissionSet\"></xref> of the policy statement."},{"pos":[19801,19870],"content":"Creates an XML encoding of the security object and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML encoding of the security object and its current state.","pos":[0,69]}]},{"pos":[20708,20780],"content":"An XML encoding of the security object, including any state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML encoding of the security object, including any state information.","pos":[0,72]}]},{"pos":[21321,21390],"content":"Creates an XML encoding of the security object and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML encoding of the security object and its current state.","pos":[0,69]}]},{"pos":[21601,21746],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.Policy.PolicyLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> context for lookup of <bpt id=\"p2\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.Policy.PolicyLevel\"></xref> context for lookup of <xref href=\"System.Security.NamedPermissionSet\"></xref> values."},{"pos":[21822,21894],"content":"An XML encoding of the security object, including any state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML encoding of the security object, including any state information.","pos":[0,72]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Policy.PolicyStatement\n  id: PolicyStatement\n  children:\n  - System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet)\n  - System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)\n  - System.Security.Policy.PolicyStatement.Attributes\n  - System.Security.Policy.PolicyStatement.AttributeString\n  - System.Security.Policy.PolicyStatement.Copy\n  - System.Security.Policy.PolicyStatement.Equals(System.Object)\n  - System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement)\n  - System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.PolicyStatement.GetHashCode\n  - System.Security.Policy.PolicyStatement.PermissionSet\n  - System.Security.Policy.PolicyStatement.ToXml\n  - System.Security.Policy.PolicyStatement.ToXml(System.Security.Policy.PolicyLevel)\n  langs:\n  - csharp\n  name: PolicyStatement\n  nameWithType: PolicyStatement\n  fullName: System.Security.Policy.PolicyStatement\n  type: Class\n  summary: Represents the statement of a <xref href=\"System.Security.Policy.CodeGroup\"></xref> describing the permissions and other information that apply to code with a particular set of evidence. This class cannot be inherited.\n  remarks: \"A PolicyStatement consists of a set of granted permissions, and possible special attributes for the code group.  \\n  \\n Policy statements are typically used as the return value of a <xref:System.Security.Policy.PolicyLevel.Resolve%2A> operation on a <xref:System.Security.Policy.PolicyLevel>.\"\n  example:\n  - \"The following code example shows the use of members of the PolicyStatement class  \\n  \\n [!code-cs[System.Security.Policy.PolicyStatement_Evt#1](~/add/codesnippet/csharp/t-system.security.policy_6_1.cs)]\\n [!code-cpp[System.Security.Policy.PolicyStatement_Evt#1](~/add/codesnippet/cpp/t-system.security.policy_6_1.cpp)]\\n [!code-vb[System.Security.Policy.PolicyStatement_Evt#1](~/add/codesnippet/visualbasic/t-system.security.policy_6_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class PolicyStatement : System.Security.ISecurityEncodable, System.Security.ISecurityPolicyEncodable\n  inheritance:\n  - System.Object\n  implements:\n  - System.Security.ISecurityEncodable\n  - System.Security.ISecurityPolicyEncodable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet)\n  id: '#ctor(System.Security.PermissionSet)'\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: PolicyStatement(PermissionSet)\n  nameWithType: PolicyStatement.PolicyStatement(PermissionSet)\n  fullName: System.Security.Policy.PolicyStatement.PolicyStatement(PermissionSet)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Initializes a new instance of the <xref href=\"System.Security.Policy.PolicyStatement\"></xref> class with the specified <xref href=\"System.Security.PermissionSet\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example shows the use of the PolicyStatement constructor. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \\n  \\n [!code-cs[System.Security.Policy.PolicyStatement_Evt#2](~/add/codesnippet/csharp/6638bc70-81c4-4e58-a3b6-_1.cs)]\\n [!code-cpp[System.Security.Policy.PolicyStatement_Evt#2](~/add/codesnippet/cpp/6638bc70-81c4-4e58-a3b6-_1.cpp)]\\n [!code-vb[System.Security.Policy.PolicyStatement_Evt#2](~/add/codesnippet/visualbasic/6638bc70-81c4-4e58-a3b6-_1.vb)]\"\n  syntax:\n    content: public PolicyStatement (System.Security.PermissionSet permSet);\n    parameters:\n    - id: permSet\n      type: System.Security.PermissionSet\n      description: The <xref href=\"System.Security.PermissionSet\"></xref> with which to initialize the new instance.\n  overload: System.Security.Policy.PolicyStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)\n  id: '#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)'\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: PolicyStatement(PermissionSet,PolicyStatementAttribute)\n  nameWithType: PolicyStatement.PolicyStatement(PermissionSet,PolicyStatementAttribute)\n  fullName: System.Security.Policy.PolicyStatement.PolicyStatement(PermissionSet,PolicyStatementAttribute)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Initializes a new instance of the <xref href=\"System.Security.Policy.PolicyStatement\"></xref> class with the specified <xref href=\"System.Security.PermissionSet\"></xref> and attributes.\n  remarks: ''\n  example:\n  - \"The following code example shows the use of the PolicyStatement constructor. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \\n  \\n [!code-cs[System.Security.Policy.PolicyStatement_Evt#3](~/add/codesnippet/csharp/117488b6-0e2f-454f-8ec0-_1.cs)]\\n [!code-cpp[System.Security.Policy.PolicyStatement_Evt#3](~/add/codesnippet/cpp/117488b6-0e2f-454f-8ec0-_1.cpp)]\\n [!code-vb[System.Security.Policy.PolicyStatement_Evt#3](~/add/codesnippet/visualbasic/117488b6-0e2f-454f-8ec0-_1.vb)]\"\n  syntax:\n    content: public PolicyStatement (System.Security.PermissionSet permSet, System.Security.Policy.PolicyStatementAttribute attributes);\n    parameters:\n    - id: permSet\n      type: System.Security.PermissionSet\n      description: The <xref href=\"System.Security.PermissionSet\"></xref> with which to initialize the new instance.\n    - id: attributes\n      type: System.Security.Policy.PolicyStatementAttribute\n      description: A bitwise combination of the <xref href=\"System.Security.Policy.PolicyStatementAttribute\"></xref> values.\n  overload: System.Security.Policy.PolicyStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.PolicyStatement.Attributes\n  id: Attributes\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: PolicyStatement.Attributes\n  fullName: System.Security.Policy.PolicyStatement.Attributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Gets or sets the attributes of the policy statement.\n  remarks: ''\n  example:\n  - \"The following code example shows how to use the Attributes property to set the <xref:System.Security.Policy.PolicyStatementAttribute> flag. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \\n  \\n [!code-cs[System.Security.Policy.PolicyStatement_Evt#4](~/add/codesnippet/csharp/p-system.security.policy_8_1.cs)]\\n [!code-cpp[System.Security.Policy.PolicyStatement_Evt#4](~/add/codesnippet/cpp/p-system.security.policy_8_1.cpp)]\\n [!code-vb[System.Security.Policy.PolicyStatement_Evt#4](~/add/codesnippet/visualbasic/p-system.security.policy_8_1.vb)]\"\n  syntax:\n    content: public System.Security.Policy.PolicyStatementAttribute Attributes { get; set; }\n    return:\n      type: System.Security.Policy.PolicyStatementAttribute\n      description: The attributes of the policy statement.\n  overload: System.Security.Policy.PolicyStatement.Attributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.PolicyStatement.AttributeString\n  id: AttributeString\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: AttributeString\n  nameWithType: PolicyStatement.AttributeString\n  fullName: System.Security.Policy.PolicyStatement.AttributeString\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Gets a string representation of the attributes of the policy statement.\n  remarks: Use this property to get a text string of the attributes currently set for the <xref:System.Security.Policy.PolicyStatement>.\n  example:\n  - \"The following code example shows how to use the AttributeString property to get the policy statement attributes. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \\n  \\n [!code-cs[System.Security.Policy.PolicyStatement_Evt#13](~/add/codesnippet/csharp/p-system.security.policy_3_1.cs)]\\n [!code-cpp[System.Security.Policy.PolicyStatement_Evt#13](~/add/codesnippet/cpp/p-system.security.policy_3_1.cpp)]\\n [!code-vb[System.Security.Policy.PolicyStatement_Evt#13](~/add/codesnippet/visualbasic/p-system.security.policy_3_1.vb)]\"\n  syntax:\n    content: public string AttributeString { get; }\n    return:\n      type: System.String\n      description: A text string representing the attributes of the policy statement.\n  overload: System.Security.Policy.PolicyStatement.AttributeString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.PolicyStatement.Copy\n  id: Copy\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: PolicyStatement.Copy()\n  fullName: System.Security.Policy.PolicyStatement.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Creates an equivalent copy of the current policy statement.\n  remarks: ''\n  example:\n  - \"The following code example shows how to use the Copy method to make a copy of the current policy statement. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \\n  \\n [!code-cs[System.Security.Policy.PolicyStatement_Evt#9](~/add/codesnippet/csharp/m-system.security.policy_4_1.cs)]\\n [!code-cpp[System.Security.Policy.PolicyStatement_Evt#9](~/add/codesnippet/cpp/m-system.security.policy_4_1.cpp)]\\n [!code-vb[System.Security.Policy.PolicyStatement_Evt#9](~/add/codesnippet/visualbasic/m-system.security.policy_4_1.vb)]\"\n  syntax:\n    content: public System.Security.Policy.PolicyStatement Copy ();\n    parameters: []\n    return:\n      type: System.Security.Policy.PolicyStatement\n      description: A new copy of the <xref href=\"System.Security.Policy.PolicyStatement\"></xref> with <xref:System.Security.Policy.PolicyStatement.PermissionSet*> and <xref:System.Security.Policy.PolicyStatement.Attributes*> identical to those of the current <xref href=\"System.Security.Policy.PolicyStatement\"></xref>.\n  overload: System.Security.Policy.PolicyStatement.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.PolicyStatement.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: PolicyStatement.Equals(Object)\n  fullName: System.Security.Policy.PolicyStatement.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Determines whether the specified <xref href=\"System.Security.Policy.PolicyStatement\"></xref> object is equal to the current <xref href=\"System.Security.Policy.PolicyStatement\"></xref>.\n  remarks: For more information, see the <xref:System.Object.Equals%2A> method.\n  example:\n  - \"The following code example shows how to use the Equals method to determine whether a specified <xref:System.Security.Policy.PolicyStatement> object is equivalent to the current <xref:System.Security.Policy.PolicyStatement> object. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \\n  \\n [!code-cs[System.Security.Policy.PolicyStatement_Evt#10](~/add/codesnippet/csharp/m-system.security.policy_19_1.cs)]\\n [!code-cpp[System.Security.Policy.PolicyStatement_Evt#10](~/add/codesnippet/cpp/m-system.security.policy_19_1.cpp)]\\n [!code-vb[System.Security.Policy.PolicyStatement_Evt#10](~/add/codesnippet/visualbasic/m-system.security.policy_19_1.vb)]\"\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The <xref href=\"System.Security.Policy.PolicyStatement\"></xref> object to compare with the current <xref href=\"System.Security.Policy.PolicyStatement\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Security.Policy.PolicyStatement\"></xref> is equal to the current <xref href=\"System.Security.Policy.PolicyStatement\"></xref> object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Policy.PolicyStatement.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: PolicyStatement.FromXml(SecurityElement)\n  fullName: System.Security.Policy.PolicyStatement.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Reconstructs a security object with a given state from an XML encoding.\n  remarks: ''\n  example:\n  - \"The following code example shows how to use the FromXml method to reconstruct a security object from an XML encoding. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \\n  \\n [!code-cs[System.Security.Policy.PolicyStatement_Evt#7](~/add/codesnippet/csharp/0d25409c-1434-4067-a83c-_1.cs)]\\n [!code-cpp[System.Security.Policy.PolicyStatement_Evt#7](~/add/codesnippet/cpp/0d25409c-1434-4067-a83c-_1.cpp)]\\n [!code-vb[System.Security.Policy.PolicyStatement_Evt#7](~/add/codesnippet/visualbasic/0d25409c-1434-4067-a83c-_1.vb)]\"\n  syntax:\n    content: public void FromXml (System.Security.SecurityElement et);\n    parameters:\n    - id: et\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the security object.\n  overload: System.Security.Policy.PolicyStatement.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>et</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>et</code> parameter is not a valid <xref href=\"System.Security.Policy.PolicyStatement\"></xref> encoding.\n  platform:\n  - net462\n- uid: System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  id: FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: FromXml(SecurityElement,PolicyLevel)\n  nameWithType: PolicyStatement.FromXml(SecurityElement,PolicyLevel)\n  fullName: System.Security.Policy.PolicyStatement.FromXml(SecurityElement,PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Reconstructs a security object with a given state from an XML encoding.\n  syntax:\n    content: public void FromXml (System.Security.SecurityElement et, System.Security.Policy.PolicyLevel level);\n    parameters:\n    - id: et\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the security object.\n    - id: level\n      type: System.Security.Policy.PolicyLevel\n      description: The <xref href=\"System.Security.Policy.PolicyLevel\"></xref> context for lookup of <xref href=\"System.Security.NamedPermissionSet\"></xref> values.\n  overload: System.Security.Policy.PolicyStatement.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>et</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>et</code> parameter is not a valid <xref href=\"System.Security.Policy.PolicyStatement\"></xref> encoding.\n  platform:\n  - net462\n- uid: System.Security.Policy.PolicyStatement.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: PolicyStatement.GetHashCode()\n  fullName: System.Security.Policy.PolicyStatement.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Gets a hash code for the <xref href=\"System.Security.Policy.PolicyStatement\"></xref> object that is suitable for use in hashing algorithms and data structures such as a hash table.\n  remarks: The hash code for two instances of the same permission might be different, hence a hash code should not be used to compare two <xref:System.Security.Policy.PolicyStatement> objects.\n  example:\n  - \"The following code example shows how to use the GetHashCode method to get the hash code for the current policy statement. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \\n  \\n [!code-cs[System.Security.Policy.PolicyStatement_Evt#12](~/add/codesnippet/csharp/m-system.security.policy_24_1.cs)]\\n [!code-cpp[System.Security.Policy.PolicyStatement_Evt#12](~/add/codesnippet/cpp/m-system.security.policy_24_1.cpp)]\\n [!code-vb[System.Security.Policy.PolicyStatement_Evt#12](~/add/codesnippet/visualbasic/m-system.security.policy_24_1.vb)]\"\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.Security.Policy.PolicyStatement\"></xref> object.\n  overload: System.Security.Policy.PolicyStatement.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.PolicyStatement.PermissionSet\n  id: PermissionSet\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: PermissionSet\n  nameWithType: PolicyStatement.PermissionSet\n  fullName: System.Security.Policy.PolicyStatement.PermissionSet\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Gets or sets the <xref href=\"System.Security.PermissionSet\"></xref> of the policy statement.\n  remarks: ''\n  example:\n  - \"The following code example shows how to use the PermissionSet property to add permissions to the policy statement. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \\n  \\n [!code-cs[System.Security.Policy.PolicyStatement_Evt#5](~/add/codesnippet/csharp/p-system.security.policy_11_1.cs)]\\n [!code-cpp[System.Security.Policy.PolicyStatement_Evt#5](~/add/codesnippet/cpp/p-system.security.policy_11_1.cpp)]\\n [!code-vb[System.Security.Policy.PolicyStatement_Evt#5](~/add/codesnippet/visualbasic/p-system.security.policy_11_1.vb)]\"\n  syntax:\n    content: public System.Security.PermissionSet PermissionSet { get; set; }\n    return:\n      type: System.Security.PermissionSet\n      description: The <xref href=\"System.Security.PermissionSet\"></xref> of the policy statement.\n  overload: System.Security.Policy.PolicyStatement.PermissionSet*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.PolicyStatement.ToXml\n  id: ToXml\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: PolicyStatement.ToXml()\n  fullName: System.Security.Policy.PolicyStatement.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Creates an XML encoding of the security object and its current state.\n  remarks: ''\n  example:\n  - \"The following code example shows how to use the <xref:System.Security.Policy.PolicyStatement.ToXml%2A> method to create an XML encoding of the security object. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \\n  \\n [!code-cs[System.Security.Policy.PolicyStatement_Evt#6](~/add/codesnippet/csharp/m-system.security.policy_10_1.cs)]\\n [!code-cpp[System.Security.Policy.PolicyStatement_Evt#6](~/add/codesnippet/cpp/m-system.security.policy_10_1.cpp)]\\n [!code-vb[System.Security.Policy.PolicyStatement_Evt#6](~/add/codesnippet/visualbasic/m-system.security.policy_10_1.vb)]\"\n  syntax:\n    content: public System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the security object, including any state information.\n  overload: System.Security.Policy.PolicyStatement.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Policy.PolicyStatement.ToXml(System.Security.Policy.PolicyLevel)\n  id: ToXml(System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: ToXml(PolicyLevel)\n  nameWithType: PolicyStatement.ToXml(PolicyLevel)\n  fullName: System.Security.Policy.PolicyStatement.ToXml(PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Creates an XML encoding of the security object and its current state.\n  syntax:\n    content: public System.Security.SecurityElement ToXml (System.Security.Policy.PolicyLevel level);\n    parameters:\n    - id: level\n      type: System.Security.Policy.PolicyLevel\n      description: The <xref href=\"System.Security.Policy.PolicyLevel\"></xref> context for lookup of <xref href=\"System.Security.NamedPermissionSet\"></xref> values.\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the security object, including any state information.\n  overload: System.Security.Policy.PolicyStatement.ToXml*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet)\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: PolicyStatement(PermissionSet)\n  nameWithType: PolicyStatement.PolicyStatement(PermissionSet)\n  fullName: System.Security.Policy.PolicyStatement.PolicyStatement(PermissionSet)\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: PolicyStatement(PermissionSet,PolicyStatementAttribute)\n  nameWithType: PolicyStatement.PolicyStatement(PermissionSet,PolicyStatementAttribute)\n  fullName: System.Security.Policy.PolicyStatement.PolicyStatement(PermissionSet,PolicyStatementAttribute)\n- uid: System.Security.Policy.PolicyStatementAttribute\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyStatementAttribute\n  nameWithType: PolicyStatementAttribute\n  fullName: System.Security.Policy.PolicyStatementAttribute\n- uid: System.Security.Policy.PolicyStatement.Attributes\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: Attributes\n  nameWithType: PolicyStatement.Attributes\n  fullName: System.Security.Policy.PolicyStatement.Attributes\n- uid: System.Security.Policy.PolicyStatement.AttributeString\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: AttributeString\n  nameWithType: PolicyStatement.AttributeString\n  fullName: System.Security.Policy.PolicyStatement.AttributeString\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.PolicyStatement.Copy\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: Copy()\n  nameWithType: PolicyStatement.Copy()\n  fullName: System.Security.Policy.PolicyStatement.Copy()\n- uid: System.Security.Policy.PolicyStatement\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyStatement\n  nameWithType: PolicyStatement\n  fullName: System.Security.Policy.PolicyStatement\n- uid: System.Security.Policy.PolicyStatement.Equals(System.Object)\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: PolicyStatement.Equals(Object)\n  fullName: System.Security.Policy.PolicyStatement.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: PolicyStatement.FromXml(SecurityElement)\n  fullName: System.Security.Policy.PolicyStatement.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: FromXml(SecurityElement,PolicyLevel)\n  nameWithType: PolicyStatement.FromXml(SecurityElement,PolicyLevel)\n  fullName: System.Security.Policy.PolicyStatement.FromXml(SecurityElement,PolicyLevel)\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.Security.Policy.PolicyStatement.GetHashCode\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: PolicyStatement.GetHashCode()\n  fullName: System.Security.Policy.PolicyStatement.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Policy.PolicyStatement.PermissionSet\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PolicyStatement.PermissionSet\n  fullName: System.Security.Policy.PolicyStatement.PermissionSet\n- uid: System.Security.Policy.PolicyStatement.ToXml\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: ToXml()\n  nameWithType: PolicyStatement.ToXml()\n  fullName: System.Security.Policy.PolicyStatement.ToXml()\n- uid: System.Security.Policy.PolicyStatement.ToXml(System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: ToXml(PolicyLevel)\n  nameWithType: PolicyStatement.ToXml(PolicyLevel)\n  fullName: System.Security.Policy.PolicyStatement.ToXml(PolicyLevel)\n- uid: System.Security.Policy.PolicyStatement.#ctor*\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: PolicyStatement\n  nameWithType: PolicyStatement.PolicyStatement\n- uid: System.Security.Policy.PolicyStatement.Attributes*\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: Attributes\n  nameWithType: PolicyStatement.Attributes\n- uid: System.Security.Policy.PolicyStatement.AttributeString*\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: AttributeString\n  nameWithType: PolicyStatement.AttributeString\n- uid: System.Security.Policy.PolicyStatement.Copy*\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: Copy\n  nameWithType: PolicyStatement.Copy\n- uid: System.Security.Policy.PolicyStatement.Equals*\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: Equals\n  nameWithType: PolicyStatement.Equals\n- uid: System.Security.Policy.PolicyStatement.FromXml*\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: FromXml\n  nameWithType: PolicyStatement.FromXml\n- uid: System.Security.Policy.PolicyStatement.GetHashCode*\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: GetHashCode\n  nameWithType: PolicyStatement.GetHashCode\n- uid: System.Security.Policy.PolicyStatement.PermissionSet*\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PolicyStatement.PermissionSet\n- uid: System.Security.Policy.PolicyStatement.ToXml*\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: ToXml\n  nameWithType: PolicyStatement.ToXml\n"}