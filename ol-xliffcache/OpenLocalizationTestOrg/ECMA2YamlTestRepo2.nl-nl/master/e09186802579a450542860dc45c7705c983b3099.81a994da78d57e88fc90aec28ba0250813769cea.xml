{"nodes":[{"pos":[574,710],"content":"Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category.","pos":[0,136],"nodes":[{"content":"Represents a prototype-based object that is defined by a constructor function.","pos":[0,78]},{"content":"This class belongs to the built-in object model category.","pos":[79,136]}]}]},{"pos":[4326,4412],"content":"Creates an instance of the prototype-based object, passing in the specified arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an instance of the prototype-based object, passing in the specified arguments.","pos":[0,86]}]},{"pos":[4582,4623],"content":"The arguments to pass to the constructor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The arguments to pass to the constructor.","pos":[0,41]}]},{"pos":[4696,4722],"content":"An instance of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the object.","pos":[0,26]}]},{"pos":[5156,5231],"content":"Returns the number of milliseconds that have elapsed since January 1, 1970.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the number of milliseconds that have elapsed since January 1, 1970.","pos":[0,75]}]},{"pos":[5356,5423],"content":"The number of milliseconds that have elapsed since January 1, 1970.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of milliseconds that have elapsed since January 1, 1970.","pos":[0,67]}]},{"pos":[5892,5995],"content":"Converts the specified string representation of a date and time to its <xref:System.Double> equivalent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified string representation of a date and time to its &lt;xref:System.Double&gt; equivalent.","pos":[0,103],"source":"Converts the specified string representation of a date and time to its <xref:System.Double> equivalent."}]},{"pos":[6135,6185],"content":"A string that contains a date and time to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a date and time to convert.","pos":[0,50]}]},{"pos":[6243,6336],"content":"A &lt;xref:System.Double&gt; equivalent of the date and time that is contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">str</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Double> equivalent of the date and time that is contained in <code>str</code>."},{"pos":[7088,7164],"content":"Converts the specified date and time to its <xref:System.Double> equivalent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the specified date and time to its &lt;xref:System.Double&gt; equivalent.","pos":[0,76],"source":"Converts the specified date and time to its <xref:System.Double> equivalent."}]},{"pos":[7388,7429],"content":"The year of the date and time to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The year of the date and time to convert.","pos":[0,41]}]},{"pos":[7491,7533],"content":"The month of the date and time to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The month of the date and time to convert.","pos":[0,42]}]},{"pos":[7594,7635],"content":"The date of the date and time to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The date of the date and time to convert.","pos":[0,41]}]},{"pos":[7697,7739],"content":"The hours of the date and time to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hours of the date and time to convert.","pos":[0,42]}]},{"pos":[7803,7847],"content":"The minutes of the date and time to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The minutes of the date and time to convert.","pos":[0,44]}]},{"pos":[7911,7955],"content":"The seconds of the date and time to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The seconds of the date and time to convert.","pos":[0,44]}]},{"pos":[8014,8063],"content":"The milliseconds of the date and time to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The milliseconds of the date and time to convert.","pos":[0,49]}]},{"pos":[8121,8186],"content":"A <xref:System.Double> equivalent of the specified date and time.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; equivalent of the specified date and time.","pos":[0,65],"source":"A <xref:System.Double> equivalent of the specified date and time."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.JScript.DateConstructor\n  id: DateConstructor\n  children:\n  - Microsoft.JScript.DateConstructor.CreateInstance(System.Object[])\n  - Microsoft.JScript.DateConstructor.Invoke\n  - Microsoft.JScript.DateConstructor.parse(System.String)\n  - Microsoft.JScript.DateConstructor.UTC(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)\n  langs:\n  - csharp\n  name: DateConstructor\n  nameWithType: DateConstructor\n  fullName: Microsoft.JScript.DateConstructor\n  type: Class\n  summary: Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category.\n  syntax:\n    content: 'public class DateConstructor : Microsoft.JScript.ScriptFunction'\n  inheritance:\n  - System.Object\n  - Microsoft.JScript.ScriptObject\n  - Microsoft.JScript.JSObject\n  - Microsoft.JScript.ScriptFunction\n  implements: []\n  inheritedMembers:\n  - Microsoft.JScript.JSObject.AddField(System.String)\n  - Microsoft.JScript.JSObject.field_table\n  - Microsoft.JScript.JSObject.GetMember(System.String,System.Reflection.BindingFlags)\n  - Microsoft.JScript.JSObject.GetMembers(System.Reflection.BindingFlags)\n  - Microsoft.JScript.JSObject.SetMemberValue2(System.String,System.Object)\n  - Microsoft.JScript.JSObject.System#Collections#IEnumerable#GetEnumerator\n  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)\n  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)\n  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)\n  - Microsoft.JScript.ScriptFunction.GetPrototypeForConstructedObject\n  - Microsoft.JScript.ScriptFunction.ilength\n  - Microsoft.JScript.ScriptFunction.Invoke(System.Object,System.Object[])\n  - Microsoft.JScript.ScriptFunction.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  - Microsoft.JScript.ScriptFunction.length\n  - Microsoft.JScript.ScriptFunction.prototype\n  - Microsoft.JScript.ScriptFunction.ToString\n  - Microsoft.JScript.ScriptObject.engine\n  - Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)\n  - Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)\n  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)\n  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  - Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)\n  - Microsoft.JScript.ScriptObject.GetParent\n  - Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)\n  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)\n  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  - Microsoft.JScript.ScriptObject.Item(System.Double)\n  - Microsoft.JScript.ScriptObject.Item(System.Int32)\n  - Microsoft.JScript.ScriptObject.Item(System.Object[])\n  - Microsoft.JScript.ScriptObject.Item(System.String)\n  - Microsoft.JScript.ScriptObject.parent\n  - Microsoft.JScript.ScriptObject.UnderlyingSystemType\n  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)\n  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)\n  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)\n  platform:\n  - net462\n- uid: Microsoft.JScript.DateConstructor.CreateInstance(System.Object[])\n  id: CreateInstance(System.Object[])\n  parent: Microsoft.JScript.DateConstructor\n  langs:\n  - csharp\n  name: CreateInstance(Object[])\n  nameWithType: DateConstructor.CreateInstance(Object[])\n  fullName: Microsoft.JScript.DateConstructor.CreateInstance(Object[])\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Creates an instance of the prototype-based object, passing in the specified arguments.\n  syntax:\n    content: public Microsoft.JScript.DateObject CreateInstance (object[] args);\n    parameters:\n    - id: args\n      type: System.Object[]\n      description: The arguments to pass to the constructor.\n    return:\n      type: Microsoft.JScript.DateObject\n      description: An instance of the object.\n  overload: Microsoft.JScript.DateConstructor.CreateInstance*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DateConstructor.Invoke\n  id: Invoke\n  parent: Microsoft.JScript.DateConstructor\n  langs:\n  - csharp\n  name: Invoke()\n  nameWithType: DateConstructor.Invoke()\n  fullName: Microsoft.JScript.DateConstructor.Invoke()\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Returns the number of milliseconds that have elapsed since January 1, 1970.\n  syntax:\n    content: public string Invoke ();\n    parameters: []\n    return:\n      type: System.String\n      description: The number of milliseconds that have elapsed since January 1, 1970.\n  overload: Microsoft.JScript.DateConstructor.Invoke*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DateConstructor.parse(System.String)\n  id: parse(System.String)\n  parent: Microsoft.JScript.DateConstructor\n  langs:\n  - csharp\n  name: parse(String)\n  nameWithType: DateConstructor.parse(String)\n  fullName: Microsoft.JScript.DateConstructor.parse(String)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified string representation of a date and time to its <xref:System.Double> equivalent.\n  syntax:\n    content: public static double parse (string str);\n    parameters:\n    - id: str\n      type: System.String\n      description: A string that contains a date and time to convert.\n    return:\n      type: System.Double\n      description: A <xref:System.Double> equivalent of the date and time that is contained in <code>str</code>.\n  overload: Microsoft.JScript.DateConstructor.parse*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.DateConstructor.UTC(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)\n  id: UTC(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)\n  parent: Microsoft.JScript.DateConstructor\n  langs:\n  - csharp\n  name: UTC(Object,Object,Object,Object,Object,Object,Object)\n  nameWithType: DateConstructor.UTC(Object,Object,Object,Object,Object,Object,Object)\n  fullName: Microsoft.JScript.DateConstructor.UTC(Object,Object,Object,Object,Object,Object,Object)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Converts the specified date and time to its <xref:System.Double> equivalent.\n  syntax:\n    content: public static double UTC (object year, object month, object date, object hours, object minutes, object seconds, object ms);\n    parameters:\n    - id: year\n      type: System.Object\n      description: The year of the date and time to convert.\n    - id: month\n      type: System.Object\n      description: The month of the date and time to convert.\n    - id: date\n      type: System.Object\n      description: The date of the date and time to convert.\n    - id: hours\n      type: System.Object\n      description: The hours of the date and time to convert.\n    - id: minutes\n      type: System.Object\n      description: The minutes of the date and time to convert.\n    - id: seconds\n      type: System.Object\n      description: The seconds of the date and time to convert.\n    - id: ms\n      type: System.Object\n      description: The milliseconds of the date and time to convert.\n    return:\n      type: System.Double\n      description: A <xref:System.Double> equivalent of the specified date and time.\n  overload: Microsoft.JScript.DateConstructor.UTC*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.JScript.ScriptFunction\n  isExternal: false\n  name: Microsoft.JScript.ScriptFunction\n- uid: Microsoft.JScript.DateConstructor.CreateInstance(System.Object[])\n  parent: Microsoft.JScript.DateConstructor\n  isExternal: false\n  name: CreateInstance(Object[])\n  nameWithType: DateConstructor.CreateInstance(Object[])\n  fullName: Microsoft.JScript.DateConstructor.CreateInstance(Object[])\n- uid: Microsoft.JScript.DateObject\n  parent: Microsoft.JScript\n  isExternal: false\n  name: DateObject\n  nameWithType: DateObject\n  fullName: Microsoft.JScript.DateObject\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.JScript.DateConstructor.Invoke\n  parent: Microsoft.JScript.DateConstructor\n  isExternal: false\n  name: Invoke()\n  nameWithType: DateConstructor.Invoke()\n  fullName: Microsoft.JScript.DateConstructor.Invoke()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.JScript.DateConstructor.parse(System.String)\n  parent: Microsoft.JScript.DateConstructor\n  isExternal: false\n  name: parse(String)\n  nameWithType: DateConstructor.parse(String)\n  fullName: Microsoft.JScript.DateConstructor.parse(String)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: Microsoft.JScript.DateConstructor.UTC(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)\n  parent: Microsoft.JScript.DateConstructor\n  isExternal: false\n  name: UTC(Object,Object,Object,Object,Object,Object,Object)\n  nameWithType: DateConstructor.UTC(Object,Object,Object,Object,Object,Object,Object)\n  fullName: Microsoft.JScript.DateConstructor.UTC(Object,Object,Object,Object,Object,Object,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.JScript.DateConstructor.CreateInstance*\n  parent: Microsoft.JScript.DateConstructor\n  isExternal: false\n  name: CreateInstance\n  nameWithType: DateConstructor.CreateInstance\n- uid: Microsoft.JScript.DateConstructor.Invoke*\n  parent: Microsoft.JScript.DateConstructor\n  isExternal: false\n  name: Invoke\n  nameWithType: DateConstructor.Invoke\n- uid: Microsoft.JScript.DateConstructor.parse*\n  parent: Microsoft.JScript.DateConstructor\n  isExternal: false\n  name: parse\n  nameWithType: DateConstructor.parse\n- uid: Microsoft.JScript.DateConstructor.UTC*\n  parent: Microsoft.JScript.DateConstructor\n  isExternal: false\n  name: UTC\n  nameWithType: DateConstructor.UTC\n"}