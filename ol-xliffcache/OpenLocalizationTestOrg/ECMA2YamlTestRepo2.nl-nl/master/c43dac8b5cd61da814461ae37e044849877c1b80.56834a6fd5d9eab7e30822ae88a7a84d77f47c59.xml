{"nodes":[{"pos":[452,523],"content":"Implements an event provider that sends e-mail for event notifications.","needQuote":true,"needEscape":true,"nodes":[{"content":"Implements an event provider that sends e-mail for event notifications.","pos":[0,71]}]},{"pos":[536,1325],"content":"ASP.NET health monitoring allows production and operations staff to manage  deployed Web applications. The <xref:System.Web.Management> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.       This class is not intended to be used from your code. It is created, configured and used by the ASP.NET health-monitoring system to send event notifications by e-mail. You can define an event provider in a configuration file, as demonstrated in the Example section of this topic.       This provider has a comprehensive set of configuration attributes that you can use to customize the way it works.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage  deployed Web applications. The <xref:System.Web.Management> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.       This class is not intended to be used from your code. It is created, configured and used by the ASP.NET health-monitoring system to send event notifications by e-mail. You can define an event provider in a configuration file, as demonstrated in the Example section of this topic.       This provider has a comprehensive set of configuration attributes that you can use to customize the way it works.","pos":[0,785],"nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage  deployed Web applications.","pos":[0,102]},{"content":"The &lt;xref:System.Web.Management&gt; namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data.","pos":[103,295],"source":" The <xref:System.Web.Management> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data."},{"content":"It also contains supporting types that help during the management of health events.","pos":[296,379]},{"content":"This class is not intended to be used from your code.","pos":[386,439]},{"content":"It is created, configured and used by the ASP.NET health-monitoring system to send event notifications by e-mail.","pos":[440,553]},{"content":"You can define an event provider in a configuration file, as demonstrated in the Example section of this topic.","pos":[554,665]},{"content":"This provider has a comprehensive set of configuration attributes that you can use to customize the way it works.","pos":[672,785]}]}]},{"pos":[5871,5911],"content":"Sets the initial values for this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the initial values for this object.","pos":[0,40]}]},{"pos":[5923,6040],"content":"This method is not intended to be used directly from your code. It is called by the ASP.NET health-monitoring system.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is not intended to be used directly from your code. It is called by the ASP.NET health-monitoring system.","pos":[0,117],"nodes":[{"content":"This method is not intended to be used directly from your code.","pos":[0,63]},{"content":"It is called by the ASP.NET health-monitoring system.","pos":[64,117]}]}]},{"pos":[6246,6278],"content":"The name of this event provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of this event provider.","pos":[0,32]}]},{"pos":[6378,6514],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies configuration settings for this event provider.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> that specifies configuration settings for this event provider."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Management.SimpleMailWebEventProvider\n  id: SimpleMailWebEventProvider\n  children:\n  - System.Web.Management.SimpleMailWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  langs:\n  - csharp\n  name: SimpleMailWebEventProvider\n  nameWithType: SimpleMailWebEventProvider\n  fullName: System.Web.Management.SimpleMailWebEventProvider\n  type: Class\n  summary: Implements an event provider that sends e-mail for event notifications.\n  remarks: \"ASP.NET health monitoring allows production and operations staff to manage  deployed Web applications. The <xref:System.Web.Management> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \\n  \\n This class is not intended to be used from your code. It is created, configured and used by the ASP.NET health-monitoring system to send event notifications by e-mail. You can define an event provider in a configuration file, as demonstrated in the Example section of this topic.  \\n  \\n This provider has a comprehensive set of configuration attributes that you can use to customize the way it works.\"\n  example:\n  - \"The following configuration file excerpt shows how to specify a provider of type SimpleMailWebEventProvider in the `healthMonitoring` section. The `add` elements in the `rules` section specify that the provider will handle request-processing errors and infrastructure errors.  \\n  \\n```  \\n<healthMonitoring  \\n    enabled=\\\"true\\\"  \\n    heartBeatInterval=\\\"0\\\">  \\n    <bufferModes>  \\n        <add name=\\\"Critical Notification\\\"  \\n            maxBufferSize=\\\"100\\\"  \\n            maxFlushSize=\\\"20\\\"  \\n            urgentFlushThreshold=\\\"1\\\"  \\n            regularFlushInterval=\\\"Infinite\\\"  \\n            urgentFlushInterval=\\\"00:01:00\\\"  \\n            maxBufferThreads=\\\"1\\\"  \\n        />  \\n    </bufferModes>  \\n    <providers>  \\n        <add name=\\\"CriticalMailEventProvider\\\"  \\n            type=\\\"System.Web.Management.SimpleMailWebEventProvider,   \\n              System.Web, Version=%ASSEMBLY_VERSION%, Culture=neutral,   \\n              PublicKeyToken=%MICROSOFT_PUBLICKEY%\\\"  \\n            from=\\\"sender address\\\"  \\n            to=\\\"someone@example.com\\\"   \\n            cc=\\\"someone@example.com  \\n            bcc=\\\"someone@example.com\\\"  \\n            priority=\\\"High\\\"  \\n            bodyHeader=\\\"Warning!\\\"  \\n            bodyFooter=\\\"Please investigate ASAP.\\\"  \\n            subjectPrefix=\\\"Action required.\\\"  \\n            buffer=\\\"true\\\"  \\n            bufferMode=\\\"Critical Notification\\\"  \\n            maxEventLength=\\\"4096\\\"  \\n            maxSize=\\\"4096\\\"  \\n            maxMessagesPerNotification=\\\"1\\\"  \\n        />  \\n    </providers>  \\n    <eventMappings>  \\n        <add name=\\\"Request Processing Events\\\"  \\n            type=\\\"System.Web.Management.WebRequestEvent, System.Web,   \\n              Version=%ASSEMBLY_VERSION%, Culture=neutral,   \\n              PublicKeyToken=%MICROSOFT_PUBLICKEY%\\\"   \\n        />  \\n        <add name=\\\"Infrastructure Errors\\\"  \\n            type=\\\"System.Web.Management.WebErrorEvent, System.Web,   \\n              Version=%ASSEMBLY_VERSION%, Culture=neutral,   \\n              PublicKeyToken=%MICROSOFT_PUBLICKEY%\\\"   \\n        />  \\n    </eventMappings>  \\n    <profiles>  \\n        <add name=\\\"Default\\\"  \\n            minInstances=\\\"1\\\"  \\n            maxLimit=\\\"Infinite\\\"  \\n            minInterval=\\\"00:10:00\\\"  \\n        />  \\n        <add name=\\\"Critical\\\"  \\n            minInstances=\\\"1\\\"  \\n            maxLimit=\\\"1024\\\"  \\n            minInterval=\\\"00:00:00\\\"  \\n        />  \\n    </profiles>  \\n    <rules>  \\n        <add name=\\\"Request Processing Errors\\\"  \\n            eventName=\\\"Request Processing Errors\\\"  \\n            provider=\\\"CriticalMailEventProvider\\\"  \\n            profile=\\\"Default\\\"  \\n        />  \\n        <add name=\\\"Infrastructure Notifications\\\"  \\n            eventName=\\\"Infrastructure Errors\\\"  \\n            provider=\\\"CriticalMailEventProvider\\\"  \\n            profile=\\\"Critical\\\"  \\n        />  \\n   </rules>  \\n</healthMonitoring>   \\n```\"\n  syntax:\n    content: 'public sealed class SimpleMailWebEventProvider : System.Web.Management.MailWebEventProvider'\n  inheritance:\n  - System.Object\n  - System.Configuration.Provider.ProviderBase\n  - System.Web.Management.WebEventProvider\n  - System.Web.Management.BufferedWebEventProvider\n  - System.Web.Management.MailWebEventProvider\n  implements: []\n  inheritedMembers:\n  - System.Configuration.Provider.ProviderBase.Description\n  - System.Configuration.Provider.ProviderBase.Name\n  - System.Web.Management.BufferedWebEventProvider.BufferMode\n  - System.Web.Management.BufferedWebEventProvider.Flush\n  - System.Web.Management.BufferedWebEventProvider.UseBuffering\n  - System.Web.Management.MailWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)\n  - System.Web.Management.MailWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)\n  - System.Web.Management.MailWebEventProvider.Shutdown\n  platform:\n  - net462\n- uid: System.Web.Management.SimpleMailWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.Management.SimpleMailWebEventProvider\n  langs:\n  - csharp\n  name: Initialize(String,NameValueCollection)\n  nameWithType: SimpleMailWebEventProvider.Initialize(String,NameValueCollection)\n  fullName: System.Web.Management.SimpleMailWebEventProvider.Initialize(String,NameValueCollection)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Sets the initial values for this object.\n  remarks: This method is not intended to be used directly from your code. It is called by the ASP.NET health-monitoring system.\n  syntax:\n    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of this event provider.\n    - id: config\n      type: System.Collections.Specialized.NameValueCollection\n      description: A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> that specifies configuration settings for this event provider.\n  overload: System.Web.Management.SimpleMailWebEventProvider.Initialize*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.Management.MailWebEventProvider\n  isExternal: false\n  name: System.Web.Management.MailWebEventProvider\n- uid: System.Web.Management.SimpleMailWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.Management.SimpleMailWebEventProvider\n  isExternal: false\n  name: Initialize(String,NameValueCollection)\n  nameWithType: SimpleMailWebEventProvider.Initialize(String,NameValueCollection)\n  fullName: System.Web.Management.SimpleMailWebEventProvider.Initialize(String,NameValueCollection)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Specialized.NameValueCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n- uid: System.Web.Management.SimpleMailWebEventProvider.Initialize*\n  parent: System.Web.Management.SimpleMailWebEventProvider\n  isExternal: false\n  name: Initialize\n  nameWithType: SimpleMailWebEventProvider.Initialize\n"}