{"nodes":[{"pos":[612,750],"content":"An activity used to explicitly invoke the confirmation handler of a <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.CompensableActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An activity used to explicitly invoke the confirmation handler of a <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>."},{"pos":[2353,2451],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.Confirm\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Activities.Statements.Confirm\"></xref> class."},{"pos":[3347,3359],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4151,4163],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4954,4966],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5404,5619],"content":"Gets or sets the <ph id=\"ph1\">&amp;lt;</ph>xref:System.WorkflowModel.InArgument%601<ph id=\"ph2\">&amp;gt;</ph> that contains the &lt;xref:System.Activities.Statements.CompensationHandle&gt; for this <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.Confirm\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> activity.","needQuote":true,"needEscape":true,"source":"Gets or sets the &lt;xref:System.WorkflowModel.InArgument%601&gt; that contains the <xref:System.Activities.Statements.CompensationHandle> for this <xref href=\"System.Activities.Statements.Confirm\"></xref> activity."},{"pos":[5632,6591],"content":"When the Target of the <xref:System.Activities.Statements.CompensationHandle> is specified, the <xref:System.Activities.Statements.Confirm> activity explicitly invokes the confirmation handler of the <xref:System.Activities.Statements.CompensableActivity>, which returns the <xref:System.Activities.Statements.CompensationHandle>. When the Target of the <xref:System.Activities.Statements.CompensationHandle> is not specified, the <xref:System.Activities.Statements.Confirm> activity executes the default confirmation for any child <xref:System.Activities.Statements.CompensableActivity> activities in the reverse order of successful completion. An <xref:System.InvalidOperationException> is thrown if the Target refers to a <xref:System.Activities.Statements.CompensableActivity> that was previously confirmed or compensated.       This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is raised.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the Target of the <xref:System.Activities.Statements.CompensationHandle> is specified, the <xref:System.Activities.Statements.Confirm> activity explicitly invokes the confirmation handler of the <xref:System.Activities.Statements.CompensableActivity>, which returns the <xref:System.Activities.Statements.CompensationHandle>. When the Target of the <xref:System.Activities.Statements.CompensationHandle> is not specified, the <xref:System.Activities.Statements.Confirm> activity executes the default confirmation for any child <xref:System.Activities.Statements.CompensableActivity> activities in the reverse order of successful completion. An <xref:System.InvalidOperationException> is thrown if the Target refers to a <xref:System.Activities.Statements.CompensableActivity> that was previously confirmed or compensated.       This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is raised.","pos":[0,957],"nodes":[{"content":"When the Target of the &lt;xref:System.Activities.Statements.CompensationHandle&gt; is specified, the &lt;xref:System.Activities.Statements.Confirm&gt; activity explicitly invokes the confirmation handler of the &lt;xref:System.Activities.Statements.CompensableActivity&gt;, which returns the &lt;xref:System.Activities.Statements.CompensationHandle&gt;.","pos":[0,330],"source":"When the Target of the <xref:System.Activities.Statements.CompensationHandle> is specified, the <xref:System.Activities.Statements.Confirm> activity explicitly invokes the confirmation handler of the <xref:System.Activities.Statements.CompensableActivity>, which returns the <xref:System.Activities.Statements.CompensationHandle>."},{"content":"When the Target of the &lt;xref:System.Activities.Statements.CompensationHandle&gt; is not specified, the &lt;xref:System.Activities.Statements.Confirm&gt; activity executes the default confirmation for any child &lt;xref:System.Activities.Statements.CompensableActivity&gt; activities in the reverse order of successful completion.","pos":[331,645],"source":" When the Target of the <xref:System.Activities.Statements.CompensationHandle> is not specified, the <xref:System.Activities.Statements.Confirm> activity executes the default confirmation for any child <xref:System.Activities.Statements.CompensableActivity> activities in the reverse order of successful completion."},{"content":"An &lt;xref:System.InvalidOperationException&gt; is thrown if the Target refers to a &lt;xref:System.Activities.Statements.CompensableActivity&gt; that was previously confirmed or compensated.","pos":[646,826],"source":" An <xref:System.InvalidOperationException> is thrown if the Target refers to a <xref:System.Activities.Statements.CompensableActivity> that was previously confirmed or compensated."},{"content":"This property is read-only at runtime.","pos":[833,871]},{"content":"If the value is set at runtime, an &lt;xref:System.InvalidOperationException&gt; is raised.","pos":[872,957],"source":" If the value is set at runtime, an <xref:System.InvalidOperationException> is raised."}]}]},{"pos":[6841,7043],"content":"The <ph id=\"ph1\">&amp;lt;</ph>xref:System.WorkflowModel.InArgument%601<ph id=\"ph2\">&amp;gt;</ph> that contains the &lt;xref:System.Activities.Statements.CompensationHandle&gt; for this <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.Confirm\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> activity.","needQuote":true,"needEscape":true,"source":"The &lt;xref:System.WorkflowModel.InArgument%601&gt; that contains the <xref:System.Activities.Statements.CompensationHandle> for this <xref href=\"System.Activities.Statements.Confirm\"></xref> activity."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.Confirm\n  id: Confirm\n  children:\n  - System.Activities.Statements.Confirm.#ctor\n  - System.Activities.Statements.Confirm.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.Confirm.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.Confirm.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.Confirm.Target\n  langs:\n  - csharp\n  name: Confirm\n  nameWithType: Confirm\n  fullName: System.Activities.Statements.Confirm\n  type: Class\n  summary: An activity used to explicitly invoke the confirmation handler of a <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>.\n  syntax:\n    content: 'public sealed class Confirm : System.Activities.NativeActivity'\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  platform:\n  - net462\n- uid: System.Activities.Statements.Confirm.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.Confirm\n  langs:\n  - csharp\n  name: Confirm()\n  nameWithType: Confirm.Confirm()\n  fullName: System.Activities.Statements.Confirm.Confirm()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Statements.Confirm\"></xref> class.\n  syntax:\n    content: public Confirm ();\n    parameters: []\n  overload: System.Activities.Statements.Confirm.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Confirm.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Confirm\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Confirm.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.Confirm.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Statements.Confirm.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Confirm.Cancel(System.Activities.NativeActivityContext)\n  id: Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Confirm\n  langs:\n  - csharp\n  name: Cancel(NativeActivityContext)\n  nameWithType: Confirm.Cancel(NativeActivityContext)\n  fullName: System.Activities.Statements.Confirm.Cancel(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Cancel (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: To be added.\n  overload: System.Activities.Statements.Confirm.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Confirm.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Confirm\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: Confirm.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.Confirm.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: To be added.\n  overload: System.Activities.Statements.Confirm.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Confirm.Target\n  id: Target\n  parent: System.Activities.Statements.Confirm\n  langs:\n  - csharp\n  name: Target\n  nameWithType: Confirm.Target\n  fullName: System.Activities.Statements.Confirm.Target\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the &lt;xref:System.WorkflowModel.InArgument%601&gt; that contains the <xref:System.Activities.Statements.CompensationHandle> for this <xref href=\"System.Activities.Statements.Confirm\"></xref> activity.\n  remarks: \"When the Target of the <xref:System.Activities.Statements.CompensationHandle> is specified, the <xref:System.Activities.Statements.Confirm> activity explicitly invokes the confirmation handler of the <xref:System.Activities.Statements.CompensableActivity>, which returns the <xref:System.Activities.Statements.CompensationHandle>. When the Target of the <xref:System.Activities.Statements.CompensationHandle> is not specified, the <xref:System.Activities.Statements.Confirm> activity executes the default confirmation for any child <xref:System.Activities.Statements.CompensableActivity> activities in the reverse order of successful completion. An <xref:System.InvalidOperationException> is thrown if the Target refers to a <xref:System.Activities.Statements.CompensableActivity> that was previously confirmed or compensated.  \\n  \\n This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is raised.\"\n  syntax:\n    content: public System.Activities.InArgument<System.Activities.Statements.CompensationToken> Target { get; set; }\n    return:\n      type: System.Activities.InArgument{System.Activities.Statements.CompensationToken}\n      description: The &lt;xref:System.WorkflowModel.InArgument%601&gt; that contains the <xref:System.Activities.Statements.CompensationHandle> for this <xref href=\"System.Activities.Statements.Confirm\"></xref> activity.\n  overload: System.Activities.Statements.Confirm.Target*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.NativeActivity\n  isExternal: false\n  name: System.Activities.NativeActivity\n- uid: System.Activities.Statements.Confirm.#ctor\n  parent: System.Activities.Statements.Confirm\n  isExternal: false\n  name: Confirm()\n  nameWithType: Confirm.Confirm()\n  fullName: System.Activities.Statements.Confirm.Confirm()\n- uid: System.Activities.Statements.Confirm.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Confirm\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Confirm.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.Confirm.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.Confirm.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Confirm\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: Confirm.Cancel(NativeActivityContext)\n  fullName: System.Activities.Statements.Confirm.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.Confirm.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Confirm\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: Confirm.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.Confirm.Execute(NativeActivityContext)\n- uid: System.Activities.Statements.Confirm.Target\n  parent: System.Activities.Statements.Confirm\n  isExternal: false\n  name: Target\n  nameWithType: Confirm.Target\n  fullName: System.Activities.Statements.Confirm.Target\n- uid: System.Activities.InArgument{System.Activities.Statements.CompensationToken}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<CompensationToken>\n  nameWithType: InArgument<CompensationToken>\n  fullName: System.Activities.InArgument<System.Activities.Statements.CompensationToken>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<System.Activities.Statements.CompensationToken>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Statements.CompensationToken\n    name: CompensationToken\n    nameWithType: CompensationToken\n    fullName: CompensationToken\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.Confirm.#ctor*\n  parent: System.Activities.Statements.Confirm\n  isExternal: false\n  name: Confirm\n  nameWithType: Confirm.Confirm\n- uid: System.Activities.Statements.Confirm.CacheMetadata*\n  parent: System.Activities.Statements.Confirm\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: Confirm.CacheMetadata\n- uid: System.Activities.Statements.Confirm.Cancel*\n  parent: System.Activities.Statements.Confirm\n  isExternal: false\n  name: Cancel\n  nameWithType: Confirm.Cancel\n- uid: System.Activities.Statements.Confirm.Execute*\n  parent: System.Activities.Statements.Confirm\n  isExternal: false\n  name: Execute\n  nameWithType: Confirm.Execute\n- uid: System.Activities.Statements.Confirm.Target*\n  parent: System.Activities.Statements.Confirm\n  isExternal: false\n  name: Target\n  nameWithType: Confirm.Target\n"}