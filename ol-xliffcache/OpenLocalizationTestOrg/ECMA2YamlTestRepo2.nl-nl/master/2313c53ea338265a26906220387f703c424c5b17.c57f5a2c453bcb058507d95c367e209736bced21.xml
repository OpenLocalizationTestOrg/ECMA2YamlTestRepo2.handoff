{"nodes":[{"pos":[504,524],"content":"Throws an exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Throws an exception.","pos":[0,20]}]},{"pos":[1759,1851],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.Throw\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Activities.Statements.Throw\"></xref> class."},{"pos":[2721,2733],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3182,3219],"content":"The exception thrown by the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception thrown by the activity.","pos":[0,37]}]},{"pos":[3404,3418],"content":"The exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception.","pos":[0,14]}]},{"pos":[4188,4200],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.Throw\n  id: Throw\n  children:\n  - System.Activities.Statements.Throw.#ctor\n  - System.Activities.Statements.Throw.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.Statements.Throw.Exception\n  - System.Activities.Statements.Throw.Execute(System.Activities.CodeActivityContext)\n  langs:\n  - csharp\n  name: Throw\n  nameWithType: Throw\n  fullName: System.Activities.Statements.Throw\n  type: Class\n  summary: Throws an exception.\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Exception\")]\n\n      public sealed class Throw : System.Activities.CodeActivity\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.CodeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.CodeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.CodeActivity.Implementation\n  - System.Activities.CodeActivity.ImplementationVersion\n  - System.Activities.CodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  platform:\n  - net462\n- uid: System.Activities.Statements.Throw.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.Throw\n  langs:\n  - csharp\n  name: Throw()\n  nameWithType: Throw.Throw()\n  fullName: System.Activities.Statements.Throw.Throw()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.Throw\"></xref> class.\n  syntax:\n    content: public Throw ();\n    parameters: []\n  overload: System.Activities.Statements.Throw.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Throw.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Statements.Throw\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: Throw.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Statements.Throw.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Statements.Throw.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Throw.Exception\n  id: Exception\n  parent: System.Activities.Statements.Throw\n  langs:\n  - csharp\n  name: Exception\n  nameWithType: Throw.Exception\n  fullName: System.Activities.Statements.Throw.Exception\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The exception thrown by the activity.\n  syntax:\n    content: public System.Activities.InArgument<Exception> Exception { get; set; }\n    return:\n      type: System.Activities.InArgument{System.Exception}\n      description: The exception.\n  overload: System.Activities.Statements.Throw.Exception*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.Throw.Execute(System.Activities.CodeActivityContext)\n  id: Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Statements.Throw\n  langs:\n  - csharp\n  name: Execute(CodeActivityContext)\n  nameWithType: Throw.Execute(CodeActivityContext)\n  fullName: System.Activities.Statements.Throw.Execute(CodeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.CodeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.CodeActivityContext\n      description: To be added.\n  overload: System.Activities.Statements.Throw.Execute*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.CodeActivity\n  isExternal: false\n  name: System.Activities.CodeActivity\n- uid: System.Activities.Statements.Throw.#ctor\n  parent: System.Activities.Statements.Throw\n  isExternal: false\n  name: Throw()\n  nameWithType: Throw.Throw()\n  fullName: System.Activities.Statements.Throw.Throw()\n- uid: System.Activities.Statements.Throw.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Statements.Throw\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: Throw.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Statements.Throw.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.Statements.Throw.Exception\n  parent: System.Activities.Statements.Throw\n  isExternal: false\n  name: Exception\n  nameWithType: Throw.Exception\n  fullName: System.Activities.Statements.Throw.Exception\n- uid: System.Activities.InArgument{System.Exception}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<Exception>\n  nameWithType: InArgument<Exception>\n  fullName: System.Activities.InArgument<System.Exception>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<System.Exception>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Exception\n    name: Exception\n    nameWithType: Exception\n    fullName: Exception\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.Throw.Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Statements.Throw\n  isExternal: false\n  name: Execute(CodeActivityContext)\n  nameWithType: Throw.Execute(CodeActivityContext)\n  fullName: System.Activities.Statements.Throw.Execute(CodeActivityContext)\n- uid: System.Activities.CodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityContext\n  nameWithType: CodeActivityContext\n  fullName: System.Activities.CodeActivityContext\n- uid: System.Activities.Statements.Throw.#ctor*\n  parent: System.Activities.Statements.Throw\n  isExternal: false\n  name: Throw\n  nameWithType: Throw.Throw\n- uid: System.Activities.Statements.Throw.CacheMetadata*\n  parent: System.Activities.Statements.Throw\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: Throw.CacheMetadata\n- uid: System.Activities.Statements.Throw.Exception*\n  parent: System.Activities.Statements.Throw\n  isExternal: false\n  name: Exception\n  nameWithType: Throw.Exception\n- uid: System.Activities.Statements.Throw.Execute*\n  parent: System.Activities.Statements.Throw\n  isExternal: false\n  name: Execute\n  nameWithType: Throw.Execute\n"}