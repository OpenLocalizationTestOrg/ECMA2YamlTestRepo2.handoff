{"nodes":[{"pos":[420,580],"content":"Specifies how to join consecutive line or curve segments in a figure (subpath) contained in a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Drawing2D.GraphicsPath\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Specifies how to join consecutive line or curve segments in a figure (subpath) contained in a <xref href=\"System.Drawing.Drawing2D.GraphicsPath\"></xref> object."},{"pos":[995,1053],"content":"Specifies a beveled join. This produces a diagonal corner.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a beveled join. This produces a diagonal corner.","pos":[0,58],"nodes":[{"content":"Specifies a beveled join.","pos":[0,25]},{"content":"This produces a diagonal corner.","pos":[26,58]}]}]},{"pos":[1160,1172],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[1529,1674],"content":"Specifies a mitered join. This produces a sharp corner or a clipped corner, depending on whether the length of the miter exceeds the miter limit.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a mitered join. This produces a sharp corner or a clipped corner, depending on whether the length of the miter exceeds the miter limit.","pos":[0,145],"nodes":[{"content":"Specifies a mitered join.","pos":[0,25]},{"content":"This produces a sharp corner or a clipped corner, depending on whether the length of the miter exceeds the miter limit.","pos":[26,145]}]}]},{"pos":[1781,1793],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2185,2330],"content":"Specifies a mitered join. This produces a sharp corner or a beveled corner, depending on whether the length of the miter exceeds the miter limit.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a mitered join. This produces a sharp corner or a beveled corner, depending on whether the length of the miter exceeds the miter limit.","pos":[0,145],"nodes":[{"content":"Specifies a mitered join.","pos":[0,25]},{"content":"This produces a sharp corner or a beveled corner, depending on whether the length of the miter exceeds the miter limit.","pos":[26,145]}]}]},{"pos":[2444,2456],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2813,2895],"content":"Specifies a circular join. This produces a smooth, circular arc between the lines.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a circular join. This produces a smooth, circular arc between the lines.","pos":[0,82],"nodes":[{"content":"Specifies a circular join.","pos":[0,26]},{"content":"This produces a smooth, circular arc between the lines.","pos":[27,82]}]}]},{"pos":[3002,3014],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.Drawing2D.LineJoin\n  id: LineJoin\n  children:\n  - System.Drawing.Drawing2D.LineJoin.Bevel\n  - System.Drawing.Drawing2D.LineJoin.Miter\n  - System.Drawing.Drawing2D.LineJoin.MiterClipped\n  - System.Drawing.Drawing2D.LineJoin.Round\n  langs:\n  - csharp\n  name: LineJoin\n  nameWithType: LineJoin\n  fullName: System.Drawing.Drawing2D.LineJoin\n  type: Enum\n  summary: Specifies how to join consecutive line or curve segments in a figure (subpath) contained in a <xref href=\"System.Drawing.Drawing2D.GraphicsPath\"></xref> object.\n  syntax:\n    content: public enum LineJoin\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.LineJoin.Bevel\n  id: Bevel\n  parent: System.Drawing.Drawing2D.LineJoin\n  langs:\n  - csharp\n  name: Bevel\n  nameWithType: LineJoin.Bevel\n  fullName: System.Drawing.Drawing2D.LineJoin.Bevel\n  type: Field\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Specifies a beveled join. This produces a diagonal corner.\n  syntax:\n    content: Bevel\n    return:\n      type: System.Drawing.Drawing2D.LineJoin\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.LineJoin.Miter\n  id: Miter\n  parent: System.Drawing.Drawing2D.LineJoin\n  langs:\n  - csharp\n  name: Miter\n  nameWithType: LineJoin.Miter\n  fullName: System.Drawing.Drawing2D.LineJoin.Miter\n  type: Field\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Specifies a mitered join. This produces a sharp corner or a clipped corner, depending on whether the length of the miter exceeds the miter limit.\n  syntax:\n    content: Miter\n    return:\n      type: System.Drawing.Drawing2D.LineJoin\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.LineJoin.MiterClipped\n  id: MiterClipped\n  parent: System.Drawing.Drawing2D.LineJoin\n  langs:\n  - csharp\n  name: MiterClipped\n  nameWithType: LineJoin.MiterClipped\n  fullName: System.Drawing.Drawing2D.LineJoin.MiterClipped\n  type: Field\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Specifies a mitered join. This produces a sharp corner or a beveled corner, depending on whether the length of the miter exceeds the miter limit.\n  syntax:\n    content: MiterClipped\n    return:\n      type: System.Drawing.Drawing2D.LineJoin\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Drawing2D.LineJoin.Round\n  id: Round\n  parent: System.Drawing.Drawing2D.LineJoin\n  langs:\n  - csharp\n  name: Round\n  nameWithType: LineJoin.Round\n  fullName: System.Drawing.Drawing2D.LineJoin.Round\n  type: Field\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Drawing2D\n  summary: Specifies a circular join. This produces a smooth, circular arc between the lines.\n  syntax:\n    content: Round\n    return:\n      type: System.Drawing.Drawing2D.LineJoin\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Drawing.Drawing2D.LineJoin.Bevel\n  parent: System.Drawing.Drawing2D.LineJoin\n  isExternal: false\n  name: Bevel\n  nameWithType: LineJoin.Bevel\n  fullName: System.Drawing.Drawing2D.LineJoin.Bevel\n- uid: System.Drawing.Drawing2D.LineJoin\n  parent: System.Drawing.Drawing2D\n  isExternal: false\n  name: LineJoin\n  nameWithType: LineJoin\n  fullName: System.Drawing.Drawing2D.LineJoin\n- uid: System.Drawing.Drawing2D.LineJoin.Miter\n  parent: System.Drawing.Drawing2D.LineJoin\n  isExternal: false\n  name: Miter\n  nameWithType: LineJoin.Miter\n  fullName: System.Drawing.Drawing2D.LineJoin.Miter\n- uid: System.Drawing.Drawing2D.LineJoin.MiterClipped\n  parent: System.Drawing.Drawing2D.LineJoin\n  isExternal: false\n  name: MiterClipped\n  nameWithType: LineJoin.MiterClipped\n  fullName: System.Drawing.Drawing2D.LineJoin.MiterClipped\n- uid: System.Drawing.Drawing2D.LineJoin.Round\n  parent: System.Drawing.Drawing2D.LineJoin\n  isExternal: false\n  name: Round\n  nameWithType: LineJoin.Round\n  fullName: System.Drawing.Drawing2D.LineJoin.Round\n"}