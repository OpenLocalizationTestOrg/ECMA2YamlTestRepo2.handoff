{"nodes":[{"pos":[782,927],"content":"A specialized <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.FlowNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides the ability to model a conditional node with two outcomes.","needQuote":true,"needEscape":true,"source":"A specialized <xref href=\"System.Activities.Statements.FlowNode\"></xref> that provides the ability to model a conditional node with two outcomes."},{"pos":[939,1035],"content":"FlowDecision uses a condition and defines actions to take if the condition is <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"FlowDecision uses a condition and defines actions to take if the condition is `true` or `false`."},{"pos":[1991,2090],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.FlowDecision\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> class."},{"pos":[3166,3294],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.FlowDecision\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified condition.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> class with the specified condition."},{"pos":[3877,3969],"content":"The condition the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.FlowDecision\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is testing.","needQuote":true,"needEscape":true,"source":"The condition the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> is testing."},{"pos":[4778,4906],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.FlowDecision\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified condition.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> class with the specified condition."},{"pos":[5592,5684],"content":"The condition the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.FlowDecision\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is testing.","needQuote":true,"needEscape":true,"source":"The condition the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> is testing."},{"pos":[6160,6262],"content":"Specifies the condition the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.FlowDecision\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is testing.","needQuote":true,"needEscape":true,"source":"Specifies the condition the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> is testing."},{"pos":[6274,6592],"content":"If the condition evaluates to `true`, the <xref:System.Activities.Statements.FlowNode> in the <xref:System.Activities.Statements.FlowDecision.True%2A> property is executed. Otherwise the <xref:System.Activities.Statements.FlowNode> in the <xref:System.Activities.Statements.FlowDecision.False%2A> property is executed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the condition evaluates to <ph id=\"ph1\">`true`</ph>, the &lt;xref:System.Activities.Statements.FlowNode&gt; in the &lt;xref:System.Activities.Statements.FlowDecision.True%2A&gt; property is executed.","pos":[0,172],"source":"If the condition evaluates to `true`, the <xref:System.Activities.Statements.FlowNode> in the <xref:System.Activities.Statements.FlowDecision.True%2A> property is executed."},{"content":"Otherwise the &lt;xref:System.Activities.Statements.FlowNode&gt; in the &lt;xref:System.Activities.Statements.FlowDecision.False%2A&gt; property is executed.","pos":[173,318],"source":" Otherwise the <xref:System.Activities.Statements.FlowNode> in the <xref:System.Activities.Statements.FlowDecision.False%2A> property is executed."}]},{"pos":[7158,7207],"content":"A value expression that represents the condition.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value expression that represents the condition.","pos":[0,49]}]},{"pos":[7697,7769],"content":"The name of this flow decision to be displayed in the activity designer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of this flow decision to be displayed in the activity designer.","pos":[0,72]}]},{"pos":[7890,7920],"content":"The name of the flow decision.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the flow decision.","pos":[0,30]}]},{"pos":[8386,8574],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.FlowNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is executed when the condition evaluates to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Activities.Statements.FlowNode\"></xref> that is executed when the condition evaluates to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9148,9273],"content":"The activity that is executed when the condition evaluates to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The activity that is executed when the condition evaluates to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9728,9914],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.FlowNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is executed when the condition evaluates to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Activities.Statements.FlowNode\"></xref> that is executed when the condition evaluates to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[10486,10603],"content":"The activity to execute when the condition evaluates to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The activity to execute when the condition evaluates to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.FlowDecision\n  id: FlowDecision\n  children:\n  - System.Activities.Statements.FlowDecision.#ctor\n  - System.Activities.Statements.FlowDecision.#ctor(System.Activities.Activity{System.Boolean})\n  - System.Activities.Statements.FlowDecision.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})\n  - System.Activities.Statements.FlowDecision.Condition\n  - System.Activities.Statements.FlowDecision.DisplayName\n  - System.Activities.Statements.FlowDecision.False\n  - System.Activities.Statements.FlowDecision.True\n  langs:\n  - csharp\n  name: FlowDecision\n  nameWithType: FlowDecision\n  fullName: System.Activities.Statements.FlowDecision\n  type: Class\n  summary: A specialized <xref href=\"System.Activities.Statements.FlowNode\"></xref> that provides the ability to model a conditional node with two outcomes.\n  remarks: FlowDecision uses a condition and defines actions to take if the condition is `true` or `false`.\n  example:\n  - \"The following code sample demonstrates creating a FlowDecision node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_FlowChartWithFaultHandling#3](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#3)]\"\n  syntax:\n    content: 'public sealed class FlowDecision : System.Activities.Statements.FlowNode'\n  inheritance:\n  - System.Object\n  - System.Activities.Statements.FlowNode\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.FlowDecision.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.FlowDecision\n  langs:\n  - csharp\n  name: FlowDecision()\n  nameWithType: FlowDecision.FlowDecision()\n  fullName: System.Activities.Statements.FlowDecision.FlowDecision()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_FlowChartWithFaultHandling#3](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#3)]\"\n  syntax:\n    content: public FlowDecision ();\n    parameters: []\n  overload: System.Activities.Statements.FlowDecision.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.FlowDecision.#ctor(System.Activities.Activity{System.Boolean})\n  id: '#ctor(System.Activities.Activity{System.Boolean})'\n  parent: System.Activities.Statements.FlowDecision\n  langs:\n  - csharp\n  name: FlowDecision(Activity<Boolean>)\n  nameWithType: FlowDecision.FlowDecision(Activity<Boolean>)\n  fullName: System.Activities.Statements.FlowDecision.FlowDecision(Activity<Boolean>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> class with the specified condition.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_FlowChartWithFaultHandling#3](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#3)]\"\n  syntax:\n    content: public FlowDecision (System.Activities.Activity<bool> condition);\n    parameters:\n    - id: condition\n      type: System.Activities.Activity{System.Boolean}\n      description: The condition the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> is testing.\n  overload: System.Activities.Statements.FlowDecision.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.FlowDecision.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})\n  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})'\n  parent: System.Activities.Statements.FlowDecision\n  langs:\n  - csharp\n  name: FlowDecision(Expression<Func<ActivityContext,Boolean>>)\n  nameWithType: FlowDecision.FlowDecision(Expression<Func<ActivityContext,Boolean>>)\n  fullName: System.Activities.Statements.FlowDecision.FlowDecision(Expression<Func<ActivityContext,Boolean>>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> class with the specified condition.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_FlowChartWithFaultHandling#3](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#3)]\"\n  syntax:\n    content: public FlowDecision (System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,bool>> condition);\n    parameters:\n    - id: condition\n      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}}\n      description: The condition the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> is testing.\n  overload: System.Activities.Statements.FlowDecision.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.FlowDecision.Condition\n  id: Condition\n  parent: System.Activities.Statements.FlowDecision\n  langs:\n  - csharp\n  name: Condition\n  nameWithType: FlowDecision.Condition\n  fullName: System.Activities.Statements.FlowDecision.Condition\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Specifies the condition the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> is testing.\n  remarks: If the condition evaluates to `true`, the <xref:System.Activities.Statements.FlowNode> in the <xref:System.Activities.Statements.FlowDecision.True%2A> property is executed. Otherwise the <xref:System.Activities.Statements.FlowNode> in the <xref:System.Activities.Statements.FlowDecision.False%2A> property is executed.\n  example:\n  - \"The following code sample demonstrates using the Condition property of a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_FlowChartWithFaultHandling#3](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#3)]\"\n  syntax:\n    content: public System.Activities.Activity<bool> Condition { get; set; }\n    return:\n      type: System.Activities.Activity{System.Boolean}\n      description: A value expression that represents the condition.\n  overload: System.Activities.Statements.FlowDecision.Condition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.FlowDecision.DisplayName\n  id: DisplayName\n  parent: System.Activities.Statements.FlowDecision\n  langs:\n  - csharp\n  name: DisplayName\n  nameWithType: FlowDecision.DisplayName\n  fullName: System.Activities.Statements.FlowDecision.DisplayName\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The name of this flow decision to be displayed in the activity designer.\n  syntax:\n    content: public string DisplayName { get; set; }\n    return:\n      type: System.String\n      description: The name of the flow decision.\n  overload: System.Activities.Statements.FlowDecision.DisplayName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.FlowDecision.False\n  id: \"False\"\n  parent: System.Activities.Statements.FlowDecision\n  langs:\n  - csharp\n  name: \"False\"\n  nameWithType: FlowDecision.False\n  fullName: System.Activities.Statements.FlowDecision.False\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the <xref href=\"System.Activities.Statements.FlowNode\"></xref> that is executed when the condition evaluates to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates setting the False property of a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_FlowChartWithFaultHandling#3](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#3)]\"\n  syntax:\n    content: public System.Activities.Statements.FlowNode False { get; set; }\n    return:\n      type: System.Activities.Statements.FlowNode\n      description: The activity that is executed when the condition evaluates to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Statements.FlowDecision.False*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.FlowDecision.True\n  id: \"True\"\n  parent: System.Activities.Statements.FlowDecision\n  langs:\n  - csharp\n  name: \"True\"\n  nameWithType: FlowDecision.True\n  fullName: System.Activities.Statements.FlowDecision.True\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the <xref href=\"System.Activities.Statements.FlowNode\"></xref> that is executed when the condition evaluates to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates setting the True property of a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_FlowChartWithFaultHandling#3](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#3)]\"\n  syntax:\n    content: public System.Activities.Statements.FlowNode True { get; set; }\n    return:\n      type: System.Activities.Statements.FlowNode\n      description: The activity to execute when the condition evaluates to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Activities.Statements.FlowDecision.True*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.Statements.FlowNode\n  isExternal: false\n  name: System.Activities.Statements.FlowNode\n- uid: System.Activities.Statements.FlowDecision.#ctor\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: FlowDecision()\n  nameWithType: FlowDecision.FlowDecision()\n  fullName: System.Activities.Statements.FlowDecision.FlowDecision()\n- uid: System.Activities.Statements.FlowDecision.#ctor(System.Activities.Activity{System.Boolean})\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: FlowDecision(Activity<Boolean>)\n  nameWithType: FlowDecision.FlowDecision(Activity<Boolean>)\n  fullName: System.Activities.Statements.FlowDecision.FlowDecision(Activity<Boolean>)\n- uid: System.Activities.Activity{System.Boolean}\n  parent: System.Activities\n  isExternal: false\n  name: Activity<Boolean>\n  nameWithType: Activity<Boolean>\n  fullName: System.Activities.Activity<System.Boolean>\n  spec.csharp:\n  - uid: System.Activities.Activity`1\n    name: Activity\n    nameWithType: Activity\n    fullName: Activity<System.Boolean>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.FlowDecision.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: FlowDecision(Expression<Func<ActivityContext,Boolean>>)\n  nameWithType: FlowDecision.FlowDecision(Expression<Func<ActivityContext,Boolean>>)\n  fullName: System.Activities.Statements.FlowDecision.FlowDecision(Expression<Func<ActivityContext,Boolean>>)\n- uid: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<ActivityContext,Boolean>>\n  nameWithType: Expression<Func<ActivityContext,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<System.Activities.ActivityContext,System.Boolean>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<System.Activities.ActivityContext,System.Boolean>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<System.Activities.ActivityContext,System.Boolean>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.ActivityContext\n    name: ActivityContext\n    nameWithType: ActivityContext\n    fullName: ActivityContext\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.FlowDecision.Condition\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: Condition\n  nameWithType: FlowDecision.Condition\n  fullName: System.Activities.Statements.FlowDecision.Condition\n- uid: System.Activities.Statements.FlowDecision.DisplayName\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: DisplayName\n  nameWithType: FlowDecision.DisplayName\n  fullName: System.Activities.Statements.FlowDecision.DisplayName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Statements.FlowDecision.False\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: \"False\"\n  nameWithType: FlowDecision.False\n  fullName: System.Activities.Statements.FlowDecision.False\n- uid: System.Activities.Statements.FlowDecision.True\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: \"True\"\n  nameWithType: FlowDecision.True\n  fullName: System.Activities.Statements.FlowDecision.True\n- uid: System.Activities.Statements.FlowDecision.#ctor*\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: FlowDecision\n  nameWithType: FlowDecision.FlowDecision\n- uid: System.Activities.Statements.FlowDecision.Condition*\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: Condition\n  nameWithType: FlowDecision.Condition\n- uid: System.Activities.Statements.FlowDecision.DisplayName*\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: DisplayName\n  nameWithType: FlowDecision.DisplayName\n- uid: System.Activities.Statements.FlowDecision.False*\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: \"False\"\n  nameWithType: FlowDecision.False\n- uid: System.Activities.Statements.FlowDecision.True*\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: \"True\"\n  nameWithType: FlowDecision.True\n"}