{"nodes":[{"pos":[1489,1660],"content":"Represents a token resolver that can resolve tokens of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> against a specified X.509 certificate store.","needQuote":true,"needEscape":true,"source":"Represents a token resolver that can resolve tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> against a specified X.509 certificate store."},{"pos":[3674,3836],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a default X.509 certificate store.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"></xref> class with a default X.509 certificate store."},{"pos":[3848,4035],"content":"The default store location is <xref:System.Security.Cryptography.X509Certificates.StoreLocation>. The default store name is <xref:System.Security.Cryptography.X509Certificates.StoreName>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default store location is <xref:System.Security.Cryptography.X509Certificates.StoreLocation>. The default store name is <xref:System.Security.Cryptography.X509Certificates.StoreName>.","pos":[0,187],"nodes":[{"content":"The default store location is &lt;xref:System.Security.Cryptography.X509Certificates.StoreLocation&gt;.","pos":[0,97],"source":"The default store location is <xref:System.Security.Cryptography.X509Certificates.StoreLocation>."},{"content":"The default store name is &lt;xref:System.Security.Cryptography.X509Certificates.StoreName&gt;.","pos":[98,187],"source":" The default store name is <xref:System.Security.Cryptography.X509Certificates.StoreName>."}]}]},{"pos":[5079,5295],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the X.509 certificate store with the specified location and name to resolve tokens.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"></xref> class that uses the X.509 certificate store with the specified location and name to resolve tokens."},{"pos":[5627,5710],"content":"One of the enumeration values that specify the name of the X.509 certificate store.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specify the name of the X.509 certificate store.","pos":[0,83]}]},{"pos":[5826,5913],"content":"One of the enumeration values that specify the location of the X.509 certificate store.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specify the location of the X.509 certificate store.","pos":[0,87]}]},{"pos":[6777,6993],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the X.509 certificate store with the specified location and name to resolve tokens.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"></xref> class that uses the X.509 certificate store with the specified location and name to resolve tokens."},{"pos":[7234,7274],"content":"The name of the X.509 certificate store.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the X.509 certificate store.","pos":[0,40]}]},{"pos":[7390,7476],"content":"One of the enumeration values that specify the location of an X.509 certificate store.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specify the location of an X.509 certificate store.","pos":[0,86]}]},{"pos":[7674,7784],"content":"<ph id=\"ph1\">&lt;code&gt;storeLocation&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string.","needQuote":true,"needEscape":true,"source":"<code>storeLocation</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string."},{"pos":[8285,8370],"content":"Gets the location of the X.509 certificate store that is used by this token resolver.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the location of the X.509 certificate store that is used by this token resolver.","pos":[0,85]}]},{"pos":[8587,8673],"content":"One of the enumeration values that specify the location of an X.509 certificate store.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specify the location of an X.509 certificate store.","pos":[0,86]}]},{"pos":[9260,9341],"content":"Gets the name of the X.509 certificate store that is used by this token resolver.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the X.509 certificate store that is used by this token resolver.","pos":[0,81]}]},{"pos":[9455,9531],"content":"The name of the X.509 certificate store that is used by this token resolver.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the X.509 certificate store that is used by this token resolver.","pos":[0,76]}]},{"pos":[10511,10585],"content":"Attempts to resolve the specified key identifier clause to a security key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to resolve the specified key identifier clause to a security key.","pos":[0,74]}]},{"pos":[10920,10985],"content":"The key identifier clause from which to resolve the security key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause from which to resolve the security key.","pos":[0,65]}]},{"pos":[11071,11216],"content":"When this method returns, contains the security key that was resolved from the key identifier clause. This parameter is treated as uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains the security key that was resolved from the key identifier clause. This parameter is treated as uninitialized.","pos":[0,145],"nodes":[{"content":"When this method returns, contains the security key that was resolved from the key identifier clause.","pos":[0,101]},{"content":"This parameter is treated as uninitialized.","pos":[102,145]}]}]},{"pos":[11275,11465],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key identifier clause is successfully resolved; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key identifier clause is successfully resolved; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11683,11780],"content":"<ph id=\"ph1\">&lt;code&gt;keyIdentifierClause&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>keyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12608,12666],"content":"Resolves the specified key identifier to a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resolves the specified key identifier to a security token.","pos":[0,58]}]},{"pos":[12975,13005],"content":"The key identifier to resolve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier to resolve.","pos":[0,30]}]},{"pos":[13095,13235],"content":"When this method returns, contains the security token that was resolved from the key identifier. This parameter is treated as uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains the security token that was resolved from the key identifier. This parameter is treated as uninitialized.","pos":[0,140],"nodes":[{"content":"When this method returns, contains the security token that was resolved from the key identifier.","pos":[0,96]},{"content":"This parameter is treated as uninitialized.","pos":[97,140]}]}]},{"pos":[13294,13477],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key identifier is successfully resolved; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key identifier is successfully resolved; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13689,13780],"content":"<ph id=\"ph1\">&lt;code&gt;keyIdentifier&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>keyIdentifier</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14638,14703],"content":"Resolves the specified key identifier clause to a security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resolves the specified key identifier clause to a security token.","pos":[0,65]}]},{"pos":[15036,15073],"content":"The key identifier clause to resolve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause to resolve.","pos":[0,37]}]},{"pos":[15163,15310],"content":"When this method returns, contains the security token that was resolved from the key identifier clause. This parameter is treated as uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains the security token that was resolved from the key identifier clause. This parameter is treated as uninitialized.","pos":[0,147],"nodes":[{"content":"When this method returns, contains the security token that was resolved from the key identifier clause.","pos":[0,103]},{"content":"This parameter is treated as uninitialized.","pos":[104,147]}]}]},{"pos":[15369,15559],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key identifier clause is successfully resolved; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key identifier clause is successfully resolved; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15771,15868],"content":"<ph id=\"ph1\">&lt;code&gt;keyIdentifierClause&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>keyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  id: X509CertificateStoreTokenResolver\n  children:\n  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor\n  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)\n  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)\n  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation\n  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName\n  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  langs:\n  - csharp\n  name: X509CertificateStoreTokenResolver\n  nameWithType: X509CertificateStoreTokenResolver\n  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  type: Class\n  summary: Represents a token resolver that can resolve tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> against a specified X.509 certificate store.\n  syntax:\n    content: 'public class X509CertificateStoreTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Selectors.SecurityTokenResolver\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  langs:\n  - csharp\n  name: X509CertificateStoreTokenResolver()\n  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver()\n  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"></xref> class with a default X.509 certificate store.\n  remarks: The default store location is <xref:System.Security.Cryptography.X509Certificates.StoreLocation>. The default store name is <xref:System.Security.Cryptography.X509Certificates.StoreName>.\n  syntax:\n    content: public X509CertificateStoreTokenResolver ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)\n  id: '#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)'\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  langs:\n  - csharp\n  name: X509CertificateStoreTokenResolver(StoreName,StoreLocation)\n  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(StoreName,StoreLocation)\n  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(StoreName,StoreLocation)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"></xref> class that uses the X.509 certificate store with the specified location and name to resolve tokens.\n  syntax:\n    content: public X509CertificateStoreTokenResolver (System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation);\n    parameters:\n    - id: storeName\n      type: System.Security.Cryptography.X509Certificates.StoreName\n      description: One of the enumeration values that specify the name of the X.509 certificate store.\n    - id: storeLocation\n      type: System.Security.Cryptography.X509Certificates.StoreLocation\n      description: One of the enumeration values that specify the location of the X.509 certificate store.\n  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)\n  id: '#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)'\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  langs:\n  - csharp\n  name: X509CertificateStoreTokenResolver(String,StoreLocation)\n  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(String,StoreLocation)\n  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(String,StoreLocation)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"></xref> class that uses the X.509 certificate store with the specified location and name to resolve tokens.\n  syntax:\n    content: public X509CertificateStoreTokenResolver (string storeName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation);\n    parameters:\n    - id: storeName\n      type: System.String\n      description: The name of the X.509 certificate store.\n    - id: storeLocation\n      type: System.Security.Cryptography.X509Certificates.StoreLocation\n      description: One of the enumeration values that specify the location of an X.509 certificate store.\n  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>storeLocation</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation\n  id: StoreLocation\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  langs:\n  - csharp\n  name: StoreLocation\n  nameWithType: X509CertificateStoreTokenResolver.StoreLocation\n  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the location of the X.509 certificate store that is used by this token resolver.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.StoreLocation StoreLocation { get; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.StoreLocation\n      description: One of the enumeration values that specify the location of an X.509 certificate store.\n  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName\n  id: StoreName\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  langs:\n  - csharp\n  name: StoreName\n  nameWithType: X509CertificateStoreTokenResolver.StoreName\n  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the name of the X.509 certificate store that is used by this token resolver.\n  syntax:\n    content: public string StoreName { get; }\n    return:\n      type: System.String\n      description: The name of the X.509 certificate store that is used by this token resolver.\n  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  id: TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  langs:\n  - csharp\n  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)\n  nameWithType: X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)\n  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Attempts to resolve the specified key identifier clause to a security key.\n  syntax:\n    content: protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause from which to resolve the security key.\n    - id: key\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: When this method returns, contains the security key that was resolved from the key identifier clause. This parameter is treated as uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key identifier clause is successfully resolved; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  langs:\n  - csharp\n  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)\n  nameWithType: X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)\n  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Resolves the specified key identifier to a security token.\n  syntax:\n    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: keyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: The key identifier to resolve.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: When this method returns, contains the security token that was resolved from the key identifier. This parameter is treated as uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key identifier is successfully resolved; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyIdentifier</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  langs:\n  - csharp\n  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)\n  nameWithType: X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)\n  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Resolves the specified key identifier clause to a security token.\n  syntax:\n    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause to resolve.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: When this method returns, contains the security token that was resolved from the key identifier clause. This parameter is treated as uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key identifier clause is successfully resolved; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyIdentifierClause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: System.IdentityModel.Selectors.SecurityTokenResolver\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: X509CertificateStoreTokenResolver()\n  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver()\n  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver()\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: X509CertificateStoreTokenResolver(StoreName,StoreLocation)\n  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(StoreName,StoreLocation)\n  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(StoreName,StoreLocation)\n- uid: System.Security.Cryptography.X509Certificates.StoreName\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: StoreName\n  nameWithType: StoreName\n  fullName: System.Security.Cryptography.X509Certificates.StoreName\n- uid: System.Security.Cryptography.X509Certificates.StoreLocation\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: StoreLocation\n  nameWithType: StoreLocation\n  fullName: System.Security.Cryptography.X509Certificates.StoreLocation\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: X509CertificateStoreTokenResolver(String,StoreLocation)\n  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(String,StoreLocation)\n  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(String,StoreLocation)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: StoreLocation\n  nameWithType: X509CertificateStoreTokenResolver.StoreLocation\n  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: StoreName\n  nameWithType: X509CertificateStoreTokenResolver.StoreName\n  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)\n  nameWithType: X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)\n  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.SecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKey\n  nameWithType: SecurityKey\n  fullName: System.IdentityModel.Tokens.SecurityKey\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)\n  nameWithType: X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)\n  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)\n  nameWithType: X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)\n  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor*\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: X509CertificateStoreTokenResolver\n  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation*\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: StoreLocation\n  nameWithType: X509CertificateStoreTokenResolver.StoreLocation\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName*\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: StoreName\n  nameWithType: X509CertificateStoreTokenResolver.StoreName\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore*\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKeyCore\n  nameWithType: X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore*\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore\n  nameWithType: X509CertificateStoreTokenResolver.TryResolveTokenCore\n"}