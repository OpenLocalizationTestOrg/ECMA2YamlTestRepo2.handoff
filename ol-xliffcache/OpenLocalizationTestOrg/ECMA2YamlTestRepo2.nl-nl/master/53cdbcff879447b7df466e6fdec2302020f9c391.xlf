<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53cdbcff879447b7df466e6fdec2302020f9c391</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.VisualBasic.Interaction.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2722c7d5bb2e734df1c086b771341fa06445aef4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15d5936509635708e53a79258d3df560b09b0391</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Interaction" name="Interaction" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> module contains procedures used to interact with objects, applications, and systems.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This module supports the Visual Basic language keywords and run-time library members that run other programs, call a method or property, sound a beep from the computer, provide a command-line string, manipulate COM objects, and control dialog boxes.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Activates an application that is already running.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use <ph id="ph1">`AppActivate`</ph> to bring an application's active window into focus.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You might not have a handle or a reference to the active window, or even know which window is active at a given moment.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>In such a case, you cannot use the &lt;xref:System.Windows.Forms.Control.Focus%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`AppActivate`</ph> function changes the focus to the named application or window but does not affect whether it is maximized or minimized.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Focus moves away from the activated application window when the user takes some action to change the focus or close the window.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">`Shell`</ph> function to start an application and set the window style.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the <ph id="ph1">`Title`</ph> parameter, <ph id="ph2">`AppActivate`</ph> uses a case-insensitive comparison but otherwise requires an exact match with the contents of the title bar.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>It first looks through the top-level windows and then through the child windows.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it cannot find a match, it throws an &lt;xref:System.ArgumentException&gt;.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use <ph id="ph1">`AppActivate`</ph> only with processes that own windows.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most console applications do not own windows, which means that they do not appear in the list of processes that <ph id="ph1">`AppActivate`</ph> searches.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>When running from a console application, the system creates a separate process to run the application and returns the output to the console process.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, when you request the current process ID, you get the process ID of this separate process, rather than the console application's process ID.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>At run time, the <ph id="ph1">`AppActivate`</ph> function activates any running application with a title that matches <ph id="ph2">`Title`</ph> or with a process ID that matches <ph id="ph3">`ProcessId`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no exact match, it activates any application whose title string ends with <ph id="ph1">`Title`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is more than one application named <ph id="ph1">`Title`</ph>, the <ph id="ph2">`AppActivate`</ph> function arbitrarily chooses one to activate.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`AppActivate`</ph> function requires <ph id="ph3">`UIPermission`</ph> at the &lt;xref:System.Security.Permissions.UIPermissionWindow&gt; level, which may affect its execution in partial-trust situations.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Security.Permissions.UIPermission&gt; .</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specifying the Win32 process ID number assigned to this process.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can use the ID returned by the &lt;xref:Microsoft.VisualBasic.Interaction.Shell*&gt;, provided it is not zero.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Activates an application that is already running.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use <ph id="ph1">`AppActivate`</ph> to bring an application's active window into focus.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>You might not have a handle or a reference to the active window, or even know which window is active at a given moment.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>In such a case, you cannot use the &lt;xref:System.Windows.Forms.Control.Focus%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`AppActivate`</ph> function changes the focus to the named application or window but does not affect whether it is maximized or minimized.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Focus moves away from the activated application window when the user takes some action to change the focus or close the window.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">`Shell`</ph> function to start an application and set the window style.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the <ph id="ph1">`Title`</ph> parameter, <ph id="ph2">`AppActivate`</ph> uses a case-insensitive comparison but otherwise requires an exact match with the contents of the title bar.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>It first looks through the top-level windows and then through the child windows.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it cannot find a match, it throws an &lt;xref:System.ArgumentException&gt;.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use <ph id="ph1">`AppActivate`</ph> only with processes that own windows.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most console applications do not own windows, which means that they do not appear in the list of processes that <ph id="ph1">`AppActivate`</ph> searches.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>When running from a console application, the system creates a separate process to run the application and returns the output to the console process.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, when you request the current process ID, you get the process ID of this separate process, rather than the console application's process ID.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>At run time, the <ph id="ph1">`AppActivate`</ph> function activates any running application with a title that matches <ph id="ph2">`Title`</ph> or with a process ID that matches <ph id="ph3">`ProcessId`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no exact match, it activates any application whose title string ends with <ph id="ph1">`Title`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is more than one application named <ph id="ph1">`Title`</ph>, the <ph id="ph2">`AppActivate`</ph> function arbitrarily chooses one to activate.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`AppActivate`</ph> function requires <ph id="ph3">`UIPermission`</ph> at the &lt;xref:System.Security.Permissions.UIPermissionWindow&gt; level, which may affect its execution in partial-trust situations.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Security.Permissions.UIPermission&gt; .</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression specifying the title in the title bar of the application you want to activate.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You can use the title assigned to the application when it was launched.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Sounds a tone through the computer's speaker.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The pitch and duration of the beep depend on your hardware and system software and therefore vary among computers.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`Beep`</ph> function requires <ph id="ph3">`UIPermission`</ph> at the &lt;xref:System.Security.Permissions.UIPermissionWindow&gt; level, which may affect its execution in partial-trust situations.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Security.Permissions.UIPermission&gt;.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Executes a method on an object, or sets or returns a property on an object.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`CallByName`</ph> function is used at runtime to get a property, set a property, or invoke a method.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A pointer to the object exposing the property or method.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A string expression containing the name of the property or method on the object.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>An enumeration member of type <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.CallType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the type of procedure being called.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The value of <bpt id="p1">&lt;xref uid="langword_csharp_CallType" name="CallType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can be <bpt id="p2">&lt;xref uid="langword_csharp_Method" name="Method" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_Get" name="Get" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, or <bpt id="p4">&lt;xref uid="langword_csharp_Set" name="Set" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_ParamArray" name="ParamArray" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A parameter array containing the arguments to be passed to the property or method being called.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Executes a method on an object, or sets or returns a property on an object.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Invalid <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">UseCallType</ph><ept id="p1">&lt;/code&gt;</ept> value; must be <bpt id="p2">&lt;xref uid="langword_csharp_Method" name="Method" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_Get" name="Get" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, or <bpt id="p4">&lt;xref uid="langword_csharp_Set" name="Set" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Selects and returns a value from a list of arguments.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Choose`</ph> function returns a member of the list passed in <ph id="ph2">`Choice()`</ph>, based on the value of <ph id="ph3">`Index`</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first member of the list is selected when <ph id="ph1">`Index`</ph> is 1.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The last member of the list is selected when <ph id="ph1">`Index`</ph> is <ph id="ph2">`UBound`</ph>(<ph id="ph3">`Choice()`</ph>).</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Index`</ph> is outside these limits, <ph id="ph2">`Choose`</ph> returns <ph id="ph3">`Nothing`</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Index`</ph> is not a whole number, it is rounded to the nearest whole number before being evaluated.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use <ph id="ph1">`Choose`</ph> to look up a value in a list of possibilities.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The expressions in the argument list can include function calls.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>As part of preparing the argument list for the call to <ph id="ph1">`Choose`</ph>, the Visual Basic compiler calls every function in every expression.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that you cannot rely on a particular function not being called if a different expression is selected by <ph id="ph1">`Index`</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Numeric expression that results in a value between 1 and the number of elements passed in the <ph id="ph1">`Choice`</ph> argument.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter array.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You can supply either a single variable or an expression that evaluates to the <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> data type, to a list of <bpt id="p2">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> variables or expressions separated by commas, or to a single-dimensional array of <bpt id="p3">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> elements.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Selects and returns a value from a list of arguments.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Returns the argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature provides greater productivity and performance than the <bpt id="p2">&lt;xref uid="langword_csharp_Command " name="Command " href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>function.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs*&gt;.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the arguments are returned, you can search for common delimiters, such as spaces, backward or forward slashes, hyphens, or quotation marks, to split or search the string for individual parameters.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>For applications developed with Visual Basic and compiled to an .exe file, the <ph id="ph1">`Command`</ph> function returns any arguments that appear after the name of the application on the command line, in this form: <ph id="ph2">`MyApp(cmdlineargs)`</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Returns the argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature provides greater productivity and performance than the <bpt id="p2">&lt;xref uid="langword_csharp_Command " name="Command " href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>function.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs*&gt;.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Creates and returns a reference to a COM object.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_CreateObject" name="CreateObject" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The program ID of the object to create.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The name of the network server where the object will be created.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`ServerName`</ph> is an empty string (""), the local computer is used.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Creates and returns a reference to a COM object.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_CreateObject" name="CreateObject" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Server is unavailable</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>No object of the specified type exists</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Deletes a section or key setting from an application's entry in the Windows registry.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you greater productivity and performance in registry operations than the <bpt id="p2">&lt;xref uid="langword_csharp_DeleteSetting " name="DeleteSetting " href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>function.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.Devices.ServerComputer.Registry*&gt; .</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression containing the name of the application or project to which the section or key setting applies.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression containing the name of the section from which the key setting is being deleted.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If only <ph id="ph1">`AppName`</ph> and <ph id="ph2">`Section`</ph> are provided, the specified section is deleted along with all related key settings.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression containing the name of the key setting being deleted.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>User is not logged in.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Returns the string associated with an operating-system environment variable.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Expression`</ph> contains a string, the &lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt; function returns the text assigned to the specified environment string—that is, the text following the equal sign (=) in the environment-string table for that environment variable.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the string in <ph id="ph1">`Expression`</ph> cannot be found in the environment-string table, a zero-length string ("") is returned.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Expression`</ph> contains an integer, the string occupying that numeric position in the environment-string table is returned.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, &lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt; returns all of the text, including the name of the environment variable.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no environment string in the specified position, &lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt; returns a zero-length string.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The &lt;xref:Microsoft.VisualBasic.Interaction.Environ%2A&gt; function requires environment permission, which might affect its execution in partial-trust situations.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Security.Permissions.SecurityPermission&gt; and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Returns the string associated with an operating-system environment variable.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Expression&lt;/code&gt;</ph> is missing.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Returns the string associated with an operating-system environment variable.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Expression`</ph> contains a string, the Environ function returns the text assigned to the specified environment string—that is, the text following the equal sign (=) in the environment-string table for that environment variable.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the string in <ph id="ph1">`Expression`</ph> cannot be found in the environment-string table, a zero-length string ("") is returned.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Expression`</ph> contains an integer, the string occupying that numeric position in the environment-string table is returned.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, Environ returns all of the text, including the name of the environment variable.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no environment string in the specified position, Environ returns a zero-length string.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The Environ function requires environment permission, which might affect its execution in partial-trust situations.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Security.Permissions.SecurityPermission&gt; and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Returns the string associated with an operating-system environment variable.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Expression&lt;/code&gt;</ph> is missing.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Returns a list of key settings and their respective values (originally created with <bpt id="p1">&lt;xref uid="langword_csharp_SaveSetting" name="SaveSetting" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) from an application's entry in the Windows registry.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Using the <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you greater productivity and performance in registry operations than <bpt id="p2">&lt;xref uid="langword_csharp_GetAllSettings" name="GetAllSettings" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.Devices.ServerComputer.Registry*&gt;.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression containing the name of the application or project whose key settings are requested.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression containing the name of the section whose key settings are requested.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_GetAllSettings" name="GetAllSettings" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> returns an object that contains a two-dimensional array of strings.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The strings contain all the key settings in the specified section, plus their corresponding values.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Returns a list of key settings and their respective values (originally created with <bpt id="p1">&lt;xref uid="langword_csharp_SaveSetting" name="SaveSetting" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) from an application's entry in the Windows registry.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Using the <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you greater productivity and performance in registry operations than <bpt id="p2">&lt;xref uid="langword_csharp_GetAllSettings" name="GetAllSettings" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.Devices.ServerComputer.Registry*&gt;.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>User is not logged in.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Returns a reference to an object provided by a COM component.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The full path and name of the file containing the object to retrieve.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`PathName`</ph> is omitted, <ph id="ph2">`Class`</ph> is required.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Required if <ph id="ph1">`PathName`</ph> is not supplied.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>A string representing the class of the object.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Class`</ph> argument has the following syntax and parts:       <ph id="ph2">`appname`</ph> <ph id="ph3">`.`</ph> <ph id="ph4">`objecttype`</ph>       [1|1] Parameter       [1|2] Description       [2|1] <ph id="ph5">`appname`</ph>       [2|2] Required.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The name of the application providing the object.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>[3|1] <ph id="ph1">`objecttype`</ph>       [3|2] Required.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The type or class of object to create.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Returns a reference to an object provided by a COM component.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>No object of the specified class type exists.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>No object with the specified path and file name exists.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Returns a key setting value from an application's entry in the Windows registry.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you greater productivity and performance in registry operations than <bpt id="p2">&lt;xref uid="langword_csharp_GetAllSettings" name="GetAllSettings" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.Devices.ServerComputer.Registry*&gt;.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression containing the name of the application or project whose key setting is requested.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression containing the name of the section in which the key setting is found.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression containing the name of the key setting to return.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Expression containing the value to return if no value is set in the <ph id="ph1">`Key`</ph> setting.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>If omitted, <ph id="ph1">`Default`</ph> is assumed to be a zero-length string ("").</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Returns a key setting value from an application's entry in the Windows registry.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you greater productivity and performance in registry operations than <bpt id="p2">&lt;xref uid="langword_csharp_GetAllSettings" name="GetAllSettings" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>One or more arguments are not <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expressions, or user is not logged in.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Returns one of two objects, depending on the evaluation of an expression.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`IIf`</ph> function provides a counterpart for the ternary <bpt id="p1">[</bpt>Conditional Operator: ? :<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> in Visual C++.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The expression you want to evaluate.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Returned if <ph id="ph1">`Expression`</ph> evaluates to <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Returned if <ph id="ph1">`Expression`</ph> evaluates to <bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Returns one of two objects, depending on the evaluation of an expression.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user clicks <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept>, a zero-length string is returned.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify more than the first argument, you must use the <ph id="ph1">`InputBox`</ph> function in an expression.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you omit any positional arguments, you must retain the corresponding comma delimiter.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`InputBox`</ph> function requires <ph id="ph3">`UIPermission`</ph> at the &lt;xref:System.Security.Permissions.UIPermissionWindow&gt; level, which may affect its execution in partial-trust situations.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see  and &lt;xref:System.Security.Permissions.UIPermission&gt; .</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Required <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression displayed as the message in the dialog box.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The maximum length of <ph id="ph1">`Prompt`</ph> is approximately 1024 characters, depending on the width of the characters used.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Prompt`</ph> consists of more than one line, you can separate the lines using a carriage return character (<bpt id="p1">&lt;xref uid="langword_csharp_Chr(" name="Chr(" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>13<bpt id="p2">&lt;xref uid="langword_csharp_)" name=")" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), a line feed character (<bpt id="p3">&lt;xref uid="langword_csharp_Chr(" name="Chr(" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>10<bpt id="p4">&lt;xref uid="langword_csharp_)" name=")" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>), or a carriage return/line feed combination (<bpt id="p5">&lt;xref uid="langword_csharp_Chr(" name="Chr(" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>13<bpt id="p6">&lt;xref uid="langword_csharp_)" name=")" href=""&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept> <ph id="ph2">&amp;amp;</ph> <bpt id="p7">&lt;xref uid="langword_csharp_Chr(" name="Chr(" href=""&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept>10<bpt id="p8">&lt;xref uid="langword_csharp_)" name=")" href=""&gt;</bpt><ept id="p8">&lt;/xref&gt;</ept>) between each line.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression displayed in the title bar of the dialog box.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`Title`</ph>, the application name is placed in the title bar.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression displayed in the text box as the default response if no other input is provided.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`DefaultResponse`</ph>, the displayed text box is empty.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Numeric expression that specifies, in twips, the distance of the left edge of the dialog box from the left edge of the screen.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`XPos`</ph>, the dialog box is centered horizontally.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Numeric expression that specifies, in twips, the distance of the upper edge of the dialog box from the top of the screen.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`YPos`</ph>, the dialog box is positioned vertically approximately one-third of the way down the screen.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Displays a message in a dialog box, waits for the user to click a button, and then returns an integer indicating which button the user clicked.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you omit any positional arguments, you must retain the corresponding comma delimiter.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the dialog box displays a <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button, pressing the ESC key has the same effect as clicking <bpt id="p2">**</bpt>Cancel<ept id="p2">**</ept>       If the dialog box contains a <bpt id="p3">**</bpt>Help<ept id="p3">**</ept> button, context-sensitive Help is provided for the dialog box.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, no value is returned until one of the other buttons is chosen.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Windows Form applications, choosing the <bpt id="p1">**</bpt>Help<ept id="p1">**</ept> button executes the &lt;xref:System.Windows.Forms.Control.HelpRequested&gt; event for the form.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`MsgBox`</ph> function requires <ph id="ph3">`UIPermission`</ph> at the &lt;xref:System.Security.Permissions.UIPermissionWindow&gt; level, which may affect its execution in partial-trust situations.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Security.Permissions.UIPermission&gt;.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`MsgBoxStyle`</ph> enumeration values are listed in the following table.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>||||   |-|-|-|   |Member|Value|Description|   |<ph id="ph1">`OKOnly`</ph>|0|Displays OK button only.|   |<ph id="ph2">`OKCancel`</ph>|1|Displays OK and Cancel buttons.|   |<ph id="ph3">`AbortRetryIgnore`</ph>|2|Displays Abort, Retry, and Ignore buttons.|   |<ph id="ph4">`YesNoCancel`</ph>|3|Displays Yes, No, and Cancel buttons.|   |<ph id="ph5">`YesNo`</ph>|4|Displays Yes and No buttons.|   |<ph id="ph6">`RetryCancel`</ph>|5|Displays Retry and Cancel buttons.|   |<ph id="ph7">`Critical`</ph>|16|Displays Critical Message icon.|   |<ph id="ph8">`Question`</ph>|32|Displays Warning Query icon.|   |<ph id="ph9">`Exclamation`</ph>|48|Displays Warning Message icon.|   |<ph id="ph10">`Information`</ph>|64|Displays Information Message icon.|   |<ph id="ph11">`DefaultButton1`</ph>|0|First button is default.|   |<ph id="ph12">`DefaultButton2`</ph>|256|Second button is default.|   |<ph id="ph13">`DefaultButton3`</ph>|512|Third button is default.|   |<ph id="ph14">`ApplicationModal`</ph>|0|Application is modal.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user must respond to the message box before continuing work in the current application.|   |<ph id="ph1">`SystemModal`</ph>|4096|System is modal.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>All applications are suspended until the user responds to the message box.|   |<ph id="ph1">`MsgBoxSetForeground`</ph>|65536|Specifies the message box window as the foreground window.|   |<ph id="ph2">`MsgBoxRight`</ph>|524288|Text is right-aligned.|   |<ph id="ph3">`MsgBoxRtlReading`</ph>|1048576|Specifies text should appear as right-to-left reading on Hebrew and Arabic systems.|       The first group of values (0–5) describes the number and type of buttons displayed in the dialog box.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>The second group (16, 32, 48, 64) describes the icon style.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>The third group (0, 256, 512) determines which button is the default.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>The fourth group (0, 4096) determines the modality of the message box, and the fifth group specifies whether or not the message box window is the foreground window, along with the alignment and direction of the text.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>When adding numbers to create a final value for the <ph id="ph1">`Buttons`</ph> argument, use only one number from each group.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression displayed as the message in the dialog box.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The maximum length of <ph id="ph1">`Prompt`</ph> is approximately 1024 characters, depending on the width of the characters used.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Prompt`</ph> consists of more than one line, you can separate the lines using a carriage return character (<bpt id="p1">&lt;xref uid="langword_csharp_Chr(" name="Chr(" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>13<bpt id="p2">&lt;xref uid="langword_csharp_)" name=")" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>), a line feed character (<bpt id="p3">&lt;xref uid="langword_csharp_Chr(" name="Chr(" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>10<bpt id="p4">&lt;xref uid="langword_csharp_)" name=")" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>), or a carriage return/linefeed character combination (<bpt id="p5">&lt;xref uid="langword_csharp_Chr(" name="Chr(" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>13<bpt id="p6">&lt;xref uid="langword_csharp_)" name=")" href=""&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept> <ph id="ph2">&amp;amp;</ph> <bpt id="p7">&lt;xref uid="langword_csharp_Chr(" name="Chr(" href=""&gt;</bpt><ept id="p7">&lt;/xref&gt;</ept>10<bpt id="p8">&lt;xref uid="langword_csharp_)" name=")" href=""&gt;</bpt><ept id="p8">&lt;/xref&gt;</ept>) between each line.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Numeric expression that is the sum of values specifying the number and type of buttons to display, the icon style to use, the identity of the default button, and the modality of the message box.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`Buttons`</ph>, the default value is zero.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression displayed in the title bar of the dialog box.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>If you omit <ph id="ph1">`Title`</ph>, the application name is placed in the title bar.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Constant</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>2</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>3</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>4</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>5</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>6</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>7</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Prompt&lt;/code&gt;</ph> is not a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression, or <ph id="ph2">&lt;code&gt;Title&lt;/code&gt;</ph> is invalid.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Process is not running in User Interactive mode.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>One or more parameters not a member of <bpt id="p1">&lt;xref uid="langword_csharp_MsgBoxResult" name="MsgBoxResult" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_MsgBoxStyle" name="MsgBoxStyle" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> enumeration.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Returns a string representing the calculated range that contains a number.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Partition`</ph> function calculates a set of numeric ranges, each containing the number of values specified by <ph id="ph2">`Interval`</ph>.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first range begins at <ph id="ph1">`Start`</ph>, and the last range ends at <ph id="ph2">`Stop`</ph>.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Partition`</ph> function then identifies which range contains <ph id="ph2">`Number`</ph> and returns a string describing that range.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>The range is represented in the string as "<bpt id="p1">*</bpt>lowervalue<ept id="p1">*</ept>:<bpt id="p2">*</bpt>uppervalue<ept id="p2">*</ept>", where the low end of the range (<bpt id="p3">*</bpt>lowervalue<ept id="p3">*</ept>) is separated from the high end (<bpt id="p4">*</bpt>uppervalue<ept id="p4">*</ept>) by a colon (:).</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>If necessary, the <ph id="ph1">`Partition`</ph> function inserts leading spaces before <bpt id="p1">*</bpt>lowervalue<ept id="p1">*</ept> and <bpt id="p2">*</bpt>uppervalue<ept id="p2">*</ept> so that they both have the same number of characters as the string representation of the value (<ph id="ph2">`Stop`</ph> + 1).</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>This ensures that if you use the output of the <ph id="ph1">`Partition`</ph> function with several values of <ph id="ph2">`Number`</ph>, the resulting text will be handled properly during any subsequent sort operation.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows some sample strings for ranges calculated using three sets of <ph id="ph1">`Start`</ph>, <ph id="ph2">`Stop`</ph>, and <ph id="ph3">`Interval`</ph>.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>The "First range" and "Last range" columns show the lowest and highest ranges possible given the values of <ph id="ph1">`Start`</ph> and <ph id="ph2">`Stop`</ph>.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>The "Before first range" and "After last range" columns show the strings returned for values of <ph id="ph1">`Number`</ph> less than <ph id="ph2">`Start`</ph> and greater than <ph id="ph3">`Stop`</ph>, respectively.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>||||||||   |-|-|-|-|-|-|-|   |<ph id="ph1">`Start`</ph><ph id="ph2">|</ph><ph id="ph3">`Stop`</ph><ph id="ph4">|</ph><ph id="ph5">`Interval`</ph>|Before first range|First range|Last range|After last range|   |0|99|5|"   : -1"|"  0:  4"|" 95: 99"|"100:   "|   |20|199|10|"   : 19"|" 20: 29"|"190:199"|"200:   "|   |100|1010|20|"    : 99"|" 100: 119"|"1000:1010"|"1011:    "|       In the preceding table, the third line shows the result when <ph id="ph6">`Start`</ph> and <ph id="ph7">`Stop`</ph> define a set of numbers that cannot be evenly divided by <ph id="ph8">`Interval`</ph>.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>The last range ends at <ph id="ph1">`Stop`</ph>, making it only 11 numbers long, even though <ph id="ph2">`Interval`</ph> is 20.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Interval`</ph> is 1, the range is "<ph id="ph2">`Number`</ph>:<ph id="ph3">`Number`</ph>", regardless of the <ph id="ph4">`Start`</ph> and <ph id="ph5">`Stop`</ph> arguments.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">`Number`</ph> is 267, <ph id="ph2">`Stop`</ph> is 1000, and <ph id="ph3">`Interval`</ph> is 1, <ph id="ph4">`Partition`</ph> returns " 267: 267".</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Partition`</ph> can be useful when constructing database queries.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create a SELECT query that shows how many orders occur within various value ranges, for example with invoice values from 1 to 1000, 1001 to 2000, and so on.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Whole number that you want to locate within one of the calculated ranges.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Whole number that indicates the start of the set of calculated ranges.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Start`</ph> cannot be less than 0.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Whole number that indicates the end of the set of calculated ranges.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Stop`</ph> cannot be less than or equal to <ph id="ph2">`Start`</ph>.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Whole number that indicates the size of each range calculated between <ph id="ph1">`Start`</ph> and <ph id="ph2">`Stop`</ph>.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Interval`</ph> cannot be less than 1.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Returns a string representing the calculated range that contains a number.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Start&lt;/code&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0, <ph id="ph3">&lt;code&gt;Stop&lt;/code&gt;</ph> <ph id="ph4">&amp;lt;</ph><ph id="ph5">= </ph><ph id="ph6">&lt;code&gt;Start&lt;/code&gt;</ph>, or <ph id="ph7">&lt;code&gt;Interval&lt;/code&gt;</ph> <ph id="ph8">&amp;lt;</ph> 1.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Saves or creates an application entry in the Windows registry.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_My" name="My" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature gives you greater productivity and performance in registry operations than <bpt id="p2">&lt;xref uid="langword_csharp_SaveSetting" name="SaveSetting" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.Devices.ServerComputer.Registry*&gt;.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression containing the name of the application or project to which the setting applies.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression containing the name of the section in which the key setting is being saved.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression containing the name of the key setting being saved.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Expression containing the value to which <ph id="ph1">`Key`</ph> is being set.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Key registry could not be created, or user is not logged in.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Runs an executable program and returns an integer containing the program's process ID if it is still running.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_AppWinStyle" name="AppWinStyle" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>A value chosen from the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.AppWinStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specifying the style of the window in which the program is to run.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Style`</ph> is omitted, <bpt id="p1">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses <bpt id="p2">&lt;xref uid="langword_csharp_AppWinStyle.MinimizedFocus" name="AppWinStyle.MinimizedFocus" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, which starts the program minimized and with focus.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>A value indicating whether the <bpt id="p1">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function should wait for completion of the program.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Wait`</ph> is omitted, <bpt id="p1">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Optional.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to wait for completion if <ph id="ph1">`Wait`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Timeout`</ph> is omitted, <bpt id="p1">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses -1, which means there is no timeout and <bpt id="p2">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> does not return until the program finishes.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Therefore, if you omit <ph id="ph1">`Timeout`</ph> or set it to -1, it is possible that <bpt id="p1">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> might never return control to your program.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Runs an executable program and returns an integer containing the program's process ID if it is still running.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Style&lt;/code&gt;</ph> is not within range 0 through 9, inclusive.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot find the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">PathName</ph><ept id="p2">&lt;/code&gt;</ept> file.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;PathName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Evaluates a list of expressions and returns an <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value corresponding to the first expression in the list that is <bpt id="p2">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>The argument supplied to <ph id="ph1">`VarExpr`</ph> consists of paired expressions and values.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Switch`</ph> function evaluates the odd-numbered expressions from lowest to highest index in <ph id="ph2">`VarExpr`</ph>, and returns the even-numbered value associated with the first expression that evaluates to <ph id="ph3">`True`</ph>.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">`VarExpr(0)`</ph> is <ph id="ph2">`True`</ph>, <ph id="ph3">`Switch`</ph> returns <ph id="ph4">`VarExpr(1)`</ph>, and if <ph id="ph5">`VarExpr(0)`</ph> is <ph id="ph6">`False`</ph> but <ph id="ph7">`VarExpr(2)`</ph> is <ph id="ph8">`True`</ph>, <ph id="ph9">`Switch`</ph> returns <ph id="ph10">`VarExpr(3)`</ph>, and so on.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not supply the <ph id="ph1">`VarExpr`</ph> argument, <ph id="ph2">`Switch`</ph> returns <ph id="ph3">`Nothing`</ph>.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The expressions in the argument list can include function calls.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>As part of preparing the argument list for the call to <ph id="ph1">`Switch`</ph>, the Visual Basic compiler calls every function in every expression.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that you cannot rely on a particular function not being called if an expression earlier in the argument list is <ph id="ph1">`True`</ph>.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Required.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter array.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Must have an even number of elements.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>You can supply a list of <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> variables or expressions separated by commas, or a single-dimensional array of <bpt id="p2">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> elements.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>Evaluates a list of expressions and returns an <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value corresponding to the first expression in the list that is <bpt id="p2">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Number of arguments is odd.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>