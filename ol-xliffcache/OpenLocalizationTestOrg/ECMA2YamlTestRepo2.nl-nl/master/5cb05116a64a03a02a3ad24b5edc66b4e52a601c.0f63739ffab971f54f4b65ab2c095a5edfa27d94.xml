{"nodes":[{"pos":[811,935],"content":"Exposes methods and properties to support UI Automation client access to controls that can be set to a value within a range.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exposes methods and properties to support UI Automation client access to controls that can be set to a value within a range.","pos":[0,124]}]},{"pos":[947,1076],"content":"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.RangeValuePattern> control pattern.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Implemented on a UI Automation provider that must support the &lt;xref:System.Windows.Automation.RangeValuePattern&gt; control pattern.","pos":[0,129],"source":"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.RangeValuePattern> control pattern."}]},{"pos":[1885,1957],"content":"Gets a value that specifies whether the value of a control is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that specifies whether the value of a control is read-only.","pos":[0,72]}]},{"pos":[2491,2664],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value is read-only; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if it can be modified.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value is read-only; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it can be modified."},{"pos":[3223,3416],"content":"Gets the value that is added to or subtracted from the <xref:System.Windows.Automation.Provider.IRangeValueProvider.Value*> property when a large change is made, such as with the PAGE DOWN key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value that is added to or subtracted from the &lt;xref:System.Windows.Automation.Provider.IRangeValueProvider.Value*&gt; property when a large change is made, such as with the PAGE DOWN key.","pos":[0,193],"source":"Gets the value that is added to or subtracted from the <xref:System.Windows.Automation.Provider.IRangeValueProvider.Value*> property when a large change is made, such as with the PAGE DOWN key."}]},{"pos":[3971,4219],"content":"The large-change value supported by the control or null (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in <ph id=\"ph1\">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>) if the control does not support LargeChange.","needQuote":true,"needEscape":true,"source":"The large-change value supported by the control or null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) if the control does not support LargeChange."},{"pos":[4759,4813],"content":"Gets the maximum range value supported by the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the maximum range value supported by the control.","pos":[0,54]}]},{"pos":[5345,5584],"content":"The maximum value supported by the control or null (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in <ph id=\"ph1\">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>) if the control does not support Maximum.","needQuote":true,"needEscape":true,"source":"The maximum value supported by the control or null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) if the control does not support Maximum."},{"pos":[6120,6174],"content":"Gets the minimum range value supported by the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the minimum range value supported by the control.","pos":[0,54]}]},{"pos":[6704,6943],"content":"The minimum value supported by the control or null (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in <ph id=\"ph1\">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>) if the control does not support Minimum.","needQuote":true,"needEscape":true,"source":"The minimum value supported by the control or null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) if the control does not support Minimum."},{"pos":[7536,7566],"content":"Sets the value of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the control.","pos":[0,30]}]},{"pos":[7578,7693],"content":"The actual value set depends on the control implementation. The control may round the requested `value` up or down.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The actual value set depends on the control implementation.","pos":[0,59]},{"content":"The control may round the requested <ph id=\"ph1\">`value`</ph> up or down.","pos":[60,115],"source":" The control may round the requested `value` up or down."}]},{"pos":[8311,8328],"content":"The value to set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to set.","pos":[0,17]}]},{"pos":[8534,8632],"content":"When <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than the minimum or greater than the maximum value of the control.","needQuote":true,"needEscape":true,"source":"When <code>value</code> is less than the minimum or greater than the maximum value of the control."},{"pos":[9095,9283],"content":"Gets the value that is added to or subtracted from the <xref:System.Windows.Automation.Provider.IRangeValueProvider.Value*> property when a small change is made, such as with an arrow key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value that is added to or subtracted from the &lt;xref:System.Windows.Automation.Provider.IRangeValueProvider.Value*&gt; property when a small change is made, such as with an arrow key.","pos":[0,188],"source":"Gets the value that is added to or subtracted from the <xref:System.Windows.Automation.Provider.IRangeValueProvider.Value*> property when a small change is made, such as with an arrow key."}]},{"pos":[9838,10061],"content":"The small-change value or null (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in <ph id=\"ph1\">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>) if the control does not support SmallChange.","needQuote":true,"needEscape":true,"source":"The small-change value or null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) if the control does not support SmallChange."},{"pos":[10591,10621],"content":"Gets the value of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the control.","pos":[0,30]}]},{"pos":[11232,11451],"content":"The value of the control or null (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in <ph id=\"ph1\">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>) if the control does not support Value.","needQuote":true,"needEscape":true,"source":"The value of the control or null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) if the control does not support Value."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Automation.Provider.IRangeValueProvider\n  id: IRangeValueProvider\n  children:\n  - System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly\n  - System.Windows.Automation.Provider.IRangeValueProvider.LargeChange\n  - System.Windows.Automation.Provider.IRangeValueProvider.Maximum\n  - System.Windows.Automation.Provider.IRangeValueProvider.Minimum\n  - System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)\n  - System.Windows.Automation.Provider.IRangeValueProvider.SmallChange\n  - System.Windows.Automation.Provider.IRangeValueProvider.Value\n  langs:\n  - csharp\n  name: IRangeValueProvider\n  nameWithType: IRangeValueProvider\n  fullName: System.Windows.Automation.Provider.IRangeValueProvider\n  type: Interface\n  summary: Exposes methods and properties to support UI Automation client access to controls that can be set to a value within a range.\n  remarks: Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.RangeValuePattern> control pattern.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"36dc7aef-33e6-4691-afe1-2be7274b3d33\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface IRangeValueProvider\n  implements: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly\n  id: IsReadOnly\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: IRangeValueProvider.IsReadOnly\n  fullName: System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly\n  type: Property\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Gets a value that specifies whether the value of a control is read-only.\n  remarks: ''\n  example:\n  - \"The following example shows an implementation of this method for a control that is not read-only.  \\n  \\n [!code-vb[UIAIRangeValueProvider_snip#IsReadOnly](~/add/codesnippet/visualbasic/uiairangevalueprovider_snip/rangevaluefragment.vb#isreadonly)]\\n [!code-cs[UIAIRangeValueProvider_snip#IsReadOnly](~/add/codesnippet/csharp/UIAIRangeValueProvider_snip/RangeValueFragment.cs#isreadonly)]\"\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value is read-only; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it can be modified.\n  overload: System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange\n  id: LargeChange\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  langs:\n  - csharp\n  name: LargeChange\n  nameWithType: IRangeValueProvider.LargeChange\n  fullName: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange\n  type: Property\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Gets the value that is added to or subtracted from the <xref:System.Windows.Automation.Provider.IRangeValueProvider.Value*> property when a large change is made, such as with the PAGE DOWN key.\n  remarks: ''\n  example:\n  - \"The following example shows an implementation of this method for a control that has a large change value of 5.0.  \\n  \\n [!code-vb[UIAIRangeValueProvider_snip#LargeChange](~/add/codesnippet/visualbasic/uiairangevalueprovider_snip/rangevaluefragment.vb#largechange)]\\n [!code-cs[UIAIRangeValueProvider_snip#LargeChange](~/add/codesnippet/csharp/UIAIRangeValueProvider_snip/RangeValueFragment.cs#largechange)]\"\n  syntax:\n    content: public double LargeChange { get; }\n    return:\n      type: System.Double\n      description: The large-change value supported by the control or null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) if the control does not support LargeChange.\n  overload: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.Maximum\n  id: Maximum\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  langs:\n  - csharp\n  name: Maximum\n  nameWithType: IRangeValueProvider.Maximum\n  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Maximum\n  type: Property\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Gets the maximum range value supported by the control.\n  remarks: ''\n  example:\n  - \"The following example shows an implementation of this method for a control that has a maximum value of 255.0.  \\n  \\n [!code-vb[UIAIRangeValueProvider_snip#Maximum](~/add/codesnippet/visualbasic/uiairangevalueprovider_snip/rangevaluefragment.vb#maximum)]\\n [!code-cs[UIAIRangeValueProvider_snip#Maximum](~/add/codesnippet/csharp/UIAIRangeValueProvider_snip/RangeValueFragment.cs#maximum)]\"\n  syntax:\n    content: public double Maximum { get; }\n    return:\n      type: System.Double\n      description: The maximum value supported by the control or null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) if the control does not support Maximum.\n  overload: System.Windows.Automation.Provider.IRangeValueProvider.Maximum*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.Minimum\n  id: Minimum\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  langs:\n  - csharp\n  name: Minimum\n  nameWithType: IRangeValueProvider.Minimum\n  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Minimum\n  type: Property\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Gets the minimum range value supported by the control.\n  remarks: ''\n  example:\n  - \"The following example shows an implementation of this method for a control that has a minimum value of 0.0.  \\n  \\n [!code-vb[UIAIRangeValueProvider_snip#Minimum](~/add/codesnippet/visualbasic/uiairangevalueprovider_snip/rangevaluefragment.vb#minimum)]\\n [!code-cs[UIAIRangeValueProvider_snip#Minimum](~/add/codesnippet/csharp/UIAIRangeValueProvider_snip/RangeValueFragment.cs#minimum)]\"\n  syntax:\n    content: public double Minimum { get; }\n    return:\n      type: System.Double\n      description: The minimum value supported by the control or null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) if the control does not support Minimum.\n  overload: System.Windows.Automation.Provider.IRangeValueProvider.Minimum*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)\n  id: SetValue(System.Double)\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  langs:\n  - csharp\n  name: SetValue(Double)\n  nameWithType: IRangeValueProvider.SetValue(Double)\n  fullName: System.Windows.Automation.Provider.IRangeValueProvider.SetValue(Double)\n  type: Method\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Sets the value of the control.\n  remarks: The actual value set depends on the control implementation. The control may round the requested `value` up or down.\n  example:\n  - \"The following example shows one possible implementation of this method for a custom control. The custom control displays its range value through the alpha value of its base color.  \\n  \\n [!code-vb[UIAIRangeValueProvider_snip#SetValue](~/add/codesnippet/visualbasic/uiairangevalueprovider_snip/rangevaluefragment.vb#setvalue)]\\n [!code-cs[UIAIRangeValueProvider_snip#SetValue](~/add/codesnippet/csharp/UIAIRangeValueProvider_snip/RangeValueFragment.cs#setvalue)]\"\n  syntax:\n    content: public void SetValue (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: The value to set.\n  overload: System.Windows.Automation.Provider.IRangeValueProvider.SetValue*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: When <code>value</code> is less than the minimum or greater than the maximum value of the control.\n  platform:\n  - net462\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange\n  id: SmallChange\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  langs:\n  - csharp\n  name: SmallChange\n  nameWithType: IRangeValueProvider.SmallChange\n  fullName: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange\n  type: Property\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Gets the value that is added to or subtracted from the <xref:System.Windows.Automation.Provider.IRangeValueProvider.Value*> property when a small change is made, such as with an arrow key.\n  remarks: ''\n  example:\n  - \"The following example shows an implementation of this method for a control that has a small change value of 1.0.  \\n  \\n [!code-vb[UIAIRangeValueProvider_snip#SmallChange](~/add/codesnippet/visualbasic/uiairangevalueprovider_snip/rangevaluefragment.vb#smallchange)]\\n [!code-cs[UIAIRangeValueProvider_snip#SmallChange](~/add/codesnippet/csharp/UIAIRangeValueProvider_snip/RangeValueFragment.cs#smallchange)]\"\n  syntax:\n    content: public double SmallChange { get; }\n    return:\n      type: System.Double\n      description: The small-change value or null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) if the control does not support SmallChange.\n  overload: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.Value\n  id: Value\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  langs:\n  - csharp\n  name: Value\n  nameWithType: IRangeValueProvider.Value\n  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Value\n  type: Property\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Gets the value of the control.\n  remarks: ''\n  example:\n  - \"The following example shows an implementation of this method for a custom control. For the purposes of this sample, the custom control displays the value through the alpha setting of its base color.  \\n  \\n [!code-vb[UIAIRangeValueProvider_snip#Value](~/add/codesnippet/visualbasic/uiairangevalueprovider_snip/rangevaluefragment.vb#value)]\\n [!code-cs[UIAIRangeValueProvider_snip#Value](~/add/codesnippet/csharp/UIAIRangeValueProvider_snip/RangeValueFragment.cs#value)]\"\n  syntax:\n    content: public double Value { get; }\n    return:\n      type: System.Double\n      description: The value of the control or null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) if the control does not support Value.\n  overload: System.Windows.Automation.Provider.IRangeValueProvider.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: IRangeValueProvider.IsReadOnly\n  fullName: System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  isExternal: false\n  name: LargeChange\n  nameWithType: IRangeValueProvider.LargeChange\n  fullName: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.Maximum\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  isExternal: false\n  name: Maximum\n  nameWithType: IRangeValueProvider.Maximum\n  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Maximum\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.Minimum\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  isExternal: false\n  name: Minimum\n  nameWithType: IRangeValueProvider.Minimum\n  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Minimum\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  isExternal: false\n  name: SetValue(Double)\n  nameWithType: IRangeValueProvider.SetValue(Double)\n  fullName: System.Windows.Automation.Provider.IRangeValueProvider.SetValue(Double)\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  isExternal: false\n  name: SmallChange\n  nameWithType: IRangeValueProvider.SmallChange\n  fullName: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.Value\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  isExternal: false\n  name: Value\n  nameWithType: IRangeValueProvider.Value\n  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Value\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly*\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: IRangeValueProvider.IsReadOnly\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange*\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  isExternal: false\n  name: LargeChange\n  nameWithType: IRangeValueProvider.LargeChange\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.Maximum*\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  isExternal: false\n  name: Maximum\n  nameWithType: IRangeValueProvider.Maximum\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.Minimum*\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  isExternal: false\n  name: Minimum\n  nameWithType: IRangeValueProvider.Minimum\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.SetValue*\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  isExternal: false\n  name: SetValue\n  nameWithType: IRangeValueProvider.SetValue\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange*\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  isExternal: false\n  name: SmallChange\n  nameWithType: IRangeValueProvider.SmallChange\n- uid: System.Windows.Automation.Provider.IRangeValueProvider.Value*\n  parent: System.Windows.Automation.Provider.IRangeValueProvider\n  isExternal: false\n  name: Value\n  nameWithType: IRangeValueProvider.Value\n"}