{"nodes":[{"pos":[612,749],"content":"Provides the functionality that allows a common language runtime host to participate in the flow, or migration, of the execution context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the functionality that allows a common language runtime host to participate in the flow, or migration, of the execution context.","pos":[0,137]}]},{"pos":[761,1169],"content":"If the current <xref:System.AppDomainManager> has a reference to a HostExecutionContextManager in its <xref:System.AppDomainManager.HostExecutionContextManager%2A> property, then the common language runtime calls the manager every time a call to the <xref:System.Threading.ExecutionContext.Run%2A?displayProperty=fullName> method occurs, to allow the host to participate in the flow of the execution context.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the current &lt;xref:System.AppDomainManager&gt; has a reference to a HostExecutionContextManager in its &lt;xref:System.AppDomainManager.HostExecutionContextManager%2A&gt; property, then the common language runtime calls the manager every time a call to the &lt;xref:System.Threading.ExecutionContext.Run%2A?displayProperty=fullName&gt; method occurs, to allow the host to participate in the flow of the execution context.","pos":[0,408],"source":"If the current <xref:System.AppDomainManager> has a reference to a HostExecutionContextManager in its <xref:System.AppDomainManager.HostExecutionContextManager%2A> property, then the common language runtime calls the manager every time a call to the <xref:System.Threading.ExecutionContext.Run%2A?displayProperty=fullName> method occurs, to allow the host to participate in the flow of the execution context."}]},{"pos":[1764,1870],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Threading.HostExecutionContextManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Threading.HostExecutionContextManager\"></xref> class."},{"pos":[2427,2487],"content":"Captures the host execution context from the current thread.","needQuote":true,"needEscape":true,"nodes":[{"content":"Captures the host execution context from the current thread.","pos":[0,60]}]},{"pos":[2499,2655],"content":"The &lt;xref:System.Threading.HostExecutionContext&gt; is created using a safe handle containing the <ph id=\"ph1\">`IUnknown`</ph> pointer for the host executing the current thread.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The <xref:System.Threading.HostExecutionContext> is created using a safe handle containing the `IUnknown` pointer for the host executing the current thread."},{"pos":[2844,2974],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Threading.HostExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object representing the host execution context of the current thread.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Threading.HostExecutionContext\"></xref> object representing the host execution context of the current thread."},{"pos":[3495,3550],"content":"Restores the host execution context to its prior state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Restores the host execution context to its prior state.","pos":[0,55]}]},{"pos":[3563,3700],"content":"<ph id=\"ph1\">`previousState`</ph> must be the object returned by the &lt;xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A&gt; method.","needQuote":false,"needEscape":true,"extradata":"MT","source":"`previousState` must be the object returned by the <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> method."},{"pos":[3861,3901],"content":"The previous context state to revert to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The previous context state to revert to.","pos":[0,40]}]},{"pos":[4092,4416],"content":"<code>previousState</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>previousState</code> was not created on the current thread.       -or-       <code>previousState</code> is not the last state for the <xref href=\"System.Threading.HostExecutionContext\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;previousState&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,91],"source":"<code>previousState</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;previousState&lt;/code&gt;</ph> was not created on the current thread.","pos":[98,174],"source":"       -or-       <code>previousState</code> was not created on the current thread."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;previousState&lt;/code&gt;</ph> is not the last state for the <bpt id=\"p1\">&lt;xref href=\"System.Threading.HostExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[181,308],"source":"       -or-       <code>previousState</code> is not the last state for the <xref href=\"System.Threading.HostExecutionContext\"></xref>."}]},{"pos":[5030,5110],"content":"Sets the current host execution context to the specified host execution context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the current host execution context to the specified host execution context.","pos":[0,80]}]},{"pos":[5123,5884],"content":"The SetHostExecutionContext method sets the host execution context for the current <xref:System.Threading.HostExecutionContext>.  A <xref:System.Threading.HostExecutionContext> that has been used as the argument to another SetHostExecutionContext method call cannot be passed in as the parameter for this method. Instead, use the <xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=fullName> method to create a copy of a <xref:System.Threading.HostExecutionContext> object and then use the copy to set the host execution context.       Call the <xref:System.Threading.HostExecutionContextManager.Revert%2A> method using the object returned by this method to restore the <xref:System.Threading.HostExecutionContext> to its previous state.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The SetHostExecutionContext method sets the host execution context for the current <xref:System.Threading.HostExecutionContext>.  A <xref:System.Threading.HostExecutionContext> that has been used as the argument to another SetHostExecutionContext method call cannot be passed in as the parameter for this method. Instead, use the <xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=fullName> method to create a copy of a <xref:System.Threading.HostExecutionContext> object and then use the copy to set the host execution context.       Call the <xref:System.Threading.HostExecutionContextManager.Revert%2A> method using the object returned by this method to restore the <xref:System.Threading.HostExecutionContext> to its previous state.","pos":[0,759],"nodes":[{"content":"The SetHostExecutionContext method sets the host execution context for the current &lt;xref:System.Threading.HostExecutionContext&gt;.","pos":[0,128],"source":"The SetHostExecutionContext method sets the host execution context for the current <xref:System.Threading.HostExecutionContext>."},{"content":"A &lt;xref:System.Threading.HostExecutionContext&gt; that has been used as the argument to another SetHostExecutionContext method call cannot be passed in as the parameter for this method.","pos":[130,312],"source":"  A <xref:System.Threading.HostExecutionContext> that has been used as the argument to another SetHostExecutionContext method call cannot be passed in as the parameter for this method."},{"content":"Instead, use the &lt;xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=fullName&gt; method to create a copy of a &lt;xref:System.Threading.HostExecutionContext&gt; object and then use the copy to set the host execution context.","pos":[313,551],"source":" Instead, use the <xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=fullName> method to create a copy of a <xref:System.Threading.HostExecutionContext> object and then use the copy to set the host execution context."},{"content":"Call the &lt;xref:System.Threading.HostExecutionContextManager.Revert%2A&gt; method using the object returned by this method to restore the &lt;xref:System.Threading.HostExecutionContext&gt; to its previous state.","pos":[558,759],"source":"       Call the <xref:System.Threading.HostExecutionContextManager.Revert%2A> method using the object returned by this method to restore the <xref:System.Threading.HostExecutionContext> to its previous state."}]}]},{"pos":[6133,6206],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Threading.HostExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be set.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Threading.HostExecutionContext\"></xref> to be set."},{"pos":[6264,6373],"content":"An object for restoring the <bpt id=\"p1\">&lt;xref href=\"System.Threading.HostExecutionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to its previous state.","needQuote":true,"needEscape":true,"source":"An object for restoring the <xref href=\"System.Threading.HostExecutionContext\"></xref> to its previous state."},{"pos":[6581,6788],"content":"<code>hostExecutionContext</code> was not acquired through a capture operation.       -or-       <code>hostExecutionContext</code> has been the argument to a previous SetHostExecutionContext method call.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;hostExecutionContext&lt;/code&gt;</ph> was not acquired through a capture operation.","pos":[0,79],"source":"<code>hostExecutionContext</code> was not acquired through a capture operation."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;hostExecutionContext&lt;/code&gt;</ph> has been the argument to a previous SetHostExecutionContext method call.","pos":[86,203],"source":"       -or-       <code>hostExecutionContext</code> has been the argument to a previous SetHostExecutionContext method call."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.HostExecutionContextManager\n  id: HostExecutionContextManager\n  children:\n  - System.Threading.HostExecutionContextManager.#ctor\n  - System.Threading.HostExecutionContextManager.Capture\n  - System.Threading.HostExecutionContextManager.Revert(System.Object)\n  - System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)\n  langs:\n  - csharp\n  name: HostExecutionContextManager\n  nameWithType: HostExecutionContextManager\n  fullName: System.Threading.HostExecutionContextManager\n  type: Class\n  summary: Provides the functionality that allows a common language runtime host to participate in the flow, or migration, of the execution context.\n  remarks: If the current <xref:System.AppDomainManager> has a reference to a HostExecutionContextManager in its <xref:System.AppDomainManager.HostExecutionContextManager%2A> property, then the common language runtime calls the manager every time a call to the <xref:System.Threading.ExecutionContext.Run%2A?displayProperty=fullName> method occurs, to allow the host to participate in the flow of the execution context.\n  syntax:\n    content: public class HostExecutionContextManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Threading.HostExecutionContextManager.#ctor\n  id: '#ctor'\n  parent: System.Threading.HostExecutionContextManager\n  langs:\n  - csharp\n  name: HostExecutionContextManager()\n  nameWithType: HostExecutionContextManager.HostExecutionContextManager()\n  fullName: System.Threading.HostExecutionContextManager.HostExecutionContextManager()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.HostExecutionContextManager\"></xref> class.\n  syntax:\n    content: public HostExecutionContextManager ();\n    parameters: []\n  overload: System.Threading.HostExecutionContextManager.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Threading.HostExecutionContextManager.Capture\n  id: Capture\n  parent: System.Threading.HostExecutionContextManager\n  langs:\n  - csharp\n  name: Capture()\n  nameWithType: HostExecutionContextManager.Capture()\n  fullName: System.Threading.HostExecutionContextManager.Capture()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  summary: Captures the host execution context from the current thread.\n  remarks: The <xref:System.Threading.HostExecutionContext> is created using a safe handle containing the `IUnknown` pointer for the host executing the current thread.\n  syntax:\n    content: public virtual System.Threading.HostExecutionContext Capture ();\n    parameters: []\n    return:\n      type: System.Threading.HostExecutionContext\n      description: A <xref href=\"System.Threading.HostExecutionContext\"></xref> object representing the host execution context of the current thread.\n  overload: System.Threading.HostExecutionContextManager.Capture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Threading.HostExecutionContextManager.Revert(System.Object)\n  id: Revert(System.Object)\n  parent: System.Threading.HostExecutionContextManager\n  langs:\n  - csharp\n  name: Revert(Object)\n  nameWithType: HostExecutionContextManager.Revert(Object)\n  fullName: System.Threading.HostExecutionContextManager.Revert(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  summary: Restores the host execution context to its prior state.\n  remarks: '`previousState` must be the object returned by the <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> method.'\n  syntax:\n    content: public virtual void Revert (object previousState);\n    parameters:\n    - id: previousState\n      type: System.Object\n      description: The previous context state to revert to.\n  overload: System.Threading.HostExecutionContextManager.Revert*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<code>previousState</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>previousState</code> was not created on the current thread.  \\n  \\n -or-  \\n  \\n <code>previousState</code> is not the last state for the <xref href=\\\"System.Threading.HostExecutionContext\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)\n  id: SetHostExecutionContext(System.Threading.HostExecutionContext)\n  parent: System.Threading.HostExecutionContextManager\n  langs:\n  - csharp\n  name: SetHostExecutionContext(HostExecutionContext)\n  nameWithType: HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)\n  fullName: System.Threading.HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  summary: Sets the current host execution context to the specified host execution context.\n  remarks: \"The SetHostExecutionContext method sets the host execution context for the current <xref:System.Threading.HostExecutionContext>.  A <xref:System.Threading.HostExecutionContext> that has been used as the argument to another SetHostExecutionContext method call cannot be passed in as the parameter for this method. Instead, use the <xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=fullName> method to create a copy of a <xref:System.Threading.HostExecutionContext> object and then use the copy to set the host execution context.  \\n  \\n Call the <xref:System.Threading.HostExecutionContextManager.Revert%2A> method using the object returned by this method to restore the <xref:System.Threading.HostExecutionContext> to its previous state.\"\n  syntax:\n    content: public virtual object SetHostExecutionContext (System.Threading.HostExecutionContext hostExecutionContext);\n    parameters:\n    - id: hostExecutionContext\n      type: System.Threading.HostExecutionContext\n      description: The <xref href=\"System.Threading.HostExecutionContext\"></xref> to be set.\n    return:\n      type: System.Object\n      description: An object for restoring the <xref href=\"System.Threading.HostExecutionContext\"></xref> to its previous state.\n  overload: System.Threading.HostExecutionContextManager.SetHostExecutionContext*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<code>hostExecutionContext</code> was not acquired through a capture operation.  \\n  \\n -or-  \\n  \\n <code>hostExecutionContext</code> has been the argument to a previous SetHostExecutionContext method call.\"\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Threading.HostExecutionContextManager.#ctor\n  parent: System.Threading.HostExecutionContextManager\n  isExternal: false\n  name: HostExecutionContextManager()\n  nameWithType: HostExecutionContextManager.HostExecutionContextManager()\n  fullName: System.Threading.HostExecutionContextManager.HostExecutionContextManager()\n- uid: System.Threading.HostExecutionContextManager.Capture\n  parent: System.Threading.HostExecutionContextManager\n  isExternal: false\n  name: Capture()\n  nameWithType: HostExecutionContextManager.Capture()\n  fullName: System.Threading.HostExecutionContextManager.Capture()\n- uid: System.Threading.HostExecutionContext\n  parent: System.Threading\n  isExternal: false\n  name: HostExecutionContext\n  nameWithType: HostExecutionContext\n  fullName: System.Threading.HostExecutionContext\n- uid: System.Threading.HostExecutionContextManager.Revert(System.Object)\n  parent: System.Threading.HostExecutionContextManager\n  isExternal: false\n  name: Revert(Object)\n  nameWithType: HostExecutionContextManager.Revert(Object)\n  fullName: System.Threading.HostExecutionContextManager.Revert(Object)\n- uid: System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)\n  parent: System.Threading.HostExecutionContextManager\n  isExternal: false\n  name: SetHostExecutionContext(HostExecutionContext)\n  nameWithType: HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)\n  fullName: System.Threading.HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)\n- uid: System.Threading.HostExecutionContextManager.#ctor*\n  parent: System.Threading.HostExecutionContextManager\n  isExternal: false\n  name: HostExecutionContextManager\n  nameWithType: HostExecutionContextManager.HostExecutionContextManager\n- uid: System.Threading.HostExecutionContextManager.Capture*\n  parent: System.Threading.HostExecutionContextManager\n  isExternal: false\n  name: Capture\n  nameWithType: HostExecutionContextManager.Capture\n- uid: System.Threading.HostExecutionContextManager.Revert*\n  parent: System.Threading.HostExecutionContextManager\n  isExternal: false\n  name: Revert\n  nameWithType: HostExecutionContextManager.Revert\n- uid: System.Threading.HostExecutionContextManager.SetHostExecutionContext*\n  parent: System.Threading.HostExecutionContextManager\n  isExternal: false\n  name: SetHostExecutionContext\n  nameWithType: HostExecutionContextManager.SetHostExecutionContext\n"}