{"nodes":[{"pos":[1303,1424],"content":"Represents an Active Directory role in a Windows Workflow Foundation hosting environment. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an Active Directory role in a Windows Workflow Foundation hosting environment. This class cannot be inherited.","pos":[0,121],"nodes":[{"content":"Represents an Active Directory role in a Windows Workflow Foundation hosting environment.","pos":[0,89]},{"content":"This class cannot be inherited.","pos":[90,121]}]}]},{"pos":[1437,1887],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       Typically, the Active Directory store is used for storing organizational information for personnel. The main purpose for the ActiveDirectoryRole is for making queries against such organizational information for business reasons.       Active Directory roles typically correspond to a job function, title, or job skill within the context of the organization.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       Typically, the Active Directory store is used for storing organizational information for personnel.","pos":[0,187],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       Typically, the Active Directory store is used for storing organizational information for personnel."},{"content":"The main purpose for the ActiveDirectoryRole is for making queries against such organizational information for business reasons.","pos":[188,316]},{"content":"Active Directory roles typically correspond to a job function, title, or job skill within the context of the organization.","pos":[323,445]}]},{"pos":[2826,2995],"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains all the roles that report to the current role either directly or indirectly.","needQuote":true,"needEscape":true,"source":"Returns an <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref> that contains all the roles that report to the current role either directly or indirectly."},{"pos":[3007,3207],"content":"GetAllReports returns all nodes below the current node. Use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A> to return only the nodes that are directly below the current node.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"GetAllReports returns all nodes below the current node. Use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A> to return only the nodes that are directly below the current node.","pos":[0,200],"nodes":[{"content":"GetAllReports returns all nodes below the current node.","pos":[0,55]},{"content":"Use &lt;xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A&gt; to return only the nodes that are directly below the current node.","pos":[56,200],"source":" Use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A> to return only the nodes that are directly below the current node."}]}]},{"pos":[3412,3572],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains all the roles that either directly or indirectly report to the current role.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref> that contains all the roles that either directly or indirectly report to the current role."},{"pos":[4129,4277],"content":"Returns an <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains all the roles that report directly to the current role.","needQuote":true,"needEscape":true,"source":"Returns an <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref> that contains all the roles that report directly to the current role."},{"pos":[4289,4489],"content":"GetDirectReports returns only the nodes that are directly below the current node. To return all nodes below the current node use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"GetDirectReports returns only the nodes that are directly below the current node. To return all nodes below the current node use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A>.","pos":[0,200],"nodes":[{"content":"GetDirectReports returns only the nodes that are directly below the current node.","pos":[0,81]},{"content":"To return all nodes below the current node use &lt;xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A&gt;.","pos":[82,200],"source":" To return all nodes below the current node use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A>."}]}]},{"pos":[4697,4837],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains all the roles that directly report to the current role.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref> that contains all the roles that directly report to the current role."},{"pos":[5367,5581],"content":"Returns the generic collection that contains all <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects associated with the current <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the generic collection that contains all <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> objects associated with the current <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>."},{"pos":[5593,5782],"content":"A role can be a general collection of security objects. As such, a role can contain multiple identities, for example use GetEntries to return all directory objects associated with the role.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A role can be a general collection of security objects. As such, a role can contain multiple identities, for example use GetEntries to return all directory objects associated with the role.","pos":[0,189],"nodes":[{"content":"A role can be a general collection of security objects.","pos":[0,55]},{"content":"As such, a role can contain multiple identities, for example use GetEntries to return all directory objects associated with the role.","pos":[56,189]}]}]},{"pos":[6050,6238],"content":"The generic <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection that is associated with the current <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The generic <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> collection that is associated with the current <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>."},{"pos":[6777,6912],"content":"Gets a generic list of the Windows NT accounts associated with the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a generic list of the Windows NT accounts associated with the <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>."},{"pos":[6924,7130],"content":"GetIdentities obtains all <xref:System.Security.Principal.SecurityIdentifier> objects associated with the <xref:System.Workflow.Activities.ActiveDirectoryRole> and converts each of them into a string value.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"GetIdentities obtains all &lt;xref:System.Security.Principal.SecurityIdentifier&gt; objects associated with the &lt;xref:System.Workflow.Activities.ActiveDirectoryRole&gt; and converts each of them into a string value.","pos":[0,206],"source":"GetIdentities obtains all <xref:System.Security.Principal.SecurityIdentifier> objects associated with the <xref:System.Workflow.Activities.ActiveDirectoryRole> and converts each of them into a string value."}]},{"pos":[7339,7491],"content":"A generic list of values that represent the Windows NT accounts associated with the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A generic list of values that represent the Windows NT accounts associated with the <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>."},{"pos":[8018,8178],"content":"Returns an Active Directory role that contains information about the manager of the current <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns an Active Directory role that contains information about the manager of the current <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>."},{"pos":[8190,8374],"content":"GetManager returns the direct manager for the current role. To return all roles above the current node, use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"GetManager returns the direct manager for the current role. To return all roles above the current node, use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A>.","pos":[0,184],"nodes":[{"content":"GetManager returns the direct manager for the current role.","pos":[0,59]},{"content":"To return all roles above the current node, use &lt;xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A&gt;.","pos":[60,184],"source":" To return all roles above the current node, use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A>."}]}]},{"pos":[8576,8712],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains information about the manager of the current role.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref> that contains information about the manager of the current role."},{"pos":[9276,9459],"content":"Returns the Active Directory role that contains information about the managerial chain associated with the current <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the Active Directory role that contains information about the managerial chain associated with the current <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>."},{"pos":[9471,9659],"content":"GetManagerialChain returns all nodes above the current role. To return just the direct manager of the current role, use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"GetManagerialChain returns all nodes above the current role. To return just the direct manager of the current role, use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>.","pos":[0,188],"nodes":[{"content":"GetManagerialChain returns all nodes above the current role.","pos":[0,60]},{"content":"To return just the direct manager of the current role, use &lt;xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A&gt;.","pos":[61,188],"source":" To return just the direct manager of the current role, use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>."}]}]},{"pos":[9869,10027],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains information about the managerial chain associated with the current role.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref> that contains information about the managerial chain associated with the current role."},{"pos":[10549,10761],"content":"Returns an Active Directory role that contains information about all the directory operations that are supervised by the manager of the current <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns an Active Directory role that contains information about all the directory operations that are supervised by the manager of the current <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>."},{"pos":[10773,10974],"content":"The <xref:System.Workflow.Activities.ActiveDirectoryRole> returned contains information from all objects managed by the manager of this role but does not contain this information from the current role.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Workflow.Activities.ActiveDirectoryRole&gt; returned contains information from all objects managed by the manager of this role but does not contain this information from the current role.","pos":[0,201],"source":"The <xref:System.Workflow.Activities.ActiveDirectoryRole> returned contains information from all objects managed by the manager of this role but does not contain this information from the current role."}]},{"pos":[11174,11419],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains information about all directory operations that are supervised by the manager of the current <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref> that contains information about all directory operations that are supervised by the manager of the current <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>."},{"pos":[12001,12197],"content":"Returns a generic list of <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects associated with the current <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a generic list of <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> objects associated with the current <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>."},{"pos":[12209,12688],"content":"GetSecurityIdentifiers checks each <xref:System.DirectoryServices.DirectoryEntry> returned by the <xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A> method to see if the entry has a security identifier in its <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> collection. If the <xref:System.DirectoryServices.DirectoryEntry> has such a property, GetSecurityIdentifiers adds a <xref:System.Security.Principal.SecurityIdentifier> to the list it returns.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"GetSecurityIdentifiers checks each <xref:System.DirectoryServices.DirectoryEntry> returned by the <xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A> method to see if the entry has a security identifier in its <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> collection. If the <xref:System.DirectoryServices.DirectoryEntry> has such a property, GetSecurityIdentifiers adds a <xref:System.Security.Principal.SecurityIdentifier> to the list it returns.","pos":[0,479],"nodes":[{"content":"GetSecurityIdentifiers checks each &lt;xref:System.DirectoryServices.DirectoryEntry&gt; returned by the &lt;xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A&gt; method to see if the entry has a security identifier in its &lt;xref:System.DirectoryServices.DirectoryEntry.Properties%2A&gt; collection.","pos":[0,298],"source":"GetSecurityIdentifiers checks each <xref:System.DirectoryServices.DirectoryEntry> returned by the <xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A> method to see if the entry has a security identifier in its <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> collection."},{"content":"If the &lt;xref:System.DirectoryServices.DirectoryEntry&gt; has such a property, GetSecurityIdentifiers adds a &lt;xref:System.Security.Principal.SecurityIdentifier&gt; to the list it returns.","pos":[299,479],"source":" If the <xref:System.DirectoryServices.DirectoryEntry> has such a property, GetSecurityIdentifiers adds a <xref:System.Security.Principal.SecurityIdentifier> to the list it returns."}]}]},{"pos":[12966,13154],"content":"A generic list of <bpt id=\"p1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects associated with the current <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A generic list of <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> objects associated with the current <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>."},{"pos":[13768,13911],"content":"Returns a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contains the specified identity.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref> contains the specified identity."},{"pos":[13923,14117],"content":"Because a role is a generalization of one or more objects, many identities may be described by a single role. Use IncludesIdentity to test that a specified identity is included within this role.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Because a role is a generalization of one or more objects, many identities may be described by a single role. Use IncludesIdentity to test that a specified identity is included within this role.","pos":[0,194],"nodes":[{"content":"Because a role is a generalization of one or more objects, many identities may be described by a single role.","pos":[0,109]},{"content":"Use IncludesIdentity to test that a specified identity is included within this role.","pos":[110,194]}]}]},{"pos":[14278,14311],"content":"The identity for which to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identity for which to search.","pos":[0,33]}]},{"pos":[14370,14632],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate that <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">identity</ph><ept id=\"p2\">&lt;/code&gt;</ept> is included in the <bpt id=\"p3\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that <code>identity</code> is included in the <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15128,15172],"content":"Gets or sets the Active Directory role name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the Active Directory role name.","pos":[0,44]}]},{"pos":[15184,15218],"content":"Use the name to describe the role.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the name to describe the role.","pos":[0,34]}]},{"pos":[15341,15372],"content":"The Active Directory role name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Active Directory role name.","pos":[0,31]}]},{"pos":[15881,16005],"content":"Gets the root Active Directory node associated with the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the root Active Directory node associated with the <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>."},{"pos":[16017,16086],"content":"The root entry is the role up the chain of roles that has no manager.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The root entry is the role up the chain of roles that has no manager.","pos":[0,69]}]},{"pos":[16259,16457],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the root Active Directory node associated with the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> that represents the root Active Directory node associated with the <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>."},{"pos":[17074,17177],"content":"Releases all resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Releases all resources used by the <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>."},{"pos":[18322,18456],"content":"Populates a <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the data required to serialize the target object.","needQuote":true,"needEscape":true,"source":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> with the data required to serialize the target object."},{"pos":[18468,18640],"content":"The implementation of <xref:System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData%2A> allows this object to be serialized.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The implementation of &lt;xref:System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt; allows this object to be serialized.","pos":[0,172],"source":"The implementation of <xref:System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData%2A> allows this object to be serialized."}]},{"pos":[18916,19010],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to populate with data.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to populate with data."},{"pos":[19106,19198],"content":"The <xref:System.Runtime.Serialization.StreamingContext> destination for this serialization.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; destination for this serialization.","pos":[0,92],"source":"The <xref:System.Runtime.Serialization.StreamingContext> destination for this serialization."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.ActiveDirectoryRole\n  id: ActiveDirectoryRole\n  children:\n  - System.Workflow.Activities.ActiveDirectoryRole.GetAllReports\n  - System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports\n  - System.Workflow.Activities.ActiveDirectoryRole.GetEntries\n  - System.Workflow.Activities.ActiveDirectoryRole.GetIdentities\n  - System.Workflow.Activities.ActiveDirectoryRole.GetManager\n  - System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain\n  - System.Workflow.Activities.ActiveDirectoryRole.GetPeers\n  - System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers\n  - System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)\n  - System.Workflow.Activities.ActiveDirectoryRole.Name\n  - System.Workflow.Activities.ActiveDirectoryRole.RootEntry\n  - System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose\n  - System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  langs:\n  - csharp\n  name: ActiveDirectoryRole\n  nameWithType: ActiveDirectoryRole\n  fullName: System.Workflow.Activities.ActiveDirectoryRole\n  type: Class\n  summary: Represents an Active Directory role in a Windows Workflow Foundation hosting environment. This class cannot be inherited.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n Typically, the Active Directory store is used for storing organizational information for personnel. The main purpose for the ActiveDirectoryRole is for making queries against such organizational information for business reasons.  \\n  \\n Active Directory roles typically correspond to a job function, title, or job skill within the context of the organization.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      public sealed class ActiveDirectoryRole : System.Workflow.Activities.WorkflowRole, IDisposable, System.Runtime.Serialization.ISerializable\n  inheritance:\n  - System.Object\n  - System.Workflow.Activities.WorkflowRole\n  implements:\n  - System.IDisposable\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports\n  id: GetAllReports\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  langs:\n  - csharp\n  name: GetAllReports()\n  nameWithType: ActiveDirectoryRole.GetAllReports()\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports()\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Returns an <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref> that contains all the roles that report to the current role either directly or indirectly.\n  remarks: GetAllReports returns all nodes below the current node. Use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A> to return only the nodes that are directly below the current node.\n  syntax:\n    content: public System.Workflow.Activities.ActiveDirectoryRole GetAllReports ();\n    parameters: []\n    return:\n      type: System.Workflow.Activities.ActiveDirectoryRole\n      description: A <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref> that contains all the roles that either directly or indirectly report to the current role.\n  overload: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports\n  id: GetDirectReports\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  langs:\n  - csharp\n  name: GetDirectReports()\n  nameWithType: ActiveDirectoryRole.GetDirectReports()\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports()\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Returns an <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref> that contains all the roles that report directly to the current role.\n  remarks: GetDirectReports returns only the nodes that are directly below the current node. To return all nodes below the current node use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A>.\n  syntax:\n    content: public System.Workflow.Activities.ActiveDirectoryRole GetDirectReports ();\n    parameters: []\n    return:\n      type: System.Workflow.Activities.ActiveDirectoryRole\n      description: An <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref> that contains all the roles that directly report to the current role.\n  overload: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetEntries\n  id: GetEntries\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  langs:\n  - csharp\n  name: GetEntries()\n  nameWithType: ActiveDirectoryRole.GetEntries()\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetEntries()\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Returns the generic collection that contains all <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> objects associated with the current <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>.\n  remarks: A role can be a general collection of security objects. As such, a role can contain multiple identities, for example use GetEntries to return all directory objects associated with the role.\n  syntax:\n    content: public System.Collections.Generic.ICollection<System.DirectoryServices.DirectoryEntry> GetEntries ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.ICollection{System.DirectoryServices.DirectoryEntry}\n      description: The generic <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> collection that is associated with the current <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>.\n  overload: System.Workflow.Activities.ActiveDirectoryRole.GetEntries*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities\n  id: GetIdentities\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  langs:\n  - csharp\n  name: GetIdentities()\n  nameWithType: ActiveDirectoryRole.GetIdentities()\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities()\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets a generic list of the Windows NT accounts associated with the <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>.\n  remarks: GetIdentities obtains all <xref:System.Security.Principal.SecurityIdentifier> objects associated with the <xref:System.Workflow.Activities.ActiveDirectoryRole> and converts each of them into a string value.\n  syntax:\n    content: public override System.Collections.Generic.IList<string> GetIdentities ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.String}\n      description: A generic list of values that represent the Windows NT accounts associated with the <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>.\n  overload: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManager\n  id: GetManager\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  langs:\n  - csharp\n  name: GetManager()\n  nameWithType: ActiveDirectoryRole.GetManager()\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManager()\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Returns an Active Directory role that contains information about the manager of the current <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>.\n  remarks: GetManager returns the direct manager for the current role. To return all roles above the current node, use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A>.\n  syntax:\n    content: public System.Workflow.Activities.ActiveDirectoryRole GetManager ();\n    parameters: []\n    return:\n      type: System.Workflow.Activities.ActiveDirectoryRole\n      description: The <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref> that contains information about the manager of the current role.\n  overload: System.Workflow.Activities.ActiveDirectoryRole.GetManager*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain\n  id: GetManagerialChain\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  langs:\n  - csharp\n  name: GetManagerialChain()\n  nameWithType: ActiveDirectoryRole.GetManagerialChain()\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain()\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Returns the Active Directory role that contains information about the managerial chain associated with the current <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>.\n  remarks: GetManagerialChain returns all nodes above the current role. To return just the direct manager of the current role, use <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>.\n  syntax:\n    content: public System.Workflow.Activities.ActiveDirectoryRole GetManagerialChain ();\n    parameters: []\n    return:\n      type: System.Workflow.Activities.ActiveDirectoryRole\n      description: The <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref> that contains information about the managerial chain associated with the current role.\n  overload: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetPeers\n  id: GetPeers\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  langs:\n  - csharp\n  name: GetPeers()\n  nameWithType: ActiveDirectoryRole.GetPeers()\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetPeers()\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Returns an Active Directory role that contains information about all the directory operations that are supervised by the manager of the current <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>.\n  remarks: The <xref:System.Workflow.Activities.ActiveDirectoryRole> returned contains information from all objects managed by the manager of this role but does not contain this information from the current role.\n  syntax:\n    content: public System.Workflow.Activities.ActiveDirectoryRole GetPeers ();\n    parameters: []\n    return:\n      type: System.Workflow.Activities.ActiveDirectoryRole\n      description: A <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref> that contains information about all directory operations that are supervised by the manager of the current <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>.\n  overload: System.Workflow.Activities.ActiveDirectoryRole.GetPeers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers\n  id: GetSecurityIdentifiers\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  langs:\n  - csharp\n  name: GetSecurityIdentifiers()\n  nameWithType: ActiveDirectoryRole.GetSecurityIdentifiers()\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers()\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Returns a generic list of <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> objects associated with the current <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>.\n  remarks: GetSecurityIdentifiers checks each <xref:System.DirectoryServices.DirectoryEntry> returned by the <xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A> method to see if the entry has a security identifier in its <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> collection. If the <xref:System.DirectoryServices.DirectoryEntry> has such a property, GetSecurityIdentifiers adds a <xref:System.Security.Principal.SecurityIdentifier> to the list it returns.\n  syntax:\n    content: public System.Collections.Generic.IList<System.Security.Principal.SecurityIdentifier> GetSecurityIdentifiers ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.Security.Principal.SecurityIdentifier}\n      description: A generic list of <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> objects associated with the current <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>.\n  overload: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)\n  id: IncludesIdentity(System.String)\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  langs:\n  - csharp\n  name: IncludesIdentity(String)\n  nameWithType: ActiveDirectoryRole.IncludesIdentity(String)\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(String)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Returns a value that indicates whether the <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref> contains the specified identity.\n  remarks: Because a role is a generalization of one or more objects, many identities may be described by a single role. Use IncludesIdentity to test that a specified identity is included within this role.\n  syntax:\n    content: public override bool IncludesIdentity (string identity);\n    parameters:\n    - id: identity\n      type: System.String\n      description: The identity for which to search.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that <code>identity</code> is included in the <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ActiveDirectoryRole.Name\n  id: Name\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ActiveDirectoryRole.Name\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.Name\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets the Active Directory role name.\n  remarks: Use the name to describe the role.\n  syntax:\n    content: public override string Name { get; set; }\n    return:\n      type: System.String\n      description: The Active Directory role name.\n  overload: System.Workflow.Activities.ActiveDirectoryRole.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ActiveDirectoryRole.RootEntry\n  id: RootEntry\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  langs:\n  - csharp\n  name: RootEntry\n  nameWithType: ActiveDirectoryRole.RootEntry\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.RootEntry\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets the root Active Directory node associated with the <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>.\n  remarks: The root entry is the role up the chain of roles that has no manager.\n  syntax:\n    content: public System.DirectoryServices.DirectoryEntry RootEntry { get; }\n    return:\n      type: System.DirectoryServices.DirectoryEntry\n      description: A <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> that represents the root Active Directory node associated with the <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>.\n  overload: System.Workflow.Activities.ActiveDirectoryRole.RootEntry*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose\n  id: System#IDisposable#Dispose\n  isEii: true\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  langs:\n  - csharp\n  name: System.IDisposable.Dispose()\n  nameWithType: ActiveDirectoryRole.System.IDisposable.Dispose()\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.IDisposable.Dispose()\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Releases all resources used by the <xref href=\"System.Workflow.Activities.ActiveDirectoryRole\"></xref>.\n  syntax:\n    content: void IDisposable.Dispose ();\n    parameters: []\n  overload: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  langs:\n  - csharp\n  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> with the data required to serialize the target object.\n  remarks: The implementation of <xref:System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData%2A> allows this object to be serialized.\n  syntax:\n    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to populate with data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref:System.Runtime.Serialization.StreamingContext> destination for this serialization.\n  overload: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.Activities.WorkflowRole\n  isExternal: false\n  name: System.Workflow.Activities.WorkflowRole\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: GetAllReports()\n  nameWithType: ActiveDirectoryRole.GetAllReports()\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports()\n- uid: System.Workflow.Activities.ActiveDirectoryRole\n  parent: System.Workflow.Activities\n  isExternal: false\n  name: ActiveDirectoryRole\n  nameWithType: ActiveDirectoryRole\n  fullName: System.Workflow.Activities.ActiveDirectoryRole\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: GetDirectReports()\n  nameWithType: ActiveDirectoryRole.GetDirectReports()\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports()\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetEntries\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: GetEntries()\n  nameWithType: ActiveDirectoryRole.GetEntries()\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetEntries()\n- uid: System.Collections.Generic.ICollection{System.DirectoryServices.DirectoryEntry}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<DirectoryEntry>\n  nameWithType: ICollection<DirectoryEntry>\n  fullName: System.Collections.Generic.ICollection<System.DirectoryServices.DirectoryEntry>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<System.DirectoryServices.DirectoryEntry>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.DirectoryServices.DirectoryEntry\n    name: DirectoryEntry\n    nameWithType: DirectoryEntry\n    fullName: DirectoryEntry\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: GetIdentities()\n  nameWithType: ActiveDirectoryRole.GetIdentities()\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities()\n- uid: System.Collections.Generic.IList{System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<String>\n  nameWithType: IList<String>\n  fullName: System.Collections.Generic.IList<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManager\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: GetManager()\n  nameWithType: ActiveDirectoryRole.GetManager()\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManager()\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: GetManagerialChain()\n  nameWithType: ActiveDirectoryRole.GetManagerialChain()\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain()\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetPeers\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: GetPeers()\n  nameWithType: ActiveDirectoryRole.GetPeers()\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetPeers()\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: GetSecurityIdentifiers()\n  nameWithType: ActiveDirectoryRole.GetSecurityIdentifiers()\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers()\n- uid: System.Collections.Generic.IList{System.Security.Principal.SecurityIdentifier}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<SecurityIdentifier>\n  nameWithType: IList<SecurityIdentifier>\n  fullName: System.Collections.Generic.IList<System.Security.Principal.SecurityIdentifier>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Security.Principal.SecurityIdentifier>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Principal.SecurityIdentifier\n    name: SecurityIdentifier\n    nameWithType: SecurityIdentifier\n    fullName: SecurityIdentifier\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: IncludesIdentity(String)\n  nameWithType: ActiveDirectoryRole.IncludesIdentity(String)\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.ActiveDirectoryRole.Name\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: Name\n  nameWithType: ActiveDirectoryRole.Name\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.Name\n- uid: System.Workflow.Activities.ActiveDirectoryRole.RootEntry\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: RootEntry\n  nameWithType: ActiveDirectoryRole.RootEntry\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.RootEntry\n- uid: System.DirectoryServices.DirectoryEntry\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryEntry\n  nameWithType: DirectoryEntry\n  fullName: System.DirectoryServices.DirectoryEntry\n- uid: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: System.IDisposable.Dispose()\n  nameWithType: ActiveDirectoryRole.System.IDisposable.Dispose()\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.IDisposable.Dispose()\n- uid: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports*\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: GetAllReports\n  nameWithType: ActiveDirectoryRole.GetAllReports\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports*\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: GetDirectReports\n  nameWithType: ActiveDirectoryRole.GetDirectReports\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetEntries*\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: GetEntries\n  nameWithType: ActiveDirectoryRole.GetEntries\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities*\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: GetIdentities\n  nameWithType: ActiveDirectoryRole.GetIdentities\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManager*\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: GetManager\n  nameWithType: ActiveDirectoryRole.GetManager\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain*\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: GetManagerialChain\n  nameWithType: ActiveDirectoryRole.GetManagerialChain\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetPeers*\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: GetPeers\n  nameWithType: ActiveDirectoryRole.GetPeers\n- uid: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers*\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: GetSecurityIdentifiers\n  nameWithType: ActiveDirectoryRole.GetSecurityIdentifiers\n- uid: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity*\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: IncludesIdentity\n  nameWithType: ActiveDirectoryRole.IncludesIdentity\n- uid: System.Workflow.Activities.ActiveDirectoryRole.Name*\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: Name\n  nameWithType: ActiveDirectoryRole.Name\n- uid: System.Workflow.Activities.ActiveDirectoryRole.RootEntry*\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: RootEntry\n  nameWithType: ActiveDirectoryRole.RootEntry\n- uid: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose*\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: System.IDisposable.Dispose\n  nameWithType: ActiveDirectoryRole.System.IDisposable.Dispose\n- uid: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.Workflow.Activities.ActiveDirectoryRole\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData\n"}