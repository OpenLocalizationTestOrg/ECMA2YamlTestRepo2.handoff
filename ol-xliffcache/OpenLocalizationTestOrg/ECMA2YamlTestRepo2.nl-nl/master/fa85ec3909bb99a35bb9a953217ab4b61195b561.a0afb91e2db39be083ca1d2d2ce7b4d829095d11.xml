{"nodes":[{"pos":[2369,2408],"content":"Manages user profile data and settings.","needQuote":true,"needEscape":true,"nodes":[{"content":"Manages user profile data and settings.","pos":[0,39]}]},{"pos":[2421,5006],"content":"The ASP.NET profile is used to store and retrieve user settings in a data source such as a database. The user profile is accessed using the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext>. Profile information and property values are managed using a profile provider.       The ProfileManager class is used to manage profile settings, search for user profiles, and delete user profiles that are no longer in use. The ProfileManager class provides static methods and properties that can be accessed by referencing the ProfileManager class in your application code. For an example, see the Example section in this topic and additional examples in the topics for members of the ProfileManager class.       By default, the user profile is disabled for all ASP.NET applications. To enable the user profile, set the `enabled` attribute of the  configuration element to true, as shown in the following example.      ```   <configuration>     <system.web>       <profile enabled=\"true\" />     </system.web>   </configuration>   ```       For more information about the user profile, see [ASP.NET Profile Properties Overview](~/add/includes/ajax-current-ext-md.md).       A profile provider is used to store and retrieve properties in the user profile. The .NET Framework includes a <xref:System.Web.Profile.SqlProfileProvider> class that stores user profile properties in a SQL Server database. A <xref:System.Web.Profile.SqlProfileProvider> instance named `AspNetSqlProvider` is specified in the machine configuration as the default profile provider. The `AspNetSqlProvider` instance connects to the SQL Server database on the local Web server. You can specify a <xref:System.Web.Profile.SqlProfileProvider> that connects to another SQL Server as the default profile provider by using the  configuration element and the `defaultProvider` attribute of the  configuration element, as shown in the following example.      ```   <configuration>     <connectionStrings>       <add name=\"SqlServices\" connectionString=         \"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />     </connectionStrings>     <system.web>       <profile defaultProvider=\"SqlProvider\">         <providers>           <clear />           <add name=\"SqlProvider\"             type=\"System.Web.Profile.SqlProfileProvider\"             connectionStringName=\"SqlServices\"             applicationName=\"MyApplication\" />         </providers>       </profile>     </system.web>   </configuration>   ```","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ASP.NET profile is used to store and retrieve user settings in a data source such as a database.","pos":[0,100]},{"content":"The user profile is accessed using the &lt;xref:System.Web.HttpContext.Profile%2A&gt; property of the current &lt;xref:System.Web.HttpContext&gt;.","pos":[101,235],"source":" The user profile is accessed using the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext>."},{"content":"Profile information and property values are managed using a profile provider.","pos":[236,313]},{"content":"The ProfileManager class is used to manage profile settings, search for user profiles, and delete user profiles that are no longer in use.","pos":[320,458]},{"content":"The ProfileManager class provides static methods and properties that can be accessed by referencing the ProfileManager class in your application code.","pos":[459,609]},{"content":"For an example, see the Example section in this topic and additional examples in the topics for members of the ProfileManager class.","pos":[610,742]},{"content":"By default, the user profile is disabled for all ASP.NET applications.","pos":[749,819]},{"content":"To enable the user profile, set the <ph id=\"ph1\">`enabled`</ph> attribute of the  configuration element to true, as shown in the following example.","pos":[820,949],"source":" To enable the user profile, set the `enabled` attribute of the  configuration element to true, as shown in the following example."},{"content":"<ph id=\"ph1\">```   &lt;configuration&gt;     &lt;system.web&gt;       &lt;profile enabled=\"true\" /&gt;     &lt;/system.web&gt;   &lt;/configuration&gt;   ```</ph>       For more information about the user profile, see <bpt id=\"p1\">[</bpt>ASP.NET Profile Properties Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[955,1202],"source":"```   <configuration>     <system.web>       <profile enabled=\"true\" />     </system.web>   </configuration>   ```       For more information about the user profile, see [ASP.NET Profile Properties Overview](~/add/includes/ajax-current-ext-md.md)."},{"content":"A profile provider is used to store and retrieve properties in the user profile.","pos":[1209,1289]},{"content":"The .NET Framework includes a &lt;xref:System.Web.Profile.SqlProfileProvider&gt; class that stores user profile properties in a SQL Server database.","pos":[1290,1432],"source":" The .NET Framework includes a <xref:System.Web.Profile.SqlProfileProvider> class that stores user profile properties in a SQL Server database."},{"content":"A &lt;xref:System.Web.Profile.SqlProfileProvider&gt; instance named <ph id=\"ph1\">`AspNetSqlProvider`</ph> is specified in the machine configuration as the default profile provider.","pos":[1433,1589],"source":" A <xref:System.Web.Profile.SqlProfileProvider> instance named `AspNetSqlProvider` is specified in the machine configuration as the default profile provider."},{"content":"The <ph id=\"ph1\">`AspNetSqlProvider`</ph> instance connects to the SQL Server database on the local Web server.","pos":[1590,1683],"source":" The `AspNetSqlProvider` instance connects to the SQL Server database on the local Web server."},{"content":"You can specify a &lt;xref:System.Web.Profile.SqlProfileProvider&gt; that connects to another SQL Server as the default profile provider by using the  configuration element and the <ph id=\"ph1\">`defaultProvider`</ph> attribute of the  configuration element, as shown in the following example.","pos":[1684,1952],"source":" You can specify a <xref:System.Web.Profile.SqlProfileProvider> that connects to another SQL Server as the default profile provider by using the  configuration element and the `defaultProvider` attribute of the  configuration element, as shown in the following example."}]},{"pos":[6423,6464],"content":"Adds a profile property programmatically.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a profile property programmatically.","pos":[0,41]}]},{"pos":[6476,6761],"content":"This method is functionally equivalent to adding the property to the `profile` section of the configuration file. To call this method to add the profile property, you must make the call in a method that is marked with the <xref:System.Web.PreApplicationStartMethodAttribute> attribute.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is functionally equivalent to adding the property to the <ph id=\"ph1\">`profile`</ph> section of the configuration file.","pos":[0,113],"source":"This method is functionally equivalent to adding the property to the `profile` section of the configuration file."},{"content":"To call this method to add the profile property, you must make the call in a method that is marked with the &lt;xref:System.Web.PreApplicationStartMethodAttribute&gt; attribute.","pos":[114,285],"source":" To call this method to add the profile property, you must make the call in a method that is marked with the <xref:System.Web.PreApplicationStartMethodAttribute> attribute."}]},{"pos":[7006,7040],"content":"The property settings to be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property settings to be added.","pos":[0,34]}]},{"pos":[7519,7612],"content":"Gets or sets the name of the application for which to store and retrieve profile information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the application for which to store and retrieve profile information.","pos":[0,93]}]},{"pos":[7625,10287],"content":"The <xref:System.Web.Profile.ProfileManager> uses the ApplicationName property to associate profile information with different applications. This enables multiple applications to use the same database to store user information without running into conflicts between duplicate users. Multiple ASP.NET applications can use the same user database by specifying the same value in the ApplicationName property. The ApplicationName property can be set programmatically, or it can be set declaratively in the configuration file for the Web application by using the `applicationName` attribute.       If a value is not specified for the `applicationName` attribute in the configuration file for the Web application, then the profile providers included with the .NET Framework use the <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> property value for ASP.NET applications. For non-ASP.NET applications, the default value is the <xref:System.Diagnostics.ProcessModule.ModuleName%2A> property value, without the file extension.       The ApplicationName property exposes the <xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=fullName> property of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, they may be configured with a different application name. To access the application name of a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and access the <xref:System.Configuration.SettingsProvider.ApplicationName%2A> property of the provider directly.      > [!CAUTION] >  Because a single default profile provider instance is used for all of the requests served by an <xref:System.Web.HttpApplication> object, you can have multiple requests executing concurrently and attempting to set the ApplicationName property value. The ApplicationName property is not thread safe for multiple writes, and changing the ApplicationName property value can result in unexpected behavior for multiple users of an application. It is recommended that you avoid writing code that allows users to set the ApplicationName property unless you require it. An example of an application where setting the ApplicationName property may be required is an administrative application that manages profile data for multiple applications. Such an application should be a single-user application and not a Web application.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.Profile.ProfileManager&gt; uses the ApplicationName property to associate profile information with different applications.","pos":[0,140],"source":"The <xref:System.Web.Profile.ProfileManager> uses the ApplicationName property to associate profile information with different applications."},{"content":"This enables multiple applications to use the same database to store user information without running into conflicts between duplicate users.","pos":[141,282]},{"content":"Multiple ASP.NET applications can use the same user database by specifying the same value in the ApplicationName property.","pos":[283,405]},{"content":"The ApplicationName property can be set programmatically, or it can be set declaratively in the configuration file for the Web application by using the <ph id=\"ph1\">`applicationName`</ph> attribute.","pos":[406,586],"source":" The ApplicationName property can be set programmatically, or it can be set declaratively in the configuration file for the Web application by using the `applicationName` attribute."},{"content":"If a value is not specified for the <ph id=\"ph1\">`applicationName`</ph> attribute in the configuration file for the Web application, then the profile providers included with the .NET Framework use the &lt;xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A&gt; property value for ASP.NET applications.","pos":[593,887],"source":"       If a value is not specified for the `applicationName` attribute in the configuration file for the Web application, then the profile providers included with the .NET Framework use the <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> property value for ASP.NET applications."},{"content":"For non-ASP.NET applications, the default value is the &lt;xref:System.Diagnostics.ProcessModule.ModuleName%2A&gt; property value, without the file extension.","pos":[888,1040],"source":" For non-ASP.NET applications, the default value is the <xref:System.Diagnostics.ProcessModule.ModuleName%2A> property value, without the file extension."},{"content":"The ApplicationName property exposes the &lt;xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=fullName&gt; property of the default profile provider.","pos":[1047,1218],"source":"       The ApplicationName property exposes the <xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=fullName> property of the default profile provider."},{"content":"The default profile provider is specified using the <ph id=\"ph1\">`defaultProvider`</ph> attribute of the  configuration element.","pos":[1219,1329],"source":" The default profile provider is specified using the `defaultProvider` attribute of the  configuration element."},{"content":"If the user profile contains properties that are managed by a profile provider other than the default provider, they may be configured with a different application name.","pos":[1330,1499]},{"content":"To access the application name of a profile provider other than the default provider, obtain a reference to the profile provider using the &lt;xref:System.Web.Profile.ProfileManager.Providers%2A&gt; property and access the &lt;xref:System.Configuration.SettingsProvider.ApplicationName%2A&gt; property of the provider directly.","pos":[1500,1815],"source":" To access the application name of a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and access the <xref:System.Configuration.SettingsProvider.ApplicationName%2A> property of the provider directly."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  Because a single default profile provider instance is used for all of the requests served by an &lt;xref:System.Web.HttpApplication&gt; object, you can have multiple requests executing concurrently and attempting to set the ApplicationName property value.","pos":[1821,2086],"source":"      > [!CAUTION] >  Because a single default profile provider instance is used for all of the requests served by an <xref:System.Web.HttpApplication> object, you can have multiple requests executing concurrently and attempting to set the ApplicationName property value."},{"content":"The ApplicationName property is not thread safe for multiple writes, and changing the ApplicationName property value can result in unexpected behavior for multiple users of an application.","pos":[2087,2275]},{"content":"It is recommended that you avoid writing code that allows users to set the ApplicationName property unless you require it.","pos":[2276,2398]},{"content":"An example of an application where setting the ApplicationName property may be required is an administrative application that manages profile data for multiple applications.","pos":[2399,2572]},{"content":"Such an application should be a single-user application and not a Web application.","pos":[2573,2655]}]},{"pos":[11025,11105],"content":"The name of the application for which to store and retrieve profile information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the application for which to store and retrieve profile information.","pos":[0,80]}]},{"pos":[11599,11723],"content":"Gets a value indicating whether the user profile will be automatically saved at the end of the execution of an ASP.NET page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the user profile will be automatically saved at the end of the execution of an ASP.NET page.","pos":[0,124]}]},{"pos":[11736,12350],"content":"The AutomaticSaveEnabled property indicates whether automatic saving of the user profile is enabled for the application. If automatic saving is enabled, the <xref:System.Web.Profile.ProfileModule> object raises the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event and calls the <xref:System.Web.Profile.ProfileBase.Save%2A> method during the <xref:System.Web.HttpApplication.EndRequest> event at the end of the execution of an ASP.NET page.       The AutomaticSaveEnabled property is set using the `automaticSaveEnabled` attribute of the  element in the Web.config file for an ASP.NET application.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The AutomaticSaveEnabled property indicates whether automatic saving of the user profile is enabled for the application.","pos":[0,120]},{"content":"If automatic saving is enabled, the &lt;xref:System.Web.Profile.ProfileModule&gt; object raises the &lt;xref:System.Web.Profile.ProfileModule.ProfileAutoSaving&gt; event and calls the &lt;xref:System.Web.Profile.ProfileBase.Save%2A&gt; method during the &lt;xref:System.Web.HttpApplication.EndRequest&gt; event at the end of the execution of an ASP.NET page.","pos":[121,455],"source":" If automatic saving is enabled, the <xref:System.Web.Profile.ProfileModule> object raises the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event and calls the <xref:System.Web.Profile.ProfileBase.Save%2A> method during the <xref:System.Web.HttpApplication.EndRequest> event at the end of the execution of an ASP.NET page."},{"content":"The AutomaticSaveEnabled property is set using the <ph id=\"ph1\">`automaticSaveEnabled`</ph> attribute of the  element in the Web.config file for an ASP.NET application.","pos":[462,612],"source":"       The AutomaticSaveEnabled property is set using the `automaticSaveEnabled` attribute of the  element in the Web.config file for an ASP.NET application."}]},{"pos":[13148,13456],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user profile will be automatically saved at the end of the execution of an ASP.NET page; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user profile will be automatically saved at the end of the execution of an ASP.NET page; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,231],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user profile will be automatically saved at the end of the execution of an ASP.NET page; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[232,308],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[13633,13789],"content":"An attempt was made to get the AutomaticSaveEnabled property value without at least <bpt id=\"p1\">&lt;xref href=\"System.Web.AspNetHostingPermissionLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> permission.","needQuote":true,"needEscape":true,"source":"An attempt was made to get the AutomaticSaveEnabled property value without at least <xref href=\"System.Web.AspNetHostingPermissionLevel\"></xref> permission."},{"pos":[14453,14565],"content":"Deletes user profile data for which the last activity date and time occurred before the specified date and time.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes user profile data for which the last activity date and time occurred before the specified date and time.","pos":[0,112]}]},{"pos":[14578,15889],"content":"The DeleteInactiveProfiles method is used to remove unused profile data from the data source for the application specified by the `applicationName` attribute in the configuration file. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched. Of the searched profiles, any profile with a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value is deleted.       The DeleteInactiveProfiles method calls the <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, the profile information in the other data source is not deleted. To delete inactive profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> method of the provider directly.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The DeleteInactiveProfiles method is used to remove unused profile data from the data source for the application specified by the <ph id=\"ph1\">`applicationName`</ph> attribute in the configuration file.","pos":[0,184],"source":"The DeleteInactiveProfiles method is used to remove unused profile data from the data source for the application specified by the `applicationName` attribute in the configuration file."},{"content":"Use the <ph id=\"ph1\">`authenticationOption`</ph> parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.","pos":[185,339],"source":" Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched."},{"content":"Of the searched profiles, any profile with a &lt;xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A&gt; that occurs on or before the specified <ph id=\"ph1\">`userInactiveSinceDate`</ph> parameter value is deleted.","pos":[340,533],"source":" Of the searched profiles, any profile with a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value is deleted."},{"content":"The DeleteInactiveProfiles method calls the &lt;xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A&gt; method of the default profile provider.","pos":[540,691],"source":"       The DeleteInactiveProfiles method calls the <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> method of the default profile provider."},{"content":"The default profile provider is specified using the <ph id=\"ph1\">`defaultProvider`</ph> attribute of the  configuration element.","pos":[692,802],"source":" The default profile provider is specified using the `defaultProvider` attribute of the  configuration element."},{"content":"If the user profile contains properties that are managed by a profile provider other than the default provider, the profile information in the other data source is not deleted.","pos":[803,979]},{"content":"To delete inactive profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the &lt;xref:System.Web.Profile.ProfileManager.Providers%2A&gt; property and call the &lt;xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A&gt; method of the provider directly.","pos":[980,1309],"source":" To delete inactive profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> method of the provider directly."}]},{"pos":[16958,17140],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileAuthenticationOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are deleted.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are deleted."},{"pos":[17220,17462],"content":"A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive.","pos":[0,242],"nodes":[{"content":"A &lt;xref:System.DateTime&gt; that identifies which user profiles are considered inactive.","pos":[0,85],"source":"A <xref:System.DateTime> that identifies which user profiles are considered inactive."},{"content":"If the &lt;xref:System.Web.Profile.ProfileInfo.LastActivityDate*&gt; of a user profile occurs on or before this date and time, the profile is considered inactive.","pos":[86,242],"source":" If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive."}]}]},{"pos":[17519,17571],"content":"The number of profiles deleted from the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of profiles deleted from the data source.","pos":[0,52]}]},{"pos":[18089,18158],"content":"Deletes the profile for the specified user name from the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes the profile for the specified user name from the data source.","pos":[0,69]}]},{"pos":[18171,19135],"content":"The DeleteProfile method deletes all profile information and properties for the user profile for the specified `username` from the data source for the specified <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>.       The DeleteProfile method calls the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> method of the default profile provider to perform the delete operation. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, they are not deleted. To delete profile properties that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> method of the provider directly.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The DeleteProfile method deletes all profile information and properties for the user profile for the specified <ph id=\"ph1\">`username`</ph> from the data source for the specified &lt;xref:System.Web.Profile.ProfileManager.ApplicationName%2A&gt;.","pos":[0,221],"source":"The DeleteProfile method deletes all profile information and properties for the user profile for the specified `username` from the data source for the specified <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>."},{"content":"The DeleteProfile method calls the &lt;xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A&gt; method of the default profile provider to perform the delete operation.","pos":[228,394],"source":"       The DeleteProfile method calls the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> method of the default profile provider to perform the delete operation."},{"content":"The default profile provider is specified using the <ph id=\"ph1\">`defaultProvider`</ph> attribute of the  configuration element.","pos":[395,505],"source":" The default profile provider is specified using the `defaultProvider` attribute of the  configuration element."},{"content":"If the user profile contains properties that are managed by a profile provider other than the default provider, they are not deleted.","pos":[506,639]},{"content":"To delete profile properties that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the &lt;xref:System.Web.Profile.ProfileManager.Providers%2A&gt; property and call the &lt;xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A&gt; method of the provider directly.","pos":[640,962],"source":" To delete profile properties that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> method of the provider directly."}]},{"pos":[20228,20272],"content":"The user name for the profile to be deleted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name for the profile to be deleted.","pos":[0,44]}]},{"pos":[20331,20509],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user profile was found and deleted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user profile was found and deleted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20679,20745],"content":"<ph id=\"ph1\">&lt;code&gt;username&lt;/code&gt;</ph> is an empty string (\"\") or contains a comma.","needQuote":true,"needEscape":true,"source":"<code>username</code> is an empty string (\"\") or contains a comma."},{"pos":[20848,20934],"content":"<ph id=\"ph1\">&lt;code&gt;username&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[21380,21459],"content":"Deletes profile properties and information for the supplied list of user names.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes profile properties and information for the supplied list of user names.","pos":[0,79]}]},{"pos":[21472,22827],"content":"The DeleteProfiles method deletes all profile information and properties for the specified profiles from the data source for the application specified by the <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> property. The list of profiles to delete is specified as a string array of user names. If profile properties and information exist in the data source for a user name in the `usernames` parameter, they are deleted.       The return value may differ from the length of the specified array of `usernames`. This indicates that some of the profiles in the specified array of `usernames` were already deleted from the data store.       The DeleteProfiles method calls the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, they are not deleted. To delete profile properties that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> method of the provider directly.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The DeleteProfiles method deletes all profile information and properties for the specified profiles from the data source for the application specified by the &lt;xref:System.Web.Profile.ProfileManager.ApplicationName%2A&gt; property.","pos":[0,227],"source":"The DeleteProfiles method deletes all profile information and properties for the specified profiles from the data source for the application specified by the <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> property."},{"content":"The list of profiles to delete is specified as a string array of user names.","pos":[228,304]},{"content":"If profile properties and information exist in the data source for a user name in the <ph id=\"ph1\">`usernames`</ph> parameter, they are deleted.","pos":[305,431],"source":" If profile properties and information exist in the data source for a user name in the `usernames` parameter, they are deleted."},{"content":"The return value may differ from the length of the specified array of <ph id=\"ph1\">`usernames`</ph>.","pos":[438,520],"source":"       The return value may differ from the length of the specified array of `usernames`."},{"content":"This indicates that some of the profiles in the specified array of <ph id=\"ph1\">`usernames`</ph> were already deleted from the data store.","pos":[521,641],"source":" This indicates that some of the profiles in the specified array of `usernames` were already deleted from the data store."},{"content":"The DeleteProfiles method calls the &lt;xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A&gt; method of the default profile provider.","pos":[648,783],"source":"       The DeleteProfiles method calls the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> method of the default profile provider."},{"content":"The default profile provider is specified using the <ph id=\"ph1\">`defaultProvider`</ph> attribute of the  configuration element.","pos":[784,894],"source":" The default profile provider is specified using the `defaultProvider` attribute of the  configuration element."},{"content":"If the user profile contains properties that are managed by a profile provider other than the default provider, they are not deleted.","pos":[895,1028]},{"content":"To delete profile properties that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the &lt;xref:System.Web.Profile.ProfileManager.Providers%2A&gt; property and call the &lt;xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A&gt; method of the provider directly.","pos":[1029,1351],"source":" To delete profile properties that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> method of the provider directly."}]},{"pos":[23909,23965],"content":"A string array of user names for profiles to be deleted.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string array of user names for profiles to be deleted.","pos":[0,56]}]},{"pos":[24022,24074],"content":"The number of profiles deleted from the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of profiles deleted from the data source.","pos":[0,52]}]},{"pos":[25369,25467],"content":"Deletes profile properties and information from the data source for the supplied list of profiles.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes profile properties and information from the data source for the supplied list of profiles.","pos":[0,98]}]},{"pos":[25480,27279],"content":"The DeleteProfiles method deletes all profile information and properties for the specified profiles from the data source for the application specified by the <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> property. The list of profiles to delete is specified using a <xref:System.Web.Profile.ProfileInfoCollection> that is passed as the `profiles` parameter. A <xref:System.Web.Profile.ProfileInfoCollection> can be returned from the <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>, <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>, and <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> methods.       Note that the return value may differ from the <xref:System.Web.Profile.ProfileInfoCollection.Count%2A> value for the supplied <xref:System.Web.Profile.ProfileInfoCollection>. This indicates that some of the profiles in the specified <xref:System.Web.Profile.ProfileInfoCollection> were already deleted from the data store.       The DeleteProfiles method calls the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=fullName> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, they are not deleted. To delete profile properties that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> method of the provider directly.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The DeleteProfiles method deletes all profile information and properties for the specified profiles from the data source for the application specified by the &lt;xref:System.Web.Profile.ProfileManager.ApplicationName%2A&gt; property.","pos":[0,227],"source":"The DeleteProfiles method deletes all profile information and properties for the specified profiles from the data source for the application specified by the <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> property."},{"content":"The list of profiles to delete is specified using a &lt;xref:System.Web.Profile.ProfileInfoCollection&gt; that is passed as the <ph id=\"ph1\">`profiles`</ph> parameter.","pos":[228,371],"source":" The list of profiles to delete is specified using a <xref:System.Web.Profile.ProfileInfoCollection> that is passed as the `profiles` parameter."},{"content":"A &lt;xref:System.Web.Profile.ProfileInfoCollection&gt; can be returned from the &lt;xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A&gt;, &lt;xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A&gt;, &lt;xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A&gt;, and &lt;xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A&gt; methods.","pos":[372,730],"source":" A <xref:System.Web.Profile.ProfileInfoCollection> can be returned from the <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>, <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>, and <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> methods."},{"content":"Note that the return value may differ from the &lt;xref:System.Web.Profile.ProfileInfoCollection.Count%2A&gt; value for the supplied &lt;xref:System.Web.Profile.ProfileInfoCollection&gt;.","pos":[737,912],"source":"       Note that the return value may differ from the <xref:System.Web.Profile.ProfileInfoCollection.Count%2A> value for the supplied <xref:System.Web.Profile.ProfileInfoCollection>."},{"content":"This indicates that some of the profiles in the specified &lt;xref:System.Web.Profile.ProfileInfoCollection&gt; were already deleted from the data store.","pos":[913,1060],"source":" This indicates that some of the profiles in the specified <xref:System.Web.Profile.ProfileInfoCollection> were already deleted from the data store."},{"content":"The DeleteProfiles method calls the &lt;xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=fullName&gt; method of the default profile provider.","pos":[1067,1227],"source":"       The DeleteProfiles method calls the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=fullName> method of the default profile provider."},{"content":"The default profile provider is specified using the <ph id=\"ph1\">`defaultProvider`</ph> attribute of the  configuration element.","pos":[1228,1338],"source":" The default profile provider is specified using the `defaultProvider` attribute of the  configuration element."},{"content":"If the user profile contains properties that are managed by a profile provider other than the default provider, they are not deleted.","pos":[1339,1472]},{"content":"To delete profile properties that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the &lt;xref:System.Web.Profile.ProfileManager.Providers%2A&gt; property and call the &lt;xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A&gt; method of the provider directly.","pos":[1473,1795],"source":" To delete profile properties that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> method of the provider directly."}]},{"pos":[28371,28496],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileInfoCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains profile information for profiles to be deleted.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.Profile.ProfileInfoCollection\"></xref> that contains profile information for profiles to be deleted."},{"pos":[28553,28605],"content":"The number of profiles deleted from the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of profiles deleted from the data source.","pos":[0,52]}]},{"pos":[29903,29983],"content":"Gets a value indicating whether the user profile is enabled for the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the user profile is enabled for the application.","pos":[0,80]}]},{"pos":[29995,30102],"content":"The user profile is enabled for an application using the <ph id=\"ph1\">`enabled`</ph> attribute of the  configuration element.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The user profile is enabled for an application using the `enabled` attribute of the  configuration element."},{"pos":[30700,30946],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user profile is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user profile is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,167],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user profile is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[168,246],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[31771,31961],"content":"Retrieves profile information for all profiles in which the last activity date occurred on or before the specified date and time and the user name for the profile matches the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves profile information for all profiles in which the last activity date occurred on or before the specified date and time and the user name for the profile matches the specified name.","pos":[0,190]}]},{"pos":[31974,34175],"content":"The FindInactiveProfilesByUserName method is used to retrieve profile information for all unused user profiles for the application specified by the `applicationName` attribute in the configuration file. This method will only retrieve profiles for which the profile user name matches the supplied `usernameToMatch` parameter value. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched. Of the searched profiles, any profile with a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value is returned.       You can retrieve this information in pages of data using the overload for the <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29> method that takes additional `pageIndex` and `pageSize` parameters.      > [!NOTE] >  Your profile provider may support wildcard characters in the `usernameToMatch` parameter. For example, the <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> method of the <xref:System.Web.Profile.SqlProfileProvider> class supports wildcard characters in the `usernameToMatch` parameter.       The FindInactiveProfilesByUserName method calls the <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=fullName> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched. To find inactive profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> method of the provider directly.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The FindInactiveProfilesByUserName method is used to retrieve profile information for all unused user profiles for the application specified by the <ph id=\"ph1\">`applicationName`</ph> attribute in the configuration file.","pos":[0,202],"source":"The FindInactiveProfilesByUserName method is used to retrieve profile information for all unused user profiles for the application specified by the `applicationName` attribute in the configuration file."},{"content":"This method will only retrieve profiles for which the profile user name matches the supplied <ph id=\"ph1\">`usernameToMatch`</ph> parameter value.","pos":[203,330],"source":" This method will only retrieve profiles for which the profile user name matches the supplied `usernameToMatch` parameter value."},{"content":"Use the <ph id=\"ph1\">`authenticationOption`</ph> parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.","pos":[331,485],"source":" Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched."},{"content":"Of the searched profiles, any profile with a &lt;xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A&gt; that occurs on or before the specified <ph id=\"ph1\">`userInactiveSinceDate`</ph> parameter value is returned.","pos":[486,680],"source":" Of the searched profiles, any profile with a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value is returned."},{"content":"You can retrieve this information in pages of data using the overload for the &lt;xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29&gt; method that takes additional <ph id=\"ph1\">`pageIndex`</ph> and <ph id=\"ph2\">`pageSize`</ph> parameters.","pos":[687,1038],"source":"       You can retrieve this information in pages of data using the overload for the <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29> method that takes additional `pageIndex` and `pageSize` parameters."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Your profile provider may support wildcard characters in the <ph id=\"ph2\">`usernameToMatch`</ph> parameter.","pos":[1044,1146],"source":"      > [!NOTE] >  Your profile provider may support wildcard characters in the `usernameToMatch` parameter."},{"content":"For example, the &lt;xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A&gt; method of the &lt;xref:System.Web.Profile.SqlProfileProvider&gt; class supports wildcard characters in the <ph id=\"ph1\">`usernameToMatch`</ph> parameter.","pos":[1147,1372],"source":" For example, the <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> method of the <xref:System.Web.Profile.SqlProfileProvider> class supports wildcard characters in the `usernameToMatch` parameter."},{"content":"The FindInactiveProfilesByUserName method calls the &lt;xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=fullName&gt; method of the default profile provider.","pos":[1379,1571],"source":"       The FindInactiveProfilesByUserName method calls the <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=fullName> method of the default profile provider."},{"content":"The default profile provider is specified using the <ph id=\"ph1\">`defaultProvider`</ph> attribute of the  configuration element.","pos":[1572,1682],"source":" The default profile provider is specified using the `defaultProvider` attribute of the  configuration element."},{"content":"If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched.","pos":[1683,1858]},{"content":"To find inactive profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the &lt;xref:System.Web.Profile.ProfileManager.Providers%2A&gt; property and call the &lt;xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A&gt; method of the provider directly.","pos":[1859,2194],"source":" To find inactive profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> method of the provider directly."}]},{"pos":[35589,35772],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileAuthenticationOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned."},{"pos":[35844,35878],"content":"The user name for which to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name for which to search.","pos":[0,34]}]},{"pos":[35958,36200],"content":"A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive.","pos":[0,242],"nodes":[{"content":"A &lt;xref:System.DateTime&gt; that identifies which user profiles are considered inactive.","pos":[0,85],"source":"A <xref:System.DateTime> that identifies which user profiles are considered inactive."},{"content":"If the &lt;xref:System.Web.Profile.ProfileInfo.LastActivityDate*&gt; of a user profile occurs on or before this date and time, the profile is considered inactive.","pos":[86,242],"source":" If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive."}]}]},{"pos":[36285,36490],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileInfoCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing user profile information for inactive profiles in which the user name matches the supplied <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">usernameToMatch</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.Profile.ProfileInfoCollection\"></xref> containing user profile information for inactive profiles in which the user name matches the supplied <code>usernameToMatch</code> parameter."},{"pos":[36685,36778],"content":"<ph id=\"ph1\">&lt;code&gt;usernameToMatch&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>usernameToMatch</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[36873,36926],"content":"<ph id=\"ph1\">&lt;code&gt;usernameToMatch&lt;/code&gt;</ph> is an empty string (\"\").","needQuote":true,"needEscape":true,"source":"<code>usernameToMatch</code> is an empty string (\"\")."},{"pos":[37813,38016],"content":"Retrieves profile information in pages of data for profiles in which the last activity date occurred on or before the specified date and time and the user name for the profile matches the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves profile information in pages of data for profiles in which the last activity date occurred on or before the specified date and time and the user name for the profile matches the specified name.","pos":[0,203]}]},{"pos":[38029,40759],"content":"The FindInactiveProfilesByUserName method is used to retrieve profile information for unused user profiles for the application specified by the `applicationName` attribute in the configuration file. This method will only retrieve profiles for which the user name matches the supplied `usernameToMatch` parameter value. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched. Of the searched profiles, any profile is returned that has a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value.       The results returned by FindInactiveProfilesByUserName are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection> collection. The `pageIndex` parameter identifies which page of results to return; 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the configured `applicationName`, based on the `authenticationOption` and `userInactiveSinceDate` parameters. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is 1 with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned will contain the sixth through the tenth inactive profiles. The `totalRecords` parameter will be set to 13.       Note that your profile provider may support wildcard characters in the `usernameToMatch` parameter. For example, the <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> method of the <xref:System.Web.Profile.SqlProfileProvider> class supports wildcard characters in the `usernameToMatch` parameter.       The FindInactiveProfilesByUserName method calls the <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched. To find inactive profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> method of the provider directly.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The FindInactiveProfilesByUserName method is used to retrieve profile information for unused user profiles for the application specified by the <ph id=\"ph1\">`applicationName`</ph> attribute in the configuration file.","pos":[0,198],"source":"The FindInactiveProfilesByUserName method is used to retrieve profile information for unused user profiles for the application specified by the `applicationName` attribute in the configuration file."},{"content":"This method will only retrieve profiles for which the user name matches the supplied <ph id=\"ph1\">`usernameToMatch`</ph> parameter value.","pos":[199,318],"source":" This method will only retrieve profiles for which the user name matches the supplied `usernameToMatch` parameter value."},{"content":"Use the <ph id=\"ph1\">`authenticationOption`</ph> parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.","pos":[319,473],"source":" Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched."},{"content":"Of the searched profiles, any profile is returned that has a &lt;xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A&gt; that occurs on or before the specified <ph id=\"ph1\">`userInactiveSinceDate`</ph> parameter value.","pos":[474,672],"source":" Of the searched profiles, any profile is returned that has a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value."},{"content":"The results returned by FindInactiveProfilesByUserName are constrained by the <ph id=\"ph1\">`pageIndex`</ph> and <ph id=\"ph2\">`pageSize`</ph> parameters.","pos":[679,795],"source":"       The results returned by FindInactiveProfilesByUserName are constrained by the `pageIndex` and `pageSize` parameters."},{"content":"The <ph id=\"ph1\">`pageSize`</ph> parameter identifies the maximum number of &lt;xref:System.Web.Profile.ProfileInfo&gt; objects to return in the &lt;xref:System.Web.Profile.ProfileInfoCollection&gt; collection.","pos":[796,976],"source":" The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection> collection."},{"content":"The <ph id=\"ph1\">`pageIndex`</ph> parameter identifies which page of results to return; 0 identifies the first page.","pos":[977,1075],"source":" The `pageIndex` parameter identifies which page of results to return; 0 identifies the first page."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter is an <ph id=\"ph2\">`out`</ph> parameter that is set to the total number of inactive user profiles for the configured <ph id=\"ph3\">`applicationName`</ph>, based on the <ph id=\"ph4\">`authenticationOption`</ph> and <ph id=\"ph5\">`userInactiveSinceDate`</ph> parameters.","pos":[1076,1298],"source":" The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the configured `applicationName`, based on the `authenticationOption` and `userInactiveSinceDate` parameters."},{"content":"For example, if there are 13 users for the configured <ph id=\"ph1\">`applicationName`</ph>, and the <ph id=\"ph2\">`pageIndex`</ph> value is 1 with a <ph id=\"ph3\">`pageSize`</ph> of 5, the &lt;xref:System.Web.Profile.ProfileInfoCollection&gt; returned will contain the sixth through the tenth inactive profiles.","pos":[1299,1547],"source":" For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is 1 with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned will contain the sixth through the tenth inactive profiles."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter will be set to 13.","pos":[1548,1595],"source":" The `totalRecords` parameter will be set to 13."},{"content":"Note that your profile provider may support wildcard characters in the <ph id=\"ph1\">`usernameToMatch`</ph> parameter.","pos":[1602,1701],"source":"       Note that your profile provider may support wildcard characters in the `usernameToMatch` parameter."},{"content":"For example, the &lt;xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A&gt; method of the &lt;xref:System.Web.Profile.SqlProfileProvider&gt; class supports wildcard characters in the <ph id=\"ph1\">`usernameToMatch`</ph> parameter.","pos":[1702,1927],"source":" For example, the <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> method of the <xref:System.Web.Profile.SqlProfileProvider> class supports wildcard characters in the `usernameToMatch` parameter."},{"content":"The FindInactiveProfilesByUserName method calls the &lt;xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A&gt; method of the default profile provider.","pos":[1934,2101],"source":"       The FindInactiveProfilesByUserName method calls the <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> method of the default profile provider."},{"content":"The default profile provider is specified using the <ph id=\"ph1\">`defaultProvider`</ph> attribute of the  configuration element.","pos":[2102,2212],"source":" The default profile provider is specified using the `defaultProvider` attribute of the  configuration element."},{"content":"If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched.","pos":[2213,2388]},{"content":"To find inactive profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the &lt;xref:System.Web.Profile.ProfileManager.Providers%2A&gt; property and call the &lt;xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A&gt; method of the provider directly.","pos":[2389,2724],"source":" To find inactive profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> method of the provider directly."}]},{"pos":[42220,42391],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileAuthenticationOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values, specifying whether anonymous, authenticated, or both types of profiles are returned.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> values, specifying whether anonymous, authenticated, or both types of profiles are returned."},{"pos":[42463,42497],"content":"The user name for which to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name for which to search.","pos":[0,34]}]},{"pos":[42577,42819],"content":"A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive.","pos":[0,242],"nodes":[{"content":"A &lt;xref:System.DateTime&gt; that identifies which user profiles are considered inactive.","pos":[0,85],"source":"A <xref:System.DateTime> that identifies which user profiles are considered inactive."},{"content":"If the &lt;xref:System.Web.Profile.ProfileInfo.LastActivityDate*&gt; of a user profile occurs on or before this date and time, the profile is considered inactive.","pos":[86,242],"source":" If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive."}]}]},{"pos":[42884,42954],"content":"The index of the page of results to return. `pageIndex` is zero-based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the page of results to return.","pos":[0,43]},{"content":"<ph id=\"ph1\">`pageIndex`</ph> is zero-based.","pos":[44,70],"source":"`pageIndex` is zero-based."}]},{"pos":[43018,43060],"content":"The size of the page of results to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the page of results to return.","pos":[0,42]}]},{"pos":[43128,43259],"content":"When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.","pos":[0,131],"nodes":[{"content":"When this method returns, contains an integer that identifies the total number of profiles.","pos":[0,91]},{"content":"This parameter is passed uninitialized.","pos":[92,131]}]}]},{"pos":[43344,43546],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileInfoCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing user profile information for inactive profiles where the user name matches the supplied <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">usernameToMatch</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.Profile.ProfileInfoCollection\"></xref> containing user profile information for inactive profiles where the user name matches the supplied <code>usernameToMatch</code> parameter."},{"pos":[43741,43834],"content":"<ph id=\"ph1\">&lt;code&gt;usernameToMatch&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>usernameToMatch</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[44899,44996],"content":"Retrieves all profile information for profiles in which the user name matches the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves all profile information for profiles in which the user name matches the specified name.","pos":[0,97]}]},{"pos":[45009,46747],"content":"The FindProfilesByUserName method returns a list of all profile information for which the user name matches the supplied `usernameToMatch` parameter value for the configured <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> property value. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.       You can retrieve profile information for user profiles in pages of data using the overload for the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> method that takes additional `pageIndex` and `pageSize` parameters.       Note that your profile provider may support wildcard characters in the `usernameToMatch` parameter. For example, the <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> method of the <xref:System.Web.Profile.SqlProfileProvider> class supports wildcard characters in the `usernameToMatch` parameter.       The FindProfilesByUserName method calls the <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched. To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> method of the provider directly.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The FindProfilesByUserName method returns a list of all profile information for which the user name matches the supplied <ph id=\"ph1\">`usernameToMatch`</ph> parameter value for the configured &lt;xref:System.Web.Profile.ProfileManager.ApplicationName%2A&gt; property value.","pos":[0,249],"source":"The FindProfilesByUserName method returns a list of all profile information for which the user name matches the supplied `usernameToMatch` parameter value for the configured <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> property value."},{"content":"Use the <ph id=\"ph1\">`authenticationOption`</ph> parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.","pos":[250,404],"source":" Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched."},{"content":"You can retrieve profile information for user profiles in pages of data using the overload for the &lt;xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A&gt; method that takes additional <ph id=\"ph1\">`pageIndex`</ph> and <ph id=\"ph2\">`pageSize`</ph> parameters.","pos":[411,644],"source":"       You can retrieve profile information for user profiles in pages of data using the overload for the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> method that takes additional `pageIndex` and `pageSize` parameters."},{"content":"Note that your profile provider may support wildcard characters in the <ph id=\"ph1\">`usernameToMatch`</ph> parameter.","pos":[651,750],"source":"       Note that your profile provider may support wildcard characters in the `usernameToMatch` parameter."},{"content":"For example, the &lt;xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A&gt; method of the &lt;xref:System.Web.Profile.SqlProfileProvider&gt; class supports wildcard characters in the <ph id=\"ph1\">`usernameToMatch`</ph> parameter.","pos":[751,968],"source":" For example, the <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> method of the <xref:System.Web.Profile.SqlProfileProvider> class supports wildcard characters in the `usernameToMatch` parameter."},{"content":"The FindProfilesByUserName method calls the &lt;xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A&gt; method of the default profile provider.","pos":[975,1126],"source":"       The FindProfilesByUserName method calls the <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> method of the default profile provider."},{"content":"The default profile provider is specified using the <ph id=\"ph1\">`defaultProvider`</ph> attribute of the  configuration element.","pos":[1127,1237],"source":" The default profile provider is specified using the `defaultProvider` attribute of the  configuration element."},{"content":"If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched.","pos":[1238,1413]},{"content":"To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the &lt;xref:System.Web.Profile.ProfileManager.Providers%2A&gt; property and call the &lt;xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A&gt; method of the provider directly.","pos":[1414,1732],"source":" To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> method of the provider directly."}]},{"pos":[48129,48312],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileAuthenticationOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned."},{"pos":[48384,48418],"content":"The user name for which to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name for which to search.","pos":[0,34]}]},{"pos":[48503,48696],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileInfoCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing user profile information for profiles where the user name matches the supplied <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">usernameToMatch</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.Profile.ProfileInfoCollection\"></xref> containing user profile information for profiles where the user name matches the supplied <code>usernameToMatch</code> parameter."},{"pos":[48883,48976],"content":"<ph id=\"ph1\">&lt;code&gt;usernameToMatch&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>usernameToMatch</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[49071,49124],"content":"<ph id=\"ph1\">&lt;code&gt;usernameToMatch&lt;/code&gt;</ph> is an empty string (\"\").","needQuote":true,"needEscape":true,"source":"<code>usernameToMatch</code> is an empty string (\"\")."},{"pos":[49912,50022],"content":"Retrieves profile information in pages of data for profiles in which the user name matches the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves profile information in pages of data for profiles in which the user name matches the specified name.","pos":[0,110]}]},{"pos":[50035,52563],"content":"The <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> method returns a list of profile information for which the profile user name matches the supplied `usernameToMatch` parameter value of the configured <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.       Note that your profile provider may support wildcard characters in the `usernameToMatch` parameter. For example, the <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> method of the <xref:System.Web.Profile.SqlProfileProvider> class supports wildcard characters in the `usernameToMatch` parameter.       The results returned by FindProfilesByUserName are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection>. The `pageIndex` parameter identifies which page of results to return; zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the application specified by the `applicationName` attribute in the configuration file, based on the supplied `authenticationOption`. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is 1 with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned will contain the sixth through the tenth profiles. The `totalRecords` parameter will be set to 13.       The <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> method calls the <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched. To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> method of the provider directly.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A&gt; method returns a list of profile information for which the profile user name matches the supplied <ph id=\"ph1\">`usernameToMatch`</ph> parameter value of the configured &lt;xref:System.Web.Profile.ProfileManager.ApplicationName%2A&gt;.","pos":[0,289],"source":"The <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> method returns a list of profile information for which the profile user name matches the supplied `usernameToMatch` parameter value of the configured <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>."},{"content":"Use the <ph id=\"ph1\">`authenticationOption`</ph> parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.","pos":[290,444],"source":" Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched."},{"content":"Note that your profile provider may support wildcard characters in the <ph id=\"ph1\">`usernameToMatch`</ph> parameter.","pos":[451,550],"source":"       Note that your profile provider may support wildcard characters in the `usernameToMatch` parameter."},{"content":"For example, the &lt;xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A&gt; method of the &lt;xref:System.Web.Profile.SqlProfileProvider&gt; class supports wildcard characters in the <ph id=\"ph1\">`usernameToMatch`</ph> parameter.","pos":[551,768],"source":" For example, the <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> method of the <xref:System.Web.Profile.SqlProfileProvider> class supports wildcard characters in the `usernameToMatch` parameter."},{"content":"The results returned by FindProfilesByUserName are constrained by the <ph id=\"ph1\">`pageIndex`</ph> and <ph id=\"ph2\">`pageSize`</ph> parameters.","pos":[775,883],"source":"       The results returned by FindProfilesByUserName are constrained by the `pageIndex` and `pageSize` parameters."},{"content":"The <ph id=\"ph1\">`pageSize`</ph> parameter identifies the maximum number of &lt;xref:System.Web.Profile.ProfileInfo&gt; objects to return in the &lt;xref:System.Web.Profile.ProfileInfoCollection&gt;.","pos":[884,1053],"source":" The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection>."},{"content":"The <ph id=\"ph1\">`pageIndex`</ph> parameter identifies which page of results to return; zero identifies the first page.","pos":[1054,1155],"source":" The `pageIndex` parameter identifies which page of results to return; zero identifies the first page."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter is an <ph id=\"ph2\">`out`</ph> parameter that is set to the total number of inactive user profiles for the application specified by the <ph id=\"ph3\">`applicationName`</ph> attribute in the configuration file, based on the supplied <ph id=\"ph4\">`authenticationOption`</ph>.","pos":[1156,1402],"source":" The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the application specified by the `applicationName` attribute in the configuration file, based on the supplied `authenticationOption`."},{"content":"For example, if there are 13 users for the configured <ph id=\"ph1\">`applicationName`</ph>, and the <ph id=\"ph2\">`pageIndex`</ph> value is 1 with a <ph id=\"ph3\">`pageSize`</ph> of 5, the &lt;xref:System.Web.Profile.ProfileInfoCollection&gt; returned will contain the sixth through the tenth profiles.","pos":[1403,1642],"source":" For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is 1 with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned will contain the sixth through the tenth profiles."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter will be set to 13.","pos":[1643,1690],"source":" The `totalRecords` parameter will be set to 13."},{"content":"The &lt;xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A&gt; method calls the &lt;xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A&gt; method of the default profile provider.","pos":[1697,1908],"source":"       The <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> method calls the <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> method of the default profile provider."},{"content":"The default profile provider is specified using the <ph id=\"ph1\">`defaultProvider`</ph> attribute of the  configuration element.","pos":[1909,2019],"source":" The default profile provider is specified using the `defaultProvider` attribute of the  configuration element."},{"content":"If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched.","pos":[2020,2195]},{"content":"To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the &lt;xref:System.Web.Profile.ProfileManager.Providers%2A&gt; property and call the &lt;xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A&gt; method of the provider directly.","pos":[2196,2522],"source":" To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> method of the provider directly."}]},{"pos":[53978,54161],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileAuthenticationOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned."},{"pos":[54233,54267],"content":"The user name for which to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name for which to search.","pos":[0,34]}]},{"pos":[54332,54402],"content":"The index of the page of results to return. `pageIndex` is zero-based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the page of results to return.","pos":[0,43]},{"content":"<ph id=\"ph1\">`pageIndex`</ph> is zero-based.","pos":[44,70],"source":"`pageIndex` is zero-based."}]},{"pos":[54466,54508],"content":"The size of the page of results to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the page of results to return.","pos":[0,42]}]},{"pos":[54576,54707],"content":"When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.","pos":[0,131],"nodes":[{"content":"When this method returns, contains an integer that identifies the total number of profiles.","pos":[0,91]},{"content":"This parameter is passed uninitialized.","pos":[92,131]}]}]},{"pos":[54792,54985],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileInfoCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing user profile information for profiles where the user name matches the supplied <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">usernameToMatch</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.Profile.ProfileInfoCollection\"></xref> containing user profile information for profiles where the user name matches the supplied <code>usernameToMatch</code> parameter."},{"pos":[55172,55265],"content":"<ph id=\"ph1\">&lt;code&gt;usernameToMatch&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>usernameToMatch</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[56340,56467],"content":"Retrieves all user profile data for profiles in which the last activity date occurred on or before the specified date and time.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves all user profile data for profiles in which the last activity date occurred on or before the specified date and time.","pos":[0,127]}]},{"pos":[56480,58073],"content":"The GetAllInactiveProfiles method is used to retrieve profile information from the data source for all unused user profiles for the application specified by the `applicationName` attribute in the configuration file. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched. Of the searched profiles, any profile is returned that has a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value.       You can retrieve profile information for inactive user profiles in pages of data using the overload for the <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> method that takes additional `pageIndex` and `pageSize` parameters.       The GetAllInactiveProfiles method calls the <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched. To find unused profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> method of the provider directly.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetAllInactiveProfiles method is used to retrieve profile information from the data source for all unused user profiles for the application specified by the <ph id=\"ph1\">`applicationName`</ph> attribute in the configuration file.","pos":[0,215],"source":"The GetAllInactiveProfiles method is used to retrieve profile information from the data source for all unused user profiles for the application specified by the `applicationName` attribute in the configuration file."},{"content":"Use the <ph id=\"ph1\">`authenticationOption`</ph> parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.","pos":[216,370],"source":" Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched."},{"content":"Of the searched profiles, any profile is returned that has a &lt;xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A&gt; that occurs on or before the specified <ph id=\"ph1\">`userInactiveSinceDate`</ph> parameter value.","pos":[371,569],"source":" Of the searched profiles, any profile is returned that has a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value."},{"content":"You can retrieve profile information for inactive user profiles in pages of data using the overload for the &lt;xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A&gt; method that takes additional <ph id=\"ph1\">`pageIndex`</ph> and <ph id=\"ph2\">`pageSize`</ph> parameters.","pos":[576,818],"source":"       You can retrieve profile information for inactive user profiles in pages of data using the overload for the <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> method that takes additional `pageIndex` and `pageSize` parameters."},{"content":"The GetAllInactiveProfiles method calls the &lt;xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A&gt; method of the default profile provider.","pos":[825,976],"source":"       The GetAllInactiveProfiles method calls the <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> method of the default profile provider."},{"content":"The default profile provider is specified using the <ph id=\"ph1\">`defaultProvider`</ph> attribute of the  configuration element.","pos":[977,1087],"source":" The default profile provider is specified using the `defaultProvider` attribute of the  configuration element."},{"content":"If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched.","pos":[1088,1263]},{"content":"To find unused profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the &lt;xref:System.Web.Profile.ProfileManager.Providers%2A&gt; property and call the &lt;xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A&gt; method of the provider directly.","pos":[1264,1589],"source":" To find unused profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> method of the provider directly."}]},{"pos":[59210,59393],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileAuthenticationOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned."},{"pos":[59473,59715],"content":"A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive.","pos":[0,242],"nodes":[{"content":"A &lt;xref:System.DateTime&gt; that identifies which user profiles are considered inactive.","pos":[0,85],"source":"A <xref:System.DateTime> that identifies which user profiles are considered inactive."},{"content":"If the &lt;xref:System.Web.Profile.ProfileInfo.LastActivityDate*&gt; of a user profile occurs on or before this date and time, the profile is considered inactive.","pos":[86,242],"source":" If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive."}]}]},{"pos":[59800,59928],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileInfoCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing user profile information about the inactive profiles.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.Profile.ProfileInfoCollection\"></xref> containing user profile information about the inactive profiles."},{"pos":[60813,60993],"content":"Retrieves a page of <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects for user profiles in which the last activity date occurred on or before the specified date and time.","needQuote":true,"needEscape":true,"source":"Retrieves a page of <xref href=\"System.Web.Profile.ProfileInfo\"></xref> objects for user profiles in which the last activity date occurred on or before the specified date and time."},{"pos":[61006,63242],"content":"The GetAllInactiveProfiles method is used to retrieve profile information from the data source for unused user profiles for the application specified by the `applicationName` attribute in the configuration file. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched. Of the searched profiles, any profile is returned that has a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs before the specified `userInactiveSinceDate` parameter value.       The results returned by GetAllInactiveProfiles are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection>. The `pageIndex` parameter identifies which page of results to return; zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the configured `applicationName`, based on the `authenticationOption` and `userInactiveSinceDate` parameters. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is one with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned will contain the sixth through the tenth inactive profiles. The `totalRecords` parameter will be set to 13.       The GetAllInactiveProfiles method calls the <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched. To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> method of the provider directly.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetAllInactiveProfiles method is used to retrieve profile information from the data source for unused user profiles for the application specified by the <ph id=\"ph1\">`applicationName`</ph> attribute in the configuration file.","pos":[0,211],"source":"The GetAllInactiveProfiles method is used to retrieve profile information from the data source for unused user profiles for the application specified by the `applicationName` attribute in the configuration file."},{"content":"Use the <ph id=\"ph1\">`authenticationOption`</ph> parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.","pos":[212,366],"source":" Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched."},{"content":"Of the searched profiles, any profile is returned that has a &lt;xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A&gt; that occurs before the specified <ph id=\"ph1\">`userInactiveSinceDate`</ph> parameter value.","pos":[367,559],"source":" Of the searched profiles, any profile is returned that has a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs before the specified `userInactiveSinceDate` parameter value."},{"content":"The results returned by GetAllInactiveProfiles are constrained by the <ph id=\"ph1\">`pageIndex`</ph> and <ph id=\"ph2\">`pageSize`</ph> parameters.","pos":[566,674],"source":"       The results returned by GetAllInactiveProfiles are constrained by the `pageIndex` and `pageSize` parameters."},{"content":"The <ph id=\"ph1\">`pageSize`</ph> parameter identifies the maximum number of &lt;xref:System.Web.Profile.ProfileInfo&gt; objects to return in the &lt;xref:System.Web.Profile.ProfileInfoCollection&gt;.","pos":[675,844],"source":" The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection>."},{"content":"The <ph id=\"ph1\">`pageIndex`</ph> parameter identifies which page of results to return; zero identifies the first page.","pos":[845,946],"source":" The `pageIndex` parameter identifies which page of results to return; zero identifies the first page."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter is an <ph id=\"ph2\">`out`</ph> parameter that is set to the total number of inactive user profiles for the configured <ph id=\"ph3\">`applicationName`</ph>, based on the <ph id=\"ph4\">`authenticationOption`</ph> and <ph id=\"ph5\">`userInactiveSinceDate`</ph> parameters.","pos":[947,1169],"source":" The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the configured `applicationName`, based on the `authenticationOption` and `userInactiveSinceDate` parameters."},{"content":"For example, if there are 13 users for the configured <ph id=\"ph1\">`applicationName`</ph>, and the <ph id=\"ph2\">`pageIndex`</ph> value is one with a <ph id=\"ph3\">`pageSize`</ph> of 5, the &lt;xref:System.Web.Profile.ProfileInfoCollection&gt; returned will contain the sixth through the tenth inactive profiles.","pos":[1170,1420],"source":" For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is one with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned will contain the sixth through the tenth inactive profiles."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter will be set to 13.","pos":[1421,1468],"source":" The `totalRecords` parameter will be set to 13."},{"content":"The GetAllInactiveProfiles method calls the &lt;xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A&gt; method of the default profile provider.","pos":[1475,1626],"source":"       The GetAllInactiveProfiles method calls the <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> method of the default profile provider."},{"content":"The default profile provider is specified using the <ph id=\"ph1\">`defaultProvider`</ph> attribute of the  configuration element.","pos":[1627,1737],"source":" The default profile provider is specified using the `defaultProvider` attribute of the  configuration element."},{"content":"If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched.","pos":[1738,1913]},{"content":"To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the &lt;xref:System.Web.Profile.ProfileManager.Providers%2A&gt; property and call the &lt;xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A&gt; method of the provider directly.","pos":[1914,2232],"source":" To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> method of the provider directly."}]},{"pos":[64434,64617],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileAuthenticationOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned."},{"pos":[64697,64939],"content":"A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive.","pos":[0,242],"nodes":[{"content":"A &lt;xref:System.DateTime&gt; that identifies which user profiles are considered inactive.","pos":[0,85],"source":"A <xref:System.DateTime> that identifies which user profiles are considered inactive."},{"content":"If the &lt;xref:System.Web.Profile.ProfileInfo.LastActivityDate*&gt; of a user profile occurs on or before this date and time, the profile is considered inactive.","pos":[86,242],"source":" If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive."}]}]},{"pos":[65004,65074],"content":"The index of the page of results to return. `pageIndex` is zero-based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the page of results to return.","pos":[0,43]},{"content":"<ph id=\"ph1\">`pageIndex`</ph> is zero-based.","pos":[44,70],"source":"`pageIndex` is zero-based."}]},{"pos":[65138,65180],"content":"The size of the page of results to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the page of results to return.","pos":[0,42]}]},{"pos":[65248,65379],"content":"When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.","pos":[0,131],"nodes":[{"content":"When this method returns, contains an integer that identifies the total number of profiles.","pos":[0,91]},{"content":"This parameter is passed uninitialized.","pos":[92,131]}]}]},{"pos":[65464,65592],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileInfoCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing user profile information about the inactive profiles.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.Profile.ProfileInfoCollection\"></xref> containing user profile information about the inactive profiles."},{"pos":[66244,66304],"content":"Retrieves user profile data for profiles in the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves user profile data for profiles in the data source.","pos":[0,60]}]},{"pos":[66317,67644],"content":"The GetAllProfiles method is used to retrieve profile information from the data source for the application specified by the `applicationName` attribute in the configuration file. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.       You can retrieve pages of <xref:System.Web.Profile.ProfileInfo> objects for user profiles using the overload for the <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> method that takes additional `pageIndex` and `pageSize` parameters.       The GetAllProfiles method calls the <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched. To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> method of the provider directly.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetAllProfiles method is used to retrieve profile information from the data source for the application specified by the <ph id=\"ph1\">`applicationName`</ph> attribute in the configuration file.","pos":[0,178],"source":"The GetAllProfiles method is used to retrieve profile information from the data source for the application specified by the `applicationName` attribute in the configuration file."},{"content":"Use the <ph id=\"ph1\">`authenticationOption`</ph> parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.","pos":[179,333],"source":" Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched."},{"content":"You can retrieve pages of &lt;xref:System.Web.Profile.ProfileInfo&gt; objects for user profiles using the overload for the &lt;xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A&gt; method that takes additional <ph id=\"ph1\">`pageIndex`</ph> and <ph id=\"ph2\">`pageSize`</ph> parameters.","pos":[340,583],"source":"       You can retrieve pages of <xref:System.Web.Profile.ProfileInfo> objects for user profiles using the overload for the <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> method that takes additional `pageIndex` and `pageSize` parameters."},{"content":"The GetAllProfiles method calls the &lt;xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A&gt; method of the default profile provider.","pos":[590,725],"source":"       The GetAllProfiles method calls the <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> method of the default profile provider."},{"content":"The default profile provider is specified using the <ph id=\"ph1\">`defaultProvider`</ph> attribute of the  configuration element.","pos":[726,836],"source":" The default profile provider is specified using the `defaultProvider` attribute of the  configuration element."},{"content":"If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched.","pos":[837,1012]},{"content":"To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the &lt;xref:System.Web.Profile.ProfileManager.Providers%2A&gt; property and call the &lt;xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A&gt; method of the provider directly.","pos":[1013,1323],"source":" To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> method of the provider directly."}]},{"pos":[68297,68480],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileAuthenticationOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned."},{"pos":[68565,68708],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileInfoCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing user profile information for all of the profiles in the data source.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.Profile.ProfileInfoCollection\"></xref> containing user profile information for all of the profiles in the data source."},{"pos":[69486,69523],"content":"Retrieves pages of user profile data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves pages of user profile data.","pos":[0,37]}]},{"pos":[69536,71527],"content":"The GetAllProfiles method is used to retrieve profile information from the data source for the application specified by the `applicationName` attribute in the configuration file. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.       The results returned by <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection>. The `pageIndex` parameter identifies which page of results to return; zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the configured `applicationName`, based on the supplied `authenticationOption`. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is one with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned will contain the sixth through the tenth profiles. The `totalRecords` parameter will be set to 13.       The GetAllProfiles method calls the <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched. To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> method of the provider directly.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetAllProfiles method is used to retrieve profile information from the data source for the application specified by the <ph id=\"ph1\">`applicationName`</ph> attribute in the configuration file.","pos":[0,178],"source":"The GetAllProfiles method is used to retrieve profile information from the data source for the application specified by the `applicationName` attribute in the configuration file."},{"content":"Use the <ph id=\"ph1\">`authenticationOption`</ph> parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.","pos":[179,333],"source":" Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched."},{"content":"The results returned by &lt;xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A&gt; are constrained by the <ph id=\"ph1\">`pageIndex`</ph> and <ph id=\"ph2\">`pageSize`</ph> parameters.","pos":[340,492],"source":"       The results returned by <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> are constrained by the `pageIndex` and `pageSize` parameters."},{"content":"The <ph id=\"ph1\">`pageSize`</ph> parameter identifies the maximum number of &lt;xref:System.Web.Profile.ProfileInfo&gt; objects to return in the &lt;xref:System.Web.Profile.ProfileInfoCollection&gt;.","pos":[493,662],"source":" The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection>."},{"content":"The <ph id=\"ph1\">`pageIndex`</ph> parameter identifies which page of results to return; zero identifies the first page.","pos":[663,764],"source":" The `pageIndex` parameter identifies which page of results to return; zero identifies the first page."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter is an <ph id=\"ph2\">`out`</ph> parameter that is set to the total number of inactive user profiles for the configured <ph id=\"ph3\">`applicationName`</ph>, based on the supplied <ph id=\"ph4\">`authenticationOption`</ph>.","pos":[765,957],"source":" The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the configured `applicationName`, based on the supplied `authenticationOption`."},{"content":"For example, if there are 13 users for the configured <ph id=\"ph1\">`applicationName`</ph>, and the <ph id=\"ph2\">`pageIndex`</ph> value is one with a <ph id=\"ph3\">`pageSize`</ph> of 5, the &lt;xref:System.Web.Profile.ProfileInfoCollection&gt; returned will contain the sixth through the tenth profiles.","pos":[958,1199],"source":" For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is one with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned will contain the sixth through the tenth profiles."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter will be set to 13.","pos":[1200,1247],"source":" The `totalRecords` parameter will be set to 13."},{"content":"The GetAllProfiles method calls the &lt;xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A&gt; method of the default profile provider.","pos":[1254,1389],"source":"       The GetAllProfiles method calls the <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> method of the default profile provider."},{"content":"The default profile provider is specified using the <ph id=\"ph1\">`defaultProvider`</ph> attribute of the  configuration element.","pos":[1390,1500],"source":" The default profile provider is specified using the `defaultProvider` attribute of the  configuration element."},{"content":"If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched.","pos":[1501,1676]},{"content":"To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the &lt;xref:System.Web.Profile.ProfileManager.Providers%2A&gt; property and call the &lt;xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A&gt; method of the provider directly.","pos":[1677,1987],"source":" To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> method of the provider directly."}]},{"pos":[72248,72431],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileAuthenticationOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned."},{"pos":[72496,72566],"content":"The index of the page of results to return. `pageIndex` is zero-based.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the page of results to return.","pos":[0,43]},{"content":"<ph id=\"ph1\">`pageIndex`</ph> is zero-based.","pos":[44,70],"source":"`pageIndex` is zero-based."}]},{"pos":[72630,72672],"content":"The size of the page of results to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the page of results to return.","pos":[0,42]}]},{"pos":[72740,72871],"content":"When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.","pos":[0,131],"nodes":[{"content":"When this method returns, contains an integer that identifies the total number of profiles.","pos":[0,91]},{"content":"This parameter is passed uninitialized.","pos":[92,131]}]}]},{"pos":[72956,73099],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileInfoCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing user profile information for all of the profiles in the data source.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.Profile.ProfileInfoCollection\"></xref> containing user profile information for all of the profiles in the data source."},{"pos":[73867,73968],"content":"Gets the number of profiles in which the last activity date occurred on or before the specified date.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of profiles in which the last activity date occurred on or before the specified date.","pos":[0,101]}]},{"pos":[73980,74550],"content":"The GetNumberOfInactiveProfiles method is used to retrieve a count of all of the unused user profiles from the data source for the application specified by the `applicationName` attribute in the configuration file. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched. Of the searched profiles, all profiles are counted that have a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetNumberOfInactiveProfiles method is used to retrieve a count of all of the unused user profiles from the data source for the application specified by the <ph id=\"ph1\">`applicationName`</ph> attribute in the configuration file.","pos":[0,214],"source":"The GetNumberOfInactiveProfiles method is used to retrieve a count of all of the unused user profiles from the data source for the application specified by the `applicationName` attribute in the configuration file."},{"content":"Use the <ph id=\"ph1\">`authenticationOption`</ph> parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.","pos":[215,369],"source":" Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched."},{"content":"Of the searched profiles, all profiles are counted that have a &lt;xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A&gt; that occurs on or before the specified <ph id=\"ph1\">`userInactiveSinceDate`</ph> parameter value.","pos":[370,570],"source":" Of the searched profiles, all profiles are counted that have a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value."}]},{"pos":[75638,75821],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileAuthenticationOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned."},{"pos":[75901,76150],"content":"A <xref:System.DateTime> object that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.DateTime> object that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive.","pos":[0,249],"nodes":[{"content":"A &lt;xref:System.DateTime&gt; object that identifies which user profiles are considered inactive.","pos":[0,92],"source":"A <xref:System.DateTime> object that identifies which user profiles are considered inactive."},{"content":"If the &lt;xref:System.Web.Profile.ProfileInfo.LastActivityDate*&gt; of a user profile occurs on or before this date and time, the profile is considered inactive.","pos":[93,249],"source":" If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive."}]}]},{"pos":[76207,76326],"content":"The number of profiles in the data source for which the last activity date occurred before the specified date and time.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of profiles in the data source for which the last activity date occurred before the specified date and time.","pos":[0,119]}]},{"pos":[77008,77055],"content":"Gets the number of profiles in the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of profiles in the data source.","pos":[0,47]}]},{"pos":[77067,77421],"content":"The GetNumberOfProfiles method is used to retrieve a count of all of the user profiles from the data source for the application specified by the `applicationName` attribute in the configuration file. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetNumberOfProfiles method is used to retrieve a count of all of the user profiles from the data source for the application specified by the <ph id=\"ph1\">`applicationName`</ph> attribute in the configuration file.","pos":[0,199],"source":"The GetNumberOfProfiles method is used to retrieve a count of all of the user profiles from the data source for the application specified by the `applicationName` attribute in the configuration file."},{"content":"Use the <ph id=\"ph1\">`authenticationOption`</ph> parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.","pos":[200,354],"source":" Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched."}]},{"pos":[78081,78264],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileAuthenticationOption\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned."},{"pos":[78321,78363],"content":"The number of profiles in the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of profiles in the data source.","pos":[0,42]}]},{"pos":[78801,78870],"content":"Gets a reference to the default profile provider for the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a reference to the default profile provider for the application.","pos":[0,69]}]},{"pos":[78882,79145],"content":"The Provider property enables you to reference the default profile provider for an application directly. This is commonly used to access custom members of the profile provider that are not part of the <xref:System.Web.Profile.ProfileProvider> abstract base class.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Provider property enables you to reference the default profile provider for an application directly. This is commonly used to access custom members of the profile provider that are not part of the <xref:System.Web.Profile.ProfileProvider> abstract base class.","pos":[0,263],"nodes":[{"content":"The Provider property enables you to reference the default profile provider for an application directly.","pos":[0,104]},{"content":"This is commonly used to access custom members of the profile provider that are not part of the &lt;xref:System.Web.Profile.ProfileProvider&gt; abstract base class.","pos":[105,263],"source":" This is commonly used to access custom members of the profile provider that are not part of the <xref:System.Web.Profile.ProfileProvider> abstract base class."}]}]},{"pos":[79639,79688],"content":"The default profile provider for the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default profile provider for the application.","pos":[0,49]}]},{"pos":[79853,79997],"content":"An attempt was made to get the Provider property value without at least <bpt id=\"p1\">&lt;xref href=\"System.Web.AspNetHostingPermissionLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> permission.","needQuote":true,"needEscape":true,"source":"An attempt was made to get the Provider property value without at least <xref href=\"System.Web.AspNetHostingPermissionLevel\"></xref> permission."},{"pos":[80356,80427],"content":"Gets a collection of the profile providers for the ASP.NET application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of the profile providers for the ASP.NET application.","pos":[0,71]}]},{"pos":[80440,82144],"content":"The Providers property references all of the profile providers enabled for an application, including providers added in the machine configuration and providers added in all Web.config files. You can control which profile providers are available for an application using the  element of the  section in the configuration file. For example, the following Web.config file removes the profile providers specified in parent configuration files and adds a <xref:System.Web.Profile.SqlProfileProvider> instance as the profile provider for the application.      ```   <configuration>     <connectionStrings>       <add name=\"SqlServices\" connectionString=         \"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />     </connectionStrings>     <system.web>       <profile enabled=\"true\" defaultProvider=\"SqlProvider\">         <providers>           <clear />           <add name=\"SqlProvider\"             type=\"System.Web.Profile.SqlProfileProvider\"             connectionStringName=\"SqlServices\"             applicationName=\"MyApplication\" />         </providers>       </profile>     </system.web>   </configuration>   ```       When specifying the  section, you must specify a default provider by setting the `defaultProvider` attribute. If you do not specify a  section in your Web.config file, the values from the machine configuration are used and the <xref:System.Web.Profile.SqlProfileProvider> instance named AspNetSqlProvider is established as the default provider.       You can obtain a strongly typed reference to a provider from the Providers collection by indexing the profile provider by name and casting it as the desired type.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Providers property references all of the profile providers enabled for an application, including providers added in the machine configuration and providers added in all Web.config files.","pos":[0,190]},{"content":"You can control which profile providers are available for an application using the  element of the  section in the configuration file.","pos":[191,325]},{"content":"For example, the following Web.config file removes the profile providers specified in parent configuration files and adds a &lt;xref:System.Web.Profile.SqlProfileProvider&gt; instance as the profile provider for the application.","pos":[326,548],"source":" For example, the following Web.config file removes the profile providers specified in parent configuration files and adds a <xref:System.Web.Profile.SqlProfileProvider> instance as the profile provider for the application."},{"content":"<ph id=\"ph1\">```   &lt;configuration&gt;     &lt;connectionStrings&gt;       &lt;add name=\"SqlServices\" connectionString=         \"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" /&gt;     &lt;/connectionStrings&gt;     &lt;system.web&gt;       &lt;profile enabled=\"true\" defaultProvider=\"SqlProvider\"&gt;         &lt;providers&gt;           &lt;clear /&gt;           &lt;add name=\"SqlProvider\"             type=\"System.Web.Profile.SqlProfileProvider\"             connectionStringName=\"SqlServices\"             applicationName=\"MyApplication\" /&gt;         &lt;/providers&gt;       &lt;/profile&gt;     &lt;/system.web&gt;   &lt;/configuration&gt;   ```</ph>       When specifying the  section, you must specify a default provider by setting the <ph id=\"ph2\">`defaultProvider`</ph> attribute.","pos":[554,1260],"source":"```   <configuration>     <connectionStrings>       <add name=\"SqlServices\" connectionString=         \"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />     </connectionStrings>     <system.web>       <profile enabled=\"true\" defaultProvider=\"SqlProvider\">         <providers>           <clear />           <add name=\"SqlProvider\"             type=\"System.Web.Profile.SqlProfileProvider\"             connectionStringName=\"SqlServices\"             applicationName=\"MyApplication\" />         </providers>       </profile>     </system.web>   </configuration>   ```       When specifying the  section, you must specify a default provider by setting the `defaultProvider` attribute."},{"content":"If you do not specify a  section in your Web.config file, the values from the machine configuration are used and the &lt;xref:System.Web.Profile.SqlProfileProvider&gt; instance named AspNetSqlProvider is established as the default provider.","pos":[1261,1495],"source":" If you do not specify a  section in your Web.config file, the values from the machine configuration are used and the <xref:System.Web.Profile.SqlProfileProvider> instance named AspNetSqlProvider is established as the default provider."},{"content":"You can obtain a strongly typed reference to a provider from the Providers collection by indexing the profile provider by name and casting it as the desired type.","pos":[1502,1664]}]},{"pos":[82685,82817],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.Profile.ProfileProviderCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the profile providers configured for the ASP.NET application.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.Profile.ProfileProviderCollection\"></xref> of the profile providers configured for the ASP.NET application."},{"pos":[82983,83128],"content":"An attempt was made to get the Providers property value without at least <bpt id=\"p1\">&lt;xref href=\"System.Web.AspNetHostingPermissionLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> permission.","needQuote":true,"needEscape":true,"source":"An attempt was made to get the Providers property value without at least <xref href=\"System.Web.AspNetHostingPermissionLevel\"></xref> permission."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Profile.ProfileManager\n  id: ProfileManager\n  children:\n  - System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)\n  - System.Web.Profile.ProfileManager.ApplicationName\n  - System.Web.Profile.ProfileManager.AutomaticSaveEnabled\n  - System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)\n  - System.Web.Profile.ProfileManager.DeleteProfile(System.String)\n  - System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])\n  - System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)\n  - System.Web.Profile.ProfileManager.Enabled\n  - System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)\n  - System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)\n  - System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)\n  - System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)\n  - System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)\n  - System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)\n  - System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)\n  - System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)\n  - System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)\n  - System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)\n  - System.Web.Profile.ProfileManager.Provider\n  - System.Web.Profile.ProfileManager.Providers\n  langs:\n  - csharp\n  name: ProfileManager\n  nameWithType: ProfileManager\n  fullName: System.Web.Profile.ProfileManager\n  type: Class\n  summary: Manages user profile data and settings.\n  remarks: \"The ASP.NET profile is used to store and retrieve user settings in a data source such as a database. The user profile is accessed using the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext>. Profile information and property values are managed using a profile provider.  \\n  \\n The ProfileManager class is used to manage profile settings, search for user profiles, and delete user profiles that are no longer in use. The ProfileManager class provides static methods and properties that can be accessed by referencing the ProfileManager class in your application code. For an example, see the Example section in this topic and additional examples in the topics for members of the ProfileManager class.  \\n  \\n By default, the user profile is disabled for all ASP.NET applications. To enable the user profile, set the `enabled` attribute of the  configuration element to true, as shown in the following example.  \\n  \\n```  \\n<configuration>  \\n  <system.web>  \\n    <profile enabled=\\\"true\\\" />  \\n  </system.web>  \\n</configuration>  \\n```  \\n  \\n For more information about the user profile, see [ASP.NET Profile Properties Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n A profile provider is used to store and retrieve properties in the user profile. The .NET Framework includes a <xref:System.Web.Profile.SqlProfileProvider> class that stores user profile properties in a SQL Server database. A <xref:System.Web.Profile.SqlProfileProvider> instance named `AspNetSqlProvider` is specified in the machine configuration as the default profile provider. The `AspNetSqlProvider` instance connects to the SQL Server database on the local Web server. You can specify a <xref:System.Web.Profile.SqlProfileProvider> that connects to another SQL Server as the default profile provider by using the  configuration element and the `defaultProvider` attribute of the  configuration element, as shown in the following example.  \\n  \\n```  \\n<configuration>  \\n  <connectionStrings>  \\n    <add name=\\\"SqlServices\\\" connectionString=  \\n      \\\"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\\\" />  \\n  </connectionStrings>  \\n  <system.web>  \\n    <profile defaultProvider=\\\"SqlProvider\\\">  \\n      <providers>  \\n        <clear />  \\n        <add name=\\\"SqlProvider\\\"  \\n          type=\\\"System.Web.Profile.SqlProfileProvider\\\"  \\n          connectionStringName=\\\"SqlServices\\\"  \\n          applicationName=\\\"MyApplication\\\" />  \\n      </providers>  \\n    </profile>  \\n  </system.web>  \\n</configuration>  \\n```\"\n  example:\n  - \"The following code example shows an ASP.NET page that uses the ProfileManager class to manage inactive profiles.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/t-system.web.profile.pro_1_1.aspx)]\\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/t-system.web.profile.pro_1_1.aspx)]\"\n  syntax:\n    content: public static class ProfileManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)\n  id: AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: AddDynamicProfileProperty(ProfilePropertySettings)\n  nameWithType: ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)\n  fullName: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Adds a profile property programmatically.\n  remarks: This method is functionally equivalent to adding the property to the `profile` section of the configuration file. To call this method to add the profile property, you must make the call in a method that is marked with the <xref:System.Web.PreApplicationStartMethodAttribute> attribute.\n  syntax:\n    content: public static void AddDynamicProfileProperty (System.Web.Configuration.ProfilePropertySettings property);\n    parameters:\n    - id: property\n      type: System.Web.Configuration.ProfilePropertySettings\n      description: The property settings to be added.\n  overload: System.Web.Profile.ProfileManager.AddDynamicProfileProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.ApplicationName\n  id: ApplicationName\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: ApplicationName\n  nameWithType: ProfileManager.ApplicationName\n  fullName: System.Web.Profile.ProfileManager.ApplicationName\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Gets or sets the name of the application for which to store and retrieve profile information.\n  remarks: \"The <xref:System.Web.Profile.ProfileManager> uses the ApplicationName property to associate profile information with different applications. This enables multiple applications to use the same database to store user information without running into conflicts between duplicate users. Multiple ASP.NET applications can use the same user database by specifying the same value in the ApplicationName property. The ApplicationName property can be set programmatically, or it can be set declaratively in the configuration file for the Web application by using the `applicationName` attribute.  \\n  \\n If a value is not specified for the `applicationName` attribute in the configuration file for the Web application, then the profile providers included with the .NET Framework use the <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> property value for ASP.NET applications. For non-ASP.NET applications, the default value is the <xref:System.Diagnostics.ProcessModule.ModuleName%2A> property value, without the file extension.  \\n  \\n The ApplicationName property exposes the <xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=fullName> property of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, they may be configured with a different application name. To access the application name of a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and access the <xref:System.Configuration.SettingsProvider.ApplicationName%2A> property of the provider directly.  \\n  \\n> [!CAUTION]\\n>  Because a single default profile provider instance is used for all of the requests served by an <xref:System.Web.HttpApplication> object, you can have multiple requests executing concurrently and attempting to set the ApplicationName property value. The ApplicationName property is not thread safe for multiple writes, and changing the ApplicationName property value can result in unexpected behavior for multiple users of an application. It is recommended that you avoid writing code that allows users to set the ApplicationName property unless you require it. An example of an application where setting the ApplicationName property may be required is an administrative application that manages profile data for multiple applications. Such an application should be a single-user application and not a Web application.\"\n  example:\n  - \"The following configuration file excerpt shows the  element in the  section of the Web.config file for an ASP.NET application. It sets the application's default profile provider to a <xref:System.Web.Profile.SqlProfileProvider> instance and sets the ApplicationName to `MyApplication`.  \\n  \\n```  \\n<profile enabled=\\\"true\\\" defaultProvider=\\\"SqlProvider\\\">  \\n  <providers>  \\n  <add name=\\\"SqlProvider\\\"  \\n    type=\\\"System.Web.Profile.SqlProfileProvider\\\"  \\n    connectionStringName=\\\"SqlServices\\\"  \\n    applicationName=\\\"MyApplication\\\" />  \\n  </providers>  \\n</profile>  \\n```\"\n  syntax:\n    content: public static string ApplicationName { get; set; }\n    return:\n      type: System.String\n      description: The name of the application for which to store and retrieve profile information.\n  overload: System.Web.Profile.ProfileManager.ApplicationName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.AutomaticSaveEnabled\n  id: AutomaticSaveEnabled\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: AutomaticSaveEnabled\n  nameWithType: ProfileManager.AutomaticSaveEnabled\n  fullName: System.Web.Profile.ProfileManager.AutomaticSaveEnabled\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Gets a value indicating whether the user profile will be automatically saved at the end of the execution of an ASP.NET page.\n  remarks: \"The AutomaticSaveEnabled property indicates whether automatic saving of the user profile is enabled for the application. If automatic saving is enabled, the <xref:System.Web.Profile.ProfileModule> object raises the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event and calls the <xref:System.Web.Profile.ProfileBase.Save%2A> method during the <xref:System.Web.HttpApplication.EndRequest> event at the end of the execution of an ASP.NET page.  \\n  \\n The AutomaticSaveEnabled property is set using the `automaticSaveEnabled` attribute of the  element in the Web.config file for an ASP.NET application.\"\n  example:\n  - \"The following configuration file excerpt shows the  element in the  section of the Web.config file for an ASP.NET application. It specifies the application's default profile provider to a <xref:System.Web.Profile.SqlProfileProvider> instance and sets the `automaticSaveEnabled` attribute to `true`.  \\n  \\n```  \\n<profile enabled=\\\"true\\\"  \\n  automaticSaveEnabled=\\\"true\\\"  \\n  defaultProvider=\\\"SqlProvider\\\">  \\n  <providers>  \\n    <add name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Profile.SqlProfileProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      applicationName=\\\"MyApplication\\\" />  \\n  </providers>  \\n</profile>  \\n```\"\n  syntax:\n    content: public static bool AutomaticSaveEnabled { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user profile will be automatically saved at the end of the execution of an ASP.NET page; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.Profile.ProfileManager.AutomaticSaveEnabled*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: An attempt was made to get the AutomaticSaveEnabled property value without at least <xref href=\"System.Web.AspNetHostingPermissionLevel\"></xref> permission.\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)\n  id: DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)\n  nameWithType: ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)\n  fullName: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Deletes user profile data for which the last activity date and time occurred before the specified date and time.\n  remarks: \"The DeleteInactiveProfiles method is used to remove unused profile data from the data source for the application specified by the `applicationName` attribute in the configuration file. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched. Of the searched profiles, any profile with a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value is deleted.  \\n  \\n The DeleteInactiveProfiles method calls the <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, the profile information in the other data source is not deleted. To delete inactive profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> method of the provider directly.\"\n  example:\n  - \"The following code example shows an ASP.NET page that manages inactive profiles. A button is provided to delete all profiles that have been unused for the specified number of days and are therefore considered inactive.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/32807c48-d028-41c4-938b-_1.aspx)]\\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/32807c48-d028-41c4-938b-_1.aspx)]\"\n  syntax:\n    content: public static int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);\n    parameters:\n    - id: authenticationOption\n      type: System.Web.Profile.ProfileAuthenticationOption\n      description: One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are deleted.\n    - id: userInactiveSinceDate\n      type: System.DateTime\n      description: A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive.\n    return:\n      type: System.Int32\n      description: The number of profiles deleted from the data source.\n  overload: System.Web.Profile.ProfileManager.DeleteInactiveProfiles*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.DeleteProfile(System.String)\n  id: DeleteProfile(System.String)\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: DeleteProfile(String)\n  nameWithType: ProfileManager.DeleteProfile(String)\n  fullName: System.Web.Profile.ProfileManager.DeleteProfile(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Deletes the profile for the specified user name from the data source.\n  remarks: \"The DeleteProfile method deletes all profile information and properties for the user profile for the specified `username` from the data source for the specified <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>.  \\n  \\n The DeleteProfile method calls the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> method of the default profile provider to perform the delete operation. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, they are not deleted. To delete profile properties that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> method of the provider directly.\"\n  example:\n  - \"The following code example shows an ASP.NET page that manages inactive profiles. The DeleteProfile method is called when a single profile is selected to be deleted. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter value passed to the <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> method.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.Profile.ProfileManager#10](~/add/codesnippet/csharp/m-system.web.profile.pro_0_1.aspx)]\\n [!code-vb[System.Web.Profile.ProfileManager#10](~/add/codesnippet/visualbasic/m-system.web.profile.pro_0_1.aspx)]\"\n  syntax:\n    content: public static bool DeleteProfile (string username);\n    parameters:\n    - id: username\n      type: System.String\n      description: The user name for the profile to be deleted.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user profile was found and deleted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Profile.ProfileManager.DeleteProfile*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>username</code> is an empty string (\"\") or contains a comma.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])\n  id: DeleteProfiles(System.String[])\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: DeleteProfiles(String[])\n  nameWithType: ProfileManager.DeleteProfiles(String[])\n  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(String[])\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Deletes profile properties and information for the supplied list of user names.\n  remarks: \"The DeleteProfiles method deletes all profile information and properties for the specified profiles from the data source for the application specified by the <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> property. The list of profiles to delete is specified as a string array of user names. If profile properties and information exist in the data source for a user name in the `usernames` parameter, they are deleted.  \\n  \\n The return value may differ from the length of the specified array of `usernames`. This indicates that some of the profiles in the specified array of `usernames` were already deleted from the data store.  \\n  \\n The DeleteProfiles method calls the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, they are not deleted. To delete profile properties that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> method of the provider directly.\"\n  example:\n  - \"The following code example shows an ASP.NET page that manages inactive profiles. A <xref:System.Web.UI.WebControls.GridView> control displays the inactive profiles returned. Each row of the <xref:System.Web.UI.WebControls.GridView> control includes a button that deletes the profile for that row from the data source with a call to the DeleteProfiles method.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/m-system.web.profile.pro_4_1.aspx)]\\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/m-system.web.profile.pro_4_1.aspx)]\"\n  syntax:\n    content: public static int DeleteProfiles (string[] usernames);\n    parameters:\n    - id: usernames\n      type: System.String[]\n      description: A string array of user names for profiles to be deleted.\n    return:\n      type: System.Int32\n      description: The number of profiles deleted from the data source.\n  overload: System.Web.Profile.ProfileManager.DeleteProfiles*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The length of <code>usernames</code> is zero.  \\n  \\n \\\\- or -  \\n  \\n One of the items in <code>usernames</code> is an empty string (\\\"\\\") or contains a comma.  \\n  \\n \\\\- or -  \\n  \\n Two or more items in <code>usernames</code> have the same value.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>usernames</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n One of the items in <code>usernames</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)\n  id: DeleteProfiles(System.Web.Profile.ProfileInfoCollection)\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: DeleteProfiles(ProfileInfoCollection)\n  nameWithType: ProfileManager.DeleteProfiles(ProfileInfoCollection)\n  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(ProfileInfoCollection)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Deletes profile properties and information from the data source for the supplied list of profiles.\n  remarks: \"The DeleteProfiles method deletes all profile information and properties for the specified profiles from the data source for the application specified by the <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> property. The list of profiles to delete is specified using a <xref:System.Web.Profile.ProfileInfoCollection> that is passed as the `profiles` parameter. A <xref:System.Web.Profile.ProfileInfoCollection> can be returned from the <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>, <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>, and <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> methods.  \\n  \\n Note that the return value may differ from the <xref:System.Web.Profile.ProfileInfoCollection.Count%2A> value for the supplied <xref:System.Web.Profile.ProfileInfoCollection>. This indicates that some of the profiles in the specified <xref:System.Web.Profile.ProfileInfoCollection> were already deleted from the data store.  \\n  \\n The DeleteProfiles method calls the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=fullName> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, they are not deleted. To delete profile properties that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> method of the provider directly.\"\n  example:\n  - \"The following code example allows a user to search for profiles using the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> and <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> methods. The user can then delete the returned profiles with a call to the DeleteProfiles method.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/dbbefae3-6297-4bf8-9680-_1.aspx)]\\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/dbbefae3-6297-4bf8-9680-_1.aspx)]\"\n  syntax:\n    content: public static int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);\n    parameters:\n    - id: profiles\n      type: System.Web.Profile.ProfileInfoCollection\n      description: A <xref href=\"System.Web.Profile.ProfileInfoCollection\"></xref> that contains profile information for profiles to be deleted.\n    return:\n      type: System.Int32\n      description: The number of profiles deleted from the data source.\n  overload: System.Web.Profile.ProfileManager.DeleteProfiles*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>profiles</code> has a <xref:System.Web.Profile.ProfileInfoCollection.Count*> value of zero.  \\n  \\n \\\\- or -  \\n  \\n One of the <xref href=\\\"System.Web.Profile.ProfileInfo\\\"></xref> objects in <code>profiles</code> has a <xref:System.Web.Profile.ProfileInfo.UserName*> that is an empty string (\\\"\\\") or contains a comma.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>profiles</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n One of the <xref href=\\\"System.Web.Profile.ProfileInfo\\\"></xref> objects in <code>profiles</code> has a <xref:System.Web.Profile.ProfileInfo.UserName*> that is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.Enabled\n  id: Enabled\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: ProfileManager.Enabled\n  fullName: System.Web.Profile.ProfileManager.Enabled\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Gets a value indicating whether the user profile is enabled for the application.\n  remarks: The user profile is enabled for an application using the `enabled` attribute of the  configuration element.\n  example:\n  - \"The following code example shows the  element in the  section of the Web.config file for an ASP.NET application where the user profile has been enabled.  \\n  \\n```  \\n<profile enabled=\\\"true\\\" defaultProvider=\\\"SqlProvider\\\">  \\n  <providers>  \\n    <add name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Profile.SqlProfileProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      applicationName=\\\"MyApplication\\\" />  \\n  </providers>  \\n</profile>  \\n```\"\n  syntax:\n    content: public static bool Enabled { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user profile is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Profile.ProfileManager.Enabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)\n  id: FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)\n  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)\n  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Retrieves profile information for all profiles in which the last activity date occurred on or before the specified date and time and the user name for the profile matches the specified name.\n  remarks: \"The FindInactiveProfilesByUserName method is used to retrieve profile information for all unused user profiles for the application specified by the `applicationName` attribute in the configuration file. This method will only retrieve profiles for which the profile user name matches the supplied `usernameToMatch` parameter value. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched. Of the searched profiles, any profile with a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value is returned.  \\n  \\n You can retrieve this information in pages of data using the overload for the <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29> method that takes additional `pageIndex` and `pageSize` parameters.  \\n  \\n> [!NOTE]\\n>  Your profile provider may support wildcard characters in the `usernameToMatch` parameter. For example, the <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> method of the <xref:System.Web.Profile.SqlProfileProvider> class supports wildcard characters in the `usernameToMatch` parameter.  \\n  \\n The FindInactiveProfilesByUserName method calls the <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=fullName> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched. To find inactive profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> method of the provider directly.\"\n  example:\n  - \"The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> enumeration value and retrieves profile information for any matching profiles. The sample allows the user to specify whether to return only inactive profiles. If the user specifies only inactive profiles, the FindInactiveProfilesByUserName method is called; otherwise, the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> method is called.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.Profile.ProfileManager#8](~/add/codesnippet/csharp/02c1131d-855c-4e58-af67-_1.aspx)]\\n [!code-vb[System.Web.Profile.ProfileManager#8](~/add/codesnippet/visualbasic/02c1131d-855c-4e58-af67-_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate);\n    parameters:\n    - id: authenticationOption\n      type: System.Web.Profile.ProfileAuthenticationOption\n      description: One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.\n    - id: usernameToMatch\n      type: System.String\n      description: The user name for which to search.\n    - id: userInactiveSinceDate\n      type: System.DateTime\n      description: A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive.\n    return:\n      type: System.Web.Profile.ProfileInfoCollection\n      description: A <xref href=\"System.Web.Profile.ProfileInfoCollection\"></xref> containing user profile information for inactive profiles in which the user name matches the supplied <code>usernameToMatch</code> parameter.\n  overload: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>usernameToMatch</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>usernameToMatch</code> is an empty string (\"\").\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)\n  id: FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)\n  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)\n  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Retrieves profile information in pages of data for profiles in which the last activity date occurred on or before the specified date and time and the user name for the profile matches the specified name.\n  remarks: \"The FindInactiveProfilesByUserName method is used to retrieve profile information for unused user profiles for the application specified by the `applicationName` attribute in the configuration file. This method will only retrieve profiles for which the user name matches the supplied `usernameToMatch` parameter value. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched. Of the searched profiles, any profile is returned that has a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value.  \\n  \\n The results returned by FindInactiveProfilesByUserName are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection> collection. The `pageIndex` parameter identifies which page of results to return; 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the configured `applicationName`, based on the `authenticationOption` and `userInactiveSinceDate` parameters. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is 1 with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned will contain the sixth through the tenth inactive profiles. The `totalRecords` parameter will be set to 13.  \\n  \\n Note that your profile provider may support wildcard characters in the `usernameToMatch` parameter. For example, the <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> method of the <xref:System.Web.Profile.SqlProfileProvider> class supports wildcard characters in the `usernameToMatch` parameter.  \\n  \\n The FindInactiveProfilesByUserName method calls the <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched. To find inactive profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> method of the provider directly.\"\n  example:\n  - \"The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> value and retrieves profile information for any matching profiles. The example allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the FindInactiveProfilesByUserName method is called; otherwise, the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> method is called.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/8901892e-7654-4efd-b373-_1.aspx)]\\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/8901892e-7654-4efd-b373-_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);\n    parameters:\n    - id: authenticationOption\n      type: System.Web.Profile.ProfileAuthenticationOption\n      description: One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> values, specifying whether anonymous, authenticated, or both types of profiles are returned.\n    - id: usernameToMatch\n      type: System.String\n      description: The user name for which to search.\n    - id: userInactiveSinceDate\n      type: System.DateTime\n      description: A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive.\n    - id: pageIndex\n      type: System.Int32\n      description: The index of the page of results to return. `pageIndex` is zero-based.\n    - id: pageSize\n      type: System.Int32\n      description: The size of the page of results to return.\n    - id: totalRecords\n      type: System.Int32\n      description: When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.\n    return:\n      type: System.Web.Profile.ProfileInfoCollection\n      description: A <xref href=\"System.Web.Profile.ProfileInfoCollection\"></xref> containing user profile information for inactive profiles where the user name matches the supplied <code>usernameToMatch</code> parameter.\n  overload: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>usernameToMatch</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>usernameToMatch</code> is an empty string (\\\"\\\").  \\n  \\n \\\\- or -  \\n  \\n <code>pageIndex</code> is less than zero.  \\n  \\n \\\\- or -  \\n  \\n <code>pageSize</code> is less than 1.  \\n  \\n \\\\- or -  \\n  \\n <code>pageIndex</code> multiplied by <code>pageSize</code> is larger than <xref:System.Int32.MaxValue>.\"\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)\n  id: FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: FindProfilesByUserName(ProfileAuthenticationOption,String)\n  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)\n  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Retrieves all profile information for profiles in which the user name matches the specified name.\n  remarks: \"The FindProfilesByUserName method returns a list of all profile information for which the user name matches the supplied `usernameToMatch` parameter value for the configured <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> property value. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.  \\n  \\n You can retrieve profile information for user profiles in pages of data using the overload for the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> method that takes additional `pageIndex` and `pageSize` parameters.  \\n  \\n Note that your profile provider may support wildcard characters in the `usernameToMatch` parameter. For example, the <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> method of the <xref:System.Web.Profile.SqlProfileProvider> class supports wildcard characters in the `usernameToMatch` parameter.  \\n  \\n The FindProfilesByUserName method calls the <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched. To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> method of the provider directly.\"\n  example:\n  - \"The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> enumeration value and retrieves profile information for any matching profiles. The example allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> method is called; otherwise, the FindProfilesByUserName method is called.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.Profile.ProfileManager#8](~/add/codesnippet/csharp/31ac7eb6-b35d-45af-a76d-_1.aspx)]\\n [!code-vb[System.Web.Profile.ProfileManager#8](~/add/codesnippet/visualbasic/31ac7eb6-b35d-45af-a76d-_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch);\n    parameters:\n    - id: authenticationOption\n      type: System.Web.Profile.ProfileAuthenticationOption\n      description: One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.\n    - id: usernameToMatch\n      type: System.String\n      description: The user name for which to search.\n    return:\n      type: System.Web.Profile.ProfileInfoCollection\n      description: A <xref href=\"System.Web.Profile.ProfileInfoCollection\"></xref> containing user profile information for profiles where the user name matches the supplied <code>usernameToMatch</code> parameter.\n  overload: System.Web.Profile.ProfileManager.FindProfilesByUserName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>usernameToMatch</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>usernameToMatch</code> is an empty string (\"\").\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)\n  id: FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)\n  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)\n  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Retrieves profile information in pages of data for profiles in which the user name matches the specified name.\n  remarks: \"The <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> method returns a list of profile information for which the profile user name matches the supplied `usernameToMatch` parameter value of the configured <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.  \\n  \\n Note that your profile provider may support wildcard characters in the `usernameToMatch` parameter. For example, the <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> method of the <xref:System.Web.Profile.SqlProfileProvider> class supports wildcard characters in the `usernameToMatch` parameter.  \\n  \\n The results returned by FindProfilesByUserName are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection>. The `pageIndex` parameter identifies which page of results to return; zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the application specified by the `applicationName` attribute in the configuration file, based on the supplied `authenticationOption`. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is 1 with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned will contain the sixth through the tenth profiles. The `totalRecords` parameter will be set to 13.  \\n  \\n The <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> method calls the <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched. To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> method of the provider directly.\"\n  example:\n  - \"The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> and retrieves profile information for any matching profiles. The example allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> method is called; otherwise, the FindProfilesByUserName method is called.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/3375ceaa-fae5-498d-b74c-_1.aspx)]\\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/3375ceaa-fae5-498d-b74c-_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);\n    parameters:\n    - id: authenticationOption\n      type: System.Web.Profile.ProfileAuthenticationOption\n      description: One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.\n    - id: usernameToMatch\n      type: System.String\n      description: The user name for which to search.\n    - id: pageIndex\n      type: System.Int32\n      description: The index of the page of results to return. `pageIndex` is zero-based.\n    - id: pageSize\n      type: System.Int32\n      description: The size of the page of results to return.\n    - id: totalRecords\n      type: System.Int32\n      description: When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.\n    return:\n      type: System.Web.Profile.ProfileInfoCollection\n      description: A <xref href=\"System.Web.Profile.ProfileInfoCollection\"></xref> containing user profile information for profiles where the user name matches the supplied <code>usernameToMatch</code> parameter.\n  overload: System.Web.Profile.ProfileManager.FindProfilesByUserName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>usernameToMatch</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>usernameToMatch</code> is an empty string (\\\"\\\").  \\n  \\n \\\\- or -  \\n  \\n <code>pageIndex</code> is less than zero.  \\n  \\n \\\\- or -  \\n  \\n <code>pageSize</code> is less than 1.  \\n  \\n \\\\- or -  \\n  \\n <code>pageIndex</code> multiplied by <code>pageSize</code> is larger than <xref:System.Int32.MaxValue>.\"\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)\n  id: GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)\n  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)\n  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Retrieves all user profile data for profiles in which the last activity date occurred on or before the specified date and time.\n  remarks: \"The GetAllInactiveProfiles method is used to retrieve profile information from the data source for all unused user profiles for the application specified by the `applicationName` attribute in the configuration file. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched. Of the searched profiles, any profile is returned that has a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value.  \\n  \\n You can retrieve profile information for inactive user profiles in pages of data using the overload for the <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> method that takes additional `pageIndex` and `pageSize` parameters.  \\n  \\n The GetAllInactiveProfiles method calls the <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched. To find unused profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> method of the provider directly.\"\n  example:\n  - \"The following code example shows an ASP.NET page that manages inactive profiles. A button is provided to delete all inactive profiles. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.Profile.ProfileManager#7](~/add/codesnippet/csharp/12596197-85de-46bb-89a0-_1.aspx)]\\n [!code-vb[System.Web.Profile.ProfileManager#7](~/add/codesnippet/visualbasic/12596197-85de-46bb-89a0-_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);\n    parameters:\n    - id: authenticationOption\n      type: System.Web.Profile.ProfileAuthenticationOption\n      description: One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.\n    - id: userInactiveSinceDate\n      type: System.DateTime\n      description: A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive.\n    return:\n      type: System.Web.Profile.ProfileInfoCollection\n      description: A <xref href=\"System.Web.Profile.ProfileInfoCollection\"></xref> containing user profile information about the inactive profiles.\n  overload: System.Web.Profile.ProfileManager.GetAllInactiveProfiles*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)\n  id: GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)\n  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)\n  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Retrieves a page of <xref href=\"System.Web.Profile.ProfileInfo\"></xref> objects for user profiles in which the last activity date occurred on or before the specified date and time.\n  remarks: \"The GetAllInactiveProfiles method is used to retrieve profile information from the data source for unused user profiles for the application specified by the `applicationName` attribute in the configuration file. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched. Of the searched profiles, any profile is returned that has a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs before the specified `userInactiveSinceDate` parameter value.  \\n  \\n The results returned by GetAllInactiveProfiles are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection>. The `pageIndex` parameter identifies which page of results to return; zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the configured `applicationName`, based on the `authenticationOption` and `userInactiveSinceDate` parameters. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is one with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned will contain the sixth through the tenth inactive profiles. The `totalRecords` parameter will be set to 13.  \\n  \\n The GetAllInactiveProfiles method calls the <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched. To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> method of the provider directly.\"\n  example:\n  - \"The following code example shows an ASP.NET Web page that manages inactive profiles. A button is provided to delete all inactive profiles. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/40315987-b58d-4459-883e-_1.aspx)]\\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/40315987-b58d-4459-883e-_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);\n    parameters:\n    - id: authenticationOption\n      type: System.Web.Profile.ProfileAuthenticationOption\n      description: One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.\n    - id: userInactiveSinceDate\n      type: System.DateTime\n      description: A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive.\n    - id: pageIndex\n      type: System.Int32\n      description: The index of the page of results to return. `pageIndex` is zero-based.\n    - id: pageSize\n      type: System.Int32\n      description: The size of the page of results to return.\n    - id: totalRecords\n      type: System.Int32\n      description: When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.\n    return:\n      type: System.Web.Profile.ProfileInfoCollection\n      description: A <xref href=\"System.Web.Profile.ProfileInfoCollection\"></xref> containing user profile information about the inactive profiles.\n  overload: System.Web.Profile.ProfileManager.GetAllInactiveProfiles*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)\n  id: GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: GetAllProfiles(ProfileAuthenticationOption)\n  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption)\n  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Retrieves user profile data for profiles in the data source.\n  remarks: \"The GetAllProfiles method is used to retrieve profile information from the data source for the application specified by the `applicationName` attribute in the configuration file. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.  \\n  \\n You can retrieve pages of <xref:System.Web.Profile.ProfileInfo> objects for user profiles using the overload for the <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> method that takes additional `pageIndex` and `pageSize` parameters.  \\n  \\n The GetAllProfiles method calls the <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched. To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> method of the provider directly.\"\n  example:\n  - \"The following code example displays profile information for all of the profiles for the configured `applicationName`.  \\n  \\n [!code-cs[System.Web.Profile.ProfileManager#6](~/add/codesnippet/csharp/14cc8f0b-52b7-434e-bc19-_1.aspx)]\\n [!code-vb[System.Web.Profile.ProfileManager#6](~/add/codesnippet/visualbasic/14cc8f0b-52b7-434e-bc19-_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);\n    parameters:\n    - id: authenticationOption\n      type: System.Web.Profile.ProfileAuthenticationOption\n      description: One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.\n    return:\n      type: System.Web.Profile.ProfileInfoCollection\n      description: A <xref href=\"System.Web.Profile.ProfileInfoCollection\"></xref> containing user profile information for all of the profiles in the data source.\n  overload: System.Web.Profile.ProfileManager.GetAllProfiles*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)\n  id: GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)\n  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)\n  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Retrieves pages of user profile data.\n  remarks: \"The GetAllProfiles method is used to retrieve profile information from the data source for the application specified by the `applicationName` attribute in the configuration file. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.  \\n  \\n The results returned by <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection>. The `pageIndex` parameter identifies which page of results to return; zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the configured `applicationName`, based on the supplied `authenticationOption`. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is one with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned will contain the sixth through the tenth profiles. The `totalRecords` parameter will be set to 13.  \\n  \\n The GetAllProfiles method calls the <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> method of the default profile provider. The default profile provider is specified using the `defaultProvider` attribute of the  configuration element. If the user profile contains properties that are managed by a profile provider other than the default provider, the data source for the other profile provider is not searched. To find profiles that are managed by a profile provider other than the default provider, obtain a reference to the profile provider using the <xref:System.Web.Profile.ProfileManager.Providers%2A> property and call the <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> method of the provider directly.\"\n  example:\n  - \"The following code example displays profile information for all of the profiles for the configured `applicationName` in pages of data.  \\n  \\n [!code-cs[System.Web.Profile.ProfileManager#3](~/add/codesnippet/csharp/3142f281-fd51-44c5-967b-_1.aspx)]\\n [!code-vb[System.Web.Profile.ProfileManager#3](~/add/codesnippet/visualbasic/3142f281-fd51-44c5-967b-_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);\n    parameters:\n    - id: authenticationOption\n      type: System.Web.Profile.ProfileAuthenticationOption\n      description: One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.\n    - id: pageIndex\n      type: System.Int32\n      description: The index of the page of results to return. `pageIndex` is zero-based.\n    - id: pageSize\n      type: System.Int32\n      description: The size of the page of results to return.\n    - id: totalRecords\n      type: System.Int32\n      description: When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.\n    return:\n      type: System.Web.Profile.ProfileInfoCollection\n      description: A <xref href=\"System.Web.Profile.ProfileInfoCollection\"></xref> containing user profile information for all of the profiles in the data source.\n  overload: System.Web.Profile.ProfileManager.GetAllProfiles*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)\n  id: GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)\n  nameWithType: ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)\n  fullName: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Gets the number of profiles in which the last activity date occurred on or before the specified date.\n  remarks: The GetNumberOfInactiveProfiles method is used to retrieve a count of all of the unused user profiles from the data source for the application specified by the `applicationName` attribute in the configuration file. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched. Of the searched profiles, all profiles are counted that have a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value.\n  example:\n  - \"The following code example allows a user to view and delete information for active and inactive profiles based on search criteria. A count of inactive profiles is displayed using the results of the GetNumberOfInactiveProfiles method.  \\n  \\n> [!IMPORTANT]\\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/456bb4d7-dc47-48d9-b96d-_1.aspx)]\\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/456bb4d7-dc47-48d9-b96d-_1.aspx)]\"\n  syntax:\n    content: public static int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);\n    parameters:\n    - id: authenticationOption\n      type: System.Web.Profile.ProfileAuthenticationOption\n      description: One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.\n    - id: userInactiveSinceDate\n      type: System.DateTime\n      description: A <xref:System.DateTime> object that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive.\n    return:\n      type: System.Int32\n      description: The number of profiles in the data source for which the last activity date occurred before the specified date and time.\n  overload: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)\n  id: GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: GetNumberOfProfiles(ProfileAuthenticationOption)\n  nameWithType: ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)\n  fullName: System.Web.Profile.ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Gets the number of profiles in the data source.\n  remarks: The GetNumberOfProfiles method is used to retrieve a count of all of the user profiles from the data source for the application specified by the `applicationName` attribute in the configuration file. Use the `authenticationOption` parameter to specify whether you want only anonymous profiles, only authenticated profiles, or all profiles to be searched.\n  example:\n  - \"The following code example displays profile information for all of the profiles for the configured `applicationName` and also returns the number of profiles.  \\n  \\n [!code-cs[System.Web.Profile.ProfileManager#6](~/add/codesnippet/csharp/754e4c9f-e8cb-4da5-b2cc-_1.aspx)]\\n [!code-vb[System.Web.Profile.ProfileManager#6](~/add/codesnippet/visualbasic/754e4c9f-e8cb-4da5-b2cc-_1.aspx)]\"\n  syntax:\n    content: public static int GetNumberOfProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);\n    parameters:\n    - id: authenticationOption\n      type: System.Web.Profile.ProfileAuthenticationOption\n      description: One of the <xref href=\"System.Web.Profile.ProfileAuthenticationOption\"></xref> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.\n    return:\n      type: System.Int32\n      description: The number of profiles in the data source.\n  overload: System.Web.Profile.ProfileManager.GetNumberOfProfiles*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.Provider\n  id: Provider\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: Provider\n  nameWithType: ProfileManager.Provider\n  fullName: System.Web.Profile.ProfileManager.Provider\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Gets a reference to the default profile provider for the application.\n  remarks: The Provider property enables you to reference the default profile provider for an application directly. This is commonly used to access custom members of the profile provider that are not part of the <xref:System.Web.Profile.ProfileProvider> abstract base class.\n  example:\n  - \"The following code example lists properties of the default profile provider.  \\n  \\n [!code-vb[System.Web.Profile.ProfileManager#2](~/add/codesnippet/visualbasic/p-system.web.profile.pro_6_1.aspx)]\\n [!code-cs[System.Web.Profile.ProfileManager#2](~/add/codesnippet/csharp/p-system.web.profile.pro_6_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Profile.ProfileProvider Provider { get; }\n    return:\n      type: System.Web.Profile.ProfileProvider\n      description: The default profile provider for the application.\n  overload: System.Web.Profile.ProfileManager.Provider*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: An attempt was made to get the Provider property value without at least <xref href=\"System.Web.AspNetHostingPermissionLevel\"></xref> permission.\n  platform:\n  - net462\n- uid: System.Web.Profile.ProfileManager.Providers\n  id: Providers\n  parent: System.Web.Profile.ProfileManager\n  langs:\n  - csharp\n  name: Providers\n  nameWithType: ProfileManager.Providers\n  fullName: System.Web.Profile.ProfileManager.Providers\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Gets a collection of the profile providers for the ASP.NET application.\n  remarks: \"The Providers property references all of the profile providers enabled for an application, including providers added in the machine configuration and providers added in all Web.config files. You can control which profile providers are available for an application using the  element of the  section in the configuration file. For example, the following Web.config file removes the profile providers specified in parent configuration files and adds a <xref:System.Web.Profile.SqlProfileProvider> instance as the profile provider for the application.  \\n  \\n```  \\n<configuration>  \\n  <connectionStrings>  \\n    <add name=\\\"SqlServices\\\" connectionString=  \\n      \\\"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\\\" />  \\n  </connectionStrings>  \\n  <system.web>  \\n    <profile enabled=\\\"true\\\" defaultProvider=\\\"SqlProvider\\\">  \\n      <providers>  \\n        <clear />  \\n        <add name=\\\"SqlProvider\\\"  \\n          type=\\\"System.Web.Profile.SqlProfileProvider\\\"  \\n          connectionStringName=\\\"SqlServices\\\"  \\n          applicationName=\\\"MyApplication\\\" />  \\n      </providers>  \\n    </profile>  \\n  </system.web>  \\n</configuration>  \\n```  \\n  \\n When specifying the  section, you must specify a default provider by setting the `defaultProvider` attribute. If you do not specify a  section in your Web.config file, the values from the machine configuration are used and the <xref:System.Web.Profile.SqlProfileProvider> instance named AspNetSqlProvider is established as the default provider.  \\n  \\n You can obtain a strongly typed reference to a provider from the Providers collection by indexing the profile provider by name and casting it as the desired type.\"\n  example:\n  - \"The following code example lists the providers enabled for an application and their respective types.  \\n  \\n [!code-vb[System.Web.Profile.ProfileManager#9](~/add/codesnippet/visualbasic/p-system.web.profile.pro_5_1.aspx)]\\n [!code-cs[System.Web.Profile.ProfileManager#9](~/add/codesnippet/csharp/p-system.web.profile.pro_5_1.aspx)]\"\n  syntax:\n    content: public static System.Web.Profile.ProfileProviderCollection Providers { get; }\n    return:\n      type: System.Web.Profile.ProfileProviderCollection\n      description: A <xref href=\"System.Web.Profile.ProfileProviderCollection\"></xref> of the profile providers configured for the ASP.NET application.\n  overload: System.Web.Profile.ProfileManager.Providers*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: An attempt was made to get the Providers property value without at least <xref href=\"System.Web.AspNetHostingPermissionLevel\"></xref> permission.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.HttpException\n  parent: System.Web\n  isExternal: false\n  name: HttpException\n  nameWithType: HttpException\n  fullName: System.Web.HttpException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: AddDynamicProfileProperty(ProfilePropertySettings)\n  nameWithType: ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)\n  fullName: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)\n- uid: System.Web.Configuration.ProfilePropertySettings\n  parent: System.Web.Configuration\n  isExternal: false\n  name: ProfilePropertySettings\n  nameWithType: ProfilePropertySettings\n  fullName: System.Web.Configuration.ProfilePropertySettings\n- uid: System.Web.Profile.ProfileManager.ApplicationName\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: ApplicationName\n  nameWithType: ProfileManager.ApplicationName\n  fullName: System.Web.Profile.ProfileManager.ApplicationName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Profile.ProfileManager.AutomaticSaveEnabled\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: AutomaticSaveEnabled\n  nameWithType: ProfileManager.AutomaticSaveEnabled\n  fullName: System.Web.Profile.ProfileManager.AutomaticSaveEnabled\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)\n  nameWithType: ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)\n  fullName: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Profile.ProfileAuthenticationOption\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileAuthenticationOption\n  nameWithType: ProfileAuthenticationOption\n  fullName: System.Web.Profile.ProfileAuthenticationOption\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Web.Profile.ProfileManager.DeleteProfile(System.String)\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: DeleteProfile(String)\n  nameWithType: ProfileManager.DeleteProfile(String)\n  fullName: System.Web.Profile.ProfileManager.DeleteProfile(String)\n- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: DeleteProfiles(String[])\n  nameWithType: ProfileManager.DeleteProfiles(String[])\n  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(String[])\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: DeleteProfiles(ProfileInfoCollection)\n  nameWithType: ProfileManager.DeleteProfiles(ProfileInfoCollection)\n  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(ProfileInfoCollection)\n- uid: System.Web.Profile.ProfileInfoCollection\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileInfoCollection\n  nameWithType: ProfileInfoCollection\n  fullName: System.Web.Profile.ProfileInfoCollection\n- uid: System.Web.Profile.ProfileManager.Enabled\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: Enabled\n  nameWithType: ProfileManager.Enabled\n  fullName: System.Web.Profile.ProfileManager.Enabled\n- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)\n  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)\n  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)\n- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)\n  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)\n  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)\n- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: FindProfilesByUserName(ProfileAuthenticationOption,String)\n  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)\n  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)\n- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)\n  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)\n  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)\n- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)\n  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)\n  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)\n- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)\n  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)\n  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)\n- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: GetAllProfiles(ProfileAuthenticationOption)\n  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption)\n  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption)\n- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)\n  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)\n  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)\n- uid: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)\n  nameWithType: ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)\n  fullName: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)\n- uid: System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: GetNumberOfProfiles(ProfileAuthenticationOption)\n  nameWithType: ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)\n  fullName: System.Web.Profile.ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)\n- uid: System.Web.Profile.ProfileManager.Provider\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: Provider\n  nameWithType: ProfileManager.Provider\n  fullName: System.Web.Profile.ProfileManager.Provider\n- uid: System.Web.Profile.ProfileProvider\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileProvider\n  nameWithType: ProfileProvider\n  fullName: System.Web.Profile.ProfileProvider\n- uid: System.Web.Profile.ProfileManager.Providers\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: Providers\n  nameWithType: ProfileManager.Providers\n  fullName: System.Web.Profile.ProfileManager.Providers\n- uid: System.Web.Profile.ProfileProviderCollection\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileProviderCollection\n  nameWithType: ProfileProviderCollection\n  fullName: System.Web.Profile.ProfileProviderCollection\n- uid: System.Web.Profile.ProfileManager.AddDynamicProfileProperty*\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: AddDynamicProfileProperty\n  nameWithType: ProfileManager.AddDynamicProfileProperty\n- uid: System.Web.Profile.ProfileManager.ApplicationName*\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: ApplicationName\n  nameWithType: ProfileManager.ApplicationName\n- uid: System.Web.Profile.ProfileManager.AutomaticSaveEnabled*\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: AutomaticSaveEnabled\n  nameWithType: ProfileManager.AutomaticSaveEnabled\n- uid: System.Web.Profile.ProfileManager.DeleteInactiveProfiles*\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: DeleteInactiveProfiles\n  nameWithType: ProfileManager.DeleteInactiveProfiles\n- uid: System.Web.Profile.ProfileManager.DeleteProfile*\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: DeleteProfile\n  nameWithType: ProfileManager.DeleteProfile\n- uid: System.Web.Profile.ProfileManager.DeleteProfiles*\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: DeleteProfiles\n  nameWithType: ProfileManager.DeleteProfiles\n- uid: System.Web.Profile.ProfileManager.Enabled*\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: Enabled\n  nameWithType: ProfileManager.Enabled\n- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName*\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: FindInactiveProfilesByUserName\n  nameWithType: ProfileManager.FindInactiveProfilesByUserName\n- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName*\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: FindProfilesByUserName\n  nameWithType: ProfileManager.FindProfilesByUserName\n- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles*\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: GetAllInactiveProfiles\n  nameWithType: ProfileManager.GetAllInactiveProfiles\n- uid: System.Web.Profile.ProfileManager.GetAllProfiles*\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: GetAllProfiles\n  nameWithType: ProfileManager.GetAllProfiles\n- uid: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles*\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: GetNumberOfInactiveProfiles\n  nameWithType: ProfileManager.GetNumberOfInactiveProfiles\n- uid: System.Web.Profile.ProfileManager.GetNumberOfProfiles*\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: GetNumberOfProfiles\n  nameWithType: ProfileManager.GetNumberOfProfiles\n- uid: System.Web.Profile.ProfileManager.Provider*\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: Provider\n  nameWithType: ProfileManager.Provider\n- uid: System.Web.Profile.ProfileManager.Providers*\n  parent: System.Web.Profile.ProfileManager\n  isExternal: false\n  name: Providers\n  nameWithType: ProfileManager.Providers\n"}