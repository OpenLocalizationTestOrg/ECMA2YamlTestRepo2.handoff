{"nodes":[{"pos":[893,999],"content":"Represents the configuration settings for validating an X.509 certificate. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the configuration settings for validating an X.509 certificate. This class cannot be inherited.","pos":[0,106],"nodes":[{"content":"Represents the configuration settings for validating an X.509 certificate.","pos":[0,74]},{"content":"This class cannot be inherited.","pos":[75,106]}]}]},{"pos":[4465,4588],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.CertificateReferenceElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.CertificateReferenceElement\"></xref> class."},{"pos":[5247,5339],"content":"Gets or sets a string that specifies the value to search for in the X.509 certificate store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a string that specifies the value to search for in the X.509 certificate store.","pos":[0,92]}]},{"pos":[5351,5557],"content":"The type contained in this property must satisfy the requirements of the specified <xref:System.ServiceModel.Configuration.CertificateReferenceElement.X509FindType%2A> value. The default is an empty string.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The type contained in this property must satisfy the requirements of the specified <xref:System.ServiceModel.Configuration.CertificateReferenceElement.X509FindType%2A> value. The default is an empty string.","pos":[0,206],"nodes":[{"content":"The type contained in this property must satisfy the requirements of the specified &lt;xref:System.ServiceModel.Configuration.CertificateReferenceElement.X509FindType%2A&gt; value.","pos":[0,174],"source":"The type contained in this property must satisfy the requirements of the specified <xref:System.ServiceModel.Configuration.CertificateReferenceElement.X509FindType%2A> value."},{"content":"The default is an empty string.","pos":[175,206]}]}]},{"pos":[5676,5731],"content":"The value to search for in the X.509 certificate store.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to search for in the X.509 certificate store.","pos":[0,55]}]},{"pos":[6343,6444],"content":"Gets or sets a boolean value that specifies whether the validation is done using a certificate chain.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a boolean value that specifies whether the validation is done using a certificate chain.","pos":[0,101]}]},{"pos":[6568,6749],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a certificate chain is used in validation; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a certificate chain is used in validation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7542,7554],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8157,8287],"content":"Gets or sets a value that specifies the location of the certificate store the client can use to validate the server’s certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies the location of the certificate store the client can use to validate the server’s certificate.","pos":[0,130]}]},{"pos":[8509,8804],"content":"A <xref href=\"System.Security.Cryptography.X509Certificates.StoreLocation\"></xref> that specifies the location of the certificate store the client can use to validate the server’s certificate. The default value is <xref href=\"System.Security.Cryptography.X509Certificates.StoreLocation\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.StoreLocation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the location of the certificate store the client can use to validate the server’s certificate.","pos":[0,192],"source":"A <xref href=\"System.Security.Cryptography.X509Certificates.StoreLocation\"></xref> that specifies the location of the certificate store the client can use to validate the server’s certificate."},{"content":"The default value is <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.StoreLocation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[193,295],"source":" The default value is <xref href=\"System.Security.Cryptography.X509Certificates.StoreLocation\"></xref>."}]},{"pos":[9390,9451],"content":"Gets or sets the name of the X.509 certificate store to open.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the X.509 certificate store to open.","pos":[0,61]}]},{"pos":[9661,9802],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.StoreName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the name of the X.509 certificate store to open.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Cryptography.X509Certificates.StoreName\"></xref> that contains the name of the X.509 certificate store to open."},{"pos":[10399,10452],"content":"Gets or sets the type of X.509 search to be executed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the type of X.509 search to be executed.","pos":[0,53]}]},{"pos":[10464,10615],"content":"The type contained in <xref:System.ServiceModel.Configuration.CertificateReferenceElement.FindValue%2A> must satisfy the requirements of this property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The type contained in &lt;xref:System.ServiceModel.Configuration.CertificateReferenceElement.FindValue%2A&gt; must satisfy the requirements of this property.","pos":[0,151],"source":"The type contained in <xref:System.ServiceModel.Configuration.CertificateReferenceElement.FindValue%2A> must satisfy the requirements of this property."}]},{"pos":[10834,10971],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509FindType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the type of X.509 search to be executed.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509FindType\"></xref> that contains the type of X.509 search to be executed."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement\n  id: CertificateReferenceElement\n  children:\n  - System.ServiceModel.Configuration.CertificateReferenceElement.#ctor\n  - System.ServiceModel.Configuration.CertificateReferenceElement.FindValue\n  - System.ServiceModel.Configuration.CertificateReferenceElement.IsChainIncluded\n  - System.ServiceModel.Configuration.CertificateReferenceElement.Properties\n  - System.ServiceModel.Configuration.CertificateReferenceElement.StoreLocation\n  - System.ServiceModel.Configuration.CertificateReferenceElement.StoreName\n  - System.ServiceModel.Configuration.CertificateReferenceElement.X509FindType\n  langs:\n  - csharp\n  name: CertificateReferenceElement\n  nameWithType: CertificateReferenceElement\n  fullName: System.ServiceModel.Configuration.CertificateReferenceElement\n  type: Class\n  summary: Represents the configuration settings for validating an X.509 certificate. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class CertificateReferenceElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  langs:\n  - csharp\n  name: CertificateReferenceElement()\n  nameWithType: CertificateReferenceElement.CertificateReferenceElement()\n  fullName: System.ServiceModel.Configuration.CertificateReferenceElement.CertificateReferenceElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.CertificateReferenceElement\"></xref> class.\n  syntax:\n    content: public CertificateReferenceElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.CertificateReferenceElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.FindValue\n  id: FindValue\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  langs:\n  - csharp\n  name: FindValue\n  nameWithType: CertificateReferenceElement.FindValue\n  fullName: System.ServiceModel.Configuration.CertificateReferenceElement.FindValue\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a string that specifies the value to search for in the X.509 certificate store.\n  remarks: The type contained in this property must satisfy the requirements of the specified <xref:System.ServiceModel.Configuration.CertificateReferenceElement.X509FindType%2A> value. The default is an empty string.\n  syntax:\n    content: public string FindValue { get; set; }\n    return:\n      type: System.String\n      description: The value to search for in the X.509 certificate store.\n  overload: System.ServiceModel.Configuration.CertificateReferenceElement.FindValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.IsChainIncluded\n  id: IsChainIncluded\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  langs:\n  - csharp\n  name: IsChainIncluded\n  nameWithType: CertificateReferenceElement.IsChainIncluded\n  fullName: System.ServiceModel.Configuration.CertificateReferenceElement.IsChainIncluded\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a boolean value that specifies whether the validation is done using a certificate chain.\n  syntax:\n    content: public bool IsChainIncluded { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a certificate chain is used in validation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.CertificateReferenceElement.IsChainIncluded*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: CertificateReferenceElement.Properties\n  fullName: System.ServiceModel.Configuration.CertificateReferenceElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.ServiceModel.Configuration.CertificateReferenceElement.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.StoreLocation\n  id: StoreLocation\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  langs:\n  - csharp\n  name: StoreLocation\n  nameWithType: CertificateReferenceElement.StoreLocation\n  fullName: System.ServiceModel.Configuration.CertificateReferenceElement.StoreLocation\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies the location of the certificate store the client can use to validate the server’s certificate.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.StoreLocation StoreLocation { get; set; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.StoreLocation\n      description: A <xref href=\"System.Security.Cryptography.X509Certificates.StoreLocation\"></xref> that specifies the location of the certificate store the client can use to validate the server’s certificate. The default value is <xref href=\"System.Security.Cryptography.X509Certificates.StoreLocation\"></xref>.\n  overload: System.ServiceModel.Configuration.CertificateReferenceElement.StoreLocation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.StoreName\n  id: StoreName\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  langs:\n  - csharp\n  name: StoreName\n  nameWithType: CertificateReferenceElement.StoreName\n  fullName: System.ServiceModel.Configuration.CertificateReferenceElement.StoreName\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the name of the X.509 certificate store to open.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.StoreName StoreName { get; set; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.StoreName\n      description: A <xref href=\"System.Security.Cryptography.X509Certificates.StoreName\"></xref> that contains the name of the X.509 certificate store to open.\n  overload: System.ServiceModel.Configuration.CertificateReferenceElement.StoreName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.X509FindType\n  id: X509FindType\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  langs:\n  - csharp\n  name: X509FindType\n  nameWithType: CertificateReferenceElement.X509FindType\n  fullName: System.ServiceModel.Configuration.CertificateReferenceElement.X509FindType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the type of X.509 search to be executed.\n  remarks: The type contained in <xref:System.ServiceModel.Configuration.CertificateReferenceElement.FindValue%2A> must satisfy the requirements of this property.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509FindType X509FindType { get; set; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509FindType\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.X509FindType\"></xref> that contains the type of X.509 search to be executed.\n  overload: System.ServiceModel.Configuration.CertificateReferenceElement.X509FindType*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.#ctor\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  isExternal: false\n  name: CertificateReferenceElement()\n  nameWithType: CertificateReferenceElement.CertificateReferenceElement()\n  fullName: System.ServiceModel.Configuration.CertificateReferenceElement.CertificateReferenceElement()\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.FindValue\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  isExternal: false\n  name: FindValue\n  nameWithType: CertificateReferenceElement.FindValue\n  fullName: System.ServiceModel.Configuration.CertificateReferenceElement.FindValue\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.IsChainIncluded\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  isExternal: false\n  name: IsChainIncluded\n  nameWithType: CertificateReferenceElement.IsChainIncluded\n  fullName: System.ServiceModel.Configuration.CertificateReferenceElement.IsChainIncluded\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.Properties\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  isExternal: false\n  name: Properties\n  nameWithType: CertificateReferenceElement.Properties\n  fullName: System.ServiceModel.Configuration.CertificateReferenceElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.StoreLocation\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  isExternal: false\n  name: StoreLocation\n  nameWithType: CertificateReferenceElement.StoreLocation\n  fullName: System.ServiceModel.Configuration.CertificateReferenceElement.StoreLocation\n- uid: System.Security.Cryptography.X509Certificates.StoreLocation\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: StoreLocation\n  nameWithType: StoreLocation\n  fullName: System.Security.Cryptography.X509Certificates.StoreLocation\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.StoreName\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  isExternal: false\n  name: StoreName\n  nameWithType: CertificateReferenceElement.StoreName\n  fullName: System.ServiceModel.Configuration.CertificateReferenceElement.StoreName\n- uid: System.Security.Cryptography.X509Certificates.StoreName\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: StoreName\n  nameWithType: StoreName\n  fullName: System.Security.Cryptography.X509Certificates.StoreName\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.X509FindType\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  isExternal: false\n  name: X509FindType\n  nameWithType: CertificateReferenceElement.X509FindType\n  fullName: System.ServiceModel.Configuration.CertificateReferenceElement.X509FindType\n- uid: System.Security.Cryptography.X509Certificates.X509FindType\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509FindType\n  nameWithType: X509FindType\n  fullName: System.Security.Cryptography.X509Certificates.X509FindType\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.#ctor*\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  isExternal: false\n  name: CertificateReferenceElement\n  nameWithType: CertificateReferenceElement.CertificateReferenceElement\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.FindValue*\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  isExternal: false\n  name: FindValue\n  nameWithType: CertificateReferenceElement.FindValue\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.IsChainIncluded*\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  isExternal: false\n  name: IsChainIncluded\n  nameWithType: CertificateReferenceElement.IsChainIncluded\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.Properties*\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  isExternal: false\n  name: Properties\n  nameWithType: CertificateReferenceElement.Properties\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.StoreLocation*\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  isExternal: false\n  name: StoreLocation\n  nameWithType: CertificateReferenceElement.StoreLocation\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.StoreName*\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  isExternal: false\n  name: StoreName\n  nameWithType: CertificateReferenceElement.StoreName\n- uid: System.ServiceModel.Configuration.CertificateReferenceElement.X509FindType*\n  parent: System.ServiceModel.Configuration.CertificateReferenceElement\n  isExternal: false\n  name: X509FindType\n  nameWithType: CertificateReferenceElement.X509FindType\n"}