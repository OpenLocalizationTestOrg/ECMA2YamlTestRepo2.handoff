{"nodes":[{"pos":[373,600],"content":"Provides information for the <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> events.","needQuote":true,"needEscape":true,"source":"Provides information for the <xref href=\"System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected\"></xref> and <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected\"></xref> events."},{"pos":[613,1244],"content":"The `SpeechRecognitionRejected` event is raised by the <xref:System.Speech.Recognition.SpeechRecognizer> and <xref:System.Speech.Recognition.SpeechRecognitionEngine> classes.       **SpeechRecognitionRejected** events are generated by a speech recognition engine when none of the alternates from a recognition operation have a high enough confidence score to be accepted. Detailed information about rejected phrases is available through the <xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A> property.       **SpeechRecognitionRejectedEventArgs** derives from <xref:System.Speech.Recognition.RecognitionEventArgs>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`SpeechRecognitionRejected`</ph> event is raised by the &lt;xref:System.Speech.Recognition.SpeechRecognizer&gt; and &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine&gt; classes.","pos":[0,174],"source":"The `SpeechRecognitionRejected` event is raised by the <xref:System.Speech.Recognition.SpeechRecognizer> and <xref:System.Speech.Recognition.SpeechRecognitionEngine> classes."},{"content":"<bpt id=\"p1\">**</bpt>SpeechRecognitionRejected<ept id=\"p1\">**</ept> events are generated by a speech recognition engine when none of the alternates from a recognition operation have a high enough confidence score to be accepted.","pos":[181,371],"source":"**SpeechRecognitionRejected** events are generated by a speech recognition engine when none of the alternates from a recognition operation have a high enough confidence score to be accepted."},{"content":"Detailed information about rejected phrases is available through the &lt;xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A&gt; property.","pos":[372,514],"source":" Detailed information about rejected phrases is available through the <xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A> property."},{"content":"<bpt id=\"p1\">**</bpt>SpeechRecognitionRejectedEventArgs<ept id=\"p1\">**</ept> derives from &lt;xref:System.Speech.Recognition.RecognitionEventArgs&gt;.","pos":[521,627],"source":"**SpeechRecognitionRejectedEventArgs** derives from <xref:System.Speech.Recognition.RecognitionEventArgs>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Recognition.SpeechRecognitionRejectedEventArgs\n  id: SpeechRecognitionRejectedEventArgs\n  children: []\n  langs:\n  - csharp\n  name: SpeechRecognitionRejectedEventArgs\n  nameWithType: SpeechRecognitionRejectedEventArgs\n  fullName: System.Speech.Recognition.SpeechRecognitionRejectedEventArgs\n  type: Class\n  summary: Provides information for the <xref href=\"System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected\"></xref> and <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected\"></xref> events.\n  remarks: \"The `SpeechRecognitionRejected` event is raised by the <xref:System.Speech.Recognition.SpeechRecognizer> and <xref:System.Speech.Recognition.SpeechRecognitionEngine> classes.  \\n  \\n **SpeechRecognitionRejected** events are generated by a speech recognition engine when none of the alternates from a recognition operation have a high enough confidence score to be accepted. Detailed information about rejected phrases is available through the <xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A> property.  \\n  \\n **SpeechRecognitionRejectedEventArgs** derives from <xref:System.Speech.Recognition.RecognitionEventArgs>.\"\n  example:\n  - \"The following example recognizes phrases such as \\\"Display the list of artists in the jazz category\\\" or \\\"Display albums gospel\\\". The example uses a handler for the <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected> event to display a notification in the console when the speech input cannot be matched to the contents of the grammar with sufficient confidence to produce a successful recognition.  \\n  \\n```  \\nusing System;  \\nusing System.Speech.Recognition;  \\n  \\nnamespace SampleRecognition  \\n{  \\n  class Program  \\n  {  \\n    static void Main(string[] args)  \\n  \\n    // Initialize a shared speech recognition engine.  \\n    {  \\n      using (SpeechRecognizer recognizer =  \\n         new SpeechRecognizer())  \\n      {  \\n  \\n        // Create a grammar.  \\n        //  Create lists of alternative choices.  \\n        Choices listTypes = new Choices(new string[] { \\\"albums\\\", \\\"artists\\\" });  \\n        Choices genres = new Choices(new string[] {   \\n          \\\"blues\\\", \\\"classical\\\", \\\"gospel\\\", \\\"jazz\\\", \\\"rock\\\" });  \\n  \\n        //  Create a GrammarBuilder object and assemble the grammar components.  \\n        GrammarBuilder mediaMenu = new GrammarBuilder(\\\"Display\\\");  \\n        mediaMenu.Append(\\\"the list of\\\", 0, 1);  \\n        mediaMenu.Append(listTypes);  \\n        mediaMenu.Append(\\\"in the\\\", 0, 1);  \\n        mediaMenu.Append(genres);  \\n        mediaMenu.Append(\\\"category\\\", 0, 1);  \\n  \\n        //  Build a Grammar object from the GrammarBuilder.  \\n        Grammar mediaMenuGrammar = new Grammar(mediaMenu);  \\n        mediaMenuGrammar.Name = \\\"Media Chooser\\\";  \\n  \\n        // Attach event handlers.  \\n        recognizer.LoadGrammarCompleted +=  \\n          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  \\n        recognizer.SpeechRecognized +=  \\n          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  \\n        recognizer.SpeechRecognitionRejected +=   \\n          new EventHandler<SpeechRecognitionRejectedEventArgs>(recognizer_SpeechRecognitionRejected);  \\n  \\n        // Load the grammar object to the recognizer.  \\n        recognizer.LoadGrammarAsync(mediaMenuGrammar);  \\n  \\n        // Keep the console window open.  \\n        Console.ReadLine();  \\n      }  \\n    }  \\n  \\n    // Handle the SpeechRecognitionRejected event.  \\n    static void recognizer_SpeechRecognitionRejected(object sender, SpeechRecognitionRejectedEventArgs e)  \\n    {  \\n      Console.WriteLine(\\\"Speech input was rejected.\\\");  \\n      foreach (RecognizedPhrase phrase in e.Result.Alternates)  \\n      {  \\n        Console.WriteLine(\\\"  Rejected phrase: \\\" + phrase.Text);  \\n        Console.WriteLine(\\\"  Confidence score: \\\" + phrase.Confidence);  \\n      }  \\n    }  \\n  \\n    // Handle the LoadGrammarCompleted event.  \\n    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  \\n    {  \\n      Console.WriteLine(\\\"Grammar loaded: \\\" + e.Grammar.Name);  \\n    }  \\n  \\n    // Handle the SpeechRecognized event.  \\n    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \\n    {  \\n      Console.WriteLine(\\\"Speech recognized: \\\" + e.Result.Text);  \\n    }  \\n  }  \\n}  \\n  \\n```\"\n  syntax:\n    content: 'public class SpeechRecognitionRejectedEventArgs : System.Speech.Recognition.RecognitionEventArgs'\n  inheritance:\n  - System.EventArgs\n  - System.Speech.Recognition.RecognitionEventArgs\n  implements: []\n  inheritedMembers:\n  - System.Speech.Recognition.RecognitionEventArgs.Result\n  platform:\n  - net462\nreferences:\n- uid: System.Speech.Recognition.RecognitionEventArgs\n  isExternal: false\n  name: System.Speech.Recognition.RecognitionEventArgs\n"}