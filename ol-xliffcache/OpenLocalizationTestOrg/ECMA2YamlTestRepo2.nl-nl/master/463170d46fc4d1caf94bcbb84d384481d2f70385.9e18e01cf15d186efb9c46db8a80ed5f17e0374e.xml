{"nodes":[{"pos":[647,701],"content":"Specifies the way to open the X.509 certificate store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the way to open the X.509 certificate store.","pos":[0,54]}]},{"pos":[713,933],"content":"The ReadOnly, ReadWrite, and MaxAllowed flags are mutually exclusive. The OpenExistingOnly flag is the only flag that does not require the <xref:System.Security.Permissions.StorePermissionFlags> permission to be granted.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ReadOnly, ReadWrite, and MaxAllowed flags are mutually exclusive. The OpenExistingOnly flag is the only flag that does not require the <xref:System.Security.Permissions.StorePermissionFlags> permission to be granted.","pos":[0,220],"nodes":[{"content":"The ReadOnly, ReadWrite, and MaxAllowed flags are mutually exclusive.","pos":[0,69]},{"content":"The OpenExistingOnly flag is the only flag that does not require the &lt;xref:System.Security.Permissions.StorePermissionFlags&gt; permission to be granted.","pos":[70,220],"source":" The OpenExistingOnly flag is the only flag that does not require the <xref:System.Security.Permissions.StorePermissionFlags> permission to be granted."}]}]},{"pos":[1994,2061],"content":"Open the X.509 certificate store and include archived certificates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Open the X.509 certificate store and include archived certificates.","pos":[0,67]}]},{"pos":[2200,2212],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2674,2738],"content":"Open the X.509 certificate store for the highest access allowed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Open the X.509 certificate store for the highest access allowed.","pos":[0,64]}]},{"pos":[2872,2884],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3376,3532],"content":"Opens only existing stores; if no store exists, the <xref:System.Security.Cryptography.X509Certificates.X509Store.Open*> method will not create a new store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Opens only existing stores; if no store exists, the &lt;xref:System.Security.Cryptography.X509Certificates.X509Store.Open*&gt; method will not create a new store.","pos":[0,156],"source":"Opens only existing stores; if no store exists, the <xref:System.Security.Cryptography.X509Certificates.X509Store.Open*> method will not create a new store."}]},{"pos":[3672,3684],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4136,4186],"content":"Open the X.509 certificate store for reading only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Open the X.509 certificate store for reading only.","pos":[0,50]}]},{"pos":[4318,4330],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4787,4849],"content":"Open the X.509 certificate store for both reading and writing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Open the X.509 certificate store for both reading and writing.","pos":[0,62]}]},{"pos":[4982,4994],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags\n  id: OpenFlags\n  children:\n  - System.Security.Cryptography.X509Certificates.OpenFlags.IncludeArchived\n  - System.Security.Cryptography.X509Certificates.OpenFlags.MaxAllowed\n  - System.Security.Cryptography.X509Certificates.OpenFlags.OpenExistingOnly\n  - System.Security.Cryptography.X509Certificates.OpenFlags.ReadOnly\n  - System.Security.Cryptography.X509Certificates.OpenFlags.ReadWrite\n  langs:\n  - csharp\n  name: OpenFlags\n  nameWithType: OpenFlags\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags\n  type: Enum\n  summary: Specifies the way to open the X.509 certificate store.\n  remarks: The ReadOnly, ReadWrite, and MaxAllowed flags are mutually exclusive. The OpenExistingOnly flag is the only flag that does not require the <xref:System.Security.Permissions.StorePermissionFlags> permission to be granted.\n  example:\n  - \"The following code example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes you have three certificates to add to and remove from a local store.  \\n  \\n [!code-cs[x509store2#1](~/add/codesnippet/csharp/t-system.security.crypto_22_1.cs)]\\n [!code-cpp[x509store2#1](~/add/codesnippet/cpp/t-system.security.crypto_22_1.cpp)]\\n [!code-vb[x509store2#1](~/add/codesnippet/visualbasic/t-system.security.crypto_22_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      public enum OpenFlags\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags.IncludeArchived\n  id: IncludeArchived\n  parent: System.Security.Cryptography.X509Certificates.OpenFlags\n  langs:\n  - csharp\n  name: IncludeArchived\n  nameWithType: OpenFlags.IncludeArchived\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.IncludeArchived\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Open the X.509 certificate store and include archived certificates.\n  syntax:\n    content: IncludeArchived\n    return:\n      type: System.Security.Cryptography.X509Certificates.OpenFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags.MaxAllowed\n  id: MaxAllowed\n  parent: System.Security.Cryptography.X509Certificates.OpenFlags\n  langs:\n  - csharp\n  name: MaxAllowed\n  nameWithType: OpenFlags.MaxAllowed\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.MaxAllowed\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Open the X.509 certificate store for the highest access allowed.\n  syntax:\n    content: MaxAllowed\n    return:\n      type: System.Security.Cryptography.X509Certificates.OpenFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags.OpenExistingOnly\n  id: OpenExistingOnly\n  parent: System.Security.Cryptography.X509Certificates.OpenFlags\n  langs:\n  - csharp\n  name: OpenExistingOnly\n  nameWithType: OpenFlags.OpenExistingOnly\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.OpenExistingOnly\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Opens only existing stores; if no store exists, the <xref:System.Security.Cryptography.X509Certificates.X509Store.Open*> method will not create a new store.\n  syntax:\n    content: OpenExistingOnly\n    return:\n      type: System.Security.Cryptography.X509Certificates.OpenFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags.ReadOnly\n  id: ReadOnly\n  parent: System.Security.Cryptography.X509Certificates.OpenFlags\n  langs:\n  - csharp\n  name: ReadOnly\n  nameWithType: OpenFlags.ReadOnly\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.ReadOnly\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Open the X.509 certificate store for reading only.\n  syntax:\n    content: ReadOnly\n    return:\n      type: System.Security.Cryptography.X509Certificates.OpenFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags.ReadWrite\n  id: ReadWrite\n  parent: System.Security.Cryptography.X509Certificates.OpenFlags\n  langs:\n  - csharp\n  name: ReadWrite\n  nameWithType: OpenFlags.ReadWrite\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.ReadWrite\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Open the X.509 certificate store for both reading and writing.\n  syntax:\n    content: ReadWrite\n    return:\n      type: System.Security.Cryptography.X509Certificates.OpenFlags\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags.IncludeArchived\n  parent: System.Security.Cryptography.X509Certificates.OpenFlags\n  isExternal: false\n  name: IncludeArchived\n  nameWithType: OpenFlags.IncludeArchived\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.IncludeArchived\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: OpenFlags\n  nameWithType: OpenFlags\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags.MaxAllowed\n  parent: System.Security.Cryptography.X509Certificates.OpenFlags\n  isExternal: false\n  name: MaxAllowed\n  nameWithType: OpenFlags.MaxAllowed\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.MaxAllowed\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags.OpenExistingOnly\n  parent: System.Security.Cryptography.X509Certificates.OpenFlags\n  isExternal: false\n  name: OpenExistingOnly\n  nameWithType: OpenFlags.OpenExistingOnly\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.OpenExistingOnly\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags.ReadOnly\n  parent: System.Security.Cryptography.X509Certificates.OpenFlags\n  isExternal: false\n  name: ReadOnly\n  nameWithType: OpenFlags.ReadOnly\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.ReadOnly\n- uid: System.Security.Cryptography.X509Certificates.OpenFlags.ReadWrite\n  parent: System.Security.Cryptography.X509Certificates.OpenFlags\n  isExternal: false\n  name: ReadWrite\n  nameWithType: OpenFlags.ReadWrite\n  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.ReadWrite\n"}