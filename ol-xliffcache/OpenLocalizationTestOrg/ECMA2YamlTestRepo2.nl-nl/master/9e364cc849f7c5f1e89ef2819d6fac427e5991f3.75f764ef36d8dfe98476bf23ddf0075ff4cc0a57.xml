{"nodes":[{"pos":[878,890],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3560,3572],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4440,4452],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5168,5180],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5813,5825],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6460,6472],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Expressions.VariableValue`1\n  id: VariableValue`1\n  children:\n  - System.Activities.Expressions.VariableValue`1.#ctor\n  - System.Activities.Expressions.VariableValue`1.#ctor(System.Activities.Variable)\n  - System.Activities.Expressions.VariableValue`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.Expressions.VariableValue`1.LocationReference\n  - System.Activities.Expressions.VariableValue`1.ToString\n  - System.Activities.Expressions.VariableValue`1.Variable\n  langs:\n  - csharp\n  name: VariableValue<T>\n  nameWithType: VariableValue<T>\n  fullName: System.Activities.Expressions.VariableValue<T>\n  type: Class\n  syntax:\n    content: 'public sealed class VariableValue<T> : System.Activities.Expressions.EnvironmentLocationValue<T>'\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.CodeActivity`1\n  - System.Activities.Expressions.EnvironmentLocationValue`1\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(`0)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.CodeActivity`1.Implementation\n  - System.Activities.CodeActivity`1.ImplementationVersion\n  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.Expressions.EnvironmentLocationValue`1.Execute(System.Activities.CodeActivityContext)\n  platform:\n  - net462\n- uid: System.Activities.Expressions.VariableValue`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.Expressions.VariableValue`1\n  langs:\n  - csharp\n  name: VariableValue()\n  nameWithType: VariableValue<T>.VariableValue()\n  fullName: System.Activities.Expressions.VariableValue<T>.VariableValue()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public VariableValue ();\n    parameters: []\n  overload: System.Activities.Expressions.VariableValue`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.VariableValue`1.#ctor(System.Activities.Variable)\n  id: '#ctor(System.Activities.Variable)'\n  parent: System.Activities.Expressions.VariableValue`1\n  langs:\n  - csharp\n  name: VariableValue(Variable)\n  nameWithType: VariableValue<T>.VariableValue(Variable)\n  fullName: System.Activities.Expressions.VariableValue<T>.VariableValue(Variable)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public VariableValue (System.Activities.Variable variable);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable\n      description: To be added.\n  overload: System.Activities.Expressions.VariableValue`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.VariableValue`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.VariableValue`1\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: VariableValue<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.VariableValue<T>.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Expressions.VariableValue`1.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.VariableValue`1.LocationReference\n  id: LocationReference\n  parent: System.Activities.Expressions.VariableValue`1\n  langs:\n  - csharp\n  name: LocationReference\n  nameWithType: VariableValue<T>.LocationReference\n  fullName: System.Activities.Expressions.VariableValue<T>.LocationReference\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public override System.Activities.LocationReference LocationReference { get; }\n    return:\n      type: System.Activities.LocationReference\n      description: To be added.\n  overload: System.Activities.Expressions.VariableValue`1.LocationReference*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.VariableValue`1.ToString\n  id: ToString\n  parent: System.Activities.Expressions.VariableValue`1\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: VariableValue<T>.ToString()\n  fullName: System.Activities.Expressions.VariableValue<T>.ToString()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Activities.Expressions.VariableValue`1.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.VariableValue`1.Variable\n  id: Variable\n  parent: System.Activities.Expressions.VariableValue`1\n  langs:\n  - csharp\n  name: Variable\n  nameWithType: VariableValue<T>.Variable\n  fullName: System.Activities.Expressions.VariableValue<T>.Variable\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.Variable Variable { get; set; }\n    return:\n      type: System.Activities.Variable\n      description: To be added.\n  overload: System.Activities.Expressions.VariableValue`1.Variable*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.Expressions.EnvironmentLocationValue`1\n  isExternal: false\n  name: System.Activities.Expressions.EnvironmentLocationValue<T>\n- uid: System.Activities.Expressions.VariableValue`1.#ctor\n  parent: System.Activities.Expressions.VariableValue`1\n  isExternal: false\n  name: VariableValue()\n  nameWithType: VariableValue<T>.VariableValue()\n  fullName: System.Activities.Expressions.VariableValue<T>.VariableValue()\n- uid: System.Activities.Expressions.VariableValue`1.#ctor(System.Activities.Variable)\n  parent: System.Activities.Expressions.VariableValue`1\n  isExternal: false\n  name: VariableValue(Variable)\n  nameWithType: VariableValue<T>.VariableValue(Variable)\n  fullName: System.Activities.Expressions.VariableValue<T>.VariableValue(Variable)\n- uid: System.Activities.Variable\n  parent: System.Activities\n  isExternal: false\n  name: Variable\n  nameWithType: Variable\n  fullName: System.Activities.Variable\n- uid: System.Activities.Expressions.VariableValue`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.VariableValue`1\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: VariableValue<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.VariableValue<T>.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.Expressions.VariableValue`1.LocationReference\n  parent: System.Activities.Expressions.VariableValue`1\n  isExternal: false\n  name: LocationReference\n  nameWithType: VariableValue<T>.LocationReference\n  fullName: System.Activities.Expressions.VariableValue<T>.LocationReference\n- uid: System.Activities.LocationReference\n  parent: System.Activities\n  isExternal: false\n  name: LocationReference\n  nameWithType: LocationReference\n  fullName: System.Activities.LocationReference\n- uid: System.Activities.Expressions.VariableValue`1.ToString\n  parent: System.Activities.Expressions.VariableValue`1\n  isExternal: false\n  name: ToString()\n  nameWithType: VariableValue<T>.ToString()\n  fullName: System.Activities.Expressions.VariableValue<T>.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Expressions.VariableValue`1.Variable\n  parent: System.Activities.Expressions.VariableValue`1\n  isExternal: false\n  name: Variable\n  nameWithType: VariableValue<T>.Variable\n  fullName: System.Activities.Expressions.VariableValue<T>.Variable\n- uid: System.Activities.Expressions.VariableValue`1.#ctor*\n  parent: System.Activities.Expressions.VariableValue`1\n  isExternal: false\n  name: VariableValue<T>\n  nameWithType: VariableValue<T>.VariableValue<T>\n- uid: System.Activities.Expressions.VariableValue`1.CacheMetadata*\n  parent: System.Activities.Expressions.VariableValue`1\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: VariableValue<T>.CacheMetadata\n- uid: System.Activities.Expressions.VariableValue`1.LocationReference*\n  parent: System.Activities.Expressions.VariableValue`1\n  isExternal: false\n  name: LocationReference\n  nameWithType: VariableValue<T>.LocationReference\n- uid: System.Activities.Expressions.VariableValue`1.ToString*\n  parent: System.Activities.Expressions.VariableValue`1\n  isExternal: false\n  name: ToString\n  nameWithType: VariableValue<T>.ToString\n- uid: System.Activities.Expressions.VariableValue`1.Variable*\n  parent: System.Activities.Expressions.VariableValue`1\n  isExternal: false\n  name: Variable\n  nameWithType: VariableValue<T>.Variable\n"}