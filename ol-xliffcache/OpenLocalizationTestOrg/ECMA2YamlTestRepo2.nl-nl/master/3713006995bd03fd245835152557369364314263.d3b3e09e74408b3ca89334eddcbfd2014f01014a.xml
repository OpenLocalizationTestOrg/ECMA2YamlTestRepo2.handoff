{"nodes":[{"pos":[606,661],"content":"Allows custom logic for the commitment of work batches.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows custom logic for the commitment of work batches.","pos":[0,55]}]},{"pos":[674,2008],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       When a work batch is committed the runtime calls into the WorkflowCommitWorkBatchService and gives it a delegate to call to do the actual committing of the work batch. The runtime still has the primary responsibility of committing the work batch but allows the WorkflowCommitWorkBatchService to insert itself in the process for customization around the commit process.       This process allows custom error handling logic. If the WorkflowCommitWorkBatchService owns the transaction, which is the case when the <xref:System.Transactions.Transaction.Current%2A?displayProperty=fullName> property returns `null` therefore necessitating the need to create a new ambient transaction, it is allowed to call the delegate more than once, creating a new transaction for each call. The most common case for this for example is to handle intermittent network problems or SQL cluster failovers. If the call to the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback> throws an exception WorkflowCommitWorkBatchService can catch this exception, start a new transaction and call the delegate again. This gives a level of resilience to workflow instance execution that otherwise would cause workflows to terminate.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       When a work batch is committed the runtime calls into the WorkflowCommitWorkBatchService and gives it a delegate to call to do the actual committing of the work batch.","pos":[0,255],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       When a work batch is committed the runtime calls into the WorkflowCommitWorkBatchService and gives it a delegate to call to do the actual committing of the work batch."},{"content":"The runtime still has the primary responsibility of committing the work batch but allows the WorkflowCommitWorkBatchService to insert itself in the process for customization around the commit process.","pos":[256,456]},{"content":"This process allows custom error handling logic.","pos":[463,511]},{"content":"If the WorkflowCommitWorkBatchService owns the transaction, which is the case when the &lt;xref:System.Transactions.Transaction.Current%2A?displayProperty=fullName&gt; property returns <ph id=\"ph1\">`null`</ph> therefore necessitating the need to create a new ambient transaction, it is allowed to call the delegate more than once, creating a new transaction for each call.","pos":[512,860],"source":" If the WorkflowCommitWorkBatchService owns the transaction, which is the case when the <xref:System.Transactions.Transaction.Current%2A?displayProperty=fullName> property returns `null` therefore necessitating the need to create a new ambient transaction, it is allowed to call the delegate more than once, creating a new transaction for each call."},{"content":"The most common case for this for example is to handle intermittent network problems or SQL cluster failovers.","pos":[861,971]},{"content":"If the call to the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback&gt; throws an exception WorkflowCommitWorkBatchService can catch this exception, start a new transaction and call the delegate again.","pos":[972,1214],"source":" If the call to the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback> throws an exception WorkflowCommitWorkBatchService can catch this exception, start a new transaction and call the delegate again."},{"content":"This gives a level of resilience to workflow instance execution that otherwise would cause workflows to terminate.","pos":[1215,1329]}]},{"pos":[3772,3933],"content":"When implemented in a derived class, initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"When implemented in a derived class, initializes a new instance of the <xref href=\"System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\"></xref> class."},{"pos":[5312,5324],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\n  id: WorkflowCommitWorkBatchService\n  children:\n  - System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.#ctor\n  - System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch(System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback)\n  langs:\n  - csharp\n  name: WorkflowCommitWorkBatchService\n  nameWithType: WorkflowCommitWorkBatchService\n  fullName: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\n  type: Class\n  summary: Allows custom logic for the commitment of work batches.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n When a work batch is committed the runtime calls into the WorkflowCommitWorkBatchService and gives it a delegate to call to do the actual committing of the work batch. The runtime still has the primary responsibility of committing the work batch but allows the WorkflowCommitWorkBatchService to insert itself in the process for customization around the commit process.  \\n  \\n This process allows custom error handling logic. If the WorkflowCommitWorkBatchService owns the transaction, which is the case when the <xref:System.Transactions.Transaction.Current%2A?displayProperty=fullName> property returns `null` therefore necessitating the need to create a new ambient transaction, it is allowed to call the delegate more than once, creating a new transaction for each call. The most common case for this for example is to handle intermittent network problems or SQL cluster failovers. If the call to the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback> throws an exception WorkflowCommitWorkBatchService can catch this exception, start a new transaction and call the delegate again. This gives a level of resilience to workflow instance execution that otherwise would cause workflows to terminate.\"\n  example:\n  - \"The following example demonstrates a class that inherits from WorkflowCommitWorkBatchService.  \\n  \\n [!code-cs[WF_Samples#0](~/add/codesnippet/csharp/wf_snippets/snippets.cs#0)]\\n [!code-vb[WF_Samples#0](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#0)]\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      public abstract class WorkflowCommitWorkBatchService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  inheritance:\n  - System.Object\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  implements: []\n  inheritedMembers:\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\n  langs:\n  - csharp\n  name: WorkflowCommitWorkBatchService()\n  nameWithType: WorkflowCommitWorkBatchService.WorkflowCommitWorkBatchService()\n  fullName: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.WorkflowCommitWorkBatchService()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: When implemented in a derived class, initializes a new instance of the <xref href=\"System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\"></xref> class.\n  syntax:\n    content: protected WorkflowCommitWorkBatchService ();\n    parameters: []\n  overload: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch(System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback)\n  id: CommitWorkBatch(System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback)\n  parent: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\n  langs:\n  - csharp\n  name: CommitWorkBatch(WorkflowCommitWorkBatchService+CommitWorkBatchCallback)\n  nameWithType: WorkflowCommitWorkBatchService.CommitWorkBatch(WorkflowCommitWorkBatchService+CommitWorkBatchCallback)\n  fullName: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch(WorkflowCommitWorkBatchService+CommitWorkBatchCallback)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  syntax:\n    content: protected virtual void CommitWorkBatch (System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback commitWorkBatchCallback);\n    parameters:\n    - id: commitWorkBatchCallback\n      type: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback\n      description: To be added.\n  overload: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  isExternal: false\n  name: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.#ctor\n  parent: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\n  isExternal: false\n  name: WorkflowCommitWorkBatchService()\n  nameWithType: WorkflowCommitWorkBatchService.WorkflowCommitWorkBatchService()\n  fullName: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.WorkflowCommitWorkBatchService()\n- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch(System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback)\n  parent: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\n  isExternal: false\n  name: CommitWorkBatch(WorkflowCommitWorkBatchService+CommitWorkBatchCallback)\n  nameWithType: WorkflowCommitWorkBatchService.CommitWorkBatch(WorkflowCommitWorkBatchService+CommitWorkBatchCallback)\n  fullName: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch(WorkflowCommitWorkBatchService+CommitWorkBatchCallback)\n- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback\n  parent: System.Workflow.Runtime.Hosting\n  isExternal: false\n  name: WorkflowCommitWorkBatchService+CommitWorkBatchCallback\n  nameWithType: WorkflowCommitWorkBatchService+CommitWorkBatchCallback\n  fullName: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService+CommitWorkBatchCallback\n- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.#ctor*\n  parent: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\n  isExternal: false\n  name: WorkflowCommitWorkBatchService\n  nameWithType: WorkflowCommitWorkBatchService.WorkflowCommitWorkBatchService\n- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch*\n  parent: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\n  isExternal: false\n  name: CommitWorkBatch\n  nameWithType: WorkflowCommitWorkBatchService.CommitWorkBatch\n"}