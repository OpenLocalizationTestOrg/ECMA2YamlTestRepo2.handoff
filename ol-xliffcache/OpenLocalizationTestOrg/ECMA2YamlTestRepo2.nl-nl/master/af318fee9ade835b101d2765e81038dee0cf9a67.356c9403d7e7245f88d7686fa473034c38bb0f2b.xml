{"nodes":[{"pos":[753,821],"content":"Represents a set of proposed changes to a running workflow instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a set of proposed changes to a running workflow instance.","pos":[0,68]}]},{"pos":[834,1404],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       All proposed changes to a running workflow instance must be made using a WorkflowChanges object.       When a WorkflowChanges object is constructed in application code (outside the workflow instance), the <xref:System.Workflow.ComponentModel.Activity> object that is passed to the constructor must be the object that is returned by the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition%2A> method of the <xref:System.Workflow.Runtime.WorkflowInstance> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       All proposed changes to a running workflow instance must be made using a WorkflowChanges object.","pos":[0,184],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       All proposed changes to a running workflow instance must be made using a WorkflowChanges object."},{"content":"When a WorkflowChanges object is constructed in application code (outside the workflow instance), the &lt;xref:System.Workflow.ComponentModel.Activity&gt; object that is passed to the constructor must be the object that is returned by the &lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition%2A&gt; method of the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; class.","pos":[191,565],"source":"       When a WorkflowChanges object is constructed in application code (outside the workflow instance), the <xref:System.Workflow.ComponentModel.Activity> object that is passed to the constructor must be the object that is returned by the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition%2A> method of the <xref:System.Workflow.Runtime.WorkflowInstance> class."}]},{"pos":[2705,2813],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"></xref> class."},{"pos":[3026,3112],"content":"The root <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the workflow.","needQuote":true,"needEscape":true,"source":"The root <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> of the workflow."},{"pos":[3295,3423],"content":"<ph id=\"ph1\">&lt;code&gt;rootActivity&lt;/code&gt;</ph> is a null reference (Visual Basic <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>).","needQuote":true,"needEscape":true,"source":"<code>rootActivity</code> is a null reference (Visual Basic <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>)."},{"pos":[3518,3623],"content":"<ph id=\"ph1\">&lt;code&gt;rootActivity&lt;/code&gt;</ph> is not a <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.CompositeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>rootActivity</code> is not a <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref>."},{"pos":[3734,3778],"content":"<ph id=\"ph1\">&lt;code&gt;rootActivity&lt;/code&gt;</ph> is in design mode.","needQuote":true,"needEscape":true,"source":"<code>rootActivity</code> is in design mode."},{"pos":[4246,4374],"content":"Specifies the condition that must be satisfied to apply the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Specifies the condition that must be satisfied to apply the <xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"></xref>."},{"pos":[4387,4827],"content":"This property can be set on a root activity to disallow dynamic updates to the running workflow.       When the property is set on the root activity, and condition evaluates to `false`, the dynamic updates are disallowed on the workflow instance. If the condition evaluates to `true`, or the condition is not set, the dynamic updates are allowed.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property can be set on a root activity to disallow dynamic updates to the running workflow.","pos":[0,96]},{"content":"When the property is set on the root activity, and condition evaluates to <ph id=\"ph1\">`false`</ph>, the dynamic updates are disallowed on the workflow instance.","pos":[103,246],"source":"       When the property is set on the root activity, and condition evaluates to `false`, the dynamic updates are disallowed on the workflow instance."},{"content":"If the condition evaluates to <ph id=\"ph1\">`true`</ph>, or the condition is not set, the dynamic updates are allowed.","pos":[247,346],"source":" If the condition evaluates to `true`, or the condition is not set, the dynamic updates are allowed."}]},{"pos":[5037,5049],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5564,5615],"content":"Gets the condition property on a dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the condition property on a dependency object.","pos":[0,51]}]},{"pos":[5628,6003],"content":"The <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty> is an attached dependency property, that is, it is declared and used by one type and set on another. Therefore, there must be static `get` and `set` methods on the type declaring the property.       Helper method for getting <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty&gt; is an attached dependency property, that is, it is declared and used by one type and set on another.","pos":[0,176],"source":"The <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty> is an attached dependency property, that is, it is declared and used by one type and set on another."},{"content":"Therefore, there must be static <ph id=\"ph1\">`get`</ph> and <ph id=\"ph2\">`set`</ph> methods on the type declaring the property.","pos":[177,268],"source":" Therefore, there must be static `get` and `set` methods on the type declaring the property."},{"content":"Helper method for getting &lt;xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty&gt;.","pos":[275,373],"source":"       Helper method for getting <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty>."}]},{"pos":[6177,6481],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> (or derived type) that contains a condition property, such as the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and <bpt id=\"p3\">&lt;xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> activities.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Workflow.ComponentModel.DependencyObject\"></xref> (or derived type) that contains a condition property, such as the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"></xref> and <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref> activities."},{"pos":[6539,6644],"content":"A condition property type, such as <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A condition property type, such as <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref>."},{"pos":[6834,6957],"content":"<ph id=\"ph1\">&lt;code&gt;dependencyObject&lt;/code&gt;</ph> is null (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>dependencyObject</code> is null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[7052,7257],"content":"<ph id=\"ph1\">&lt;code&gt;dependencyObject&lt;/code&gt;</ph> is not a <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or a type that derives from <bpt id=\"p2\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyObject\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>dependencyObject</code> is not a <xref href=\"System.Workflow.ComponentModel.DependencyObject\"></xref> or a type that derives from <xref href=\"System.Workflow.ComponentModel.DependencyObject\"></xref>."},{"pos":[7804,7855],"content":"Sets the condition property on a dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the condition property on a dependency object.","pos":[0,51]}]},{"pos":[7868,8243],"content":"The <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty> is an attached dependency property, that is, it is declared and used by one type and set on another. Therefore, there must be static `get` and `set` methods on the type declaring the property.       Helper method for setting <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty&gt; is an attached dependency property, that is, it is declared and used by one type and set on another.","pos":[0,176],"source":"The <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty> is an attached dependency property, that is, it is declared and used by one type and set on another."},{"content":"Therefore, there must be static <ph id=\"ph1\">`get`</ph> and <ph id=\"ph2\">`set`</ph> methods on the type declaring the property.","pos":[177,268],"source":" Therefore, there must be static `get` and `set` methods on the type declaring the property."},{"content":"Helper method for setting &lt;xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty&gt;.","pos":[275,373],"source":"       Helper method for setting <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty>."}]},{"pos":[8429,8733],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> (or derived type) that contains a condition property, such as the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and <bpt id=\"p3\">&lt;xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> activities.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Workflow.ComponentModel.DependencyObject\"></xref> (or derived type) that contains a condition property, such as the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"></xref> and <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref> activities."},{"pos":[8795,8928],"content":"The condition type to set on the dependency object, such as an <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The condition type to set on the dependency object, such as an <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref>."},{"pos":[9489,9599],"content":"Returns a cloned activity tree to which changes can be made and then applied to the running workflow instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a cloned activity tree to which changes can be made and then applied to the running workflow instance.","pos":[0,110]}]},{"pos":[10281,10409],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.CompositeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the cloned root activity for the workflow.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> that contains the cloned root activity for the workflow."},{"pos":[10934,11122],"content":"Validates the current set of proposed changes that have been made to the activity tree represented by the <xref:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates the current set of proposed changes that have been made to the activity tree represented by the &lt;xref:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow*&gt; property.","pos":[0,188],"source":"Validates the current set of proposed changes that have been made to the activity tree represented by the <xref:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow*> property."}]},{"pos":[11360,11525],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.Compiler.ValidationErrorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains any errors or warnings that occurred during validation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Workflow.ComponentModel.Compiler.ValidationErrorCollection\"></xref> object that contains any errors or warnings that occurred during validation."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.ComponentModel.WorkflowChanges\n  id: WorkflowChanges\n  children:\n  - System.Workflow.ComponentModel.WorkflowChanges.#ctor(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty\n  - System.Workflow.ComponentModel.WorkflowChanges.GetCondition(System.Object)\n  - System.Workflow.ComponentModel.WorkflowChanges.SetCondition(System.Object,System.Object)\n  - System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow\n  - System.Workflow.ComponentModel.WorkflowChanges.Validate\n  langs:\n  - csharp\n  name: WorkflowChanges\n  nameWithType: WorkflowChanges\n  fullName: System.Workflow.ComponentModel.WorkflowChanges\n  type: Class\n  summary: Represents a set of proposed changes to a running workflow instance.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n All proposed changes to a running workflow instance must be made using a WorkflowChanges object.  \\n  \\n When a WorkflowChanges object is constructed in application code (outside the workflow instance), the <xref:System.Workflow.ComponentModel.Activity> object that is passed to the constructor must be the object that is returned by the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition%2A> method of the <xref:System.Workflow.Runtime.WorkflowInstance> class.\"\n  example:\n  - \"The following example demonstrates creating a new instance of a WorkflowChanges object. This example is from the Ordering State Machine SDK sample. For more information, see [Ordering State Machine Sample](http://msdn.microsoft.com/en-us/59272cf4-bc98-439c-bcfa-b66999ebce5c).  \\n  \\n [!code-cs[WF_Samples#87](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#87)]\\n [!code-vb[WF_Samples#87](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#87)]\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      public sealed class WorkflowChanges\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.WorkflowChanges.#ctor(System.Workflow.ComponentModel.Activity)\n  id: '#ctor(System.Workflow.ComponentModel.Activity)'\n  parent: System.Workflow.ComponentModel.WorkflowChanges\n  langs:\n  - csharp\n  name: WorkflowChanges(Activity)\n  nameWithType: WorkflowChanges.WorkflowChanges(Activity)\n  fullName: System.Workflow.ComponentModel.WorkflowChanges.WorkflowChanges(Activity)\n  type: Constructor\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"></xref> class.\n  syntax:\n    content: public WorkflowChanges (System.Workflow.ComponentModel.Activity rootActivity);\n    parameters:\n    - id: rootActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: The root <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> of the workflow.\n  overload: System.Workflow.ComponentModel.WorkflowChanges.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>rootActivity</code> is a null reference (Visual Basic <xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref>).\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>rootActivity</code> is not a <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>rootActivity</code> is in design mode.\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty\n  id: ConditionProperty\n  parent: System.Workflow.ComponentModel.WorkflowChanges\n  langs:\n  - csharp\n  name: ConditionProperty\n  nameWithType: WorkflowChanges.ConditionProperty\n  fullName: System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty\n  type: Field\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Specifies the condition that must be satisfied to apply the <xref href=\"System.Workflow.ComponentModel.WorkflowChanges\"></xref>.\n  remarks: \"This property can be set on a root activity to disallow dynamic updates to the running workflow.  \\n  \\n When the property is set on the root activity, and condition evaluates to `false`, the dynamic updates are disallowed on the workflow instance. If the condition evaluates to `true`, or the condition is not set, the dynamic updates are allowed.  \\n  \\n [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]\"\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ConditionProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.WorkflowChanges.GetCondition(System.Object)\n  id: GetCondition(System.Object)\n  parent: System.Workflow.ComponentModel.WorkflowChanges\n  langs:\n  - csharp\n  name: GetCondition(Object)\n  nameWithType: WorkflowChanges.GetCondition(Object)\n  fullName: System.Workflow.ComponentModel.WorkflowChanges.GetCondition(Object)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets the condition property on a dependency object.\n  remarks: \"The <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty> is an attached dependency property, that is, it is declared and used by one type and set on another. Therefore, there must be static `get` and `set` methods on the type declaring the property.  \\n  \\n Helper method for getting <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty>.\"\n  syntax:\n    content: public static object GetCondition (object dependencyObject);\n    parameters:\n    - id: dependencyObject\n      type: System.Object\n      description: A <xref href=\"System.Workflow.ComponentModel.DependencyObject\"></xref> (or derived type) that contains a condition property, such as the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"></xref> and <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref> activities.\n    return:\n      type: System.Object\n      description: A condition property type, such as <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref>.\n  overload: System.Workflow.ComponentModel.WorkflowChanges.GetCondition*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>dependencyObject</code> is null (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>dependencyObject</code> is not a <xref href=\"System.Workflow.ComponentModel.DependencyObject\"></xref> or a type that derives from <xref href=\"System.Workflow.ComponentModel.DependencyObject\"></xref>.\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.WorkflowChanges.SetCondition(System.Object,System.Object)\n  id: SetCondition(System.Object,System.Object)\n  parent: System.Workflow.ComponentModel.WorkflowChanges\n  langs:\n  - csharp\n  name: SetCondition(Object,Object)\n  nameWithType: WorkflowChanges.SetCondition(Object,Object)\n  fullName: System.Workflow.ComponentModel.WorkflowChanges.SetCondition(Object,Object)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Sets the condition property on a dependency object.\n  remarks: \"The <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty> is an attached dependency property, that is, it is declared and used by one type and set on another. Therefore, there must be static `get` and `set` methods on the type declaring the property.  \\n  \\n Helper method for setting <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty>.\"\n  syntax:\n    content: public static void SetCondition (object dependencyObject, object value);\n    parameters:\n    - id: dependencyObject\n      type: System.Object\n      description: A <xref href=\"System.Workflow.ComponentModel.DependencyObject\"></xref> (or derived type) that contains a condition property, such as the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"></xref> and <xref href=\"System.Workflow.Activities.StateMachineWorkflowActivity\"></xref> activities.\n    - id: value\n      type: System.Object\n      description: The condition type to set on the dependency object, such as an <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref>.\n  overload: System.Workflow.ComponentModel.WorkflowChanges.SetCondition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow\n  id: TransientWorkflow\n  parent: System.Workflow.ComponentModel.WorkflowChanges\n  langs:\n  - csharp\n  name: TransientWorkflow\n  nameWithType: WorkflowChanges.TransientWorkflow\n  fullName: System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Returns a cloned activity tree to which changes can be made and then applied to the running workflow instance.\n  remarks: ''\n  example:\n  - \"The following example demonstrates adding activities to the TransientWorkflow property. This example is from the Ordering State Machine SDK sample. For more information, see [Ordering State Machine Sample](http://msdn.microsoft.com/en-us/59272cf4-bc98-439c-bcfa-b66999ebce5c).  \\n  \\n [!code-cs[WF_Samples#88](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#88)]\\n [!code-vb[WF_Samples#88](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#88)]\"\n  syntax:\n    content: public System.Workflow.ComponentModel.CompositeActivity TransientWorkflow { get; }\n    return:\n      type: System.Workflow.ComponentModel.CompositeActivity\n      description: A <xref href=\"System.Workflow.ComponentModel.CompositeActivity\"></xref> that contains the cloned root activity for the workflow.\n  overload: System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.ComponentModel.WorkflowChanges.Validate\n  id: Validate\n  parent: System.Workflow.ComponentModel.WorkflowChanges\n  langs:\n  - csharp\n  name: Validate()\n  nameWithType: WorkflowChanges.Validate()\n  fullName: System.Workflow.ComponentModel.WorkflowChanges.Validate()\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Validates the current set of proposed changes that have been made to the activity tree represented by the <xref:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow*> property.\n  syntax:\n    content: public System.Workflow.ComponentModel.Compiler.ValidationErrorCollection Validate ();\n    parameters: []\n    return:\n      type: System.Workflow.ComponentModel.Compiler.ValidationErrorCollection\n      description: A <xref href=\"System.Workflow.ComponentModel.Compiler.ValidationErrorCollection\"></xref> object that contains any errors or warnings that occurred during validation.\n  overload: System.Workflow.ComponentModel.WorkflowChanges.Validate*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Workflow.ComponentModel.WorkflowChanges.#ctor(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.WorkflowChanges\n  isExternal: false\n  name: WorkflowChanges(Activity)\n  nameWithType: WorkflowChanges.WorkflowChanges(Activity)\n  fullName: System.Workflow.ComponentModel.WorkflowChanges.WorkflowChanges(Activity)\n- uid: System.Workflow.ComponentModel.Activity\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Workflow.ComponentModel.Activity\n- uid: System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty\n  parent: System.Workflow.ComponentModel.WorkflowChanges\n  isExternal: false\n  name: ConditionProperty\n  nameWithType: WorkflowChanges.ConditionProperty\n  fullName: System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty\n- uid: System.Workflow.ComponentModel.DependencyProperty\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Workflow.ComponentModel.DependencyProperty\n- uid: System.Workflow.ComponentModel.WorkflowChanges.GetCondition(System.Object)\n  parent: System.Workflow.ComponentModel.WorkflowChanges\n  isExternal: false\n  name: GetCondition(Object)\n  nameWithType: WorkflowChanges.GetCondition(Object)\n  fullName: System.Workflow.ComponentModel.WorkflowChanges.GetCondition(Object)\n- uid: System.Workflow.ComponentModel.WorkflowChanges.SetCondition(System.Object,System.Object)\n  parent: System.Workflow.ComponentModel.WorkflowChanges\n  isExternal: false\n  name: SetCondition(Object,Object)\n  nameWithType: WorkflowChanges.SetCondition(Object,Object)\n  fullName: System.Workflow.ComponentModel.WorkflowChanges.SetCondition(Object,Object)\n- uid: System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow\n  parent: System.Workflow.ComponentModel.WorkflowChanges\n  isExternal: false\n  name: TransientWorkflow\n  nameWithType: WorkflowChanges.TransientWorkflow\n  fullName: System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow\n- uid: System.Workflow.ComponentModel.CompositeActivity\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: CompositeActivity\n  nameWithType: CompositeActivity\n  fullName: System.Workflow.ComponentModel.CompositeActivity\n- uid: System.Workflow.ComponentModel.WorkflowChanges.Validate\n  parent: System.Workflow.ComponentModel.WorkflowChanges\n  isExternal: false\n  name: Validate()\n  nameWithType: WorkflowChanges.Validate()\n  fullName: System.Workflow.ComponentModel.WorkflowChanges.Validate()\n- uid: System.Workflow.ComponentModel.Compiler.ValidationErrorCollection\n  parent: System.Workflow.ComponentModel.Compiler\n  isExternal: false\n  name: ValidationErrorCollection\n  nameWithType: ValidationErrorCollection\n  fullName: System.Workflow.ComponentModel.Compiler.ValidationErrorCollection\n- uid: System.Workflow.ComponentModel.WorkflowChanges.#ctor*\n  parent: System.Workflow.ComponentModel.WorkflowChanges\n  isExternal: false\n  name: WorkflowChanges\n  nameWithType: WorkflowChanges.WorkflowChanges\n- uid: System.Workflow.ComponentModel.WorkflowChanges.GetCondition*\n  parent: System.Workflow.ComponentModel.WorkflowChanges\n  isExternal: false\n  name: GetCondition\n  nameWithType: WorkflowChanges.GetCondition\n- uid: System.Workflow.ComponentModel.WorkflowChanges.SetCondition*\n  parent: System.Workflow.ComponentModel.WorkflowChanges\n  isExternal: false\n  name: SetCondition\n  nameWithType: WorkflowChanges.SetCondition\n- uid: System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow*\n  parent: System.Workflow.ComponentModel.WorkflowChanges\n  isExternal: false\n  name: TransientWorkflow\n  nameWithType: WorkflowChanges.TransientWorkflow\n- uid: System.Workflow.ComponentModel.WorkflowChanges.Validate*\n  parent: System.Workflow.ComponentModel.WorkflowChanges\n  isExternal: false\n  name: Validate\n  nameWithType: WorkflowChanges.Validate\n"}