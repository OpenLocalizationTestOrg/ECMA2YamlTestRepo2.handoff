{"nodes":[{"pos":[929,1022],"content":"Provides a permission structure that allows methods or classes to access configuration files.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a permission structure that allows methods or classes to access configuration files.","pos":[0,93]}]},{"pos":[1034,1399],"content":"The ConfigurationPermission class provides a permission structure that allows methods or classes to access configuration files. Also, ConfigurationPermission provides ways to resolve multiple permissions values through such methods as <xref:System.Configuration.ConfigurationPermission.Union%2A> and <xref:System.Configuration.ConfigurationPermission.Intersect%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ConfigurationPermission class provides a permission structure that allows methods or classes to access configuration files. Also, ConfigurationPermission provides ways to resolve multiple permissions values through such methods as <xref:System.Configuration.ConfigurationPermission.Union%2A> and <xref:System.Configuration.ConfigurationPermission.Intersect%2A>.","pos":[0,365],"nodes":[{"content":"The ConfigurationPermission class provides a permission structure that allows methods or classes to access configuration files.","pos":[0,127]},{"content":"Also, ConfigurationPermission provides ways to resolve multiple permissions values through such methods as &lt;xref:System.Configuration.ConfigurationPermission.Union%2A&gt; and &lt;xref:System.Configuration.ConfigurationPermission.Intersect%2A&gt;.","pos":[128,365],"source":" Also, ConfigurationPermission provides ways to resolve multiple permissions values through such methods as <xref:System.Configuration.ConfigurationPermission.Union%2A> and <xref:System.Configuration.ConfigurationPermission.Intersect%2A>."}]}]},{"pos":[2892,2998],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.ConfigurationPermission\"></xref> class."},{"pos":[3213,3243],"content":"The permission level to grant.","needQuote":true,"needEscape":true,"nodes":[{"content":"The permission level to grant.","pos":[0,30]}]},{"pos":[3416,3593],"content":"The value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">state</ph><ept id=\"p1\">&lt;/code&gt;</ept> is neither <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> nor <bpt id=\"p3\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value of <code>state</code> is neither <xref href=\"System.Security.Permissions.PermissionState\"></xref> nor <xref href=\"System.Security.Permissions.PermissionState\"></xref>."},{"pos":[3985,4103],"content":"Returns a new <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the same permission level.","needQuote":true,"needEscape":true,"source":"Returns a new <xref href=\"System.Configuration.ConfigurationPermission\"></xref> object with the same permission level."},{"pos":[4270,4373],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the same permission level.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Configuration.ConfigurationPermission\"></xref> with the same permission level."},{"pos":[4971,5020],"content":"Reads the value of the permission state from XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads the value of the permission state from XML.","pos":[0,49]}]},{"pos":[5229,5295],"content":"The configuration element from which the permission state is read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configuration element from which the permission state is read.","pos":[0,66]}]},{"pos":[5478,5571],"content":"<ph id=\"ph1\">&lt;code&gt;securityElement&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>securityElement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5666,5939],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_unrestricted\" name=\"unrestricted\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attribute for the given <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">securityElement</ph><ept id=\"p2\">&lt;/code&gt;</ept> is neither <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> nor <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_unrestricted\" name=\"unrestricted\" href=\"\"></xref> attribute for the given <code>securityElement</code> is neither <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> nor <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6447,6663],"content":"Returns the logical intersection between the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and a given object that implements the <bpt id=\"p2\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"Returns the logical intersection between the <xref href=\"System.Configuration.ConfigurationPermission\"></xref> object and a given object that implements the <xref href=\"System.Security.IPermission\"></xref> interface."},{"pos":[6675,7048],"content":"Although the method signature accepts any object that implements the &lt;xref:System.Security.IPermission&gt; interface, an &lt;xref:System.ArgumentException&gt; exception will be thrown if calling the &lt;xref:System.Object.GetType%2A&gt; method on the object referenced by the <ph id=\"ph1\">`target`</ph> parameter does not return &lt;xref:System.Configuration.ConfigurationPermission?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Although the method signature accepts any object that implements the <xref:System.Security.IPermission> interface, an <xref:System.ArgumentException> exception will be thrown if calling the <xref:System.Object.GetType%2A> method on the object referenced by the `target` parameter does not return <xref:System.Configuration.ConfigurationPermission?displayProperty=fullName>."},{"pos":[7256,7327],"content":"The object containing the permissions to perform the intersection with.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object containing the permissions to perform the intersection with.","pos":[0,71]}]},{"pos":[7399,7586],"content":"The logical intersection between the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and a given object that implements <bpt id=\"p2\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The logical intersection between the <xref href=\"System.Configuration.ConfigurationPermission\"></xref> and a given object that implements <xref href=\"System.Security.IPermission\"></xref>."},{"pos":[7763,7865],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not typed as <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>target</code> is not typed as <xref href=\"System.Configuration.ConfigurationPermission\"></xref>."},{"pos":[8378,8555],"content":"Compares the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with an object implementing the <bpt id=\"p2\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"Compares the <xref href=\"System.Configuration.ConfigurationPermission\"></xref> object with an object implementing the <xref href=\"System.Security.IPermission\"></xref> interface."},{"pos":[8568,9265],"content":"Although the method signature accepts any object that implements the <xref:System.Security.IPermission> interface, an <xref:System.ArgumentException> exception will be thrown if calling the <xref:System.Object.GetType%2A> method on the object referenced by the `target` parameter does not return <xref:System.Configuration.ConfigurationPermission?displayProperty=fullName>.       If the object referenced by the `target` parameter is `null`, the comparison is done between the permission state of the <xref:System.Configuration.ConfigurationPermission> object and the <xref:System.Security.Permissions.PermissionState> value of the <xref:System.Security.Permissions.PermissionState> enumeration.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Although the method signature accepts any object that implements the &lt;xref:System.Security.IPermission&gt; interface, an &lt;xref:System.ArgumentException&gt; exception will be thrown if calling the &lt;xref:System.Object.GetType%2A&gt; method on the object referenced by the <ph id=\"ph1\">`target`</ph> parameter does not return &lt;xref:System.Configuration.ConfigurationPermission?displayProperty=fullName&gt;.","pos":[0,373],"source":"Although the method signature accepts any object that implements the <xref:System.Security.IPermission> interface, an <xref:System.ArgumentException> exception will be thrown if calling the <xref:System.Object.GetType%2A> method on the object referenced by the `target` parameter does not return <xref:System.Configuration.ConfigurationPermission?displayProperty=fullName>."},{"content":"If the object referenced by the <ph id=\"ph1\">`target`</ph> parameter is <ph id=\"ph2\">`null`</ph>, the comparison is done between the permission state of the &lt;xref:System.Configuration.ConfigurationPermission&gt; object and the &lt;xref:System.Security.Permissions.PermissionState&gt; value of the &lt;xref:System.Security.Permissions.PermissionState&gt; enumeration.","pos":[380,695],"source":"       If the object referenced by the `target` parameter is `null`, the comparison is done between the permission state of the <xref:System.Configuration.ConfigurationPermission> object and the <xref:System.Security.Permissions.PermissionState> value of the <xref:System.Security.Permissions.PermissionState> enumeration."}]},{"pos":[9452,9477],"content":"The object to compare to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare to.","pos":[0,25]}]},{"pos":[9536,9705],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the permission state is equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the permission state is equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9883,9985],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not typed as <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>target</code> is not typed as <xref href=\"System.Configuration.ConfigurationPermission\"></xref>."},{"pos":[10427,10709],"content":"Indicates whether the permission state for the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is the <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value of the <bpt id=\"p3\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> enumeration.","needQuote":true,"needEscape":true,"source":"Indicates whether the permission state for the <xref href=\"System.Configuration.ConfigurationPermission\"></xref> object is the <xref href=\"System.Security.Permissions.PermissionState\"></xref> value of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration."},{"pos":[10841,11221],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the permission state for the <bpt id=\"p2\">&lt;xref href=\"System.Configuration.ConfigurationPermission\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is the <bpt id=\"p3\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> value of <bpt id=\"p4\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the permission state for the <xref href=\"System.Configuration.ConfigurationPermission\"></xref> is the <xref href=\"System.Security.Permissions.PermissionState\"></xref> value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11708,11894],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with attribute values based on the current <bpt id=\"p2\">&lt;xref href=\"System.Configuration.ConfigurationPermission\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Security.SecurityElement\"></xref> object with attribute values based on the current <xref href=\"System.Configuration.ConfigurationPermission\"></xref> object."},{"pos":[12070,12234],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with attribute values based on the current <bpt id=\"p2\">&lt;xref href=\"System.Configuration.ConfigurationPermission\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.SecurityElement\"></xref> with attribute values based on the current <xref href=\"System.Configuration.ConfigurationPermission\"></xref>."},{"pos":[12803,13002],"content":"Returns the logical union of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and an object that implements the <bpt id=\"p2\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> interface.","needQuote":true,"needEscape":true,"source":"Returns the logical union of the <xref href=\"System.Configuration.ConfigurationPermission\"></xref> object and an object that implements the <xref href=\"System.Security.IPermission\"></xref> interface."},{"pos":[13206,13243],"content":"The object to perform the union with.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to perform the union with.","pos":[0,37]}]},{"pos":[13315,13485],"content":"The logical union of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and an object that implements <bpt id=\"p2\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The logical union of the <xref href=\"System.Configuration.ConfigurationPermission\"></xref> and an object that implements <xref href=\"System.Security.IPermission\"></xref>."},{"pos":[13658,13760],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not typed as <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>target</code> is not typed as <xref href=\"System.Configuration.ConfigurationPermission\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.ConfigurationPermission\n  id: ConfigurationPermission\n  children:\n  - System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Configuration.ConfigurationPermission.Copy\n  - System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)\n  - System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)\n  - System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Configuration.ConfigurationPermission.IsUnrestricted\n  - System.Configuration.ConfigurationPermission.ToXml\n  - System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: ConfigurationPermission\n  nameWithType: ConfigurationPermission\n  fullName: System.Configuration.ConfigurationPermission\n  type: Class\n  summary: Provides a permission structure that allows methods or classes to access configuration files.\n  remarks: The ConfigurationPermission class provides a permission structure that allows methods or classes to access configuration files. Also, ConfigurationPermission provides ways to resolve multiple permissions values through such methods as <xref:System.Configuration.ConfigurationPermission.Union%2A> and <xref:System.Configuration.ConfigurationPermission.Intersect%2A>.\n  syntax:\n    content: 'public sealed class ConfigurationPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Configuration.ConfigurationPermission\n  langs:\n  - csharp\n  name: ConfigurationPermission(PermissionState)\n  nameWithType: ConfigurationPermission.ConfigurationPermission(PermissionState)\n  fullName: System.Configuration.ConfigurationPermission.ConfigurationPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.ConfigurationPermission\"></xref> class.\n  syntax:\n    content: public ConfigurationPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: The permission level to grant.\n  overload: System.Configuration.ConfigurationPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value of <code>state</code> is neither <xref href=\"System.Security.Permissions.PermissionState\"></xref> nor <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPermission.Copy\n  id: Copy\n  parent: System.Configuration.ConfigurationPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: ConfigurationPermission.Copy()\n  fullName: System.Configuration.ConfigurationPermission.Copy()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Returns a new <xref href=\"System.Configuration.ConfigurationPermission\"></xref> object with the same permission level.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A new <xref href=\"System.Configuration.ConfigurationPermission\"></xref> with the same permission level.\n  overload: System.Configuration.ConfigurationPermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Configuration.ConfigurationPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: ConfigurationPermission.FromXml(SecurityElement)\n  fullName: System.Configuration.ConfigurationPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Reads the value of the permission state from XML.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: The configuration element from which the permission state is read.\n  overload: System.Configuration.ConfigurationPermission.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>securityElement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref uid=\"langword_csharp_unrestricted\" name=\"unrestricted\" href=\"\"></xref> attribute for the given <code>securityElement</code> is neither <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> nor <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Configuration.ConfigurationPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: ConfigurationPermission.Intersect(IPermission)\n  fullName: System.Configuration.ConfigurationPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Returns the logical intersection between the <xref href=\"System.Configuration.ConfigurationPermission\"></xref> object and a given object that implements the <xref href=\"System.Security.IPermission\"></xref> interface.\n  remarks: Although the method signature accepts any object that implements the <xref:System.Security.IPermission> interface, an <xref:System.ArgumentException> exception will be thrown if calling the <xref:System.Object.GetType%2A> method on the object referenced by the `target` parameter does not return <xref:System.Configuration.ConfigurationPermission?displayProperty=fullName>.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: The object containing the permissions to perform the intersection with.\n    return:\n      type: System.Security.IPermission\n      description: The logical intersection between the <xref href=\"System.Configuration.ConfigurationPermission\"></xref> and a given object that implements <xref href=\"System.Security.IPermission\"></xref>.\n  overload: System.Configuration.ConfigurationPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not typed as <xref href=\"System.Configuration.ConfigurationPermission\"></xref>.\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Configuration.ConfigurationPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: ConfigurationPermission.IsSubsetOf(IPermission)\n  fullName: System.Configuration.ConfigurationPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Compares the <xref href=\"System.Configuration.ConfigurationPermission\"></xref> object with an object implementing the <xref href=\"System.Security.IPermission\"></xref> interface.\n  remarks: \"Although the method signature accepts any object that implements the <xref:System.Security.IPermission> interface, an <xref:System.ArgumentException> exception will be thrown if calling the <xref:System.Object.GetType%2A> method on the object referenced by the `target` parameter does not return <xref:System.Configuration.ConfigurationPermission?displayProperty=fullName>.  \\n  \\n If the object referenced by the `target` parameter is `null`, the comparison is done between the permission state of the <xref:System.Configuration.ConfigurationPermission> object and the <xref:System.Security.Permissions.PermissionState> value of the <xref:System.Security.Permissions.PermissionState> enumeration.\"\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: The object to compare to.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the permission state is equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.ConfigurationPermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not typed as <xref href=\"System.Configuration.ConfigurationPermission\"></xref>.\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Configuration.ConfigurationPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: ConfigurationPermission.IsUnrestricted()\n  fullName: System.Configuration.ConfigurationPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Indicates whether the permission state for the <xref href=\"System.Configuration.ConfigurationPermission\"></xref> object is the <xref href=\"System.Security.Permissions.PermissionState\"></xref> value of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the permission state for the <xref href=\"System.Configuration.ConfigurationPermission\"></xref> is the <xref href=\"System.Security.Permissions.PermissionState\"></xref> value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.ConfigurationPermission.IsUnrestricted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPermission.ToXml\n  id: ToXml\n  parent: System.Configuration.ConfigurationPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: ConfigurationPermission.ToXml()\n  fullName: System.Configuration.ConfigurationPermission.ToXml()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Returns a <xref href=\"System.Security.SecurityElement\"></xref> object with attribute values based on the current <xref href=\"System.Configuration.ConfigurationPermission\"></xref> object.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: A <xref href=\"System.Security.SecurityElement\"></xref> with attribute values based on the current <xref href=\"System.Configuration.ConfigurationPermission\"></xref>.\n  overload: System.Configuration.ConfigurationPermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Configuration.ConfigurationPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: ConfigurationPermission.Union(IPermission)\n  fullName: System.Configuration.ConfigurationPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Returns the logical union of the <xref href=\"System.Configuration.ConfigurationPermission\"></xref> object and an object that implements the <xref href=\"System.Security.IPermission\"></xref> interface.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: The object to perform the union with.\n    return:\n      type: System.Security.IPermission\n      description: The logical union of the <xref href=\"System.Configuration.ConfigurationPermission\"></xref> and an object that implements <xref href=\"System.Security.IPermission\"></xref>.\n  overload: System.Configuration.ConfigurationPermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not typed as <xref href=\"System.Configuration.ConfigurationPermission\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: ConfigurationPermission(PermissionState)\n  nameWithType: ConfigurationPermission.ConfigurationPermission(PermissionState)\n  fullName: System.Configuration.ConfigurationPermission.ConfigurationPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Configuration.ConfigurationPermission.Copy\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: ConfigurationPermission.Copy()\n  fullName: System.Configuration.ConfigurationPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: ConfigurationPermission.FromXml(SecurityElement)\n  fullName: System.Configuration.ConfigurationPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: ConfigurationPermission.Intersect(IPermission)\n  fullName: System.Configuration.ConfigurationPermission.Intersect(IPermission)\n- uid: System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: ConfigurationPermission.IsSubsetOf(IPermission)\n  fullName: System.Configuration.ConfigurationPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Configuration.ConfigurationPermission.IsUnrestricted\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: ConfigurationPermission.IsUnrestricted()\n  fullName: System.Configuration.ConfigurationPermission.IsUnrestricted()\n- uid: System.Configuration.ConfigurationPermission.ToXml\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: ConfigurationPermission.ToXml()\n  fullName: System.Configuration.ConfigurationPermission.ToXml()\n- uid: System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: ConfigurationPermission.Union(IPermission)\n  fullName: System.Configuration.ConfigurationPermission.Union(IPermission)\n- uid: System.Configuration.ConfigurationPermission.#ctor*\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: ConfigurationPermission\n  nameWithType: ConfigurationPermission.ConfigurationPermission\n- uid: System.Configuration.ConfigurationPermission.Copy*\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: Copy\n  nameWithType: ConfigurationPermission.Copy\n- uid: System.Configuration.ConfigurationPermission.FromXml*\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: ConfigurationPermission.FromXml\n- uid: System.Configuration.ConfigurationPermission.Intersect*\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: ConfigurationPermission.Intersect\n- uid: System.Configuration.ConfigurationPermission.IsSubsetOf*\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: ConfigurationPermission.IsSubsetOf\n- uid: System.Configuration.ConfigurationPermission.IsUnrestricted*\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: ConfigurationPermission.IsUnrestricted\n- uid: System.Configuration.ConfigurationPermission.ToXml*\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: ConfigurationPermission.ToXml\n- uid: System.Configuration.ConfigurationPermission.Union*\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: Union\n  nameWithType: ConfigurationPermission.Union\n"}