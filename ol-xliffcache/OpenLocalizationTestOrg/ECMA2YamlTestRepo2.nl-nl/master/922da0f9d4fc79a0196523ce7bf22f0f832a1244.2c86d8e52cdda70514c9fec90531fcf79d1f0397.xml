{"nodes":[{"pos":[571,627],"content":"Represents a type parameter of a generic type or method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a type parameter of a generic type or method.","pos":[0,56]}]},{"pos":[640,1199],"content":"The CodeTypeParameter class represents a type parameter in the declaration of a generic type or method.       A generic type or method declaration contains one or more unspecified types known as type parameters. A type parameter name stands for the type within the body of the generic declaration. For example, the generic declaration for the <xref:System.Collections.Generic.List%601> class contains the type parameter `T`.       For more information on generics, see [Generics in the .NET Framework Class Library](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CodeTypeParameter class represents a type parameter in the declaration of a generic type or method.","pos":[0,103]},{"content":"A generic type or method declaration contains one or more unspecified types known as type parameters.","pos":[110,211]},{"content":"A type parameter name stands for the type within the body of the generic declaration.","pos":[212,297]},{"content":"For example, the generic declaration for the &lt;xref:System.Collections.Generic.List%601&gt; class contains the type parameter <ph id=\"ph1\">`T`</ph>.","pos":[298,424],"source":" For example, the generic declaration for the <xref:System.Collections.Generic.List%601> class contains the type parameter `T`."},{"content":"For more information on generics, see <bpt id=\"p1\">[</bpt>Generics in the .NET Framework Class Library<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[431,555],"source":"       For more information on generics, see [Generics in the .NET Framework Class Library](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[2363,2457],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeTypeParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeParameter\"></xref> class."},{"pos":[2469,2574],"content":"If you use this constructor, you should set the <xref:System.CodeDom.CodeTypeParameter.Name%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you use this constructor, you should set the &lt;xref:System.CodeDom.CodeTypeParameter.Name%2A&gt; property.","pos":[0,105],"source":"If you use this constructor, you should set the <xref:System.CodeDom.CodeTypeParameter.Name%2A> property."}]},{"pos":[3140,3273],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeTypeParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified type parameter name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeParameter\"></xref> class with the specified type parameter name."},{"pos":[3862,3893],"content":"The name of the type parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type parameter.","pos":[0,31]}]},{"pos":[4323,4367],"content":"Gets the constraints for the type parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the constraints for the type parameter.","pos":[0,44]}]},{"pos":[4379,4465],"content":"A constraint specifies the type that the type parameter must derive from or implement.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A constraint specifies the type that the type parameter must derive from or implement.","pos":[0,86]}]},{"pos":[5074,5200],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeTypeReferenceCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the constraints for the type parameter.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeTypeReferenceCollection\"></xref> object that contains the constraints for the type parameter."},{"pos":[5661,5710],"content":"Gets the custom attributes of the type parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the custom attributes of the type parameter.","pos":[0,49]}]},{"pos":[5723,5918],"content":"This property can be used to add metadata attributes to the declaration of the type parameter.      > [!CAUTION] >  This property is `null` by default and should be checked before referencing.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property can be used to add metadata attributes to the declaration of the type parameter.","pos":[0,94]},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  This property is <ph id=\"ph2\">`null`</ph> by default and should be checked before referencing.","pos":[100,192],"source":"      > [!CAUTION] >  This property is `null` by default and should be checked before referencing."}]},{"pos":[6558,6767],"content":"A <xref href=\"System.CodeDom.CodeAttributeDeclarationCollection\"></xref> that indicates the custom attributes of the type parameter. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeAttributeDeclarationCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the custom attributes of the type parameter.","pos":[0,132],"source":"A <xref href=\"System.CodeDom.CodeAttributeDeclarationCollection\"></xref> that indicates the custom attributes of the type parameter."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[133,209],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[7273,7361],"content":"Gets or sets a value indicating whether the type parameter has a constructor constraint.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the type parameter has a constructor constraint.","pos":[0,88]}]},{"pos":[7373,7527],"content":"A constructor constraint indicates to the compiler that the type parameter exposes a default public constructor (a public constructor with no parameters).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A constructor constraint indicates to the compiler that the type parameter exposes a default public constructor (a public constructor with no parameters).","pos":[0,154]}]},{"pos":[8143,8409],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the type parameter has a constructor constraint; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the type parameter has a constructor constraint; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,187],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the type parameter has a constructor constraint; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[188,266],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[8823,8867],"content":"Gets or sets the name of the type parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the type parameter.","pos":[0,44]}]},{"pos":[8981,9049],"content":"The name of the type parameter. The default is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type parameter. The default is an empty string (\"\").","pos":[0,68],"nodes":[{"content":"The name of the type parameter.","pos":[0,31]},{"content":"The default is an empty string (\"\").","pos":[32,68]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeTypeParameter\n  id: CodeTypeParameter\n  children:\n  - System.CodeDom.CodeTypeParameter.#ctor\n  - System.CodeDom.CodeTypeParameter.#ctor(System.String)\n  - System.CodeDom.CodeTypeParameter.Constraints\n  - System.CodeDom.CodeTypeParameter.CustomAttributes\n  - System.CodeDom.CodeTypeParameter.HasConstructorConstraint\n  - System.CodeDom.CodeTypeParameter.Name\n  langs:\n  - csharp\n  name: CodeTypeParameter\n  nameWithType: CodeTypeParameter\n  fullName: System.CodeDom.CodeTypeParameter\n  type: Class\n  summary: Represents a type parameter of a generic type or method.\n  remarks: \"The CodeTypeParameter class represents a type parameter in the declaration of a generic type or method.  \\n  \\n A generic type or method declaration contains one or more unspecified types known as type parameters. A type parameter name stands for the type within the body of the generic declaration. For example, the generic declaration for the <xref:System.Collections.Generic.List%601> class contains the type parameter `T`.  \\n  \\n For more information on generics, see [Generics in the .NET Framework Class Library](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example shows the use of the CodeTypeParameter class to create a CodeDOM graph to generate an application containing generics code.  \\n  \\n [!code-vb[System.CodeDom.Generics.1#1](~/add/codesnippet/visualbasic/t-system.codedom.codetyp_8_1.vb)]\\n [!code-cs[System.CodeDom.Generics.1#1](~/add/codesnippet/csharp/t-system.codedom.codetyp_8_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeTypeParameter : System.CodeDom.CodeObject\n  inheritance:\n  - System.Object\n  - System.CodeDom.CodeObject\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.CodeObject.UserData\n  platform:\n  - net462\n- uid: System.CodeDom.CodeTypeParameter.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeTypeParameter\n  langs:\n  - csharp\n  name: CodeTypeParameter()\n  nameWithType: CodeTypeParameter.CodeTypeParameter()\n  fullName: System.CodeDom.CodeTypeParameter.CodeTypeParameter()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeParameter\"></xref> class.\n  remarks: If you use this constructor, you should set the <xref:System.CodeDom.CodeTypeParameter.Name%2A> property.\n  syntax:\n    content: public CodeTypeParameter ();\n    parameters: []\n  overload: System.CodeDom.CodeTypeParameter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeTypeParameter.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.CodeDom.CodeTypeParameter\n  langs:\n  - csharp\n  name: CodeTypeParameter(String)\n  nameWithType: CodeTypeParameter.CodeTypeParameter(String)\n  fullName: System.CodeDom.CodeTypeParameter.CodeTypeParameter(String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeTypeParameter\"></xref> class with the specified type parameter name.\n  remarks: ''\n  example:\n  - \"The following code example shows the use of CodeTypeParameter constructor to add a type parameter.  This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.  \\n  \\n [!code-vb[System.CodeDom.Generics.1#10](~/add/codesnippet/visualbasic/m-system.codedom.codetyp_4_1.vb)]\\n [!code-cs[System.CodeDom.Generics.1#10](~/add/codesnippet/csharp/m-system.codedom.codetyp_4_1.cs)]\"\n  syntax:\n    content: public CodeTypeParameter (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the type parameter.\n  overload: System.CodeDom.CodeTypeParameter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeTypeParameter.Constraints\n  id: Constraints\n  parent: System.CodeDom.CodeTypeParameter\n  langs:\n  - csharp\n  name: Constraints\n  nameWithType: CodeTypeParameter.Constraints\n  fullName: System.CodeDom.CodeTypeParameter.Constraints\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets the constraints for the type parameter.\n  remarks: A constraint specifies the type that the type parameter must derive from or implement.\n  example:\n  - \"The following code example shows the use of the Constraints property to add a new constraint.  This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.  \\n  \\n [!code-vb[System.CodeDom.Generics.1#4](~/add/codesnippet/visualbasic/p-system.codedom.codetyp_1_1.vb)]\\n [!code-cs[System.CodeDom.Generics.1#4](~/add/codesnippet/csharp/p-system.codedom.codetyp_1_1.cs)]\"\n  syntax:\n    content: public System.CodeDom.CodeTypeReferenceCollection Constraints { get; }\n    return:\n      type: System.CodeDom.CodeTypeReferenceCollection\n      description: A <xref href=\"System.CodeDom.CodeTypeReferenceCollection\"></xref> object that contains the constraints for the type parameter.\n  overload: System.CodeDom.CodeTypeParameter.Constraints*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeTypeParameter.CustomAttributes\n  id: CustomAttributes\n  parent: System.CodeDom.CodeTypeParameter\n  langs:\n  - csharp\n  name: CustomAttributes\n  nameWithType: CodeTypeParameter.CustomAttributes\n  fullName: System.CodeDom.CodeTypeParameter.CustomAttributes\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets the custom attributes of the type parameter.\n  remarks: \"This property can be used to add metadata attributes to the declaration of the type parameter.  \\n  \\n> [!CAUTION]\\n>  This property is `null` by default and should be checked before referencing.\"\n  example:\n  - \"The following code example shows the use of the CustomAttributes property to add a new custom attribute.  This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.  \\n  \\n [!code-vb[System.CodeDom.Generics.1#5](~/add/codesnippet/visualbasic/p-system.codedom.codetyp_3_1.vb)]\\n [!code-cs[System.CodeDom.Generics.1#5](~/add/codesnippet/csharp/p-system.codedom.codetyp_3_1.cs)]\"\n  syntax:\n    content: public System.CodeDom.CodeAttributeDeclarationCollection CustomAttributes { get; }\n    return:\n      type: System.CodeDom.CodeAttributeDeclarationCollection\n      description: A <xref href=\"System.CodeDom.CodeAttributeDeclarationCollection\"></xref> that indicates the custom attributes of the type parameter. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.CodeDom.CodeTypeParameter.CustomAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeTypeParameter.HasConstructorConstraint\n  id: HasConstructorConstraint\n  parent: System.CodeDom.CodeTypeParameter\n  langs:\n  - csharp\n  name: HasConstructorConstraint\n  nameWithType: CodeTypeParameter.HasConstructorConstraint\n  fullName: System.CodeDom.CodeTypeParameter.HasConstructorConstraint\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets a value indicating whether the type parameter has a constructor constraint.\n  remarks: A constructor constraint indicates to the compiler that the type parameter exposes a default public constructor (a public constructor with no parameters).\n  example:\n  - \"The following code example shows the use of the HasConstructorConstraint property in determining if the type parameter has a constructor constraint.  This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.  \\n  \\n [!code-vb[System.CodeDom.Generics.1#3](~/add/codesnippet/visualbasic/p-system.codedom.codetyp_0_1.vb)]\\n [!code-cs[System.CodeDom.Generics.1#3](~/add/codesnippet/csharp/p-system.codedom.codetyp_0_1.cs)]\"\n  syntax:\n    content: public bool HasConstructorConstraint { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the type parameter has a constructor constraint; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.CodeDom.CodeTypeParameter.HasConstructorConstraint*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeTypeParameter.Name\n  id: Name\n  parent: System.CodeDom.CodeTypeParameter\n  langs:\n  - csharp\n  name: Name\n  nameWithType: CodeTypeParameter.Name\n  fullName: System.CodeDom.CodeTypeParameter.Name\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the name of the type parameter.\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of the type parameter. The default is an empty string (\"\").\n  overload: System.CodeDom.CodeTypeParameter.Name*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.CodeDom.CodeObject\n  isExternal: false\n  name: System.CodeDom.CodeObject\n- uid: System.CodeDom.CodeTypeParameter.#ctor\n  parent: System.CodeDom.CodeTypeParameter\n  isExternal: false\n  name: CodeTypeParameter()\n  nameWithType: CodeTypeParameter.CodeTypeParameter()\n  fullName: System.CodeDom.CodeTypeParameter.CodeTypeParameter()\n- uid: System.CodeDom.CodeTypeParameter.#ctor(System.String)\n  parent: System.CodeDom.CodeTypeParameter\n  isExternal: false\n  name: CodeTypeParameter(String)\n  nameWithType: CodeTypeParameter.CodeTypeParameter(String)\n  fullName: System.CodeDom.CodeTypeParameter.CodeTypeParameter(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.CodeDom.CodeTypeParameter.Constraints\n  parent: System.CodeDom.CodeTypeParameter\n  isExternal: false\n  name: Constraints\n  nameWithType: CodeTypeParameter.Constraints\n  fullName: System.CodeDom.CodeTypeParameter.Constraints\n- uid: System.CodeDom.CodeTypeReferenceCollection\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeReferenceCollection\n  nameWithType: CodeTypeReferenceCollection\n  fullName: System.CodeDom.CodeTypeReferenceCollection\n- uid: System.CodeDom.CodeTypeParameter.CustomAttributes\n  parent: System.CodeDom.CodeTypeParameter\n  isExternal: false\n  name: CustomAttributes\n  nameWithType: CodeTypeParameter.CustomAttributes\n  fullName: System.CodeDom.CodeTypeParameter.CustomAttributes\n- uid: System.CodeDom.CodeAttributeDeclarationCollection\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeAttributeDeclarationCollection\n  nameWithType: CodeAttributeDeclarationCollection\n  fullName: System.CodeDom.CodeAttributeDeclarationCollection\n- uid: System.CodeDom.CodeTypeParameter.HasConstructorConstraint\n  parent: System.CodeDom.CodeTypeParameter\n  isExternal: false\n  name: HasConstructorConstraint\n  nameWithType: CodeTypeParameter.HasConstructorConstraint\n  fullName: System.CodeDom.CodeTypeParameter.HasConstructorConstraint\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.CodeDom.CodeTypeParameter.Name\n  parent: System.CodeDom.CodeTypeParameter\n  isExternal: false\n  name: Name\n  nameWithType: CodeTypeParameter.Name\n  fullName: System.CodeDom.CodeTypeParameter.Name\n- uid: System.CodeDom.CodeTypeParameter.#ctor*\n  parent: System.CodeDom.CodeTypeParameter\n  isExternal: false\n  name: CodeTypeParameter\n  nameWithType: CodeTypeParameter.CodeTypeParameter\n- uid: System.CodeDom.CodeTypeParameter.Constraints*\n  parent: System.CodeDom.CodeTypeParameter\n  isExternal: false\n  name: Constraints\n  nameWithType: CodeTypeParameter.Constraints\n- uid: System.CodeDom.CodeTypeParameter.CustomAttributes*\n  parent: System.CodeDom.CodeTypeParameter\n  isExternal: false\n  name: CustomAttributes\n  nameWithType: CodeTypeParameter.CustomAttributes\n- uid: System.CodeDom.CodeTypeParameter.HasConstructorConstraint*\n  parent: System.CodeDom.CodeTypeParameter\n  isExternal: false\n  name: HasConstructorConstraint\n  nameWithType: CodeTypeParameter.HasConstructorConstraint\n- uid: System.CodeDom.CodeTypeParameter.Name*\n  parent: System.CodeDom.CodeTypeParameter\n  isExternal: false\n  name: Name\n  nameWithType: CodeTypeParameter.Name\n"}