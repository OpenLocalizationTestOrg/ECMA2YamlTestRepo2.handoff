{"nodes":[{"pos":[455,494],"content":"Represents a primitive data type value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a primitive data type value.","pos":[0,39]}]},{"pos":[507,954],"content":"CodePrimitiveExpression can be used to represent an expression that indicates a primitive data type value.       The <xref:System.CodeDom.CodePrimitiveExpression.Value%2A> property specifies the primitive data type value to represent.       Primitive data types that can be represented using CodePrimitiveExpression include `null`; string; 16-, 32-, and 64-bit signed integers; and single-precision and double-precision floating-point numbers.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"CodePrimitiveExpression can be used to represent an expression that indicates a primitive data type value.","pos":[0,106]},{"content":"The &lt;xref:System.CodeDom.CodePrimitiveExpression.Value%2A&gt; property specifies the primitive data type value to represent.","pos":[113,234],"source":"       The <xref:System.CodeDom.CodePrimitiveExpression.Value%2A> property specifies the primitive data type value to represent."},{"content":"Primitive data types that can be represented using CodePrimitiveExpression include <ph id=\"ph1\">`null`</ph>; string; 16-, 32-, and 64-bit signed integers; and single-precision and double-precision floating-point numbers.","pos":[241,443],"source":"       Primitive data types that can be represented using CodePrimitiveExpression include `null`; string; 16-, 32-, and 64-bit signed integers; and single-precision and double-precision floating-point numbers."}]},{"pos":[2275,2375],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodePrimitiveExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodePrimitiveExpression\"></xref> class."},{"pos":[2995,3122],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodePrimitiveExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified object.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodePrimitiveExpression\"></xref> class using the specified object."},{"pos":[3270,3294],"content":"The object to represent.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to represent.","pos":[0,24]}]},{"pos":[3724,3774],"content":"Gets or sets the primitive data type to represent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the primitive data type to represent.","pos":[0,50]}]},{"pos":[3786,3837],"content":"Any .NET Framework primitive type can be used here.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Any .NET Framework primitive type can be used here.","pos":[0,51]}]},{"pos":[3952,4011],"content":"The primitive data type instance to represent the value of.","needQuote":true,"needEscape":true,"nodes":[{"content":"The primitive data type instance to represent the value of.","pos":[0,59]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodePrimitiveExpression\n  id: CodePrimitiveExpression\n  children:\n  - System.CodeDom.CodePrimitiveExpression.#ctor\n  - System.CodeDom.CodePrimitiveExpression.#ctor(System.Object)\n  - System.CodeDom.CodePrimitiveExpression.Value\n  langs:\n  - csharp\n  name: CodePrimitiveExpression\n  nameWithType: CodePrimitiveExpression\n  fullName: System.CodeDom.CodePrimitiveExpression\n  type: Class\n  summary: Represents a primitive data type value.\n  remarks: \"CodePrimitiveExpression can be used to represent an expression that indicates a primitive data type value.  \\n  \\n The <xref:System.CodeDom.CodePrimitiveExpression.Value%2A> property specifies the primitive data type value to represent.  \\n  \\n Primitive data types that can be represented using CodePrimitiveExpression include `null`; string; 16-, 32-, and 64-bit signed integers; and single-precision and double-precision floating-point numbers.\"\n  example:\n  - \"The following example demonstrates use of CodePrimitiveExpression to represent values of several primitive types.  \\n  \\n [!code-cpp[CodePrimitiveExpressionExample#2](~/add/codesnippet/cpp/t-system.codedom.codepri_1.cpp)]\\n [!code-cs[CodePrimitiveExpressionExample#2](~/add/codesnippet/csharp/t-system.codedom.codepri_1.cs)]\\n [!code-vb[CodePrimitiveExpressionExample#2](~/add/codesnippet/visualbasic/t-system.codedom.codepri_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodePrimitiveExpression : System.CodeDom.CodeExpression\n  inheritance:\n  - System.Object\n  - System.CodeDom.CodeObject\n  - System.CodeDom.CodeExpression\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.CodeObject.UserData\n  platform:\n  - net462\n- uid: System.CodeDom.CodePrimitiveExpression.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodePrimitiveExpression\n  langs:\n  - csharp\n  name: CodePrimitiveExpression()\n  nameWithType: CodePrimitiveExpression.CodePrimitiveExpression()\n  fullName: System.CodeDom.CodePrimitiveExpression.CodePrimitiveExpression()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodePrimitiveExpression\"></xref> class.\n  syntax:\n    content: public CodePrimitiveExpression ();\n    parameters: []\n  overload: System.CodeDom.CodePrimitiveExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodePrimitiveExpression.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.CodeDom.CodePrimitiveExpression\n  langs:\n  - csharp\n  name: CodePrimitiveExpression(Object)\n  nameWithType: CodePrimitiveExpression.CodePrimitiveExpression(Object)\n  fullName: System.CodeDom.CodePrimitiveExpression.CodePrimitiveExpression(Object)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodePrimitiveExpression\"></xref> class using the specified object.\n  syntax:\n    content: public CodePrimitiveExpression (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to represent.\n  overload: System.CodeDom.CodePrimitiveExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodePrimitiveExpression.Value\n  id: Value\n  parent: System.CodeDom.CodePrimitiveExpression\n  langs:\n  - csharp\n  name: Value\n  nameWithType: CodePrimitiveExpression.Value\n  fullName: System.CodeDom.CodePrimitiveExpression.Value\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the primitive data type to represent.\n  remarks: Any .NET Framework primitive type can be used here.\n  syntax:\n    content: public object Value { get; set; }\n    return:\n      type: System.Object\n      description: The primitive data type instance to represent the value of.\n  overload: System.CodeDom.CodePrimitiveExpression.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.CodeDom.CodeExpression\n  isExternal: false\n  name: System.CodeDom.CodeExpression\n- uid: System.CodeDom.CodePrimitiveExpression.#ctor\n  parent: System.CodeDom.CodePrimitiveExpression\n  isExternal: false\n  name: CodePrimitiveExpression()\n  nameWithType: CodePrimitiveExpression.CodePrimitiveExpression()\n  fullName: System.CodeDom.CodePrimitiveExpression.CodePrimitiveExpression()\n- uid: System.CodeDom.CodePrimitiveExpression.#ctor(System.Object)\n  parent: System.CodeDom.CodePrimitiveExpression\n  isExternal: false\n  name: CodePrimitiveExpression(Object)\n  nameWithType: CodePrimitiveExpression.CodePrimitiveExpression(Object)\n  fullName: System.CodeDom.CodePrimitiveExpression.CodePrimitiveExpression(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.CodeDom.CodePrimitiveExpression.Value\n  parent: System.CodeDom.CodePrimitiveExpression\n  isExternal: false\n  name: Value\n  nameWithType: CodePrimitiveExpression.Value\n  fullName: System.CodeDom.CodePrimitiveExpression.Value\n- uid: System.CodeDom.CodePrimitiveExpression.#ctor*\n  parent: System.CodeDom.CodePrimitiveExpression\n  isExternal: false\n  name: CodePrimitiveExpression\n  nameWithType: CodePrimitiveExpression.CodePrimitiveExpression\n- uid: System.CodeDom.CodePrimitiveExpression.Value*\n  parent: System.CodeDom.CodePrimitiveExpression\n  isExternal: false\n  name: Value\n  nameWithType: CodePrimitiveExpression.Value\n"}