{"nodes":[{"pos":[359,458],"content":"Provides data for the <bpt id=\"p1\">&lt;xref href=\"System.Activities.WorkflowInvoker.InvokeCompleted\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Provides data for the <xref href=\"System.Activities.WorkflowInvoker.InvokeCompleted\"></xref> event."},{"pos":[470,821],"content":"When invoking workflows asynchronously using one of the <xref:System.Activities.WorkflowInvoker.InvokeAsync%2A> overloads in <xref:System.Activities.WorkflowInvoker>, workflow host authors can handle <xref:System.Activities.WorkflowInvoker.InvokeCompleted> to get data from the completed workflow, or exception data if the workflow failed to complete.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When invoking workflows asynchronously using one of the &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; overloads in &lt;xref:System.Activities.WorkflowInvoker&gt;, workflow host authors can handle &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt; to get data from the completed workflow, or exception data if the workflow failed to complete.","pos":[0,351],"source":"When invoking workflows asynchronously using one of the <xref:System.Activities.WorkflowInvoker.InvokeAsync%2A> overloads in <xref:System.Activities.WorkflowInvoker>, workflow host authors can handle <xref:System.Activities.WorkflowInvoker.InvokeCompleted> to get data from the completed workflow, or exception data if the workflow failed to complete."}]},{"pos":[1429,1567],"content":"Gets an &lt;xref:System.Collections.Generic.IDictionary%602&gt; of the root activity’s output argument values from the completed workflow.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id=\"ph2\">&amp;gt;</ph> of the root activity’s output argument values from the completed workflow.","pos":[0,138],"source":"Gets an &lt;xref:System.Collections.Generic.IDictionary%602&gt; of the root activity’s output argument values from the completed workflow."}]},{"pos":[1579,1651],"content":"The output argument values in the dictionary are keyed by argument name.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The output argument values in the dictionary are keyed by argument name.","pos":[0,72]}]},{"pos":[1864,1951],"content":"A dictionary of the root activity’s output argument values from the completed workflow.","needQuote":true,"needEscape":true,"nodes":[{"content":"A dictionary of the root activity’s output argument values from the completed workflow.","pos":[0,87]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.InvokeCompletedEventArgs\n  id: InvokeCompletedEventArgs\n  children:\n  - System.Activities.InvokeCompletedEventArgs.Outputs\n  langs:\n  - csharp\n  name: InvokeCompletedEventArgs\n  nameWithType: InvokeCompletedEventArgs\n  fullName: System.Activities.InvokeCompletedEventArgs\n  type: Class\n  summary: Provides data for the <xref href=\"System.Activities.WorkflowInvoker.InvokeCompleted\"></xref> event.\n  remarks: When invoking workflows asynchronously using one of the <xref:System.Activities.WorkflowInvoker.InvokeAsync%2A> overloads in <xref:System.Activities.WorkflowInvoker>, workflow host authors can handle <xref:System.Activities.WorkflowInvoker.InvokeCompleted> to get data from the completed workflow, or exception data if the workflow failed to complete.\n  syntax:\n    content: 'public class InvokeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs'\n  inheritance:\n  - System.ComponentModel.AsyncCompletedEventArgs\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.InvokeCompletedEventArgs.Outputs\n  id: Outputs\n  parent: System.Activities.InvokeCompletedEventArgs\n  langs:\n  - csharp\n  name: Outputs\n  nameWithType: InvokeCompletedEventArgs.Outputs\n  fullName: System.Activities.InvokeCompletedEventArgs.Outputs\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets an &lt;xref:System.Collections.Generic.IDictionary%602&gt; of the root activity’s output argument values from the completed workflow.\n  remarks: The output argument values in the dictionary are keyed by argument name.\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,object> Outputs { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: A dictionary of the root activity’s output argument values from the completed workflow.\n  overload: System.Activities.InvokeCompletedEventArgs.Outputs*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.AsyncCompletedEventArgs\n  isExternal: false\n  name: System.ComponentModel.AsyncCompletedEventArgs\n- uid: System.Activities.InvokeCompletedEventArgs.Outputs\n  parent: System.Activities.InvokeCompletedEventArgs\n  isExternal: false\n  name: Outputs\n  nameWithType: InvokeCompletedEventArgs.Outputs\n  fullName: System.Activities.InvokeCompletedEventArgs.Outputs\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.String,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.InvokeCompletedEventArgs.Outputs*\n  parent: System.Activities.InvokeCompletedEventArgs\n  isExternal: false\n  name: Outputs\n  nameWithType: InvokeCompletedEventArgs.Outputs\n"}