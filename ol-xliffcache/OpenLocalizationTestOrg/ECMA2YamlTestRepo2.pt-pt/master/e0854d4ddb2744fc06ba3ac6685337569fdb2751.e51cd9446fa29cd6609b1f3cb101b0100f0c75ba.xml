{"nodes":[{"pos":[613,1069],"content":"Computes the logical OR of two values. To do this, both operands are evaluated to boolean values. If both operands are <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> then the expression returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. If one or both operands evaluate to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the expression returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Computes the logical OR of two values.","pos":[0,38]},{"content":"To do this, both operands are evaluated to boolean values.","pos":[39,97]},{"content":"If both operands are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> then the expression returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[98,273],"source":" If both operands are <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> then the expression returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"If one or both operands evaluate to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the expression returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[274,456],"source":" If one or both operands evaluate to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the expression returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[2549,2647],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Expressions.OrElse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Activities.Expressions.OrElse\"></xref> class."},{"pos":[3500,3512],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3946,3976],"content":"Gets or sets the left operand.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the left operand.","pos":[0,30]}]},{"pos":[4145,4230],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Activities.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the left operand.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Activities.Activity\"></xref> that represents the left operand."},{"pos":[5277,5289],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5375,5387],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5837,5868],"content":"Gets or sets the right operand.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the right operand.","pos":[0,31]}]},{"pos":[6038,6124],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Activities.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the right operand.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Activities.Activity\"></xref> that represents the right operand."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Expressions.OrElse\n  id: OrElse\n  children:\n  - System.Activities.Expressions.OrElse.#ctor\n  - System.Activities.Expressions.OrElse.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.Expressions.OrElse.Left\n  - System.Activities.Expressions.OrElse.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.Expressions.OrElse.Right\n  langs:\n  - csharp\n  name: OrElse\n  nameWithType: OrElse\n  fullName: System.Activities.Expressions.OrElse\n  type: Class\n  summary: Computes the logical OR of two values. To do this, both operands are evaluated to boolean values. If both operands are <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> then the expression returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. If one or both operands evaluate to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the expression returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  syntax:\n    content: 'public sealed class OrElse : System.Activities.Activity<bool>'\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.Implementation\n  - System.Activities.Activity.ImplementationVersion\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(`0)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  platform:\n  - net462\n- uid: System.Activities.Expressions.OrElse.#ctor\n  id: '#ctor'\n  parent: System.Activities.Expressions.OrElse\n  langs:\n  - csharp\n  name: OrElse()\n  nameWithType: OrElse.OrElse()\n  fullName: System.Activities.Expressions.OrElse.OrElse()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Expressions.OrElse\"></xref> class.\n  syntax:\n    content: public OrElse ();\n    parameters: []\n  overload: System.Activities.Expressions.OrElse.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.OrElse.CacheMetadata(System.Activities.ActivityMetadata)\n  id: CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.Expressions.OrElse\n  langs:\n  - csharp\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: OrElse.CacheMetadata(ActivityMetadata)\n  fullName: System.Activities.Expressions.OrElse.CacheMetadata(ActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.ActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.ActivityMetadata\n      description: To be added.\n  overload: System.Activities.Expressions.OrElse.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.OrElse.Left\n  id: Left\n  parent: System.Activities.Expressions.OrElse\n  langs:\n  - csharp\n  name: Left\n  nameWithType: OrElse.Left\n  fullName: System.Activities.Expressions.OrElse.Left\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Gets or sets the left operand.\n  syntax:\n    content: public System.Activities.Activity<bool> Left { get; set; }\n    return:\n      type: System.Activities.Activity{System.Boolean}\n      description: The <xref href=\"System.Activities.Activity\"></xref> that represents the left operand.\n  overload: System.Activities.Expressions.OrElse.Left*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.OrElse.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Expressions.OrElse\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  nameWithType: OrElse.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  fullName: System.Activities.Expressions.OrElse.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.UpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.UpdateMapMetadata\n      description: To be added.\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: To be added.\n  overload: System.Activities.Expressions.OrElse.OnCreateDynamicUpdateMap*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.OrElse.Right\n  id: Right\n  parent: System.Activities.Expressions.OrElse\n  langs:\n  - csharp\n  name: Right\n  nameWithType: OrElse.Right\n  fullName: System.Activities.Expressions.OrElse.Right\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Gets or sets the right operand.\n  syntax:\n    content: public System.Activities.Activity<bool> Right { get; set; }\n    return:\n      type: System.Activities.Activity{System.Boolean}\n      description: The <xref href=\"System.Activities.Activity\"></xref> that represents the right operand.\n  overload: System.Activities.Expressions.OrElse.Right*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.Activity`1\n  isExternal: false\n  name: System.Activities.Activity<System.Boolean>\n- uid: System.Activities.Expressions.OrElse.#ctor\n  parent: System.Activities.Expressions.OrElse\n  isExternal: false\n  name: OrElse()\n  nameWithType: OrElse.OrElse()\n  fullName: System.Activities.Expressions.OrElse.OrElse()\n- uid: System.Activities.Expressions.OrElse.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.Expressions.OrElse\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: OrElse.CacheMetadata(ActivityMetadata)\n  fullName: System.Activities.Expressions.OrElse.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.ActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: ActivityMetadata\n  nameWithType: ActivityMetadata\n  fullName: System.Activities.ActivityMetadata\n- uid: System.Activities.Expressions.OrElse.Left\n  parent: System.Activities.Expressions.OrElse\n  isExternal: false\n  name: Left\n  nameWithType: OrElse.Left\n  fullName: System.Activities.Expressions.OrElse.Left\n- uid: System.Activities.Activity{System.Boolean}\n  parent: System.Activities\n  isExternal: false\n  name: Activity<Boolean>\n  nameWithType: Activity<Boolean>\n  fullName: System.Activities.Activity<System.Boolean>\n  spec.csharp:\n  - uid: System.Activities.Activity`1\n    name: Activity\n    nameWithType: Activity\n    fullName: Activity<System.Boolean>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.OrElse.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Expressions.OrElse\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  nameWithType: OrElse.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  fullName: System.Activities.Expressions.OrElse.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: UpdateMapMetadata\n  nameWithType: UpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Expressions.OrElse.Right\n  parent: System.Activities.Expressions.OrElse\n  isExternal: false\n  name: Right\n  nameWithType: OrElse.Right\n  fullName: System.Activities.Expressions.OrElse.Right\n- uid: System.Activities.Expressions.OrElse.#ctor*\n  parent: System.Activities.Expressions.OrElse\n  isExternal: false\n  name: OrElse\n  nameWithType: OrElse.OrElse\n- uid: System.Activities.Expressions.OrElse.CacheMetadata*\n  parent: System.Activities.Expressions.OrElse\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: OrElse.CacheMetadata\n- uid: System.Activities.Expressions.OrElse.Left*\n  parent: System.Activities.Expressions.OrElse\n  isExternal: false\n  name: Left\n  nameWithType: OrElse.Left\n- uid: System.Activities.Expressions.OrElse.OnCreateDynamicUpdateMap*\n  parent: System.Activities.Expressions.OrElse\n  isExternal: false\n  name: OnCreateDynamicUpdateMap\n  nameWithType: OrElse.OnCreateDynamicUpdateMap\n- uid: System.Activities.Expressions.OrElse.Right*\n  parent: System.Activities.Expressions.OrElse\n  isExternal: false\n  name: Right\n  nameWithType: OrElse.Right\n"}