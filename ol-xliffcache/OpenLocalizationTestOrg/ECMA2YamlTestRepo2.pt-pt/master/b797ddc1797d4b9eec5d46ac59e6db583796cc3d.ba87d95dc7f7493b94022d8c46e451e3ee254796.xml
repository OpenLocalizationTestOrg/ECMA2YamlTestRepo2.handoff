{"nodes":[{"pos":[1285,1406],"content":"Allows the use of declarative security actions to determine host protection requirements. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows the use of declarative security actions to determine host protection requirements. This class cannot be inherited.","pos":[0,121],"nodes":[{"content":"Allows the use of declarative security actions to determine host protection requirements.","pos":[0,89]},{"content":"This class cannot be inherited.","pos":[90,121]}]}]},{"pos":[1419,3495],"content":"This attribute affects only unmanaged applications that host the common language runtime and implement host protection, such as SQL Server. If the code is run in a client application or on a server that is not host-protected, the attribute \"evaporates\"; it is not detected and therefore not applied. When applied, the security action results in the creation of a link demand based on the host resources the class or method exposes.      > [!IMPORTANT] >  The purpose of this attribute is to enforce host-specific programming model guidelines, not security behavior.  Although a link demand is used to check for conformance to programming model requirements, the HostProtectionAttribute is not a security permission.       If the host does not have programming model requirements, the link demands do not occur.       This attribute identifies the following:      -   Methods or classes that do not fit the host programming model, but are otherwise benign.      -   Methods or classes that do not fit the host programming model and could lead to destabilizing server-managed user code.      -   Methods or classes that do not fit the host programming model and could lead to a destabilization of the server process itself.      > [!NOTE] >  If you are creating a class library that is to be called by applications that may execute in a host protected environment, you should apply this attribute to members that expose <xref:System.Security.Permissions.HostProtectionResource> resource categories. The .NET Framework class library members with this attribute cause only the immediate caller to be checked.  Your library member must also cause a check of its immediate caller in the same manner.      > [!NOTE] >  Do not use the [Ngen.exe (Native Image Generator)](~/add/includes/ajax-current-ext-md.md) to create a native image of assemblies that are protected by the HostProtectionAttribute. In a full-trust environment, the image is always loaded, without regard to the HostProtectionAttribute, and in a partial-trust environment the image is not loaded.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This attribute affects only unmanaged applications that host the common language runtime and implement host protection, such as SQL Server.","pos":[0,139]},{"content":"If the code is run in a client application or on a server that is not host-protected, the attribute \"evaporates\"; it is not detected and therefore not applied.","pos":[140,299]},{"content":"When applied, the security action results in the creation of a link demand based on the host resources the class or method exposes.","pos":[300,431]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  The purpose of this attribute is to enforce host-specific programming model guidelines, not security behavior.","pos":[437,565],"source":"      > [!IMPORTANT] >  The purpose of this attribute is to enforce host-specific programming model guidelines, not security behavior."},{"content":"Although a link demand is used to check for conformance to programming model requirements, the HostProtectionAttribute is not a security permission.","pos":[567,715]},{"content":"If the host does not have programming model requirements, the link demands do not occur.","pos":[722,810]},{"content":"This attribute identifies the following:      -   Methods or classes that do not fit the host programming model, but are otherwise benign.","pos":[817,955]},{"content":"-   Methods or classes that do not fit the host programming model and could lead to destabilizing server-managed user code.","pos":[961,1084]},{"content":"-   Methods or classes that do not fit the host programming model and could lead to a destabilization of the server process itself.","pos":[1090,1221]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If you are creating a class library that is to be called by applications that may execute in a host protected environment, you should apply this attribute to members that expose &lt;xref:System.Security.Permissions.HostProtectionResource&gt; resource categories.","pos":[1227,1496],"source":"      > [!NOTE] >  If you are creating a class library that is to be called by applications that may execute in a host protected environment, you should apply this attribute to members that expose <xref:System.Security.Permissions.HostProtectionResource> resource categories."},{"content":"The .NET Framework class library members with this attribute cause only the immediate caller to be checked.","pos":[1497,1604]},{"content":"Your library member must also cause a check of its immediate caller in the same manner.","pos":[1606,1693]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Do not use the <bpt id=\"p1\">[</bpt>Ngen.exe (Native Image Generator)<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> to create a native image of assemblies that are protected by the HostProtectionAttribute.","pos":[1699,1891],"source":"      > [!NOTE] >  Do not use the [Ngen.exe (Native Image Generator)](~/add/includes/ajax-current-ext-md.md) to create a native image of assemblies that are protected by the HostProtectionAttribute."},{"content":"In a full-trust environment, the image is always loaded, without regard to the HostProtectionAttribute, and in a partial-trust environment the image is not loaded.","pos":[1892,2055]}]},{"pos":[5326,5459],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.HostProtectionAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with default values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.HostProtectionAttribute\"></xref> class with default values."},{"pos":[5471,5600],"content":"This constructor creates a &lt;xref:System.Security.Permissions.HostProtectionAttribute&gt; with all Boolean properties set to <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This constructor creates a <xref:System.Security.Permissions.HostProtectionAttribute> with all Boolean properties set to `false`."},{"pos":[6369,6571],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.HostProtectionAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.HostProtectionAttribute\"></xref> class with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref> value."},{"pos":[6583,6658],"content":"This constructor should not be used. It is intended for infrastructure use.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor should not be used. It is intended for infrastructure use.","pos":[0,75],"nodes":[{"content":"This constructor should not be used.","pos":[0,36]},{"content":"It is intended for infrastructure use.","pos":[37,75]}]}]},{"pos":[6873,6955],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values."},{"pos":[7135,7226],"content":"<ph id=\"ph1\">&lt;code&gt;action&lt;/code&gt;</ph> is not <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>action</code> is not <xref href=\"System.Security.Permissions.SecurityAction\"></xref>."},{"pos":[7694,7747],"content":"Creates and returns a new host protection permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns a new host protection permission.","pos":[0,53]}]},{"pos":[7760,8070],"content":"This method should be called only by the security system, never by application code.       At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission corresponding to the attribute that this method returns.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method should be called only by the security system, never by application code.       At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission corresponding to the attribute that this method returns.","pos":[0,308],"nodes":[{"content":"This method should be called only by the security system, never by application code.","pos":[0,84]},{"content":"At compile time, attributes convert security declarations to a serialized form in metadata.","pos":[91,182]},{"content":"Declarative security data in metadata is created from the permission corresponding to the attribute that this method returns.","pos":[183,308]}]}]},{"pos":[8250,8344],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that corresponds to the current attribute.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.IPermission\"></xref> that corresponds to the current attribute."},{"pos":[8922,9001],"content":"Gets or sets a value indicating whether external process management is exposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether external process management is exposed.","pos":[0,79]}]},{"pos":[9013,9099],"content":"Code that exposes external process management might create or destroy other processes.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Code that exposes external process management might create or destroy other processes.","pos":[0,86]}]},{"pos":[9930,10187],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if external process management is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if external process management is exposed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,178],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if external process management is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[179,257],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[10758,10828],"content":"Gets or sets a value indicating whether external threading is exposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether external threading is exposed.","pos":[0,70]}]},{"pos":[10840,10963],"content":"Code that exposes external threading creates or manipulates threads other than its own, which might be harmful to the host.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Code that exposes external threading creates or manipulates threads other than its own, which might be harmful to the host.","pos":[0,123]}]},{"pos":[11790,12038],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if external threading is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if external threading is exposed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,169],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if external threading is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[170,248],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[12592,12691],"content":"Gets or sets a value indicating whether resources might leak memory if the operation is terminated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether resources might leak memory if the operation is terminated.","pos":[0,99]}]},{"pos":[12703,12843],"content":"Code might cause a resource leak on termination, if not protected by a safe handle or some other means of ensuring the release of resources.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Code might cause a resource leak on termination, if not protected by a safe handle or some other means of ensuring the release of resources.","pos":[0,140]}]},{"pos":[12966,13148],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if resources might leak memory on termination; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if resources might leak memory on termination; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13674,13773],"content":"Gets or sets flags specifying categories of functionality that are potentially harmful to the host.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets flags specifying categories of functionality that are potentially harmful to the host.","pos":[0,99]}]},{"pos":[13785,13947],"content":"The <xref:System.Security.Permissions.HostProtectionResource> flags specify the resources exposed by the method or class that are potentially harmful to the host.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Security.Permissions.HostProtectionResource&gt; flags specify the resources exposed by the method or class that are potentially harmful to the host.","pos":[0,162],"source":"The <xref:System.Security.Permissions.HostProtectionResource> flags specify the resources exposed by the method or class that are potentially harmful to the host."}]},{"pos":[14843,15039],"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.HostProtectionResource\"></xref> values. The default is <xref href=\"System.Security.Permissions.HostProtectionResource\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.HostProtectionResource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,108],"source":"A bitwise combination of the <xref href=\"System.Security.Permissions.HostProtectionResource\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.HostProtectionResource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[109,196],"source":" The default is <xref href=\"System.Security.Permissions.HostProtectionResource\"></xref>."}]},{"pos":[15625,15704],"content":"Gets or sets a value indicating whether the security infrastructure is exposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the security infrastructure is exposed.","pos":[0,79]}]},{"pos":[15716,15861],"content":"The use of a <xref:System.Security.Principal.WindowsIdentity> object to impersonate a user is an example of exposing the security infrastructure.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The use of a &lt;xref:System.Security.Principal.WindowsIdentity&gt; object to impersonate a user is an example of exposing the security infrastructure.","pos":[0,145],"source":"The use of a <xref:System.Security.Principal.WindowsIdentity> object to impersonate a user is an example of exposing the security infrastructure."}]},{"pos":[16701,16958],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the security infrastructure is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the security infrastructure is exposed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,178],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the security infrastructure is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[179,257],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[17567,17652],"content":"Gets or sets a value indicating whether self-affecting process management is exposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether self-affecting process management is exposed.","pos":[0,85]}]},{"pos":[17664,17758],"content":"Self-affecting process management code might exit the current process, terminating the server.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Self-affecting process management code might exit the current process, terminating the server.","pos":[0,94]}]},{"pos":[18602,18865],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if self-affecting process management is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if self-affecting process management is exposed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,184],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if self-affecting process management is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[185,263],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[19466,19542],"content":"Gets or sets a value indicating whether self-affecting threading is exposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether self-affecting threading is exposed.","pos":[0,76]}]},{"pos":[19554,19636],"content":"Self-affecting threading manipulates threads in a way that only affects user code.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Self-affecting threading manipulates threads in a way that only affects user code.","pos":[0,82]}]},{"pos":[20473,20727],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if self-affecting threading is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if self-affecting threading is exposed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,175],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if self-affecting threading is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[176,254],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[21271,21335],"content":"Gets or sets a value indicating whether shared state is exposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether shared state is exposed.","pos":[0,64]}]},{"pos":[21347,21449],"content":"When SharedState is <ph id=\"ph1\">`true`</ph>, it indicates that a state is exposed that might be shared between threads.","needQuote":true,"needEscape":true,"extradata":"MT","source":"When SharedState is `true`, it indicates that a state is exposed that might be shared between threads."},{"pos":[22267,22509],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if shared state is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if shared state is exposed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,163],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if shared state is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[164,242],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[23062,23129],"content":"Gets or sets a value indicating whether synchronization is exposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether synchronization is exposed.","pos":[0,67]}]},{"pos":[23966,24211],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if synchronization is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if synchronization is exposed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,166],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if synchronization is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[167,245],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[24703,24773],"content":"Gets or sets a value indicating whether the user interface is exposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the user interface is exposed.","pos":[0,70]}]},{"pos":[25587,25835],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user interface is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user interface is exposed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,169],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user interface is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[170,248],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.HostProtectionAttribute\n  id: HostProtectionAttribute\n  children:\n  - System.Security.Permissions.HostProtectionAttribute.#ctor\n  - System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  - System.Security.Permissions.HostProtectionAttribute.CreatePermission\n  - System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt\n  - System.Security.Permissions.HostProtectionAttribute.ExternalThreading\n  - System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort\n  - System.Security.Permissions.HostProtectionAttribute.Resources\n  - System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure\n  - System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt\n  - System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading\n  - System.Security.Permissions.HostProtectionAttribute.SharedState\n  - System.Security.Permissions.HostProtectionAttribute.Synchronization\n  - System.Security.Permissions.HostProtectionAttribute.UI\n  langs:\n  - csharp\n  name: HostProtectionAttribute\n  nameWithType: HostProtectionAttribute\n  fullName: System.Security.Permissions.HostProtectionAttribute\n  type: Class\n  summary: Allows the use of declarative security actions to determine host protection requirements. This class cannot be inherited.\n  remarks: \"This attribute affects only unmanaged applications that host the common language runtime and implement host protection, such as SQL Server. If the code is run in a client application or on a server that is not host-protected, the attribute \\\"evaporates\\\"; it is not detected and therefore not applied. When applied, the security action results in the creation of a link demand based on the host resources the class or method exposes.  \\n  \\n> [!IMPORTANT]\\n>  The purpose of this attribute is to enforce host-specific programming model guidelines, not security behavior.  Although a link demand is used to check for conformance to programming model requirements, the HostProtectionAttribute is not a security permission.  \\n  \\n If the host does not have programming model requirements, the link demands do not occur.  \\n  \\n This attribute identifies the following:  \\n  \\n-   Methods or classes that do not fit the host programming model, but are otherwise benign.  \\n  \\n-   Methods or classes that do not fit the host programming model and could lead to destabilizing server-managed user code.  \\n  \\n-   Methods or classes that do not fit the host programming model and could lead to a destabilization of the server process itself.  \\n  \\n> [!NOTE]\\n>  If you are creating a class library that is to be called by applications that may execute in a host protected environment, you should apply this attribute to members that expose <xref:System.Security.Permissions.HostProtectionResource> resource categories. The .NET Framework class library members with this attribute cause only the immediate caller to be checked.  Your library member must also cause a check of its immediate caller in the same manner.  \\n  \\n> [!NOTE]\\n>  Do not use the [Ngen.exe (Native Image Generator)](~/add/includes/ajax-current-ext-md.md) to create a native image of assemblies that are protected by the HostProtectionAttribute. In a full-trust environment, the image is always loaded, without regard to the HostProtectionAttribute, and in a partial-trust environment the image is not loaded.\"\n  example:\n  - \"The following code example illustrates the use of the HostProtectionAttribute attribute with a variety of <xref:System.Security.Permissions.HostProtectionResource> values.  \\n  \\n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/add/codesnippet/csharp/t-system.security.permis_7_1.cs)]\\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/add/codesnippet/cpp/t-system.security.permis_7_1.cpp)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/add/codesnippet/visualbasic/t-system.security.permis_7_1.vb)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Delegate, AllowMultiple=true, Inherited=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class HostProtectionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute\n  inheritance:\n  - System.Attribute\n  - System.Security.Permissions.SecurityAttribute\n  - System.Security.Permissions.CodeAccessSecurityAttribute\n  implements: []\n  inheritedMembers:\n  - System.Security.Permissions.SecurityAttribute.Action\n  - System.Security.Permissions.SecurityAttribute.Unrestricted\n  platform:\n  - net462\n- uid: System.Security.Permissions.HostProtectionAttribute.#ctor\n  id: '#ctor'\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: HostProtectionAttribute()\n  nameWithType: HostProtectionAttribute.HostProtectionAttribute()\n  fullName: System.Security.Permissions.HostProtectionAttribute.HostProtectionAttribute()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.HostProtectionAttribute\"></xref> class with default values.\n  remarks: This constructor creates a <xref:System.Security.Permissions.HostProtectionAttribute> with all Boolean properties set to `false`.\n  syntax:\n    content: public HostProtectionAttribute ();\n    parameters: []\n  overload: System.Security.Permissions.HostProtectionAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  id: '#ctor(System.Security.Permissions.SecurityAction)'\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: HostProtectionAttribute(SecurityAction)\n  nameWithType: HostProtectionAttribute.HostProtectionAttribute(SecurityAction)\n  fullName: System.Security.Permissions.HostProtectionAttribute.HostProtectionAttribute(SecurityAction)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.HostProtectionAttribute\"></xref> class with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref> value.\n  remarks: This constructor should not be used. It is intended for infrastructure use.\n  syntax:\n    content: public HostProtectionAttribute (System.Security.Permissions.SecurityAction action);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values.\n  overload: System.Security.Permissions.HostProtectionAttribute.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>action</code> is not <xref href=\"System.Security.Permissions.SecurityAction\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Permissions.HostProtectionAttribute.CreatePermission\n  id: CreatePermission\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: CreatePermission()\n  nameWithType: HostProtectionAttribute.CreatePermission()\n  fullName: System.Security.Permissions.HostProtectionAttribute.CreatePermission()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates and returns a new host protection permission.\n  remarks: \"This method should be called only by the security system, never by application code.  \\n  \\n At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission corresponding to the attribute that this method returns.\"\n  syntax:\n    content: public override System.Security.IPermission CreatePermission ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: An <xref href=\"System.Security.IPermission\"></xref> that corresponds to the current attribute.\n  overload: System.Security.Permissions.HostProtectionAttribute.CreatePermission*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt\n  id: ExternalProcessMgmt\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: ExternalProcessMgmt\n  nameWithType: HostProtectionAttribute.ExternalProcessMgmt\n  fullName: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether external process management is exposed.\n  remarks: Code that exposes external process management might create or destroy other processes.\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the ExternalProcessMgmt property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \\n  \\n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/add/codesnippet/csharp/p-system.security.permis_2_1.cs)]\\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/add/codesnippet/cpp/p-system.security.permis_2_1.cpp)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/add/codesnippet/visualbasic/p-system.security.permis_2_1.vb)]\"\n  syntax:\n    content: public bool ExternalProcessMgmt { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if external process management is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.HostProtectionAttribute.ExternalThreading\n  id: ExternalThreading\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: ExternalThreading\n  nameWithType: HostProtectionAttribute.ExternalThreading\n  fullName: System.Security.Permissions.HostProtectionAttribute.ExternalThreading\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether external threading is exposed.\n  remarks: Code that exposes external threading creates or manipulates threads other than its own, which might be harmful to the host.\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the ExternalThreading property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \\n  \\n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/csharp/p-system.security.permis_8_1.cs)]\\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/cpp/p-system.security.permis_8_1.cpp)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/visualbasic/p-system.security.permis_8_1.vb)]\"\n  syntax:\n    content: public bool ExternalThreading { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if external threading is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.HostProtectionAttribute.ExternalThreading*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort\n  id: MayLeakOnAbort\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: MayLeakOnAbort\n  nameWithType: HostProtectionAttribute.MayLeakOnAbort\n  fullName: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether resources might leak memory if the operation is terminated.\n  remarks: Code might cause a resource leak on termination, if not protected by a safe handle or some other means of ensuring the release of resources.\n  syntax:\n    content: public bool MayLeakOnAbort { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if resources might leak memory on termination; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.HostProtectionAttribute.Resources\n  id: Resources\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: Resources\n  nameWithType: HostProtectionAttribute.Resources\n  fullName: System.Security.Permissions.HostProtectionAttribute.Resources\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets flags specifying categories of functionality that are potentially harmful to the host.\n  remarks: The <xref:System.Security.Permissions.HostProtectionResource> flags specify the resources exposed by the method or class that are potentially harmful to the host.\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the Resources property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \\n  \\n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/csharp/p-system.security.permis_17_1.cs)]\\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/cpp/p-system.security.permis_17_1.cpp)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/visualbasic/p-system.security.permis_17_1.vb)]\"\n  syntax:\n    content: public System.Security.Permissions.HostProtectionResource Resources { get; set; }\n    return:\n      type: System.Security.Permissions.HostProtectionResource\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.HostProtectionResource\"></xref> values. The default is <xref href=\"System.Security.Permissions.HostProtectionResource\"></xref>.\n  overload: System.Security.Permissions.HostProtectionAttribute.Resources*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure\n  id: SecurityInfrastructure\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: SecurityInfrastructure\n  nameWithType: HostProtectionAttribute.SecurityInfrastructure\n  fullName: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether the security infrastructure is exposed.\n  remarks: The use of a <xref:System.Security.Principal.WindowsIdentity> object to impersonate a user is an example of exposing the security infrastructure.\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the SecurityInfrastructure property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \\n  \\n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/add/codesnippet/csharp/p-system.security.permis_19_1.cs)]\\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/add/codesnippet/cpp/p-system.security.permis_19_1.cpp)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/add/codesnippet/visualbasic/p-system.security.permis_19_1.vb)]\"\n  syntax:\n    content: public bool SecurityInfrastructure { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the security infrastructure is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt\n  id: SelfAffectingProcessMgmt\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: SelfAffectingProcessMgmt\n  nameWithType: HostProtectionAttribute.SelfAffectingProcessMgmt\n  fullName: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether self-affecting process management is exposed.\n  remarks: Self-affecting process management code might exit the current process, terminating the server.\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the SelfAffectingProcessMgmt property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \\n  \\n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/csharp/p-system.security.permis_26_1.cs)]\\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/cpp/p-system.security.permis_26_1.cpp)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/add/codesnippet/visualbasic/p-system.security.permis_26_1.vb)]\"\n  syntax:\n    content: public bool SelfAffectingProcessMgmt { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if self-affecting process management is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading\n  id: SelfAffectingThreading\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: SelfAffectingThreading\n  nameWithType: HostProtectionAttribute.SelfAffectingThreading\n  fullName: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether self-affecting threading is exposed.\n  remarks: Self-affecting threading manipulates threads in a way that only affects user code.\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the SelfAffectingThreading property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \\n  \\n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/csharp/p-system.security.permis_3_1.cs)]\\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/cpp/p-system.security.permis_3_1.cpp)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/visualbasic/p-system.security.permis_3_1.vb)]\"\n  syntax:\n    content: public bool SelfAffectingThreading { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if self-affecting threading is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.HostProtectionAttribute.SharedState\n  id: SharedState\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: SharedState\n  nameWithType: HostProtectionAttribute.SharedState\n  fullName: System.Security.Permissions.HostProtectionAttribute.SharedState\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether shared state is exposed.\n  remarks: When SharedState is `true`, it indicates that a state is exposed that might be shared between threads.\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the SharedState property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \\n  \\n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/csharp/p-system.security.permis_15_1.cs)]\\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/cpp/p-system.security.permis_15_1.cpp)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/visualbasic/p-system.security.permis_15_1.vb)]\"\n  syntax:\n    content: public bool SharedState { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if shared state is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.HostProtectionAttribute.SharedState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.HostProtectionAttribute.Synchronization\n  id: Synchronization\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: Synchronization\n  nameWithType: HostProtectionAttribute.Synchronization\n  fullName: System.Security.Permissions.HostProtectionAttribute.Synchronization\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether synchronization is exposed.\n  remarks: ''\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the Synchronization property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \\n  \\n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/csharp/p-system.security.permis_4_1.cs)]\\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/cpp/p-system.security.permis_4_1.cpp)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/add/codesnippet/visualbasic/p-system.security.permis_4_1.vb)]\"\n  syntax:\n    content: public bool Synchronization { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if synchronization is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.HostProtectionAttribute.Synchronization*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.HostProtectionAttribute.UI\n  id: UI\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: UI\n  nameWithType: HostProtectionAttribute.UI\n  fullName: System.Security.Permissions.HostProtectionAttribute.UI\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether the user interface is exposed.\n  remarks: ''\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the UI property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \\n  \\n [!code-cs[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/csharp/p-system.security.permis_12_1.cs)]\\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/cpp/p-system.security.permis_12_1.cpp)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/add/codesnippet/visualbasic/p-system.security.permis_12_1.vb)]\"\n  syntax:\n    content: public bool UI { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user interface is exposed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.HostProtectionAttribute.UI*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute\n  isExternal: false\n  name: System.Security.Permissions.CodeAccessSecurityAttribute\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Security.Permissions.HostProtectionAttribute.#ctor\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: HostProtectionAttribute()\n  nameWithType: HostProtectionAttribute.HostProtectionAttribute()\n  fullName: System.Security.Permissions.HostProtectionAttribute.HostProtectionAttribute()\n- uid: System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: HostProtectionAttribute(SecurityAction)\n  nameWithType: HostProtectionAttribute.HostProtectionAttribute(SecurityAction)\n  fullName: System.Security.Permissions.HostProtectionAttribute.HostProtectionAttribute(SecurityAction)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.Security.Permissions.HostProtectionAttribute.CreatePermission\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: CreatePermission()\n  nameWithType: HostProtectionAttribute.CreatePermission()\n  fullName: System.Security.Permissions.HostProtectionAttribute.CreatePermission()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: ExternalProcessMgmt\n  nameWithType: HostProtectionAttribute.ExternalProcessMgmt\n  fullName: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.HostProtectionAttribute.ExternalThreading\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: ExternalThreading\n  nameWithType: HostProtectionAttribute.ExternalThreading\n  fullName: System.Security.Permissions.HostProtectionAttribute.ExternalThreading\n- uid: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: MayLeakOnAbort\n  nameWithType: HostProtectionAttribute.MayLeakOnAbort\n  fullName: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort\n- uid: System.Security.Permissions.HostProtectionAttribute.Resources\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: Resources\n  nameWithType: HostProtectionAttribute.Resources\n  fullName: System.Security.Permissions.HostProtectionAttribute.Resources\n- uid: System.Security.Permissions.HostProtectionResource\n  parent: System.Security.Permissions\n  isExternal: false\n  name: HostProtectionResource\n  nameWithType: HostProtectionResource\n  fullName: System.Security.Permissions.HostProtectionResource\n- uid: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: SecurityInfrastructure\n  nameWithType: HostProtectionAttribute.SecurityInfrastructure\n  fullName: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure\n- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: SelfAffectingProcessMgmt\n  nameWithType: HostProtectionAttribute.SelfAffectingProcessMgmt\n  fullName: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt\n- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: SelfAffectingThreading\n  nameWithType: HostProtectionAttribute.SelfAffectingThreading\n  fullName: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading\n- uid: System.Security.Permissions.HostProtectionAttribute.SharedState\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: SharedState\n  nameWithType: HostProtectionAttribute.SharedState\n  fullName: System.Security.Permissions.HostProtectionAttribute.SharedState\n- uid: System.Security.Permissions.HostProtectionAttribute.Synchronization\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: Synchronization\n  nameWithType: HostProtectionAttribute.Synchronization\n  fullName: System.Security.Permissions.HostProtectionAttribute.Synchronization\n- uid: System.Security.Permissions.HostProtectionAttribute.UI\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: UI\n  nameWithType: HostProtectionAttribute.UI\n  fullName: System.Security.Permissions.HostProtectionAttribute.UI\n- uid: System.Security.Permissions.HostProtectionAttribute.#ctor*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: HostProtectionAttribute\n  nameWithType: HostProtectionAttribute.HostProtectionAttribute\n- uid: System.Security.Permissions.HostProtectionAttribute.CreatePermission*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: CreatePermission\n  nameWithType: HostProtectionAttribute.CreatePermission\n- uid: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: ExternalProcessMgmt\n  nameWithType: HostProtectionAttribute.ExternalProcessMgmt\n- uid: System.Security.Permissions.HostProtectionAttribute.ExternalThreading*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: ExternalThreading\n  nameWithType: HostProtectionAttribute.ExternalThreading\n- uid: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: MayLeakOnAbort\n  nameWithType: HostProtectionAttribute.MayLeakOnAbort\n- uid: System.Security.Permissions.HostProtectionAttribute.Resources*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: Resources\n  nameWithType: HostProtectionAttribute.Resources\n- uid: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: SecurityInfrastructure\n  nameWithType: HostProtectionAttribute.SecurityInfrastructure\n- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: SelfAffectingProcessMgmt\n  nameWithType: HostProtectionAttribute.SelfAffectingProcessMgmt\n- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: SelfAffectingThreading\n  nameWithType: HostProtectionAttribute.SelfAffectingThreading\n- uid: System.Security.Permissions.HostProtectionAttribute.SharedState*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: SharedState\n  nameWithType: HostProtectionAttribute.SharedState\n- uid: System.Security.Permissions.HostProtectionAttribute.Synchronization*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: Synchronization\n  nameWithType: HostProtectionAttribute.Synchronization\n- uid: System.Security.Permissions.HostProtectionAttribute.UI*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: UI\n  nameWithType: HostProtectionAttribute.UI\n"}