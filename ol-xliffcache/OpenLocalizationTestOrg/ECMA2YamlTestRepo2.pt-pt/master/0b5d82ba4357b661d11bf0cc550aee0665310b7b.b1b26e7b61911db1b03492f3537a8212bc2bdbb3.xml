{"nodes":[{"pos":[1094,1202],"content":"Defines the extension methods to the <xref href=\"System.Data.DataRow\"></xref> class. This is a static class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the extension methods to the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[0,84],"source":"Defines the extension methods to the <xref href=\"System.Data.DataRow\"></xref> class."},{"content":"This is a static class.","pos":[85,108]}]},{"pos":[1214,1861],"content":"The <xref:System.Data.DataSet> API has been extended with two new methods of the <xref:System.Data.DataRow> class, <xref:System.Data.DataRowExtensions.Field%2A> and <xref:System.Data.DataRowExtensions.SetField%2A>. You can use these to form [!INCLUDE[vbteclinqext](~/add/includes/vbteclinqext-md.md)] expressions and method queries against <xref:System.Data.DataTable> objects. They are the recommended methods to use for accessing column values within [!INCLUDE[vbteclinqext](~/add/includes/vbteclinqext-md.md)] expressions and method queries. For more information, see [Generic Field and SetField Methods](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Data.DataSet&gt; API has been extended with two new methods of the &lt;xref:System.Data.DataRow&gt; class, &lt;xref:System.Data.DataRowExtensions.Field%2A&gt; and &lt;xref:System.Data.DataRowExtensions.SetField%2A&gt;.","pos":[0,214],"source":"The <xref:System.Data.DataSet> API has been extended with two new methods of the <xref:System.Data.DataRow> class, <xref:System.Data.DataRowExtensions.Field%2A> and <xref:System.Data.DataRowExtensions.SetField%2A>."},{"content":"You can use these to form <ph id=\"ph1\">[!INCLUDE[vbteclinqext](~/add/includes/vbteclinqext-md.md)]</ph> expressions and method queries against &lt;xref:System.Data.DataTable&gt; objects.","pos":[215,377],"source":" You can use these to form [!INCLUDE[vbteclinqext](~/add/includes/vbteclinqext-md.md)] expressions and method queries against <xref:System.Data.DataTable> objects."},{"content":"They are the recommended methods to use for accessing column values within <ph id=\"ph1\">[!INCLUDE[vbteclinqext](~/add/includes/vbteclinqext-md.md)]</ph> expressions and method queries.","pos":[378,544],"source":" They are the recommended methods to use for accessing column values within [!INCLUDE[vbteclinqext](~/add/includes/vbteclinqext-md.md)] expressions and method queries."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Generic Field and SetField Methods<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[545,647],"source":" For more information, see [Generic Field and SetField Methods](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[2672,2684],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2756,2768],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2814,2826],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3523,3535],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3602,3614],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3660,3672],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4376,4388],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4455,4467],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4513,4525],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5406,5418],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5490,5502],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5579,5591],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5637,5649],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6481,6493],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6560,6572],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6649,6661],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6707,6719],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7558,7570],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7637,7649],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7726,7738],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7784,7796],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8586,8598],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8670,8682],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8732,8744],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9488,9500],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9567,9579],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9629,9641],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10392,10404],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10471,10483],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10533,10545],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.DataRowExtensions\n  id: DataRowExtensions\n  children:\n  - System.Data.DataRowExtensions.Field``1(System.Data.DataRow@,System.Data.DataColumn)\n  - System.Data.DataRowExtensions.Field``1(System.Data.DataRow@,System.Int32)\n  - System.Data.DataRowExtensions.Field``1(System.Data.DataRow@,System.String)\n  - System.Data.DataRowExtensions.Field``1(System.Data.DataRow@,System.Data.DataColumn,System.Data.DataRowVersion)\n  - System.Data.DataRowExtensions.Field``1(System.Data.DataRow@,System.Int32,System.Data.DataRowVersion)\n  - System.Data.DataRowExtensions.Field``1(System.Data.DataRow@,System.String,System.Data.DataRowVersion)\n  - System.Data.DataRowExtensions.SetField``1(System.Data.DataRow@,System.Data.DataColumn,``0)\n  - System.Data.DataRowExtensions.SetField``1(System.Data.DataRow@,System.Int32,``0)\n  - System.Data.DataRowExtensions.SetField``1(System.Data.DataRow@,System.String,``0)\n  langs:\n  - csharp\n  name: DataRowExtensions\n  nameWithType: DataRowExtensions\n  fullName: System.Data.DataRowExtensions\n  type: Class\n  summary: Defines the extension methods to the <xref href=\"System.Data.DataRow\"></xref> class. This is a static class.\n  remarks: The <xref:System.Data.DataSet> API has been extended with two new methods of the <xref:System.Data.DataRow> class, <xref:System.Data.DataRowExtensions.Field%2A> and <xref:System.Data.DataRowExtensions.SetField%2A>. You can use these to form [!INCLUDE[vbteclinqext](~/add/includes/vbteclinqext-md.md)] expressions and method queries against <xref:System.Data.DataTable> objects. They are the recommended methods to use for accessing column values within [!INCLUDE[vbteclinqext](~/add/includes/vbteclinqext-md.md)] expressions and method queries. For more information, see [Generic Field and SetField Methods](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static class DataRowExtensions\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow@,System.Data.DataColumn)\n  id: Field``1(System.Data.DataRow@,System.Data.DataColumn)\n  parent: System.Data.DataRowExtensions\n  langs:\n  - csharp\n  name: Field(DataRow,DataColumn)\n  nameWithType: DataRowExtensions.Field(DataRow,DataColumn)\n  fullName: System.Data.DataRowExtensions.Field(DataRow,DataColumn)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static T Field<T> (this System.Data.DataRow row, System.Data.DataColumn column);\n    parameters:\n    - id: row\n      type: System.Data.DataRow\n      description: To be added.\n    - id: column\n      type: System.Data.DataColumn\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.Data.DataRowExtensions.Field<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow@,System.Int32)\n  id: Field``1(System.Data.DataRow@,System.Int32)\n  parent: System.Data.DataRowExtensions\n  langs:\n  - csharp\n  name: Field(DataRow,Int32)\n  nameWithType: DataRowExtensions.Field(DataRow,Int32)\n  fullName: System.Data.DataRowExtensions.Field(DataRow,Int32)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static T Field<T> (this System.Data.DataRow row, int columnIndex);\n    parameters:\n    - id: row\n      type: System.Data.DataRow\n      description: To be added.\n    - id: columnIndex\n      type: System.Int32\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.Data.DataRowExtensions.Field<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow@,System.String)\n  id: Field``1(System.Data.DataRow@,System.String)\n  parent: System.Data.DataRowExtensions\n  langs:\n  - csharp\n  name: Field(DataRow,String)\n  nameWithType: DataRowExtensions.Field(DataRow,String)\n  fullName: System.Data.DataRowExtensions.Field(DataRow,String)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static T Field<T> (this System.Data.DataRow row, string columnName);\n    parameters:\n    - id: row\n      type: System.Data.DataRow\n      description: To be added.\n    - id: columnName\n      type: System.String\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.Data.DataRowExtensions.Field<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow@,System.Data.DataColumn,System.Data.DataRowVersion)\n  id: Field``1(System.Data.DataRow@,System.Data.DataColumn,System.Data.DataRowVersion)\n  parent: System.Data.DataRowExtensions\n  langs:\n  - csharp\n  name: Field(DataRow,DataColumn,DataRowVersion)\n  nameWithType: DataRowExtensions.Field(DataRow,DataColumn,DataRowVersion)\n  fullName: System.Data.DataRowExtensions.Field(DataRow,DataColumn,DataRowVersion)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static T Field<T> (this System.Data.DataRow row, System.Data.DataColumn column, System.Data.DataRowVersion version);\n    parameters:\n    - id: row\n      type: System.Data.DataRow\n      description: To be added.\n    - id: column\n      type: System.Data.DataColumn\n      description: To be added.\n    - id: version\n      type: System.Data.DataRowVersion\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.Data.DataRowExtensions.Field<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow@,System.Int32,System.Data.DataRowVersion)\n  id: Field``1(System.Data.DataRow@,System.Int32,System.Data.DataRowVersion)\n  parent: System.Data.DataRowExtensions\n  langs:\n  - csharp\n  name: Field(DataRow,Int32,DataRowVersion)\n  nameWithType: DataRowExtensions.Field(DataRow,Int32,DataRowVersion)\n  fullName: System.Data.DataRowExtensions.Field(DataRow,Int32,DataRowVersion)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static T Field<T> (this System.Data.DataRow row, int columnIndex, System.Data.DataRowVersion version);\n    parameters:\n    - id: row\n      type: System.Data.DataRow\n      description: To be added.\n    - id: columnIndex\n      type: System.Int32\n      description: To be added.\n    - id: version\n      type: System.Data.DataRowVersion\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.Data.DataRowExtensions.Field<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow@,System.String,System.Data.DataRowVersion)\n  id: Field``1(System.Data.DataRow@,System.String,System.Data.DataRowVersion)\n  parent: System.Data.DataRowExtensions\n  langs:\n  - csharp\n  name: Field(DataRow,String,DataRowVersion)\n  nameWithType: DataRowExtensions.Field(DataRow,String,DataRowVersion)\n  fullName: System.Data.DataRowExtensions.Field(DataRow,String,DataRowVersion)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static T Field<T> (this System.Data.DataRow row, string columnName, System.Data.DataRowVersion version);\n    parameters:\n    - id: row\n      type: System.Data.DataRow\n      description: To be added.\n    - id: columnName\n      type: System.String\n      description: To be added.\n    - id: version\n      type: System.Data.DataRowVersion\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.Data.DataRowExtensions.Field<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRowExtensions.SetField``1(System.Data.DataRow@,System.Data.DataColumn,``0)\n  id: SetField``1(System.Data.DataRow@,System.Data.DataColumn,``0)\n  parent: System.Data.DataRowExtensions\n  langs:\n  - csharp\n  name: SetField(DataRow,DataColumn,T)\n  nameWithType: DataRowExtensions.SetField(DataRow,DataColumn,T)\n  fullName: System.Data.DataRowExtensions.SetField(DataRow,DataColumn,T)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static void SetField<T> (this System.Data.DataRow row, System.Data.DataColumn column, T value);\n    parameters:\n    - id: row\n      type: System.Data.DataRow\n      description: To be added.\n    - id: column\n      type: System.Data.DataColumn\n      description: To be added.\n    - id: value\n      type: T\n      description: To be added.\n  overload: System.Data.DataRowExtensions.SetField<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRowExtensions.SetField``1(System.Data.DataRow@,System.Int32,``0)\n  id: SetField``1(System.Data.DataRow@,System.Int32,``0)\n  parent: System.Data.DataRowExtensions\n  langs:\n  - csharp\n  name: SetField(DataRow,Int32,T)\n  nameWithType: DataRowExtensions.SetField(DataRow,Int32,T)\n  fullName: System.Data.DataRowExtensions.SetField(DataRow,Int32,T)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static void SetField<T> (this System.Data.DataRow row, int columnIndex, T value);\n    parameters:\n    - id: row\n      type: System.Data.DataRow\n      description: To be added.\n    - id: columnIndex\n      type: System.Int32\n      description: To be added.\n    - id: value\n      type: T\n      description: To be added.\n  overload: System.Data.DataRowExtensions.SetField<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.DataRowExtensions.SetField``1(System.Data.DataRow@,System.String,``0)\n  id: SetField``1(System.Data.DataRow@,System.String,``0)\n  parent: System.Data.DataRowExtensions\n  langs:\n  - csharp\n  name: SetField(DataRow,String,T)\n  nameWithType: DataRowExtensions.SetField(DataRow,String,T)\n  fullName: System.Data.DataRowExtensions.SetField(DataRow,String,T)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static void SetField<T> (this System.Data.DataRow row, string columnName, T value);\n    parameters:\n    - id: row\n      type: System.Data.DataRow\n      description: To be added.\n    - id: columnName\n      type: System.String\n      description: To be added.\n    - id: value\n      type: T\n      description: To be added.\n  overload: System.Data.DataRowExtensions.SetField<T>*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow@,System.Data.DataColumn)\n  parent: System.Data.DataRowExtensions\n  isExternal: false\n  name: Field(DataRow,DataColumn)\n  nameWithType: DataRowExtensions.Field(DataRow,DataColumn)\n  fullName: System.Data.DataRowExtensions.Field(DataRow,DataColumn)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Data.DataRow\n  parent: System.Data\n  isExternal: false\n  name: DataRow\n  nameWithType: DataRow\n  fullName: System.Data.DataRow\n- uid: System.Data.DataColumn\n  parent: System.Data\n  isExternal: false\n  name: DataColumn\n  nameWithType: DataColumn\n  fullName: System.Data.DataColumn\n- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow@,System.Int32)\n  parent: System.Data.DataRowExtensions\n  isExternal: false\n  name: Field(DataRow,Int32)\n  nameWithType: DataRowExtensions.Field(DataRow,Int32)\n  fullName: System.Data.DataRowExtensions.Field(DataRow,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow@,System.String)\n  parent: System.Data.DataRowExtensions\n  isExternal: false\n  name: Field(DataRow,String)\n  nameWithType: DataRowExtensions.Field(DataRow,String)\n  fullName: System.Data.DataRowExtensions.Field(DataRow,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow@,System.Data.DataColumn,System.Data.DataRowVersion)\n  parent: System.Data.DataRowExtensions\n  isExternal: false\n  name: Field(DataRow,DataColumn,DataRowVersion)\n  nameWithType: DataRowExtensions.Field(DataRow,DataColumn,DataRowVersion)\n  fullName: System.Data.DataRowExtensions.Field(DataRow,DataColumn,DataRowVersion)\n- uid: System.Data.DataRowVersion\n  parent: System.Data\n  isExternal: false\n  name: DataRowVersion\n  nameWithType: DataRowVersion\n  fullName: System.Data.DataRowVersion\n- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow@,System.Int32,System.Data.DataRowVersion)\n  parent: System.Data.DataRowExtensions\n  isExternal: false\n  name: Field(DataRow,Int32,DataRowVersion)\n  nameWithType: DataRowExtensions.Field(DataRow,Int32,DataRowVersion)\n  fullName: System.Data.DataRowExtensions.Field(DataRow,Int32,DataRowVersion)\n- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow@,System.String,System.Data.DataRowVersion)\n  parent: System.Data.DataRowExtensions\n  isExternal: false\n  name: Field(DataRow,String,DataRowVersion)\n  nameWithType: DataRowExtensions.Field(DataRow,String,DataRowVersion)\n  fullName: System.Data.DataRowExtensions.Field(DataRow,String,DataRowVersion)\n- uid: System.Data.DataRowExtensions.SetField``1(System.Data.DataRow@,System.Data.DataColumn,``0)\n  parent: System.Data.DataRowExtensions\n  isExternal: false\n  name: SetField(DataRow,DataColumn,T)\n  nameWithType: DataRowExtensions.SetField(DataRow,DataColumn,T)\n  fullName: System.Data.DataRowExtensions.SetField(DataRow,DataColumn,T)\n- uid: System.Data.DataRowExtensions.SetField``1(System.Data.DataRow@,System.Int32,``0)\n  parent: System.Data.DataRowExtensions\n  isExternal: false\n  name: SetField(DataRow,Int32,T)\n  nameWithType: DataRowExtensions.SetField(DataRow,Int32,T)\n  fullName: System.Data.DataRowExtensions.SetField(DataRow,Int32,T)\n- uid: System.Data.DataRowExtensions.SetField``1(System.Data.DataRow@,System.String,``0)\n  parent: System.Data.DataRowExtensions\n  isExternal: false\n  name: SetField(DataRow,String,T)\n  nameWithType: DataRowExtensions.SetField(DataRow,String,T)\n  fullName: System.Data.DataRowExtensions.SetField(DataRow,String,T)\n- uid: System.Data.DataRowExtensions.Field<T>*\n  parent: System.Data.DataRowExtensions\n  isExternal: false\n  name: Field<T>\n  nameWithType: DataRowExtensions.Field<T>\n- uid: System.Data.DataRowExtensions.SetField<T>*\n  parent: System.Data.DataRowExtensions\n  isExternal: false\n  name: SetField<T>\n  nameWithType: DataRowExtensions.SetField<T>\n"}