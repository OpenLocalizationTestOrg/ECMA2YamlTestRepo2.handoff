{"nodes":[{"pos":[776,880],"content":"Abstract base class for the channel dispatcher that accepts channels and associates them with a service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Abstract base class for the channel dispatcher that accepts channels and associates them with a service.","pos":[0,104]}]},{"pos":[893,2626],"content":"This is used by developers who want to keep the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] programming model but replace the system-provided runtime. Such applications will pull messages out of channels and handle them directly with user-defined dispatchers. To use ChannelDispatcherBase , create a class derived from it, extend <xref:System.ServiceModel.ServiceHost> and override <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, adding instances of your class derived from ChannelDispatcherBase to <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.       The <xref:System.ServiceModel.Channels.IChannelListener> and the <xref:System.ServiceModel.ServiceHost>, associated with the ChannelDispatcherBase object are available for inspection or modification through the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> and <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> respectively.       <xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> or <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> methods when adding or removing a ChannelDispatcherBase item from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.       <xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> during shutdown before closing InstanceContexts. [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] uses this call to close datagram channels and wait for all messages to get to an InstanceContext.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This is used by developers who want to keep the <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> programming model but replace the system-provided runtime.","pos":[0,165],"source":"This is used by developers who want to keep the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] programming model but replace the system-provided runtime."},{"content":"Such applications will pull messages out of channels and handle them directly with user-defined dispatchers.","pos":[166,274]},{"content":"To use ChannelDispatcherBase , create a class derived from it, extend &lt;xref:System.ServiceModel.ServiceHost&gt; and override &lt;xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A&gt;, adding instances of your class derived from ChannelDispatcherBase to &lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;.","pos":[275,596],"source":" To use ChannelDispatcherBase , create a class derived from it, extend <xref:System.ServiceModel.ServiceHost> and override <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, adding instances of your class derived from ChannelDispatcherBase to <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>."},{"content":"The &lt;xref:System.ServiceModel.Channels.IChannelListener&gt; and the &lt;xref:System.ServiceModel.ServiceHost&gt;, associated with the ChannelDispatcherBase object are available for inspection or modification through the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A&gt; and &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt; respectively.","pos":[603,971],"source":"       The <xref:System.ServiceModel.Channels.IChannelListener> and the <xref:System.ServiceModel.ServiceHost>, associated with the ChannelDispatcherBase object are available for inspection or modification through the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> and <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> respectively."},{"content":"&lt;xref:System.ServiceModel.ServiceHost&gt; calls the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29&gt; or &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29&gt; methods when adding or removing a ChannelDispatcherBase item from its &lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt; collection.","pos":[978,1392],"source":"       <xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> or <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> methods when adding or removing a ChannelDispatcherBase item from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection."},{"content":"&lt;xref:System.ServiceModel.ServiceHost&gt; calls the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A&gt; during shutdown before closing InstanceContexts.","pos":[1399,1570],"source":"       <xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> during shutdown before closing InstanceContexts."},{"content":"<ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> uses this call to close datagram channels and wait for all messages to get to an InstanceContext.","pos":[1571,1727],"source":"[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] uses this call to close datagram channels and wait for all messages to get to an InstanceContext."}]},{"pos":[3338,3452],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcherBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcherBase\"></xref> class."},{"pos":[4171,4258],"content":"When overridden in a derived class, attaches the channel dispatcher to a specific host.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, attaches the channel dispatcher to a specific host.","pos":[0,87]}]},{"pos":[4271,5026],"content":"This method can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState> state, as this is the only state that is both mutable and not disposed.       A <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is added to its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.  This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to hook events and inspect the <xref:System.ServiceModel.ServiceHost>, and provides the value that should be returned from the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState> state, as this is the only state that is both mutable and not disposed.       A <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is added to its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.  This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to hook events and inspect the <xref:System.ServiceModel.ServiceHost>, and provides the value that should be returned from the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> property.","pos":[0,753],"nodes":[{"content":"This method can only be set when the instance of the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt; is in the &lt;xref:System.ServiceModel.CommunicationState&gt; state, as this is the only state that is both mutable and not disposed.","pos":[0,236],"source":"This method can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState> state, as this is the only state that is both mutable and not disposed."},{"content":"A &lt;xref:System.ServiceModel.ServiceHost&gt; calls this method when the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt; is added to its &lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt; collection.","pos":[243,463],"source":"       A <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is added to its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection."},{"content":"This gives the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt; a chance to hook events and inspect the &lt;xref:System.ServiceModel.ServiceHost&gt;, and provides the value that should be returned from the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt; property.","pos":[465,753],"source":"  This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to hook events and inspect the <xref:System.ServiceModel.ServiceHost>, and provides the value that should be returned from the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> property."}]}]},{"pos":[5223,5300],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ServiceHostBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the service.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service."},{"pos":[5490,5572],"content":"<ph id=\"ph1\">&lt;code&gt;host&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>host</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5683,5845],"content":"The communication object is in an <xref:System.ServiceModel.CommunicationState> or <xref:System.ServiceModel.CommunicationState> state or the host is already set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The communication object is in an &lt;xref:System.ServiceModel.CommunicationState&gt; or &lt;xref:System.ServiceModel.CommunicationState&gt; state or the host is already set.","pos":[0,162],"source":"The communication object is in an <xref:System.ServiceModel.CommunicationState> or <xref:System.ServiceModel.CommunicationState> state or the host is already set."}]},{"pos":[5952,6086],"content":"The communication object is in a <xref:System.ServiceModel.CommunicationState> or <xref:System.ServiceModel.CommunicationState> state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The communication object is in a &lt;xref:System.ServiceModel.CommunicationState&gt; or &lt;xref:System.ServiceModel.CommunicationState&gt; state.","pos":[0,134],"source":"The communication object is in a <xref:System.ServiceModel.CommunicationState> or <xref:System.ServiceModel.CommunicationState> state."}]},{"pos":[6243,6328],"content":"The communication object is in a <xref:System.ServiceModel.CommunicationState> state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The communication object is in a &lt;xref:System.ServiceModel.CommunicationState&gt; state.","pos":[0,85],"source":"The communication object is in a <xref:System.ServiceModel.CommunicationState> state."}]},{"pos":[6781,6889],"content":"When overridden in a derived class, removes the endpoint dispatchers associated with the channel dispatcher.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, removes the endpoint dispatchers associated with the channel dispatcher.","pos":[0,108]}]},{"pos":[6901,7123],"content":"<xref:System.ServiceModel.ServiceHost> calls this method during shutdown to give the dispatcher a chance to drain messages. <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> uses this call to close datagram channels.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"<xref:System.ServiceModel.ServiceHost> calls this method during shutdown to give the dispatcher a chance to drain messages. <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> uses this call to close datagram channels.","pos":[0,222],"nodes":[{"content":"&lt;xref:System.ServiceModel.ServiceHost&gt; calls this method during shutdown to give the dispatcher a chance to drain messages.","pos":[0,123],"source":"<xref:System.ServiceModel.ServiceHost> calls this method during shutdown to give the dispatcher a chance to drain messages."},{"content":"&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt; uses this call to close datagram channels.","pos":[124,222],"source":" <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> uses this call to close datagram channels."}]}]},{"pos":[7846,7935],"content":"When overridden in a derived class, detaches the channel dispatcher from a specific host.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, detaches the channel dispatcher from a specific host.","pos":[0,89]}]},{"pos":[7948,8728],"content":"The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState> state, as this is the only state that is both mutable and not disposed.       Should set the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`.       <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is removed from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection. This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to unhook events and inspect the <xref:System.ServiceModel.ServiceHost>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.ServiceModel.ServiceHostBase&gt; can only be detached when the instance of the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt; is in the &lt;xref:System.ServiceModel.CommunicationState&gt; state, as this is the only state that is both mutable and not disposed.","pos":[0,276],"source":"The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState> state, as this is the only state that is both mutable and not disposed."},{"content":"Should set the &lt;xref:System.ServiceModel.ServiceHostBase&gt; associated with the channel dispatcher to <ph id=\"ph1\">`null`</ph>.","pos":[283,390],"source":"       Should set the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`."},{"content":"&lt;xref:System.ServiceModel.ServiceHost&gt; calls this method when the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt; is removed from its &lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt; collection.","pos":[397,619],"source":"       <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is removed from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection."},{"content":"This gives the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt; a chance to unhook events and inspect the &lt;xref:System.ServiceModel.ServiceHost&gt;.","pos":[620,776],"source":" This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to unhook events and inspect the <xref:System.ServiceModel.ServiceHost>."}]},{"pos":[8925,8986],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ServiceHostBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref>."},{"pos":[9176,9258],"content":"<ph id=\"ph1\">&lt;code&gt;host&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>host</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9369,9531],"content":"The communication object is in an <xref:System.ServiceModel.CommunicationState> or <xref:System.ServiceModel.CommunicationState> state or the host is already set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The communication object is in an &lt;xref:System.ServiceModel.CommunicationState&gt; or &lt;xref:System.ServiceModel.CommunicationState&gt; state or the host is already set.","pos":[0,162],"source":"The communication object is in an <xref:System.ServiceModel.CommunicationState> or <xref:System.ServiceModel.CommunicationState> state or the host is already set."}]},{"pos":[9638,9772],"content":"The communication object is in a <xref:System.ServiceModel.CommunicationState> or <xref:System.ServiceModel.CommunicationState> state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The communication object is in a &lt;xref:System.ServiceModel.CommunicationState&gt; or &lt;xref:System.ServiceModel.CommunicationState&gt; state.","pos":[0,134],"source":"The communication object is in a <xref:System.ServiceModel.CommunicationState> or <xref:System.ServiceModel.CommunicationState> state."}]},{"pos":[9929,10014],"content":"The communication object is in a <xref:System.ServiceModel.CommunicationState> state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The communication object is in a &lt;xref:System.ServiceModel.CommunicationState&gt; state.","pos":[0,85],"source":"The communication object is in a <xref:System.ServiceModel.CommunicationState> state."}]},{"pos":[10433,10530],"content":"When overridden in a derived class, gets the service host associated with the channel dispatcher.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, gets the service host associated with the channel dispatcher.","pos":[0,97]}]},{"pos":[10542,10958],"content":"Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service. The host keeps a list of these <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> objects in the <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service. The host keeps a list of these <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> objects in the <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.","pos":[0,416],"nodes":[{"content":"Each &lt;xref:System.ServiceModel.ServiceHost&gt; object can have many &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt; objects, each associated with a different &lt;xref:System.ServiceModel.Channels.IChannelListener&gt; for that service.","pos":[0,233],"source":"Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service."},{"content":"The host keeps a list of these &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt; objects in the &lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt; collection.","pos":[234,416],"source":" The host keeps a list of these <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> objects in the <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection."}]}]},{"pos":[11127,11235],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ServiceHostBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the service associated with the dispatcher.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service associated with the dispatcher."},{"pos":[11762,11863],"content":"When overridden in a derived class, gets the channel listener associated with the channel dispatcher.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, gets the channel listener associated with the channel dispatcher.","pos":[0,101]}]},{"pos":[11875,12108],"content":"A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> whose channels and messages this <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is dispatching.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt; associates an &lt;xref:System.ServiceModel.Channels.IChannelListener&gt; whose channels and messages this &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt; is dispatching.","pos":[0,233],"source":"A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> whose channels and messages this <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is dispatching."}]},{"pos":[12301,12411],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with the channel dispatcher.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> associated with the channel dispatcher."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  id: ChannelDispatcherBase\n  children:\n  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor\n  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)\n  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput\n  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)\n  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host\n  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener\n  langs:\n  - csharp\n  name: ChannelDispatcherBase\n  nameWithType: ChannelDispatcherBase\n  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  type: Class\n  summary: Abstract base class for the channel dispatcher that accepts channels and associates them with a service.\n  remarks: \"This is used by developers who want to keep the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] programming model but replace the system-provided runtime. Such applications will pull messages out of channels and handle them directly with user-defined dispatchers. To use ChannelDispatcherBase , create a class derived from it, extend <xref:System.ServiceModel.ServiceHost> and override <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, adding instances of your class derived from ChannelDispatcherBase to <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  \\n  \\n The <xref:System.ServiceModel.Channels.IChannelListener> and the <xref:System.ServiceModel.ServiceHost>, associated with the ChannelDispatcherBase object are available for inspection or modification through the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> and <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> respectively.  \\n  \\n <xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> or <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> methods when adding or removing a ChannelDispatcherBase item from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.  \\n  \\n <xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> during shutdown before closing InstanceContexts. [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] uses this call to close datagram channels and wait for all messages to get to an InstanceContext.\"\n  syntax:\n    content: 'public abstract class ChannelDispatcherBase : System.ServiceModel.Channels.CommunicationObject'\n  inheritance:\n  - System.ServiceModel.Channels.CommunicationObject\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  langs:\n  - csharp\n  name: ChannelDispatcherBase()\n  nameWithType: ChannelDispatcherBase.ChannelDispatcherBase()\n  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.ChannelDispatcherBase()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcherBase\"></xref> class.\n  syntax:\n    content: protected ChannelDispatcherBase ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)\n  id: Attach(System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  langs:\n  - csharp\n  name: Attach(ServiceHostBase)\n  nameWithType: ChannelDispatcherBase.Attach(ServiceHostBase)\n  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(ServiceHostBase)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: When overridden in a derived class, attaches the channel dispatcher to a specific host.\n  remarks: \"This method can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState> state, as this is the only state that is both mutable and not disposed.  \\n  \\n A <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is added to its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.  This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to hook events and inspect the <xref:System.ServiceModel.ServiceHost>, and provides the value that should be returned from the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> property.\"\n  syntax:\n    content: protected virtual void Attach (System.ServiceModel.ServiceHostBase host);\n    parameters:\n    - id: host\n      type: System.ServiceModel.ServiceHostBase\n      description: The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>host</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The communication object is in an <xref:System.ServiceModel.CommunicationState> or <xref:System.ServiceModel.CommunicationState> state or the host is already set.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The communication object is in a <xref:System.ServiceModel.CommunicationState> or <xref:System.ServiceModel.CommunicationState> state.\n  - type: System.ServiceModel.CommunicationObjectFaultedException\n    commentId: T:System.ServiceModel.CommunicationObjectFaultedException\n    description: The communication object is in a <xref:System.ServiceModel.CommunicationState> state.\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput\n  id: CloseInput\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  langs:\n  - csharp\n  name: CloseInput()\n  nameWithType: ChannelDispatcherBase.CloseInput()\n  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: When overridden in a derived class, removes the endpoint dispatchers associated with the channel dispatcher.\n  remarks: <xref:System.ServiceModel.ServiceHost> calls this method during shutdown to give the dispatcher a chance to drain messages. <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> uses this call to close datagram channels.\n  syntax:\n    content: public virtual void CloseInput ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)\n  id: Detach(System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  langs:\n  - csharp\n  name: Detach(ServiceHostBase)\n  nameWithType: ChannelDispatcherBase.Detach(ServiceHostBase)\n  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(ServiceHostBase)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: When overridden in a derived class, detaches the channel dispatcher from a specific host.\n  remarks: \"The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState> state, as this is the only state that is both mutable and not disposed.  \\n  \\n Should set the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`.  \\n  \\n <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is removed from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection. This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to unhook events and inspect the <xref:System.ServiceModel.ServiceHost>.\"\n  syntax:\n    content: protected virtual void Detach (System.ServiceModel.ServiceHostBase host);\n    parameters:\n    - id: host\n      type: System.ServiceModel.ServiceHostBase\n      description: The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref>.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>host</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The communication object is in an <xref:System.ServiceModel.CommunicationState> or <xref:System.ServiceModel.CommunicationState> state or the host is already set.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The communication object is in a <xref:System.ServiceModel.CommunicationState> or <xref:System.ServiceModel.CommunicationState> state.\n  - type: System.ServiceModel.CommunicationObjectFaultedException\n    commentId: T:System.ServiceModel.CommunicationObjectFaultedException\n    description: The communication object is in a <xref:System.ServiceModel.CommunicationState> state.\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host\n  id: Host\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  langs:\n  - csharp\n  name: Host\n  nameWithType: ChannelDispatcherBase.Host\n  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: When overridden in a derived class, gets the service host associated with the channel dispatcher.\n  remarks: Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service. The host keeps a list of these <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> objects in the <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.\n  syntax:\n    content: public abstract System.ServiceModel.ServiceHostBase Host { get; }\n    return:\n      type: System.ServiceModel.ServiceHostBase\n      description: The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service associated with the dispatcher.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener\n  id: Listener\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  langs:\n  - csharp\n  name: Listener\n  nameWithType: ChannelDispatcherBase.Listener\n  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: When overridden in a derived class, gets the channel listener associated with the channel dispatcher.\n  remarks: A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> whose channels and messages this <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is dispatching.\n  syntax:\n    content: public abstract System.ServiceModel.Channels.IChannelListener Listener { get; }\n    return:\n      type: System.ServiceModel.Channels.IChannelListener\n      description: The <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> associated with the channel dispatcher.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: System.ServiceModel.Channels.CommunicationObject\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.ServiceModel.CommunicationObjectFaultedException\n  isExternal: true\n  name: System.ServiceModel.CommunicationObjectFaultedException\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: ChannelDispatcherBase()\n  nameWithType: ChannelDispatcherBase.ChannelDispatcherBase()\n  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.ChannelDispatcherBase()\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: Attach(ServiceHostBase)\n  nameWithType: ChannelDispatcherBase.Attach(ServiceHostBase)\n  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(ServiceHostBase)\n- uid: System.ServiceModel.ServiceHostBase\n  parent: System.ServiceModel\n  isExternal: false\n  name: ServiceHostBase\n  nameWithType: ServiceHostBase\n  fullName: System.ServiceModel.ServiceHostBase\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: CloseInput()\n  nameWithType: ChannelDispatcherBase.CloseInput()\n  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput()\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: Detach(ServiceHostBase)\n  nameWithType: ChannelDispatcherBase.Detach(ServiceHostBase)\n  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(ServiceHostBase)\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: Host\n  nameWithType: ChannelDispatcherBase.Host\n  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: Listener\n  nameWithType: ChannelDispatcherBase.Listener\n  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener\n- uid: System.ServiceModel.Channels.IChannelListener\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelListener\n  nameWithType: IChannelListener\n  fullName: System.ServiceModel.Channels.IChannelListener\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: ChannelDispatcherBase\n  nameWithType: ChannelDispatcherBase.ChannelDispatcherBase\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: Attach\n  nameWithType: ChannelDispatcherBase.Attach\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: CloseInput\n  nameWithType: ChannelDispatcherBase.CloseInput\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: Detach\n  nameWithType: ChannelDispatcherBase.Detach\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: Host\n  nameWithType: ChannelDispatcherBase.Host\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: Listener\n  nameWithType: ChannelDispatcherBase.Listener\n"}