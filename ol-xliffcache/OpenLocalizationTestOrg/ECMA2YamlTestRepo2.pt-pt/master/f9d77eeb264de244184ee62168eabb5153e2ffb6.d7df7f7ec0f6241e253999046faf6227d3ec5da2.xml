{"nodes":[{"pos":[664,843],"content":"Extend the ExceptionHandler class to create an exception handler for unhandled exceptions that occur within the <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> runtime.","needQuote":true,"needEscape":true,"source":"Extend the ExceptionHandler class to create an exception handler for unhandled exceptions that occur within the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] runtime."},{"pos":[855,1434],"content":"Extend the ExceptionHandler class and override the <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> method to determine whether an exception should terminate the application. Then create a new instance of your custom ExceptionHandler class and assign it to the static <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A> or <xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A> property prior to creating [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] clients or services.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Extend the ExceptionHandler class and override the &lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt; method to determine whether an exception should terminate the application.","pos":[0,199],"source":"Extend the ExceptionHandler class and override the <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> method to determine whether an exception should terminate the application."},{"content":"Then create a new instance of your custom ExceptionHandler class and assign it to the static &lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A&gt; or &lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A&gt; property prior to creating <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> clients or services.","pos":[200,579],"source":" Then create a new instance of your custom ExceptionHandler class and assign it to the static <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A> or <xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A> property prior to creating [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] clients or services."}]},{"pos":[2849,2958],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"></xref> class."},{"pos":[3554,3671],"content":"Gets an instance of <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that handles all exceptions.","needQuote":true,"needEscape":true,"source":"Gets an instance of <xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"></xref> that handles all exceptions."},{"pos":[3870,4042],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> for all exceptions.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"></xref> object that returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> for all exceptions."},{"pos":[4682,4818],"content":"Gets or sets the current <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation for the application domain.","needQuote":true,"needEscape":true,"source":"Gets or sets the current <xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"></xref> implementation for the application domain."},{"pos":[4831,5495],"content":"By default, the AsynchronousThreadExceptionHandler property is `null`, and unhandled exceptions on asynchronous [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] threads terminate the application.  Set this property to an <xref:System.ServiceModel.Dispatcher.ExceptionHandler> object to receive and react to these exceptions.       If an unhandled exception occurs on an asynchronous [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] thread and reaches this handler, the state of the application domain may be compromised.  <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> should not return `true` for these exceptions.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, the AsynchronousThreadExceptionHandler property is <ph id=\"ph1\">`null`</ph>, and unhandled exceptions on asynchronous <ph id=\"ph2\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> threads terminate the application.","pos":[0,205],"source":"By default, the AsynchronousThreadExceptionHandler property is `null`, and unhandled exceptions on asynchronous [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] threads terminate the application."},{"content":"Set this property to an &lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt; object to receive and react to these exceptions.","pos":[207,334],"source":"  Set this property to an <xref:System.ServiceModel.Dispatcher.ExceptionHandler> object to receive and react to these exceptions."},{"content":"If an unhandled exception occurs on an asynchronous <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> thread and reaches this handler, the state of the application domain may be compromised.","pos":[341,540],"source":"       If an unhandled exception occurs on an asynchronous [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] thread and reaches this handler, the state of the application domain may be compromised."},{"content":"&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt; should not return <ph id=\"ph1\">`true`</ph> for these exceptions.","pos":[542,662],"source":"  <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> should not return `true` for these exceptions."}]},{"pos":[5722,5943],"content":"Assign a custom <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that receives unhandled exceptions that occur on asynchronous <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> threads.","needQuote":true,"needEscape":true,"source":"Assign a custom <xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"></xref> object that receives unhandled exceptions that occur on asynchronous [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] threads."},{"pos":[6577,6850],"content":"When overridden in a derived class, returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the exception has been handled, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the exception should be rethrown and the application terminated.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the exception has been handled, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the exception should be rethrown and the application terminated."},{"pos":[6862,7031],"content":"The HandleException property returns `true` if the exception has been handled. If it returns `false` or throws a different exception, the original exception is rethrown.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The HandleException property returns <ph id=\"ph1\">`true`</ph> if the exception has been handled.","pos":[0,78],"source":"The HandleException property returns `true` if the exception has been handled."},{"content":"If it returns <ph id=\"ph1\">`false`</ph> or throws a different exception, the original exception is rethrown.","pos":[79,169],"source":" If it returns `false` or throws a different exception, the original exception is rethrown."}]},{"pos":[7839,7984],"content":"The exception the occurred within the <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> runtime and which may terminate the application.","needQuote":true,"needEscape":true,"source":"The exception the occurred within the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] runtime and which may terminate the application."},{"pos":[8043,8213],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the exception has been handled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the exception has been handled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8811,8957],"content":"Gets or sets the current transport <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation for the application domain.","needQuote":true,"needEscape":true,"source":"Gets or sets the current transport <xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"></xref> implementation for the application domain."},{"pos":[8970,9759],"content":"By default, the TransportExceptionHandler property is set to the value of <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle%2A>, causing unhandled exceptions within [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] transports to be ignored.  Set this property to an instance of <xref:System.ServiceModel.Dispatcher.ExceptionHandler> to receive and react to these exceptions.       If an unhandled exception occurs within a global [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] transport and reaches this handler, there is a possibility that the state of the application domain is compromised. <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> can return `false` for these exceptions to cause the application to be terminated.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, the TransportExceptionHandler property is set to the value of &lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle%2A&gt;, causing unhandled exceptions within <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> transports to be ignored.","pos":[0,266],"source":"By default, the TransportExceptionHandler property is set to the value of <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle%2A>, causing unhandled exceptions within [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] transports to be ignored."},{"content":"Set this property to an instance of &lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt; to receive and react to these exceptions.","pos":[268,400],"source":"  Set this property to an instance of <xref:System.ServiceModel.Dispatcher.ExceptionHandler> to receive and react to these exceptions."},{"content":"If an unhandled exception occurs within a global <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> transport and reaches this handler, there is a possibility that the state of the application domain is compromised.","pos":[407,630],"source":"       If an unhandled exception occurs within a global [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] transport and reaches this handler, there is a possibility that the state of the application domain is compromised."},{"content":"&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt; can return <ph id=\"ph1\">`false`</ph> for these exceptions to cause the application to be terminated.","pos":[631,787],"source":" <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> can return `false` for these exceptions to cause the application to be terminated."}]},{"pos":[9977,10196],"content":"A custom <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that receives unhandled exceptions that occur within the global <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> transports.","needQuote":true,"needEscape":true,"source":"A custom <xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"></xref> object that receives unhandled exceptions that occur within the global [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] transports."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.ExceptionHandler\n  id: ExceptionHandler\n  children:\n  - System.ServiceModel.Dispatcher.ExceptionHandler.#ctor\n  - System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle\n  - System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler\n  - System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)\n  - System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler\n  langs:\n  - csharp\n  name: ExceptionHandler\n  nameWithType: ExceptionHandler\n  fullName: System.ServiceModel.Dispatcher.ExceptionHandler\n  type: Class\n  summary: Extend the ExceptionHandler class to create an exception handler for unhandled exceptions that occur within the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] runtime.\n  remarks: Extend the ExceptionHandler class and override the <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> method to determine whether an exception should terminate the application. Then create a new instance of your custom ExceptionHandler class and assign it to the static <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A> or <xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A> property prior to creating [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] clients or services.\n  example:\n  - \"The following code example shows an implementation of the ExceptionHandler abstract class that overrides the <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> method.  \\n  \\n [!code-cs[S_UEExceptionHandler#0](~/add/codesnippet/csharp/s_ueexceptionhandler.cs/program.cs#0)]\\n [!code-vb[S_UEExceptionHandler#0](~/add/codesnippet/visualbasic/s_ueexceptionhandler.cs/module1.vb#0)]  \\n  \\n The following code example shows how to enable the custom `MyExceptionHandler` for unhandled exceptions that occur within the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] runtime.  \\n  \\n [!code-cs[S_UEExceptionHandler#1](~/add/codesnippet/csharp/s_ueexceptionhandler.cs/program.cs#1)]\\n [!code-vb[S_UEExceptionHandler#1](~/add/codesnippet/visualbasic/s_ueexceptionhandler.cs/module1.vb#1)]\"\n  syntax:\n    content: public abstract class ExceptionHandler\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.ExceptionHandler.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Dispatcher.ExceptionHandler\n  langs:\n  - csharp\n  name: ExceptionHandler()\n  nameWithType: ExceptionHandler.ExceptionHandler()\n  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.ExceptionHandler()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"></xref> class.\n  syntax:\n    content: protected ExceptionHandler ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.ExceptionHandler.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle\n  id: AlwaysHandle\n  parent: System.ServiceModel.Dispatcher.ExceptionHandler\n  langs:\n  - csharp\n  name: AlwaysHandle\n  nameWithType: ExceptionHandler.AlwaysHandle\n  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets an instance of <xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"></xref> that handles all exceptions.\n  syntax:\n    content: public static System.ServiceModel.Dispatcher.ExceptionHandler AlwaysHandle { get; }\n    return:\n      type: System.ServiceModel.Dispatcher.ExceptionHandler\n      description: An <xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"></xref> object that returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> for all exceptions.\n  overload: System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler\n  id: AsynchronousThreadExceptionHandler\n  parent: System.ServiceModel.Dispatcher.ExceptionHandler\n  langs:\n  - csharp\n  name: AsynchronousThreadExceptionHandler\n  nameWithType: ExceptionHandler.AsynchronousThreadExceptionHandler\n  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets the current <xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"></xref> implementation for the application domain.\n  remarks: \"By default, the AsynchronousThreadExceptionHandler property is `null`, and unhandled exceptions on asynchronous [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] threads terminate the application.  Set this property to an <xref:System.ServiceModel.Dispatcher.ExceptionHandler> object to receive and react to these exceptions.  \\n  \\n If an unhandled exception occurs on an asynchronous [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] thread and reaches this handler, the state of the application domain may be compromised.  <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> should not return `true` for these exceptions.\"\n  syntax:\n    content: public static System.ServiceModel.Dispatcher.ExceptionHandler AsynchronousThreadExceptionHandler { get; set; }\n    return:\n      type: System.ServiceModel.Dispatcher.ExceptionHandler\n      description: Assign a custom <xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"></xref> object that receives unhandled exceptions that occur on asynchronous [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] threads.\n  overload: System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)\n  id: HandleException(System.Exception)\n  parent: System.ServiceModel.Dispatcher.ExceptionHandler\n  langs:\n  - csharp\n  name: HandleException(Exception)\n  nameWithType: ExceptionHandler.HandleException(Exception)\n  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(Exception)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: When overridden in a derived class, returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the exception has been handled, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the exception should be rethrown and the application terminated.\n  remarks: The HandleException property returns `true` if the exception has been handled. If it returns `false` or throws a different exception, the original exception is rethrown.\n  example:\n  - \"The following code example shows an implementation of the <xref:System.ServiceModel.Dispatcher.ExceptionHandler> abstract class that overrides the HandleException method.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n The following code example shows how to enable the custom `MyExceptionHandler` for unhandled exceptions that occur within the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] runtime.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public abstract bool HandleException (Exception exception);\n    parameters:\n    - id: exception\n      type: System.Exception\n      description: The exception the occurred within the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] runtime and which may terminate the application.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the exception has been handled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Dispatcher.ExceptionHandler.HandleException*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler\n  id: TransportExceptionHandler\n  parent: System.ServiceModel.Dispatcher.ExceptionHandler\n  langs:\n  - csharp\n  name: TransportExceptionHandler\n  nameWithType: ExceptionHandler.TransportExceptionHandler\n  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets the current transport <xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"></xref> implementation for the application domain.\n  remarks: \"By default, the TransportExceptionHandler property is set to the value of <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle%2A>, causing unhandled exceptions within [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] transports to be ignored.  Set this property to an instance of <xref:System.ServiceModel.Dispatcher.ExceptionHandler> to receive and react to these exceptions.  \\n  \\n If an unhandled exception occurs within a global [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] transport and reaches this handler, there is a possibility that the state of the application domain is compromised. <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> can return `false` for these exceptions to cause the application to be terminated.\"\n  syntax:\n    content: public static System.ServiceModel.Dispatcher.ExceptionHandler TransportExceptionHandler { get; set; }\n    return:\n      type: System.ServiceModel.Dispatcher.ExceptionHandler\n      description: A custom <xref href=\"System.ServiceModel.Dispatcher.ExceptionHandler\"></xref> object that receives unhandled exceptions that occur within the global [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] transports.\n  overload: System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ServiceModel.Dispatcher.ExceptionHandler.#ctor\n  parent: System.ServiceModel.Dispatcher.ExceptionHandler\n  isExternal: false\n  name: ExceptionHandler()\n  nameWithType: ExceptionHandler.ExceptionHandler()\n  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.ExceptionHandler()\n- uid: System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle\n  parent: System.ServiceModel.Dispatcher.ExceptionHandler\n  isExternal: false\n  name: AlwaysHandle\n  nameWithType: ExceptionHandler.AlwaysHandle\n  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle\n- uid: System.ServiceModel.Dispatcher.ExceptionHandler\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: ExceptionHandler\n  nameWithType: ExceptionHandler\n  fullName: System.ServiceModel.Dispatcher.ExceptionHandler\n- uid: System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler\n  parent: System.ServiceModel.Dispatcher.ExceptionHandler\n  isExternal: false\n  name: AsynchronousThreadExceptionHandler\n  nameWithType: ExceptionHandler.AsynchronousThreadExceptionHandler\n  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler\n- uid: System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)\n  parent: System.ServiceModel.Dispatcher.ExceptionHandler\n  isExternal: false\n  name: HandleException(Exception)\n  nameWithType: ExceptionHandler.HandleException(Exception)\n  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(Exception)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler\n  parent: System.ServiceModel.Dispatcher.ExceptionHandler\n  isExternal: false\n  name: TransportExceptionHandler\n  nameWithType: ExceptionHandler.TransportExceptionHandler\n  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler\n- uid: System.ServiceModel.Dispatcher.ExceptionHandler.#ctor*\n  parent: System.ServiceModel.Dispatcher.ExceptionHandler\n  isExternal: false\n  name: ExceptionHandler\n  nameWithType: ExceptionHandler.ExceptionHandler\n- uid: System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle*\n  parent: System.ServiceModel.Dispatcher.ExceptionHandler\n  isExternal: false\n  name: AlwaysHandle\n  nameWithType: ExceptionHandler.AlwaysHandle\n- uid: System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler*\n  parent: System.ServiceModel.Dispatcher.ExceptionHandler\n  isExternal: false\n  name: AsynchronousThreadExceptionHandler\n  nameWithType: ExceptionHandler.AsynchronousThreadExceptionHandler\n- uid: System.ServiceModel.Dispatcher.ExceptionHandler.HandleException*\n  parent: System.ServiceModel.Dispatcher.ExceptionHandler\n  isExternal: false\n  name: HandleException\n  nameWithType: ExceptionHandler.HandleException\n- uid: System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler*\n  parent: System.ServiceModel.Dispatcher.ExceptionHandler\n  isExternal: false\n  name: TransportExceptionHandler\n  nameWithType: ExceptionHandler.TransportExceptionHandler\n"}