{"nodes":[{"pos":[6117,6129],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6639,6651],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7120,7132],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7568,7580],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9197,9209],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9274,9286],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9367,9379],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10146,10158],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10223,10235],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10314,10326],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10407,10419],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11867,11879],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11944,11956],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12024,12036],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12121,12133],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12207,12219],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12282,12294],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12377,12389],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12468,12480],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12573,12585],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12666,12678],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13379,13391],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13456,13468],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13549,13561],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14356,14368],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14433,14445],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14524,14536],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14617,14629],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16105,16117],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16182,16194],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16262,16274],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16359,16371],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16445,16457],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16520,16532],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16615,16627],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16706,16718],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16811,16823],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16904,16916],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17861,17873],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17967,17979],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18062,18074],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19155,19167],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19261,19273],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19356,19368],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19451,19463],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20472,20484],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20578,20590],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20650,20662],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20745,20757],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21899,21911],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22005,22017],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22077,22089],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22172,22184],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22267,22279],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23685,23697],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23791,23803],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23895,23907],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23999,24011],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24102,24114],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24197,24209],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25748,25760],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25854,25866],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25949,25961],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26053,26065],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26157,26169],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26260,26272],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26355,26367],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27834,27846],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27940,27952],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28012,28024],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28116,28128],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28220,28232],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28323,28335],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28418,28430],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30030,30042],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30136,30148],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30208,30220],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30303,30315],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30407,30419],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30511,30523],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30614,30626],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30709,30721],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32396,32408],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32502,32514],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32574,32586],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32669,32681],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32773,32785],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32877,32889],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32980,32992],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33064,33076],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33159,33171],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33843,33855],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34334,34346],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34800,34812],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35331,35343],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35402,35414],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35901,35913],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36491,36503],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36560,36572],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37298,37310],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37401,37413],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37470,37482],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38282,38294],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38385,38397],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38460,38472],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38529,38541],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39018,39030],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39565,39577],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40099,40111],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40169,40181],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40658,40670],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41471,41483],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41549,41561],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41624,41636],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41697,41709],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41774,41786],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42315,42327],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42791,42803],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43468,43480],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43541,43553],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43617,43629],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44211,44223],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44797,44809],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45794,45806],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45865,45877],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45938,45950],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46012,46024],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46092,46104],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46171,46183],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46250,46262],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46327,46339],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46870,46882],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46953,46965],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47587,47599],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47670,47682],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48217,48229],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48300,48312],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48913,48925],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48996,49008],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49079,49091],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49854,49866],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49957,49969],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50040,50052],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50728,50740],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50831,50843],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50914,50926],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[51668,51680],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[51751,51763],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[51854,51866],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[51937,51949],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[52416,52428],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[52894,52906],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[53425,53437],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[54100,54112],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[54661,54673],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[55254,55266],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[55327,55339],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[56069,56081],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[56660,56672],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[57383,57395],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[57892,57904],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[58375,58387],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[58872,58884],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[59393,59405],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System._AppDomain\n  id: _AppDomain\n  children:\n  - System._AppDomain.AppendPrivatePath(System.String)\n  - System._AppDomain.AssemblyLoad\n  - System._AppDomain.AssemblyResolve\n  - System._AppDomain.BaseDirectory\n  - System._AppDomain.ClearPrivatePath\n  - System._AppDomain.ClearShadowCopyPath\n  - System._AppDomain.CreateInstance(System.String,System.String)\n  - System._AppDomain.CreateInstance(System.String,System.String,System.Object[])\n  - System._AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  - System._AppDomain.CreateInstanceFrom(System.String,System.String)\n  - System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])\n  - System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)\n  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)\n  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)\n  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)\n  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)\n  - System._AppDomain.DoCallBack(System.CrossAppDomainDelegate)\n  - System._AppDomain.DomainUnload\n  - System._AppDomain.DynamicDirectory\n  - System._AppDomain.Equals(System.Object)\n  - System._AppDomain.Evidence\n  - System._AppDomain.ExecuteAssembly(System.String)\n  - System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)\n  - System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])\n  - System._AppDomain.FriendlyName\n  - System._AppDomain.GetAssemblies\n  - System._AppDomain.GetData(System.String)\n  - System._AppDomain.GetHashCode\n  - System._AppDomain.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System._AppDomain.GetLifetimeService\n  - System._AppDomain.GetType\n  - System._AppDomain.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System._AppDomain.GetTypeInfoCount(System.UInt32@)\n  - System._AppDomain.InitializeLifetimeService\n  - System._AppDomain.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System._AppDomain.Load(System.Byte[])\n  - System._AppDomain.Load(System.Reflection.AssemblyName)\n  - System._AppDomain.Load(System.String)\n  - System._AppDomain.Load(System.Byte[],System.Byte[])\n  - System._AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n  - System._AppDomain.Load(System.String,System.Security.Policy.Evidence)\n  - System._AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n  - System._AppDomain.ProcessExit\n  - System._AppDomain.RelativeSearchPath\n  - System._AppDomain.ResourceResolve\n  - System._AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)\n  - System._AppDomain.SetCachePath(System.String)\n  - System._AppDomain.SetData(System.String,System.Object)\n  - System._AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)\n  - System._AppDomain.SetShadowCopyPath(System.String)\n  - System._AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)\n  - System._AppDomain.ShadowCopyFiles\n  - System._AppDomain.ToString\n  - System._AppDomain.TypeResolve\n  - System._AppDomain.UnhandledException\n  langs:\n  - csharp\n  name: _AppDomain\n  nameWithType: _AppDomain\n  fullName: System._AppDomain\n  type: Interface\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"05F696DC-2B29-3663-AD8B-C4389CF2A713\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface _AppDomain\n  implements: []\n  platform:\n  - net462\n- uid: System._AppDomain.AppendPrivatePath(System.String)\n  id: AppendPrivatePath(System.String)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: AppendPrivatePath(String)\n  nameWithType: _AppDomain.AppendPrivatePath(String)\n  fullName: System._AppDomain.AppendPrivatePath(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void AppendPrivatePath (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: To be added.\n  overload: System._AppDomain.AppendPrivatePath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.AssemblyLoad\n  id: AssemblyLoad\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: AssemblyLoad\n  nameWithType: _AppDomain.AssemblyLoad\n  fullName: System._AppDomain.AssemblyLoad\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public event AssemblyLoadEventHandler AssemblyLoad;\n    return:\n      type: System.AssemblyLoadEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.AssemblyResolve\n  id: AssemblyResolve\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: AssemblyResolve\n  nameWithType: _AppDomain.AssemblyResolve\n  fullName: System._AppDomain.AssemblyResolve\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public event ResolveEventHandler AssemblyResolve;\n    return:\n      type: System.ResolveEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.BaseDirectory\n  id: BaseDirectory\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: BaseDirectory\n  nameWithType: _AppDomain.BaseDirectory\n  fullName: System._AppDomain.BaseDirectory\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public string BaseDirectory { get; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System._AppDomain.BaseDirectory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.ClearPrivatePath\n  id: ClearPrivatePath\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: ClearPrivatePath()\n  nameWithType: _AppDomain.ClearPrivatePath()\n  fullName: System._AppDomain.ClearPrivatePath()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void ClearPrivatePath ();\n    parameters: []\n  overload: System._AppDomain.ClearPrivatePath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.ClearShadowCopyPath\n  id: ClearShadowCopyPath\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: ClearShadowCopyPath()\n  nameWithType: _AppDomain.ClearShadowCopyPath()\n  fullName: System._AppDomain.ClearShadowCopyPath()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void ClearShadowCopyPath ();\n    parameters: []\n  overload: System._AppDomain.ClearShadowCopyPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.CreateInstance(System.String,System.String)\n  id: CreateInstance(System.String,System.String)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: CreateInstance(String,String)\n  nameWithType: _AppDomain.CreateInstance(String,String)\n  fullName: System._AppDomain.CreateInstance(String,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: To be added.\n    - id: typeName\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: To be added.\n  overload: System._AppDomain.CreateInstance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.CreateInstance(System.String,System.String,System.Object[])\n  id: CreateInstance(System.String,System.String,System.Object[])\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: CreateInstance(String,String,Object[])\n  nameWithType: _AppDomain.CreateInstance(String,String,Object[])\n  fullName: System._AppDomain.CreateInstance(String,String,Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: To be added.\n    - id: typeName\n      type: System.String\n      description: To be added.\n    - id: activationAttributes\n      type: System.Object[]\n      description: To be added.\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: To be added.\n  overload: System._AppDomain.CreateInstance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  id: CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  nameWithType: _AppDomain.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  fullName: System._AppDomain.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: To be added.\n    - id: typeName\n      type: System.String\n      description: To be added.\n    - id: ignoreCase\n      type: System.Boolean\n      description: To be added.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: To be added.\n    - id: binder\n      type: System.Reflection.Binder\n      description: To be added.\n    - id: args\n      type: System.Object[]\n      description: To be added.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: To be added.\n    - id: activationAttributes\n      type: System.Object[]\n      description: To be added.\n    - id: securityAttributes\n      type: System.Security.Policy.Evidence\n      description: To be added.\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: To be added.\n  overload: System._AppDomain.CreateInstance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.CreateInstanceFrom(System.String,System.String)\n  id: CreateInstanceFrom(System.String,System.String)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: CreateInstanceFrom(String,String)\n  nameWithType: _AppDomain.CreateInstanceFrom(String,String)\n  fullName: System._AppDomain.CreateInstanceFrom(String,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: To be added.\n    - id: typeName\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: To be added.\n  overload: System._AppDomain.CreateInstanceFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])\n  id: CreateInstanceFrom(System.String,System.String,System.Object[])\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: CreateInstanceFrom(String,String,Object[])\n  nameWithType: _AppDomain.CreateInstanceFrom(String,String,Object[])\n  fullName: System._AppDomain.CreateInstanceFrom(String,String,Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: To be added.\n    - id: typeName\n      type: System.String\n      description: To be added.\n    - id: activationAttributes\n      type: System.Object[]\n      description: To be added.\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: To be added.\n  overload: System._AppDomain.CreateInstanceFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  id: CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  nameWithType: _AppDomain.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  fullName: System._AppDomain.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: To be added.\n    - id: typeName\n      type: System.String\n      description: To be added.\n    - id: ignoreCase\n      type: System.Boolean\n      description: To be added.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: To be added.\n    - id: binder\n      type: System.Reflection.Binder\n      description: To be added.\n    - id: args\n      type: System.Object[]\n      description: To be added.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: To be added.\n    - id: activationAttributes\n      type: System.Object[]\n      description: To be added.\n    - id: securityAttributes\n      type: System.Security.Policy.Evidence\n      description: To be added.\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: To be added.\n  overload: System._AppDomain.CreateInstanceFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)\n  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)\n  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: To be added.\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: To be added.\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: To be added.\n  overload: System._AppDomain.DefineDynamicAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)\n  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)\n  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: To be added.\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: To be added.\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: To be added.\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: To be added.\n  overload: System._AppDomain.DefineDynamicAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)\n  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)\n  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: To be added.\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: To be added.\n    - id: dir\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: To be added.\n  overload: System._AppDomain.DefineDynamicAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)\n  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)\n  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: To be added.\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: To be added.\n    - id: dir\n      type: System.String\n      description: To be added.\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: To be added.\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: To be added.\n  overload: System._AppDomain.DefineDynamicAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)\n  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: To be added.\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: To be added.\n    - id: requiredPermissions\n      type: System.Security.PermissionSet\n      description: To be added.\n    - id: optionalPermissions\n      type: System.Security.PermissionSet\n      description: To be added.\n    - id: refusedPermissions\n      type: System.Security.PermissionSet\n      description: To be added.\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: To be added.\n  overload: System._AppDomain.DefineDynamicAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: To be added.\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: To be added.\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: To be added.\n    - id: requiredPermissions\n      type: System.Security.PermissionSet\n      description: To be added.\n    - id: optionalPermissions\n      type: System.Security.PermissionSet\n      description: To be added.\n    - id: refusedPermissions\n      type: System.Security.PermissionSet\n      description: To be added.\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: To be added.\n  overload: System._AppDomain.DefineDynamicAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)\n  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: To be added.\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: To be added.\n    - id: dir\n      type: System.String\n      description: To be added.\n    - id: requiredPermissions\n      type: System.Security.PermissionSet\n      description: To be added.\n    - id: optionalPermissions\n      type: System.Security.PermissionSet\n      description: To be added.\n    - id: refusedPermissions\n      type: System.Security.PermissionSet\n      description: To be added.\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: To be added.\n  overload: System._AppDomain.DefineDynamicAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: To be added.\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: To be added.\n    - id: dir\n      type: System.String\n      description: To be added.\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: To be added.\n    - id: requiredPermissions\n      type: System.Security.PermissionSet\n      description: To be added.\n    - id: optionalPermissions\n      type: System.Security.PermissionSet\n      description: To be added.\n    - id: refusedPermissions\n      type: System.Security.PermissionSet\n      description: To be added.\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: To be added.\n  overload: System._AppDomain.DefineDynamicAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)\n  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)\n  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions, bool isSynchronized);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: To be added.\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: To be added.\n    - id: dir\n      type: System.String\n      description: To be added.\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: To be added.\n    - id: requiredPermissions\n      type: System.Security.PermissionSet\n      description: To be added.\n    - id: optionalPermissions\n      type: System.Security.PermissionSet\n      description: To be added.\n    - id: refusedPermissions\n      type: System.Security.PermissionSet\n      description: To be added.\n    - id: isSynchronized\n      type: System.Boolean\n      description: To be added.\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: To be added.\n  overload: System._AppDomain.DefineDynamicAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.DoCallBack(System.CrossAppDomainDelegate)\n  id: DoCallBack(System.CrossAppDomainDelegate)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: DoCallBack(CrossAppDomainDelegate)\n  nameWithType: _AppDomain.DoCallBack(CrossAppDomainDelegate)\n  fullName: System._AppDomain.DoCallBack(CrossAppDomainDelegate)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void DoCallBack (CrossAppDomainDelegate theDelegate);\n    parameters:\n    - id: theDelegate\n      type: System.CrossAppDomainDelegate\n      description: To be added.\n  overload: System._AppDomain.DoCallBack*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.DomainUnload\n  id: DomainUnload\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: DomainUnload\n  nameWithType: _AppDomain.DomainUnload\n  fullName: System._AppDomain.DomainUnload\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public event EventHandler DomainUnload;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.DynamicDirectory\n  id: DynamicDirectory\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: DynamicDirectory\n  nameWithType: _AppDomain.DynamicDirectory\n  fullName: System._AppDomain.DynamicDirectory\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public string DynamicDirectory { get; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System._AppDomain.DynamicDirectory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: _AppDomain.Equals(Object)\n  fullName: System._AppDomain.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool Equals (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System._AppDomain.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.Evidence\n  id: Evidence\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: Evidence\n  nameWithType: _AppDomain.Evidence\n  fullName: System._AppDomain.Evidence\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Security.Policy.Evidence Evidence { get; }\n    return:\n      type: System.Security.Policy.Evidence\n      description: To be added.\n  overload: System._AppDomain.Evidence*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.ExecuteAssembly(System.String)\n  id: ExecuteAssembly(System.String)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: ExecuteAssembly(String)\n  nameWithType: _AppDomain.ExecuteAssembly(String)\n  fullName: System._AppDomain.ExecuteAssembly(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int ExecuteAssembly (string assemblyFile);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System._AppDomain.ExecuteAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)\n  id: ExecuteAssembly(System.String,System.Security.Policy.Evidence)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: ExecuteAssembly(String,Evidence)\n  nameWithType: _AppDomain.ExecuteAssembly(String,Evidence)\n  fullName: System._AppDomain.ExecuteAssembly(String,Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int ExecuteAssembly (string assemblyFile, System.Security.Policy.Evidence assemblySecurity);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: To be added.\n    - id: assemblySecurity\n      type: System.Security.Policy.Evidence\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System._AppDomain.ExecuteAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])\n  id: ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: ExecuteAssembly(String,Evidence,String[])\n  nameWithType: _AppDomain.ExecuteAssembly(String,Evidence,String[])\n  fullName: System._AppDomain.ExecuteAssembly(String,Evidence,String[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int ExecuteAssembly (string assemblyFile, System.Security.Policy.Evidence assemblySecurity, string[] args);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: To be added.\n    - id: assemblySecurity\n      type: System.Security.Policy.Evidence\n      description: To be added.\n    - id: args\n      type: System.String[]\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System._AppDomain.ExecuteAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.FriendlyName\n  id: FriendlyName\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: FriendlyName\n  nameWithType: _AppDomain.FriendlyName\n  fullName: System._AppDomain.FriendlyName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public string FriendlyName { get; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System._AppDomain.FriendlyName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.GetAssemblies\n  id: GetAssemblies\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: GetAssemblies()\n  nameWithType: _AppDomain.GetAssemblies()\n  fullName: System._AppDomain.GetAssemblies()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Assembly[] GetAssemblies ();\n    parameters: []\n    return:\n      type: System.Reflection.Assembly[]\n      description: To be added.\n  overload: System._AppDomain.GetAssemblies*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.GetData(System.String)\n  id: GetData(System.String)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: GetData(String)\n  nameWithType: _AppDomain.GetData(String)\n  fullName: System._AppDomain.GetData(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object GetData (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System._AppDomain.GetData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.GetHashCode\n  id: GetHashCode\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: _AppDomain.GetHashCode()\n  fullName: System._AppDomain.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System._AppDomain.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: _AppDomain.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System._AppDomain.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: To be added.\n    - id: rgszNames\n      type: System.IntPtr\n      description: To be added.\n    - id: cNames\n      type: System.UInt32\n      description: To be added.\n    - id: lcid\n      type: System.UInt32\n      description: To be added.\n    - id: rgDispId\n      type: System.IntPtr\n      description: To be added.\n  overload: System._AppDomain.GetIDsOfNames*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.GetLifetimeService\n  id: GetLifetimeService\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: GetLifetimeService()\n  nameWithType: _AppDomain.GetLifetimeService()\n  fullName: System._AppDomain.GetLifetimeService()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object GetLifetimeService ();\n    parameters: []\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System._AppDomain.GetLifetimeService*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.GetType\n  id: GetType\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: GetType()\n  nameWithType: _AppDomain.GetType()\n  fullName: System._AppDomain.GetType()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public Type GetType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: To be added.\n  overload: System._AppDomain.GetType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: _AppDomain.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System._AppDomain.GetTypeInfo(UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: To be added.\n    - id: lcid\n      type: System.UInt32\n      description: To be added.\n    - id: ppTInfo\n      type: System.IntPtr\n      description: To be added.\n  overload: System._AppDomain.GetTypeInfo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.GetTypeInfoCount(System.UInt32@)\n  id: GetTypeInfoCount(System.UInt32@)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: GetTypeInfoCount(UInt32)\n  nameWithType: _AppDomain.GetTypeInfoCount(UInt32)\n  fullName: System._AppDomain.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: To be added.\n  overload: System._AppDomain.GetTypeInfoCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.InitializeLifetimeService\n  id: InitializeLifetimeService\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: InitializeLifetimeService()\n  nameWithType: _AppDomain.InitializeLifetimeService()\n  fullName: System._AppDomain.InitializeLifetimeService()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object InitializeLifetimeService ();\n    parameters: []\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System._AppDomain.InitializeLifetimeService*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: _AppDomain.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System._AppDomain.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: To be added.\n    - id: riid\n      type: System.Guid\n      description: To be added.\n    - id: lcid\n      type: System.UInt32\n      description: To be added.\n    - id: wFlags\n      type: System.Int16\n      description: To be added.\n    - id: pDispParams\n      type: System.IntPtr\n      description: To be added.\n    - id: pVarResult\n      type: System.IntPtr\n      description: To be added.\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: To be added.\n    - id: puArgErr\n      type: System.IntPtr\n      description: To be added.\n  overload: System._AppDomain.Invoke*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.Load(System.Byte[])\n  id: Load(System.Byte[])\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: Load(Byte[])\n  nameWithType: _AppDomain.Load(Byte[])\n  fullName: System._AppDomain.Load(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Assembly Load (byte[] rawAssembly);\n    parameters:\n    - id: rawAssembly\n      type: System.Byte[]\n      description: To be added.\n    return:\n      type: System.Reflection.Assembly\n      description: To be added.\n  overload: System._AppDomain.Load*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.Load(System.Reflection.AssemblyName)\n  id: Load(System.Reflection.AssemblyName)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: Load(AssemblyName)\n  nameWithType: _AppDomain.Load(AssemblyName)\n  fullName: System._AppDomain.Load(AssemblyName)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef);\n    parameters:\n    - id: assemblyRef\n      type: System.Reflection.AssemblyName\n      description: To be added.\n    return:\n      type: System.Reflection.Assembly\n      description: To be added.\n  overload: System._AppDomain.Load*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.Load(System.String)\n  id: Load(System.String)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: Load(String)\n  nameWithType: _AppDomain.Load(String)\n  fullName: System._AppDomain.Load(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Assembly Load (string assemblyString);\n    parameters:\n    - id: assemblyString\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Reflection.Assembly\n      description: To be added.\n  overload: System._AppDomain.Load*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.Load(System.Byte[],System.Byte[])\n  id: Load(System.Byte[],System.Byte[])\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: Load(Byte[],Byte[])\n  nameWithType: _AppDomain.Load(Byte[],Byte[])\n  fullName: System._AppDomain.Load(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore);\n    parameters:\n    - id: rawAssembly\n      type: System.Byte[]\n      description: To be added.\n    - id: rawSymbolStore\n      type: System.Byte[]\n      description: To be added.\n    return:\n      type: System.Reflection.Assembly\n      description: To be added.\n  overload: System._AppDomain.Load*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n  id: Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: Load(AssemblyName,Evidence)\n  nameWithType: _AppDomain.Load(AssemblyName,Evidence)\n  fullName: System._AppDomain.Load(AssemblyName,Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef, System.Security.Policy.Evidence assemblySecurity);\n    parameters:\n    - id: assemblyRef\n      type: System.Reflection.AssemblyName\n      description: To be added.\n    - id: assemblySecurity\n      type: System.Security.Policy.Evidence\n      description: To be added.\n    return:\n      type: System.Reflection.Assembly\n      description: To be added.\n  overload: System._AppDomain.Load*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.Load(System.String,System.Security.Policy.Evidence)\n  id: Load(System.String,System.Security.Policy.Evidence)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: Load(String,Evidence)\n  nameWithType: _AppDomain.Load(String,Evidence)\n  fullName: System._AppDomain.Load(String,Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Assembly Load (string assemblyString, System.Security.Policy.Evidence assemblySecurity);\n    parameters:\n    - id: assemblyString\n      type: System.String\n      description: To be added.\n    - id: assemblySecurity\n      type: System.Security.Policy.Evidence\n      description: To be added.\n    return:\n      type: System.Reflection.Assembly\n      description: To be added.\n  overload: System._AppDomain.Load*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n  id: Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: Load(Byte[],Byte[],Evidence)\n  nameWithType: _AppDomain.Load(Byte[],Byte[],Evidence)\n  fullName: System._AppDomain.Load(Byte[],Byte[],Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence);\n    parameters:\n    - id: rawAssembly\n      type: System.Byte[]\n      description: To be added.\n    - id: rawSymbolStore\n      type: System.Byte[]\n      description: To be added.\n    - id: securityEvidence\n      type: System.Security.Policy.Evidence\n      description: To be added.\n    return:\n      type: System.Reflection.Assembly\n      description: To be added.\n  overload: System._AppDomain.Load*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.ProcessExit\n  id: ProcessExit\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: ProcessExit\n  nameWithType: _AppDomain.ProcessExit\n  fullName: System._AppDomain.ProcessExit\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public event EventHandler ProcessExit;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.RelativeSearchPath\n  id: RelativeSearchPath\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: RelativeSearchPath\n  nameWithType: _AppDomain.RelativeSearchPath\n  fullName: System._AppDomain.RelativeSearchPath\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public string RelativeSearchPath { get; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System._AppDomain.RelativeSearchPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.ResourceResolve\n  id: ResourceResolve\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: ResourceResolve\n  nameWithType: _AppDomain.ResourceResolve\n  fullName: System._AppDomain.ResourceResolve\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public event ResolveEventHandler ResourceResolve;\n    return:\n      type: System.ResolveEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)\n  id: SetAppDomainPolicy(System.Security.Policy.PolicyLevel)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: SetAppDomainPolicy(PolicyLevel)\n  nameWithType: _AppDomain.SetAppDomainPolicy(PolicyLevel)\n  fullName: System._AppDomain.SetAppDomainPolicy(PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetAppDomainPolicy (System.Security.Policy.PolicyLevel domainPolicy);\n    parameters:\n    - id: domainPolicy\n      type: System.Security.Policy.PolicyLevel\n      description: To be added.\n  overload: System._AppDomain.SetAppDomainPolicy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.SetCachePath(System.String)\n  id: SetCachePath(System.String)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: SetCachePath(String)\n  nameWithType: _AppDomain.SetCachePath(String)\n  fullName: System._AppDomain.SetCachePath(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetCachePath (string s);\n    parameters:\n    - id: s\n      type: System.String\n      description: To be added.\n  overload: System._AppDomain.SetCachePath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.SetData(System.String,System.Object)\n  id: SetData(System.String,System.Object)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: SetData(String,Object)\n  nameWithType: _AppDomain.SetData(String,Object)\n  fullName: System._AppDomain.SetData(String,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetData (string name, object data);\n    parameters:\n    - id: name\n      type: System.String\n      description: To be added.\n    - id: data\n      type: System.Object\n      description: To be added.\n  overload: System._AppDomain.SetData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)\n  id: SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: SetPrincipalPolicy(PrincipalPolicy)\n  nameWithType: _AppDomain.SetPrincipalPolicy(PrincipalPolicy)\n  fullName: System._AppDomain.SetPrincipalPolicy(PrincipalPolicy)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetPrincipalPolicy (System.Security.Principal.PrincipalPolicy policy);\n    parameters:\n    - id: policy\n      type: System.Security.Principal.PrincipalPolicy\n      description: To be added.\n  overload: System._AppDomain.SetPrincipalPolicy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.SetShadowCopyPath(System.String)\n  id: SetShadowCopyPath(System.String)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: SetShadowCopyPath(String)\n  nameWithType: _AppDomain.SetShadowCopyPath(String)\n  fullName: System._AppDomain.SetShadowCopyPath(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetShadowCopyPath (string s);\n    parameters:\n    - id: s\n      type: System.String\n      description: To be added.\n  overload: System._AppDomain.SetShadowCopyPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)\n  id: SetThreadPrincipal(System.Security.Principal.IPrincipal)\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: SetThreadPrincipal(IPrincipal)\n  nameWithType: _AppDomain.SetThreadPrincipal(IPrincipal)\n  fullName: System._AppDomain.SetThreadPrincipal(IPrincipal)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetThreadPrincipal (System.Security.Principal.IPrincipal principal);\n    parameters:\n    - id: principal\n      type: System.Security.Principal.IPrincipal\n      description: To be added.\n  overload: System._AppDomain.SetThreadPrincipal*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.ShadowCopyFiles\n  id: ShadowCopyFiles\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: ShadowCopyFiles\n  nameWithType: _AppDomain.ShadowCopyFiles\n  fullName: System._AppDomain.ShadowCopyFiles\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool ShadowCopyFiles { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System._AppDomain.ShadowCopyFiles*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.ToString\n  id: ToString\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: _AppDomain.ToString()\n  fullName: System._AppDomain.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: To be added.\n  overload: System._AppDomain.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.TypeResolve\n  id: TypeResolve\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: TypeResolve\n  nameWithType: _AppDomain.TypeResolve\n  fullName: System._AppDomain.TypeResolve\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public event ResolveEventHandler TypeResolve;\n    return:\n      type: System.ResolveEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System._AppDomain.UnhandledException\n  id: UnhandledException\n  parent: System._AppDomain\n  langs:\n  - csharp\n  name: UnhandledException\n  nameWithType: _AppDomain.UnhandledException\n  fullName: System._AppDomain.UnhandledException\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public event UnhandledExceptionEventHandler UnhandledException;\n    return:\n      type: System.UnhandledExceptionEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System._AppDomain.AppendPrivatePath(System.String)\n  parent: System._AppDomain\n  isExternal: false\n  name: AppendPrivatePath(String)\n  nameWithType: _AppDomain.AppendPrivatePath(String)\n  fullName: System._AppDomain.AppendPrivatePath(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System._AppDomain.AssemblyLoad\n  parent: System._AppDomain\n  isExternal: false\n  name: AssemblyLoad\n  nameWithType: _AppDomain.AssemblyLoad\n  fullName: System._AppDomain.AssemblyLoad\n- uid: System.AssemblyLoadEventHandler\n  parent: System\n  isExternal: false\n  name: AssemblyLoadEventHandler\n  nameWithType: AssemblyLoadEventHandler\n  fullName: System.AssemblyLoadEventHandler\n- uid: System._AppDomain.AssemblyResolve\n  parent: System._AppDomain\n  isExternal: false\n  name: AssemblyResolve\n  nameWithType: _AppDomain.AssemblyResolve\n  fullName: System._AppDomain.AssemblyResolve\n- uid: System.ResolveEventHandler\n  parent: System\n  isExternal: false\n  name: ResolveEventHandler\n  nameWithType: ResolveEventHandler\n  fullName: System.ResolveEventHandler\n- uid: System._AppDomain.BaseDirectory\n  parent: System._AppDomain\n  isExternal: false\n  name: BaseDirectory\n  nameWithType: _AppDomain.BaseDirectory\n  fullName: System._AppDomain.BaseDirectory\n- uid: System._AppDomain.ClearPrivatePath\n  parent: System._AppDomain\n  isExternal: false\n  name: ClearPrivatePath()\n  nameWithType: _AppDomain.ClearPrivatePath()\n  fullName: System._AppDomain.ClearPrivatePath()\n- uid: System._AppDomain.ClearShadowCopyPath\n  parent: System._AppDomain\n  isExternal: false\n  name: ClearShadowCopyPath()\n  nameWithType: _AppDomain.ClearShadowCopyPath()\n  fullName: System._AppDomain.ClearShadowCopyPath()\n- uid: System._AppDomain.CreateInstance(System.String,System.String)\n  parent: System._AppDomain\n  isExternal: false\n  name: CreateInstance(String,String)\n  nameWithType: _AppDomain.CreateInstance(String,String)\n  fullName: System._AppDomain.CreateInstance(String,String)\n- uid: System.Runtime.Remoting.ObjectHandle\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: ObjectHandle\n  nameWithType: ObjectHandle\n  fullName: System.Runtime.Remoting.ObjectHandle\n- uid: System._AppDomain.CreateInstance(System.String,System.String,System.Object[])\n  parent: System._AppDomain\n  isExternal: false\n  name: CreateInstance(String,String,Object[])\n  nameWithType: _AppDomain.CreateInstance(String,String,Object[])\n  fullName: System._AppDomain.CreateInstance(String,String,Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System._AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  parent: System._AppDomain\n  isExternal: false\n  name: CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  nameWithType: _AppDomain.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  fullName: System._AppDomain.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System._AppDomain.CreateInstanceFrom(System.String,System.String)\n  parent: System._AppDomain\n  isExternal: false\n  name: CreateInstanceFrom(String,String)\n  nameWithType: _AppDomain.CreateInstanceFrom(String,String)\n  fullName: System._AppDomain.CreateInstanceFrom(String,String)\n- uid: System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])\n  parent: System._AppDomain\n  isExternal: false\n  name: CreateInstanceFrom(String,String,Object[])\n  nameWithType: _AppDomain.CreateInstanceFrom(String,String,Object[])\n  fullName: System._AppDomain.CreateInstanceFrom(String,String,Object[])\n- uid: System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  parent: System._AppDomain\n  isExternal: false\n  name: CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  nameWithType: _AppDomain.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  fullName: System._AppDomain.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)\n  parent: System._AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)\n  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)\n  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)\n- uid: System.Reflection.Emit.AssemblyBuilder\n  parent: System.Reflection.Emit\n  isExternal: true\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: true\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.Emit.AssemblyBuilderAccess\n  parent: System.Reflection.Emit\n  isExternal: true\n  name: AssemblyBuilderAccess\n  nameWithType: AssemblyBuilderAccess\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess\n- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)\n  parent: System._AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)\n  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)\n  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)\n- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)\n  parent: System._AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)\n  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)\n  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)\n- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)\n  parent: System._AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)\n  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)\n  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)\n- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  parent: System._AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)\n  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  parent: System._AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)\n- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  parent: System._AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)\n  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)\n- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  parent: System._AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)\n- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)\n  parent: System._AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)\n  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)\n  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)\n- uid: System._AppDomain.DoCallBack(System.CrossAppDomainDelegate)\n  parent: System._AppDomain\n  isExternal: false\n  name: DoCallBack(CrossAppDomainDelegate)\n  nameWithType: _AppDomain.DoCallBack(CrossAppDomainDelegate)\n  fullName: System._AppDomain.DoCallBack(CrossAppDomainDelegate)\n- uid: System.CrossAppDomainDelegate\n  parent: System\n  isExternal: false\n  name: CrossAppDomainDelegate\n  nameWithType: CrossAppDomainDelegate\n  fullName: System.CrossAppDomainDelegate\n- uid: System._AppDomain.DomainUnload\n  parent: System._AppDomain\n  isExternal: false\n  name: DomainUnload\n  nameWithType: _AppDomain.DomainUnload\n  fullName: System._AppDomain.DomainUnload\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System._AppDomain.DynamicDirectory\n  parent: System._AppDomain\n  isExternal: false\n  name: DynamicDirectory\n  nameWithType: _AppDomain.DynamicDirectory\n  fullName: System._AppDomain.DynamicDirectory\n- uid: System._AppDomain.Equals(System.Object)\n  parent: System._AppDomain\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: _AppDomain.Equals(Object)\n  fullName: System._AppDomain.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System._AppDomain.Evidence\n  parent: System._AppDomain\n  isExternal: false\n  name: Evidence\n  nameWithType: _AppDomain.Evidence\n  fullName: System._AppDomain.Evidence\n- uid: System._AppDomain.ExecuteAssembly(System.String)\n  parent: System._AppDomain\n  isExternal: false\n  name: ExecuteAssembly(String)\n  nameWithType: _AppDomain.ExecuteAssembly(String)\n  fullName: System._AppDomain.ExecuteAssembly(String)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)\n  parent: System._AppDomain\n  isExternal: false\n  name: ExecuteAssembly(String,Evidence)\n  nameWithType: _AppDomain.ExecuteAssembly(String,Evidence)\n  fullName: System._AppDomain.ExecuteAssembly(String,Evidence)\n- uid: System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])\n  parent: System._AppDomain\n  isExternal: false\n  name: ExecuteAssembly(String,Evidence,String[])\n  nameWithType: _AppDomain.ExecuteAssembly(String,Evidence,String[])\n  fullName: System._AppDomain.ExecuteAssembly(String,Evidence,String[])\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System._AppDomain.FriendlyName\n  parent: System._AppDomain\n  isExternal: false\n  name: FriendlyName\n  nameWithType: _AppDomain.FriendlyName\n  fullName: System._AppDomain.FriendlyName\n- uid: System._AppDomain.GetAssemblies\n  parent: System._AppDomain\n  isExternal: false\n  name: GetAssemblies()\n  nameWithType: _AppDomain.GetAssemblies()\n  fullName: System._AppDomain.GetAssemblies()\n- uid: System.Reflection.Assembly[]\n  parent: System.Reflection\n  isExternal: true\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly[]\n  spec.csharp:\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    nameWithType: Assembly\n    fullName: Assembly[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System._AppDomain.GetData(System.String)\n  parent: System._AppDomain\n  isExternal: false\n  name: GetData(String)\n  nameWithType: _AppDomain.GetData(String)\n  fullName: System._AppDomain.GetData(String)\n- uid: System._AppDomain.GetHashCode\n  parent: System._AppDomain\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: _AppDomain.GetHashCode()\n  fullName: System._AppDomain.GetHashCode()\n- uid: System._AppDomain.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System._AppDomain\n  isExternal: false\n  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: _AppDomain.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System._AppDomain.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: true\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System._AppDomain.GetLifetimeService\n  parent: System._AppDomain\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: _AppDomain.GetLifetimeService()\n  fullName: System._AppDomain.GetLifetimeService()\n- uid: System._AppDomain.GetType\n  parent: System._AppDomain\n  isExternal: false\n  name: GetType()\n  nameWithType: _AppDomain.GetType()\n  fullName: System._AppDomain.GetType()\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System._AppDomain.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System._AppDomain\n  isExternal: false\n  name: GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: _AppDomain.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System._AppDomain.GetTypeInfo(UInt32,UInt32,IntPtr)\n- uid: System._AppDomain.GetTypeInfoCount(System.UInt32@)\n  parent: System._AppDomain\n  isExternal: false\n  name: GetTypeInfoCount(UInt32)\n  nameWithType: _AppDomain.GetTypeInfoCount(UInt32)\n  fullName: System._AppDomain.GetTypeInfoCount(UInt32)\n- uid: System._AppDomain.InitializeLifetimeService\n  parent: System._AppDomain\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: _AppDomain.InitializeLifetimeService()\n  fullName: System._AppDomain.InitializeLifetimeService()\n- uid: System._AppDomain.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System._AppDomain\n  isExternal: false\n  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: _AppDomain.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System._AppDomain.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n- uid: System.Int16\n  parent: System\n  isExternal: true\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System._AppDomain.Load(System.Byte[])\n  parent: System._AppDomain\n  isExternal: false\n  name: Load(Byte[])\n  nameWithType: _AppDomain.Load(Byte[])\n  fullName: System._AppDomain.Load(Byte[])\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: true\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System._AppDomain.Load(System.Reflection.AssemblyName)\n  parent: System._AppDomain\n  isExternal: false\n  name: Load(AssemblyName)\n  nameWithType: _AppDomain.Load(AssemblyName)\n  fullName: System._AppDomain.Load(AssemblyName)\n- uid: System._AppDomain.Load(System.String)\n  parent: System._AppDomain\n  isExternal: false\n  name: Load(String)\n  nameWithType: _AppDomain.Load(String)\n  fullName: System._AppDomain.Load(String)\n- uid: System._AppDomain.Load(System.Byte[],System.Byte[])\n  parent: System._AppDomain\n  isExternal: false\n  name: Load(Byte[],Byte[])\n  nameWithType: _AppDomain.Load(Byte[],Byte[])\n  fullName: System._AppDomain.Load(Byte[],Byte[])\n- uid: System._AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n  parent: System._AppDomain\n  isExternal: false\n  name: Load(AssemblyName,Evidence)\n  nameWithType: _AppDomain.Load(AssemblyName,Evidence)\n  fullName: System._AppDomain.Load(AssemblyName,Evidence)\n- uid: System._AppDomain.Load(System.String,System.Security.Policy.Evidence)\n  parent: System._AppDomain\n  isExternal: false\n  name: Load(String,Evidence)\n  nameWithType: _AppDomain.Load(String,Evidence)\n  fullName: System._AppDomain.Load(String,Evidence)\n- uid: System._AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n  parent: System._AppDomain\n  isExternal: false\n  name: Load(Byte[],Byte[],Evidence)\n  nameWithType: _AppDomain.Load(Byte[],Byte[],Evidence)\n  fullName: System._AppDomain.Load(Byte[],Byte[],Evidence)\n- uid: System._AppDomain.ProcessExit\n  parent: System._AppDomain\n  isExternal: false\n  name: ProcessExit\n  nameWithType: _AppDomain.ProcessExit\n  fullName: System._AppDomain.ProcessExit\n- uid: System._AppDomain.RelativeSearchPath\n  parent: System._AppDomain\n  isExternal: false\n  name: RelativeSearchPath\n  nameWithType: _AppDomain.RelativeSearchPath\n  fullName: System._AppDomain.RelativeSearchPath\n- uid: System._AppDomain.ResourceResolve\n  parent: System._AppDomain\n  isExternal: false\n  name: ResourceResolve\n  nameWithType: _AppDomain.ResourceResolve\n  fullName: System._AppDomain.ResourceResolve\n- uid: System._AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)\n  parent: System._AppDomain\n  isExternal: false\n  name: SetAppDomainPolicy(PolicyLevel)\n  nameWithType: _AppDomain.SetAppDomainPolicy(PolicyLevel)\n  fullName: System._AppDomain.SetAppDomainPolicy(PolicyLevel)\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System._AppDomain.SetCachePath(System.String)\n  parent: System._AppDomain\n  isExternal: false\n  name: SetCachePath(String)\n  nameWithType: _AppDomain.SetCachePath(String)\n  fullName: System._AppDomain.SetCachePath(String)\n- uid: System._AppDomain.SetData(System.String,System.Object)\n  parent: System._AppDomain\n  isExternal: false\n  name: SetData(String,Object)\n  nameWithType: _AppDomain.SetData(String,Object)\n  fullName: System._AppDomain.SetData(String,Object)\n- uid: System._AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)\n  parent: System._AppDomain\n  isExternal: false\n  name: SetPrincipalPolicy(PrincipalPolicy)\n  nameWithType: _AppDomain.SetPrincipalPolicy(PrincipalPolicy)\n  fullName: System._AppDomain.SetPrincipalPolicy(PrincipalPolicy)\n- uid: System.Security.Principal.PrincipalPolicy\n  parent: System.Security.Principal\n  isExternal: false\n  name: PrincipalPolicy\n  nameWithType: PrincipalPolicy\n  fullName: System.Security.Principal.PrincipalPolicy\n- uid: System._AppDomain.SetShadowCopyPath(System.String)\n  parent: System._AppDomain\n  isExternal: false\n  name: SetShadowCopyPath(String)\n  nameWithType: _AppDomain.SetShadowCopyPath(String)\n  fullName: System._AppDomain.SetShadowCopyPath(String)\n- uid: System._AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)\n  parent: System._AppDomain\n  isExternal: false\n  name: SetThreadPrincipal(IPrincipal)\n  nameWithType: _AppDomain.SetThreadPrincipal(IPrincipal)\n  fullName: System._AppDomain.SetThreadPrincipal(IPrincipal)\n- uid: System.Security.Principal.IPrincipal\n  parent: System.Security.Principal\n  isExternal: true\n  name: IPrincipal\n  nameWithType: IPrincipal\n  fullName: System.Security.Principal.IPrincipal\n- uid: System._AppDomain.ShadowCopyFiles\n  parent: System._AppDomain\n  isExternal: false\n  name: ShadowCopyFiles\n  nameWithType: _AppDomain.ShadowCopyFiles\n  fullName: System._AppDomain.ShadowCopyFiles\n- uid: System._AppDomain.ToString\n  parent: System._AppDomain\n  isExternal: false\n  name: ToString()\n  nameWithType: _AppDomain.ToString()\n  fullName: System._AppDomain.ToString()\n- uid: System._AppDomain.TypeResolve\n  parent: System._AppDomain\n  isExternal: false\n  name: TypeResolve\n  nameWithType: _AppDomain.TypeResolve\n  fullName: System._AppDomain.TypeResolve\n- uid: System._AppDomain.UnhandledException\n  parent: System._AppDomain\n  isExternal: false\n  name: UnhandledException\n  nameWithType: _AppDomain.UnhandledException\n  fullName: System._AppDomain.UnhandledException\n- uid: System.UnhandledExceptionEventHandler\n  parent: System\n  isExternal: false\n  name: UnhandledExceptionEventHandler\n  nameWithType: UnhandledExceptionEventHandler\n  fullName: System.UnhandledExceptionEventHandler\n- uid: System._AppDomain.AppendPrivatePath*\n  parent: System._AppDomain\n  isExternal: false\n  name: AppendPrivatePath\n  nameWithType: _AppDomain.AppendPrivatePath\n- uid: System._AppDomain.BaseDirectory*\n  parent: System._AppDomain\n  isExternal: false\n  name: BaseDirectory\n  nameWithType: _AppDomain.BaseDirectory\n- uid: System._AppDomain.ClearPrivatePath*\n  parent: System._AppDomain\n  isExternal: false\n  name: ClearPrivatePath\n  nameWithType: _AppDomain.ClearPrivatePath\n- uid: System._AppDomain.ClearShadowCopyPath*\n  parent: System._AppDomain\n  isExternal: false\n  name: ClearShadowCopyPath\n  nameWithType: _AppDomain.ClearShadowCopyPath\n- uid: System._AppDomain.CreateInstance*\n  parent: System._AppDomain\n  isExternal: false\n  name: CreateInstance\n  nameWithType: _AppDomain.CreateInstance\n- uid: System._AppDomain.CreateInstanceFrom*\n  parent: System._AppDomain\n  isExternal: false\n  name: CreateInstanceFrom\n  nameWithType: _AppDomain.CreateInstanceFrom\n- uid: System._AppDomain.DefineDynamicAssembly*\n  parent: System._AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly\n  nameWithType: _AppDomain.DefineDynamicAssembly\n- uid: System._AppDomain.DoCallBack*\n  parent: System._AppDomain\n  isExternal: false\n  name: DoCallBack\n  nameWithType: _AppDomain.DoCallBack\n- uid: System._AppDomain.DynamicDirectory*\n  parent: System._AppDomain\n  isExternal: false\n  name: DynamicDirectory\n  nameWithType: _AppDomain.DynamicDirectory\n- uid: System._AppDomain.Equals*\n  parent: System._AppDomain\n  isExternal: false\n  name: Equals\n  nameWithType: _AppDomain.Equals\n- uid: System._AppDomain.Evidence*\n  parent: System._AppDomain\n  isExternal: false\n  name: Evidence\n  nameWithType: _AppDomain.Evidence\n- uid: System._AppDomain.ExecuteAssembly*\n  parent: System._AppDomain\n  isExternal: false\n  name: ExecuteAssembly\n  nameWithType: _AppDomain.ExecuteAssembly\n- uid: System._AppDomain.FriendlyName*\n  parent: System._AppDomain\n  isExternal: false\n  name: FriendlyName\n  nameWithType: _AppDomain.FriendlyName\n- uid: System._AppDomain.GetAssemblies*\n  parent: System._AppDomain\n  isExternal: false\n  name: GetAssemblies\n  nameWithType: _AppDomain.GetAssemblies\n- uid: System._AppDomain.GetData*\n  parent: System._AppDomain\n  isExternal: false\n  name: GetData\n  nameWithType: _AppDomain.GetData\n- uid: System._AppDomain.GetHashCode*\n  parent: System._AppDomain\n  isExternal: false\n  name: GetHashCode\n  nameWithType: _AppDomain.GetHashCode\n- uid: System._AppDomain.GetIDsOfNames*\n  parent: System._AppDomain\n  isExternal: false\n  name: GetIDsOfNames\n  nameWithType: _AppDomain.GetIDsOfNames\n- uid: System._AppDomain.GetLifetimeService*\n  parent: System._AppDomain\n  isExternal: false\n  name: GetLifetimeService\n  nameWithType: _AppDomain.GetLifetimeService\n- uid: System._AppDomain.GetType*\n  parent: System._AppDomain\n  isExternal: false\n  name: GetType\n  nameWithType: _AppDomain.GetType\n- uid: System._AppDomain.GetTypeInfo*\n  parent: System._AppDomain\n  isExternal: false\n  name: GetTypeInfo\n  nameWithType: _AppDomain.GetTypeInfo\n- uid: System._AppDomain.GetTypeInfoCount*\n  parent: System._AppDomain\n  isExternal: false\n  name: GetTypeInfoCount\n  nameWithType: _AppDomain.GetTypeInfoCount\n- uid: System._AppDomain.InitializeLifetimeService*\n  parent: System._AppDomain\n  isExternal: false\n  name: InitializeLifetimeService\n  nameWithType: _AppDomain.InitializeLifetimeService\n- uid: System._AppDomain.Invoke*\n  parent: System._AppDomain\n  isExternal: false\n  name: Invoke\n  nameWithType: _AppDomain.Invoke\n- uid: System._AppDomain.Load*\n  parent: System._AppDomain\n  isExternal: false\n  name: Load\n  nameWithType: _AppDomain.Load\n- uid: System._AppDomain.RelativeSearchPath*\n  parent: System._AppDomain\n  isExternal: false\n  name: RelativeSearchPath\n  nameWithType: _AppDomain.RelativeSearchPath\n- uid: System._AppDomain.SetAppDomainPolicy*\n  parent: System._AppDomain\n  isExternal: false\n  name: SetAppDomainPolicy\n  nameWithType: _AppDomain.SetAppDomainPolicy\n- uid: System._AppDomain.SetCachePath*\n  parent: System._AppDomain\n  isExternal: false\n  name: SetCachePath\n  nameWithType: _AppDomain.SetCachePath\n- uid: System._AppDomain.SetData*\n  parent: System._AppDomain\n  isExternal: false\n  name: SetData\n  nameWithType: _AppDomain.SetData\n- uid: System._AppDomain.SetPrincipalPolicy*\n  parent: System._AppDomain\n  isExternal: false\n  name: SetPrincipalPolicy\n  nameWithType: _AppDomain.SetPrincipalPolicy\n- uid: System._AppDomain.SetShadowCopyPath*\n  parent: System._AppDomain\n  isExternal: false\n  name: SetShadowCopyPath\n  nameWithType: _AppDomain.SetShadowCopyPath\n- uid: System._AppDomain.SetThreadPrincipal*\n  parent: System._AppDomain\n  isExternal: false\n  name: SetThreadPrincipal\n  nameWithType: _AppDomain.SetThreadPrincipal\n- uid: System._AppDomain.ShadowCopyFiles*\n  parent: System._AppDomain\n  isExternal: false\n  name: ShadowCopyFiles\n  nameWithType: _AppDomain.ShadowCopyFiles\n- uid: System._AppDomain.ToString*\n  parent: System._AppDomain\n  isExternal: false\n  name: ToString\n  nameWithType: _AppDomain.ToString\n"}