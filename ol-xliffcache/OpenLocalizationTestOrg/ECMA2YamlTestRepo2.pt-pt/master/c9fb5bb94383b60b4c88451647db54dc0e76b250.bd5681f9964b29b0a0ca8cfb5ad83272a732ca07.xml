{"nodes":[{"pos":[657,739],"content":"Configures a role for an application or component. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Configures a role for an application or component. This class cannot be inherited.","pos":[0,82],"nodes":[{"content":"Configures a role for an application or component.","pos":[0,50]},{"content":"This class cannot be inherited.","pos":[51,82]}]}]},{"pos":[752,1778],"content":"You can use the SecurityRoleAttribute to add roles to an application, and to associate them with components. When SecurityRoleAttribute is applied to an assembly as a whole, it ensures that the role exists in the application configuration (COM+ catalog). You can add members of the role using the COM+ Explorer.       When applied to a component, the SecurityRoleAttribute ensures that the role exists in the application configuration, and associates the target component with the role.       By default, created roles have no members. If the <xref:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess%2A> property is set to `true`, the Everyone user group is automatically added to the role. This is best for all-access type roles that are given minimal control over the system.       Security roles can be specified at the component level, per interface and per method. As with other method attributes, security configuration is not currently shared between interface definition and method implementation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use the SecurityRoleAttribute to add roles to an application, and to associate them with components.","pos":[0,108]},{"content":"When SecurityRoleAttribute is applied to an assembly as a whole, it ensures that the role exists in the application configuration (COM+ catalog).","pos":[109,254]},{"content":"You can add members of the role using the COM+ Explorer.","pos":[255,311]},{"content":"When applied to a component, the SecurityRoleAttribute ensures that the role exists in the application configuration, and associates the target component with the role.","pos":[318,486]},{"content":"By default, created roles have no members.","pos":[493,535]},{"content":"If the &lt;xref:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>, the Everyone user group is automatically added to the role.","pos":[536,705],"source":" If the <xref:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess%2A> property is set to `true`, the Everyone user group is automatically added to the role."},{"content":"This is best for all-access type roles that are given minimal control over the system.","pos":[706,792]},{"content":"Security roles can be specified at the component level, per interface and per method.","pos":[799,884]},{"content":"As with other method attributes, security configuration is not currently shared between interface definition and method implementation.","pos":[885,1020]}]},{"pos":[3231,3423],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.SecurityRoleAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and sets the &lt;xref:System.EnterpriseServices.SecurityRoleAttribute.Role*&gt; property.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.EnterpriseServices.SecurityRoleAttribute\"></xref> class and sets the <xref:System.EnterpriseServices.SecurityRoleAttribute.Role*> property."},{"pos":[4091,4160],"content":"A security role for the application, component, interface, or method.","needQuote":true,"needEscape":true,"nodes":[{"content":"A security role for the application, component, interface, or method.","pos":[0,69]}]},{"pos":[4815,5087],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.SecurityRoleAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and sets the &lt;xref:System.EnterpriseServices.SecurityRoleAttribute.Role<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess<ept id=\"p2\">*</ept>&gt; properties.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.EnterpriseServices.SecurityRoleAttribute\"></xref> class and sets the <xref:System.EnterpriseServices.SecurityRoleAttribute.Role*> and <xref:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess*> properties."},{"pos":[5246,5315],"content":"A security role for the application, component, interface, or method.","needQuote":true,"needEscape":true,"nodes":[{"content":"A security role for the application, component, interface, or method.","pos":[0,69]}]},{"pos":[5381,5601],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to require that the newly created role have the Everyone user group added as a user; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to require that the newly created role have the Everyone user group added as a user; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6125,6159],"content":"Gets or sets the role description.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the role description.","pos":[0,34]}]},{"pos":[6280,6309],"content":"The description for the role.","needQuote":true,"needEscape":true,"nodes":[{"content":"The description for the role.","pos":[0,29]}]},{"pos":[6804,6835],"content":"Gets or sets the security role.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the security role.","pos":[0,31]}]},{"pos":[6949,7026],"content":"The security role applied to an application, component, interface, or method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security role applied to an application, component, interface, or method.","pos":[0,77]}]},{"pos":[7579,7652],"content":"Sets a value indicating whether to add the Everyone user group as a user.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets a value indicating whether to add the Everyone user group as a user.","pos":[0,73]}]},{"pos":[7664,7927],"content":"Set this property to `false` to suppress adding the Everyone user group as a user to newly created roles. Set the property to `true` to require that a newly created role have Everyone added as a user. Roles which already exist on the application are not modified.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Set this property to <ph id=\"ph1\">`false`</ph> to suppress adding the Everyone user group as a user to newly created roles.","pos":[0,105],"source":"Set this property to `false` to suppress adding the Everyone user group as a user to newly created roles."},{"content":"Set the property to <ph id=\"ph1\">`true`</ph> to require that a newly created role have Everyone added as a user.","pos":[106,200],"source":" Set the property to `true` to require that a newly created role have Everyone added as a user."},{"content":"Roles which already exist on the application are not modified.","pos":[201,263]}]},{"pos":[8053,8387],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to require that a newly created role have the Everyone user group added as a user (roles that already exist on the application are not modified); otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to suppress adding the Everyone user group as a user.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to require that a newly created role have the Everyone user group added as a user (roles that already exist on the application are not modified); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to suppress adding the Everyone user group as a user."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.EnterpriseServices.SecurityRoleAttribute\n  id: SecurityRoleAttribute\n  children:\n  - System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)\n  - System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)\n  - System.EnterpriseServices.SecurityRoleAttribute.Description\n  - System.EnterpriseServices.SecurityRoleAttribute.Role\n  - System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess\n  langs:\n  - csharp\n  name: SecurityRoleAttribute\n  nameWithType: SecurityRoleAttribute\n  fullName: System.EnterpriseServices.SecurityRoleAttribute\n  type: Class\n  summary: Configures a role for an application or component. This class cannot be inherited.\n  remarks: \"You can use the SecurityRoleAttribute to add roles to an application, and to associate them with components. When SecurityRoleAttribute is applied to an assembly as a whole, it ensures that the role exists in the application configuration (COM+ catalog). You can add members of the role using the COM+ Explorer.  \\n  \\n When applied to a component, the SecurityRoleAttribute ensures that the role exists in the application configuration, and associates the target component with the role.  \\n  \\n By default, created roles have no members. If the <xref:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess%2A> property is set to `true`, the Everyone user group is automatically added to the role. This is best for all-access type roles that are given minimal control over the system.  \\n  \\n Security roles can be specified at the component level, per interface and per method. As with other method attributes, security configuration is not currently shared between interface definition and method implementation.\"\n  example:\n  - \"The following code example demonstrates the use of this attribute to associate a role with an assembly that contains <xref:System.EnterpriseServices.ServicedComponent> classes.  \\n  \\n [!code-cpp[EnterpriseServices_Security#3](~/add/codesnippet/cpp/t-system.enterpriseservi_22_1.cpp)]\\n [!code-cs[EnterpriseServices_Security#3](~/add/codesnippet/csharp/t-system.enterpriseservi_22_1.cs)]\\n [!code-vb[EnterpriseServices_Security#3](~/add/codesnippet/visualbasic/t-system.enterpriseservi_22_1.vb)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)]\n\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public sealed class SecurityRoleAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.EnterpriseServices.SecurityRoleAttribute\n  langs:\n  - csharp\n  name: SecurityRoleAttribute(String)\n  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String)\n  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Initializes a new instance of the <xref href=\"System.EnterpriseServices.SecurityRoleAttribute\"></xref> class and sets the <xref:System.EnterpriseServices.SecurityRoleAttribute.Role*> property.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of this attribute to associate a role with an assembly that contains <xref:System.EnterpriseServices.ServicedComponent> classes.  \\n  \\n [!code-cpp[EnterpriseServices_Security#3](~/add/codesnippet/cpp/m-system.enterpriseservi_5_1.cpp)]\\n [!code-cs[EnterpriseServices_Security#3](~/add/codesnippet/csharp/m-system.enterpriseservi_5_1.cs)]\\n [!code-vb[EnterpriseServices_Security#3](~/add/codesnippet/visualbasic/m-system.enterpriseservi_5_1.vb)]\"\n  syntax:\n    content: public SecurityRoleAttribute (string role);\n    parameters:\n    - id: role\n      type: System.String\n      description: A security role for the application, component, interface, or method.\n  overload: System.EnterpriseServices.SecurityRoleAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)\n  id: '#ctor(System.String,System.Boolean)'\n  parent: System.EnterpriseServices.SecurityRoleAttribute\n  langs:\n  - csharp\n  name: SecurityRoleAttribute(String,Boolean)\n  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)\n  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)\n  type: Constructor\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Initializes a new instance of the <xref href=\"System.EnterpriseServices.SecurityRoleAttribute\"></xref> class and sets the <xref:System.EnterpriseServices.SecurityRoleAttribute.Role*> and <xref:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess*> properties.\n  syntax:\n    content: public SecurityRoleAttribute (string role, bool everyone);\n    parameters:\n    - id: role\n      type: System.String\n      description: A security role for the application, component, interface, or method.\n    - id: everyone\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to require that the newly created role have the Everyone user group added as a user; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.EnterpriseServices.SecurityRoleAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.SecurityRoleAttribute.Description\n  id: Description\n  parent: System.EnterpriseServices.SecurityRoleAttribute\n  langs:\n  - csharp\n  name: Description\n  nameWithType: SecurityRoleAttribute.Description\n  fullName: System.EnterpriseServices.SecurityRoleAttribute.Description\n  type: Property\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Gets or sets the role description.\n  syntax:\n    content: public string Description { get; set; }\n    return:\n      type: System.String\n      description: The description for the role.\n  overload: System.EnterpriseServices.SecurityRoleAttribute.Description*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.SecurityRoleAttribute.Role\n  id: Role\n  parent: System.EnterpriseServices.SecurityRoleAttribute\n  langs:\n  - csharp\n  name: Role\n  nameWithType: SecurityRoleAttribute.Role\n  fullName: System.EnterpriseServices.SecurityRoleAttribute.Role\n  type: Property\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Gets or sets the security role.\n  syntax:\n    content: public string Role { get; set; }\n    return:\n      type: System.String\n      description: The security role applied to an application, component, interface, or method.\n  overload: System.EnterpriseServices.SecurityRoleAttribute.Role*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess\n  id: SetEveryoneAccess\n  parent: System.EnterpriseServices.SecurityRoleAttribute\n  langs:\n  - csharp\n  name: SetEveryoneAccess\n  nameWithType: SecurityRoleAttribute.SetEveryoneAccess\n  fullName: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess\n  type: Property\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Sets a value indicating whether to add the Everyone user group as a user.\n  remarks: Set this property to `false` to suppress adding the Everyone user group as a user to newly created roles. Set the property to `true` to require that a newly created role have Everyone added as a user. Roles which already exist on the application are not modified.\n  syntax:\n    content: public bool SetEveryoneAccess { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to require that a newly created role have the Everyone user group added as a user (roles that already exist on the application are not modified); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to suppress adding the Everyone user group as a user.\n  overload: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)\n  parent: System.EnterpriseServices.SecurityRoleAttribute\n  isExternal: false\n  name: SecurityRoleAttribute(String)\n  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String)\n  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)\n  parent: System.EnterpriseServices.SecurityRoleAttribute\n  isExternal: false\n  name: SecurityRoleAttribute(String,Boolean)\n  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)\n  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.EnterpriseServices.SecurityRoleAttribute.Description\n  parent: System.EnterpriseServices.SecurityRoleAttribute\n  isExternal: false\n  name: Description\n  nameWithType: SecurityRoleAttribute.Description\n  fullName: System.EnterpriseServices.SecurityRoleAttribute.Description\n- uid: System.EnterpriseServices.SecurityRoleAttribute.Role\n  parent: System.EnterpriseServices.SecurityRoleAttribute\n  isExternal: false\n  name: Role\n  nameWithType: SecurityRoleAttribute.Role\n  fullName: System.EnterpriseServices.SecurityRoleAttribute.Role\n- uid: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess\n  parent: System.EnterpriseServices.SecurityRoleAttribute\n  isExternal: false\n  name: SetEveryoneAccess\n  nameWithType: SecurityRoleAttribute.SetEveryoneAccess\n  fullName: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess\n- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor*\n  parent: System.EnterpriseServices.SecurityRoleAttribute\n  isExternal: false\n  name: SecurityRoleAttribute\n  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute\n- uid: System.EnterpriseServices.SecurityRoleAttribute.Description*\n  parent: System.EnterpriseServices.SecurityRoleAttribute\n  isExternal: false\n  name: Description\n  nameWithType: SecurityRoleAttribute.Description\n- uid: System.EnterpriseServices.SecurityRoleAttribute.Role*\n  parent: System.EnterpriseServices.SecurityRoleAttribute\n  isExternal: false\n  name: Role\n  nameWithType: SecurityRoleAttribute.Role\n- uid: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess*\n  parent: System.EnterpriseServices.SecurityRoleAttribute\n  isExternal: false\n  name: SetEveryoneAccess\n  nameWithType: SecurityRoleAttribute.SetEveryoneAccess\n"}