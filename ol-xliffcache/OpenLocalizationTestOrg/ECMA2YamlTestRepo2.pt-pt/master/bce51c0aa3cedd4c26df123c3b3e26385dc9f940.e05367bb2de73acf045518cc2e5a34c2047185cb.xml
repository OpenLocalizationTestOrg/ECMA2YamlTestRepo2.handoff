{"nodes":[{"pos":[547,587],"content":"Represents a delegating handler element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a delegating handler element.","pos":[0,40]}]},{"pos":[4029,4149],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.DelegatingHandlerElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.DelegatingHandlerElement\"></xref> class."},{"pos":[4995,5007],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5550,5595],"content":"Gets or sets the type of the handler element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the type of the handler element.","pos":[0,45]}]},{"pos":[5709,5721],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.DelegatingHandlerElement\n  id: DelegatingHandlerElement\n  children:\n  - System.ServiceModel.Configuration.DelegatingHandlerElement.#ctor\n  - System.ServiceModel.Configuration.DelegatingHandlerElement.Properties\n  - System.ServiceModel.Configuration.DelegatingHandlerElement.Type\n  langs:\n  - csharp\n  name: DelegatingHandlerElement\n  nameWithType: DelegatingHandlerElement\n  fullName: System.ServiceModel.Configuration.DelegatingHandlerElement\n  type: Class\n  summary: Represents a delegating handler element.\n  syntax:\n    content: 'public sealed class DelegatingHandlerElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.DelegatingHandlerElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.DelegatingHandlerElement\n  langs:\n  - csharp\n  name: DelegatingHandlerElement()\n  nameWithType: DelegatingHandlerElement.DelegatingHandlerElement()\n  fullName: System.ServiceModel.Configuration.DelegatingHandlerElement.DelegatingHandlerElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.DelegatingHandlerElement\"></xref> class.\n  syntax:\n    content: public DelegatingHandlerElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.DelegatingHandlerElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.DelegatingHandlerElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.DelegatingHandlerElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: DelegatingHandlerElement.Properties\n  fullName: System.ServiceModel.Configuration.DelegatingHandlerElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.ServiceModel.Configuration.DelegatingHandlerElement.Properties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.DelegatingHandlerElement.Type\n  id: Type\n  parent: System.ServiceModel.Configuration.DelegatingHandlerElement\n  langs:\n  - csharp\n  name: Type\n  nameWithType: DelegatingHandlerElement.Type\n  fullName: System.ServiceModel.Configuration.DelegatingHandlerElement.Type\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the type of the handler element.\n  syntax:\n    content: public string Type { get; set; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.ServiceModel.Configuration.DelegatingHandlerElement.Type*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.ServiceModel.Configuration.DelegatingHandlerElement.#ctor\n  parent: System.ServiceModel.Configuration.DelegatingHandlerElement\n  isExternal: false\n  name: DelegatingHandlerElement()\n  nameWithType: DelegatingHandlerElement.DelegatingHandlerElement()\n  fullName: System.ServiceModel.Configuration.DelegatingHandlerElement.DelegatingHandlerElement()\n- uid: System.ServiceModel.Configuration.DelegatingHandlerElement.Properties\n  parent: System.ServiceModel.Configuration.DelegatingHandlerElement\n  isExternal: false\n  name: Properties\n  nameWithType: DelegatingHandlerElement.Properties\n  fullName: System.ServiceModel.Configuration.DelegatingHandlerElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.DelegatingHandlerElement.Type\n  parent: System.ServiceModel.Configuration.DelegatingHandlerElement\n  isExternal: false\n  name: Type\n  nameWithType: DelegatingHandlerElement.Type\n  fullName: System.ServiceModel.Configuration.DelegatingHandlerElement.Type\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Configuration.DelegatingHandlerElement.#ctor*\n  parent: System.ServiceModel.Configuration.DelegatingHandlerElement\n  isExternal: false\n  name: DelegatingHandlerElement\n  nameWithType: DelegatingHandlerElement.DelegatingHandlerElement\n- uid: System.ServiceModel.Configuration.DelegatingHandlerElement.Properties*\n  parent: System.ServiceModel.Configuration.DelegatingHandlerElement\n  isExternal: false\n  name: Properties\n  nameWithType: DelegatingHandlerElement.Properties\n- uid: System.ServiceModel.Configuration.DelegatingHandlerElement.Type*\n  parent: System.ServiceModel.Configuration.DelegatingHandlerElement\n  isExternal: false\n  name: Type\n  nameWithType: DelegatingHandlerElement.Type\n"}