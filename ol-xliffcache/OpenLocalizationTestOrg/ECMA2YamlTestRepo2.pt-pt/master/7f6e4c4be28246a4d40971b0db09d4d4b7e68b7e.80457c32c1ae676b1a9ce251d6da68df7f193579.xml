{"nodes":[{"pos":[1026,1077],"content":"An activity that demarcates a transaction boundary.","needQuote":true,"needEscape":true,"nodes":[{"content":"An activity that demarcates a transaction boundary.","pos":[0,51]}]},{"pos":[1090,1616],"content":"When this activity begins executing, a new <xref:System.Transactions.Transaction> is started if one does not already exist. The transaction commits when the activity and all other participants in the transaction have completed successfully.      > [!NOTE] >  The <xref:System.Activities.Statements.TryCatch.Finally%2A> activity member of a <xref:System.Activities.Statements.TryCatch> activity that is the child of a TransactionScope will not execute if an unhandled exception propagates past the TransactionScope boundary.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When this activity begins executing, a new &lt;xref:System.Transactions.Transaction&gt; is started if one does not already exist.","pos":[0,123],"source":"When this activity begins executing, a new <xref:System.Transactions.Transaction> is started if one does not already exist."},{"content":"The transaction commits when the activity and all other participants in the transaction have completed successfully.","pos":[124,240]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Activities.Statements.TryCatch.Finally%2A&gt; activity member of a &lt;xref:System.Activities.Statements.TryCatch&gt; activity that is the child of a TransactionScope will not execute if an unhandled exception propagates past the TransactionScope boundary.","pos":[246,523],"source":"      > [!NOTE] >  The <xref:System.Activities.Statements.TryCatch.Finally%2A> activity member of a <xref:System.Activities.Statements.TryCatch> activity that is the child of a TransactionScope will not execute if an unhandled exception propagates past the TransactionScope boundary."}]},{"pos":[3696,3803],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.TransactionScope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Activities.Statements.TransactionScope\"></xref> class."},{"pos":[4847,4950],"content":"Gets or sets the value that indicates whether the workflow should be aborted if the transaction aborts.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the value that indicates whether the workflow should be aborted if the transaction aborts.","pos":[0,103]}]},{"pos":[4962,5085],"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","pos":[0,123],"nodes":[{"content":"This property is read-only at runtime.","pos":[0,38]},{"content":"If the value is set at runtime an &lt;xref:System.InvalidOperationException&gt; is thrown.","pos":[39,123],"source":" If the value is set at runtime an <xref:System.InvalidOperationException> is thrown."}]}]},{"pos":[5227,5322],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the workflow should be aborted.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the workflow should be aborted."},{"pos":[5821,5950],"content":"Gets or sets the activity that is scheduled when the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.TransactionScope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> executes.","needQuote":true,"needEscape":true,"source":"Gets or sets the activity that is scheduled when the <xref href=\"System.Activities.Statements.TransactionScope\"></xref> executes."},{"pos":[5962,6085],"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","pos":[0,123],"nodes":[{"content":"This property is read-only at runtime.","pos":[0,38]},{"content":"If the value is set at runtime an &lt;xref:System.InvalidOperationException&gt; is thrown.","pos":[39,123],"source":" If the value is set at runtime an <xref:System.InvalidOperationException> is thrown."}]}]},{"pos":[6232,6348],"content":"The activity that is scheduled when the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.TransactionScope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> executes.","needQuote":true,"needEscape":true,"source":"The activity that is scheduled when the <xref href=\"System.Activities.Statements.TransactionScope\"></xref> executes."},{"pos":[7227,7239],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7880,7892],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8735,8747],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9270,9419],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Transactions.IsolationLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for this <bpt id=\"p2\">&lt;xref href=\"System.Activities.Statements.TransactionScope\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Transactions.IsolationLevel\"></xref> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>."},{"pos":[9431,9554],"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","pos":[0,123],"nodes":[{"content":"This property is read-only at runtime.","pos":[0,38]},{"content":"If the value is set at runtime an &lt;xref:System.InvalidOperationException&gt; is thrown.","pos":[39,123],"source":" If the value is set at runtime an <xref:System.InvalidOperationException> is thrown."}]}]},{"pos":[9727,9863],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Transactions.IsolationLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for this <bpt id=\"p2\">&lt;xref href=\"System.Activities.Statements.TransactionScope\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Transactions.IsolationLevel\"></xref> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>."},{"pos":[10472,10660],"content":"Indicates whether the &lt;xref:System.Activities.Statements.TransactionScope.IsolationLevel*&gt; for this <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.TransactionScope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> should be serialized.","needQuote":true,"needEscape":true,"source":"Indicates whether the <xref:System.Activities.Statements.TransactionScope.IsolationLevel*> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref> should be serialized."},{"pos":[10807,11055],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Activities.Statements.TransactionScope.IsolationLevel*&gt; property value should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Activities.Statements.TransactionScope.IsolationLevel*> property value should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11644,11825],"content":"Indicates whether the &lt;xref:System.Activities.Statements.TransactionScope.Timeout*&gt; for this <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.TransactionScope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> should be serialized.","needQuote":true,"needEscape":true,"source":"Indicates whether the <xref:System.Activities.Statements.TransactionScope.Timeout*> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref> should be serialized."},{"pos":[11965,12206],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Activities.Statements.TransactionScope.Timeout*&gt; property value should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Activities.Statements.TransactionScope.Timeout*> property value should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12709,12884],"content":"Gets or sets the &lt;xref:System.TimeSpan&gt; that indicates the timeout period for the transaction used for this <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.TransactionScope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref:System.TimeSpan> that indicates the timeout period for the transaction used for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>."},{"pos":[12896,13019],"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.","pos":[0,123],"nodes":[{"content":"This property is read-only at runtime.","pos":[0,38]},{"content":"If the value is set at runtime an &lt;xref:System.InvalidOperationException&gt; is thrown.","pos":[39,123],"source":" If the value is set at runtime an <xref:System.InvalidOperationException> is thrown."}]}]},{"pos":[13567,13729],"content":"The &lt;xref:System.TimeSpan&gt; that indicates the timeout period for the transaction used for this <bpt id=\"p1\">&lt;xref href=\"System.Activities.Statements.TransactionScope\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.TimeSpan> that indicates the timeout period for the transaction used for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.TransactionScope\n  id: TransactionScope\n  children:\n  - System.Activities.Statements.TransactionScope.#ctor\n  - System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure\n  - System.Activities.Statements.TransactionScope.Body\n  - System.Activities.Statements.TransactionScope.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.TransactionScope.CanInduceIdle\n  - System.Activities.Statements.TransactionScope.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.TransactionScope.IsolationLevel\n  - System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel\n  - System.Activities.Statements.TransactionScope.ShouldSerializeTimeout\n  - System.Activities.Statements.TransactionScope.Timeout\n  langs:\n  - csharp\n  name: TransactionScope\n  nameWithType: TransactionScope\n  fullName: System.Activities.Statements.TransactionScope\n  type: Class\n  summary: An activity that demarcates a transaction boundary.\n  remarks: \"When this activity begins executing, a new <xref:System.Transactions.Transaction> is started if one does not already exist. The transaction commits when the activity and all other participants in the transaction have completed successfully.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Activities.Statements.TryCatch.Finally%2A> activity member of a <xref:System.Activities.Statements.TryCatch> activity that is the child of a TransactionScope will not execute if an unhandled exception propagates past the TransactionScope boundary.\"\n  example:\n  - \"The following code sample demonstrates creating a TransactionScope activity. This example is from the [Basic TransactionScope](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_NestedTransactionScope#1](~/add/codesnippet/csharp/nestedtransactionscopesample/program.cs#1)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Body\")]\n\n      public sealed class TransactionScope : System.Activities.NativeActivity\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  platform:\n  - net462\n- uid: System.Activities.Statements.TransactionScope.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: TransactionScope()\n  nameWithType: TransactionScope.TransactionScope()\n  fullName: System.Activities.Statements.TransactionScope.TransactionScope()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Statements.TransactionScope\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Basic TransactionScope](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_NestedTransactionScope#1](~/add/codesnippet/csharp/nestedtransactionscopesample/program.cs#1)]\"\n  syntax:\n    content: public TransactionScope ();\n    parameters: []\n  overload: System.Activities.Statements.TransactionScope.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure\n  id: AbortInstanceOnTransactionFailure\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: AbortInstanceOnTransactionFailure\n  nameWithType: TransactionScope.AbortInstanceOnTransactionFailure\n  fullName: System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the value that indicates whether the workflow should be aborted if the transaction aborts.\n  remarks: This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.\n  syntax:\n    content: public bool AbortInstanceOnTransactionFailure { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the workflow should be aborted.\n  overload: System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TransactionScope.Body\n  id: Body\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: Body\n  nameWithType: TransactionScope.Body\n  fullName: System.Activities.Statements.TransactionScope.Body\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the activity that is scheduled when the <xref href=\"System.Activities.Statements.TransactionScope\"></xref> executes.\n  remarks: This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.\n  syntax:\n    content: public System.Activities.Activity Body { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: The activity that is scheduled when the <xref href=\"System.Activities.Statements.TransactionScope\"></xref> executes.\n  overload: System.Activities.Statements.TransactionScope.Body*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TransactionScope.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: TransactionScope.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.TransactionScope.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Statements.TransactionScope.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TransactionScope.CanInduceIdle\n  id: CanInduceIdle\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: CanInduceIdle\n  nameWithType: TransactionScope.CanInduceIdle\n  fullName: System.Activities.Statements.TransactionScope.CanInduceIdle\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override bool CanInduceIdle { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Activities.Statements.TransactionScope.CanInduceIdle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TransactionScope.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: TransactionScope.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.TransactionScope.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: To be added.\n  overload: System.Activities.Statements.TransactionScope.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TransactionScope.IsolationLevel\n  id: IsolationLevel\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: IsolationLevel\n  nameWithType: TransactionScope.IsolationLevel\n  fullName: System.Activities.Statements.TransactionScope.IsolationLevel\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the <xref href=\"System.Transactions.IsolationLevel\"></xref> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>.\n  remarks: This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.\n  syntax:\n    content: public System.Transactions.IsolationLevel IsolationLevel { get; set; }\n    return:\n      type: System.Transactions.IsolationLevel\n      description: The <xref href=\"System.Transactions.IsolationLevel\"></xref> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>.\n  overload: System.Activities.Statements.TransactionScope.IsolationLevel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel\n  id: ShouldSerializeIsolationLevel\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: ShouldSerializeIsolationLevel()\n  nameWithType: TransactionScope.ShouldSerializeIsolationLevel()\n  fullName: System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Indicates whether the <xref:System.Activities.Statements.TransactionScope.IsolationLevel*> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref> should be serialized.\n  syntax:\n    content: public bool ShouldSerializeIsolationLevel ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Activities.Statements.TransactionScope.IsolationLevel*> property value should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TransactionScope.ShouldSerializeTimeout\n  id: ShouldSerializeTimeout\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: ShouldSerializeTimeout()\n  nameWithType: TransactionScope.ShouldSerializeTimeout()\n  fullName: System.Activities.Statements.TransactionScope.ShouldSerializeTimeout()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Indicates whether the <xref:System.Activities.Statements.TransactionScope.Timeout*> for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref> should be serialized.\n  syntax:\n    content: public bool ShouldSerializeTimeout ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Activities.Statements.TransactionScope.Timeout*> property value should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Statements.TransactionScope.ShouldSerializeTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TransactionScope.Timeout\n  id: Timeout\n  parent: System.Activities.Statements.TransactionScope\n  langs:\n  - csharp\n  name: Timeout\n  nameWithType: TransactionScope.Timeout\n  fullName: System.Activities.Statements.TransactionScope.Timeout\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the <xref:System.TimeSpan> that indicates the timeout period for the transaction used for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>.\n  remarks: This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.\n  example:\n  - \"The following code sample demonstrates setting the Timeout property of a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Basic TransactionScope](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_NestedTransactionScope#1](~/add/codesnippet/csharp/nestedtransactionscopesample/program.cs#1)]\"\n  syntax:\n    content: public System.Activities.InArgument<TimeSpan> Timeout { get; set; }\n    return:\n      type: System.Activities.InArgument{System.TimeSpan}\n      description: The <xref:System.TimeSpan> that indicates the timeout period for the transaction used for this <xref href=\"System.Activities.Statements.TransactionScope\"></xref>.\n  overload: System.Activities.Statements.TransactionScope.Timeout*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.NativeActivity\n  isExternal: false\n  name: System.Activities.NativeActivity\n- uid: System.Activities.Statements.TransactionScope.#ctor\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: TransactionScope()\n  nameWithType: TransactionScope.TransactionScope()\n  fullName: System.Activities.Statements.TransactionScope.TransactionScope()\n- uid: System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: AbortInstanceOnTransactionFailure\n  nameWithType: TransactionScope.AbortInstanceOnTransactionFailure\n  fullName: System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Statements.TransactionScope.Body\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: Body\n  nameWithType: TransactionScope.Body\n  fullName: System.Activities.Statements.TransactionScope.Body\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Statements.TransactionScope.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: TransactionScope.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.TransactionScope.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.TransactionScope.CanInduceIdle\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: TransactionScope.CanInduceIdle\n  fullName: System.Activities.Statements.TransactionScope.CanInduceIdle\n- uid: System.Activities.Statements.TransactionScope.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: TransactionScope.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.TransactionScope.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.TransactionScope.IsolationLevel\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: TransactionScope.IsolationLevel\n  fullName: System.Activities.Statements.TransactionScope.IsolationLevel\n- uid: System.Transactions.IsolationLevel\n  parent: System.Transactions\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: IsolationLevel\n  fullName: System.Transactions.IsolationLevel\n- uid: System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: ShouldSerializeIsolationLevel()\n  nameWithType: TransactionScope.ShouldSerializeIsolationLevel()\n  fullName: System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel()\n- uid: System.Activities.Statements.TransactionScope.ShouldSerializeTimeout\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: ShouldSerializeTimeout()\n  nameWithType: TransactionScope.ShouldSerializeTimeout()\n  fullName: System.Activities.Statements.TransactionScope.ShouldSerializeTimeout()\n- uid: System.Activities.Statements.TransactionScope.Timeout\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: Timeout\n  nameWithType: TransactionScope.Timeout\n  fullName: System.Activities.Statements.TransactionScope.Timeout\n- uid: System.Activities.InArgument{System.TimeSpan}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<TimeSpan>\n  nameWithType: InArgument<TimeSpan>\n  fullName: System.Activities.InArgument<System.TimeSpan>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: InArgument<System.TimeSpan>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.TimeSpan\n    name: TimeSpan\n    nameWithType: TimeSpan\n    fullName: TimeSpan\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.TransactionScope.#ctor*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: TransactionScope\n  nameWithType: TransactionScope.TransactionScope\n- uid: System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: AbortInstanceOnTransactionFailure\n  nameWithType: TransactionScope.AbortInstanceOnTransactionFailure\n- uid: System.Activities.Statements.TransactionScope.Body*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: Body\n  nameWithType: TransactionScope.Body\n- uid: System.Activities.Statements.TransactionScope.CacheMetadata*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: TransactionScope.CacheMetadata\n- uid: System.Activities.Statements.TransactionScope.CanInduceIdle*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: TransactionScope.CanInduceIdle\n- uid: System.Activities.Statements.TransactionScope.Execute*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: Execute\n  nameWithType: TransactionScope.Execute\n- uid: System.Activities.Statements.TransactionScope.IsolationLevel*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: TransactionScope.IsolationLevel\n- uid: System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: ShouldSerializeIsolationLevel\n  nameWithType: TransactionScope.ShouldSerializeIsolationLevel\n- uid: System.Activities.Statements.TransactionScope.ShouldSerializeTimeout*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: ShouldSerializeTimeout\n  nameWithType: TransactionScope.ShouldSerializeTimeout\n- uid: System.Activities.Statements.TransactionScope.Timeout*\n  parent: System.Activities.Statements.TransactionScope\n  isExternal: false\n  name: Timeout\n  nameWithType: TransactionScope.Timeout\n"}