<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-pt">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b732eeec3ed4f69c30799c6a57d0b4a98bfbe58</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.ToolStripTextBox.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e487c74cb8d9ac17c27c6de11a6a55a0b38f5776</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">03e4f0fe046f5368e47c34849e9bb63b4a72f3e8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a text box in a <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that allows the user to enter text.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>ToolStripTextBox is the &lt;xref:System.Windows.Forms.TextBox&gt; optimized for hosting in a &lt;xref:System.Windows.Forms.ToolStrip&gt;.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A subset of the hosted control's properties and events are exposed at the ToolStripTextBox level, but the underlying &lt;xref:System.Windows.Forms.TextBox&gt; control is fully accessible through the &lt;xref:System.Windows.Forms.ToolStripTextBox.TextBox%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ToolStripTextBox control allows the user to enter text in an application.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This control has additional functionality that is not found in the standard Windows text box control, including multiline editing.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a ToolStripTextBox control is used to display a single line of text or accept it as input.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.Windows.Forms.ToolStripTextBox.Multiline%2A&gt; to enable multiple lines of text to be displayed or entered.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the &lt;xref:System.Windows.Forms.ToolStripTextBox.AcceptsTab%2A&gt; and &lt;xref:System.Windows.Forms.ToolStripTextBox.AcceptsReturn%2A&gt; properties to <ph id="ph1">`true`</ph> to allow greater text manipulation in a multiline ToolStripTextBox control.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can limit the amount of text entered into a ToolStripTextBox control by setting the &lt;xref:System.Windows.Forms.ToolStripTextBox.MaxLength%2A&gt; property to a specific number of characters.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Windows.Forms.ToolStripTextBox.CharacterCasing%2A&gt; property to allow the user to type only uppercase, only lowercase, or a combination of uppercase and lowercase characters into the ToolStripTextBox control.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To restrict text from being entered in a ToolStripTextBox control, you can create an event handler for the &lt;xref:System.Windows.Forms.Control.KeyDown&gt; event in order to validate each character entered in the control.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also restrict all entry of data in a ToolStripTextBox control by setting the &lt;xref:System.Windows.Forms.ToolStripTextBox.ReadOnly%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified name.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class derived from a base control.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The control from which to derive the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether pressing ENTER in a multiline <bpt id="p1">&lt;xref href="System.Windows.Forms.TextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control creates a new line of text in the control or activates the default button for the form.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of this property is <ph id="ph1">`false`</ph>, the user must press CTRL+ENTER to create a new line in a multiline &lt;xref:System.Windows.Forms.ToolStripTextBox&gt; control.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no default button for the form, then the ENTER key will always create a new line of text in the control, no matter what the value of this property.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the ENTER key creates a new line of text in a multiline version of the control; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the ENTER key activates the default button for the form.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the AcceptsTab property is set to <ph id="ph1">`true`</ph>, the user must press CTRL+TAB to move the focus to the next control in the tab order.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if users can enter tabs in a multiline text box using the TAB key; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if pressing the TAB key moves the focus.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.Forms.ToolStripTextBox.AcceptsTab*&gt; property changes.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Appends text to the current text of the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The text to append to the current contents of the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets or sets a custom string collection to use when the &lt;xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource*&gt; property is set to <bpt id="p1">&lt;xref uid="langword_csharp_CustomSource" name="CustomSource" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the AutoCompleteCustomSource, &lt;xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A&gt;, and &lt;xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A&gt; properties to create a &lt;xref:System.Windows.Forms.ToolStripTextBox&gt; that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful for &lt;xref:System.Windows.Forms.ToolStripTextBox&gt; controls in which URLs, addresses, file names, or commands will be frequently entered.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The use of the AutoCompleteCustomSource property is optional, but you must set the &lt;xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A&gt; property to <ph id="ph1">`CustomSource`</ph> in order to use AutoCompleteCustomSource.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must use the &lt;xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A&gt; and &lt;xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A&gt; properties together.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.Forms.AutoCompleteStringCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use with &lt;xref:System.Windows.Forms.TextBox.AutoCompleteSource*&gt;.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets or sets an option that controls how automatic completion works for the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A&gt;, AutoCompleteMode, and &lt;xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A&gt; properties to create a &lt;xref:System.Windows.Forms.ToolStripTextBox&gt; that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful for &lt;xref:System.Windows.Forms.ToolStripTextBox&gt; controls in which URLs, addresses, file names, or commands will be frequently entered.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The use of the &lt;xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A&gt; property is optional, but you must set the &lt;xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A&gt; property to <ph id="ph1">`CustomSource`</ph> in order to use &lt;xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must use the AutoCompleteMode and &lt;xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A&gt; properties together.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Forms.AutoCompleteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.Forms.AutoCompleteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets or sets a value specifying the source of complete strings used for automatic completion.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A&gt;, &lt;xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A&gt;, and AutoCompleteSource properties to create a &lt;xref:System.Windows.Forms.ToolStripTextBox&gt; that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful for &lt;xref:System.Windows.Forms.ToolStripTextBox&gt; controls in which URLs, addresses, file names, or commands will be frequently entered.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The use of the &lt;xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A&gt; property is optional, but you must set the AutoCompleteSource property to <ph id="ph1">`CustomSource`</ph> in order to use &lt;xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must use the &lt;xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A&gt; and AutoCompleteSource properties together.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Forms.AutoCompleteSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.Forms.AutoCompleteSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This property is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The background image displayed in the control.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This property is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.Forms.ImageLayout"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets or sets the border type of the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the BorderStyle property to create borderless and flat style controls, in addition to the default three-dimensional control.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Forms.BorderStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.Forms.BorderStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.Forms.ToolStripTextBox.BorderStyle*&gt; property changes.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the user can undo the previous operation in a <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method returns <ph id="ph1">`true`</ph>, you can call the &lt;xref:System.Windows.Forms.ToolStripTextBox.Undo%2A&gt; method to undo the last operation in a &lt;xref:System.Windows.Forms.ToolStripTextBox&gt;.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the user can undo the previous operation performed in a text box control; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets or sets whether the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control modifies the case of characters as they are typed.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.Windows.Forms.TextBox.CharacterCasing%2A&gt; property to change the case of characters as required by your application.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Forms.CharacterCasing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.Forms.CharacterCasing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Clears all text from the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Clears information about the most recent operation from the undo buffer of the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this method to prevent an undo operation from repeating, based on the state of your application.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Copies the current selection in the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this method, instead of using the &lt;xref:System.Windows.Forms.Clipboard&gt; class, to copy text in the &lt;xref:System.Windows.Forms.ToolStripTextBox&gt; and place it in the Clipboard.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Moves the current selection in the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will only cut text from the &lt;xref:System.Windows.Forms.ToolStripTextBox&gt; if text is selected in the control.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this method, instead of using the &lt;xref:System.Windows.Forms.Clipboard&gt; class, to copy text in the &lt;xref:System.Windows.Forms.ToolStripTextBox&gt; and move it to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets the spacing, in pixels, between the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and adjacent items.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Forms.Padding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value representing the spacing.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets the default size of the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The default <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the <bpt id="p2">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> in pixels.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The default size is 100 pixels by 25 pixels.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Specifies that the value of the &lt;xref:System.Windows.Forms.ToolStripTextBox.SelectionLength*&gt; property is zero so that no characters are selected in the control.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Retrieves the character that is closest to the specified location within the control.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the location specified in the <ph id="ph1">`pt`</ph> parameter is outside the client area of the control, the first character of the string closest to the point specified in <ph id="ph2">`pt`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this method to determine which characters are located near a specific point within the control.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then use this value to perform operations on the text at that location.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the specified location in the <ph id="ph2">`pt`</ph> parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in <ph id="ph3">`pt`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The location from which to seek the nearest character.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The character at the specified location.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Retrieves the index of the character nearest to the specified location.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the character index that is closest to the position specified in the <ph id="ph1">`pt`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The character index is a zero-based index of text in the control, including spaces.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be useful if you want to perform tasks when the mouse pointer hovers over a word in the text of the control.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The location to search.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The zero-based character index at the specified location.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Retrieves the index of the first character of a given line.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`lineNum`</ph> parameter is negative, GetFirstCharIndexFromLine returns 0.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`lineNum`</ph> parameter exceeds the number of lines in the control, GetFirstCharIndexFromLine returns the first character index for the last line in the control.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetFirstCharIndexFromLine returns the first character index of a physical line.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The physical line is the displayed line, not the assigned line.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The number of displayed lines can be greater than the number of assigned lines due to word wrap.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you assign two long lines to a &lt;xref:System.Windows.Forms.RichTextBox&gt; control and set &lt;xref:System.Windows.Forms.ToolStripTextBox.Multiline%2A&gt; and &lt;xref:System.Windows.Forms.ToolStripTextBox.WordWrap%2A&gt; to <ph id="ph1">`true`</ph>, the two long assigned lines result in four physical (or displayed lines).</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The line for which to get the index of its first character.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The zero-based character index in the specified line.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Retrieves the index of the first character of the current line.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The zero-based character index in the current line.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Retrieves the line number from the specified character position within the text of the control.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables you to determine the line number based on the character index specified in the <ph id="ph1">`index`</ph> parameter of the method.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first line of text in the control returns the value zero.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetLineFromCharIndex method returns the physical line number where the indexed character is located within the control.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a portion of the first logical line of text in the control wraps to the next line, the GetLineFromCharIndex method returns 1 if the character at the specified character index has wrapped to the second physical line.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Windows.Forms.ToolStripTextBox.WordWrap%2A&gt; is set to <ph id="ph1">`false`</ph>, no portion of the line wraps to the next, and the method returns 0 for the specified character index.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this method to determine which line a specific character index is located within.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, after calling the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method to search for text, you can obtain the character index to where the search results are found.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can call this method with the character index returned by the &lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt; method to determine which line the word was found.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the character index specified in the <ph id="ph2">`index`</ph> parameter is beyond the available number of lines contained within the control, the last line number is returned.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The character index position to search.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The zero-based line number in which the character index is located.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Retrieves the location within the control at the specified character index.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables you to determine where in the control a specific character index is located.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a &lt;xref:System.Windows.Forms.ContextMenuStrip&gt; control.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The index of the character for which to retrieve the location.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The location of the specified character.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Retrieves the size of a rectangular area into which a control can be fitted.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The custom-sized area for a control.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>An ordered pair of type <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the width and height of a rectangle.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to keep text highlighted in a text box control while another form or a dialog box has focus, such as a spelling checker dialog box.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the selected text does not appear highlighted when the text box control loses focus; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if the selected text remains highlighted when the text box control loses focus.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.Forms.ToolStripTextBox.HideSelection*&gt; property changes.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Gets or sets the lines of text in a <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each element in the array becomes a line of text in the text box control.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Windows.Forms.ToolStripTextBox.Multiline%2A&gt; property of the text box control is set to <ph id="ph1">`true`</ph> and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>An array of strings that contains the text in a text box control.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum number of characters the user can type or paste into the text box control.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can limit the text entered into the control to the maximum length of the corresponding field in the database.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The number of characters that can be entered into the control.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The default is 32767 characters.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates that the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control has been modified by the user since the control was created or its contents were last set.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to determine if the user has modified the contents of the &lt;xref:System.Windows.Forms.ToolStripTextBox&gt; control.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also set this property in code to indicate that changes were made to the &lt;xref:System.Windows.Forms.ToolStripTextBox&gt; control by the application.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can be used by validation and data-saving methods to determine if changes were made in a &lt;xref:System.Windows.Forms.ToolStripTextBox&gt; control so the changed contents can be validated or saved.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the control's contents have been modified; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.Forms.ToolStripTextBox.Modified*&gt; property changes.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>This property is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>This event is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox.AcceptsTabChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnAcceptsTabChanged method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.EventArgs&gt; that contains the event data.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox.BorderStyleChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnBorderStyleChanged method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.EventArgs&gt; that contains the event data.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox.HideSelectionChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnHideSelectionChanged method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.EventArgs&gt; that contains the event data.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox.ModifiedChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnModifiedChanged method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.EventArgs&gt; that contains the event data.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox.MultilineChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnMultilineChanged method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.EventArgs&gt; that contains the event data.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox.ReadOnlyChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnReadOnlyChanged method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.EventArgs&gt; that contains the event data.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Subscribes events from the hosted control.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The control from which to subscribe events.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Unsubscribes events from the hosted control.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The control from which to unsubscribe events.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Replaces the current selection in the text box with the contents of the Clipboard.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Paste method will only paste text into the control if text is currently stored in the Clipboard.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether text in the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is set to <ph id="ph1">`true`</ph>, the contents of the control cannot be changed by the user at runtime, but you can still change the contents in code.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this feature instead of disabling the control with the &lt;xref:System.Windows.Forms.Control.Enabled%2A&gt; property to allow the contents to be copied.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is read-only; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.Forms.ToolStripTextBox.ReadOnly*&gt; property changes.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Scrolls the contents of the control to the current caret position.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables you to scroll the contents of the control until the caret is within the visible region of the control.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the caret is positioned below the visible region of the control, the ScrollToCaret method will scroll the contents of the control until the caret is visible at the bottom of the control.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Selects a range of text in the text box.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to set the start position to the first character in the control's text, set the <ph id="ph1">`start`</ph> parameter to 0.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You can programmatically move the caret within the text box by setting the <ph id="ph2">`start`</ph> parameter to the position within the text box where you want the caret to move to and set the <ph id="ph3">`length`</ph> parameter to a value of zero (0).</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text box must have focus in order for the caret to be moved.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The position of the first character in the current text selection within the text box.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The number of characters to select.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Selects all text in the text box.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables you to select all text within the control.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this method with the &lt;xref:System.Windows.Forms.TextBoxBase.Cut%2A&gt; method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the Clipboard.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating the currently selected text in the control.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can assign text to this property to change the text currently selected in the&lt;xref:System.Windows.Forms.ToolStripTextBox&gt;.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no text is currently selected in the&lt;xref:System.Windows.Forms.ToolStripTextBox&gt;, this property returns a zero-length string.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>A string that represents the currently selected text in the text box.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of characters selected in the<bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the value of the SelectionLength property is set to a value that is larger than the number of characters within the text of the control, the value of the SelectionLength property is set to the entire length of text within the control minus the value of the &lt;xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A&gt; property (if any value is specified for the &lt;xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A&gt; property).</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You can programmatically move the caret within the text box by setting the &lt;xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A&gt; to the position within the text box where you want the caret to move to and set the SelectionLength property to a value of zero (0).</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text box must have focus in order for the caret to be moved.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The number of characters selected in the<bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Gets or sets the starting point of text selected in the<bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no text is selected in the control, this property indicates the insertion point for new text.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>When text is selected in the text box control, changing this property might decrease the value of the &lt;xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the remaining text in the control after the position indicated by the SelectionStart property is less than the value of the &lt;xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A&gt; property, the value of the &lt;xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A&gt; property is automatically decreased.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the SelectionStart property never causes an increase in the &lt;xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You can programmatically move the caret within the text box by setting the SelectionStart to the position within the text box where you want the caret to move to and set the &lt;xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A&gt; property to a value of zero (0).</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text box must have focus in order for the caret to be moved.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The starting position of text selected in the<bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the defined shortcuts are enabled.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the ShortcutsEnabled property to enable or disable the following shortcut key combinations:      |Shortcut keys|Shortcut keys|   |-------------------|-------------------|   |CTRL+Z|CTRL+E|   |CTRL+C|CTRL+I|   |CTRL+X|CTRL+Y|   |CTRL+V|CTRL+BACKSPACE|   |CTRL+A|CTRL+DELETE|   |CTRL+L|SHIFT+DELETE|   |CTRL+R|SHIFT+INSERT|       You can override this property to specify other shortcut keys.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to enable the shortcuts; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Gets the hosted <bpt id="p1">&lt;xref href="System.Windows.Forms.TextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The hosted <bpt id="p1">&lt;xref href="System.Windows.Forms.TextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Gets or sets how text is aligned in a <bpt id="p1">&lt;xref href="System.Windows.Forms.TextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to align the text within a &lt;xref:System.Windows.Forms.TextBox&gt; to match the layout of text on your form.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if your controls are all located on the right side of the form, you can set the TextBoxTextAlign property to &lt;xref:System.Windows.Forms.HorizontalAlignment&gt;, and the text will be aligned with the right side of the control instead of the default left alignment.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Forms.HorizontalAlignment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration values that specifies how text is aligned in the control.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.Forms.HorizontalAlignment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the &lt;xref:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlign*&gt; property changes.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Gets the length of text in the control.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the TextLength property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The number of characters contained in the text of the <bpt id="p1">&lt;xref href="System.Windows.Forms.ToolStripTextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Undoes the last edit operation in the text box.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will undo the last clipboard or text change operation performed in the text box control if the &lt;xref:System.Windows.Forms.TextBoxBase.CanUndo%2A&gt; property returns <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>This property is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>