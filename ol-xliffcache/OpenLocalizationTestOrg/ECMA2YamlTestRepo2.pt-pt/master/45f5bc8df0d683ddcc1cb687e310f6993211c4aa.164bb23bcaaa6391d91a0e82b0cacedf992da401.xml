{"nodes":[{"pos":[732,1110],"content":"Provides data for the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlDocument.NodeChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"System.Xml.XmlDocument.NodeChanging\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref href=\"System.Xml.XmlDocument.NodeInserted\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, <bpt id=\"p4\">&lt;xref href=\"System.Xml.XmlDocument.NodeInserting\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>, <bpt id=\"p5\">&lt;xref href=\"System.Xml.XmlDocument.NodeRemoved\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> and <bpt id=\"p6\">&lt;xref href=\"System.Xml.XmlDocument.NodeRemoving\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept> events.","needQuote":true,"needEscape":true,"source":"Provides data for the <xref href=\"System.Xml.XmlDocument.NodeChanged\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeChanging\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeInserted\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeInserting\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeRemoved\"></xref> and <xref href=\"System.Xml.XmlDocument.NodeRemoving\"></xref> events."},{"pos":[1123,1841],"content":"The following C# code shows how to use the event handler.      ```   //Add a new event handler.   XmlDocument doc = new XmlDocument();   doc.NodeInserted += new XmlNodeChangedEventHandler(NodeInsertedHandler);   //Define the event handler.   void NodeInsertedHandler(Object src, XmlNodeChangedEventArgs args)   {    Console.WriteLine(\"Node \" + args.Node.Name + \" inserted!!\");   }   ```      > [!NOTE] >  If an operation is comprised of multiple actions, it results in multiple events. For example, an <xref:System.Xml.XmlNode.AppendChild%2A> call may have to remove the node being appended from its previous parent. In this case you will see a `NodeRemoved` event followed by a `NodeInserted` event.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following C# code shows how to use the event handler.","pos":[0,57]},{"content":"<ph id=\"ph1\">```   //Add a new event handler.   XmlDocument doc = new XmlDocument();   doc.NodeInserted += new XmlNodeChangedEventHandler(NodeInsertedHandler);   //Define the event handler.   void NodeInsertedHandler(Object src, XmlNodeChangedEventArgs args)   {    Console.WriteLine(\"Node \" + args.Node.Name + \" inserted!!\");   }   ```</ph><ph id=\"ph2\">      &gt; </ph><ph id=\"ph3\">[!NOTE]</ph> &gt;  If an operation is comprised of multiple actions, it results in multiple events.","pos":[63,485],"source":"```   //Add a new event handler.   XmlDocument doc = new XmlDocument();   doc.NodeInserted += new XmlNodeChangedEventHandler(NodeInsertedHandler);   //Define the event handler.   void NodeInsertedHandler(Object src, XmlNodeChangedEventArgs args)   {    Console.WriteLine(\"Node \" + args.Node.Name + \" inserted!!\");   }   ```      > [!NOTE] >  If an operation is comprised of multiple actions, it results in multiple events."},{"content":"For example, an &lt;xref:System.Xml.XmlNode.AppendChild%2A&gt; call may have to remove the node being appended from its previous parent.","pos":[486,616],"source":" For example, an <xref:System.Xml.XmlNode.AppendChild%2A> call may have to remove the node being appended from its previous parent."},{"content":"In this case you will see a <ph id=\"ph1\">`NodeRemoved`</ph> event followed by a <ph id=\"ph2\">`NodeInserted`</ph> event.","pos":[617,700],"source":" In this case you will see a `NodeRemoved` event followed by a `NodeInserted` event."}]},{"pos":[2810,2906],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNodeChangedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xml.XmlNodeChangedEventArgs\"></xref> class."},{"pos":[3203,3272],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that generated the event.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xml.XmlNode\"></xref> that generated the event."},{"pos":[3343,3470],"content":"The old parent <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the <bpt id=\"p2\">&lt;xref href=\"System.Xml.XmlNode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that generated the event.","needQuote":true,"needEscape":true,"source":"The old parent <xref href=\"System.Xml.XmlNode\"></xref> of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event."},{"pos":[3541,3668],"content":"The new parent <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the <bpt id=\"p2\">&lt;xref href=\"System.Xml.XmlNode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that generated the event.","needQuote":true,"needEscape":true,"source":"The new parent <xref href=\"System.Xml.XmlNode\"></xref> of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event."},{"pos":[3733,3819],"content":"The old value of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that generated the event.","needQuote":true,"needEscape":true,"source":"The old value of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event."},{"pos":[3884,3970],"content":"The new value of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that generated the event.","needQuote":true,"needEscape":true,"source":"The new value of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event."},{"pos":[4051,4108],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNodeChangedAction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xml.XmlNodeChangedAction\"></xref>."},{"pos":[4527,4595],"content":"Gets a value indicating what type of node change event is occurring.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating what type of node change event is occurring.","pos":[0,68]}]},{"pos":[4750,5558],"content":"An <xref uid=\"langword_csharp_XmlNodeChangedAction\" name=\"XmlNodeChangedAction\" href=\"\"></xref> value describing the node change event.       <table><thead><tr><th> XmlNodeChangedAction Value       </th><th> Description       </th></tr></thead><tbody><tr><td> Insert       </td><td> A node has been or will be inserted.       </td></tr><tr><td> Remove       </td><td> A node has been or will be removed.       </td></tr><tr><td> Change       </td><td> A node has been or will be changed.       </td></tr></tbody></table><div class=\"alert NOTE\">    The <xref uid=\"langword_csharp_Action\" name=\"Action\" href=\"\"></xref> value does not differentiate between when the event occurred (before or after). You can create separate event handlers to handle both instances.      </div>","needQuote":false,"needEscape":true,"nodes":[{"content":"An <xref uid=\"langword_csharp_XmlNodeChangedAction\" name=\"XmlNodeChangedAction\" href=\"\"></xref> value describing the node change event.       ","pos":[0,142],"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlNodeChangedAction\" name=\"XmlNodeChangedAction\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value describing the node change event.","pos":[0,135],"source":"An <xref uid=\"langword_csharp_XmlNodeChangedAction\" name=\"XmlNodeChangedAction\" href=\"\"></xref> value describing the node change event."}]},{"content":"XmlNodeChangedAction Value","pos":[165,191]},{"content":"Description","pos":[208,219]},{"content":"Insert","pos":[260,266]},{"content":" A node has been or will be inserted.       ","pos":[282,326],"nodes":[{"content":"A node has been or will be inserted.","pos":[1,37]}]},{"content":"Remove","pos":[345,351]},{"content":" A node has been or will be removed.       ","pos":[367,410],"nodes":[{"content":"A node has been or will be removed.","pos":[1,36]}]},{"content":"Change","pos":[429,435]},{"content":" A node has been or will be changed.       ","pos":[451,494],"nodes":[{"content":"A node has been or will be changed.","pos":[1,36]}]},{"content":"    The <xref uid=\"langword_csharp_Action\" name=\"Action\" href=\"\"></xref> value does not differentiate between when the event occurred (before or after). You can create separate event handlers to handle both instances.      ","pos":[544,767],"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Action\" name=\"Action\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value does not differentiate between when the event occurred (before or after).","pos":[4,152],"source":"    The <xref uid=\"langword_csharp_Action\" name=\"Action\" href=\"\"></xref> value does not differentiate between when the event occurred (before or after)."},{"content":"You can create separate event handlers to handle both instances.","pos":[153,217]}]}]},{"pos":[5994,6084],"content":"Gets the value of the <xref:System.Xml.XmlNode.ParentNode*> after the operation completes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the &lt;xref:System.Xml.XmlNode.ParentNode*&gt; after the operation completes.","pos":[0,90],"source":"Gets the value of the <xref:System.Xml.XmlNode.ParentNode*> after the operation completes."}]},{"pos":[6216,6606],"content":"The value of the <xref uid=\"langword_csharp_ParentNode\" name=\"ParentNode\" href=\"\"></xref> after the operation completes. This property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the node is being removed.       <div class=\"alert NOTE\">    For attribute nodes this property returns the <xref:System.Xml.XmlAttribute.OwnerElement*>.      </div>","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the <xref uid=\"langword_csharp_ParentNode\" name=\"ParentNode\" href=\"\"></xref> after the operation completes. This property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the node is being removed.       ","pos":[0,240],"nodes":[{"content":"The value of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ParentNode\" name=\"ParentNode\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> after the operation completes.","pos":[0,120],"source":"The value of the <xref uid=\"langword_csharp_ParentNode\" name=\"ParentNode\" href=\"\"></xref> after the operation completes."},{"content":"This property returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the node is being removed.","pos":[121,233],"source":" This property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the node is being removed."}]},{"content":"    For attribute nodes this property returns the <xref:System.Xml.XmlAttribute.OwnerElement*>.      ","pos":[264,365],"nodes":[{"content":"For attribute nodes this property returns the &lt;xref:System.Xml.XmlAttribute.OwnerElement*&gt;.","pos":[4,95],"source":"    For attribute nodes this property returns the <xref:System.Xml.XmlAttribute.OwnerElement*>."}]}]},{"pos":[7040,7071],"content":"Gets the new value of the node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the new value of the node.","pos":[0,31]}]},{"pos":[7185,7803],"content":"The new value of the node. This property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the node is neither an attribute nor a text node, or if the node is being removed.       If called in a <xref href=\"System.Xml.XmlDocument.NodeChanging\"></xref> event, <xref uid=\"langword_csharp_NewValue\" name=\"NewValue\" href=\"\"></xref> returns the value of the node if the change is successful. If called in a <xref href=\"System.Xml.XmlDocument.NodeChanged\"></xref> event, <xref uid=\"langword_csharp_NewValue\" name=\"NewValue\" href=\"\"></xref> returns the current value of the node.","needQuote":false,"needEscape":true,"nodes":[{"content":"The new value of the node.","pos":[0,26]},{"content":"This property returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the node is neither an attribute nor a text node, or if the node is being removed.","pos":[27,195],"source":" This property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the node is neither an attribute nor a text node, or if the node is being removed."},{"content":"If called in a <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlDocument.NodeChanging\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_NewValue\" name=\"NewValue\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> returns the value of the node if the change is successful.","pos":[202,408],"source":"       If called in a <xref href=\"System.Xml.XmlDocument.NodeChanging\"></xref> event, <xref uid=\"langword_csharp_NewValue\" name=\"NewValue\" href=\"\"></xref> returns the value of the node if the change is successful."},{"content":"If called in a <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlDocument.NodeChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_NewValue\" name=\"NewValue\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> returns the current value of the node.","pos":[409,594],"source":" If called in a <xref href=\"System.Xml.XmlDocument.NodeChanged\"></xref> event, <xref uid=\"langword_csharp_NewValue\" name=\"NewValue\" href=\"\"></xref> returns the current value of the node."}]},{"pos":[8216,8305],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is being added, removed or changed.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Xml.XmlNode\"></xref> that is being added, removed or changed."},{"pos":[8431,8632],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlNode\" name=\"XmlNode\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is being added, removed or changed; this property never returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_XmlNode\" name=\"XmlNode\" href=\"\"></xref> that is being added, removed or changed; this property never returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9065,9152],"content":"Gets the value of the <xref:System.Xml.XmlNode.ParentNode*> before the operation began.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the &lt;xref:System.Xml.XmlNode.ParentNode*&gt; before the operation began.","pos":[0,87],"source":"Gets the value of the <xref:System.Xml.XmlNode.ParentNode*> before the operation began."}]},{"pos":[9284,9676],"content":"The value of the <xref uid=\"langword_csharp_ParentNode\" name=\"ParentNode\" href=\"\"></xref> before the operation began. This property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the node did not have a parent.       <div class=\"alert NOTE\">    For attribute nodes this property returns the <xref:System.Xml.XmlAttribute.OwnerElement*>.      </div>","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of the <xref uid=\"langword_csharp_ParentNode\" name=\"ParentNode\" href=\"\"></xref> before the operation began. This property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the node did not have a parent.       ","pos":[0,242],"nodes":[{"content":"The value of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ParentNode\" name=\"ParentNode\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> before the operation began.","pos":[0,117],"source":"The value of the <xref uid=\"langword_csharp_ParentNode\" name=\"ParentNode\" href=\"\"></xref> before the operation began."},{"content":"This property returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the node did not have a parent.","pos":[118,235],"source":" This property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the node did not have a parent."}]},{"content":"    For attribute nodes this property returns the <xref:System.Xml.XmlAttribute.OwnerElement*>.      ","pos":[266,367],"nodes":[{"content":"For attribute nodes this property returns the &lt;xref:System.Xml.XmlAttribute.OwnerElement*&gt;.","pos":[4,95],"source":"    For attribute nodes this property returns the <xref:System.Xml.XmlAttribute.OwnerElement*>."}]}]},{"pos":[10110,10146],"content":"Gets the original value of the node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the original value of the node.","pos":[0,36]}]},{"pos":[10260,10922],"content":"The original value of the node. This property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the node is neither an attribute nor a text node, or if the node is being inserted.       If called in a <xref href=\"System.Xml.XmlDocument.NodeChanging\"></xref> event, <xref uid=\"langword_csharp_OldValue\" name=\"OldValue\" href=\"\"></xref> returns the current value of the node that will be replaced if the change is successful. If called in a <xref href=\"System.Xml.XmlDocument.NodeChanged\"></xref> event, <xref uid=\"langword_csharp_OldValue\" name=\"OldValue\" href=\"\"></xref> returns the value of node prior to the change.","needQuote":false,"needEscape":true,"nodes":[{"content":"The original value of the node.","pos":[0,31]},{"content":"This property returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the node is neither an attribute nor a text node, or if the node is being inserted.","pos":[32,201],"source":" This property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the node is neither an attribute nor a text node, or if the node is being inserted."},{"content":"If called in a <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlDocument.NodeChanging\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_OldValue\" name=\"OldValue\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> returns the current value of the node that will be replaced if the change is successful.","pos":[208,444],"source":"       If called in a <xref href=\"System.Xml.XmlDocument.NodeChanging\"></xref> event, <xref uid=\"langword_csharp_OldValue\" name=\"OldValue\" href=\"\"></xref> returns the current value of the node that will be replaced if the change is successful."},{"content":"If called in a <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlDocument.NodeChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_OldValue\" name=\"OldValue\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> returns the value of node prior to the change.","pos":[445,638],"source":" If called in a <xref href=\"System.Xml.XmlDocument.NodeChanged\"></xref> event, <xref uid=\"langword_csharp_OldValue\" name=\"OldValue\" href=\"\"></xref> returns the value of node prior to the change."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.XmlNodeChangedEventArgs\n  id: XmlNodeChangedEventArgs\n  children:\n  - System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)\n  - System.Xml.XmlNodeChangedEventArgs.Action\n  - System.Xml.XmlNodeChangedEventArgs.NewParent\n  - System.Xml.XmlNodeChangedEventArgs.NewValue\n  - System.Xml.XmlNodeChangedEventArgs.Node\n  - System.Xml.XmlNodeChangedEventArgs.OldParent\n  - System.Xml.XmlNodeChangedEventArgs.OldValue\n  langs:\n  - csharp\n  name: XmlNodeChangedEventArgs\n  nameWithType: XmlNodeChangedEventArgs\n  fullName: System.Xml.XmlNodeChangedEventArgs\n  type: Class\n  summary: Provides data for the <xref href=\"System.Xml.XmlDocument.NodeChanged\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeChanging\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeInserted\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeInserting\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeRemoved\"></xref> and <xref href=\"System.Xml.XmlDocument.NodeRemoving\"></xref> events.\n  remarks: \"The following C# code shows how to use the event handler.  \\n  \\n```  \\n//Add a new event handler.  \\nXmlDocument doc = new XmlDocument();  \\ndoc.NodeInserted += new XmlNodeChangedEventHandler(NodeInsertedHandler);  \\n//Define the event handler.  \\nvoid NodeInsertedHandler(Object src, XmlNodeChangedEventArgs args)  \\n{  \\n Console.WriteLine(\\\"Node \\\" + args.Node.Name + \\\" inserted!!\\\");  \\n}  \\n```  \\n  \\n> [!NOTE]\\n>  If an operation is comprised of multiple actions, it results in multiple events. For example, an <xref:System.Xml.XmlNode.AppendChild%2A> call may have to remove the node being appended from its previous parent. In this case you will see a `NodeRemoved` event followed by a `NodeInserted` event.\"\n  syntax:\n    content: 'public class XmlNodeChangedEventArgs : EventArgs'\n  inheritance:\n  - System.EventArgs\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)\n  id: '#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)'\n  parent: System.Xml.XmlNodeChangedEventArgs\n  langs:\n  - csharp\n  name: XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)\n  nameWithType: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)\n  fullName: System.Xml.XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Xml.XmlNodeChangedEventArgs\"></xref> class.\n  syntax:\n    content: public XmlNodeChangedEventArgs (System.Xml.XmlNode node, System.Xml.XmlNode oldParent, System.Xml.XmlNode newParent, string oldValue, string newValue, System.Xml.XmlNodeChangedAction action);\n    parameters:\n    - id: node\n      type: System.Xml.XmlNode\n      description: The <xref href=\"System.Xml.XmlNode\"></xref> that generated the event.\n    - id: oldParent\n      type: System.Xml.XmlNode\n      description: The old parent <xref href=\"System.Xml.XmlNode\"></xref> of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event.\n    - id: newParent\n      type: System.Xml.XmlNode\n      description: The new parent <xref href=\"System.Xml.XmlNode\"></xref> of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event.\n    - id: oldValue\n      type: System.String\n      description: The old value of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event.\n    - id: newValue\n      type: System.String\n      description: The new value of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event.\n    - id: action\n      type: System.Xml.XmlNodeChangedAction\n      description: The <xref href=\"System.Xml.XmlNodeChangedAction\"></xref>.\n  overload: System.Xml.XmlNodeChangedEventArgs.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNodeChangedEventArgs.Action\n  id: Action\n  parent: System.Xml.XmlNodeChangedEventArgs\n  langs:\n  - csharp\n  name: Action\n  nameWithType: XmlNodeChangedEventArgs.Action\n  fullName: System.Xml.XmlNodeChangedEventArgs.Action\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets a value indicating what type of node change event is occurring.\n  syntax:\n    content: public System.Xml.XmlNodeChangedAction Action { get; }\n    return:\n      type: System.Xml.XmlNodeChangedAction\n      description: \"An <xref uid=\\\"langword_csharp_XmlNodeChangedAction\\\" name=\\\"XmlNodeChangedAction\\\" href=\\\"\\\"></xref> value describing the node change event.  \\n  \\n <table><thead><tr><th> XmlNodeChangedAction Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> Insert  \\n  \\n </td><td> A node has been or will be inserted.  \\n  \\n </td></tr><tr><td> Remove  \\n  \\n </td><td> A node has been or will be removed.  \\n  \\n </td></tr><tr><td> Change  \\n  \\n </td><td> A node has been or will be changed.  \\n  \\n </td></tr></tbody></table><div class=\\\"alert NOTE\\\">  \\n The <xref uid=\\\"langword_csharp_Action\\\" name=\\\"Action\\\" href=\\\"\\\"></xref> value does not differentiate between when the event occurred (before or after). You can create separate event handlers to handle both instances.  \\n  \\n</div>\"\n  overload: System.Xml.XmlNodeChangedEventArgs.Action*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNodeChangedEventArgs.NewParent\n  id: NewParent\n  parent: System.Xml.XmlNodeChangedEventArgs\n  langs:\n  - csharp\n  name: NewParent\n  nameWithType: XmlNodeChangedEventArgs.NewParent\n  fullName: System.Xml.XmlNodeChangedEventArgs.NewParent\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the value of the <xref:System.Xml.XmlNode.ParentNode*> after the operation completes.\n  syntax:\n    content: public System.Xml.XmlNode NewParent { get; }\n    return:\n      type: System.Xml.XmlNode\n      description: \"The value of the <xref uid=\\\"langword_csharp_ParentNode\\\" name=\\\"ParentNode\\\" href=\\\"\\\"></xref> after the operation completes. This property returns <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> if the node is being removed.  \\n  \\n <div class=\\\"alert NOTE\\\">  \\n For attribute nodes this property returns the <xref:System.Xml.XmlAttribute.OwnerElement*>.  \\n  \\n</div>\"\n  overload: System.Xml.XmlNodeChangedEventArgs.NewParent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNodeChangedEventArgs.NewValue\n  id: NewValue\n  parent: System.Xml.XmlNodeChangedEventArgs\n  langs:\n  - csharp\n  name: NewValue\n  nameWithType: XmlNodeChangedEventArgs.NewValue\n  fullName: System.Xml.XmlNodeChangedEventArgs.NewValue\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the new value of the node.\n  syntax:\n    content: public string NewValue { get; }\n    return:\n      type: System.String\n      description: \"The new value of the node. This property returns <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> if the node is neither an attribute nor a text node, or if the node is being removed.  \\n  \\n If called in a <xref href=\\\"System.Xml.XmlDocument.NodeChanging\\\"></xref> event, <xref uid=\\\"langword_csharp_NewValue\\\" name=\\\"NewValue\\\" href=\\\"\\\"></xref> returns the value of the node if the change is successful. If called in a <xref href=\\\"System.Xml.XmlDocument.NodeChanged\\\"></xref> event, <xref uid=\\\"langword_csharp_NewValue\\\" name=\\\"NewValue\\\" href=\\\"\\\"></xref> returns the current value of the node.\"\n  overload: System.Xml.XmlNodeChangedEventArgs.NewValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNodeChangedEventArgs.Node\n  id: Node\n  parent: System.Xml.XmlNodeChangedEventArgs\n  langs:\n  - csharp\n  name: Node\n  nameWithType: XmlNodeChangedEventArgs.Node\n  fullName: System.Xml.XmlNodeChangedEventArgs.Node\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the <xref href=\"System.Xml.XmlNode\"></xref> that is being added, removed or changed.\n  syntax:\n    content: public System.Xml.XmlNode Node { get; }\n    return:\n      type: System.Xml.XmlNode\n      description: The <xref uid=\"langword_csharp_XmlNode\" name=\"XmlNode\" href=\"\"></xref> that is being added, removed or changed; this property never returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Xml.XmlNodeChangedEventArgs.Node*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNodeChangedEventArgs.OldParent\n  id: OldParent\n  parent: System.Xml.XmlNodeChangedEventArgs\n  langs:\n  - csharp\n  name: OldParent\n  nameWithType: XmlNodeChangedEventArgs.OldParent\n  fullName: System.Xml.XmlNodeChangedEventArgs.OldParent\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the value of the <xref:System.Xml.XmlNode.ParentNode*> before the operation began.\n  syntax:\n    content: public System.Xml.XmlNode OldParent { get; }\n    return:\n      type: System.Xml.XmlNode\n      description: \"The value of the <xref uid=\\\"langword_csharp_ParentNode\\\" name=\\\"ParentNode\\\" href=\\\"\\\"></xref> before the operation began. This property returns <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> if the node did not have a parent.  \\n  \\n <div class=\\\"alert NOTE\\\">  \\n For attribute nodes this property returns the <xref:System.Xml.XmlAttribute.OwnerElement*>.  \\n  \\n</div>\"\n  overload: System.Xml.XmlNodeChangedEventArgs.OldParent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNodeChangedEventArgs.OldValue\n  id: OldValue\n  parent: System.Xml.XmlNodeChangedEventArgs\n  langs:\n  - csharp\n  name: OldValue\n  nameWithType: XmlNodeChangedEventArgs.OldValue\n  fullName: System.Xml.XmlNodeChangedEventArgs.OldValue\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the original value of the node.\n  syntax:\n    content: public string OldValue { get; }\n    return:\n      type: System.String\n      description: \"The original value of the node. This property returns <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> if the node is neither an attribute nor a text node, or if the node is being inserted.  \\n  \\n If called in a <xref href=\\\"System.Xml.XmlDocument.NodeChanging\\\"></xref> event, <xref uid=\\\"langword_csharp_OldValue\\\" name=\\\"OldValue\\\" href=\\\"\\\"></xref> returns the current value of the node that will be replaced if the change is successful. If called in a <xref href=\\\"System.Xml.XmlDocument.NodeChanged\\\"></xref> event, <xref uid=\\\"langword_csharp_OldValue\\\" name=\\\"OldValue\\\" href=\\\"\\\"></xref> returns the value of node prior to the change.\"\n  overload: System.Xml.XmlNodeChangedEventArgs.OldValue*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.EventArgs\n  isExternal: false\n  name: System.EventArgs\n- uid: System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)\n  nameWithType: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)\n  fullName: System.Xml.XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)\n- uid: System.Xml.XmlNode\n  parent: System.Xml\n  isExternal: false\n  name: XmlNode\n  nameWithType: XmlNode\n  fullName: System.Xml.XmlNode\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.XmlNodeChangedAction\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeChangedAction\n  nameWithType: XmlNodeChangedAction\n  fullName: System.Xml.XmlNodeChangedAction\n- uid: System.Xml.XmlNodeChangedEventArgs.Action\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: Action\n  nameWithType: XmlNodeChangedEventArgs.Action\n  fullName: System.Xml.XmlNodeChangedEventArgs.Action\n- uid: System.Xml.XmlNodeChangedEventArgs.NewParent\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: NewParent\n  nameWithType: XmlNodeChangedEventArgs.NewParent\n  fullName: System.Xml.XmlNodeChangedEventArgs.NewParent\n- uid: System.Xml.XmlNodeChangedEventArgs.NewValue\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: NewValue\n  nameWithType: XmlNodeChangedEventArgs.NewValue\n  fullName: System.Xml.XmlNodeChangedEventArgs.NewValue\n- uid: System.Xml.XmlNodeChangedEventArgs.Node\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: Node\n  nameWithType: XmlNodeChangedEventArgs.Node\n  fullName: System.Xml.XmlNodeChangedEventArgs.Node\n- uid: System.Xml.XmlNodeChangedEventArgs.OldParent\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: OldParent\n  nameWithType: XmlNodeChangedEventArgs.OldParent\n  fullName: System.Xml.XmlNodeChangedEventArgs.OldParent\n- uid: System.Xml.XmlNodeChangedEventArgs.OldValue\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: OldValue\n  nameWithType: XmlNodeChangedEventArgs.OldValue\n  fullName: System.Xml.XmlNodeChangedEventArgs.OldValue\n- uid: System.Xml.XmlNodeChangedEventArgs.#ctor*\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: XmlNodeChangedEventArgs\n  nameWithType: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs\n- uid: System.Xml.XmlNodeChangedEventArgs.Action*\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: Action\n  nameWithType: XmlNodeChangedEventArgs.Action\n- uid: System.Xml.XmlNodeChangedEventArgs.NewParent*\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: NewParent\n  nameWithType: XmlNodeChangedEventArgs.NewParent\n- uid: System.Xml.XmlNodeChangedEventArgs.NewValue*\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: NewValue\n  nameWithType: XmlNodeChangedEventArgs.NewValue\n- uid: System.Xml.XmlNodeChangedEventArgs.Node*\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: Node\n  nameWithType: XmlNodeChangedEventArgs.Node\n- uid: System.Xml.XmlNodeChangedEventArgs.OldParent*\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: OldParent\n  nameWithType: XmlNodeChangedEventArgs.OldParent\n- uid: System.Xml.XmlNodeChangedEventArgs.OldValue*\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: OldValue\n  nameWithType: XmlNodeChangedEventArgs.OldValue\n"}