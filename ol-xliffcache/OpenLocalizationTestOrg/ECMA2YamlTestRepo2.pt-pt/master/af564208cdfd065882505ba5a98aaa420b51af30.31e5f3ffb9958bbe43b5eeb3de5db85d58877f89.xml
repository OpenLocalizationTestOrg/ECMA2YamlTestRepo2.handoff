{"nodes":[{"pos":[967,1057],"content":"Converts from a string to a <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Converts from a string to a <xref href=\"System.Windows.DependencyProperty\"></xref> object."},{"pos":[1070,2269],"content":"The DependencyPropertyConverter class only converts from a <xref:System.String> into an instance of <xref:System.Windows.DependencyProperty>. Other attempts at conversion throw an exception.       The DependencyPropertyConverter converts from a <xref:System.String> using the following input format: *typeName*`.`*propertyName*. A format of *namespacePrefix*:*typeName*`.`*propertyName* is also accepted for legacy reasons but the *namespacePrefix*: component is ignored. A format of *propertyName* is also accepted in certain cases; this format relies on the ability to evaluate ambient properties and deduce the *typeName*, by service implementation of <xref:System.Xaml.IAmbientProvider> in the context.       For legacy reasons, this class also supports conversion from BAML records, but this is an implementation detail and should not be relied upon.       The behavior of this converter is specifically oriented around a single WPF scenario for XAML processing: reading the attribute value of <xref:System.Windows.Setter.Property%2A> and generating a <xref:System.Windows.DependencyProperty> value.      <a name=\"xamlTextUsage_DependencyPropertyConverter\"></a>    ## XAML Text Usage","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The DependencyPropertyConverter class only converts from a &lt;xref:System.String&gt; into an instance of &lt;xref:System.Windows.DependencyProperty&gt;.","pos":[0,141],"source":"The DependencyPropertyConverter class only converts from a <xref:System.String> into an instance of <xref:System.Windows.DependencyProperty>."},{"content":"Other attempts at conversion throw an exception.","pos":[142,190]},{"content":"The DependencyPropertyConverter converts from a &lt;xref:System.String&gt; using the following input format: <bpt id=\"p1\">*</bpt>typeName<ept id=\"p1\">*</ept><ph id=\"ph1\">`.`</ph><bpt id=\"p2\">*</bpt>propertyName<ept id=\"p2\">*</ept>.","pos":[197,328],"source":"       The DependencyPropertyConverter converts from a <xref:System.String> using the following input format: *typeName*`.`*propertyName*."},{"content":"A format of <bpt id=\"p1\">*</bpt>namespacePrefix<ept id=\"p1\">*</ept>:<bpt id=\"p2\">*</bpt>typeName<ept id=\"p2\">*</ept><ph id=\"ph1\">`.`</ph><bpt id=\"p3\">*</bpt>propertyName<ept id=\"p3\">*</ept> is also accepted for legacy reasons but the <bpt id=\"p4\">*</bpt>namespacePrefix<ept id=\"p4\">*</ept>: component is ignored.","pos":[329,471],"source":" A format of *namespacePrefix*:*typeName*`.`*propertyName* is also accepted for legacy reasons but the *namespacePrefix*: component is ignored."},{"content":"A format of <bpt id=\"p1\">*</bpt>propertyName<ept id=\"p1\">*</ept> is also accepted in certain cases; this format relies on the ability to evaluate ambient properties and deduce the <bpt id=\"p2\">*</bpt>typeName<ept id=\"p2\">*</ept>, by service implementation of &lt;xref:System.Xaml.IAmbientProvider&gt; in the context.","pos":[472,706],"source":" A format of *propertyName* is also accepted in certain cases; this format relies on the ability to evaluate ambient properties and deduce the *typeName*, by service implementation of <xref:System.Xaml.IAmbientProvider> in the context."},{"content":"For legacy reasons, this class also supports conversion from BAML records, but this is an implementation detail and should not be relied upon.","pos":[713,855]},{"content":"The behavior of this converter is specifically oriented around a single WPF scenario for XAML processing: reading the attribute value of &lt;xref:System.Windows.Setter.Property%2A&gt; and generating a &lt;xref:System.Windows.DependencyProperty&gt; value.","pos":[862,1104],"source":"       The behavior of this converter is specifically oriented around a single WPF scenario for XAML processing: reading the attribute value of <xref:System.Windows.Setter.Property%2A> and generating a <xref:System.Windows.DependencyProperty> value."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_DependencyPropertyConverter\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage","pos":[1110,1188],"source":"<a name=\"xamlTextUsage_DependencyPropertyConverter\"></a>    ## XAML Text Usage"}]},{"pos":[6223,6334],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Markup.DependencyPropertyConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Markup.DependencyPropertyConverter\"></xref> class."},{"pos":[7161,7302],"content":"Determines whether an object of the specified type can be converted to an instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines whether an object of the specified type can be converted to an instance of <xref href=\"System.Windows.DependencyProperty\"></xref>."},{"pos":[7315,7588],"content":"The <xref:System.Windows.Markup.DependencyPropertyConverter> class only converts a string to an instance of <xref:System.Windows.DependencyProperty>. Therefore only a `sourceType` of <xref:System.String> returns `true`.       `context` is not used by this implementation.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt; class only converts a string to an instance of &lt;xref:System.Windows.DependencyProperty&gt;.","pos":[0,149],"source":"The <xref:System.Windows.Markup.DependencyPropertyConverter> class only converts a string to an instance of <xref:System.Windows.DependencyProperty>."},{"content":"Therefore only a <ph id=\"ph1\">`sourceType`</ph> of &lt;xref:System.String&gt; returns <ph id=\"ph2\">`true`</ph>.","pos":[150,219],"source":" Therefore only a `sourceType` of <xref:System.String> returns `true`."},{"content":"<ph id=\"ph1\">`context`</ph> is not used by this implementation.","pos":[226,271],"source":"`context` is not used by this implementation."}]},{"pos":[7832,7940],"content":"A format context that provides information about the environment from which this converter is being invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]},{"pos":[8005,8045],"content":"The type being evaluated for conversion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type being evaluated for conversion.","pos":[0,40]}]},{"pos":[8104,8284],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this converter can perform the operation; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9029,9157],"content":"Determines whether an instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> can be converted to the specified type.","needQuote":true,"needEscape":true,"source":"Determines whether an instance of <xref href=\"System.Windows.DependencyProperty\"></xref> can be converted to the specified type."},{"pos":[9169,9212],"content":"This implementation always returns <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This implementation always returns `false`."},{"pos":[9458,9566],"content":"A format context that provides information about the environment from which this converter is being invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]},{"pos":[9636,9676],"content":"The type being evaluated for conversion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type being evaluated for conversion.","pos":[0,40]}]},{"pos":[9735,9915],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this converter can perform the operation; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10765,10895],"content":"Attempts to convert the specified object to a <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, using the specified context.","needQuote":true,"needEscape":true,"source":"Attempts to convert the specified object to a <xref href=\"System.Windows.DependencyProperty\"></xref>, using the specified context."},{"pos":[10908,11365],"content":"The <xref:System.Windows.Markup.DependencyPropertyConverter> class only converts a string to an instance of <xref:System.Windows.DependencyProperty>.       `culture` is not used by this implementation.       The `context` provided is expected to provide services that are required for proper evaluation. These include <xref:System.Xaml.IAmbientProvider>, <xref:System.Windows.Markup.IXamlTypeResolver>, and <xref:System.Xaml.IXamlSchemaContextProvider>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt; class only converts a string to an instance of &lt;xref:System.Windows.DependencyProperty&gt;.","pos":[0,149],"source":"The <xref:System.Windows.Markup.DependencyPropertyConverter> class only converts a string to an instance of <xref:System.Windows.DependencyProperty>."},{"content":"<ph id=\"ph1\">`culture`</ph> is not used by this implementation.","pos":[156,201],"source":"`culture` is not used by this implementation."},{"content":"The <ph id=\"ph1\">`context`</ph> provided is expected to provide services that are required for proper evaluation.","pos":[208,303],"source":"       The `context` provided is expected to provide services that are required for proper evaluation."},{"content":"These include &lt;xref:System.Xaml.IAmbientProvider&gt;, &lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;, and &lt;xref:System.Xaml.IXamlSchemaContextProvider&gt;.","pos":[304,453],"source":" These include <xref:System.Xaml.IAmbientProvider>, <xref:System.Windows.Markup.IXamlTypeResolver>, and <xref:System.Xaml.IXamlSchemaContextProvider>."}]},{"pos":[11648,11756],"content":"A format context that provides information about the environment from which this converter is being invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]},{"pos":[11839,11868],"content":"Culture specific information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Culture specific information.","pos":[0,29]}]},{"pos":[11931,11953],"content":"The object to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to convert.","pos":[0,22]}]},{"pos":[12011,12131],"content":"The converted object. If the conversion is successful, this is a <xref href=\"System.Windows.DependencyProperty\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The converted object.","pos":[0,21]},{"content":"If the conversion is successful, this is a <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[22,120],"source":" If the conversion is successful, this is a <xref href=\"System.Windows.DependencyProperty\"></xref>."}]},{"pos":[12323,12363],"content":"<ph id=\"ph1\">&lt;code&gt;source&lt;/code&gt;</ph> cannot be converted.","needQuote":true,"needEscape":true,"source":"<code>source</code> cannot be converted."},{"pos":[12466,12575],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;source&lt;/code&gt;</ph> are <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>context</code> or <code>source</code> are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13361,13517],"content":"Attempts to convert a <xref href=\"System.Windows.DependencyProperty\"></xref> to the specified type, using the specified context. Always throws an exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to convert a <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the specified type, using the specified context.","pos":[0,128],"source":"Attempts to convert a <xref href=\"System.Windows.DependencyProperty\"></xref> to the specified type, using the specified context."},{"content":"Always throws an exception.","pos":[129,156]}]},{"pos":[13529,13576],"content":"This implementation always throws an exception.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This implementation always throws an exception.","pos":[0,47]}]},{"pos":[13877,13985],"content":"A format context that provides information about the environment from which this converter is being invoked.","needQuote":true,"needEscape":true,"nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]},{"pos":[14068,14097],"content":"Culture specific information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Culture specific information.","pos":[0,29]}]},{"pos":[14159,14181],"content":"The object to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to convert.","pos":[0,22]}]},{"pos":[14251,14285],"content":"The type to convert the object to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to convert the object to.","pos":[0,34]}]},{"pos":[14343,14370],"content":"Always throws an exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Always throws an exception.","pos":[0,27]}]},{"pos":[14560,14573],"content":"In all cases.","needQuote":true,"needEscape":true,"nodes":[{"content":"In all cases.","pos":[0,13]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Markup.DependencyPropertyConverter\n  id: DependencyPropertyConverter\n  children:\n  - System.Windows.Markup.DependencyPropertyConverter.#ctor\n  - System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: DependencyPropertyConverter\n  nameWithType: DependencyPropertyConverter\n  fullName: System.Windows.Markup.DependencyPropertyConverter\n  type: Class\n  summary: Converts from a string to a <xref href=\"System.Windows.DependencyProperty\"></xref> object.\n  remarks: \"The DependencyPropertyConverter class only converts from a <xref:System.String> into an instance of <xref:System.Windows.DependencyProperty>. Other attempts at conversion throw an exception.  \\n  \\n The DependencyPropertyConverter converts from a <xref:System.String> using the following input format: *typeName*`.`*propertyName*. A format of *namespacePrefix*:*typeName*`.`*propertyName* is also accepted for legacy reasons but the *namespacePrefix*: component is ignored. A format of *propertyName* is also accepted in certain cases; this format relies on the ability to evaluate ambient properties and deduce the *typeName*, by service implementation of <xref:System.Xaml.IAmbientProvider> in the context.  \\n  \\n For legacy reasons, this class also supports conversion from BAML records, but this is an implementation detail and should not be relied upon.  \\n  \\n The behavior of this converter is specifically oriented around a single WPF scenario for XAML processing: reading the attribute value of <xref:System.Windows.Setter.Property%2A> and generating a <xref:System.Windows.DependencyProperty> value.  \\n  \\n<a name=\\\"xamlTextUsage_DependencyPropertyConverter\\\"></a>   \\n## XAML Text Usage\"\n  syntax:\n    content: 'public sealed class DependencyPropertyConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  platform:\n  - net462\n- uid: System.Windows.Markup.DependencyPropertyConverter.#ctor\n  id: '#ctor'\n  parent: System.Windows.Markup.DependencyPropertyConverter\n  langs:\n  - csharp\n  name: DependencyPropertyConverter()\n  nameWithType: DependencyPropertyConverter.DependencyPropertyConverter()\n  fullName: System.Windows.Markup.DependencyPropertyConverter.DependencyPropertyConverter()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Markup.DependencyPropertyConverter\"></xref> class.\n  syntax:\n    content: public DependencyPropertyConverter ();\n    parameters: []\n  overload: System.Windows.Markup.DependencyPropertyConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Markup.DependencyPropertyConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: DependencyPropertyConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Determines whether an object of the specified type can be converted to an instance of <xref href=\"System.Windows.DependencyProperty\"></xref>.\n  remarks: \"The <xref:System.Windows.Markup.DependencyPropertyConverter> class only converts a string to an instance of <xref:System.Windows.DependencyProperty>. Therefore only a `sourceType` of <xref:System.String> returns `true`.  \\n  \\n `context` is not used by this implementation.\"\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: sourceType\n      type: System.Type\n      description: The type being evaluated for conversion.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Markup.DependencyPropertyConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: DependencyPropertyConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Determines whether an instance of <xref href=\"System.Windows.DependencyProperty\"></xref> can be converted to the specified type.\n  remarks: This implementation always returns `false`.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: destinationType\n      type: System.Type\n      description: The type being evaluated for conversion.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this converter can perform the operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Markup.DependencyPropertyConverter.CanConvertTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Markup.DependencyPropertyConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: DependencyPropertyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Attempts to convert the specified object to a <xref href=\"System.Windows.DependencyProperty\"></xref>, using the specified context.\n  remarks: \"The <xref:System.Windows.Markup.DependencyPropertyConverter> class only converts a string to an instance of <xref:System.Windows.DependencyProperty>.  \\n  \\n `culture` is not used by this implementation.  \\n  \\n The `context` provided is expected to provide services that are required for proper evaluation. These include <xref:System.Xaml.IAmbientProvider>, <xref:System.Windows.Markup.IXamlTypeResolver>, and <xref:System.Xaml.IXamlSchemaContextProvider>.\"\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Culture specific information.\n    - id: source\n      type: System.Object\n      description: The object to convert.\n    return:\n      type: System.Object\n      description: The converted object. If the conversion is successful, this is a <xref href=\"System.Windows.DependencyProperty\"></xref>.\n  overload: System.Windows.Markup.DependencyPropertyConverter.ConvertFrom*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>source</code> cannot be converted.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> or <code>source</code> are <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Markup.DependencyPropertyConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: DependencyPropertyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Windows.Markup.DependencyPropertyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Attempts to convert a <xref href=\"System.Windows.DependencyProperty\"></xref> to the specified type, using the specified context. Always throws an exception.\n  remarks: This implementation always throws an exception.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Culture specific information.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    - id: destinationType\n      type: System.Type\n      description: The type to convert the object to.\n    return:\n      type: System.Object\n      description: Always throws an exception.\n  overload: System.Windows.Markup.DependencyPropertyConverter.ConvertTo*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: In all cases.\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Windows.Markup.DependencyPropertyConverter.#ctor\n  parent: System.Windows.Markup.DependencyPropertyConverter\n  isExternal: false\n  name: DependencyPropertyConverter()\n  nameWithType: DependencyPropertyConverter.DependencyPropertyConverter()\n  fullName: System.Windows.Markup.DependencyPropertyConverter.DependencyPropertyConverter()\n- uid: System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Markup.DependencyPropertyConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: DependencyPropertyConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Markup.DependencyPropertyConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: DependencyPropertyConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(ITypeDescriptorContext,Type)\n- uid: System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Markup.DependencyPropertyConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: DependencyPropertyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Markup.DependencyPropertyConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: DependencyPropertyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Windows.Markup.DependencyPropertyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n- uid: System.Windows.Markup.DependencyPropertyConverter.#ctor*\n  parent: System.Windows.Markup.DependencyPropertyConverter\n  isExternal: false\n  name: DependencyPropertyConverter\n  nameWithType: DependencyPropertyConverter.DependencyPropertyConverter\n- uid: System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom*\n  parent: System.Windows.Markup.DependencyPropertyConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: DependencyPropertyConverter.CanConvertFrom\n- uid: System.Windows.Markup.DependencyPropertyConverter.CanConvertTo*\n  parent: System.Windows.Markup.DependencyPropertyConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: DependencyPropertyConverter.CanConvertTo\n- uid: System.Windows.Markup.DependencyPropertyConverter.ConvertFrom*\n  parent: System.Windows.Markup.DependencyPropertyConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: DependencyPropertyConverter.ConvertFrom\n- uid: System.Windows.Markup.DependencyPropertyConverter.ConvertTo*\n  parent: System.Windows.Markup.DependencyPropertyConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: DependencyPropertyConverter.ConvertTo\n"}