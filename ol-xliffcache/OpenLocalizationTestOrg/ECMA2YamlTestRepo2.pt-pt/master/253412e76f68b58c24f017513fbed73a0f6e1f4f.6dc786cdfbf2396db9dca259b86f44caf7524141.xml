{"nodes":[{"pos":[541,689],"content":"Defines the optional base class for XML Web services, which provides direct access to common ASP.NET objects, such as application and session state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the optional base class for XML Web services, which provides direct access to common ASP.NET objects, such as application and session state.","pos":[0,148]}]},{"pos":[702,2075],"content":"If you don't need access to the common ASP.NET objects, you can still create an XML Web service without deriving from WebService. Additional ASP.NET objects can be accessed through <xref:System.Web.Services.WebService.Context%2A>.       XML Web service methods that have the <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> property of either <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> or <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> set to `true`, do not have access to their <xref:System.Web.HttpContext>. As such, accessing any of the properties of the WebService class, from within that XML Web service method, return `null`.       If you are using the .NET Framework version 1.0 XML Web service methods that have either the <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> or <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> attribute applied to them with the <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> property of set to `true`, do not have access to their <xref:System.Web.HttpContext> using the static <xref:System.Web.HttpContext.Current%2A> property. To access the <xref:System.Web.HttpContext>, derive the class implementing the XML Web service method from WebService and access the <xref:System.Web.Services.WebService.Context%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you don't need access to the common ASP.NET objects, you can still create an XML Web service without deriving from WebService.","pos":[0,129]},{"content":"Additional ASP.NET objects can be accessed through &lt;xref:System.Web.Services.WebService.Context%2A&gt;.","pos":[130,230],"source":" Additional ASP.NET objects can be accessed through <xref:System.Web.Services.WebService.Context%2A>."},{"content":"XML Web service methods that have the &lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A&gt; property of either &lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute&gt; or &lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt; set to <ph id=\"ph1\">`true`</ph>, do not have access to their &lt;xref:System.Web.HttpContext&gt;.","pos":[237,565],"source":"       XML Web service methods that have the <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> property of either <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> or <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> set to `true`, do not have access to their <xref:System.Web.HttpContext>."},{"content":"As such, accessing any of the properties of the WebService class, from within that XML Web service method, return <ph id=\"ph1\">`null`</ph>.","pos":[566,687],"source":" As such, accessing any of the properties of the WebService class, from within that XML Web service method, return `null`."},{"content":"If you are using the .NET Framework version 1.0 XML Web service methods that have either the &lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute&gt; or &lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt; attribute applied to them with the &lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A&gt; property of set to <ph id=\"ph1\">`true`</ph>, do not have access to their &lt;xref:System.Web.HttpContext&gt; using the static &lt;xref:System.Web.HttpContext.Current%2A&gt; property.","pos":[694,1177],"source":"       If you are using the .NET Framework version 1.0 XML Web service methods that have either the <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> or <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> attribute applied to them with the <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> property of set to `true`, do not have access to their <xref:System.Web.HttpContext> using the static <xref:System.Web.HttpContext.Current%2A> property."},{"content":"To access the &lt;xref:System.Web.HttpContext&gt;, derive the class implementing the XML Web service method from WebService and access the &lt;xref:System.Web.Services.WebService.Context%2A&gt; property.","pos":[1178,1369],"source":" To access the <xref:System.Web.HttpContext>, derive the class implementing the XML Web service method from WebService and access the <xref:System.Web.Services.WebService.Context%2A> property."}]},{"pos":[3553,3645],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.WebService\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Services.WebService\"></xref> class."},{"pos":[4290,4347],"content":"Gets the application object for the current HTTP request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the application object for the current HTTP request.","pos":[0,57]}]},{"pos":[4359,4709],"content":"XML Web services can use both application state and session state. Application state is maintained across all sessions accessing an XML Web service regardless of whether session state is turned off for a method(by using the <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> property of the <xref:System.Web.Services.WebMethodAttribute>).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"XML Web services can use both application state and session state. Application state is maintained across all sessions accessing an XML Web service regardless of whether session state is turned off for a method(by using the <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> property of the <xref:System.Web.Services.WebMethodAttribute>).","pos":[0,350],"nodes":[{"content":"XML Web services can use both application state and session state.","pos":[0,66]},{"content":"Application state is maintained across all sessions accessing an XML Web service regardless of whether session state is turned off for a method(by using the &lt;xref:System.Web.Services.WebMethodAttribute.EnableSession%2A&gt; property of the &lt;xref:System.Web.Services.WebMethodAttribute&gt;).","pos":[67,350],"source":" Application state is maintained across all sessions accessing an XML Web service regardless of whether session state is turned off for a method(by using the <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> property of the <xref:System.Web.Services.WebMethodAttribute>)."}]}]},{"pos":[5134,5197],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.HttpApplicationState\"></xref> object."},{"pos":[5616,5795],"content":"Gets the ASP.NET <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the current request, which encapsulates all HTTP-specific context used by the HTTP server to process Web requests.","needQuote":true,"needEscape":true,"source":"Gets the ASP.NET <xref href=\"System.Web.HttpContext\"></xref> for the current request, which encapsulates all HTTP-specific context used by the HTTP server to process Web requests."},{"pos":[5807,6420],"content":"XML Web service methods that have either the <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> or <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> attribute applied to them with the <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> property of set to `true`, do not have access to their <xref:System.Web.HttpContext> using the static <xref:System.Web.HttpContext.Current%2A> property. To access the <xref:System.Web.HttpContext>, derive the class implementing the XML Web service method from <xref:System.Web.Services.WebService> and access the Context property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"XML Web service methods that have either the &lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute&gt; or &lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt; attribute applied to them with the &lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A&gt; property of set to <ph id=\"ph1\">`true`</ph>, do not have access to their &lt;xref:System.Web.HttpContext&gt; using the static &lt;xref:System.Web.HttpContext.Current%2A&gt; property.","pos":[0,435],"source":"XML Web service methods that have either the <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> or <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> attribute applied to them with the <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> property of set to `true`, do not have access to their <xref:System.Web.HttpContext> using the static <xref:System.Web.HttpContext.Current%2A> property."},{"content":"To access the &lt;xref:System.Web.HttpContext&gt;, derive the class implementing the XML Web service method from &lt;xref:System.Web.Services.WebService&gt; and access the Context property.","pos":[436,613],"source":" To access the <xref:System.Web.HttpContext>, derive the class implementing the XML Web service method from <xref:System.Web.Services.WebService> and access the Context property."}]},{"pos":[6792,6872],"content":"The ASP.NET <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the current request.","needQuote":true,"needEscape":true,"source":"The ASP.NET <xref href=\"System.Web.HttpContext\"></xref> for the current request."},{"pos":[7017,7102],"content":"<ph id=\"ph1\">&lt;code&gt;Context&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>Context</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7443,7526],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpServerUtility\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the current request.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Web.HttpServerUtility\"></xref> for the current request."},{"pos":[7538,7755],"content":"The <xref:System.Web.HttpServerUtility> class provides several methods that can be used in the processing of Web requests, including <xref:System.Web.HttpServerUtility.CreateObject%2A> (for instantiating COM objects).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.HttpServerUtility&gt; class provides several methods that can be used in the processing of Web requests, including &lt;xref:System.Web.HttpServerUtility.CreateObject%2A&gt; (for instantiating COM objects).","pos":[0,217],"source":"The <xref:System.Web.HttpServerUtility> class provides several methods that can be used in the processing of Web requests, including <xref:System.Web.HttpServerUtility.CreateObject%2A> (for instantiating COM objects)."}]},{"pos":[8134,8194],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpServerUtility\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.HttpServerUtility\"></xref> object."},{"pos":[8608,8712],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.SessionState.HttpSessionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance for the current request.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Web.SessionState.HttpSessionState\"></xref> instance for the current request."},{"pos":[9389,9524],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.SessionState.HttpSessionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> representing the ASP.NET session state object for the current session.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.SessionState.HttpSessionState\"></xref> representing the ASP.NET session state object for the current session."},{"pos":[9959,10050],"content":"Gets the version of the SOAP protocol used to make the SOAP request to the XML Web service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the version of the SOAP protocol used to make the SOAP request to the XML Web service.","pos":[0,91]}]},{"pos":[10063,10682],"content":"If the SOAP protocol was not used to communicate with the XML Web service, such as HTTP-GET or HTTP-POST, the value of the SoapVersion property is <xref:System.Web.Services.Protocols.SoapProtocolVersion>.       For XML Web services that do not derive from the <xref:System.Web.Services.WebService> class, the version of the SOAP protocol used to make the SOAP request to the XML Web service can be also be accessed using the \"WebServiceSoapVersion\" entry of the <xref:System.Web.HttpContext.Items%2A?displayProperty=fullName> property. That entry is of type <xref:System.Web.Services.Protocols.SoapProtocolVersion>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the SOAP protocol was not used to communicate with the XML Web service, such as HTTP-GET or HTTP-POST, the value of the SoapVersion property is <xref:System.Web.Services.Protocols.SoapProtocolVersion>.       For XML Web services that do not derive from the <xref:System.Web.Services.WebService> class, the version of the SOAP protocol used to make the SOAP request to the XML Web service can be also be accessed using the \"WebServiceSoapVersion\" entry of the <xref:System.Web.HttpContext.Items%2A?displayProperty=fullName> property. That entry is of type <xref:System.Web.Services.Protocols.SoapProtocolVersion>.","pos":[0,615],"nodes":[{"content":"If the SOAP protocol was not used to communicate with the XML Web service, such as HTTP-GET or HTTP-POST, the value of the SoapVersion property is &lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;.","pos":[0,204],"source":"If the SOAP protocol was not used to communicate with the XML Web service, such as HTTP-GET or HTTP-POST, the value of the SoapVersion property is <xref:System.Web.Services.Protocols.SoapProtocolVersion>."},{"content":"For XML Web services that do not derive from the &lt;xref:System.Web.Services.WebService&gt; class, the version of the SOAP protocol used to make the SOAP request to the XML Web service can be also be accessed using the \"WebServiceSoapVersion\" entry of the &lt;xref:System.Web.HttpContext.Items%2A?displayProperty=fullName&gt; property.","pos":[211,535],"source":"       For XML Web services that do not derive from the <xref:System.Web.Services.WebService> class, the version of the SOAP protocol used to make the SOAP request to the XML Web service can be also be accessed using the \"WebServiceSoapVersion\" entry of the <xref:System.Web.HttpContext.Items%2A?displayProperty=fullName> property."},{"content":"That entry is of type &lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;.","pos":[536,615],"source":" That entry is of type <xref:System.Web.Services.Protocols.SoapProtocolVersion>."}]}]},{"pos":[10878,11054],"content":"One of the <xref href=\"System.Web.Services.Protocols.SoapProtocolVersion\"></xref> values. The default is <xref href=\"System.Web.Services.Protocols.SoapProtocolVersion\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.Protocols.SoapProtocolVersion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,89],"source":"One of the <xref href=\"System.Web.Services.Protocols.SoapProtocolVersion\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Web.Services.Protocols.SoapProtocolVersion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[90,176],"source":" The default is <xref href=\"System.Web.Services.Protocols.SoapProtocolVersion\"></xref>."}]},{"pos":[11458,11606],"content":"Gets the ASP.NET server <xref:System.Web.HttpContext.User*> object. Can be used to authenticate whether a user is authorized to execute the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the ASP.NET server <xref:System.Web.HttpContext.User*> object. Can be used to authenticate whether a user is authorized to execute the request.","pos":[0,148],"nodes":[{"content":"Gets the ASP.NET server &lt;xref:System.Web.HttpContext.User*&gt; object.","pos":[0,67],"source":"Gets the ASP.NET server <xref:System.Web.HttpContext.User*> object."},{"content":"Can be used to authenticate whether a user is authorized to execute the request.","pos":[68,148]}]}]},{"pos":[12951,13072],"content":"A <xref:System.Security.Principal.IPrincipal> representing the ASP.NET server <xref:System.Web.HttpContext.User*> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Security.Principal.IPrincipal&gt; representing the ASP.NET server &lt;xref:System.Web.HttpContext.User*&gt; object.","pos":[0,121],"source":"A <xref:System.Security.Principal.IPrincipal> representing the ASP.NET server <xref:System.Web.HttpContext.User*> object."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Services.WebService\n  id: WebService\n  children:\n  - System.Web.Services.WebService.#ctor\n  - System.Web.Services.WebService.Application\n  - System.Web.Services.WebService.Context\n  - System.Web.Services.WebService.Server\n  - System.Web.Services.WebService.Session\n  - System.Web.Services.WebService.SoapVersion\n  - System.Web.Services.WebService.User\n  langs:\n  - csharp\n  name: WebService\n  nameWithType: WebService\n  fullName: System.Web.Services.WebService\n  type: Class\n  summary: Defines the optional base class for XML Web services, which provides direct access to common ASP.NET objects, such as application and session state.\n  remarks: \"If you don't need access to the common ASP.NET objects, you can still create an XML Web service without deriving from WebService. Additional ASP.NET objects can be accessed through <xref:System.Web.Services.WebService.Context%2A>.  \\n  \\n XML Web service methods that have the <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> property of either <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> or <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> set to `true`, do not have access to their <xref:System.Web.HttpContext>. As such, accessing any of the properties of the WebService class, from within that XML Web service method, return `null`.  \\n  \\n If you are using the .NET Framework version 1.0 XML Web service methods that have either the <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> or <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> attribute applied to them with the <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> property of set to `true`, do not have access to their <xref:System.Web.HttpContext> using the static <xref:System.Web.HttpContext.Current%2A> property. To access the <xref:System.Web.HttpContext>, derive the class implementing the XML Web service method from WebService and access the <xref:System.Web.Services.WebService.Context%2A> property.\"\n  example:\n  - \"The example below creates an XML Web service, deriving from WebService, in order to use the <xref:System.Web.Services.WebService.Context%2A> property to obtain the time of the request on the server.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: 'public class WebService : System.ComponentModel.MarshalByValueComponent'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.MarshalByValueComponent\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.MarshalByValueComponent.Container\n  - System.ComponentModel.MarshalByValueComponent.DesignMode\n  - System.ComponentModel.MarshalByValueComponent.Dispose\n  - System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)\n  - System.ComponentModel.MarshalByValueComponent.Disposed\n  - System.ComponentModel.MarshalByValueComponent.Events\n  - System.ComponentModel.MarshalByValueComponent.GetService(System.Type)\n  - System.ComponentModel.MarshalByValueComponent.Site\n  - System.ComponentModel.MarshalByValueComponent.ToString\n  platform:\n  - net462\n- uid: System.Web.Services.WebService.#ctor\n  id: '#ctor'\n  parent: System.Web.Services.WebService\n  langs:\n  - csharp\n  name: WebService()\n  nameWithType: WebService.WebService()\n  fullName: System.Web.Services.WebService.WebService()\n  type: Constructor\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services\n  summary: Initializes a new instance of the <xref href=\"System.Web.Services.WebService\"></xref> class.\n  remarks: ''\n  example:\n  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'\n  syntax:\n    content: public WebService ();\n    parameters: []\n  overload: System.Web.Services.WebService.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.WebService.Application\n  id: Application\n  parent: System.Web.Services.WebService\n  langs:\n  - csharp\n  name: Application\n  nameWithType: WebService.Application\n  fullName: System.Web.Services.WebService.Application\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services\n  summary: Gets the application object for the current HTTP request.\n  remarks: XML Web services can use both application state and session state. Application state is maintained across all sessions accessing an XML Web service regardless of whether session state is turned off for a method(by using the <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> property of the <xref:System.Web.Services.WebMethodAttribute>).\n  example:\n  - \"The example below demonstrates a hit counter, incrementing the count every time a browser calls the XML Web service method.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public System.Web.HttpApplicationState Application { get; }\n    return:\n      type: System.Web.HttpApplicationState\n      description: An <xref href=\"System.Web.HttpApplicationState\"></xref> object.\n  overload: System.Web.Services.WebService.Application*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.WebService.Context\n  id: Context\n  parent: System.Web.Services.WebService\n  langs:\n  - csharp\n  name: Context\n  nameWithType: WebService.Context\n  fullName: System.Web.Services.WebService.Context\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services\n  summary: Gets the ASP.NET <xref href=\"System.Web.HttpContext\"></xref> for the current request, which encapsulates all HTTP-specific context used by the HTTP server to process Web requests.\n  remarks: XML Web service methods that have either the <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> or <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> attribute applied to them with the <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> property of set to `true`, do not have access to their <xref:System.Web.HttpContext> using the static <xref:System.Web.HttpContext.Current%2A> property. To access the <xref:System.Web.HttpContext>, derive the class implementing the XML Web service method from <xref:System.Web.Services.WebService> and access the Context property.\n  example:\n  - \"The Example below uses the Context property to obtain the time of the request on the server.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public System.Web.HttpContext Context { get; }\n    return:\n      type: System.Web.HttpContext\n      description: The ASP.NET <xref href=\"System.Web.HttpContext\"></xref> for the current request.\n  overload: System.Web.Services.WebService.Context*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: <code>Context</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Services.WebService.Server\n  id: Server\n  parent: System.Web.Services.WebService\n  langs:\n  - csharp\n  name: Server\n  nameWithType: WebService.Server\n  fullName: System.Web.Services.WebService.Server\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services\n  summary: Gets the <xref href=\"System.Web.HttpServerUtility\"></xref> for the current request.\n  remarks: The <xref:System.Web.HttpServerUtility> class provides several methods that can be used in the processing of Web requests, including <xref:System.Web.HttpServerUtility.CreateObject%2A> (for instantiating COM objects).\n  example:\n  - \"The example below returns the computer name of the Web server using the Server property.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public System.Web.HttpServerUtility Server { get; }\n    return:\n      type: System.Web.HttpServerUtility\n      description: An <xref href=\"System.Web.HttpServerUtility\"></xref> object.\n  overload: System.Web.Services.WebService.Server*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.WebService.Session\n  id: Session\n  parent: System.Web.Services.WebService\n  langs:\n  - csharp\n  name: Session\n  nameWithType: WebService.Session\n  fullName: System.Web.Services.WebService.Session\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services\n  summary: Gets the <xref href=\"System.Web.SessionState.HttpSessionState\"></xref> instance for the current request.\n  remarks: ''\n  example:\n  - \"The example below uses session state to determine how many times a particular session accesses the XML Web service method `SessionHitCounter`. In this example, the <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> property of the <xref:System.Web.Services.WebMethodAttribute> is set to `true` in order to gain access to session state.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public System.Web.SessionState.HttpSessionState Session { get; }\n    return:\n      type: System.Web.SessionState.HttpSessionState\n      description: An <xref href=\"System.Web.SessionState.HttpSessionState\"></xref> representing the ASP.NET session state object for the current session.\n  overload: System.Web.Services.WebService.Session*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.WebService.SoapVersion\n  id: SoapVersion\n  parent: System.Web.Services.WebService\n  langs:\n  - csharp\n  name: SoapVersion\n  nameWithType: WebService.SoapVersion\n  fullName: System.Web.Services.WebService.SoapVersion\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services\n  summary: Gets the version of the SOAP protocol used to make the SOAP request to the XML Web service.\n  remarks: \"If the SOAP protocol was not used to communicate with the XML Web service, such as HTTP-GET or HTTP-POST, the value of the SoapVersion property is <xref:System.Web.Services.Protocols.SoapProtocolVersion>.  \\n  \\n For XML Web services that do not derive from the <xref:System.Web.Services.WebService> class, the version of the SOAP protocol used to make the SOAP request to the XML Web service can be also be accessed using the \\\"WebServiceSoapVersion\\\" entry of the <xref:System.Web.HttpContext.Items%2A?displayProperty=fullName> property. That entry is of type <xref:System.Web.Services.Protocols.SoapProtocolVersion>.\"\n  syntax:\n    content: public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }\n    return:\n      type: System.Web.Services.Protocols.SoapProtocolVersion\n      description: One of the <xref href=\"System.Web.Services.Protocols.SoapProtocolVersion\"></xref> values. The default is <xref href=\"System.Web.Services.Protocols.SoapProtocolVersion\"></xref>.\n  overload: System.Web.Services.WebService.SoapVersion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Services.WebService.User\n  id: User\n  parent: System.Web.Services.WebService\n  langs:\n  - csharp\n  name: User\n  nameWithType: WebService.User\n  fullName: System.Web.Services.WebService.User\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services\n  summary: Gets the ASP.NET server <xref:System.Web.HttpContext.User*> object. Can be used to authenticate whether a user is authorized to execute the request.\n  remarks: \"Both Internet Information Services (IIS) and the .NET Framework need to be configured for authentication in order for the User property to be meaningful. Authentication is the process of accepting credentials from a user and validating those credentials against some authority. If the credentials are valid, you have an authenticated identity. Authentication in the .NET Framework is configured by placing entries in the web.config file.  \\n  \\n The following example demonstrates the entries you place in the web.config file to enable Windows authentication.  \\n  \\n```  \\n<security>  \\n <authentication mode=\\\"Windows\\\"> <!-- Mode Options are Windows, Cookie, Passport and None or Empty String -->  \\n </authentication>  \\n </security>  \\n```  \\n  \\n For more information on setting up security for an XML Web service see [&#91;\\\\<topic://cpconSecuringASPNETWebServices>&#93;](http://msdn.microsoft.com/en-us/354b2ab1-2782-4542-b32a-dc560178b90c).\"\n  example:\n  - \"The example below looks up the authenticated user name and returns that name.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public System.Security.Principal.IPrincipal User { get; }\n    return:\n      type: System.Security.Principal.IPrincipal\n      description: A <xref:System.Security.Principal.IPrincipal> representing the ASP.NET server <xref:System.Web.HttpContext.User*> object.\n  overload: System.Web.Services.WebService.User*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.MarshalByValueComponent\n  isExternal: false\n  name: System.ComponentModel.MarshalByValueComponent\n- uid: System.Exception\n  isExternal: true\n  name: System.Exception\n- uid: System.Web.Services.WebService.#ctor\n  parent: System.Web.Services.WebService\n  isExternal: false\n  name: WebService()\n  nameWithType: WebService.WebService()\n  fullName: System.Web.Services.WebService.WebService()\n- uid: System.Web.Services.WebService.Application\n  parent: System.Web.Services.WebService\n  isExternal: false\n  name: Application\n  nameWithType: WebService.Application\n  fullName: System.Web.Services.WebService.Application\n- uid: System.Web.HttpApplicationState\n  parent: System.Web\n  isExternal: false\n  name: HttpApplicationState\n  nameWithType: HttpApplicationState\n  fullName: System.Web.HttpApplicationState\n- uid: System.Web.Services.WebService.Context\n  parent: System.Web.Services.WebService\n  isExternal: false\n  name: Context\n  nameWithType: WebService.Context\n  fullName: System.Web.Services.WebService.Context\n- uid: System.Web.HttpContext\n  parent: System.Web\n  isExternal: false\n  name: HttpContext\n  nameWithType: HttpContext\n  fullName: System.Web.HttpContext\n- uid: System.Web.Services.WebService.Server\n  parent: System.Web.Services.WebService\n  isExternal: false\n  name: Server\n  nameWithType: WebService.Server\n  fullName: System.Web.Services.WebService.Server\n- uid: System.Web.HttpServerUtility\n  parent: System.Web\n  isExternal: false\n  name: HttpServerUtility\n  nameWithType: HttpServerUtility\n  fullName: System.Web.HttpServerUtility\n- uid: System.Web.Services.WebService.Session\n  parent: System.Web.Services.WebService\n  isExternal: false\n  name: Session\n  nameWithType: WebService.Session\n  fullName: System.Web.Services.WebService.Session\n- uid: System.Web.SessionState.HttpSessionState\n  parent: System.Web.SessionState\n  isExternal: false\n  name: HttpSessionState\n  nameWithType: HttpSessionState\n  fullName: System.Web.SessionState.HttpSessionState\n- uid: System.Web.Services.WebService.SoapVersion\n  parent: System.Web.Services.WebService\n  isExternal: false\n  name: SoapVersion\n  nameWithType: WebService.SoapVersion\n  fullName: System.Web.Services.WebService.SoapVersion\n- uid: System.Web.Services.Protocols.SoapProtocolVersion\n  parent: System.Web.Services.Protocols\n  isExternal: false\n  name: SoapProtocolVersion\n  nameWithType: SoapProtocolVersion\n  fullName: System.Web.Services.Protocols.SoapProtocolVersion\n- uid: System.Web.Services.WebService.User\n  parent: System.Web.Services.WebService\n  isExternal: false\n  name: User\n  nameWithType: WebService.User\n  fullName: System.Web.Services.WebService.User\n- uid: System.Security.Principal.IPrincipal\n  parent: System.Security.Principal\n  isExternal: true\n  name: IPrincipal\n  nameWithType: IPrincipal\n  fullName: System.Security.Principal.IPrincipal\n- uid: System.Web.Services.WebService.#ctor*\n  parent: System.Web.Services.WebService\n  isExternal: false\n  name: WebService\n  nameWithType: WebService.WebService\n- uid: System.Web.Services.WebService.Application*\n  parent: System.Web.Services.WebService\n  isExternal: false\n  name: Application\n  nameWithType: WebService.Application\n- uid: System.Web.Services.WebService.Context*\n  parent: System.Web.Services.WebService\n  isExternal: false\n  name: Context\n  nameWithType: WebService.Context\n- uid: System.Web.Services.WebService.Server*\n  parent: System.Web.Services.WebService\n  isExternal: false\n  name: Server\n  nameWithType: WebService.Server\n- uid: System.Web.Services.WebService.Session*\n  parent: System.Web.Services.WebService\n  isExternal: false\n  name: Session\n  nameWithType: WebService.Session\n- uid: System.Web.Services.WebService.SoapVersion*\n  parent: System.Web.Services.WebService\n  isExternal: false\n  name: SoapVersion\n  nameWithType: WebService.SoapVersion\n- uid: System.Web.Services.WebService.User*\n  parent: System.Web.Services.WebService\n  isExternal: false\n  name: User\n  nameWithType: WebService.User\n"}