{"nodes":[{"pos":[384,428],"content":"Enumerates values of the recognizer's state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enumerates values of the recognizer's state.","pos":[0,44]}]},{"pos":[441,2763],"content":"RecognizerState encapsulates the running state of the default speech recognition engine for clients using <xref:System.Speech.Recognition.SpeechRecognizer> to access the Windows Desktop Speech Recognition Technology service.       Applications can obtain the current state of the desktop recognition engine as a RecognizerState object by querying the <xref:System.Speech.Recognition.SpeechRecognizer.State%2A> property on a <xref:System.Speech.Recognition.SpeechRecognizer> instance.  To obtain the state of the desktop recognition engine after it changes, applications can query the <xref:System.Speech.Recognition.StateChangedEventArgs.RecognizerState%2A> property of the <xref:System.Speech.Recognition.StateChangedEventArgs> object passed to a handler for <xref:System.Speech.Recognition.SpeechRecognizer.StateChanged> events.      > [!NOTE] >  <xref:System.Speech.Recognition.SpeechRecognitionEngine> instances run in-process and their running state is under the control of the application. Therefore, <xref:System.Speech.Recognition.SpeechRecognitionEngine> does not contain a property to return a RecognizerState object.       The state of a desktop speech recognition server is a read-only property and cannot be controlled programmatically. Users can change a shared speech recognizer's state using the Speech Recognition user interface (UI) or through the **Speech Recognition** member of the Windows **Control Panel**.       Both the **On** and **Sleep** settings in the Speech Recognition UI correspond to the `Listening` state. The **Off** setting in the Speech Recognition UI corresponds to Stopped.       <xref:System.Speech.Recognition.SpeechRecognizer.Enabled%2A> is the other property that affects the readiness of a shared speech recognition engine to receive and process speech input. You can use <xref:System.Speech.Recognition.SpeechRecognizer.Enabled%2A> to control whether or not a shared speech recognition engine's grammars are active for recognition. However, changing the <xref:System.Speech.Recognition.SpeechRecognizer.Enabled%2A> property has no effect on the RecognizerState property.       Information such as the description, the supported culture and audio formats, and the recognition engine name is encapsulated in the <xref:System.Speech.Recognition.RecognizerInfo> type.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"RecognizerState encapsulates the running state of the default speech recognition engine for clients using &lt;xref:System.Speech.Recognition.SpeechRecognizer&gt; to access the Windows Desktop Speech Recognition Technology service.","pos":[0,224],"source":"RecognizerState encapsulates the running state of the default speech recognition engine for clients using <xref:System.Speech.Recognition.SpeechRecognizer> to access the Windows Desktop Speech Recognition Technology service."},{"content":"Applications can obtain the current state of the desktop recognition engine as a RecognizerState object by querying the &lt;xref:System.Speech.Recognition.SpeechRecognizer.State%2A&gt; property on a &lt;xref:System.Speech.Recognition.SpeechRecognizer&gt; instance.","pos":[231,483],"source":"       Applications can obtain the current state of the desktop recognition engine as a RecognizerState object by querying the <xref:System.Speech.Recognition.SpeechRecognizer.State%2A> property on a <xref:System.Speech.Recognition.SpeechRecognizer> instance."},{"content":"To obtain the state of the desktop recognition engine after it changes, applications can query the &lt;xref:System.Speech.Recognition.StateChangedEventArgs.RecognizerState%2A&gt; property of the &lt;xref:System.Speech.Recognition.StateChangedEventArgs&gt; object passed to a handler for &lt;xref:System.Speech.Recognition.SpeechRecognizer.StateChanged&gt; events.","pos":[485,830],"source":"  To obtain the state of the desktop recognition engine after it changes, applications can query the <xref:System.Speech.Recognition.StateChangedEventArgs.RecognizerState%2A> property of the <xref:System.Speech.Recognition.StateChangedEventArgs> object passed to a handler for <xref:System.Speech.Recognition.SpeechRecognizer.StateChanged> events."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine&gt; instances run in-process and their running state is under the control of the application.","pos":[836,995],"source":"      > [!NOTE] >  <xref:System.Speech.Recognition.SpeechRecognitionEngine> instances run in-process and their running state is under the control of the application."},{"content":"Therefore, &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine&gt; does not contain a property to return a RecognizerState object.","pos":[996,1127],"source":" Therefore, <xref:System.Speech.Recognition.SpeechRecognitionEngine> does not contain a property to return a RecognizerState object."},{"content":"The state of a desktop speech recognition server is a read-only property and cannot be controlled programmatically.","pos":[1134,1249]},{"content":"Users can change a shared speech recognizer's state using the Speech Recognition user interface (UI) or through the <bpt id=\"p1\">**</bpt>Speech Recognition<ept id=\"p1\">**</ept> member of the Windows <bpt id=\"p2\">**</bpt>Control Panel<ept id=\"p2\">**</ept>.","pos":[1250,1429],"source":" Users can change a shared speech recognizer's state using the Speech Recognition user interface (UI) or through the **Speech Recognition** member of the Windows **Control Panel**."},{"content":"Both the <bpt id=\"p1\">**</bpt>On<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Sleep<ept id=\"p2\">**</ept> settings in the Speech Recognition UI correspond to the <ph id=\"ph1\">`Listening`</ph> state.","pos":[1436,1540],"source":"       Both the **On** and **Sleep** settings in the Speech Recognition UI correspond to the `Listening` state."},{"content":"The <bpt id=\"p1\">**</bpt>Off<ept id=\"p1\">**</ept> setting in the Speech Recognition UI corresponds to Stopped.","pos":[1541,1613],"source":" The **Off** setting in the Speech Recognition UI corresponds to Stopped."},{"content":"&lt;xref:System.Speech.Recognition.SpeechRecognizer.Enabled%2A&gt; is the other property that affects the readiness of a shared speech recognition engine to receive and process speech input.","pos":[1620,1804],"source":"       <xref:System.Speech.Recognition.SpeechRecognizer.Enabled%2A> is the other property that affects the readiness of a shared speech recognition engine to receive and process speech input."},{"content":"You can use &lt;xref:System.Speech.Recognition.SpeechRecognizer.Enabled%2A&gt; to control whether or not a shared speech recognition engine's grammars are active for recognition.","pos":[1805,1977],"source":" You can use <xref:System.Speech.Recognition.SpeechRecognizer.Enabled%2A> to control whether or not a shared speech recognition engine's grammars are active for recognition."},{"content":"However, changing the &lt;xref:System.Speech.Recognition.SpeechRecognizer.Enabled%2A&gt; property has no effect on the RecognizerState property.","pos":[1978,2116],"source":" However, changing the <xref:System.Speech.Recognition.SpeechRecognizer.Enabled%2A> property has no effect on the RecognizerState property."},{"content":"Information such as the description, the supported culture and audio formats, and the recognition engine name is encapsulated in the &lt;xref:System.Speech.Recognition.RecognizerInfo&gt; type.","pos":[2123,2309],"source":"       Information such as the description, the supported culture and audio formats, and the recognition engine name is encapsulated in the <xref:System.Speech.Recognition.RecognizerInfo> type."}]},{"pos":[3682,3753],"content":"The recognition engine is available to receive and analyze audio input.","needQuote":true,"needEscape":true,"nodes":[{"content":"The recognition engine is available to receive and analyze audio input.","pos":[0,71]}]},{"pos":[3872,3884],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4282,4347],"content":"The recognition engine is not receiving or analyzing audio input.","needQuote":true,"needEscape":true,"nodes":[{"content":"The recognition engine is not receiving or analyzing audio input.","pos":[0,65]}]},{"pos":[4464,4476],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Recognition.RecognizerState\n  id: RecognizerState\n  children:\n  - System.Speech.Recognition.RecognizerState.Listening\n  - System.Speech.Recognition.RecognizerState.Stopped\n  langs:\n  - csharp\n  name: RecognizerState\n  nameWithType: RecognizerState\n  fullName: System.Speech.Recognition.RecognizerState\n  type: Enum\n  summary: Enumerates values of the recognizer's state.\n  remarks: \"RecognizerState encapsulates the running state of the default speech recognition engine for clients using <xref:System.Speech.Recognition.SpeechRecognizer> to access the Windows Desktop Speech Recognition Technology service.  \\n  \\n Applications can obtain the current state of the desktop recognition engine as a RecognizerState object by querying the <xref:System.Speech.Recognition.SpeechRecognizer.State%2A> property on a <xref:System.Speech.Recognition.SpeechRecognizer> instance.  To obtain the state of the desktop recognition engine after it changes, applications can query the <xref:System.Speech.Recognition.StateChangedEventArgs.RecognizerState%2A> property of the <xref:System.Speech.Recognition.StateChangedEventArgs> object passed to a handler for <xref:System.Speech.Recognition.SpeechRecognizer.StateChanged> events.  \\n  \\n> [!NOTE]\\n>  <xref:System.Speech.Recognition.SpeechRecognitionEngine> instances run in-process and their running state is under the control of the application. Therefore, <xref:System.Speech.Recognition.SpeechRecognitionEngine> does not contain a property to return a RecognizerState object.  \\n  \\n The state of a desktop speech recognition server is a read-only property and cannot be controlled programmatically. Users can change a shared speech recognizer's state using the Speech Recognition user interface (UI) or through the **Speech Recognition** member of the Windows **Control Panel**.  \\n  \\n Both the **On** and **Sleep** settings in the Speech Recognition UI correspond to the `Listening` state. The **Off** setting in the Speech Recognition UI corresponds to Stopped.  \\n  \\n <xref:System.Speech.Recognition.SpeechRecognizer.Enabled%2A> is the other property that affects the readiness of a shared speech recognition engine to receive and process speech input. You can use <xref:System.Speech.Recognition.SpeechRecognizer.Enabled%2A> to control whether or not a shared speech recognition engine's grammars are active for recognition. However, changing the <xref:System.Speech.Recognition.SpeechRecognizer.Enabled%2A> property has no effect on the RecognizerState property.  \\n  \\n Information such as the description, the supported culture and audio formats, and the recognition engine name is encapsulated in the <xref:System.Speech.Recognition.RecognizerInfo> type.\"\n  example:\n  - \"In the example below, an application displays the state of a recognizer in its implementation of a handler for the <xref:System.Speech.Recognition.SpeechRecognizer.StateChanged> event.  \\n  \\n```  \\n  \\n_recognizer.StateChanged +=  \\n    delegate(object sender, StateChangedEventArgs eventArgs) {  \\n        _recognizerStateLabel.Text = \\\"Speech Recognizer State: \\\" + eventArgs.RecognizerState.ToString();  \\n    };  \\n  \\n```\"\n  syntax:\n    content: public enum RecognizerState\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Speech.Recognition.RecognizerState.Listening\n  id: Listening\n  parent: System.Speech.Recognition.RecognizerState\n  langs:\n  - csharp\n  name: Listening\n  nameWithType: RecognizerState.Listening\n  fullName: System.Speech.Recognition.RecognizerState.Listening\n  type: Field\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: The recognition engine is available to receive and analyze audio input.\n  syntax:\n    content: Listening\n    return:\n      type: System.Speech.Recognition.RecognizerState\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.RecognizerState.Stopped\n  id: Stopped\n  parent: System.Speech.Recognition.RecognizerState\n  langs:\n  - csharp\n  name: Stopped\n  nameWithType: RecognizerState.Stopped\n  fullName: System.Speech.Recognition.RecognizerState.Stopped\n  type: Field\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: The recognition engine is not receiving or analyzing audio input.\n  syntax:\n    content: Stopped\n    return:\n      type: System.Speech.Recognition.RecognizerState\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Speech.Recognition.RecognizerState.Listening\n  parent: System.Speech.Recognition.RecognizerState\n  isExternal: false\n  name: Listening\n  nameWithType: RecognizerState.Listening\n  fullName: System.Speech.Recognition.RecognizerState.Listening\n- uid: System.Speech.Recognition.RecognizerState\n  parent: System.Speech.Recognition\n  isExternal: false\n  name: RecognizerState\n  nameWithType: RecognizerState\n  fullName: System.Speech.Recognition.RecognizerState\n- uid: System.Speech.Recognition.RecognizerState.Stopped\n  parent: System.Speech.Recognition.RecognizerState\n  isExternal: false\n  name: Stopped\n  nameWithType: RecognizerState.Stopped\n  fullName: System.Speech.Recognition.RecognizerState.Stopped\n"}