{"nodes":[{"pos":[498,582],"content":"Provides validation of a string based on the rules provided by a regular expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides validation of a string based on the rules provided by a regular expression.","pos":[0,84]}]},{"pos":[595,1092],"content":"The RegexStringValidator object contains the rules necessary to validate a string object based on a regular expression. The rules are established when an instance of the RegexStringValidator class is created.       The <xref:System.Configuration.RegexStringValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type. The object being validated is passed as a parameter of the <xref:System.Configuration.RegexStringValidator.Validate%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RegexStringValidator object contains the rules necessary to validate a string object based on a regular expression. The rules are established when an instance of the RegexStringValidator class is created.       The <xref:System.Configuration.RegexStringValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type. The object being validated is passed as a parameter of the <xref:System.Configuration.RegexStringValidator.Validate%2A> method.","pos":[0,495],"nodes":[{"content":"The RegexStringValidator object contains the rules necessary to validate a string object based on a regular expression.","pos":[0,119]},{"content":"The rules are established when an instance of the RegexStringValidator class is created.","pos":[120,208]},{"content":"The &lt;xref:System.Configuration.RegexStringValidator.CanValidate%2A&gt; method determines whether the object type being validated matches the expected type.","pos":[215,367],"source":"       The <xref:System.Configuration.RegexStringValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type."},{"content":"The object being validated is passed as a parameter of the &lt;xref:System.Configuration.RegexStringValidator.Validate%2A&gt; method.","pos":[368,495],"source":" The object being validated is passed as a parameter of the <xref:System.Configuration.RegexStringValidator.Validate%2A> method."}]}]},{"pos":[2154,2257],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.RegexStringValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.RegexStringValidator\"></xref> class."},{"pos":[2402,2447],"content":"A string that specifies a regular expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that specifies a regular expression.","pos":[0,45]}]},{"pos":[2617,2668],"content":"<ph id=\"ph1\">&lt;code&gt;regex&lt;/code&gt;</ph> is null or an empty string (\"\").","needQuote":true,"needEscape":true,"source":"<code>regex</code> is null or an empty string (\"\")."},{"pos":[3121,3180],"content":"Determines whether the type of the object can be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the type of the object can be validated.","pos":[0,59]}]},{"pos":[3192,3239],"content":"An exception is thrown if the validation fails.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"An exception is thrown if the validation fails.","pos":[0,47]}]},{"pos":[3840,3859],"content":"The type of object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of object.","pos":[0,19]}]},{"pos":[3918,4106],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter matches a string; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>type</code> parameter matches a string; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4638,4689],"content":"Determines whether the value of an object is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the value of an object is valid.","pos":[0,51]}]},{"pos":[4701,5042],"content":"A <xref:System.Configuration.RegexStringValidator> object contains the rules necessary to validate a string object based on a regular expression. The rules are established when an instance of the <xref:System.Configuration.RegexStringValidator> class is created. The string object to validate is passed as a parameter of the Validate method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A <xref:System.Configuration.RegexStringValidator> object contains the rules necessary to validate a string object based on a regular expression. The rules are established when an instance of the <xref:System.Configuration.RegexStringValidator> class is created. The string object to validate is passed as a parameter of the Validate method.","pos":[0,341],"nodes":[{"content":"A &lt;xref:System.Configuration.RegexStringValidator&gt; object contains the rules necessary to validate a string object based on a regular expression.","pos":[0,145],"source":"A <xref:System.Configuration.RegexStringValidator> object contains the rules necessary to validate a string object based on a regular expression."},{"content":"The rules are established when an instance of the &lt;xref:System.Configuration.RegexStringValidator&gt; class is created.","pos":[146,262],"source":" The rules are established when an instance of the <xref:System.Configuration.RegexStringValidator> class is created."},{"content":"The string object to validate is passed as a parameter of the Validate method.","pos":[263,341]}]}]},{"pos":[5640,5663],"content":"The value of an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of an object.","pos":[0,23]}]},{"pos":[5836,5947],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> does not conform to the parameters of the <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> class.","needQuote":true,"needEscape":true,"source":"<code>value</code> does not conform to the parameters of the <xref:System.Text.RegularExpressions.Regex> class."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.RegexStringValidator\n  id: RegexStringValidator\n  children:\n  - System.Configuration.RegexStringValidator.#ctor(System.String)\n  - System.Configuration.RegexStringValidator.CanValidate(System.Type)\n  - System.Configuration.RegexStringValidator.Validate(System.Object)\n  langs:\n  - csharp\n  name: RegexStringValidator\n  nameWithType: RegexStringValidator\n  fullName: System.Configuration.RegexStringValidator\n  type: Class\n  summary: Provides validation of a string based on the rules provided by a regular expression.\n  remarks: \"The RegexStringValidator object contains the rules necessary to validate a string object based on a regular expression. The rules are established when an instance of the RegexStringValidator class is created.  \\n  \\n The <xref:System.Configuration.RegexStringValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type. The object being validated is passed as a parameter of the <xref:System.Configuration.RegexStringValidator.Validate%2A> method.\"\n  example:\n  - \"The following code example demonstrates how to use the RegexStringValidator type.  \\n  \\n [!code-vb[System.Configuration.RegexStringValidator#1](~/add/codesnippet/visualbasic/t-system.configuration.r_0_1.vb)]\\n [!code-cs[System.Configuration.RegexStringValidator#1](~/add/codesnippet/csharp/t-system.configuration.r_0_1.cs)]\"\n  syntax:\n    content: 'public class RegexStringValidator : System.Configuration.ConfigurationValidatorBase'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationValidatorBase\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Configuration.RegexStringValidator.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Configuration.RegexStringValidator\n  langs:\n  - csharp\n  name: RegexStringValidator(String)\n  nameWithType: RegexStringValidator.RegexStringValidator(String)\n  fullName: System.Configuration.RegexStringValidator.RegexStringValidator(String)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.RegexStringValidator\"></xref> class.\n  syntax:\n    content: public RegexStringValidator (string regex);\n    parameters:\n    - id: regex\n      type: System.String\n      description: A string that specifies a regular expression.\n  overload: System.Configuration.RegexStringValidator.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>regex</code> is null or an empty string (\"\").\n  platform:\n  - net462\n- uid: System.Configuration.RegexStringValidator.CanValidate(System.Type)\n  id: CanValidate(System.Type)\n  parent: System.Configuration.RegexStringValidator\n  langs:\n  - csharp\n  name: CanValidate(Type)\n  nameWithType: RegexStringValidator.CanValidate(Type)\n  fullName: System.Configuration.RegexStringValidator.CanValidate(Type)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Determines whether the type of the object can be validated.\n  remarks: An exception is thrown if the validation fails.\n  example:\n  - \"The following example demonstrates how to use the CanValidate method. This code example is part of a larger example that is provided for the <xref:System.Configuration.RegexStringValidator> class.  \\n  \\n [!code-vb[System.Configuration.RegexStringValidator#3](~/add/codesnippet/visualbasic/m-system.configuration.r_2_1.vb)]\\n [!code-cs[System.Configuration.RegexStringValidator#3](~/add/codesnippet/csharp/m-system.configuration.r_2_1.cs)]\"\n  syntax:\n    content: public override bool CanValidate (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>type</code> parameter matches a string; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.RegexStringValidator.CanValidate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.RegexStringValidator.Validate(System.Object)\n  id: Validate(System.Object)\n  parent: System.Configuration.RegexStringValidator\n  langs:\n  - csharp\n  name: Validate(Object)\n  nameWithType: RegexStringValidator.Validate(Object)\n  fullName: System.Configuration.RegexStringValidator.Validate(Object)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Determines whether the value of an object is valid.\n  remarks: A <xref:System.Configuration.RegexStringValidator> object contains the rules necessary to validate a string object based on a regular expression. The rules are established when an instance of the <xref:System.Configuration.RegexStringValidator> class is created. The string object to validate is passed as a parameter of the Validate method.\n  example:\n  - \"The following code example demonstrates how to use the Validate method. This code example is part of a larger example provided for the <xref:System.Configuration.RegexStringValidator> class.  \\n  \\n [!code-vb[System.Configuration.RegexStringValidator#4](~/add/codesnippet/visualbasic/m-system.configuration.r_1_1.vb)]\\n [!code-cs[System.Configuration.RegexStringValidator#4](~/add/codesnippet/csharp/m-system.configuration.r_1_1.cs)]\"\n  syntax:\n    content: public override void Validate (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value of an object.\n  overload: System.Configuration.RegexStringValidator.Validate*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>value</code> does not conform to the parameters of the <xref:System.Text.RegularExpressions.Regex> class.\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationValidatorBase\n  isExternal: false\n  name: System.Configuration.ConfigurationValidatorBase\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Configuration.RegexStringValidator.#ctor(System.String)\n  parent: System.Configuration.RegexStringValidator\n  isExternal: false\n  name: RegexStringValidator(String)\n  nameWithType: RegexStringValidator.RegexStringValidator(String)\n  fullName: System.Configuration.RegexStringValidator.RegexStringValidator(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.RegexStringValidator.CanValidate(System.Type)\n  parent: System.Configuration.RegexStringValidator\n  isExternal: false\n  name: CanValidate(Type)\n  nameWithType: RegexStringValidator.CanValidate(Type)\n  fullName: System.Configuration.RegexStringValidator.CanValidate(Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Configuration.RegexStringValidator.Validate(System.Object)\n  parent: System.Configuration.RegexStringValidator\n  isExternal: false\n  name: Validate(Object)\n  nameWithType: RegexStringValidator.Validate(Object)\n  fullName: System.Configuration.RegexStringValidator.Validate(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Configuration.RegexStringValidator.#ctor*\n  parent: System.Configuration.RegexStringValidator\n  isExternal: false\n  name: RegexStringValidator\n  nameWithType: RegexStringValidator.RegexStringValidator\n- uid: System.Configuration.RegexStringValidator.CanValidate*\n  parent: System.Configuration.RegexStringValidator\n  isExternal: false\n  name: CanValidate\n  nameWithType: RegexStringValidator.CanValidate\n- uid: System.Configuration.RegexStringValidator.Validate*\n  parent: System.Configuration.RegexStringValidator\n  isExternal: false\n  name: Validate\n  nameWithType: RegexStringValidator.Validate\n"}