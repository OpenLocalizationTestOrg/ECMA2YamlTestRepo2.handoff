{"nodes":[{"pos":[1535,1899],"content":"Establishes a dependency relationship between an item stored in an ASP.NET application's <xref href=\"System.Web.Caching.Cache\"></xref> object and a file, cache key, an array of either, or another CacheDependency object. The CacheDependency class monitors the dependency relationships so that when any of them changes, the cached item will be automatically removed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Establishes a dependency relationship between an item stored in an ASP.NET application's <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.Cache\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and a file, cache key, an array of either, or another CacheDependency object.","pos":[0,219],"source":"Establishes a dependency relationship between an item stored in an ASP.NET application's <xref href=\"System.Web.Caching.Cache\"></xref> object and a file, cache key, an array of either, or another CacheDependency object."},{"content":"The CacheDependency class monitors the dependency relationships so that when any of them changes, the cached item will be automatically removed.","pos":[220,364]}]},{"pos":[1912,3319],"content":"If you add an item to the cache that is dependent on another object, such as a file or array of files, the dependent item is automatically removed from the cache when the object changes. For example, suppose you create a <xref:System.Data.DataSet> object based on data in an XML file. You can add the <xref:System.Data.DataSet> to the cache with a CacheDependency object that makes the <xref:System.Data.DataSet> dependent on the XML file. If the XML file changes, the <xref:System.Data.DataSet> is removed from the cache.       You can add items with dependencies to your application's cache with the <xref:System.Web.Caching.Cache.Add%2A> and <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> methods. You cannot use the <xref:System.Web.Caching.Cache.Item%2A> property to add items to the cache with dependencies.       To set up a dependency, you create an instance of the CacheDependency class, specifying the files, keys, or directories on which the item is dependent, and then pass the dependency to the <xref:System.Web.Caching.Cache.Add%2A> or <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> method. The CacheDependency instance can represent a single file or directory, an array of files or directories, or an array of files or directories along with an array of cache keys (these represent other items stored in the <xref:System.Web.Caching.Cache> object).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you add an item to the cache that is dependent on another object, such as a file or array of files, the dependent item is automatically removed from the cache when the object changes. For example, suppose you create a <xref:System.Data.DataSet> object based on data in an XML file. You can add the <xref:System.Data.DataSet> to the cache with a CacheDependency object that makes the <xref:System.Data.DataSet> dependent on the XML file. If the XML file changes, the <xref:System.Data.DataSet> is removed from the cache.       You can add items with dependencies to your application's cache with the <xref:System.Web.Caching.Cache.Add%2A> and <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> methods. You cannot use the <xref:System.Web.Caching.Cache.Item%2A> property to add items to the cache with dependencies.       To set up a dependency, you create an instance of the CacheDependency class, specifying the files, keys, or directories on which the item is dependent, and then pass the dependency to the <xref:System.Web.Caching.Cache.Add%2A> or <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> method. The CacheDependency instance can represent a single file or directory, an array of files or directories, or an array of files or directories along with an array of cache keys (these represent other items stored in the <xref:System.Web.Caching.Cache> object).","pos":[0,1403],"nodes":[{"content":"If you add an item to the cache that is dependent on another object, such as a file or array of files, the dependent item is automatically removed from the cache when the object changes.","pos":[0,186]},{"content":"For example, suppose you create a &lt;xref:System.Data.DataSet&gt; object based on data in an XML file.","pos":[187,284],"source":" For example, suppose you create a <xref:System.Data.DataSet> object based on data in an XML file."},{"content":"You can add the &lt;xref:System.Data.DataSet&gt; to the cache with a CacheDependency object that makes the &lt;xref:System.Data.DataSet&gt; dependent on the XML file.","pos":[285,439],"source":" You can add the <xref:System.Data.DataSet> to the cache with a CacheDependency object that makes the <xref:System.Data.DataSet> dependent on the XML file."},{"content":"If the XML file changes, the &lt;xref:System.Data.DataSet&gt; is removed from the cache.","pos":[440,522],"source":" If the XML file changes, the <xref:System.Data.DataSet> is removed from the cache."},{"content":"You can add items with dependencies to your application's cache with the &lt;xref:System.Web.Caching.Cache.Add%2A&gt; and &lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName&gt; methods.","pos":[529,720],"source":"       You can add items with dependencies to your application's cache with the <xref:System.Web.Caching.Cache.Add%2A> and <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> methods."},{"content":"You cannot use the &lt;xref:System.Web.Caching.Cache.Item%2A&gt; property to add items to the cache with dependencies.","pos":[721,833],"source":" You cannot use the <xref:System.Web.Caching.Cache.Item%2A> property to add items to the cache with dependencies."},{"content":"To set up a dependency, you create an instance of the CacheDependency class, specifying the files, keys, or directories on which the item is dependent, and then pass the dependency to the &lt;xref:System.Web.Caching.Cache.Add%2A&gt; or &lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName&gt; method.","pos":[840,1144],"source":"       To set up a dependency, you create an instance of the CacheDependency class, specifying the files, keys, or directories on which the item is dependent, and then pass the dependency to the <xref:System.Web.Caching.Cache.Add%2A> or <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> method."},{"content":"The CacheDependency instance can represent a single file or directory, an array of files or directories, or an array of files or directories along with an array of cache keys (these represent other items stored in the &lt;xref:System.Web.Caching.Cache&gt; object).","pos":[1145,1403],"source":" The CacheDependency instance can represent a single file or directory, an array of files or directories, or an array of files or directories along with an array of cache keys (these represent other items stored in the <xref:System.Web.Caching.Cache> object)."}]}]},{"pos":[4491,4587],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class."},{"pos":[4599,4742],"content":"If you want to derive your own class from <xref:System.Web.Caching.CacheDependency>, implement this version of the CacheDependency constructor.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you want to derive your own class from &lt;xref:System.Web.Caching.CacheDependency&gt;, implement this version of the CacheDependency constructor.","pos":[0,143],"source":"If you want to derive your own class from <xref:System.Web.Caching.CacheDependency>, implement this version of the CacheDependency constructor."}]},{"pos":[5671,5813],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that monitors a file or directory for changes.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that monitors a file or directory for changes."},{"pos":[7619,7786],"content":"The path to a file or directory that the cached object is dependent upon. When this resource changes, the cached object becomes obsolete and is removed from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to a file or directory that the cached object is dependent upon. When this resource changes, the cached object becomes obsolete and is removed from the cache.","pos":[0,167],"nodes":[{"content":"The path to a file or directory that the cached object is dependent upon.","pos":[0,73]},{"content":"When this resource changes, the cached object becomes obsolete and is removed from the cache.","pos":[74,167]}]}]},{"pos":[8299,8465],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that monitors an array of paths (to files or directories) for changes.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that monitors an array of paths (to files or directories) for changes."},{"pos":[10288,10476],"content":"An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.","pos":[0,188],"nodes":[{"content":"An array of paths (to files or directories) that the cached object is dependent upon.","pos":[0,85]},{"content":"When any of these resources changes, the cached object becomes obsolete and is removed from the cache.","pos":[86,188]}]}]},{"pos":[11038,11180],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that monitors a file or directory for changes.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that monitors a file or directory for changes."},{"pos":[13095,13262],"content":"The path to a file or directory that the cached object is dependent upon. When this resource changes, the cached object becomes obsolete and is removed from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to a file or directory that the cached object is dependent upon. When this resource changes, the cached object becomes obsolete and is removed from the cache.","pos":[0,167],"nodes":[{"content":"The path to a file or directory that the cached object is dependent upon.","pos":[0,73]},{"content":"When this resource changes, the cached object becomes obsolete and is removed from the cache.","pos":[74,167]}]}]},{"pos":[13326,13406],"content":"The time against which to check the last modified date of the directory or file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time against which to check the last modified date of the directory or file.","pos":[0,80]}]},{"pos":[13978,14195],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that monitors an array of paths (to files or directories) for changes and specifies a time when change monitoring begins.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that monitors an array of paths (to files or directories) for changes and specifies a time when change monitoring begins."},{"pos":[16109,16297],"content":"An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.","pos":[0,188],"nodes":[{"content":"An array of paths (to files or directories) that the cached object is dependent upon.","pos":[0,85]},{"content":"When any of these resources changes, the cached object becomes obsolete and is removed from the cache.","pos":[86,188]}]}]},{"pos":[16361,16444],"content":"The time against which to check the last modified date of the objects in the array.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time against which to check the last modified date of the objects in the array.","pos":[0,83]}]},{"pos":[17016,17215],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes."},{"pos":[18681,18869],"content":"An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.","pos":[0,188],"nodes":[{"content":"An array of paths (to files or directories) that the cached object is dependent upon.","pos":[0,85]},{"content":"When any of these resources changes, the cached object becomes obsolete and is removed from the cache.","pos":[86,188]}]}]},{"pos":[18937,19144],"content":"An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.","pos":[0,207],"nodes":[{"content":"An array of cache keys that the new object monitors for changes.","pos":[0,64]},{"content":"When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.","pos":[65,207]}]}]},{"pos":[19775,19974],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes."},{"pos":[22521,22709],"content":"An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.","pos":[0,188],"nodes":[{"content":"An array of paths (to files or directories) that the cached object is dependent upon.","pos":[0,85]},{"content":"When any of these resources changes, the cached object becomes obsolete and is removed from the cache.","pos":[86,188]}]}]},{"pos":[22777,22984],"content":"An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.","pos":[0,207],"nodes":[{"content":"An array of cache keys that the new object monitors for changes.","pos":[0,64]},{"content":"When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.","pos":[65,207]}]}]},{"pos":[23048,23176],"content":"The date and time against which to check the last modified date of the objects passed in the <ph id=\"ph1\">`filenames`</ph> and <ph id=\"ph2\">`cachekeys`</ph> arrays.","needQuote":true,"needEscape":true,"source":"The date and time against which to check the last modified date of the objects passed in the `filenames` and `cachekeys` arrays."},{"pos":[23866,24191],"content":"Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes. It also makes itself dependent upon a separate instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.","pos":[0,199],"source":"Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes."},{"content":"It also makes itself dependent upon a separate instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","pos":[200,325],"source":" It also makes itself dependent upon a separate instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class."}]},{"pos":[26413,26601],"content":"An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.","pos":[0,188],"nodes":[{"content":"An array of paths (to files or directories) that the cached object is dependent upon.","pos":[0,85]},{"content":"When any of these resources changes, the cached object becomes obsolete and is removed from the cache.","pos":[86,188]}]}]},{"pos":[26669,26876],"content":"An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.","pos":[0,207],"nodes":[{"content":"An array of cache keys that the new object monitors for changes.","pos":[0,64]},{"content":"When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.","pos":[65,207]}]}]},{"pos":[26964,27087],"content":"Another instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that this instance is dependent upon.","needQuote":true,"needEscape":true,"source":"Another instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that this instance is dependent upon."},{"pos":[27836,28203],"content":"Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes. It also makes itself dependent upon another instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class and a time when the change monitoring begins.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.","pos":[0,199],"source":"Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes."},{"content":"It also makes itself dependent upon another instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and a time when the change monitoring begins.","pos":[200,367],"source":" It also makes itself dependent upon another instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class and a time when the change monitoring begins."}]},{"pos":[31165,31353],"content":"An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.","pos":[0,188],"nodes":[{"content":"An array of paths (to files or directories) that the cached object is dependent upon.","pos":[0,85]},{"content":"When any of these resources changes, the cached object becomes obsolete and is removed from the cache.","pos":[86,188]}]}]},{"pos":[31421,31628],"content":"An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.","pos":[0,207],"nodes":[{"content":"An array of cache keys that the new object monitors for changes.","pos":[0,64]},{"content":"When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.","pos":[65,207]}]}]},{"pos":[31716,31839],"content":"Another instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that this instance is dependent upon.","needQuote":true,"needEscape":true,"source":"Another instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that this instance is dependent upon."},{"pos":[31903,32058],"content":"The time against which to check the last modified date of the objects in the arrays and the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The time against which to check the last modified date of the objects in the arrays and the <xref href=\"System.Web.Caching.CacheDependency\"></xref> object."},{"pos":[32536,32722],"content":"Releases the resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and any classes that derive from <bpt id=\"p2\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Releases the resources used by the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class and any classes that derive from <xref href=\"System.Web.Caching.CacheDependency\"></xref>."},{"pos":[32734,32900],"content":"Any class that derives from the <xref:System.Web.Caching.CacheDependency> class is required to implement this method to clean up resources the derived class has used.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Any class that derives from the &lt;xref:System.Web.Caching.CacheDependency&gt; class is required to implement this method to clean up resources the derived class has used.","pos":[0,166],"source":"Any class that derives from the <xref:System.Web.Caching.CacheDependency> class is required to implement this method to clean up resources the derived class has used."}]},{"pos":[33808,33906],"content":"Releases the resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Releases the resources used by the <xref href=\"System.Web.Caching.CacheDependency\"></xref> object."},{"pos":[34417,34512],"content":"Completes initialization of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Completes initialization of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> object."},{"pos":[34524,34716],"content":"The FinishInit method completes the initialization of the <xref:System.Web.Caching.CacheDependency> object. This method is called by all <xref:System.Web.Caching.CacheDependency> constructors.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The FinishInit method completes the initialization of the <xref:System.Web.Caching.CacheDependency> object. This method is called by all <xref:System.Web.Caching.CacheDependency> constructors.","pos":[0,192],"nodes":[{"content":"The FinishInit method completes the initialization of the &lt;xref:System.Web.Caching.CacheDependency&gt; object.","pos":[0,107],"source":"The FinishInit method completes the initialization of the <xref:System.Web.Caching.CacheDependency> object."},{"content":"This method is called by all &lt;xref:System.Web.Caching.CacheDependency&gt; constructors.","pos":[108,192],"source":" This method is called by all <xref:System.Web.Caching.CacheDependency> constructors."}]}]},{"pos":[35281,35308],"content":"Gets the file dependencies.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the file dependencies.","pos":[0,27]}]},{"pos":[35458,35480],"content":"The file dependencies.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file dependencies.","pos":[0,22]}]},{"pos":[35942,36041],"content":"Retrieves a unique identifier for a <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Retrieves a unique identifier for a <xref href=\"System.Web.Caching.CacheDependency\"></xref> object."},{"pos":[36054,36575],"content":"This method can be particularly useful for tracking multiple instances of the <xref:System.Web.Caching.CacheDependency> class associated with an item or an application.       The identifier is a combination of either the file name (for a file dependency) or the key name (for a cache-key dependency) and a string that this method assigns to the dependency. In classes that derive from the <xref:System.Web.Caching.CacheDependency> class, you can override this method to customize how it generates the unique identifier.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method can be particularly useful for tracking multiple instances of the <xref:System.Web.Caching.CacheDependency> class associated with an item or an application.       The identifier is a combination of either the file name (for a file dependency) or the key name (for a cache-key dependency) and a string that this method assigns to the dependency. In classes that derive from the <xref:System.Web.Caching.CacheDependency> class, you can override this method to customize how it generates the unique identifier.","pos":[0,519],"nodes":[{"content":"This method can be particularly useful for tracking multiple instances of the &lt;xref:System.Web.Caching.CacheDependency&gt; class associated with an item or an application.","pos":[0,168],"source":"This method can be particularly useful for tracking multiple instances of the <xref:System.Web.Caching.CacheDependency> class associated with an item or an application."},{"content":"The identifier is a combination of either the file name (for a file dependency) or the key name (for a cache-key dependency) and a string that this method assigns to the dependency.","pos":[175,356]},{"content":"In classes that derive from the &lt;xref:System.Web.Caching.CacheDependency&gt; class, you can override this method to customize how it generates the unique identifier.","pos":[357,519],"source":" In classes that derive from the <xref:System.Web.Caching.CacheDependency> class, you can override this method to customize how it generates the unique identifier."}]}]},{"pos":[37397,37490],"content":"The unique identifier for the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The unique identifier for the <xref href=\"System.Web.Caching.CacheDependency\"></xref> object."},{"pos":[37935,38046],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object has changed.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.Caching.CacheDependency\"></xref> object has changed."},{"pos":[38058,38531],"content":"You can add an item to an ASP.NET application's <xref:System.Web.Caching.Cache> with a <xref:System.Web.Caching.CacheDependency>. When the <xref:System.Web.Caching.CacheDependency> changes, the item added to the <xref:System.Web.Caching.Cache> is invalidated and removed from the cache. You can use this property to determine whether a <xref:System.Web.Caching.CacheDependency> has changed, and recreate the item in the <xref:System.Web.Caching.Cache> if that has occurred.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can add an item to an ASP.NET application's <xref:System.Web.Caching.Cache> with a <xref:System.Web.Caching.CacheDependency>. When the <xref:System.Web.Caching.CacheDependency> changes, the item added to the <xref:System.Web.Caching.Cache> is invalidated and removed from the cache. You can use this property to determine whether a <xref:System.Web.Caching.CacheDependency> has changed, and recreate the item in the <xref:System.Web.Caching.Cache> if that has occurred.","pos":[0,473],"nodes":[{"content":"You can add an item to an ASP.NET application's &lt;xref:System.Web.Caching.Cache&gt; with a &lt;xref:System.Web.Caching.CacheDependency&gt;.","pos":[0,129],"source":"You can add an item to an ASP.NET application's <xref:System.Web.Caching.Cache> with a <xref:System.Web.Caching.CacheDependency>."},{"content":"When the &lt;xref:System.Web.Caching.CacheDependency&gt; changes, the item added to the &lt;xref:System.Web.Caching.Cache&gt; is invalidated and removed from the cache.","pos":[130,286],"source":" When the <xref:System.Web.Caching.CacheDependency> changes, the item added to the <xref:System.Web.Caching.Cache> is invalidated and removed from the cache."},{"content":"You can use this property to determine whether a &lt;xref:System.Web.Caching.CacheDependency&gt; has changed, and recreate the item in the &lt;xref:System.Web.Caching.Cache&gt; if that has occurred.","pos":[287,473],"source":" You can use this property to determine whether a <xref:System.Web.Caching.CacheDependency> has changed, and recreate the item in the <xref:System.Web.Caching.Cache> if that has occurred."}]}]},{"pos":[39252,39549],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.Caching.CacheDependency\"></xref> object has changed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object has changed; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,218],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.Caching.CacheDependency\"></xref> object has changed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[219,297],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[40174,40374],"content":"Notifies the base <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that the dependency represented by a derived <bpt id=\"p2\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class has changed.","needQuote":true,"needEscape":true,"source":"Notifies the base <xref href=\"System.Web.Caching.CacheDependency\"></xref> object that the dependency represented by a derived <xref href=\"System.Web.Caching.CacheDependency\"></xref> class has changed."},{"pos":[40387,41178],"content":"Any class that derives from the <xref:System.Web.Caching.CacheDependency> class must implement this method.       When you derive from the <xref:System.Web.Caching.CacheDependency> class, you use the base functionality of any method or property that you have not overridden. When you create an instance of the derived class, it represents the files, cache keys, database tables, or other arbitrary objects that you want to make a cached item dependent upon. When a dependency item changes, this method notifies the base functionality of the <xref:System.Web.Caching.CacheDependency> class that the item has changed, so that the values of the <xref:System.Web.Caching.CacheDependency.HasChanged%2A> and <xref:System.Web.Caching.CacheDependency.UtcLastModified%2A> properties can be updated.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Any class that derives from the <xref:System.Web.Caching.CacheDependency> class must implement this method.       When you derive from the <xref:System.Web.Caching.CacheDependency> class, you use the base functionality of any method or property that you have not overridden. When you create an instance of the derived class, it represents the files, cache keys, database tables, or other arbitrary objects that you want to make a cached item dependent upon. When a dependency item changes, this method notifies the base functionality of the <xref:System.Web.Caching.CacheDependency> class that the item has changed, so that the values of the <xref:System.Web.Caching.CacheDependency.HasChanged%2A> and <xref:System.Web.Caching.CacheDependency.UtcLastModified%2A> properties can be updated.","pos":[0,789],"nodes":[{"content":"Any class that derives from the &lt;xref:System.Web.Caching.CacheDependency&gt; class must implement this method.","pos":[0,107],"source":"Any class that derives from the <xref:System.Web.Caching.CacheDependency> class must implement this method."},{"content":"When you derive from the &lt;xref:System.Web.Caching.CacheDependency&gt; class, you use the base functionality of any method or property that you have not overridden.","pos":[114,274],"source":"       When you derive from the <xref:System.Web.Caching.CacheDependency> class, you use the base functionality of any method or property that you have not overridden."},{"content":"When you create an instance of the derived class, it represents the files, cache keys, database tables, or other arbitrary objects that you want to make a cached item dependent upon.","pos":[275,457]},{"content":"When a dependency item changes, this method notifies the base functionality of the &lt;xref:System.Web.Caching.CacheDependency&gt; class that the item has changed, so that the values of the &lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt; and &lt;xref:System.Web.Caching.CacheDependency.UtcLastModified%2A&gt; properties can be updated.","pos":[458,789],"source":" When a dependency item changes, this method notifies the base functionality of the <xref:System.Web.Caching.CacheDependency> class that the item has changed, so that the values of the <xref:System.Web.Caching.CacheDependency.HasChanged%2A> and <xref:System.Web.Caching.CacheDependency.UtcLastModified%2A> properties can be updated."}]}]},{"pos":[41836,41860],"content":"The source of the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The source of the event.","pos":[0,24]}]},{"pos":[41921,42015],"content":"An &lt;xref:System.EventArgs?displayProperty=fullName&gt; object that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <ph id=\"ph1\">&amp;lt;</ph>xref:System.EventArgs?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> object that contains the event data.","pos":[0,94],"source":"An &lt;xref:System.EventArgs?displayProperty=fullName&gt; object that contains the event data."}]},{"pos":[42574,42620],"content":"Marks the time when a dependency last changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Marks the time when a dependency last changed.","pos":[0,46]}]},{"pos":[43297,43339],"content":"The time when the dependency last changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time when the dependency last changed.","pos":[0,42]}]},{"pos":[43816,43867],"content":"Gets the time when the dependency was last changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the time when the dependency was last changed.","pos":[0,51]}]},{"pos":[43879,43977],"content":"This property is measured in Coordinated Universal Time (UTC) (also known as Greenwich Mean Time).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is measured in Coordinated Universal Time (UTC) (also known as Greenwich Mean Time).","pos":[0,98]}]},{"pos":[44813,44859],"content":"The time when the dependency was last changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time when the dependency was last changed.","pos":[0,46]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Caching.CacheDependency\n  id: CacheDependency\n  children:\n  - System.Web.Caching.CacheDependency.#ctor\n  - System.Web.Caching.CacheDependency.#ctor(System.String)\n  - System.Web.Caching.CacheDependency.#ctor(System.String[])\n  - System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)\n  - System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)\n  - System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])\n  - System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)\n  - System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)\n  - System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)\n  - System.Web.Caching.CacheDependency.DependencyDispose\n  - System.Web.Caching.CacheDependency.Dispose\n  - System.Web.Caching.CacheDependency.FinishInit\n  - System.Web.Caching.CacheDependency.GetFileDependencies\n  - System.Web.Caching.CacheDependency.GetUniqueID\n  - System.Web.Caching.CacheDependency.HasChanged\n  - System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)\n  - System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)\n  - System.Web.Caching.CacheDependency.UtcLastModified\n  langs:\n  - csharp\n  name: CacheDependency\n  nameWithType: CacheDependency\n  fullName: System.Web.Caching.CacheDependency\n  type: Class\n  summary: Establishes a dependency relationship between an item stored in an ASP.NET application's <xref href=\"System.Web.Caching.Cache\"></xref> object and a file, cache key, an array of either, or another CacheDependency object. The CacheDependency class monitors the dependency relationships so that when any of them changes, the cached item will be automatically removed.\n  remarks: \"If you add an item to the cache that is dependent on another object, such as a file or array of files, the dependent item is automatically removed from the cache when the object changes. For example, suppose you create a <xref:System.Data.DataSet> object based on data in an XML file. You can add the <xref:System.Data.DataSet> to the cache with a CacheDependency object that makes the <xref:System.Data.DataSet> dependent on the XML file. If the XML file changes, the <xref:System.Data.DataSet> is removed from the cache.  \\n  \\n You can add items with dependencies to your application's cache with the <xref:System.Web.Caching.Cache.Add%2A> and <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> methods. You cannot use the <xref:System.Web.Caching.Cache.Item%2A> property to add items to the cache with dependencies.  \\n  \\n To set up a dependency, you create an instance of the CacheDependency class, specifying the files, keys, or directories on which the item is dependent, and then pass the dependency to the <xref:System.Web.Caching.Cache.Add%2A> or <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> method. The CacheDependency instance can represent a single file or directory, an array of files or directories, or an array of files or directories along with an array of cache keys (these represent other items stored in the <xref:System.Web.Caching.Cache> object).\"\n  example:\n  - \"The following code example demonstrates using the <xref:System.Web.Caching.CacheDependency.HasChanged%2A> property to determine whether a CacheDependency changed since the previous request for an item in the <xref:System.Web.Caching.Cache>. The `dt` value passed in the `start` parameter is set to <xref:System.DateTime.Now%2A?displayProperty=fullName>.  \\n  \\n [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/add/codesnippet/visualbasic/t-system.web.caching.cac_3_1.aspx)]\\n [!code-cs[System.Web.Caching.CacheDependency_HasChanged#1](~/add/codesnippet/csharp/t-system.web.caching.cac_3_1.aspx)]\"\n  syntax:\n    content: 'public class CacheDependency : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Caching.CacheDependency.#ctor\n  id: '#ctor'\n  parent: System.Web.Caching.CacheDependency\n  langs:\n  - csharp\n  name: CacheDependency()\n  nameWithType: CacheDependency.CacheDependency()\n  fullName: System.Web.Caching.CacheDependency.CacheDependency()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class.\n  remarks: If you want to derive your own class from <xref:System.Web.Caching.CacheDependency>, implement this version of the CacheDependency constructor.\n  example:\n  - \"The following code example is a class that implements this version of the <xref:System.Web.Caching.CacheDependency> constructor as all classes that derive from <xref:System.Web.Caching.CacheDependency> are required to.  \\n  \\n [!code-vb[CacheDependency_Whidbey_Example1#1](~/add/codesnippet/visualbasic/m-system.web.caching.cac_2_1.vb)]\"\n  syntax:\n    content: protected CacheDependency ();\n    parameters: []\n  overload: System.Web.Caching.CacheDependency.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.CacheDependency.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Web.Caching.CacheDependency\n  langs:\n  - csharp\n  name: CacheDependency(String)\n  nameWithType: CacheDependency.CacheDependency(String)\n  fullName: System.Web.Caching.CacheDependency.CacheDependency(String)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that monitors a file or directory for changes.\n  remarks: \"If the directory or file specified in the `filename` parameter is not found in the file system, it will be treated as missing. If the directory or file is missing when the object with the dependency is added to the <xref:System.Web.Caching.Cache>, the cached object will be removed from the <xref:System.Web.Caching.Cache> when the directory or file is created.  \\n  \\n For example, assume that you add an object to the <xref:System.Web.Caching.Cache> with a dependency on the following file path: c:\\\\stocks\\\\xyz.dat. If that file is not found when the <xref:System.Web.Caching.CacheDependency> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.\"\n  example:\n  - \"The following code example creates an instance of the <xref:System.Web.Caching.CacheDependency> class with a dependency on an XML file. The <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> method then adds an item to the <xref:System.Web.Caching.Cache> that is dependent upon that file.  \\n  \\n [!code-vb[Classic CacheDependency.CacheDependency Example#1](~/add/codesnippet/visualbasic/m-system.web.caching.cac_5_1.vb)]\\n [!code-cs[Classic CacheDependency.CacheDependency Example#1](~/add/codesnippet/csharp/m-system.web.caching.cac_5_1.cs)]  \\n  \\n You can also use the following technique to add an item to the <xref:System.Web.Caching.Cache> with a dependency on a file.  \\n  \\n [!code-cs[Single File Dependency Cache entry#1](~/add/codesnippet/csharp/m-system.web.caching.cac_5_2.aspx)]\\n [!code-vb[Single File Dependency Cache entry#1](~/add/codesnippet/visualbasic/m-system.web.caching.cac_5_2.aspx)]\"\n  syntax:\n    content: public CacheDependency (string filename);\n    parameters:\n    - id: filename\n      type: System.String\n      description: The path to a file or directory that the cached object is dependent upon. When this resource changes, the cached object becomes obsolete and is removed from the cache.\n  overload: System.Web.Caching.CacheDependency.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.CacheDependency.#ctor(System.String[])\n  id: '#ctor(System.String[])'\n  parent: System.Web.Caching.CacheDependency\n  langs:\n  - csharp\n  name: CacheDependency(String[])\n  nameWithType: CacheDependency.CacheDependency(String[])\n  fullName: System.Web.Caching.CacheDependency.CacheDependency(String[])\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that monitors an array of paths (to files or directories) for changes.\n  remarks: \"If any of the files or directories in the array changes or is removed from the array, the cached item becomes obsolete and is removed from the application's <xref:System.Web.Caching.Cache> object.  \\n  \\n Also, if any of the directories or files specified in the `filenames` parameter is not found in the file system, it is treated as missing. If a directory or file is missing when the object with the dependency is added to the <xref:System.Web.Caching.Cache>, the cached object will be removed from the <xref:System.Web.Caching.Cache> when that directory or file is created.  \\n  \\n For example, assume that you add an object to the <xref:System.Web.Caching.Cache> with a dependency on the following file path: c:\\\\stocks\\\\xyz.dat. If that file is not found when the <xref:System.Web.Caching.CacheDependency> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.  \\n  \\n> [!NOTE]\\n>  When you create the array that contains the file dependencies, you must define the number of files that the item you are adding to the <xref:System.Web.Caching.Cache> is dependent on.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> method to add an item to the <xref:System.Web.Caching.Cache> with dependencies on an array of files. You can also make the item dependent on an array of directories.  \\n  \\n [!code-vb[Multiple file based dependency#1](~/add/codesnippet/visualbasic/m-system.web.caching.cac_12_1.aspx)]\\n [!code-cs[Multiple file based dependency#1](~/add/codesnippet/csharp/m-system.web.caching.cac_12_1.aspx)]\"\n  syntax:\n    content: public CacheDependency (string[] filenames);\n    parameters:\n    - id: filenames\n      type: System.String[]\n      description: An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.\n  overload: System.Web.Caching.CacheDependency.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)\n  id: '#ctor(System.String,System.DateTime)'\n  parent: System.Web.Caching.CacheDependency\n  langs:\n  - csharp\n  name: CacheDependency(String,DateTime)\n  nameWithType: CacheDependency.CacheDependency(String,DateTime)\n  fullName: System.Web.Caching.CacheDependency.CacheDependency(String,DateTime)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that monitors a file or directory for changes.\n  remarks: \"If the directory or file specified in the `filename` parameter is not found in the file system, it will be treated as missing. If the directory or file is missing when the object with the dependency is added to the <xref:System.Web.Caching.Cache>, the cached object will be removed from the <xref:System.Web.Caching.Cache> when the directory or file is created.  \\n  \\n For example, assume that you add an object to the <xref:System.Web.Caching.Cache> with a dependency on the following file path: c:\\\\stocks\\\\xyz.dat. If that file is not found when the <xref:System.Web.Caching.CacheDependency> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.  \\n  \\n> [!NOTE]\\n>  Change tracking begins immediately and is not directly based on the `start` parameter. Use the `start` parameter to pass a date and time in the past against which you want to check the last modified date of the directory or file passed in the `filename` parameter. If the last modified date is later than the date and time set passed in the `start` parameter, the cached item is removed from the <xref:System.Web.Caching.Cache>.\"\n  example:\n  - \"The following code example uses this constructor to instantiate a <xref:System.Web.Caching.CacheDependency> object, then inserts an item into the <xref:System.Web.Caching.Cache> with that dependency. The `dt` value passed in the `start` parameter is set to <xref:System.DateTime.Now%2A?displayProperty=fullName>.  \\n  \\n [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/add/codesnippet/visualbasic/m-system.web.caching.cac_0_1.aspx)]\\n [!code-cs[System.Web.Caching.CacheDependency_HasChanged#1](~/add/codesnippet/csharp/m-system.web.caching.cac_0_1.aspx)]\"\n  syntax:\n    content: public CacheDependency (string filename, DateTime start);\n    parameters:\n    - id: filename\n      type: System.String\n      description: The path to a file or directory that the cached object is dependent upon. When this resource changes, the cached object becomes obsolete and is removed from the cache.\n    - id: start\n      type: System.DateTime\n      description: The time against which to check the last modified date of the directory or file.\n  overload: System.Web.Caching.CacheDependency.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)\n  id: '#ctor(System.String[],System.DateTime)'\n  parent: System.Web.Caching.CacheDependency\n  langs:\n  - csharp\n  name: CacheDependency(String[],DateTime)\n  nameWithType: CacheDependency.CacheDependency(String[],DateTime)\n  fullName: System.Web.Caching.CacheDependency.CacheDependency(String[],DateTime)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that monitors an array of paths (to files or directories) for changes and specifies a time when change monitoring begins.\n  remarks: \"If any of the directories or files specified in the `filenames` parameter is not found in the file system, it is treated as missing. If a directory or file is missing when the object with the dependency is added to the <xref:System.Web.Caching.Cache>, the cached object will be removed from the <xref:System.Web.Caching.Cache> when that directory or file is created.  \\n  \\n For example, assume that you add an object to the <xref:System.Web.Caching.Cache> with a dependency on the following file path: c:\\\\stocks\\\\xyz.dat. If that file is not found when the <xref:System.Web.Caching.CacheDependency> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.  \\n  \\n> [!NOTE]\\n>  Change tracking begins immediately and is not directly based on the `start` parameter. Use the `start` parameter to pass a date and time in the past against which you want to check the last modified date of the array passed in the `filenames` parameter. If the last modified date of any object in the array is later than the date and time set passed in the `start` parameter, the cached item is removed from the <xref:System.Web.Caching.Cache>.\"\n  example:\n  - \"The following code example creates a <xref:System.Web.Caching.CacheDependency> object that passes two XML files and a <xref:System.DateTime.Now%2A?displayProperty=fullName> value when the object is included as a parameter argument in an <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> method call.  \\n  \\n [!code-vb[CacheDependency Constructor4#1](~/add/codesnippet/visualbasic/m-system.web.caching.cac_10_1.aspx)]\\n [!code-cs[CacheDependency Constructor4#1](~/add/codesnippet/csharp/m-system.web.caching.cac_10_1.aspx)]\"\n  syntax:\n    content: public CacheDependency (string[] filenames, DateTime start);\n    parameters:\n    - id: filenames\n      type: System.String[]\n      description: An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.\n    - id: start\n      type: System.DateTime\n      description: The time against which to check the last modified date of the objects in the array.\n  overload: System.Web.Caching.CacheDependency.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])\n  id: '#ctor(System.String[],System.String[])'\n  parent: System.Web.Caching.CacheDependency\n  langs:\n  - csharp\n  name: CacheDependency(String[],String[])\n  nameWithType: CacheDependency.CacheDependency(String[],String[])\n  fullName: System.Web.Caching.CacheDependency.CacheDependency(String[],String[])\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.\n  remarks: \"Also, if any of the directories or files specified in the `filenames` parameter is not found in the file system, it is treated as missing. If a directory or file is missing when the object with the dependency is added to the <xref:System.Web.Caching.Cache>, the cached object will be removed from the <xref:System.Web.Caching.Cache> when that directory or file is created.  \\n  \\n For example, assume that you add an object to the <xref:System.Web.Caching.Cache> with a dependency on the following file path: c:\\\\stocks\\\\xyz.dat. If that file is not found when the <xref:System.Web.Caching.CacheDependency> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.\"\n  example:\n  - \"The following code fragment demonstrates how to insert an item into your application's <xref:System.Web.Caching.Cache> with a dependency on a key to another item placed in the cache. Since this method uses array syntax, you must define the number of keys on which the item you are adding to the <xref:System.Web.Caching.Cache> is dependent.  \\n  \\n [!code-vb[Key based dependency#1](~/add/codesnippet/visualbasic/m-system.web.caching.cac_11_1.aspx)]\\n [!code-cs[Key based dependency#1](~/add/codesnippet/csharp/m-system.web.caching.cac_11_1.aspx)]\"\n  syntax:\n    content: public CacheDependency (string[] filenames, string[] cachekeys);\n    parameters:\n    - id: filenames\n      type: System.String[]\n      description: An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.\n    - id: cachekeys\n      type: System.String[]\n      description: An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.\n  overload: System.Web.Caching.CacheDependency.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)\n  id: '#ctor(System.String[],System.String[],System.DateTime)'\n  parent: System.Web.Caching.CacheDependency\n  langs:\n  - csharp\n  name: CacheDependency(String[],String[],DateTime)\n  nameWithType: CacheDependency.CacheDependency(String[],String[],DateTime)\n  fullName: System.Web.Caching.CacheDependency.CacheDependency(String[],String[],DateTime)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.\n  remarks: \"Also, if any of the directories or files specified in the `filenames` parameter is not found in the file system, it is treated as missing. If a directory or file is missing when the object with the dependency is added to the <xref:System.Web.Caching.Cache>, the cached object will be removed from the <xref:System.Web.Caching.Cache> when that directory or file is created.  \\n  \\n For example, assume that you add an object to the <xref:System.Web.Caching.Cache> with a dependency on the following file path: c:\\\\stocks\\\\xyz.dat. If that file is not found when the <xref:System.Web.Caching.CacheDependency> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.  \\n  \\n> [!NOTE]\\n>  Change tracking begins immediately and is not directly based on the `start` parameter. Use the `start` parameter to pass a date and time in the past against which you want to check the last modified date of any object passed in the `filenames` or `cachekeys` parameters. If the last modified date of any of those objects is later than the date and time set passed in the `start` parameter, the cached item is removed from the <xref:System.Web.Caching.Cache>.\"\n  example:\n  - \"The following code example creates a `CreateDependency` method. When this method is called, it creates a <xref:System.DateTime> object and the <xref:System.Web.Caching.Cache.Item%2A?displayProperty=fullName> property is used to add an item to the cache with a `key` parameter of `key1` and a value of `Value 1`. An array of strings, `dependencyKey`, is then created with the value of `key1` as well. This <xref:System.Web.Caching.CacheDependency> constructor then instantiates a <xref:System.Web.Caching.CacheDependency> object that passes `dependencyKey` and the <xref:System.DateTime> object as parameter arguments. The <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> method is called next, using the <xref:System.Web.Caching.CacheDependency> object as a parameter. This makes the object added to the cache using the <xref:System.Web.Caching.Cache.Insert%2A> method dependent on the `key1` key.  \\n  \\n [!code-cs[CacheDependency Constructor6#1](~/add/codesnippet/csharp/8a673c60-cf9e-4171-bfff-_1.aspx)]\\n [!code-vb[CacheDependency Constructor6#1](~/add/codesnippet/visualbasic/8a673c60-cf9e-4171-bfff-_1.aspx)]\"\n  syntax:\n    content: public CacheDependency (string[] filenames, string[] cachekeys, DateTime start);\n    parameters:\n    - id: filenames\n      type: System.String[]\n      description: An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.\n    - id: cachekeys\n      type: System.String[]\n      description: An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.\n    - id: start\n      type: System.DateTime\n      description: The date and time against which to check the last modified date of the objects passed in the `filenames` and `cachekeys` arrays.\n  overload: System.Web.Caching.CacheDependency.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)\n  id: '#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)'\n  parent: System.Web.Caching.CacheDependency\n  langs:\n  - csharp\n  name: CacheDependency(String[],String[],CacheDependency)\n  nameWithType: CacheDependency.CacheDependency(String[],String[],CacheDependency)\n  fullName: System.Web.Caching.CacheDependency.CacheDependency(String[],String[],CacheDependency)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes. It also makes itself dependent upon a separate instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class.\n  remarks: \"Also, if any of the directories or files specified in the `filenames` parameter is not found in the file system, it is treated as missing. If a directory or file is missing when the object with the dependency is added to the <xref:System.Web.Caching.Cache>, the cached object will be removed from the <xref:System.Web.Caching.Cache> when that directory or file is created.  \\n  \\n For example, assume that you add an object to the <xref:System.Web.Caching.Cache> with a dependency on the following file path: c:\\\\stocks\\\\xyz.dat. If that file is not found when the <xref:System.Web.Caching.CacheDependency> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.\"\n  example:\n  - \"The following code example creates a `CreateDependency` method. When this method is called, it uses the <xref:System.Web.Caching.Cache.Item%2A?displayProperty=fullName> property to add an item to the cache with a `key` parameter of `key1` and a value of `Value 1`. An array of strings, `dependencyKey`, is then created with the value of `key1` as well. The <xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=fullName> constructor is used to create a <xref:System.Web.Caching.CacheDependency> object, `dep1`, which passes `dependencyKey` as a parameter argument. A second <xref:System.Web.Caching.CacheDependency> object, `dep2`, is created using this constructor, with `dep1` passed as the third parameter argument. This second dependency is dependent on the first. The <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> method is called next, using the second <xref:System.Web.Caching.CacheDependency> object as a parameter. If the first dependency changes in any way, the cached item will be invalidated.  \\n  \\n [!code-vb[CacheDependency Constructor7#1](~/add/codesnippet/visualbasic/e6e24549-1cfa-4cc8-9d48-_1.aspx)]\\n [!code-cs[CacheDependency Constructor7#1](~/add/codesnippet/csharp/e6e24549-1cfa-4cc8-9d48-_1.aspx)]\"\n  syntax:\n    content: public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency);\n    parameters:\n    - id: filenames\n      type: System.String[]\n      description: An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.\n    - id: cachekeys\n      type: System.String[]\n      description: An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.\n    - id: dependency\n      type: System.Web.Caching.CacheDependency\n      description: Another instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that this instance is dependent upon.\n  overload: System.Web.Caching.CacheDependency.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)\n  id: '#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)'\n  parent: System.Web.Caching.CacheDependency\n  langs:\n  - csharp\n  name: CacheDependency(String[],String[],CacheDependency,DateTime)\n  nameWithType: CacheDependency.CacheDependency(String[],String[],CacheDependency,DateTime)\n  fullName: System.Web.Caching.CacheDependency.CacheDependency(String[],String[],CacheDependency,DateTime)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Initializes a new instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes. It also makes itself dependent upon another instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class and a time when the change monitoring begins.\n  remarks: \"Also, if any of the directories or files specified in the `filenames` parameter is not found in the file system, it is treated as missing. If a directory or file is missing when the object with the dependency is added to the <xref:System.Web.Caching.Cache>, the cached object will be removed from the <xref:System.Web.Caching.Cache> when that directory or file is created.  \\n  \\n For example, assume that you add an object to the <xref:System.Web.Caching.Cache> with a dependency on the following file path: c:\\\\stocks\\\\xyz.dat. If that file is not found when the <xref:System.Web.Caching.CacheDependency> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.  \\n  \\n> [!NOTE]\\n>  Change tracking begins immediately and is not directly based on the `start` parameter. Use the `start` parameter to pass a date and time in the past against which you want to check the last modified date of any of the objects passed in the `filenames`, `cachekeys`, or `dependency` parameters. If the last modified date for any of those objects is later than the date and time passed in the `start` parameter, the cached item is removed from the <xref:System.Web.Caching.Cache>.\"\n  example:\n  - \"The following code example shows a `CreateDependency` method. When this method is called, it creates a <xref:System.DateTime> object and the <xref:System.Web.Caching.Cache.Item%2A?displayProperty=fullName> property is used to add an item to the cache with a key parameter of `key1` and a value of `Value 1`. An array of strings, `dependencyKey`, is then created with the value at its first (and only) index set to the value of `key1` as well. The <xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=fullName> constructor is then used to create a <xref:System.Web.Caching.CacheDependency> object, `dep1`, which passes `dependencyKey` as a parameter argument. A second <xref:System.Web.Caching.CacheDependency> object, `dep2`, is then created using this constructor, with `dep1` and the <xref:System.DateTime> object passed as parameter arguments. This second dependency is dependent on the first, and dependency monitoring will begin 10 seconds after the `CreateDependency` method is called. The <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> method is called next, using the second <xref:System.Web.Caching.CacheDependency> object as a parameter. If the first dependency changes in any way, the cached item will be invalidated.  \\n  \\n [!code-cs[CacheDependency Constructor8#1](~/add/codesnippet/csharp/b4a521ab-493f-41c7-94fa-_1.aspx)]\\n [!code-vb[CacheDependency Constructor8#1](~/add/codesnippet/visualbasic/b4a521ab-493f-41c7-94fa-_1.aspx)]\"\n  syntax:\n    content: public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency, DateTime start);\n    parameters:\n    - id: filenames\n      type: System.String[]\n      description: An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.\n    - id: cachekeys\n      type: System.String[]\n      description: An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.\n    - id: dependency\n      type: System.Web.Caching.CacheDependency\n      description: Another instance of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class that this instance is dependent upon.\n    - id: start\n      type: System.DateTime\n      description: The time against which to check the last modified date of the objects in the arrays and the <xref href=\"System.Web.Caching.CacheDependency\"></xref> object.\n  overload: System.Web.Caching.CacheDependency.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.CacheDependency.DependencyDispose\n  id: DependencyDispose\n  parent: System.Web.Caching.CacheDependency\n  langs:\n  - csharp\n  name: DependencyDispose()\n  nameWithType: CacheDependency.DependencyDispose()\n  fullName: System.Web.Caching.CacheDependency.DependencyDispose()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Releases the resources used by the <xref href=\"System.Web.Caching.CacheDependency\"></xref> class and any classes that derive from <xref href=\"System.Web.Caching.CacheDependency\"></xref>.\n  remarks: Any class that derives from the <xref:System.Web.Caching.CacheDependency> class is required to implement this method to clean up resources the derived class has used.\n  example:\n  - \"The following code example shows a class that inherits from the <xref:System.Web.Caching.CacheDependency> class and overrides the DependencyDispose method. When this method is called, it sets a custom Boolean property named `Disposed` to `true`.  \\n  \\n [!code-vb[CacheDependency_Whidbey_Example1#1](~/add/codesnippet/visualbasic/m-system.web.caching.cac_7_1.vb)]\"\n  syntax:\n    content: protected virtual void DependencyDispose ();\n    parameters: []\n  overload: System.Web.Caching.CacheDependency.DependencyDispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.CacheDependency.Dispose\n  id: Dispose\n  parent: System.Web.Caching.CacheDependency\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: CacheDependency.Dispose()\n  fullName: System.Web.Caching.CacheDependency.Dispose()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Releases the resources used by the <xref href=\"System.Web.Caching.CacheDependency\"></xref> object.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Web.Caching.CacheDependency.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.CacheDependency.FinishInit\n  id: FinishInit\n  parent: System.Web.Caching.CacheDependency\n  langs:\n  - csharp\n  name: FinishInit()\n  nameWithType: CacheDependency.FinishInit()\n  fullName: System.Web.Caching.CacheDependency.FinishInit()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Completes initialization of the <xref href=\"System.Web.Caching.CacheDependency\"></xref> object.\n  remarks: The FinishInit method completes the initialization of the <xref:System.Web.Caching.CacheDependency> object. This method is called by all <xref:System.Web.Caching.CacheDependency> constructors.\n  syntax:\n    content: protected void FinishInit ();\n    parameters: []\n  overload: System.Web.Caching.CacheDependency.FinishInit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.CacheDependency.GetFileDependencies\n  id: GetFileDependencies\n  parent: System.Web.Caching.CacheDependency\n  langs:\n  - csharp\n  name: GetFileDependencies()\n  nameWithType: CacheDependency.GetFileDependencies()\n  fullName: System.Web.Caching.CacheDependency.GetFileDependencies()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Gets the file dependencies.\n  syntax:\n    content: public virtual string[] GetFileDependencies ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: The file dependencies.\n  overload: System.Web.Caching.CacheDependency.GetFileDependencies*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.CacheDependency.GetUniqueID\n  id: GetUniqueID\n  parent: System.Web.Caching.CacheDependency\n  langs:\n  - csharp\n  name: GetUniqueID()\n  nameWithType: CacheDependency.GetUniqueID()\n  fullName: System.Web.Caching.CacheDependency.GetUniqueID()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Retrieves a unique identifier for a <xref href=\"System.Web.Caching.CacheDependency\"></xref> object.\n  remarks: \"This method can be particularly useful for tracking multiple instances of the <xref:System.Web.Caching.CacheDependency> class associated with an item or an application.  \\n  \\n The identifier is a combination of either the file name (for a file dependency) or the key name (for a cache-key dependency) and a string that this method assigns to the dependency. In classes that derive from the <xref:System.Web.Caching.CacheDependency> class, you can override this method to customize how it generates the unique identifier.\"\n  example:\n  - \"The following code example creates an <xref:System.Web.Caching.AggregateCacheDependency> object, named `aggDep`, with two <xref:System.Web.Caching.CacheDependency> objects in its array. Once `aggDep` is instantiated, the code calls the GetUniqueID method to generate a unique identifier for both dependencies that `aggDep` contains and displays the identifiers to the containing page. An item is then added to the <xref:System.Web.Caching.Cache>, using the <xref:System.Web.Caching.Cache.Insert%2A> method, with `aggDep` as a dependency.  \\n  \\n [!code-vb[CachingSamples_AggregateCacheDependency1#3](~/add/codesnippet/visualbasic/m-system.web.caching.cac_1_1.aspx)]\"\n  syntax:\n    content: public virtual string GetUniqueID ();\n    parameters: []\n    return:\n      type: System.String\n      description: The unique identifier for the <xref href=\"System.Web.Caching.CacheDependency\"></xref> object.\n  overload: System.Web.Caching.CacheDependency.GetUniqueID*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.CacheDependency.HasChanged\n  id: HasChanged\n  parent: System.Web.Caching.CacheDependency\n  langs:\n  - csharp\n  name: HasChanged\n  nameWithType: CacheDependency.HasChanged\n  fullName: System.Web.Caching.CacheDependency.HasChanged\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Gets a value indicating whether the <xref href=\"System.Web.Caching.CacheDependency\"></xref> object has changed.\n  remarks: You can add an item to an ASP.NET application's <xref:System.Web.Caching.Cache> with a <xref:System.Web.Caching.CacheDependency>. When the <xref:System.Web.Caching.CacheDependency> changes, the item added to the <xref:System.Web.Caching.Cache> is invalidated and removed from the cache. You can use this property to determine whether a <xref:System.Web.Caching.CacheDependency> has changed, and recreate the item in the <xref:System.Web.Caching.Cache> if that has occurred.\n  example:\n  - \"The following code example demonstrates using the HasChanged property to determine whether a <xref:System.Web.Caching.CacheDependency> changed since the previous request for an item in the <xref:System.Web.Caching.Cache>. The `dt` value passed in the `start` parameter is set to <xref:System.DateTime.Now%2A?displayProperty=fullName>.  \\n  \\n [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/add/codesnippet/visualbasic/p-system.web.caching.cac_1_1.aspx)]\\n [!code-cs[System.Web.Caching.CacheDependency_HasChanged#1](~/add/codesnippet/csharp/p-system.web.caching.cac_1_1.aspx)]\"\n  syntax:\n    content: public bool HasChanged { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.Caching.CacheDependency\"></xref> object has changed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Caching.CacheDependency.HasChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)\n  id: NotifyDependencyChanged(System.Object,System.EventArgs)\n  parent: System.Web.Caching.CacheDependency\n  langs:\n  - csharp\n  name: NotifyDependencyChanged(Object,EventArgs)\n  nameWithType: CacheDependency.NotifyDependencyChanged(Object,EventArgs)\n  fullName: System.Web.Caching.CacheDependency.NotifyDependencyChanged(Object,EventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Notifies the base <xref href=\"System.Web.Caching.CacheDependency\"></xref> object that the dependency represented by a derived <xref href=\"System.Web.Caching.CacheDependency\"></xref> class has changed.\n  remarks: \"Any class that derives from the <xref:System.Web.Caching.CacheDependency> class must implement this method.  \\n  \\n When you derive from the <xref:System.Web.Caching.CacheDependency> class, you use the base functionality of any method or property that you have not overridden. When you create an instance of the derived class, it represents the files, cache keys, database tables, or other arbitrary objects that you want to make a cached item dependent upon. When a dependency item changes, this method notifies the base functionality of the <xref:System.Web.Caching.CacheDependency> class that the item has changed, so that the values of the <xref:System.Web.Caching.CacheDependency.HasChanged%2A> and <xref:System.Web.Caching.CacheDependency.UtcLastModified%2A> properties can be updated.\"\n  example:\n  - \"The following code example shows a class that inherits from the <xref:System.Web.Caching.CacheDependency> class. It creates a public method, `ResetDependency`, that uses the <xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A> method to change the time at which the dependency was modified, and then calls the NotifyDependencyChanged method.  \\n  \\n [!code-vb[CacheDependency_Whidbey_Example1#1](~/add/codesnippet/visualbasic/0410edfc-9961-4a15-80eb-_1.vb)]\"\n  syntax:\n    content: protected void NotifyDependencyChanged (object sender, EventArgs e);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The source of the event.\n    - id: e\n      type: System.EventArgs\n      description: An &lt;xref:System.EventArgs?displayProperty=fullName&gt; object that contains the event data.\n  overload: System.Web.Caching.CacheDependency.NotifyDependencyChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)\n  id: SetUtcLastModified(System.DateTime)\n  parent: System.Web.Caching.CacheDependency\n  langs:\n  - csharp\n  name: SetUtcLastModified(DateTime)\n  nameWithType: CacheDependency.SetUtcLastModified(DateTime)\n  fullName: System.Web.Caching.CacheDependency.SetUtcLastModified(DateTime)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Marks the time when a dependency last changed.\n  remarks: ''\n  example:\n  - \"The following code example shows a class that inherits from the <xref:System.Web.Caching.CacheDependency> class. It creates a public method, `ResetDependency`, that uses the SetUtcLastModified method to change the time at which the dependency was modified, and then calls the <xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A> method.  \\n  \\n [!code-vb[CacheDependency_Whidbey_Example1#1](~/add/codesnippet/visualbasic/m-system.web.caching.cac_6_1.vb)]\"\n  syntax:\n    content: protected void SetUtcLastModified (DateTime utcLastModified);\n    parameters:\n    - id: utcLastModified\n      type: System.DateTime\n      description: The time when the dependency last changed.\n  overload: System.Web.Caching.CacheDependency.SetUtcLastModified*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Caching.CacheDependency.UtcLastModified\n  id: UtcLastModified\n  parent: System.Web.Caching.CacheDependency\n  langs:\n  - csharp\n  name: UtcLastModified\n  nameWithType: CacheDependency.UtcLastModified\n  fullName: System.Web.Caching.CacheDependency.UtcLastModified\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Gets the time when the dependency was last changed.\n  remarks: This property is measured in Coordinated Universal Time (UTC) (also known as Greenwich Mean Time).\n  example:\n  - \"The following code example uses the <xref:System.Web.Caching.AggregateCacheDependency> class to add an item, with two <xref:System.Web.Caching.CacheDependency> object dependencies, to the <xref:System.Web.Caching.Cache>. When a request for the <xref:System.Web.Caching.Cache> item is made, the code checks whether the item is in the <xref:System.Web.Caching.Cache>. If it is, the UtcLastModified property is converted to a string and displayed on the page. If it is not, the item and its two dependencies are created and added to the <xref:System.Web.Caching.Cache>.  \\n  \\n [!code-vb[CachingSamples_AggregateCacheDependency1#2](~/add/codesnippet/visualbasic/p-system.web.caching.cac_0_1.aspx)]\"\n  syntax:\n    content: public DateTime UtcLastModified { get; }\n    return:\n      type: System.DateTime\n      description: The time when the dependency was last changed.\n  overload: System.Web.Caching.CacheDependency.UtcLastModified*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.Caching.CacheDependency.#ctor\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: CacheDependency()\n  nameWithType: CacheDependency.CacheDependency()\n  fullName: System.Web.Caching.CacheDependency.CacheDependency()\n- uid: System.Web.Caching.CacheDependency.#ctor(System.String)\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: CacheDependency(String)\n  nameWithType: CacheDependency.CacheDependency(String)\n  fullName: System.Web.Caching.CacheDependency.CacheDependency(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Caching.CacheDependency.#ctor(System.String[])\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: CacheDependency(String[])\n  nameWithType: CacheDependency.CacheDependency(String[])\n  fullName: System.Web.Caching.CacheDependency.CacheDependency(String[])\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: CacheDependency(String,DateTime)\n  nameWithType: CacheDependency.CacheDependency(String,DateTime)\n  fullName: System.Web.Caching.CacheDependency.CacheDependency(String,DateTime)\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: CacheDependency(String[],DateTime)\n  nameWithType: CacheDependency.CacheDependency(String[],DateTime)\n  fullName: System.Web.Caching.CacheDependency.CacheDependency(String[],DateTime)\n- uid: System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: CacheDependency(String[],String[])\n  nameWithType: CacheDependency.CacheDependency(String[],String[])\n  fullName: System.Web.Caching.CacheDependency.CacheDependency(String[],String[])\n- uid: System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: CacheDependency(String[],String[],DateTime)\n  nameWithType: CacheDependency.CacheDependency(String[],String[],DateTime)\n  fullName: System.Web.Caching.CacheDependency.CacheDependency(String[],String[],DateTime)\n- uid: System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: CacheDependency(String[],String[],CacheDependency)\n  nameWithType: CacheDependency.CacheDependency(String[],String[],CacheDependency)\n  fullName: System.Web.Caching.CacheDependency.CacheDependency(String[],String[],CacheDependency)\n- uid: System.Web.Caching.CacheDependency\n  parent: System.Web.Caching\n  isExternal: false\n  name: CacheDependency\n  nameWithType: CacheDependency\n  fullName: System.Web.Caching.CacheDependency\n- uid: System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: CacheDependency(String[],String[],CacheDependency,DateTime)\n  nameWithType: CacheDependency.CacheDependency(String[],String[],CacheDependency,DateTime)\n  fullName: System.Web.Caching.CacheDependency.CacheDependency(String[],String[],CacheDependency,DateTime)\n- uid: System.Web.Caching.CacheDependency.DependencyDispose\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: DependencyDispose()\n  nameWithType: CacheDependency.DependencyDispose()\n  fullName: System.Web.Caching.CacheDependency.DependencyDispose()\n- uid: System.Web.Caching.CacheDependency.Dispose\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: Dispose()\n  nameWithType: CacheDependency.Dispose()\n  fullName: System.Web.Caching.CacheDependency.Dispose()\n- uid: System.Web.Caching.CacheDependency.FinishInit\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: FinishInit()\n  nameWithType: CacheDependency.FinishInit()\n  fullName: System.Web.Caching.CacheDependency.FinishInit()\n- uid: System.Web.Caching.CacheDependency.GetFileDependencies\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: GetFileDependencies()\n  nameWithType: CacheDependency.GetFileDependencies()\n  fullName: System.Web.Caching.CacheDependency.GetFileDependencies()\n- uid: System.Web.Caching.CacheDependency.GetUniqueID\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: GetUniqueID()\n  nameWithType: CacheDependency.GetUniqueID()\n  fullName: System.Web.Caching.CacheDependency.GetUniqueID()\n- uid: System.Web.Caching.CacheDependency.HasChanged\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: HasChanged\n  nameWithType: CacheDependency.HasChanged\n  fullName: System.Web.Caching.CacheDependency.HasChanged\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: NotifyDependencyChanged(Object,EventArgs)\n  nameWithType: CacheDependency.NotifyDependencyChanged(Object,EventArgs)\n  fullName: System.Web.Caching.CacheDependency.NotifyDependencyChanged(Object,EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: SetUtcLastModified(DateTime)\n  nameWithType: CacheDependency.SetUtcLastModified(DateTime)\n  fullName: System.Web.Caching.CacheDependency.SetUtcLastModified(DateTime)\n- uid: System.Web.Caching.CacheDependency.UtcLastModified\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: UtcLastModified\n  nameWithType: CacheDependency.UtcLastModified\n  fullName: System.Web.Caching.CacheDependency.UtcLastModified\n- uid: System.Web.Caching.CacheDependency.#ctor*\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: CacheDependency\n  nameWithType: CacheDependency.CacheDependency\n- uid: System.Web.Caching.CacheDependency.DependencyDispose*\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: DependencyDispose\n  nameWithType: CacheDependency.DependencyDispose\n- uid: System.Web.Caching.CacheDependency.Dispose*\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: Dispose\n  nameWithType: CacheDependency.Dispose\n- uid: System.Web.Caching.CacheDependency.FinishInit*\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: FinishInit\n  nameWithType: CacheDependency.FinishInit\n- uid: System.Web.Caching.CacheDependency.GetFileDependencies*\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: GetFileDependencies\n  nameWithType: CacheDependency.GetFileDependencies\n- uid: System.Web.Caching.CacheDependency.GetUniqueID*\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: GetUniqueID\n  nameWithType: CacheDependency.GetUniqueID\n- uid: System.Web.Caching.CacheDependency.HasChanged*\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: HasChanged\n  nameWithType: CacheDependency.HasChanged\n- uid: System.Web.Caching.CacheDependency.NotifyDependencyChanged*\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: NotifyDependencyChanged\n  nameWithType: CacheDependency.NotifyDependencyChanged\n- uid: System.Web.Caching.CacheDependency.SetUtcLastModified*\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: SetUtcLastModified\n  nameWithType: CacheDependency.SetUtcLastModified\n- uid: System.Web.Caching.CacheDependency.UtcLastModified*\n  parent: System.Web.Caching.CacheDependency\n  isExternal: false\n  name: UtcLastModified\n  nameWithType: CacheDependency.UtcLastModified\n"}