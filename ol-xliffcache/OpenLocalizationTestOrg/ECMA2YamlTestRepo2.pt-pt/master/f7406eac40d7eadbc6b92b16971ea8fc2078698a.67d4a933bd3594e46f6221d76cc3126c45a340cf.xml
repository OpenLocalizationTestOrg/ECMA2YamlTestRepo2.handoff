{"nodes":[{"pos":[5499,5572],"content":"Provides extension methods to create and retrieve reflection-based parts.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides extension methods to create and retrieve reflection-based parts.","pos":[0,73]}]},{"pos":[7048,7159],"content":"Creates an export definition from the specified member, with the specified contract name, metadata, and origin.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an export definition from the specified member, with the specified contract name, metadata, and origin.","pos":[0,111]}]},{"pos":[7668,7689],"content":"The member to export.","needQuote":true,"needEscape":true,"nodes":[{"content":"The member to export.","pos":[0,21]}]},{"pos":[7758,7798],"content":"The contract name to use for the export.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract name to use for the export.","pos":[0,40]}]},{"pos":[7930,7958],"content":"The metadata for the export.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata for the export.","pos":[0,28]}]},{"pos":[8072,8115],"content":"The object that the export originates from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that the export originates from.","pos":[0,43]}]},{"pos":[8221,8280],"content":"An export definition created from the specified parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"An export definition created from the specified parameters.","pos":[0,59]}]},{"pos":[10109,10269],"content":"Creates an import definition for the specified parameter by using the specified contract name, type identity, import metadata, cardinality, and creation policy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an import definition for the specified parameter by using the specified contract name, type identity, import metadata, cardinality, and creation policy.","pos":[0,160]}]},{"pos":[10951,10975],"content":"The parameter to import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameter to import.","pos":[0,24]}]},{"pos":[11044,11084],"content":"The contract name to use for the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract name to use for the import.","pos":[0,40]}]},{"pos":[11161,11203],"content":"The required type identity for the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The required type identity for the import.","pos":[0,42]}]},{"pos":[11369,11406],"content":"The required metadata for the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The required metadata for the import.","pos":[0,37]}]},{"pos":[11523,11553],"content":"The cardinality of the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cardinality of the import.","pos":[0,30]}]},{"pos":[11667,11741],"content":"One of the enumeration values that specifies the import's creation policy.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the import's creation policy.","pos":[0,74]}]},{"pos":[11855,11881],"content":"The object to import into.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to import into.","pos":[0,26]}]},{"pos":[12000,12059],"content":"An import definition created from the specified parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"An import definition created from the specified parameters.","pos":[0,59]}]},{"pos":[13967,14146],"content":"Creates an import definition for the specified member by using the specified contract name, type identity, import metadata, cardinality, recomposition policy, and creation policy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an import definition for the specified member by using the specified contract name, type identity, import metadata, cardinality, recomposition policy, and creation policy.","pos":[0,179]}]},{"pos":[14908,14934],"content":"The member to import into.","needQuote":true,"needEscape":true,"nodes":[{"content":"The member to import into.","pos":[0,26]}]},{"pos":[15003,15043],"content":"The contract name to use for the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract name to use for the import.","pos":[0,40]}]},{"pos":[15120,15162],"content":"The required type identity for the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The required type identity for the import.","pos":[0,42]}]},{"pos":[15328,15365],"content":"The required metadata for the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The required metadata for the import.","pos":[0,37]}]},{"pos":[15482,15512],"content":"The cardinality of the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cardinality of the import.","pos":[0,30]}]},{"pos":[15584,15764],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate that the import is recomposable; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the import is recomposable; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15878,15952],"content":"One of the enumeration values that specifies the import's creation policy.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the import's creation policy.","pos":[0,74]}]},{"pos":[16066,16092],"content":"The object to import into.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to import into.","pos":[0,26]}]},{"pos":[16211,16270],"content":"An import definition created from the specified parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"An import definition created from the specified parameters.","pos":[0,59]}]},{"pos":[18370,18543],"content":"Creates an import definition for the specified parameter by using the specified contract name, type identity, import and contract metadata, cardinality, and creation policy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an import definition for the specified parameter by using the specified contract name, type identity, import and contract metadata, cardinality, and creation policy.","pos":[0,173]}]},{"pos":[19311,19335],"content":"The parameter to import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameter to import.","pos":[0,24]}]},{"pos":[19404,19444],"content":"The contract name to use for the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract name to use for the import.","pos":[0,40]}]},{"pos":[19521,19563],"content":"The required type identity for the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The required type identity for the import.","pos":[0,42]}]},{"pos":[19729,19766],"content":"The required metadata for the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The required metadata for the import.","pos":[0,37]}]},{"pos":[19883,19913],"content":"The cardinality of the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cardinality of the import.","pos":[0,30]}]},{"pos":[20027,20101],"content":"One of the enumeration values that specifies the import's creation policy.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the import's creation policy.","pos":[0,74]}]},{"pos":[20220,20241],"content":"The contract metadata","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract metadata","pos":[0,21]}]},{"pos":[20314,20557],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate that the import represents an <ph id=\"ph1\">&amp;lt;</ph>xref:System.ComponentModel.Composition.ExportFactory%601<ph id=\"ph2\">&amp;gt;</ph>; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the import represents an &lt;xref:System.ComponentModel.Composition.ExportFactory%601&gt;; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20671,20697],"content":"The object to import into.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to import into.","pos":[0,26]}]},{"pos":[20816,20875],"content":"An import definition created from the specified parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"An import definition created from the specified parameters.","pos":[0,59]}]},{"pos":[23054,23246],"content":"Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.","pos":[0,192]}]},{"pos":[24094,24120],"content":"The member to import into.","needQuote":true,"needEscape":true,"nodes":[{"content":"The member to import into.","pos":[0,26]}]},{"pos":[24189,24229],"content":"The contract name to use for the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract name to use for the import.","pos":[0,40]}]},{"pos":[24306,24348],"content":"The required type identity for the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The required type identity for the import.","pos":[0,42]}]},{"pos":[24514,24551],"content":"The required metadata for the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The required metadata for the import.","pos":[0,37]}]},{"pos":[24668,24698],"content":"The cardinality of the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cardinality of the import.","pos":[0,30]}]},{"pos":[24770,24950],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate that the import is recomposable; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the import is recomposable; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25064,25138],"content":"One of the enumeration values that specifies the import's creation policy.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the import's creation policy.","pos":[0,74]}]},{"pos":[25257,25279],"content":"The contract metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract metadata.","pos":[0,22]}]},{"pos":[25352,25595],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate that the import represents an <ph id=\"ph1\">&amp;lt;</ph>xref:System.ComponentModel.Composition.ExportFactory%601<ph id=\"ph2\">&amp;gt;</ph>; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the import represents an &lt;xref:System.ComponentModel.Composition.ExportFactory%601&gt;; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25709,25735],"content":"The object to import into.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to import into.","pos":[0,26]}]},{"pos":[25854,25913],"content":"An import definition created from the specified parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"An import definition created from the specified parameters.","pos":[0,59]}]},{"pos":[28146,28338],"content":"Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.","pos":[0,192]}]},{"pos":[29207,29233],"content":"The member to import into.","needQuote":true,"needEscape":true,"nodes":[{"content":"The member to import into.","pos":[0,26]}]},{"pos":[29302,29342],"content":"The contract name to use for the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract name to use for the import.","pos":[0,40]}]},{"pos":[29419,29461],"content":"The required type identity for the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The required type identity for the import.","pos":[0,42]}]},{"pos":[29627,29664],"content":"The required metadata for the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The required metadata for the import.","pos":[0,37]}]},{"pos":[29781,29811],"content":"The cardinality of the import.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cardinality of the import.","pos":[0,30]}]},{"pos":[29883,30063],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate that the import is recomposable; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the import is recomposable; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[30135,30317],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate that the import is a prerequisite; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the import is a prerequisite; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[30431,30505],"content":"One of the enumeration values that specifies the import's creation policy.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies the import's creation policy.","pos":[0,74]}]},{"pos":[30624,30646],"content":"The contract metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The contract metadata.","pos":[0,22]}]},{"pos":[30719,30962],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate that the import represents an <ph id=\"ph1\">&amp;lt;</ph>xref:System.ComponentModel.Composition.ExportFactory%601<ph id=\"ph2\">&amp;gt;</ph>; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the import represents an &lt;xref:System.ComponentModel.Composition.ExportFactory%601&gt;; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[31076,31102],"content":"The object to import into.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to import into.","pos":[0,26]}]},{"pos":[31221,31280],"content":"An import definition created from the specified parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"An import definition created from the specified parameters.","pos":[0,59]}]},{"pos":[33271,33366],"content":"Creates a part definition with the specified part type, imports, exports, metadata, and origin.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a part definition with the specified part type, imports, exports, metadata, and origin.","pos":[0,95]}]},{"pos":[34011,34032],"content":"The type of the part.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the part.","pos":[0,21]}]},{"pos":[34108,34274],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the part requires disposal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the part requires disposal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[34439,34474],"content":"A collection of the part's imports.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of the part's imports.","pos":[0,35]}]},{"pos":[34639,34674],"content":"A collection of the part's exports.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of the part's exports.","pos":[0,35]}]},{"pos":[34806,34826],"content":"The part's metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The part's metadata.","pos":[0,20]}]},{"pos":[34940,34958],"content":"The part's origin.","needQuote":true,"needEscape":true,"nodes":[{"content":"The part's origin.","pos":[0,18]}]},{"pos":[35072,35128],"content":"A part definition created from the specified parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"A part definition created from the specified parameters.","pos":[0,56]}]},{"pos":[36123,36201],"content":"Returns a representation of an import definition as an export factory product.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a representation of an import definition as an export factory product.","pos":[0,78]}]},{"pos":[36572,36607],"content":"The import definition to represent.","needQuote":true,"needEscape":true,"nodes":[{"content":"The import definition to represent.","pos":[0,35]}]},{"pos":[36726,36770],"content":"The representation of the import definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The representation of the import definition.","pos":[0,44]}]},{"pos":[37679,37740],"content":"Gets the exporting member from a specified export definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the exporting member from a specified export definition.","pos":[0,61]}]},{"pos":[38080,38113],"content":"The export definition to examine.","needQuote":true,"needEscape":true,"nodes":[{"content":"The export definition to examine.","pos":[0,33]}]},{"pos":[38222,38268],"content":"The member specified in the export definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The member specified in the export definition.","pos":[0,46]}]},{"pos":[38483,38577],"content":"<ph id=\"ph1\">&lt;code&gt;exportDefinition&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>exportDefinition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[39342,39403],"content":"Gets the importing member from a specified import definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the importing member from a specified import definition.","pos":[0,61]}]},{"pos":[39743,39776],"content":"The import definition to examine.","needQuote":true,"needEscape":true,"nodes":[{"content":"The import definition to examine.","pos":[0,33]}]},{"pos":[39885,39931],"content":"The member specified in the import definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The member specified in the import definition.","pos":[0,46]}]},{"pos":[40146,40240],"content":"<ph id=\"ph1\">&lt;code&gt;importDefinition&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>importDefinition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[41020,41084],"content":"Gets the importing parameter from a specified import definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the importing parameter from a specified import definition.","pos":[0,64]}]},{"pos":[41400,41433],"content":"The import definition to examine.","needQuote":true,"needEscape":true,"nodes":[{"content":"The import definition to examine.","pos":[0,33]}]},{"pos":[41522,41571],"content":"The parameter specified in the import definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameter specified in the import definition.","pos":[0,49]}]},{"pos":[41789,41883],"content":"<ph id=\"ph1\">&lt;code&gt;importDefinition&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>importDefinition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[42653,42710],"content":"Gets the type of a part from a specified part definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of a part from a specified part definition.","pos":[0,57]}]},{"pos":[43001,43032],"content":"The part definition to examine.","needQuote":true,"needEscape":true,"nodes":[{"content":"The part definition to examine.","pos":[0,31]}]},{"pos":[43101,43130],"content":"The type of the defined part.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the defined part.","pos":[0,29]}]},{"pos":[43338,43430],"content":"<ph id=\"ph1\">&lt;code&gt;partDefinition&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>partDefinition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[44235,44291],"content":"Determines whether the specified part requires disposal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified part requires disposal.","pos":[0,56]}]},{"pos":[44583,44603],"content":"The part to examine.","needQuote":true,"needEscape":true,"nodes":[{"content":"The part to examine.","pos":[0,20]}]},{"pos":[44662,44828],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the part requires disposal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the part requires disposal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[45043,45135],"content":"<ph id=\"ph1\">&lt;code&gt;partDefinition&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>partDefinition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[45965,46184],"content":"Indicates whether a specified import definition represents an export factory (&lt;xref:System.ComponentModel.Composition.ExportFactory%601&gt; or &lt;xref:System.ComponentModel.Composition.ExportFactory%602&gt; object).","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether a specified import definition represents an export factory (<ph id=\"ph1\">&amp;lt;</ph>xref:System.ComponentModel.Composition.ExportFactory%601<ph id=\"ph2\">&amp;gt;</ph> or <ph id=\"ph3\">&amp;lt;</ph>xref:System.ComponentModel.Composition.ExportFactory%602<ph id=\"ph4\">&amp;gt;</ph> object).","pos":[0,219],"source":"Indicates whether a specified import definition represents an export factory (&lt;xref:System.ComponentModel.Composition.ExportFactory%601&gt; or &lt;xref:System.ComponentModel.Composition.ExportFactory%602&gt; object)."}]},{"pos":[46477,46508],"content":"The import definition to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The import definition to check.","pos":[0,31]}]},{"pos":[46567,46767],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified import definition represents an export factory; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified import definition represents an export factory; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[47678,47753],"content":"Determines whether an import definition represents a member or a parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether an import definition represents a member or a parameter.","pos":[0,75]}]},{"pos":[48035,48068],"content":"The import definition to examine.","needQuote":true,"needEscape":true,"nodes":[{"content":"The import definition to examine.","pos":[0,33]}]},{"pos":[48127,48311],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the import definition represents a parameter; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the import definition represents a parameter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[48528,48622],"content":"<ph id=\"ph1\">&lt;code&gt;importDefinition&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>importDefinition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[49852,49944],"content":"Indicates whether a generic part definition can be specialized with the provided parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether a generic part definition can be specialized with the provided parameters.","pos":[0,92]}]},{"pos":[50400,50420],"content":"The part definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The part definition.","pos":[0,20]}]},{"pos":[50532,50588],"content":"A collection of types to specify the generic parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of types to specify the generic parameters.","pos":[0,56]}]},{"pos":[50715,50826],"content":"When this method returns, contains the specialized part definition. This parameter is treated as uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains the specialized part definition. This parameter is treated as uninitialized.","pos":[0,111],"nodes":[{"content":"When this method returns, contains the specialized part definition.","pos":[0,67]},{"content":"This parameter is treated as uninitialized.","pos":[68,111]}]}]},{"pos":[50885,51052],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specialization succeeds; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specialization succeeds; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  id: ReflectionModelServices\n  children:\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition(System.Lazy{System.Type},System.Boolean,System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}},System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}},System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember(System.ComponentModel.Composition.Primitives.ExportDefinition)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)\n  langs:\n  - csharp\n  name: ReflectionModelServices\n  nameWithType: ReflectionModelServices\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  type: Class\n  summary: Provides extension methods to create and retrieve reflection-based parts.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public static class ReflectionModelServices\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: CreateExportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: CreateExportDefinition(LazyMemberInfo,String,Lazy<IDictionary<String,Object>>,ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateExportDefinition(LazyMemberInfo,String,Lazy<IDictionary<String,Object>>,ICompositionElement)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition(LazyMemberInfo,String,Lazy<IDictionary<String,Object>>,ICompositionElement)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Creates an export definition from the specified member, with the specified contract name, metadata, and origin.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ExportDefinition CreateExportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo exportingMember, string contractName, Lazy<System.Collections.Generic.IDictionary<string,object>> metadata, System.ComponentModel.Composition.Primitives.ICompositionElement origin);\n    parameters:\n    - id: exportingMember\n      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n      description: The member to export.\n    - id: contractName\n      type: System.String\n      description: The contract name to use for the export.\n    - id: metadata\n      type: System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}}\n      description: The metadata for the export.\n    - id: origin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The object that the export originates from.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ExportDefinition\n      description: An export definition created from the specified parameters.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: CreateImportDefinition(Lazy<ParameterInfo>,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,CreationPolicy,ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(Lazy<ParameterInfo>,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,CreationPolicy,ICompositionElement)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(Lazy<ParameterInfo>,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,CreationPolicy,ICompositionElement)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Creates an import definition for the specified parameter by using the specified contract name, type identity, import metadata, cardinality, and creation policy.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (Lazy<System.Reflection.ParameterInfo> parameter, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.ComponentModel.Composition.Primitives.ICompositionElement origin);\n    parameters:\n    - id: parameter\n      type: System.Lazy{System.Reflection.ParameterInfo}\n      description: The parameter to import.\n    - id: contractName\n      type: System.String\n      description: The contract name to use for the import.\n    - id: requiredTypeIdentity\n      type: System.String\n      description: The required type identity for the import.\n    - id: requiredMetadata\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}\n      description: The required metadata for the import.\n    - id: cardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: The cardinality of the import.\n    - id: requiredCreationPolicy\n      type: System.ComponentModel.Composition.CreationPolicy\n      description: One of the enumeration values that specifies the import's creation policy.\n    - id: origin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The object to import into.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n      description: An import definition created from the specified parameters.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: CreateImportDefinition(LazyMemberInfo,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,CreationPolicy,ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(LazyMemberInfo,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,CreationPolicy,ICompositionElement)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(LazyMemberInfo,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,CreationPolicy,ICompositionElement)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Creates an import definition for the specified member by using the specified contract name, type identity, import metadata, cardinality, recomposition policy, and creation policy.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.ComponentModel.Composition.Primitives.ICompositionElement origin);\n    parameters:\n    - id: importingMember\n      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n      description: The member to import into.\n    - id: contractName\n      type: System.String\n      description: The contract name to use for the import.\n    - id: requiredTypeIdentity\n      type: System.String\n      description: The required type identity for the import.\n    - id: requiredMetadata\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}\n      description: The required metadata for the import.\n    - id: cardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: The cardinality of the import.\n    - id: isRecomposable\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the import is recomposable; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: requiredCreationPolicy\n      type: System.ComponentModel.Composition.CreationPolicy\n      description: One of the enumeration values that specifies the import's creation policy.\n    - id: origin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The object to import into.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n      description: An import definition created from the specified parameters.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: CreateImportDefinition(Lazy<ParameterInfo>,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,CreationPolicy,IDictionary<String,Object>,Boolean,ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(Lazy<ParameterInfo>,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,CreationPolicy,IDictionary<String,Object>,Boolean,ICompositionElement)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(Lazy<ParameterInfo>,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,CreationPolicy,IDictionary<String,Object>,Boolean,ICompositionElement)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Creates an import definition for the specified parameter by using the specified contract name, type identity, import and contract metadata, cardinality, and creation policy.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (Lazy<System.Reflection.ParameterInfo> parameter, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary<string,object> metadata, bool isExportFactory, System.ComponentModel.Composition.Primitives.ICompositionElement origin);\n    parameters:\n    - id: parameter\n      type: System.Lazy{System.Reflection.ParameterInfo}\n      description: The parameter to import.\n    - id: contractName\n      type: System.String\n      description: The contract name to use for the import.\n    - id: requiredTypeIdentity\n      type: System.String\n      description: The required type identity for the import.\n    - id: requiredMetadata\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}\n      description: The required metadata for the import.\n    - id: cardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: The cardinality of the import.\n    - id: requiredCreationPolicy\n      type: System.ComponentModel.Composition.CreationPolicy\n      description: One of the enumeration values that specifies the import's creation policy.\n    - id: metadata\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: The contract metadata\n    - id: isExportFactory\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the import represents an &lt;xref:System.ComponentModel.Composition.ExportFactory%601&gt;; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: origin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The object to import into.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n      description: An import definition created from the specified parameters.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: CreateImportDefinition(LazyMemberInfo,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,CreationPolicy,IDictionary<String,Object>,Boolean,ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(LazyMemberInfo,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,CreationPolicy,IDictionary<String,Object>,Boolean,ICompositionElement)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(LazyMemberInfo,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,CreationPolicy,IDictionary<String,Object>,Boolean,ICompositionElement)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary<string,object> metadata, bool isExportFactory, System.ComponentModel.Composition.Primitives.ICompositionElement origin);\n    parameters:\n    - id: importingMember\n      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n      description: The member to import into.\n    - id: contractName\n      type: System.String\n      description: The contract name to use for the import.\n    - id: requiredTypeIdentity\n      type: System.String\n      description: The required type identity for the import.\n    - id: requiredMetadata\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}\n      description: The required metadata for the import.\n    - id: cardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: The cardinality of the import.\n    - id: isRecomposable\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the import is recomposable; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: requiredCreationPolicy\n      type: System.ComponentModel.Composition.CreationPolicy\n      description: One of the enumeration values that specifies the import's creation policy.\n    - id: metadata\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: The contract metadata.\n    - id: isExportFactory\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the import represents an &lt;xref:System.ComponentModel.Composition.ExportFactory%601&gt;; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: origin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The object to import into.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n      description: An import definition created from the specified parameters.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: CreateImportDefinition(LazyMemberInfo,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>,Boolean,ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(LazyMemberInfo,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>,Boolean,ICompositionElement)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(LazyMemberInfo,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>,Boolean,ICompositionElement)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPreRequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary<string,object> metadata, bool isExportFactory, System.ComponentModel.Composition.Primitives.ICompositionElement origin);\n    parameters:\n    - id: importingMember\n      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n      description: The member to import into.\n    - id: contractName\n      type: System.String\n      description: The contract name to use for the import.\n    - id: requiredTypeIdentity\n      type: System.String\n      description: The required type identity for the import.\n    - id: requiredMetadata\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}\n      description: The required metadata for the import.\n    - id: cardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: The cardinality of the import.\n    - id: isRecomposable\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the import is recomposable; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: isPreRequisite\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the import is a prerequisite; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: requiredCreationPolicy\n      type: System.ComponentModel.Composition.CreationPolicy\n      description: One of the enumeration values that specifies the import's creation policy.\n    - id: metadata\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: The contract metadata.\n    - id: isExportFactory\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the import represents an &lt;xref:System.ComponentModel.Composition.ExportFactory%601&gt;; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: origin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The object to import into.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n      description: An import definition created from the specified parameters.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition(System.Lazy{System.Type},System.Boolean,System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}},System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}},System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: CreatePartDefinition(System.Lazy{System.Type},System.Boolean,System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}},System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}},System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: CreatePartDefinition(Lazy<Type>,Boolean,Lazy<IEnumerable<ImportDefinition>>,Lazy<IEnumerable<ExportDefinition>>,Lazy<IDictionary<String,Object>>,ICompositionElement)\n  nameWithType: ReflectionModelServices.CreatePartDefinition(Lazy<Type>,Boolean,Lazy<IEnumerable<ImportDefinition>>,Lazy<IEnumerable<ExportDefinition>>,Lazy<IDictionary<String,Object>>,ICompositionElement)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition(Lazy<Type>,Boolean,Lazy<IEnumerable<ImportDefinition>>,Lazy<IEnumerable<ExportDefinition>>,Lazy<IDictionary<String,Object>>,ICompositionElement)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Creates a part definition with the specified part type, imports, exports, metadata, and origin.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Lazy<Type> partType, bool isDisposalRequired, Lazy<System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ImportDefinition>> imports, Lazy<System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ExportDefinition>> exports, Lazy<System.Collections.Generic.IDictionary<string,object>> metadata, System.ComponentModel.Composition.Primitives.ICompositionElement origin);\n    parameters:\n    - id: partType\n      type: System.Lazy{System.Type}\n      description: The type of the part.\n    - id: isDisposalRequired\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the part requires disposal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: imports\n      type: System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}}\n      description: A collection of the part's imports.\n    - id: exports\n      type: System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}}\n      description: A collection of the part's exports.\n    - id: metadata\n      type: System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}}\n      description: The part's metadata.\n    - id: origin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The part's origin.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: A part definition created from the specified parameters.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  id: GetExportFactoryProductImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: GetExportFactoryProductImportDefinition(ImportDefinition)\n  nameWithType: ReflectionModelServices.GetExportFactoryProductImportDefinition(ImportDefinition)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition(ImportDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Returns a representation of an import definition as an export factory product.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition GetExportFactoryProductImportDefinition (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);\n    parameters:\n    - id: importDefinition\n      type: System.ComponentModel.Composition.Primitives.ImportDefinition\n      description: The import definition to represent.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n      description: The representation of the import definition.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember(System.ComponentModel.Composition.Primitives.ExportDefinition)\n  id: GetExportingMember(System.ComponentModel.Composition.Primitives.ExportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: GetExportingMember(ExportDefinition)\n  nameWithType: ReflectionModelServices.GetExportingMember(ExportDefinition)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember(ExportDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Gets the exporting member from a specified export definition.\n  syntax:\n    content: public static System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo GetExportingMember (System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition);\n    parameters:\n    - id: exportDefinition\n      type: System.ComponentModel.Composition.Primitives.ExportDefinition\n      description: The export definition to examine.\n    return:\n      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n      description: The member specified in the export definition.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>exportDefinition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  id: GetImportingMember(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: GetImportingMember(ImportDefinition)\n  nameWithType: ReflectionModelServices.GetImportingMember(ImportDefinition)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember(ImportDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Gets the importing member from a specified import definition.\n  syntax:\n    content: public static System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo GetImportingMember (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);\n    parameters:\n    - id: importDefinition\n      type: System.ComponentModel.Composition.Primitives.ImportDefinition\n      description: The import definition to examine.\n    return:\n      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n      description: The member specified in the import definition.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>importDefinition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  id: GetImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: GetImportingParameter(ImportDefinition)\n  nameWithType: ReflectionModelServices.GetImportingParameter(ImportDefinition)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter(ImportDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Gets the importing parameter from a specified import definition.\n  syntax:\n    content: public static Lazy<System.Reflection.ParameterInfo> GetImportingParameter (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);\n    parameters:\n    - id: importDefinition\n      type: System.ComponentModel.Composition.Primitives.ImportDefinition\n      description: The import definition to examine.\n    return:\n      type: System.Lazy{System.Reflection.ParameterInfo}\n      description: The parameter specified in the import definition.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>importDefinition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  id: GetPartType(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: GetPartType(ComposablePartDefinition)\n  nameWithType: ReflectionModelServices.GetPartType(ComposablePartDefinition)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType(ComposablePartDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Gets the type of a part from a specified part definition.\n  syntax:\n    content: public static Lazy<Type> GetPartType (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition);\n    parameters:\n    - id: partDefinition\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The part definition to examine.\n    return:\n      type: System.Lazy{System.Type}\n      description: The type of the defined part.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>partDefinition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  id: IsDisposalRequired(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: IsDisposalRequired(ComposablePartDefinition)\n  nameWithType: ReflectionModelServices.IsDisposalRequired(ComposablePartDefinition)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired(ComposablePartDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Determines whether the specified part requires disposal.\n  syntax:\n    content: public static bool IsDisposalRequired (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition);\n    parameters:\n    - id: partDefinition\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The part to examine.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the part requires disposal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>partDefinition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  id: IsExportFactoryImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: IsExportFactoryImportDefinition(ImportDefinition)\n  nameWithType: ReflectionModelServices.IsExportFactoryImportDefinition(ImportDefinition)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition(ImportDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Indicates whether a specified import definition represents an export factory (&lt;xref:System.ComponentModel.Composition.ExportFactory%601&gt; or &lt;xref:System.ComponentModel.Composition.ExportFactory%602&gt; object).\n  syntax:\n    content: public static bool IsExportFactoryImportDefinition (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);\n    parameters:\n    - id: importDefinition\n      type: System.ComponentModel.Composition.Primitives.ImportDefinition\n      description: The import definition to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified import definition represents an export factory; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  id: IsImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: IsImportingParameter(ImportDefinition)\n  nameWithType: ReflectionModelServices.IsImportingParameter(ImportDefinition)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter(ImportDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Determines whether an import definition represents a member or a parameter.\n  syntax:\n    content: public static bool IsImportingParameter (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);\n    parameters:\n    - id: importDefinition\n      type: System.ComponentModel.Composition.Primitives.ImportDefinition\n      description: The import definition to examine.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the import definition represents a parameter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>importDefinition</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)\n  id: TryMakeGenericPartDefinition(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: TryMakeGenericPartDefinition(ComposablePartDefinition,IEnumerable<Type>,ComposablePartDefinition)\n  nameWithType: ReflectionModelServices.TryMakeGenericPartDefinition(ComposablePartDefinition,IEnumerable<Type>,ComposablePartDefinition)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition(ComposablePartDefinition,IEnumerable<Type>,ComposablePartDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Indicates whether a generic part definition can be specialized with the provided parameters.\n  syntax:\n    content: public static bool TryMakeGenericPartDefinition (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, System.Collections.Generic.IEnumerable<Type> genericParameters, out System.ComponentModel.Composition.Primitives.ComposablePartDefinition specialization);\n    parameters:\n    - id: partDefinition\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The part definition.\n    - id: genericParameters\n      type: System.Collections.Generic.IEnumerable{System.Type}\n      description: A collection of types to specify the generic parameters.\n    - id: specialization\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: When this method returns, contains the specialized part definition. This parameter is treated as uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specialization succeeds; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreateExportDefinition(LazyMemberInfo,String,Lazy<IDictionary<String,Object>>,ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateExportDefinition(LazyMemberInfo,String,Lazy<IDictionary<String,Object>>,ICompositionElement)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition(LazyMemberInfo,String,Lazy<IDictionary<String,Object>>,ICompositionElement)\n- uid: System.ComponentModel.Composition.Primitives.ExportDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ExportDefinition\n  nameWithType: ExportDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ExportDefinition\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  parent: System.ComponentModel.Composition.ReflectionModel\n  isExternal: false\n  name: LazyMemberInfo\n  nameWithType: LazyMemberInfo\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}}\n  parent: System\n  isExternal: true\n  name: Lazy<IDictionary<String,Object>>\n  nameWithType: Lazy<IDictionary<String,Object>>\n  fullName: System.Lazy<System.Collections.Generic.IDictionary<System.String,System.Object>>\n  spec.csharp:\n  - uid: System.Lazy`1\n    name: Lazy\n    nameWithType: Lazy\n    fullName: Lazy<System.Collections.Generic.IDictionary<System.String,System.Object>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.String,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Primitives.ICompositionElement\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ICompositionElement\n  nameWithType: ICompositionElement\n  fullName: System.ComponentModel.Composition.Primitives.ICompositionElement\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreateImportDefinition(Lazy<ParameterInfo>,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,CreationPolicy,ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(Lazy<ParameterInfo>,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,CreationPolicy,ICompositionElement)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(Lazy<ParameterInfo>,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,CreationPolicy,ICompositionElement)\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ContractBasedImportDefinition\n  nameWithType: ContractBasedImportDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n- uid: System.Lazy{System.Reflection.ParameterInfo}\n  parent: System\n  isExternal: true\n  name: Lazy<ParameterInfo>\n  nameWithType: Lazy<ParameterInfo>\n  fullName: System.Lazy<System.Reflection.ParameterInfo>\n  spec.csharp:\n  - uid: System.Lazy`1\n    name: Lazy\n    nameWithType: Lazy\n    fullName: Lazy<System.Reflection.ParameterInfo>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.ParameterInfo\n    name: ParameterInfo\n    nameWithType: ParameterInfo\n    fullName: ParameterInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<KeyValuePair<String,Type>>\n  nameWithType: IEnumerable<KeyValuePair<String,Type>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Type>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Type>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.String,System.Type>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Primitives.ImportCardinality\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ImportCardinality\n  nameWithType: ImportCardinality\n  fullName: System.ComponentModel.Composition.Primitives.ImportCardinality\n- uid: System.ComponentModel.Composition.CreationPolicy\n  parent: System.ComponentModel.Composition\n  isExternal: false\n  name: CreationPolicy\n  nameWithType: CreationPolicy\n  fullName: System.ComponentModel.Composition.CreationPolicy\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreateImportDefinition(LazyMemberInfo,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,CreationPolicy,ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(LazyMemberInfo,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,CreationPolicy,ICompositionElement)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(LazyMemberInfo,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,CreationPolicy,ICompositionElement)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreateImportDefinition(Lazy<ParameterInfo>,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,CreationPolicy,IDictionary<String,Object>,Boolean,ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(Lazy<ParameterInfo>,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,CreationPolicy,IDictionary<String,Object>,Boolean,ICompositionElement)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(Lazy<ParameterInfo>,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,CreationPolicy,IDictionary<String,Object>,Boolean,ICompositionElement)\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.String,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreateImportDefinition(LazyMemberInfo,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,CreationPolicy,IDictionary<String,Object>,Boolean,ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(LazyMemberInfo,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,CreationPolicy,IDictionary<String,Object>,Boolean,ICompositionElement)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(LazyMemberInfo,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,CreationPolicy,IDictionary<String,Object>,Boolean,ICompositionElement)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreateImportDefinition(LazyMemberInfo,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>,Boolean,ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(LazyMemberInfo,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>,Boolean,ICompositionElement)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(LazyMemberInfo,String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>,Boolean,ICompositionElement)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition(System.Lazy{System.Type},System.Boolean,System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}},System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}},System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreatePartDefinition(Lazy<Type>,Boolean,Lazy<IEnumerable<ImportDefinition>>,Lazy<IEnumerable<ExportDefinition>>,Lazy<IDictionary<String,Object>>,ICompositionElement)\n  nameWithType: ReflectionModelServices.CreatePartDefinition(Lazy<Type>,Boolean,Lazy<IEnumerable<ImportDefinition>>,Lazy<IEnumerable<ExportDefinition>>,Lazy<IDictionary<String,Object>>,ICompositionElement)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition(Lazy<Type>,Boolean,Lazy<IEnumerable<ImportDefinition>>,Lazy<IEnumerable<ExportDefinition>>,Lazy<IDictionary<String,Object>>,ICompositionElement)\n- uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ComposablePartDefinition\n  nameWithType: ComposablePartDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n- uid: System.Lazy{System.Type}\n  parent: System\n  isExternal: true\n  name: Lazy<Type>\n  nameWithType: Lazy<Type>\n  fullName: System.Lazy<System.Type>\n  spec.csharp:\n  - uid: System.Lazy`1\n    name: Lazy\n    nameWithType: Lazy\n    fullName: Lazy<System.Type>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}}\n  parent: System\n  isExternal: true\n  name: Lazy<IEnumerable<ImportDefinition>>\n  nameWithType: Lazy<IEnumerable<ImportDefinition>>\n  fullName: System.Lazy<System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ImportDefinition>>\n  spec.csharp:\n  - uid: System.Lazy`1\n    name: Lazy\n    nameWithType: Lazy\n    fullName: Lazy<System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ImportDefinition>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.ComponentModel.Composition.Primitives.ImportDefinition>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Primitives.ImportDefinition\n    name: ImportDefinition\n    nameWithType: ImportDefinition\n    fullName: ImportDefinition\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}}\n  parent: System\n  isExternal: true\n  name: Lazy<IEnumerable<ExportDefinition>>\n  nameWithType: Lazy<IEnumerable<ExportDefinition>>\n  fullName: System.Lazy<System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ExportDefinition>>\n  spec.csharp:\n  - uid: System.Lazy`1\n    name: Lazy\n    nameWithType: Lazy\n    fullName: Lazy<System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ExportDefinition>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.ComponentModel.Composition.Primitives.ExportDefinition>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Primitives.ExportDefinition\n    name: ExportDefinition\n    nameWithType: ExportDefinition\n    fullName: ExportDefinition\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetExportFactoryProductImportDefinition(ImportDefinition)\n  nameWithType: ReflectionModelServices.GetExportFactoryProductImportDefinition(ImportDefinition)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition(ImportDefinition)\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ImportDefinition\n  nameWithType: ImportDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember(System.ComponentModel.Composition.Primitives.ExportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetExportingMember(ExportDefinition)\n  nameWithType: ReflectionModelServices.GetExportingMember(ExportDefinition)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember(ExportDefinition)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetImportingMember(ImportDefinition)\n  nameWithType: ReflectionModelServices.GetImportingMember(ImportDefinition)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember(ImportDefinition)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetImportingParameter(ImportDefinition)\n  nameWithType: ReflectionModelServices.GetImportingParameter(ImportDefinition)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter(ImportDefinition)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetPartType(ComposablePartDefinition)\n  nameWithType: ReflectionModelServices.GetPartType(ComposablePartDefinition)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType(ComposablePartDefinition)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: IsDisposalRequired(ComposablePartDefinition)\n  nameWithType: ReflectionModelServices.IsDisposalRequired(ComposablePartDefinition)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired(ComposablePartDefinition)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: IsExportFactoryImportDefinition(ImportDefinition)\n  nameWithType: ReflectionModelServices.IsExportFactoryImportDefinition(ImportDefinition)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition(ImportDefinition)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: IsImportingParameter(ImportDefinition)\n  nameWithType: ReflectionModelServices.IsImportingParameter(ImportDefinition)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter(ImportDefinition)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: TryMakeGenericPartDefinition(ComposablePartDefinition,IEnumerable<Type>,ComposablePartDefinition)\n  nameWithType: ReflectionModelServices.TryMakeGenericPartDefinition(ComposablePartDefinition,IEnumerable<Type>,ComposablePartDefinition)\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition(ComposablePartDefinition,IEnumerable<Type>,ComposablePartDefinition)\n- uid: System.Collections.Generic.IEnumerable{System.Type}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Type>\n  nameWithType: IEnumerable<Type>\n  fullName: System.Collections.Generic.IEnumerable<System.Type>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Type>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreateExportDefinition\n  nameWithType: ReflectionModelServices.CreateExportDefinition\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreateImportDefinition\n  nameWithType: ReflectionModelServices.CreateImportDefinition\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreatePartDefinition\n  nameWithType: ReflectionModelServices.CreatePartDefinition\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetExportFactoryProductImportDefinition\n  nameWithType: ReflectionModelServices.GetExportFactoryProductImportDefinition\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetExportingMember\n  nameWithType: ReflectionModelServices.GetExportingMember\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetImportingMember\n  nameWithType: ReflectionModelServices.GetImportingMember\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetImportingParameter\n  nameWithType: ReflectionModelServices.GetImportingParameter\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetPartType\n  nameWithType: ReflectionModelServices.GetPartType\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: IsDisposalRequired\n  nameWithType: ReflectionModelServices.IsDisposalRequired\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: IsExportFactoryImportDefinition\n  nameWithType: ReflectionModelServices.IsExportFactoryImportDefinition\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: IsImportingParameter\n  nameWithType: ReflectionModelServices.IsImportingParameter\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: TryMakeGenericPartDefinition\n  nameWithType: ReflectionModelServices.TryMakeGenericPartDefinition\n"}