{"nodes":[{"pos":[498,601],"content":"Specifies how to read XML data and a relational schema into a <bpt id=\"p1\">&lt;xref href=\"System.Data.DataSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Specifies how to read XML data and a relational schema into a <xref href=\"System.Data.DataSet\"></xref>."},{"pos":[614,835],"content":"Use the members of this enumeration when setting the `ReadMode` parameter of the <xref:System.Data.DataSet.ReadXml%2A> method.      > [!NOTE] >  `Auto` mode may be slower than setting XmlReadMode to an explicit option.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the members of this enumeration when setting the <ph id=\"ph1\">`ReadMode`</ph> parameter of the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method.","pos":[0,126],"source":"Use the members of this enumeration when setting the `ReadMode` parameter of the <xref:System.Data.DataSet.ReadXml%2A> method."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">`Auto`</ph> mode may be slower than setting XmlReadMode to an explicit option.","pos":[132,218],"source":"      > [!NOTE] >  `Auto` mode may be slower than setting XmlReadMode to an explicit option."}]},{"pos":[1206,1214],"content":"Default.","needQuote":true,"needEscape":true,"nodes":[{"content":"Default.","pos":[0,8]}]},{"pos":[1227,1638],"content":"Performs the most appropriate of these actions:       If the data is a DiffGram, sets `XmlReadMode` to `DiffGram`.       -or-       If the dataset already has a schema, or the document contains an in-line schema, sets `XmlReadMode` to `ReadSchema`.       -or-       If the dataset does not already have a schema and the document does not contain an in-line schema, sets `XmlReadMode` to `InferSchema`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Performs the most appropriate of these actions:       If the data is a DiffGram, sets <ph id=\"ph1\">`XmlReadMode`</ph> to <ph id=\"ph2\">`DiffGram`</ph>.","pos":[0,114],"source":"Performs the most appropriate of these actions:       If the data is a DiffGram, sets `XmlReadMode` to `DiffGram`."},{"content":"-or-       If the dataset already has a schema, or the document contains an in-line schema, sets <ph id=\"ph1\">`XmlReadMode`</ph> to <ph id=\"ph2\">`ReadSchema`</ph>.","pos":[121,248],"source":"       -or-       If the dataset already has a schema, or the document contains an in-line schema, sets `XmlReadMode` to `ReadSchema`."},{"content":"-or-       If the dataset does not already have a schema and the document does not contain an in-line schema, sets <ph id=\"ph1\">`XmlReadMode`</ph> to <ph id=\"ph2\">`InferSchema`</ph>.","pos":[255,401],"source":"       -or-       If the dataset does not already have a schema and the document does not contain an in-line schema, sets `XmlReadMode` to `InferSchema`."}]},{"pos":[1735,1747],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2076,2538],"content":"Reads a DiffGram, applying changes from the DiffGram to the <xref href=\"System.Data.DataSet\"></xref>. The semantics are identical to those of a <xref:System.Data.DataSet.Merge*> operation. As with the <xref:System.Data.DataSet.Merge*> operation, <xref:System.Data.DataRow.RowState*> values are preserved. Input to <xref:System.Data.DataSet.ReadXml*> with DiffGrams should only be obtained using the output from <xref:System.Data.DataSet.WriteXml*> as a DiffGram.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads a DiffGram, applying changes from the DiffGram to the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,101],"source":"Reads a DiffGram, applying changes from the DiffGram to the <xref href=\"System.Data.DataSet\"></xref>."},{"content":"The semantics are identical to those of a &lt;xref:System.Data.DataSet.Merge<bpt id=\"p1\">*</bpt>&gt; operation. As with the &lt;xref:System.Data.DataSet.Merge<ept id=\"p1\">*</ept>&gt; operation, &lt;xref:System.Data.DataRow.RowState<bpt id=\"p2\">*</bpt>&gt; values are preserved. Input to &lt;xref:System.Data.DataSet.ReadXml<ept id=\"p2\">*</ept>&gt; with DiffGrams should only be obtained using the output from &lt;xref:System.Data.DataSet.WriteXml*&gt; as a DiffGram.","pos":[102,462],"source":" The semantics are identical to those of a <xref:System.Data.DataSet.Merge*> operation. As with the <xref:System.Data.DataSet.Merge*> operation, <xref:System.Data.DataRow.RowState*> values are preserved. Input to <xref:System.Data.DataSet.ReadXml*> with DiffGrams should only be obtained using the output from <xref:System.Data.DataSet.WriteXml*> as a DiffGram."}]},{"pos":[2550,2792],"content":"The target <xref:System.Data.DataSet> must have the same schema as the <xref:System.Data.DataSet> on which <xref:System.Data.DataSet.WriteXml%2A> as DiffGram is called. Otherwise the DiffGram merge operation fails, and an exception is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The target <xref:System.Data.DataSet> must have the same schema as the <xref:System.Data.DataSet> on which <xref:System.Data.DataSet.WriteXml%2A> as DiffGram is called. Otherwise the DiffGram merge operation fails, and an exception is thrown.","pos":[0,242],"nodes":[{"content":"The target &lt;xref:System.Data.DataSet&gt; must have the same schema as the &lt;xref:System.Data.DataSet&gt; on which &lt;xref:System.Data.DataSet.WriteXml%2A&gt; as DiffGram is called.","pos":[0,168],"source":"The target <xref:System.Data.DataSet> must have the same schema as the <xref:System.Data.DataSet> on which <xref:System.Data.DataSet.WriteXml%2A> as DiffGram is called."},{"content":"Otherwise the DiffGram merge operation fails, and an exception is thrown.","pos":[169,242]}]}]},{"pos":[2892,2904],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3233,3491],"content":"Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server. When XmlReadMode is set to <xref uid=\"langword_csharp_Fragment\" name=\"Fragment\" href=\"\"></xref>, the default namespace is read as the inline schema.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server.","pos":[0,109]},{"content":"When XmlReadMode is set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Fragment\" name=\"Fragment\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the default namespace is read as the inline schema.","pos":[110,258],"source":" When XmlReadMode is set to <xref uid=\"langword_csharp_Fragment\" name=\"Fragment\" href=\"\"></xref>, the default namespace is read as the inline schema."}]},{"pos":[3591,3603],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3952,4428],"content":"Ignores any inline schema and reads data into the existing <xref href=\"System.Data.DataSet\"></xref> schema. If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the <xref href=\"System.Data.DataSet\"></xref>). If the data is a DiffGram, <xref uid=\"langword_csharp_IgnoreSchema\" name=\"IgnoreSchema\" href=\"\"></xref> has the same functionality as <xref uid=\"langword_csharp_DiffGram\" name=\"DiffGram\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Ignores any inline schema and reads data into the existing <bpt id=\"p1\">&lt;xref href=\"System.Data.DataSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> schema.","pos":[0,107],"source":"Ignores any inline schema and reads data into the existing <xref href=\"System.Data.DataSet\"></xref> schema."},{"content":"If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>).","pos":[108,272],"source":" If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the <xref href=\"System.Data.DataSet\"></xref>)."},{"content":"If the data is a DiffGram, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_IgnoreSchema\" name=\"IgnoreSchema\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has the same functionality as <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_DiffGram\" name=\"DiffGram\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[273,476],"source":" If the data is a DiffGram, <xref uid=\"langword_csharp_IgnoreSchema\" name=\"IgnoreSchema\" href=\"\"></xref> has the same functionality as <xref uid=\"langword_csharp_DiffGram\" name=\"DiffGram\" href=\"\"></xref>."}]},{"pos":[4532,4544],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4888,5285],"content":"Ignores any inline schema, infers schema from the data and loads the data. If the <xref href=\"System.Data.DataSet\"></xref> already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.","needQuote":true,"needEscape":true,"nodes":[{"content":"Ignores any inline schema, infers schema from the data and loads the data.","pos":[0,74]},{"content":"If the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables.","pos":[75,239],"source":" If the <xref href=\"System.Data.DataSet\"></xref> already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables."},{"content":"An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.","pos":[240,397]}]},{"pos":[5388,5400],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5769,6275],"content":"Ignores any inline schema, infers a strongly typed schema from the data, and loads the data. If the type cannot be inferred from the data, it is interpreted as string data. If the <xref href=\"System.Data.DataSet\"></xref> already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.","needQuote":true,"needEscape":true,"nodes":[{"content":"Ignores any inline schema, infers a strongly typed schema from the data, and loads the data.","pos":[0,92]},{"content":"If the type cannot be inferred from the data, it is interpreted as string data.","pos":[93,172]},{"content":"If the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables.","pos":[173,348],"source":" If the <xref href=\"System.Data.DataSet\"></xref> already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables."},{"content":"An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.","pos":[349,506]}]},{"pos":[6383,6395],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6734,7014],"content":"Reads any inline schema and loads the data. If the <xref href=\"System.Data.DataSet\"></xref> already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the <xref href=\"System.Data.DataSet\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads any inline schema and loads the data.","pos":[0,43]},{"content":"If the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the <bpt id=\"p2\">&lt;xref href=\"System.Data.DataSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[44,280],"source":" If the <xref href=\"System.Data.DataSet\"></xref> already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the <xref href=\"System.Data.DataSet\"></xref>."}]},{"pos":[7116,7128],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.XmlReadMode\n  id: XmlReadMode\n  children:\n  - System.Data.XmlReadMode.Auto\n  - System.Data.XmlReadMode.DiffGram\n  - System.Data.XmlReadMode.Fragment\n  - System.Data.XmlReadMode.IgnoreSchema\n  - System.Data.XmlReadMode.InferSchema\n  - System.Data.XmlReadMode.InferTypedSchema\n  - System.Data.XmlReadMode.ReadSchema\n  langs:\n  - csharp\n  name: XmlReadMode\n  nameWithType: XmlReadMode\n  fullName: System.Data.XmlReadMode\n  type: Enum\n  summary: Specifies how to read XML data and a relational schema into a <xref href=\"System.Data.DataSet\"></xref>.\n  remarks: \"Use the members of this enumeration when setting the `ReadMode` parameter of the <xref:System.Data.DataSet.ReadXml%2A> method.  \\n  \\n> [!NOTE]\\n>  `Auto` mode may be slower than setting XmlReadMode to an explicit option.\"\n  syntax:\n    content: public enum XmlReadMode\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Data.XmlReadMode.Auto\n  id: Auto\n  parent: System.Data.XmlReadMode\n  langs:\n  - csharp\n  name: Auto\n  nameWithType: XmlReadMode.Auto\n  fullName: System.Data.XmlReadMode.Auto\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Default.\n  remarks: \"Performs the most appropriate of these actions:  \\n  \\n If the data is a DiffGram, sets `XmlReadMode` to `DiffGram`.  \\n  \\n -or-  \\n  \\n If the dataset already has a schema, or the document contains an in-line schema, sets `XmlReadMode` to `ReadSchema`.  \\n  \\n -or-  \\n  \\n If the dataset does not already have a schema and the document does not contain an in-line schema, sets `XmlReadMode` to `InferSchema`.\"\n  syntax:\n    content: Auto\n    return:\n      type: System.Data.XmlReadMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.XmlReadMode.DiffGram\n  id: DiffGram\n  parent: System.Data.XmlReadMode\n  langs:\n  - csharp\n  name: DiffGram\n  nameWithType: XmlReadMode.DiffGram\n  fullName: System.Data.XmlReadMode.DiffGram\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Reads a DiffGram, applying changes from the DiffGram to the <xref href=\"System.Data.DataSet\"></xref>. The semantics are identical to those of a <xref:System.Data.DataSet.Merge*> operation. As with the <xref:System.Data.DataSet.Merge*> operation, <xref:System.Data.DataRow.RowState*> values are preserved. Input to <xref:System.Data.DataSet.ReadXml*> with DiffGrams should only be obtained using the output from <xref:System.Data.DataSet.WriteXml*> as a DiffGram.\n  remarks: The target <xref:System.Data.DataSet> must have the same schema as the <xref:System.Data.DataSet> on which <xref:System.Data.DataSet.WriteXml%2A> as DiffGram is called. Otherwise the DiffGram merge operation fails, and an exception is thrown.\n  syntax:\n    content: DiffGram\n    return:\n      type: System.Data.XmlReadMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.XmlReadMode.Fragment\n  id: Fragment\n  parent: System.Data.XmlReadMode\n  langs:\n  - csharp\n  name: Fragment\n  nameWithType: XmlReadMode.Fragment\n  fullName: System.Data.XmlReadMode.Fragment\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server. When XmlReadMode is set to <xref uid=\"langword_csharp_Fragment\" name=\"Fragment\" href=\"\"></xref>, the default namespace is read as the inline schema.\n  syntax:\n    content: Fragment\n    return:\n      type: System.Data.XmlReadMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.XmlReadMode.IgnoreSchema\n  id: IgnoreSchema\n  parent: System.Data.XmlReadMode\n  langs:\n  - csharp\n  name: IgnoreSchema\n  nameWithType: XmlReadMode.IgnoreSchema\n  fullName: System.Data.XmlReadMode.IgnoreSchema\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Ignores any inline schema and reads data into the existing <xref href=\"System.Data.DataSet\"></xref> schema. If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the <xref href=\"System.Data.DataSet\"></xref>). If the data is a DiffGram, <xref uid=\"langword_csharp_IgnoreSchema\" name=\"IgnoreSchema\" href=\"\"></xref> has the same functionality as <xref uid=\"langword_csharp_DiffGram\" name=\"DiffGram\" href=\"\"></xref>.\n  syntax:\n    content: IgnoreSchema\n    return:\n      type: System.Data.XmlReadMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.XmlReadMode.InferSchema\n  id: InferSchema\n  parent: System.Data.XmlReadMode\n  langs:\n  - csharp\n  name: InferSchema\n  nameWithType: XmlReadMode.InferSchema\n  fullName: System.Data.XmlReadMode.InferSchema\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Ignores any inline schema, infers schema from the data and loads the data. If the <xref href=\"System.Data.DataSet\"></xref> already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.\n  syntax:\n    content: InferSchema\n    return:\n      type: System.Data.XmlReadMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.XmlReadMode.InferTypedSchema\n  id: InferTypedSchema\n  parent: System.Data.XmlReadMode\n  langs:\n  - csharp\n  name: InferTypedSchema\n  nameWithType: XmlReadMode.InferTypedSchema\n  fullName: System.Data.XmlReadMode.InferTypedSchema\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Ignores any inline schema, infers a strongly typed schema from the data, and loads the data. If the type cannot be inferred from the data, it is interpreted as string data. If the <xref href=\"System.Data.DataSet\"></xref> already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.\n  syntax:\n    content: InferTypedSchema\n    return:\n      type: System.Data.XmlReadMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.XmlReadMode.ReadSchema\n  id: ReadSchema\n  parent: System.Data.XmlReadMode\n  langs:\n  - csharp\n  name: ReadSchema\n  nameWithType: XmlReadMode.ReadSchema\n  fullName: System.Data.XmlReadMode.ReadSchema\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Reads any inline schema and loads the data. If the <xref href=\"System.Data.DataSet\"></xref> already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the <xref href=\"System.Data.DataSet\"></xref>.\n  syntax:\n    content: ReadSchema\n    return:\n      type: System.Data.XmlReadMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Data.XmlReadMode.Auto\n  parent: System.Data.XmlReadMode\n  isExternal: false\n  name: Auto\n  nameWithType: XmlReadMode.Auto\n  fullName: System.Data.XmlReadMode.Auto\n- uid: System.Data.XmlReadMode\n  parent: System.Data\n  isExternal: false\n  name: XmlReadMode\n  nameWithType: XmlReadMode\n  fullName: System.Data.XmlReadMode\n- uid: System.Data.XmlReadMode.DiffGram\n  parent: System.Data.XmlReadMode\n  isExternal: false\n  name: DiffGram\n  nameWithType: XmlReadMode.DiffGram\n  fullName: System.Data.XmlReadMode.DiffGram\n- uid: System.Data.XmlReadMode.Fragment\n  parent: System.Data.XmlReadMode\n  isExternal: false\n  name: Fragment\n  nameWithType: XmlReadMode.Fragment\n  fullName: System.Data.XmlReadMode.Fragment\n- uid: System.Data.XmlReadMode.IgnoreSchema\n  parent: System.Data.XmlReadMode\n  isExternal: false\n  name: IgnoreSchema\n  nameWithType: XmlReadMode.IgnoreSchema\n  fullName: System.Data.XmlReadMode.IgnoreSchema\n- uid: System.Data.XmlReadMode.InferSchema\n  parent: System.Data.XmlReadMode\n  isExternal: false\n  name: InferSchema\n  nameWithType: XmlReadMode.InferSchema\n  fullName: System.Data.XmlReadMode.InferSchema\n- uid: System.Data.XmlReadMode.InferTypedSchema\n  parent: System.Data.XmlReadMode\n  isExternal: false\n  name: InferTypedSchema\n  nameWithType: XmlReadMode.InferTypedSchema\n  fullName: System.Data.XmlReadMode.InferTypedSchema\n- uid: System.Data.XmlReadMode.ReadSchema\n  parent: System.Data.XmlReadMode\n  isExternal: false\n  name: ReadSchema\n  nameWithType: XmlReadMode.ReadSchema\n  fullName: System.Data.XmlReadMode.ReadSchema\n"}