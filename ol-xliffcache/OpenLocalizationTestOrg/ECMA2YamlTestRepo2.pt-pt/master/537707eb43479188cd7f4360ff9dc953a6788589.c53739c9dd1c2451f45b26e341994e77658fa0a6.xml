{"nodes":[{"pos":[1632,1707],"content":"Manages states and the logic for transitioning between states for controls.","needQuote":true,"needEscape":true,"nodes":[{"content":"Manages states and the logic for transitioning between states for controls.","pos":[0,75]}]},{"pos":[1720,5780],"content":"The VisualStateManager enables you to specify states for a control, the appearance of a control when it is in a certain state, and when a control changes states. For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed. Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`\"Pressed\"`) and when it is not (`\"Normal\"`). The appearance of a control when it is in a state is defined by a <xref:System.Windows.VisualState>. A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in that state. You add visual states to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control. Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects that are mutually exclusive. That is, the control is always in exactly one state of in each <xref:System.Windows.VisualStateGroup>.       The VisualStateManager also enables you to specify when a control enters a specific state. The method that you should call to change states depends on your scenario. If you create a control that uses the VisualStateManager in its <xref:System.Windows.Controls.ControlTemplate>, call the <xref:System.Windows.VisualStateManager.GoToState%2A> method. For more information about how to create controls that use the VisualStateManager, see [Creating a Control That Has a Customizable Appearance](~/add/includes/ajax-current-ext-md.md). If you use the VisualStateManager outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a VisualStateManager in a <xref:System.Windows.Controls.UserControl> or in a single element), call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method. In either case, the VisualStateManager performs the logic that is required to appropriately start and stop the storyboards that are associated with the involved state. For example, suppose that a control defines the states, `State1` and `State2`, each of which has a storyboard associated with it. If the control is in `State1` and you pass `State2` to <xref:System.Windows.VisualStateManager.GoToState%2A> or <xref:System.Windows.VisualStateManager.GoToElementState%2A>, the VisualStateManager starts the storyboard in `State2` and stops the storyboard in `State1`.       Controls that are included with [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] use the VisualStateManager to change visual states. When you create a <xref:System.Windows.Controls.ControlTemplate> for a control that is included with [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)], you can add <xref:System.Windows.VisualState> objects to the control's <xref:System.Windows.Controls.ControlTemplate> to specify the control's appearance in a certain state. To find the names of the visual states for the controls that are included with [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)], see [Control Styles and Templates](~/add/includes/ajax-current-ext-md.md). The control's logic handles transitioning between states, so you do not need to do anything other than define the <xref:System.Windows.VisualState> objects in the new <xref:System.Windows.Controls.ControlTemplate>. For more information about how to create control templates for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md).       If you want to implement your own logic for transitioning between states, you must inherit from VisualStateManager, override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method, and set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=fullName> attached property on the control that uses the custom logic.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The VisualStateManager enables you to specify states for a control, the appearance of a control when it is in a certain state, and when a control changes states.","pos":[0,161]},{"content":"For example, a &lt;xref:System.Windows.Controls.Button&gt; might have a slightly different appearance when it is pressed than when it is not pressed.","pos":[162,305],"source":" For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed."},{"content":"Two states that the &lt;xref:System.Windows.Controls.Button&gt; defines correspond to when it is pressed (<ph id=\"ph1\">`\"Pressed\"`</ph>) and when it is not (<ph id=\"ph2\">`\"Normal\"`</ph>).","pos":[306,451],"source":" Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`\"Pressed\"`) and when it is not (`\"Normal\"`)."},{"content":"The appearance of a control when it is in a state is defined by a &lt;xref:System.Windows.VisualState&gt;.","pos":[452,552],"source":" The appearance of a control when it is in a state is defined by a <xref:System.Windows.VisualState>."},{"content":"A &lt;xref:System.Windows.VisualState&gt; contains a collection of &lt;xref:System.Windows.Media.Animation.Storyboard&gt; objects that specify how the control's appearance changes when the control is in that state.","pos":[553,755],"source":" A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in that state."},{"content":"You add visual states to a control by setting the <ph id=\"ph1\">`VisualStateManager.VisualStateGroups`</ph> attached property on the control.","pos":[756,878],"source":" You add visual states to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control."},{"content":"Each &lt;xref:System.Windows.VisualStateGroup&gt; contains a collection of &lt;xref:System.Windows.VisualState&gt; objects that are mutually exclusive.","pos":[879,1018],"source":" Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects that are mutually exclusive."},{"content":"That is, the control is always in exactly one state of in each &lt;xref:System.Windows.VisualStateGroup&gt;.","pos":[1019,1121],"source":" That is, the control is always in exactly one state of in each <xref:System.Windows.VisualStateGroup>."},{"content":"The VisualStateManager also enables you to specify when a control enters a specific state.","pos":[1128,1218]},{"content":"The method that you should call to change states depends on your scenario.","pos":[1219,1293]},{"content":"If you create a control that uses the VisualStateManager in its &lt;xref:System.Windows.Controls.ControlTemplate&gt;, call the &lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt; method.","pos":[1294,1476],"source":" If you create a control that uses the VisualStateManager in its <xref:System.Windows.Controls.ControlTemplate>, call the <xref:System.Windows.VisualStateManager.GoToState%2A> method."},{"content":"For more information about how to create controls that use the VisualStateManager, see <bpt id=\"p1\">[</bpt>Creating a Control That Has a Customizable Appearance<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1477,1659],"source":" For more information about how to create controls that use the VisualStateManager, see [Creating a Control That Has a Customizable Appearance](~/add/includes/ajax-current-ext-md.md)."},{"content":"If you use the VisualStateManager outside of a &lt;xref:System.Windows.Controls.ControlTemplate&gt; (for example, if you use a VisualStateManager in a &lt;xref:System.Windows.Controls.UserControl&gt; or in a single element), call the &lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt; method.","pos":[1660,1950],"source":" If you use the VisualStateManager outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a VisualStateManager in a <xref:System.Windows.Controls.UserControl> or in a single element), call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method."},{"content":"In either case, the VisualStateManager performs the logic that is required to appropriately start and stop the storyboards that are associated with the involved state.","pos":[1951,2118]},{"content":"For example, suppose that a control defines the states, <ph id=\"ph1\">`State1`</ph> and <ph id=\"ph2\">`State2`</ph>, each of which has a storyboard associated with it.","pos":[2119,2248],"source":" For example, suppose that a control defines the states, `State1` and `State2`, each of which has a storyboard associated with it."},{"content":"If the control is in <ph id=\"ph1\">`State1`</ph> and you pass <ph id=\"ph2\">`State2`</ph> to &lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt; or &lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;, the VisualStateManager starts the storyboard in <ph id=\"ph3\">`State2`</ph> and stops the storyboard in <ph id=\"ph4\">`State1`</ph>.","pos":[2249,2517],"source":" If the control is in `State1` and you pass `State2` to <xref:System.Windows.VisualStateManager.GoToState%2A> or <xref:System.Windows.VisualStateManager.GoToElementState%2A>, the VisualStateManager starts the storyboard in `State2` and stops the storyboard in `State1`."},{"content":"Controls that are included with <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> use the VisualStateManager to change visual states.","pos":[2524,2676],"source":"       Controls that are included with [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] use the VisualStateManager to change visual states."},{"content":"When you create a &lt;xref:System.Windows.Controls.ControlTemplate&gt; for a control that is included with <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>, you can add &lt;xref:System.Windows.VisualState&gt; objects to the control's &lt;xref:System.Windows.Controls.ControlTemplate&gt; to specify the control's appearance in a certain state.","pos":[2677,3028],"source":" When you create a <xref:System.Windows.Controls.ControlTemplate> for a control that is included with [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)], you can add <xref:System.Windows.VisualState> objects to the control's <xref:System.Windows.Controls.ControlTemplate> to specify the control's appearance in a certain state."},{"content":"To find the names of the visual states for the controls that are included with <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>Control Styles and Templates<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[3029,3259],"source":" To find the names of the visual states for the controls that are included with [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)], see [Control Styles and Templates](~/add/includes/ajax-current-ext-md.md)."},{"content":"The control's logic handles transitioning between states, so you do not need to do anything other than define the &lt;xref:System.Windows.VisualState&gt; objects in the new &lt;xref:System.Windows.Controls.ControlTemplate&gt;.","pos":[3260,3474],"source":" The control's logic handles transitioning between states, so you do not need to do anything other than define the <xref:System.Windows.VisualState> objects in the new <xref:System.Windows.Controls.ControlTemplate>."},{"content":"For more information about how to create control templates for existing controls, see <bpt id=\"p1\">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[3475,3682],"source":" For more information about how to create control templates for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md)."},{"content":"If you want to implement your own logic for transitioning between states, you must inherit from VisualStateManager, override the &lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt; method, and set the &lt;xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=fullName&gt; attached property on the control that uses the custom logic.","pos":[3689,4050],"source":"       If you want to implement your own logic for transitioning between states, you must inherit from VisualStateManager, override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method, and set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=fullName> attached property on the control that uses the custom logic."}]},{"pos":[9794,9889],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualStateManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.VisualStateManager\"></xref> class."},{"pos":[10513,10615],"content":"Identifies the <xref:System.Windows.VisualStateManager.CustomVisualStateManager*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.VisualStateManager.CustomVisualStateManager*&gt; dependency property.","pos":[0,102],"source":"Identifies the <xref:System.Windows.VisualStateManager.CustomVisualStateManager*> dependency property."}]},{"pos":[10807,10819],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11414,11508],"content":"Gets the <xref:System.Windows.VisualStateManager.CustomVisualStateManager*> attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Windows.VisualStateManager.CustomVisualStateManager*&gt; attached property.","pos":[0,94],"source":"Gets the <xref:System.Windows.VisualStateManager.CustomVisualStateManager*> attached property."}]},{"pos":[11740,11853],"content":"The element to get the <xref:System.Windows.VisualStateManager.CustomVisualStateManager*> attached property from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element to get the &lt;xref:System.Windows.VisualStateManager.CustomVisualStateManager*&gt; attached property from.","pos":[0,113],"source":"The element to get the <xref:System.Windows.VisualStateManager.CustomVisualStateManager*> attached property from."}]},{"pos":[11931,12005],"content":"The visual state manager that transitions between the states of a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The visual state manager that transitions between the states of a control.","pos":[0,74]}]},{"pos":[12640,12760],"content":"Gets the &lt;xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=fullName&gt; attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached property.","pos":[0,120],"source":"Gets the &lt;xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=fullName&gt; attached property."}]},{"pos":[12976,13115],"content":"The element to get the &lt;xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=fullName&gt; attached property from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element to get the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached property from.","pos":[0,139],"source":"The element to get the &lt;xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=fullName&gt; attached property from."}]},{"pos":[13184,13308],"content":"The collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualStateGroup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that is associated with the specified object.","needQuote":true,"needEscape":true,"source":"The collection of <xref href=\"System.Windows.VisualStateGroup\"></xref> objects that is associated with the specified object."},{"pos":[14019,14169],"content":"Transitions the element between two states. Use this method to transition states that are defined by an application, rather than defined by a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Transitions the element between two states. Use this method to transition states that are defined by an application, rather than defined by a control.","pos":[0,150],"nodes":[{"content":"Transitions the element between two states.","pos":[0,43]},{"content":"Use this method to transition states that are defined by an application, rather than defined by a control.","pos":[44,150]}]}]},{"pos":[14181,14666],"content":"Call the GoToElementState method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.DataTemplate> or <xref:System.Windows.Window>). Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Call the GoToElementState method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.DataTemplate> or <xref:System.Windows.Window>). Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.","pos":[0,485],"nodes":[{"content":"Call the GoToElementState method to change states on an element outside of a &lt;xref:System.Windows.Controls.ControlTemplate&gt; (for example, if you use a &lt;xref:System.Windows.VisualStateManager&gt; in a &lt;xref:System.Windows.DataTemplate&gt; or &lt;xref:System.Windows.Window&gt;).","pos":[0,265],"source":"Call the GoToElementState method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.DataTemplate> or <xref:System.Windows.Window>)."},{"content":"Call the &lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt; method if you are changing states in a control that uses the &lt;xref:System.Windows.VisualStateManager&gt; in its &lt;xref:System.Windows.Controls.ControlTemplate&gt;.","pos":[266,485],"source":" Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>."}]}]},{"pos":[16188,16278],"content":"The root element that contains the <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualStateManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>."},{"pos":[16344,16371],"content":"The state to transition to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The state to transition to.","pos":[0,27]}]},{"pos":[16443,16677],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use a <bpt id=\"p2\">&lt;xref href=\"System.Windows.VisualTransition\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object to transition between states; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use a <xref href=\"System.Windows.VisualTransition\"></xref> object to transition between states; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16736,16930],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the control successfully transitioned to the new state; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control successfully transitioned to the new state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17112,17326],"content":"<code>stateGroupsRoot</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>stateName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;stateGroupsRoot&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,93],"source":"<code>stateGroupsRoot</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;stateName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[100,198],"source":"       -or-       <code>stateName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[17918,18082],"content":"Transitions the control between two states. Use this method to transition states on control that has a <xref href=\"System.Windows.Controls.ControlTemplate\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Transitions the control between two states.","pos":[0,43]},{"content":"Use this method to transition states on control that has a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.ControlTemplate\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[44,164],"source":" Use this method to transition states on control that has a <xref href=\"System.Windows.Controls.ControlTemplate\"></xref>."}]},{"pos":[18094,18578],"content":"Call the GoToState method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>. Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Call the GoToState method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>. Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element).","pos":[0,484],"nodes":[{"content":"Call the GoToState method if you are changing states in a control that uses the &lt;xref:System.Windows.VisualStateManager&gt; in its &lt;xref:System.Windows.Controls.ControlTemplate&gt;.","pos":[0,175],"source":"Call the GoToState method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>."},{"content":"Call the &lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt; method to change states on an element outside of a &lt;xref:System.Windows.Controls.ControlTemplate&gt; (for example, if you use a &lt;xref:System.Windows.VisualStateManager&gt; in a &lt;xref:System.Windows.Controls.UserControl&gt; or in a single element).","pos":[176,484],"source":" Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element)."}]}]},{"pos":[19305,19346],"content":"The control to transition between states.","needQuote":true,"needEscape":true,"nodes":[{"content":"The control to transition between states.","pos":[0,41]}]},{"pos":[19412,19439],"content":"The state to transition to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The state to transition to.","pos":[0,27]}]},{"pos":[19511,19745],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use a <bpt id=\"p2\">&lt;xref href=\"System.Windows.VisualTransition\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object to transition between states; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use a <xref href=\"System.Windows.VisualTransition\"></xref> object to transition between states; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19804,19998],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the control successfully transitioned to the new state; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control successfully transitioned to the new state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20173,20379],"content":"<code>control</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>stateName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;control&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,85],"source":"<code>control</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;stateName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[92,190],"source":"       -or-       <code>stateName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[21311,21348],"content":"Transitions a control between states.","needQuote":true,"needEscape":true,"nodes":[{"content":"Transitions a control between states.","pos":[0,37]}]},{"pos":[21361,22931],"content":"The GoToStateCore method performs the logic necessary to appropriately start and stop the storyboards that are associated with a transition. When a control calls <xref:System.Windows.VisualStateManager.GoToState%2A> to change its state, the <xref:System.Windows.VisualStateManager> does the following:      -   First, if the <xref:System.Windows.VisualState> that the control is transitioning to has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard begins. Then, if the <xref:System.Windows.VisualState> that the control is coming from has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard ends.      -   If the control is already in the `stateName` state, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `true`.      -   If `stateName` does not exist in the <xref:System.Windows.Controls.ControlTemplate> of `control`, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `false`.       You can implement your own <xref:System.Windows.VisualStateManager> to provide different logic for transitioning between states. For example, you can change the logic described previously, or you can provide logic to transition between custom animation types.  To implement a <xref:System.Windows.VisualStateManager>, create a class that inherits from <xref:System.Windows.VisualStateManager> and override the GoToStateCore method. To use the custom class, set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> property to an object of your custom type.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GoToStateCore method performs the logic necessary to appropriately start and stop the storyboards that are associated with a transition.","pos":[0,140]},{"content":"When a control calls &lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt; to change its state, the &lt;xref:System.Windows.VisualStateManager&gt; does the following:      -   First, if the &lt;xref:System.Windows.VisualState&gt; that the control is transitioning to has a &lt;xref:System.Windows.Media.Animation.Storyboard&gt;, the storyboard begins.","pos":[141,474],"source":" When a control calls <xref:System.Windows.VisualStateManager.GoToState%2A> to change its state, the <xref:System.Windows.VisualStateManager> does the following:      -   First, if the <xref:System.Windows.VisualState> that the control is transitioning to has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard begins."},{"content":"Then, if the &lt;xref:System.Windows.VisualState&gt; that the control is coming from has a &lt;xref:System.Windows.Media.Animation.Storyboard&gt;, the storyboard ends.","pos":[475,630],"source":" Then, if the <xref:System.Windows.VisualState> that the control is coming from has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard ends."},{"content":"-   If the control is already in the <ph id=\"ph1\">`stateName`</ph> state, &lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt; takes no action and returns <ph id=\"ph2\">`true`</ph>.","pos":[636,781],"source":"      -   If the control is already in the `stateName` state, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `true`."},{"content":"-   If <ph id=\"ph1\">`stateName`</ph> does not exist in the &lt;xref:System.Windows.Controls.ControlTemplate&gt; of <ph id=\"ph2\">`control`</ph>, &lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt; takes no action and returns <ph id=\"ph3\">`false`</ph>.","pos":[787,979],"source":"      -   If `stateName` does not exist in the <xref:System.Windows.Controls.ControlTemplate> of `control`, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `false`."},{"content":"You can implement your own &lt;xref:System.Windows.VisualStateManager&gt; to provide different logic for transitioning between states.","pos":[986,1114],"source":"       You can implement your own <xref:System.Windows.VisualStateManager> to provide different logic for transitioning between states."},{"content":"For example, you can change the logic described previously, or you can provide logic to transition between custom animation types.","pos":[1115,1245]},{"content":"To implement a &lt;xref:System.Windows.VisualStateManager&gt;, create a class that inherits from &lt;xref:System.Windows.VisualStateManager&gt; and override the GoToStateCore method.","pos":[1247,1417],"source":"  To implement a <xref:System.Windows.VisualStateManager>, create a class that inherits from <xref:System.Windows.VisualStateManager> and override the GoToStateCore method."},{"content":"To use the custom class, set the &lt;xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A&gt; property to an object of your custom type.","pos":[1418,1562],"source":" To use the custom class, set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> property to an object of your custom type."}]},{"pos":[23294,23335],"content":"The control to transition between states.","needQuote":true,"needEscape":true,"nodes":[{"content":"The control to transition between states.","pos":[0,41]}]},{"pos":[23425,23515],"content":"The root element that contains the <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualStateManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>."},{"pos":[23581,23620],"content":"The name of the state to transition to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the state to transition to.","pos":[0,39]}]},{"pos":[23700,23783],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualStateGroup\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that the state belongs to.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.VisualStateGroup\"></xref> that the state belongs to."},{"pos":[23858,23907],"content":"The representation of the state to transition to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The representation of the state to transition to.","pos":[0,49]}]},{"pos":[23979,24213],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use a <bpt id=\"p2\">&lt;xref href=\"System.Windows.VisualTransition\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object to transition between states; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use a <xref href=\"System.Windows.VisualTransition\"></xref> object to transition between states; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24272,24466],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the control successfully transitioned to the new state; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control successfully transitioned to the new state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25517,25685],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event on the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.VisualStateGroup\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event on the specified <xref href=\"System.Windows.VisualStateGroup\"></xref> object."},{"pos":[25697,26096],"content":"When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.  When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the &lt;xref:System.Windows.VisualStateGroup&gt; is set on the &lt;xref:System.Windows.Controls.ControlTemplate&gt; of a control, the <ph id=\"ph1\">`control`</ph> parameter is set to the control that owns &lt;xref:System.Windows.Controls.ControlTemplate&gt;.","pos":[0,226],"source":"When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>."},{"content":"When the &lt;xref:System.Windows.VisualStateGroup&gt; is set on a &lt;xref:System.Windows.FrameworkElement&gt;, <ph id=\"ph1\">`control`</ph> is <ph id=\"ph2\">`null`</ph> and you should use the <ph id=\"ph3\">`stateGroupsRoot`</ph> parameter.","pos":[228,399],"source":"  When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter."}]},{"pos":[26470,26582],"content":"The object that the <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event occurred on.","needQuote":true,"needEscape":true,"source":"The object that the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event occurred on."},{"pos":[26660,26709],"content":"The state that the control is transitioning from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The state that the control is transitioning from.","pos":[0,49]}]},{"pos":[26787,26834],"content":"The state that the control is transitioning to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The state that the control is transitioning to.","pos":[0,47]}]},{"pos":[26916,26957],"content":"The control that is transitioning states.","needQuote":true,"needEscape":true,"nodes":[{"content":"The control that is transitioning states.","pos":[0,41]}]},{"pos":[27047,27137],"content":"The root element that contains the <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualStateManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>."},{"pos":[27327,27540],"content":"<code>stateGroupsRoot</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>newState</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;stateGroupsRoot&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,93],"source":"<code>stateGroupsRoot</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;newState&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[100,197],"source":"       -or-       <code>newState</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[28519,28687],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event on the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.VisualStateGroup\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event on the specified <xref href=\"System.Windows.VisualStateGroup\"></xref> object."},{"pos":[28699,29098],"content":"When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.  When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the &lt;xref:System.Windows.VisualStateGroup&gt; is set on the &lt;xref:System.Windows.Controls.ControlTemplate&gt; of a control, the <ph id=\"ph1\">`control`</ph> parameter is set to the control that owns &lt;xref:System.Windows.Controls.ControlTemplate&gt;.","pos":[0,226],"source":"When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>."},{"content":"When the &lt;xref:System.Windows.VisualStateGroup&gt; is set on a &lt;xref:System.Windows.FrameworkElement&gt;, <ph id=\"ph1\">`control`</ph> is <ph id=\"ph2\">`null`</ph> and you should use the <ph id=\"ph3\">`stateGroupsRoot`</ph> parameter.","pos":[228,399],"source":"  When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter."}]},{"pos":[29473,29585],"content":"The object that the <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event occurred on.","needQuote":true,"needEscape":true,"source":"The object that the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event occurred on."},{"pos":[29663,29712],"content":"The state that the control is transitioning from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The state that the control is transitioning from.","pos":[0,49]}]},{"pos":[29790,29837],"content":"The state that the control is transitioning to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The state that the control is transitioning to.","pos":[0,47]}]},{"pos":[29919,29960],"content":"The control that is transitioning states.","needQuote":true,"needEscape":true,"nodes":[{"content":"The control that is transitioning states.","pos":[0,41]}]},{"pos":[30050,30140],"content":"The root element that contains the <bpt id=\"p1\">&lt;xref href=\"System.Windows.VisualStateManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>."},{"pos":[30331,30544],"content":"<code>stateGroupsRoot</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>newState</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;stateGroupsRoot&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,93],"source":"<code>stateGroupsRoot</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;newState&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[100,197],"source":"       -or-       <code>newState</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[31248,31342],"content":"Sets the <xref:System.Windows.VisualStateManager.CustomVisualStateManager*> attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the &lt;xref:System.Windows.VisualStateManager.CustomVisualStateManager*&gt; attached property.","pos":[0,94],"source":"Sets the <xref:System.Windows.VisualStateManager.CustomVisualStateManager*> attached property."}]},{"pos":[31586,31620],"content":"The object to set the property on.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to set the property on.","pos":[0,34]}]},{"pos":[31702,31776],"content":"The visual state manager that transitions between the states of a control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The visual state manager that transitions between the states of a control.","pos":[0,74]}]},{"pos":[32315,32410],"content":"Identifies the <xref:System.Windows.VisualStateManager.VisualStateGroups*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.VisualStateManager.VisualStateGroups*&gt; dependency property.","pos":[0,95],"source":"Identifies the <xref:System.Windows.VisualStateManager.VisualStateGroups*> dependency property."}]},{"pos":[32595,32607],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.VisualStateManager\n  id: VisualStateManager\n  children:\n  - System.Windows.VisualStateManager.#ctor\n  - System.Windows.VisualStateManager.CustomVisualStateManagerProperty\n  - System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)\n  - System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)\n  - System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)\n  - System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)\n  - System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)\n  - System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)\n  - System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)\n  - System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)\n  - System.Windows.VisualStateManager.VisualStateGroupsProperty\n  langs:\n  - csharp\n  name: VisualStateManager\n  nameWithType: VisualStateManager\n  fullName: System.Windows.VisualStateManager\n  type: Class\n  summary: Manages states and the logic for transitioning between states for controls.\n  remarks: \"The VisualStateManager enables you to specify states for a control, the appearance of a control when it is in a certain state, and when a control changes states. For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed. Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`\\\"Pressed\\\"`) and when it is not (`\\\"Normal\\\"`). The appearance of a control when it is in a state is defined by a <xref:System.Windows.VisualState>. A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in that state. You add visual states to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control. Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects that are mutually exclusive. That is, the control is always in exactly one state of in each <xref:System.Windows.VisualStateGroup>.  \\n  \\n The VisualStateManager also enables you to specify when a control enters a specific state. The method that you should call to change states depends on your scenario. If you create a control that uses the VisualStateManager in its <xref:System.Windows.Controls.ControlTemplate>, call the <xref:System.Windows.VisualStateManager.GoToState%2A> method. For more information about how to create controls that use the VisualStateManager, see [Creating a Control That Has a Customizable Appearance](~/add/includes/ajax-current-ext-md.md). If you use the VisualStateManager outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a VisualStateManager in a <xref:System.Windows.Controls.UserControl> or in a single element), call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method. In either case, the VisualStateManager performs the logic that is required to appropriately start and stop the storyboards that are associated with the involved state. For example, suppose that a control defines the states, `State1` and `State2`, each of which has a storyboard associated with it. If the control is in `State1` and you pass `State2` to <xref:System.Windows.VisualStateManager.GoToState%2A> or <xref:System.Windows.VisualStateManager.GoToElementState%2A>, the VisualStateManager starts the storyboard in `State2` and stops the storyboard in `State1`.  \\n  \\n Controls that are included with [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] use the VisualStateManager to change visual states. When you create a <xref:System.Windows.Controls.ControlTemplate> for a control that is included with [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)], you can add <xref:System.Windows.VisualState> objects to the control's <xref:System.Windows.Controls.ControlTemplate> to specify the control's appearance in a certain state. To find the names of the visual states for the controls that are included with [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)], see [Control Styles and Templates](~/add/includes/ajax-current-ext-md.md). The control's logic handles transitioning between states, so you do not need to do anything other than define the <xref:System.Windows.VisualState> objects in the new <xref:System.Windows.Controls.ControlTemplate>. For more information about how to create control templates for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md).  \\n  \\n If you want to implement your own logic for transitioning between states, you must inherit from VisualStateManager, override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method, and set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=fullName> attached property on the control that uses the custom logic.\"\n  example:\n  - \"The following example creates a <xref:System.Windows.Shapes.Rectangle> and adds a <xref:System.Windows.VisualStateGroup> named `CommonStates` to the `VisualStateManager.VisualStatesGroups` attached property. The example defines the `MouseOver` and `Normal`<xref:System.Windows.VisualState> objects in the `CommonStates`<xref:System.Windows.VisualStateGroup>. When the user moves the mouse pointer over the <xref:System.Windows.Shapes.Rectangle>, it changes from red to green over one half second. When the user moves the mouse away from the rectangle, the <xref:System.Windows.Controls.Grid> immediately changes back to red. Note that the `Normal` state does not define a <xref:System.Windows.Media.Animation.Storyboard>. A <xref:System.Windows.Media.Animation.Storyboard> is not required because when the <xref:System.Windows.Shapes.Rectangle> transitions from the `MouseOver` state to the `Normal` state, the <xref:System.Windows.Media.Animation.Storyboard> for `MouseOver` is stopped and the <xref:System.Windows.Media.SolidColorBrush.Color%2A> property for the <xref:System.Windows.Media.SolidColorBrush> returns to red.  \\n  \\n [!code-xml[VSMCustomControl#VSMNoTemplate](~/add/codesnippet/xaml/vsmcustomcontrol/window1.xaml#vsmnotemplate)]  \\n  \\n The following example shows the event handler that is defined in the previous example and calls the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to transition between states. If the rectangle in the previous example was part of a <xref:System.Windows.Controls.ControlTemplate>, the example would have to call the <xref:System.Windows.VisualStateManager.GoToState%2A> method.  \\n  \\n [!code-cs[VSMCustomControl#GoToElementState](~/add/codesnippet/csharp/vsmcustomcontrol/window1.xaml.cs#gotoelementstate)]\\n [!code-vb[VSMCustomControl#GoToElementState](~/add/codesnippet/visualbasic/vsmcustomcontrolvb2/window1.xaml.vb#gotoelementstate)]\"\n  syntax:\n    content: 'public class VisualStateManager : System.Windows.DependencyObject'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  implements: []\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.VisualStateManager.#ctor\n  id: '#ctor'\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: VisualStateManager()\n  nameWithType: VisualStateManager.VisualStateManager()\n  fullName: System.Windows.VisualStateManager.VisualStateManager()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.VisualStateManager\"></xref> class.\n  syntax:\n    content: public VisualStateManager ();\n    parameters: []\n  overload: System.Windows.VisualStateManager.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.VisualStateManager.CustomVisualStateManagerProperty\n  id: CustomVisualStateManagerProperty\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: CustomVisualStateManagerProperty\n  nameWithType: VisualStateManager.CustomVisualStateManagerProperty\n  fullName: System.Windows.VisualStateManager.CustomVisualStateManagerProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.VisualStateManager.CustomVisualStateManager*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty CustomVisualStateManagerProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)\n  id: GetCustomVisualStateManager(System.Windows.FrameworkElement)\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: GetCustomVisualStateManager(FrameworkElement)\n  nameWithType: VisualStateManager.GetCustomVisualStateManager(FrameworkElement)\n  fullName: System.Windows.VisualStateManager.GetCustomVisualStateManager(FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets the <xref:System.Windows.VisualStateManager.CustomVisualStateManager*> attached property.\n  syntax:\n    content: public static System.Windows.VisualStateManager GetCustomVisualStateManager (System.Windows.FrameworkElement obj);\n    parameters:\n    - id: obj\n      type: System.Windows.FrameworkElement\n      description: The element to get the <xref:System.Windows.VisualStateManager.CustomVisualStateManager*> attached property from.\n    return:\n      type: System.Windows.VisualStateManager\n      description: The visual state manager that transitions between the states of a control.\n  overload: System.Windows.VisualStateManager.GetCustomVisualStateManager*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)\n  id: GetVisualStateGroups(System.Windows.FrameworkElement)\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: GetVisualStateGroups(FrameworkElement)\n  nameWithType: VisualStateManager.GetVisualStateGroups(FrameworkElement)\n  fullName: System.Windows.VisualStateManager.GetVisualStateGroups(FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets the &lt;xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=fullName&gt; attached property.\n  syntax:\n    content: public static System.Collections.IList GetVisualStateGroups (System.Windows.FrameworkElement obj);\n    parameters:\n    - id: obj\n      type: System.Windows.FrameworkElement\n      description: The element to get the &lt;xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=fullName&gt; attached property from.\n    return:\n      type: System.Collections.IList\n      description: The collection of <xref href=\"System.Windows.VisualStateGroup\"></xref> objects that is associated with the specified object.\n  overload: System.Windows.VisualStateManager.GetVisualStateGroups*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)\n  id: GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: GoToElementState(FrameworkElement,String,Boolean)\n  nameWithType: VisualStateManager.GoToElementState(FrameworkElement,String,Boolean)\n  fullName: System.Windows.VisualStateManager.GoToElementState(FrameworkElement,String,Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Transitions the element between two states. Use this method to transition states that are defined by an application, rather than defined by a control.\n  remarks: Call the GoToElementState method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.DataTemplate> or <xref:System.Windows.Window>). Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.\n  example:\n  - \"The following example creates an application that prompts the user to guess a number between 1 and 100.  When the user enters a number, the application indicates whether the guess is too high, too low, or correct.  The following [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] creates the user interface for the application and defines 4 states: `TooLow`, `TooHigh`, `Correct`, and `Guessing`. When the application begins, it is in the `Guessing` state. .  \\n  \\n [!code-xml[VSMGoToElementState#GoToElementStateXaml](~/add/codesnippet/xaml/vsmgotoelementstate/mainwindow.xaml#gotoelementstatexaml)]  \\n  \\n The following code shows the logic of the application.  When the user enters a number and clicks the button, the application calls GoToElementState to transition to `TooHigh`, `TooLow`, or `Correct` to provide feedback to the user about the guess.  To try this example, call the `GenerateNumber` method when the application begins.  \\n  \\n [!code-cs[VSMGoToElementState#GoToElementStateCode](~/add/codesnippet/csharp/vsmgotoelementstate/mainwindow.xaml.cs#gotoelementstatecode)]\\n [!code-vb[VSMGoToElementState#GoToElementStateCode](~/add/codesnippet/visualbasic/vsmgotoelementstate/mainwindow.xaml.vb#gotoelementstatecode)]\"\n  syntax:\n    content: public static bool GoToElementState (System.Windows.FrameworkElement stateGroupsRoot, string stateName, bool useTransitions);\n    parameters:\n    - id: stateGroupsRoot\n      type: System.Windows.FrameworkElement\n      description: The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>.\n    - id: stateName\n      type: System.String\n      description: The state to transition to.\n    - id: useTransitions\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use a <xref href=\"System.Windows.VisualTransition\"></xref> object to transition between states; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control successfully transitioned to the new state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.VisualStateManager.GoToElementState*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>stateGroupsRoot</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>stateName</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)\n  id: GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: GoToState(FrameworkElement,String,Boolean)\n  nameWithType: VisualStateManager.GoToState(FrameworkElement,String,Boolean)\n  fullName: System.Windows.VisualStateManager.GoToState(FrameworkElement,String,Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Transitions the control between two states. Use this method to transition states on control that has a <xref href=\"System.Windows.Controls.ControlTemplate\"></xref>.\n  remarks: Call the GoToState method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>. Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element).\n  example:\n  - \"The following example demonstrates a control that uses the GoToState method to transition between states. For the entire example, see [Creating a Control That Has a Customizable Appearance](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[VSMCustomControl#UpdateStates](~/add/codesnippet/csharp/vsmcustomcontrol/numericupdown.cs#updatestates)]\\n [!code-vb[VSMCustomControl#UpdateStates](~/add/codesnippet/visualbasic/vsmcustomcontrolvb2/numericupdown.vb#updatestates)]\"\n  syntax:\n    content: public static bool GoToState (System.Windows.FrameworkElement control, string stateName, bool useTransitions);\n    parameters:\n    - id: control\n      type: System.Windows.FrameworkElement\n      description: The control to transition between states.\n    - id: stateName\n      type: System.String\n      description: The state to transition to.\n    - id: useTransitions\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use a <xref href=\"System.Windows.VisualTransition\"></xref> object to transition between states; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control successfully transitioned to the new state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.VisualStateManager.GoToState*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>control</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>stateName</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)\n  id: GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)\n  nameWithType: VisualStateManager.GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)\n  fullName: System.Windows.VisualStateManager.GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Transitions a control between states.\n  remarks: \"The GoToStateCore method performs the logic necessary to appropriately start and stop the storyboards that are associated with a transition. When a control calls <xref:System.Windows.VisualStateManager.GoToState%2A> to change its state, the <xref:System.Windows.VisualStateManager> does the following:  \\n  \\n-   First, if the <xref:System.Windows.VisualState> that the control is transitioning to has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard begins. Then, if the <xref:System.Windows.VisualState> that the control is coming from has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard ends.  \\n  \\n-   If the control is already in the `stateName` state, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `true`.  \\n  \\n-   If `stateName` does not exist in the <xref:System.Windows.Controls.ControlTemplate> of `control`, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `false`.  \\n  \\n You can implement your own <xref:System.Windows.VisualStateManager> to provide different logic for transitioning between states. For example, you can change the logic described previously, or you can provide logic to transition between custom animation types.  To implement a <xref:System.Windows.VisualStateManager>, create a class that inherits from <xref:System.Windows.VisualStateManager> and override the GoToStateCore method. To use the custom class, set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> property to an object of your custom type.\"\n  syntax:\n    content: protected virtual bool GoToStateCore (System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot, string stateName, System.Windows.VisualStateGroup group, System.Windows.VisualState state, bool useTransitions);\n    parameters:\n    - id: control\n      type: System.Windows.FrameworkElement\n      description: The control to transition between states.\n    - id: stateGroupsRoot\n      type: System.Windows.FrameworkElement\n      description: The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>.\n    - id: stateName\n      type: System.String\n      description: The name of the state to transition to.\n    - id: group\n      type: System.Windows.VisualStateGroup\n      description: The <xref href=\"System.Windows.VisualStateGroup\"></xref> that the state belongs to.\n    - id: state\n      type: System.Windows.VisualState\n      description: The representation of the state to transition to.\n    - id: useTransitions\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use a <xref href=\"System.Windows.VisualTransition\"></xref> object to transition between states; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control successfully transitioned to the new state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.VisualStateManager.GoToStateCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)\n  id: RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)\n  nameWithType: VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)\n  fullName: System.Windows.VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Raises the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event on the specified <xref href=\"System.Windows.VisualStateGroup\"></xref> object.\n  remarks: When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.  When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.\n  syntax:\n    content: protected void RaiseCurrentStateChanged (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);\n    parameters:\n    - id: stateGroup\n      type: System.Windows.VisualStateGroup\n      description: The object that the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event occurred on.\n    - id: oldState\n      type: System.Windows.VisualState\n      description: The state that the control is transitioning from.\n    - id: newState\n      type: System.Windows.VisualState\n      description: The state that the control is transitioning to.\n    - id: control\n      type: System.Windows.FrameworkElement\n      description: The control that is transitioning states.\n    - id: stateGroupsRoot\n      type: System.Windows.FrameworkElement\n      description: The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>.\n  overload: System.Windows.VisualStateManager.RaiseCurrentStateChanged*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>stateGroupsRoot</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>newState</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)\n  id: RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)\n  nameWithType: VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)\n  fullName: System.Windows.VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Raises the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event on the specified <xref href=\"System.Windows.VisualStateGroup\"></xref> object.\n  remarks: When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.  When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.\n  syntax:\n    content: protected void RaiseCurrentStateChanging (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);\n    parameters:\n    - id: stateGroup\n      type: System.Windows.VisualStateGroup\n      description: The object that the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event occurred on.\n    - id: oldState\n      type: System.Windows.VisualState\n      description: The state that the control is transitioning from.\n    - id: newState\n      type: System.Windows.VisualState\n      description: The state that the control is transitioning to.\n    - id: control\n      type: System.Windows.FrameworkElement\n      description: The control that is transitioning states.\n    - id: stateGroupsRoot\n      type: System.Windows.FrameworkElement\n      description: The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>.\n  overload: System.Windows.VisualStateManager.RaiseCurrentStateChanging*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>stateGroupsRoot</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>newState</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)\n  id: SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: SetCustomVisualStateManager(FrameworkElement,VisualStateManager)\n  nameWithType: VisualStateManager.SetCustomVisualStateManager(FrameworkElement,VisualStateManager)\n  fullName: System.Windows.VisualStateManager.SetCustomVisualStateManager(FrameworkElement,VisualStateManager)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Sets the <xref:System.Windows.VisualStateManager.CustomVisualStateManager*> attached property.\n  syntax:\n    content: public static void SetCustomVisualStateManager (System.Windows.FrameworkElement obj, System.Windows.VisualStateManager value);\n    parameters:\n    - id: obj\n      type: System.Windows.FrameworkElement\n      description: The object to set the property on.\n    - id: value\n      type: System.Windows.VisualStateManager\n      description: The visual state manager that transitions between the states of a control.\n  overload: System.Windows.VisualStateManager.SetCustomVisualStateManager*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.VisualStateManager.VisualStateGroupsProperty\n  id: VisualStateGroupsProperty\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: VisualStateGroupsProperty\n  nameWithType: VisualStateManager.VisualStateGroupsProperty\n  fullName: System.Windows.VisualStateManager.VisualStateGroupsProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref:System.Windows.VisualStateManager.VisualStateGroups*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty VisualStateGroupsProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.DependencyObject\n  isExternal: false\n  name: System.Windows.DependencyObject\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Windows.VisualStateManager.#ctor\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: VisualStateManager()\n  nameWithType: VisualStateManager.VisualStateManager()\n  fullName: System.Windows.VisualStateManager.VisualStateManager()\n- uid: System.Windows.VisualStateManager.CustomVisualStateManagerProperty\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: CustomVisualStateManagerProperty\n  nameWithType: VisualStateManager.CustomVisualStateManagerProperty\n  fullName: System.Windows.VisualStateManager.CustomVisualStateManagerProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GetCustomVisualStateManager(FrameworkElement)\n  nameWithType: VisualStateManager.GetCustomVisualStateManager(FrameworkElement)\n  fullName: System.Windows.VisualStateManager.GetCustomVisualStateManager(FrameworkElement)\n- uid: System.Windows.VisualStateManager\n  parent: System.Windows\n  isExternal: false\n  name: VisualStateManager\n  nameWithType: VisualStateManager\n  fullName: System.Windows.VisualStateManager\n- uid: System.Windows.FrameworkElement\n  parent: System.Windows\n  isExternal: false\n  name: FrameworkElement\n  nameWithType: FrameworkElement\n  fullName: System.Windows.FrameworkElement\n- uid: System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GetVisualStateGroups(FrameworkElement)\n  nameWithType: VisualStateManager.GetVisualStateGroups(FrameworkElement)\n  fullName: System.Windows.VisualStateManager.GetVisualStateGroups(FrameworkElement)\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: true\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GoToElementState(FrameworkElement,String,Boolean)\n  nameWithType: VisualStateManager.GoToElementState(FrameworkElement,String,Boolean)\n  fullName: System.Windows.VisualStateManager.GoToElementState(FrameworkElement,String,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GoToState(FrameworkElement,String,Boolean)\n  nameWithType: VisualStateManager.GoToState(FrameworkElement,String,Boolean)\n  fullName: System.Windows.VisualStateManager.GoToState(FrameworkElement,String,Boolean)\n- uid: System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)\n  nameWithType: VisualStateManager.GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)\n  fullName: System.Windows.VisualStateManager.GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)\n- uid: System.Windows.VisualStateGroup\n  parent: System.Windows\n  isExternal: false\n  name: VisualStateGroup\n  nameWithType: VisualStateGroup\n  fullName: System.Windows.VisualStateGroup\n- uid: System.Windows.VisualState\n  parent: System.Windows\n  isExternal: false\n  name: VisualState\n  nameWithType: VisualState\n  fullName: System.Windows.VisualState\n- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)\n  nameWithType: VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)\n  fullName: System.Windows.VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)\n- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)\n  nameWithType: VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)\n  fullName: System.Windows.VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)\n- uid: System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: SetCustomVisualStateManager(FrameworkElement,VisualStateManager)\n  nameWithType: VisualStateManager.SetCustomVisualStateManager(FrameworkElement,VisualStateManager)\n  fullName: System.Windows.VisualStateManager.SetCustomVisualStateManager(FrameworkElement,VisualStateManager)\n- uid: System.Windows.VisualStateManager.VisualStateGroupsProperty\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: VisualStateGroupsProperty\n  nameWithType: VisualStateManager.VisualStateGroupsProperty\n  fullName: System.Windows.VisualStateManager.VisualStateGroupsProperty\n- uid: System.Windows.VisualStateManager.#ctor*\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: VisualStateManager\n  nameWithType: VisualStateManager.VisualStateManager\n- uid: System.Windows.VisualStateManager.GetCustomVisualStateManager*\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GetCustomVisualStateManager\n  nameWithType: VisualStateManager.GetCustomVisualStateManager\n- uid: System.Windows.VisualStateManager.GetVisualStateGroups*\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GetVisualStateGroups\n  nameWithType: VisualStateManager.GetVisualStateGroups\n- uid: System.Windows.VisualStateManager.GoToElementState*\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GoToElementState\n  nameWithType: VisualStateManager.GoToElementState\n- uid: System.Windows.VisualStateManager.GoToState*\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GoToState\n  nameWithType: VisualStateManager.GoToState\n- uid: System.Windows.VisualStateManager.GoToStateCore*\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GoToStateCore\n  nameWithType: VisualStateManager.GoToStateCore\n- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanged*\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: RaiseCurrentStateChanged\n  nameWithType: VisualStateManager.RaiseCurrentStateChanged\n- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanging*\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: RaiseCurrentStateChanging\n  nameWithType: VisualStateManager.RaiseCurrentStateChanging\n- uid: System.Windows.VisualStateManager.SetCustomVisualStateManager*\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: SetCustomVisualStateManager\n  nameWithType: VisualStateManager.SetCustomVisualStateManager\n"}