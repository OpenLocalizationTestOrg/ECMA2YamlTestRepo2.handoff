{"nodes":[{"pos":[2466,2504],"content":"Represents the state of model binding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the state of model binding.","pos":[0,38]}]},{"pos":[3765,3871],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.ModelBinding.ModelStateDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.ModelBinding.ModelStateDictionary\"></xref> class."},{"pos":[4617,4763],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.ModelBinding.ModelStateDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using an existing dictionary collection.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.ModelBinding.ModelStateDictionary\"></xref> class using an existing dictionary collection."},{"pos":[4987,5002],"content":"The dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dictionary.","pos":[0,15]}]},{"pos":[5183,5285],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dictionary</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>dictionary</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5937,5979],"content":"Adds the specified item to the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified item to the dictionary.","pos":[0,42]}]},{"pos":[6262,6271],"content":"The item.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item.","pos":[0,9]}]},{"pos":[6878,6946],"content":"Adds an item that has the specified key and value to the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an item that has the specified key and value to the dictionary.","pos":[0,68]}]},{"pos":[7117,7125],"content":"The key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key.","pos":[0,8]}]},{"pos":[7208,7218],"content":"The value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value.","pos":[0,10]}]},{"pos":[7836,7952],"content":"Adds a model error to the errors collection using the specified key and using the specified exception for the value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a model error to the errors collection using the specified key and using the specified exception for the value.","pos":[0,116]}]},{"pos":[8112,8120],"content":"The key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key.","pos":[0,8]}]},{"pos":[8189,8210],"content":"The exception object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception object.","pos":[0,21]}]},{"pos":[8399,8494],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>key</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9018,9157],"content":"Adds the specified model error to the errors collection using the specified key and using the specified error message string for the value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified model error to the errors collection using the specified key and using the specified error message string for the value.","pos":[0,139]}]},{"pos":[9317,9325],"content":"The key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key.","pos":[0,8]}]},{"pos":[9394,9412],"content":"The error message.","needQuote":true,"needEscape":true,"nodes":[{"content":"The error message.","pos":[0,18]}]},{"pos":[9601,9696],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>key</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10083,10121],"content":"Removes all items from the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all items from the dictionary.","pos":[0,38]}]},{"pos":[10943,11014],"content":"Determines whether the model-state dictionary contains a specific item.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the model-state dictionary contains a specific item.","pos":[0,71]}]},{"pos":[11302,11351],"content":"The item to locate in the model-state dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item to locate in the model-state dictionary.","pos":[0,49]}]},{"pos":[11410,11594],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">item</ph><ept id=\"p2\">&lt;/code&gt;</ept> is found in the dictionary; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>item</code> is found in the dictionary; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12143,12216],"content":"Determines whether the model-state dictionary contains the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the model-state dictionary contains the specified key.","pos":[0,73]}]},{"pos":[12353,12361],"content":"The key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key.","pos":[0,8]}]},{"pos":[12420,12601],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the dictionary contains the specified key; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary contains the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13403,13484],"content":"Copies the elements of the dictionary to an array, starting at a specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the elements of the dictionary to an array, starting at a specified index.","pos":[0,81]}]},{"pos":[13792,13926],"content":"The one-dimensional array that is the destination of the elements copied from the dictionary. The array must have zero-based indexing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The one-dimensional array that is the destination of the elements copied from the dictionary. The array must have zero-based indexing.","pos":[0,134],"nodes":[{"content":"The one-dimensional array that is the destination of the elements copied from the dictionary.","pos":[0,93]},{"content":"The array must have zero-based indexing.","pos":[94,134]}]}]},{"pos":[13992,14048],"content":"The zero-based index in <ph id=\"ph1\">`array`</ph> at which copying starts.","needQuote":true,"needEscape":true,"source":"The zero-based index in `array` at which copying starts."},{"pos":[14513,14566],"content":"Gets the number of key/value pairs in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of key/value pairs in the collection.","pos":[0,53]}]},{"pos":[14672,14720],"content":"The number of key/value pairs in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of key/value pairs in the collection.","pos":[0,48]}]},{"pos":[15228,15301],"content":"Returns an enumerator that can be used to iterate through the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator that can be used to iterate through the dictionary.","pos":[0,73]}]},{"pos":[15665,15730],"content":"An enumerator that can be used to iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumerator that can be used to iterate through the collection.","pos":[0,65]}]},{"pos":[16227,16291],"content":"Gets a value that indicates whether the dictionary is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the dictionary is read-only.","pos":[0,64]}]},{"pos":[16405,16572],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the dictionary is read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17051,17160],"content":"Gets a value that indicates whether there are any errors in any of the model state objects in the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether there are any errors in any of the model state objects in the dictionary.","pos":[0,109]}]},{"pos":[17271,17432],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if any errors were found; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if any errors were found; otherwise, <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[17985,18169],"content":"Determines whether there are any <bpt id=\"p1\">&lt;xref href=\"System.Web.ModelBinding.ModelError\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that are associated with the specified key or that are prefixed with the specified key.","needQuote":true,"needEscape":true,"source":"Determines whether there are any <xref href=\"System.Web.ModelBinding.ModelError\"></xref> objects that are associated with the specified key or that are prefixed with the specified key."},{"pos":[18307,18315],"content":"The key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key.","pos":[0,8]}]},{"pos":[18374,18779],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if any <xref href=\"System.Web.ModelBinding.ModelError\"></xref> objects are associated with the specified key or prefixed with the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. If the key is not found in the dictionary, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if any <bpt id=\"p2\">&lt;xref href=\"System.Web.ModelBinding.ModelError\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects are associated with the specified key or prefixed with the specified key; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,280],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if any <xref href=\"System.Web.ModelBinding.ModelError\"></xref> objects are associated with the specified key or prefixed with the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"If the key is not found in the dictionary, this method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[281,405],"source":" If the key is not found in the dictionary, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[18967,19062],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>key</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[19494,19559],"content":"Gets or sets the value that is associated with the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the value that is associated with the specified key.","pos":[0,65]}]},{"pos":[19731,19739],"content":"The key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key.","pos":[0,8]}]},{"pos":[19818,19827],"content":"The item.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item.","pos":[0,9]}]},{"pos":[20285,20344],"content":"Gets a collection that contains the keys of the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection that contains the keys of the dictionary.","pos":[0,59]}]},{"pos":[20533,20560],"content":"The keys of the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"The keys of the dictionary.","pos":[0,27]}]},{"pos":[21179,21321],"content":"Copies the values from the specified model-state dictionary object into this dictionary, overwriting existing values if the keys are the same.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the values from the specified model-state dictionary object into this dictionary, overwriting existing values if the keys are the same.","pos":[0,142]}]},{"pos":[21535,21589],"content":"The model-state dictionary to be merged into this one.","needQuote":true,"needEscape":true,"nodes":[{"content":"The model-state dictionary to be merged into this one.","pos":[0,54]}]},{"pos":[22337,22420],"content":"Removes the first occurrence of the specified item from the model-state dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the first occurrence of the specified item from the model-state dictionary.","pos":[0,83]}]},{"pos":[22706,22725],"content":"The item to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item to remove.","pos":[0,19]}]},{"pos":[22784,23032],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the item was successfully removed from the dictionary, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the item was not removed or was not found in the dictionary.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the item was successfully removed from the dictionary, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the item was not removed or was not found in the dictionary."},{"pos":[23554,23618],"content":"Removes the item that has the specified key from the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the item that has the specified key from the dictionary.","pos":[0,64]}]},{"pos":[23750,23780],"content":"The key of the item to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the item to remove.","pos":[0,30]}]},{"pos":[23839,24087],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the item was successfully removed from the dictionary, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the item was not removed or was not found in the dictionary.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the item was successfully removed from the dictionary, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the item was not removed or was not found in the dictionary."},{"pos":[24792,24829],"content":"Sets the value for the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value for the specified key.","pos":[0,37]}]},{"pos":[25019,25027],"content":"The key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key.","pos":[0,8]}]},{"pos":[25119,25129],"content":"The value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value.","pos":[0,10]}]},{"pos":[25814,25887],"content":"Returns an enumerator that can be used to iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator that can be used to iterate through the collection.","pos":[0,73]}]},{"pos":[25899,26104],"content":"This is an explicit interface member implementation. It can be used only when the <xref:System.Web.ModelBinding.ModelStateDictionary> instance is cast to an <xref:System.Collections.IEnumerable> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This is an explicit interface member implementation. It can be used only when the <xref:System.Web.ModelBinding.ModelStateDictionary> instance is cast to an <xref:System.Collections.IEnumerable> interface.","pos":[0,205],"nodes":[{"content":"This is an explicit interface member implementation.","pos":[0,52]},{"content":"It can be used only when the &lt;xref:System.Web.ModelBinding.ModelStateDictionary&gt; instance is cast to an &lt;xref:System.Collections.IEnumerable&gt; interface.","pos":[53,205],"source":" It can be used only when the <xref:System.Web.ModelBinding.ModelStateDictionary> instance is cast to an <xref:System.Collections.IEnumerable> interface."}]}]},{"pos":[26282,26347],"content":"An enumerator that can be used to iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumerator that can be used to iterate through the collection.","pos":[0,65]}]},{"pos":[27037,27106],"content":"Attempts to gets the value that is associated with the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempts to gets the value that is associated with the specified key.","pos":[0,69]}]},{"pos":[27289,27317],"content":"The key of the value to get.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the value to get.","pos":[0,28]}]},{"pos":[27400,27619],"content":"When this method returns, contains the value that is associated with the specified key, if the key was found; otherwise, contains the default value for the type of this parameter. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains the value that is associated with the specified key, if the key was found; otherwise, contains the default value for the type of this parameter. This parameter is passed uninitialized.","pos":[0,219],"nodes":[{"content":"When this method returns, contains the value that is associated with the specified key, if the key was found; otherwise, contains the default value for the type of this parameter.","pos":[0,179]},{"content":"This parameter is passed uninitialized.","pos":[180,219]}]}]},{"pos":[27678,27876],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the dictionary contains an item that has the specified key; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary contains an item that has the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28351,28412],"content":"Gets a collection that contains the values of the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection that contains the values of the dictionary.","pos":[0,61]}]},{"pos":[28652,28681],"content":"The values of the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"The values of the dictionary.","pos":[0,29]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.ModelBinding.ModelStateDictionary\n  id: ModelStateDictionary\n  children:\n  - System.Web.ModelBinding.ModelStateDictionary.#ctor\n  - System.Web.ModelBinding.ModelStateDictionary.#ctor(System.Web.ModelBinding.ModelStateDictionary)\n  - System.Web.ModelBinding.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState})\n  - System.Web.ModelBinding.ModelStateDictionary.Add(System.String,System.Web.ModelBinding.ModelState)\n  - System.Web.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.Exception)\n  - System.Web.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.String)\n  - System.Web.ModelBinding.ModelStateDictionary.Clear\n  - System.Web.ModelBinding.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState})\n  - System.Web.ModelBinding.ModelStateDictionary.ContainsKey(System.String)\n  - System.Web.ModelBinding.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState}[],System.Int32)\n  - System.Web.ModelBinding.ModelStateDictionary.Count\n  - System.Web.ModelBinding.ModelStateDictionary.GetEnumerator\n  - System.Web.ModelBinding.ModelStateDictionary.IsReadOnly\n  - System.Web.ModelBinding.ModelStateDictionary.IsValid\n  - System.Web.ModelBinding.ModelStateDictionary.IsValidField(System.String)\n  - System.Web.ModelBinding.ModelStateDictionary.Item(System.String)\n  - System.Web.ModelBinding.ModelStateDictionary.Keys\n  - System.Web.ModelBinding.ModelStateDictionary.Merge(System.Web.ModelBinding.ModelStateDictionary)\n  - System.Web.ModelBinding.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState})\n  - System.Web.ModelBinding.ModelStateDictionary.Remove(System.String)\n  - System.Web.ModelBinding.ModelStateDictionary.SetModelValue(System.String,System.Web.ModelBinding.ValueProviderResult)\n  - System.Web.ModelBinding.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator\n  - System.Web.ModelBinding.ModelStateDictionary.TryGetValue(System.String,System.Web.ModelBinding.ModelState@)\n  - System.Web.ModelBinding.ModelStateDictionary.Values\n  langs:\n  - csharp\n  name: ModelStateDictionary\n  nameWithType: ModelStateDictionary\n  fullName: System.Web.ModelBinding.ModelStateDictionary\n  type: Class\n  summary: Represents the state of model binding.\n  syntax:\n    content: 'public class ModelStateDictionary : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,System.Web.ModelBinding.ModelState>>, System.Collections.Generic.IDictionary<string,System.Web.ModelBinding.ModelState>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Web.ModelBinding.ModelState>>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Web.ModelBinding.ModelState>>\n  - System.Collections.Generic.IDictionary<System.String,System.Web.ModelBinding.ModelState>\n  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Web.ModelBinding.ModelState>>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.#ctor\n  id: '#ctor'\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: ModelStateDictionary()\n  nameWithType: ModelStateDictionary.ModelStateDictionary()\n  fullName: System.Web.ModelBinding.ModelStateDictionary.ModelStateDictionary()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Initializes a new instance of the <xref href=\"System.Web.ModelBinding.ModelStateDictionary\"></xref> class.\n  syntax:\n    content: public ModelStateDictionary ();\n    parameters: []\n  overload: System.Web.ModelBinding.ModelStateDictionary.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.#ctor(System.Web.ModelBinding.ModelStateDictionary)\n  id: '#ctor(System.Web.ModelBinding.ModelStateDictionary)'\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: ModelStateDictionary(ModelStateDictionary)\n  nameWithType: ModelStateDictionary.ModelStateDictionary(ModelStateDictionary)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.ModelStateDictionary(ModelStateDictionary)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Initializes a new instance of the <xref href=\"System.Web.ModelBinding.ModelStateDictionary\"></xref> class using an existing dictionary collection.\n  syntax:\n    content: public ModelStateDictionary (System.Web.ModelBinding.ModelStateDictionary dictionary);\n    parameters:\n    - id: dictionary\n      type: System.Web.ModelBinding.ModelStateDictionary\n      description: The dictionary.\n  overload: System.Web.ModelBinding.ModelStateDictionary.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>dictionary</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState})\n  id: Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState})\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: Add(KeyValuePair<String,ModelState>)\n  nameWithType: ModelStateDictionary.Add(KeyValuePair<String,ModelState>)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Add(KeyValuePair<String,ModelState>)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Adds the specified item to the dictionary.\n  syntax:\n    content: public void Add (System.Collections.Generic.KeyValuePair<string,System.Web.ModelBinding.ModelState> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState}\n      description: The item.\n  overload: System.Web.ModelBinding.ModelStateDictionary.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.Add(System.String,System.Web.ModelBinding.ModelState)\n  id: Add(System.String,System.Web.ModelBinding.ModelState)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: Add(String,ModelState)\n  nameWithType: ModelStateDictionary.Add(String,ModelState)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Add(String,ModelState)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Adds an item that has the specified key and value to the dictionary.\n  syntax:\n    content: public void Add (string key, System.Web.ModelBinding.ModelState value);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key.\n    - id: value\n      type: System.Web.ModelBinding.ModelState\n      description: The value.\n  overload: System.Web.ModelBinding.ModelStateDictionary.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.Exception)\n  id: AddModelError(System.String,System.Exception)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: AddModelError(String,Exception)\n  nameWithType: ModelStateDictionary.AddModelError(String,Exception)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.AddModelError(String,Exception)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Adds a model error to the errors collection using the specified key and using the specified exception for the value.\n  syntax:\n    content: public void AddModelError (string key, Exception exception);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key.\n    - id: exception\n      type: System.Exception\n      description: The exception object.\n  overload: System.Web.ModelBinding.ModelStateDictionary.AddModelError*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>key</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.String)\n  id: AddModelError(System.String,System.String)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: AddModelError(String,String)\n  nameWithType: ModelStateDictionary.AddModelError(String,String)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.AddModelError(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Adds the specified model error to the errors collection using the specified key and using the specified error message string for the value.\n  syntax:\n    content: public void AddModelError (string key, string errorMessage);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key.\n    - id: errorMessage\n      type: System.String\n      description: The error message.\n  overload: System.Web.ModelBinding.ModelStateDictionary.AddModelError*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>key</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.Clear\n  id: Clear\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: ModelStateDictionary.Clear()\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Clear()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Removes all items from the dictionary.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Web.ModelBinding.ModelStateDictionary.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState})\n  id: Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState})\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: Contains(KeyValuePair<String,ModelState>)\n  nameWithType: ModelStateDictionary.Contains(KeyValuePair<String,ModelState>)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Contains(KeyValuePair<String,ModelState>)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Determines whether the model-state dictionary contains a specific item.\n  syntax:\n    content: public bool Contains (System.Collections.Generic.KeyValuePair<string,System.Web.ModelBinding.ModelState> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState}\n      description: The item to locate in the model-state dictionary.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>item</code> is found in the dictionary; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.ModelBinding.ModelStateDictionary.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.ContainsKey(System.String)\n  id: ContainsKey(System.String)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: ContainsKey(String)\n  nameWithType: ModelStateDictionary.ContainsKey(String)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.ContainsKey(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Determines whether the model-state dictionary contains the specified key.\n  syntax:\n    content: public bool ContainsKey (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary contains the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.ModelBinding.ModelStateDictionary.ContainsKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState}[],System.Int32)\n  id: CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState}[],System.Int32)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: CopyTo(KeyValuePair<String,ModelState>,Int32)\n  nameWithType: ModelStateDictionary.CopyTo(KeyValuePair<String,ModelState>,Int32)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.CopyTo(KeyValuePair<String,ModelState>,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Copies the elements of the dictionary to an array, starting at a specified index.\n  syntax:\n    content: public void CopyTo (System.Collections.Generic.KeyValuePair<string,System.Web.ModelBinding.ModelState>[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState}[]\n      description: The one-dimensional array that is the destination of the elements copied from the dictionary. The array must have zero-based indexing.\n    - id: arrayIndex\n      type: System.Int32\n      description: The zero-based index in `array` at which copying starts.\n  overload: System.Web.ModelBinding.ModelStateDictionary.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.Count\n  id: Count\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ModelStateDictionary.Count\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Count\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Gets the number of key/value pairs in the collection.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of key/value pairs in the collection.\n  overload: System.Web.ModelBinding.ModelStateDictionary.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.GetEnumerator\n  id: GetEnumerator\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: ModelStateDictionary.GetEnumerator()\n  fullName: System.Web.ModelBinding.ModelStateDictionary.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Returns an enumerator that can be used to iterate through the dictionary.\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,System.Web.ModelBinding.ModelState>> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState}}\n      description: An enumerator that can be used to iterate through the collection.\n  overload: System.Web.ModelBinding.ModelStateDictionary.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.IsReadOnly\n  id: IsReadOnly\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: ModelStateDictionary.IsReadOnly\n  fullName: System.Web.ModelBinding.ModelStateDictionary.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Gets a value that indicates whether the dictionary is read-only.\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.ModelBinding.ModelStateDictionary.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.IsValid\n  id: IsValid\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: IsValid\n  nameWithType: ModelStateDictionary.IsValid\n  fullName: System.Web.ModelBinding.ModelStateDictionary.IsValid\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Gets a value that indicates whether there are any errors in any of the model state objects in the dictionary.\n  syntax:\n    content: public bool IsValid { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if any errors were found; otherwise, <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.ModelBinding.ModelStateDictionary.IsValid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.IsValidField(System.String)\n  id: IsValidField(System.String)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: IsValidField(String)\n  nameWithType: ModelStateDictionary.IsValidField(String)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.IsValidField(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Determines whether there are any <xref href=\"System.Web.ModelBinding.ModelError\"></xref> objects that are associated with the specified key or that are prefixed with the specified key.\n  syntax:\n    content: public bool IsValidField (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if any <xref href=\"System.Web.ModelBinding.ModelError\"></xref> objects are associated with the specified key or prefixed with the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. If the key is not found in the dictionary, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.ModelBinding.ModelStateDictionary.IsValidField*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>key</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.Item(System.String)\n  id: Item(System.String)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: ModelStateDictionary.Item(String)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Item(String)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Gets or sets the value that is associated with the specified key.\n  syntax:\n    content: public System.Web.ModelBinding.ModelState this[string key] { get; set; }\n    parameters:\n    - id: key\n      type: System.String\n      description: The key.\n    return:\n      type: System.Web.ModelBinding.ModelState\n      description: The item.\n  overload: System.Web.ModelBinding.ModelStateDictionary.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.Keys\n  id: Keys\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: ModelStateDictionary.Keys\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Keys\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Gets a collection that contains the keys of the dictionary.\n  syntax:\n    content: public System.Collections.Generic.ICollection<string> Keys { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.String}\n      description: The keys of the dictionary.\n  overload: System.Web.ModelBinding.ModelStateDictionary.Keys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.Merge(System.Web.ModelBinding.ModelStateDictionary)\n  id: Merge(System.Web.ModelBinding.ModelStateDictionary)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: Merge(ModelStateDictionary)\n  nameWithType: ModelStateDictionary.Merge(ModelStateDictionary)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Merge(ModelStateDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Copies the values from the specified model-state dictionary object into this dictionary, overwriting existing values if the keys are the same.\n  syntax:\n    content: public void Merge (System.Web.ModelBinding.ModelStateDictionary dictionary);\n    parameters:\n    - id: dictionary\n      type: System.Web.ModelBinding.ModelStateDictionary\n      description: The model-state dictionary to be merged into this one.\n  overload: System.Web.ModelBinding.ModelStateDictionary.Merge*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState})\n  id: Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState})\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: Remove(KeyValuePair<String,ModelState>)\n  nameWithType: ModelStateDictionary.Remove(KeyValuePair<String,ModelState>)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Remove(KeyValuePair<String,ModelState>)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Removes the first occurrence of the specified item from the model-state dictionary.\n  syntax:\n    content: public bool Remove (System.Collections.Generic.KeyValuePair<string,System.Web.ModelBinding.ModelState> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState}\n      description: The item to remove.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the item was successfully removed from the dictionary, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the item was not removed or was not found in the dictionary.\n  overload: System.Web.ModelBinding.ModelStateDictionary.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: ModelStateDictionary.Remove(String)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Remove(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Removes the item that has the specified key from the dictionary.\n  syntax:\n    content: public bool Remove (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key of the item to remove.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the item was successfully removed from the dictionary, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the item was not removed or was not found in the dictionary.\n  overload: System.Web.ModelBinding.ModelStateDictionary.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.SetModelValue(System.String,System.Web.ModelBinding.ValueProviderResult)\n  id: SetModelValue(System.String,System.Web.ModelBinding.ValueProviderResult)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: SetModelValue(String,ValueProviderResult)\n  nameWithType: ModelStateDictionary.SetModelValue(String,ValueProviderResult)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.SetModelValue(String,ValueProviderResult)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Sets the value for the specified key.\n  syntax:\n    content: public void SetModelValue (string key, System.Web.ModelBinding.ValueProviderResult value);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key.\n    - id: value\n      type: System.Web.ModelBinding.ValueProviderResult\n      description: The value.\n  overload: System.Web.ModelBinding.ModelStateDictionary.SetModelValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ModelStateDictionary.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Web.ModelBinding.ModelStateDictionary.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Returns an enumerator that can be used to iterate through the collection.\n  remarks: This is an explicit interface member implementation. It can be used only when the <xref:System.Web.ModelBinding.ModelStateDictionary> instance is cast to an <xref:System.Collections.IEnumerable> interface.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An enumerator that can be used to iterate through the collection.\n  overload: System.Web.ModelBinding.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.TryGetValue(System.String,System.Web.ModelBinding.ModelState@)\n  id: TryGetValue(System.String,System.Web.ModelBinding.ModelState@)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: TryGetValue(String,ModelState)\n  nameWithType: ModelStateDictionary.TryGetValue(String,ModelState)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.TryGetValue(String,ModelState)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Attempts to gets the value that is associated with the specified key.\n  syntax:\n    content: public bool TryGetValue (string key, out System.Web.ModelBinding.ModelState value);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key of the value to get.\n    - id: value\n      type: System.Web.ModelBinding.ModelState\n      description: When this method returns, contains the value that is associated with the specified key, if the key was found; otherwise, contains the default value for the type of this parameter. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary contains an item that has the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.ModelBinding.ModelStateDictionary.TryGetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.ModelBinding.ModelStateDictionary.Values\n  id: Values\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  langs:\n  - csharp\n  name: Values\n  nameWithType: ModelStateDictionary.Values\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Values\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.ModelBinding\n  summary: Gets a collection that contains the values of the dictionary.\n  syntax:\n    content: public System.Collections.Generic.ICollection<System.Web.ModelBinding.ModelState> Values { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.Web.ModelBinding.ModelState}\n      description: The values of the dictionary.\n  overload: System.Web.ModelBinding.ModelStateDictionary.Values*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.ModelBinding.ModelStateDictionary.#ctor\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: ModelStateDictionary()\n  nameWithType: ModelStateDictionary.ModelStateDictionary()\n  fullName: System.Web.ModelBinding.ModelStateDictionary.ModelStateDictionary()\n- uid: System.Web.ModelBinding.ModelStateDictionary.#ctor(System.Web.ModelBinding.ModelStateDictionary)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: ModelStateDictionary(ModelStateDictionary)\n  nameWithType: ModelStateDictionary.ModelStateDictionary(ModelStateDictionary)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.ModelStateDictionary(ModelStateDictionary)\n- uid: System.Web.ModelBinding.ModelStateDictionary\n  parent: System.Web.ModelBinding\n  isExternal: false\n  name: ModelStateDictionary\n  nameWithType: ModelStateDictionary\n  fullName: System.Web.ModelBinding.ModelStateDictionary\n- uid: System.Web.ModelBinding.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState})\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Add(KeyValuePair<String,ModelState>)\n  nameWithType: ModelStateDictionary.Add(KeyValuePair<String,ModelState>)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Add(KeyValuePair<String,ModelState>)\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: KeyValuePair<String,ModelState>\n  nameWithType: KeyValuePair<String,ModelState>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Web.ModelBinding.ModelState>\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.String,System.Web.ModelBinding.ModelState>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Web.ModelBinding.ModelState\n    name: ModelState\n    nameWithType: ModelState\n    fullName: ModelState\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.ModelBinding.ModelStateDictionary.Add(System.String,System.Web.ModelBinding.ModelState)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Add(String,ModelState)\n  nameWithType: ModelStateDictionary.Add(String,ModelState)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Add(String,ModelState)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.ModelBinding.ModelState\n  parent: System.Web.ModelBinding\n  isExternal: false\n  name: ModelState\n  nameWithType: ModelState\n  fullName: System.Web.ModelBinding.ModelState\n- uid: System.Web.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.Exception)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: AddModelError(String,Exception)\n  nameWithType: ModelStateDictionary.AddModelError(String,Exception)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.AddModelError(String,Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Web.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.String)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: AddModelError(String,String)\n  nameWithType: ModelStateDictionary.AddModelError(String,String)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.AddModelError(String,String)\n- uid: System.Web.ModelBinding.ModelStateDictionary.Clear\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Clear()\n  nameWithType: ModelStateDictionary.Clear()\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Clear()\n- uid: System.Web.ModelBinding.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState})\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Contains(KeyValuePair<String,ModelState>)\n  nameWithType: ModelStateDictionary.Contains(KeyValuePair<String,ModelState>)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Contains(KeyValuePair<String,ModelState>)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.ModelBinding.ModelStateDictionary.ContainsKey(System.String)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: ContainsKey(String)\n  nameWithType: ModelStateDictionary.ContainsKey(String)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.ContainsKey(String)\n- uid: System.Web.ModelBinding.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState}[],System.Int32)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: CopyTo(KeyValuePair<String,ModelState>,Int32)\n  nameWithType: ModelStateDictionary.CopyTo(KeyValuePair<String,ModelState>,Int32)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.CopyTo(KeyValuePair<String,ModelState>,Int32)\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState}[]\n  parent: System.Collections.Generic\n  isExternal: true\n  name: KeyValuePair<String,ModelState>\n  nameWithType: KeyValuePair<String,ModelState>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Web.ModelBinding.ModelState>[]\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.String,System.Web.ModelBinding.ModelState>[]\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Web.ModelBinding.ModelState\n    name: ModelState\n    nameWithType: ModelState\n    fullName: ModelState\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.ModelBinding.ModelStateDictionary.Count\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Count\n  nameWithType: ModelStateDictionary.Count\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Count\n- uid: System.Web.ModelBinding.ModelStateDictionary.GetEnumerator\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ModelStateDictionary.GetEnumerator()\n  fullName: System.Web.ModelBinding.ModelStateDictionary.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<KeyValuePair<String,ModelState>>\n  nameWithType: IEnumerator<KeyValuePair<String,ModelState>>\n  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Web.ModelBinding.ModelState>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Web.ModelBinding.ModelState>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.String,System.Web.ModelBinding.ModelState>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Web.ModelBinding.ModelState\n    name: ModelState\n    nameWithType: ModelState\n    fullName: ModelState\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.ModelBinding.ModelStateDictionary.IsReadOnly\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ModelStateDictionary.IsReadOnly\n  fullName: System.Web.ModelBinding.ModelStateDictionary.IsReadOnly\n- uid: System.Web.ModelBinding.ModelStateDictionary.IsValid\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: IsValid\n  nameWithType: ModelStateDictionary.IsValid\n  fullName: System.Web.ModelBinding.ModelStateDictionary.IsValid\n- uid: System.Web.ModelBinding.ModelStateDictionary.IsValidField(System.String)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: IsValidField(String)\n  nameWithType: ModelStateDictionary.IsValidField(String)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.IsValidField(String)\n- uid: System.Web.ModelBinding.ModelStateDictionary.Item(System.String)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Item(String)\n  nameWithType: ModelStateDictionary.Item(String)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Item(String)\n- uid: System.Web.ModelBinding.ModelStateDictionary.Keys\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Keys\n  nameWithType: ModelStateDictionary.Keys\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Keys\n- uid: System.Collections.Generic.ICollection{System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<String>\n  nameWithType: ICollection<String>\n  fullName: System.Collections.Generic.ICollection<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.ModelBinding.ModelStateDictionary.Merge(System.Web.ModelBinding.ModelStateDictionary)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Merge(ModelStateDictionary)\n  nameWithType: ModelStateDictionary.Merge(ModelStateDictionary)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Merge(ModelStateDictionary)\n- uid: System.Web.ModelBinding.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.ModelBinding.ModelState})\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Remove(KeyValuePair<String,ModelState>)\n  nameWithType: ModelStateDictionary.Remove(KeyValuePair<String,ModelState>)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Remove(KeyValuePair<String,ModelState>)\n- uid: System.Web.ModelBinding.ModelStateDictionary.Remove(System.String)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Remove(String)\n  nameWithType: ModelStateDictionary.Remove(String)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Remove(String)\n- uid: System.Web.ModelBinding.ModelStateDictionary.SetModelValue(System.String,System.Web.ModelBinding.ValueProviderResult)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: SetModelValue(String,ValueProviderResult)\n  nameWithType: ModelStateDictionary.SetModelValue(String,ValueProviderResult)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.SetModelValue(String,ValueProviderResult)\n- uid: System.Web.ModelBinding.ValueProviderResult\n  parent: System.Web.ModelBinding\n  isExternal: false\n  name: ValueProviderResult\n  nameWithType: ValueProviderResult\n  fullName: System.Web.ModelBinding.ValueProviderResult\n- uid: System.Web.ModelBinding.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ModelStateDictionary.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Web.ModelBinding.ModelStateDictionary.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Web.ModelBinding.ModelStateDictionary.TryGetValue(System.String,System.Web.ModelBinding.ModelState@)\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: TryGetValue(String,ModelState)\n  nameWithType: ModelStateDictionary.TryGetValue(String,ModelState)\n  fullName: System.Web.ModelBinding.ModelStateDictionary.TryGetValue(String,ModelState)\n- uid: System.Web.ModelBinding.ModelStateDictionary.Values\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Values\n  nameWithType: ModelStateDictionary.Values\n  fullName: System.Web.ModelBinding.ModelStateDictionary.Values\n- uid: System.Collections.Generic.ICollection{System.Web.ModelBinding.ModelState}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<ModelState>\n  nameWithType: ICollection<ModelState>\n  fullName: System.Collections.Generic.ICollection<System.Web.ModelBinding.ModelState>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<System.Web.ModelBinding.ModelState>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.ModelBinding.ModelState\n    name: ModelState\n    nameWithType: ModelState\n    fullName: ModelState\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.ModelBinding.ModelStateDictionary.#ctor*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: ModelStateDictionary\n  nameWithType: ModelStateDictionary.ModelStateDictionary\n- uid: System.Web.ModelBinding.ModelStateDictionary.Add*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Add\n  nameWithType: ModelStateDictionary.Add\n- uid: System.Web.ModelBinding.ModelStateDictionary.AddModelError*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: AddModelError\n  nameWithType: ModelStateDictionary.AddModelError\n- uid: System.Web.ModelBinding.ModelStateDictionary.Clear*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Clear\n  nameWithType: ModelStateDictionary.Clear\n- uid: System.Web.ModelBinding.ModelStateDictionary.Contains*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Contains\n  nameWithType: ModelStateDictionary.Contains\n- uid: System.Web.ModelBinding.ModelStateDictionary.ContainsKey*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: ContainsKey\n  nameWithType: ModelStateDictionary.ContainsKey\n- uid: System.Web.ModelBinding.ModelStateDictionary.CopyTo*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: CopyTo\n  nameWithType: ModelStateDictionary.CopyTo\n- uid: System.Web.ModelBinding.ModelStateDictionary.Count*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Count\n  nameWithType: ModelStateDictionary.Count\n- uid: System.Web.ModelBinding.ModelStateDictionary.GetEnumerator*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: ModelStateDictionary.GetEnumerator\n- uid: System.Web.ModelBinding.ModelStateDictionary.IsReadOnly*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ModelStateDictionary.IsReadOnly\n- uid: System.Web.ModelBinding.ModelStateDictionary.IsValid*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: IsValid\n  nameWithType: ModelStateDictionary.IsValid\n- uid: System.Web.ModelBinding.ModelStateDictionary.IsValidField*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: IsValidField\n  nameWithType: ModelStateDictionary.IsValidField\n- uid: System.Web.ModelBinding.ModelStateDictionary.Item*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Item\n  nameWithType: ModelStateDictionary.Item\n- uid: System.Web.ModelBinding.ModelStateDictionary.Keys*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Keys\n  nameWithType: ModelStateDictionary.Keys\n- uid: System.Web.ModelBinding.ModelStateDictionary.Merge*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Merge\n  nameWithType: ModelStateDictionary.Merge\n- uid: System.Web.ModelBinding.ModelStateDictionary.Remove*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Remove\n  nameWithType: ModelStateDictionary.Remove\n- uid: System.Web.ModelBinding.ModelStateDictionary.SetModelValue*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: SetModelValue\n  nameWithType: ModelStateDictionary.SetModelValue\n- uid: System.Web.ModelBinding.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: ModelStateDictionary.System.Collections.IEnumerable.GetEnumerator\n- uid: System.Web.ModelBinding.ModelStateDictionary.TryGetValue*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: TryGetValue\n  nameWithType: ModelStateDictionary.TryGetValue\n- uid: System.Web.ModelBinding.ModelStateDictionary.Values*\n  parent: System.Web.ModelBinding.ModelStateDictionary\n  isExternal: false\n  name: Values\n  nameWithType: ModelStateDictionary.Values\n"}